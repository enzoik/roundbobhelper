/*! jQuery v1.9.1 | (c) 2005, 2012 jQuery Foundation, Inc. | jquery.org/license
//@ sourceMappingURL=jquery.min.map
*/(function(e,t){var n,r,i=typeof t,o=e.document,a=e.location,s=e.jQuery,u=e.$,l={},c=[],p="1.9.1",f=c.concat,d=c.push,h=c.slice,g=c.indexOf,m=l.toString,y=l.hasOwnProperty,v=p.trim,b=function(e,t){return new b.fn.init(e,t,r)},x=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,w=/\S+/g,T=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,N=/^(?:(<[\w\W]+>)[^>]*|#([\w-]*))$/,C=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,k=/^[\],:{}\s]*$/,E=/(?:^|:|,)(?:\s*\[)+/g,S=/\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,A=/"[^"\\\r\n]*"|true|false|null|-?(?:\d+\.|)\d+(?:[eE][+-]?\d+|)/g,j=/^-ms-/,D=/-([\da-z])/gi,L=function(e,t){return t.toUpperCase()},H=function(e){(o.addEventListener||"load"===e.type||"complete"===o.readyState)&&(q(),b.ready())},q=function(){o.addEventListener?(o.removeEventListener("DOMContentLoaded",H,!1),e.removeEventListener("load",H,!1)):(o.detachEvent("onreadystatechange",H),e.detachEvent("onload",H))};b.fn=b.prototype={jquery:p,constructor:b,init:function(e,n,r){var i,a;if(!e)return this;if("string"==typeof e){if(i="<"===e.charAt(0)&&">"===e.charAt(e.length-1)&&e.length>=3?[null,e,null]:N.exec(e),!i||!i[1]&&n)return!n||n.jquery?(n||r).find(e):this.constructor(n).find(e);if(i[1]){if(n=n instanceof b?n[0]:n,b.merge(this,b.parseHTML(i[1],n&&n.nodeType?n.ownerDocument||n:o,!0)),C.test(i[1])&&b.isPlainObject(n))for(i in n)b.isFunction(this[i])?this[i](n[i]):this.attr(i,n[i]);return this}if(a=o.getElementById(i[2]),a&&a.parentNode){if(a.id!==i[2])return r.find(e);this.length=1,this[0]=a}return this.context=o,this.selector=e,this}return e.nodeType?(this.context=this[0]=e,this.length=1,this):b.isFunction(e)?r.ready(e):(e.selector!==t&&(this.selector=e.selector,this.context=e.context),b.makeArray(e,this))},selector:"",length:0,size:function(){return this.length},toArray:function(){return h.call(this)},get:function(e){return null==e?this.toArray():0>e?this[this.length+e]:this[e]},pushStack:function(e){var t=b.merge(this.constructor(),e);return t.prevObject=this,t.context=this.context,t},each:function(e,t){return b.each(this,e,t)},ready:function(e){return b.ready.promise().done(e),this},slice:function(){return this.pushStack(h.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,n=+e+(0>e?t:0);return this.pushStack(n>=0&&t>n?[this[n]]:[])},map:function(e){return this.pushStack(b.map(this,function(t,n){return e.call(t,n,t)}))},end:function(){return this.prevObject||this.constructor(null)},push:d,sort:[].sort,splice:[].splice},b.fn.init.prototype=b.fn,b.extend=b.fn.extend=function(){var e,n,r,i,o,a,s=arguments[0]||{},u=1,l=arguments.length,c=!1;for("boolean"==typeof s&&(c=s,s=arguments[1]||{},u=2),"object"==typeof s||b.isFunction(s)||(s={}),l===u&&(s=this,--u);l>u;u++)if(null!=(o=arguments[u]))for(i in o)e=s[i],r=o[i],s!==r&&(c&&r&&(b.isPlainObject(r)||(n=b.isArray(r)))?(n?(n=!1,a=e&&b.isArray(e)?e:[]):a=e&&b.isPlainObject(e)?e:{},s[i]=b.extend(c,a,r)):r!==t&&(s[i]=r));return s},b.extend({noConflict:function(t){return e.$===b&&(e.$=u),t&&e.jQuery===b&&(e.jQuery=s),b},isReady:!1,readyWait:1,holdReady:function(e){e?b.readyWait++:b.ready(!0)},ready:function(e){if(e===!0?!--b.readyWait:!b.isReady){if(!o.body)return setTimeout(b.ready);b.isReady=!0,e!==!0&&--b.readyWait>0||(n.resolveWith(o,[b]),b.fn.trigger&&b(o).trigger("ready").off("ready"))}},isFunction:function(e){return"function"===b.type(e)},isArray:Array.isArray||function(e){return"array"===b.type(e)},isWindow:function(e){return null!=e&&e==e.window},isNumeric:function(e){return!isNaN(parseFloat(e))&&isFinite(e)},type:function(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?l[m.call(e)]||"object":typeof e},isPlainObject:function(e){if(!e||"object"!==b.type(e)||e.nodeType||b.isWindow(e))return!1;try{if(e.constructor&&!y.call(e,"constructor")&&!y.call(e.constructor.prototype,"isPrototypeOf"))return!1}catch(n){return!1}var r;for(r in e);return r===t||y.call(e,r)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},error:function(e){throw Error(e)},parseHTML:function(e,t,n){if(!e||"string"!=typeof e)return null;"boolean"==typeof t&&(n=t,t=!1),t=t||o;var r=C.exec(e),i=!n&&[];return r?[t.createElement(r[1])]:(r=b.buildFragment([e],t,i),i&&b(i).remove(),b.merge([],r.childNodes))},parseJSON:function(n){return e.JSON&&e.JSON.parse?e.JSON.parse(n):null===n?n:"string"==typeof n&&(n=b.trim(n),n&&k.test(n.replace(S,"@").replace(A,"]").replace(E,"")))?Function("return "+n)():(b.error("Invalid JSON: "+n),t)},parseXML:function(n){var r,i;if(!n||"string"!=typeof n)return null;try{e.DOMParser?(i=new DOMParser,r=i.parseFromString(n,"text/xml")):(r=new ActiveXObject("Microsoft.XMLDOM"),r.async="false",r.loadXML(n))}catch(o){r=t}return r&&r.documentElement&&!r.getElementsByTagName("parsererror").length||b.error("Invalid XML: "+n),r},noop:function(){},globalEval:function(t){t&&b.trim(t)&&(e.execScript||function(t){e.eval.call(e,t)})(t)},camelCase:function(e){return e.replace(j,"ms-").replace(D,L)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,t,n){var r,i=0,o=e.length,a=M(e);if(n){if(a){for(;o>i;i++)if(r=t.apply(e[i],n),r===!1)break}else for(i in e)if(r=t.apply(e[i],n),r===!1)break}else if(a){for(;o>i;i++)if(r=t.call(e[i],i,e[i]),r===!1)break}else for(i in e)if(r=t.call(e[i],i,e[i]),r===!1)break;return e},trim:v&&!v.call("\ufeff\u00a0")?function(e){return null==e?"":v.call(e)}:function(e){return null==e?"":(e+"").replace(T,"")},makeArray:function(e,t){var n=t||[];return null!=e&&(M(Object(e))?b.merge(n,"string"==typeof e?[e]:e):d.call(n,e)),n},inArray:function(e,t,n){var r;if(t){if(g)return g.call(t,e,n);for(r=t.length,n=n?0>n?Math.max(0,r+n):n:0;r>n;n++)if(n in t&&t[n]===e)return n}return-1},merge:function(e,n){var r=n.length,i=e.length,o=0;if("number"==typeof r)for(;r>o;o++)e[i++]=n[o];else while(n[o]!==t)e[i++]=n[o++];return e.length=i,e},grep:function(e,t,n){var r,i=[],o=0,a=e.length;for(n=!!n;a>o;o++)r=!!t(e[o],o),n!==r&&i.push(e[o]);return i},map:function(e,t,n){var r,i=0,o=e.length,a=M(e),s=[];if(a)for(;o>i;i++)r=t(e[i],i,n),null!=r&&(s[s.length]=r);else for(i in e)r=t(e[i],i,n),null!=r&&(s[s.length]=r);return f.apply([],s)},guid:1,proxy:function(e,n){var r,i,o;return"string"==typeof n&&(o=e[n],n=e,e=o),b.isFunction(e)?(r=h.call(arguments,2),i=function(){return e.apply(n||this,r.concat(h.call(arguments)))},i.guid=e.guid=e.guid||b.guid++,i):t},access:function(e,n,r,i,o,a,s){var u=0,l=e.length,c=null==r;if("object"===b.type(r)){o=!0;for(u in r)b.access(e,n,u,r[u],!0,a,s)}else if(i!==t&&(o=!0,b.isFunction(i)||(s=!0),c&&(s?(n.call(e,i),n=null):(c=n,n=function(e,t,n){return c.call(b(e),n)})),n))for(;l>u;u++)n(e[u],r,s?i:i.call(e[u],u,n(e[u],r)));return o?e:c?n.call(e):l?n(e[0],r):a},now:function(){return(new Date).getTime()}}),b.ready.promise=function(t){if(!n)if(n=b.Deferred(),"complete"===o.readyState)setTimeout(b.ready);else if(o.addEventListener)o.addEventListener("DOMContentLoaded",H,!1),e.addEventListener("load",H,!1);else{o.attachEvent("onreadystatechange",H),e.attachEvent("onload",H);var r=!1;try{r=null==e.frameElement&&o.documentElement}catch(i){}r&&r.doScroll&&function a(){if(!b.isReady){try{r.doScroll("left")}catch(e){return setTimeout(a,50)}q(),b.ready()}}()}return n.promise(t)},b.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(e,t){l["[object "+t+"]"]=t.toLowerCase()});function M(e){var t=e.length,n=b.type(e);return b.isWindow(e)?!1:1===e.nodeType&&t?!0:"array"===n||"function"!==n&&(0===t||"number"==typeof t&&t>0&&t-1 in e)}r=b(o);var _={};function F(e){var t=_[e]={};return b.each(e.match(w)||[],function(e,n){t[n]=!0}),t}b.Callbacks=function(e){e="string"==typeof e?_[e]||F(e):b.extend({},e);var n,r,i,o,a,s,u=[],l=!e.once&&[],c=function(t){for(r=e.memory&&t,i=!0,a=s||0,s=0,o=u.length,n=!0;u&&o>a;a++)if(u[a].apply(t[0],t[1])===!1&&e.stopOnFalse){r=!1;break}n=!1,u&&(l?l.length&&c(l.shift()):r?u=[]:p.disable())},p={add:function(){if(u){var t=u.length;(function i(t){b.each(t,function(t,n){var r=b.type(n);"function"===r?e.unique&&p.has(n)||u.push(n):n&&n.length&&"string"!==r&&i(n)})})(arguments),n?o=u.length:r&&(s=t,c(r))}return this},remove:function(){return u&&b.each(arguments,function(e,t){var r;while((r=b.inArray(t,u,r))>-1)u.splice(r,1),n&&(o>=r&&o--,a>=r&&a--)}),this},has:function(e){return e?b.inArray(e,u)>-1:!(!u||!u.length)},empty:function(){return u=[],this},disable:function(){return u=l=r=t,this},disabled:function(){return!u},lock:function(){return l=t,r||p.disable(),this},locked:function(){return!l},fireWith:function(e,t){return t=t||[],t=[e,t.slice?t.slice():t],!u||i&&!l||(n?l.push(t):c(t)),this},fire:function(){return p.fireWith(this,arguments),this},fired:function(){return!!i}};return p},b.extend({Deferred:function(e){var t=[["resolve","done",b.Callbacks("once memory"),"resolved"],["reject","fail",b.Callbacks("once memory"),"rejected"],["notify","progress",b.Callbacks("memory")]],n="pending",r={state:function(){return n},always:function(){return i.done(arguments).fail(arguments),this},then:function(){var e=arguments;return b.Deferred(function(n){b.each(t,function(t,o){var a=o[0],s=b.isFunction(e[t])&&e[t];i[o[1]](function(){var e=s&&s.apply(this,arguments);e&&b.isFunction(e.promise)?e.promise().done(n.resolve).fail(n.reject).progress(n.notify):n[a+"With"](this===r?n.promise():this,s?[e]:arguments)})}),e=null}).promise()},promise:function(e){return null!=e?b.extend(e,r):r}},i={};return r.pipe=r.then,b.each(t,function(e,o){var a=o[2],s=o[3];r[o[1]]=a.add,s&&a.add(function(){n=s},t[1^e][2].disable,t[2][2].lock),i[o[0]]=function(){return i[o[0]+"With"](this===i?r:this,arguments),this},i[o[0]+"With"]=a.fireWith}),r.promise(i),e&&e.call(i,i),i},when:function(e){var t=0,n=h.call(arguments),r=n.length,i=1!==r||e&&b.isFunction(e.promise)?r:0,o=1===i?e:b.Deferred(),a=function(e,t,n){return function(r){t[e]=this,n[e]=arguments.length>1?h.call(arguments):r,n===s?o.notifyWith(t,n):--i||o.resolveWith(t,n)}},s,u,l;if(r>1)for(s=Array(r),u=Array(r),l=Array(r);r>t;t++)n[t]&&b.isFunction(n[t].promise)?n[t].promise().done(a(t,l,n)).fail(o.reject).progress(a(t,u,s)):--i;return i||o.resolveWith(l,n),o.promise()}}),b.support=function(){var t,n,r,a,s,u,l,c,p,f,d=o.createElement("div");if(d.setAttribute("className","t"),d.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",n=d.getElementsByTagName("*"),r=d.getElementsByTagName("a")[0],!n||!r||!n.length)return{};s=o.createElement("select"),l=s.appendChild(o.createElement("option")),a=d.getElementsByTagName("input")[0],r.style.cssText="top:1px;float:left;opacity:.5",t={getSetAttribute:"t"!==d.className,leadingWhitespace:3===d.firstChild.nodeType,tbody:!d.getElementsByTagName("tbody").length,htmlSerialize:!!d.getElementsByTagName("link").length,style:/top/.test(r.getAttribute("style")),hrefNormalized:"/a"===r.getAttribute("href"),opacity:/^0.5/.test(r.style.opacity),cssFloat:!!r.style.cssFloat,checkOn:!!a.value,optSelected:l.selected,enctype:!!o.createElement("form").enctype,html5Clone:"<:nav></:nav>"!==o.createElement("nav").cloneNode(!0).outerHTML,boxModel:"CSS1Compat"===o.compatMode,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,boxSizingReliable:!0,pixelPosition:!1},a.checked=!0,t.noCloneChecked=a.cloneNode(!0).checked,s.disabled=!0,t.optDisabled=!l.disabled;try{delete d.test}catch(h){t.deleteExpando=!1}a=o.createElement("input"),a.setAttribute("value",""),t.input=""===a.getAttribute("value"),a.value="t",a.setAttribute("type","radio"),t.radioValue="t"===a.value,a.setAttribute("checked","t"),a.setAttribute("name","t"),u=o.createDocumentFragment(),u.appendChild(a),t.appendChecked=a.checked,t.checkClone=u.cloneNode(!0).cloneNode(!0).lastChild.checked,d.attachEvent&&(d.attachEvent("onclick",function(){t.noCloneEvent=!1}),d.cloneNode(!0).click());for(f in{submit:!0,change:!0,focusin:!0})d.setAttribute(c="on"+f,"t"),t[f+"Bubbles"]=c in e||d.attributes[c].expando===!1;return d.style.backgroundClip="content-box",d.cloneNode(!0).style.backgroundClip="",t.clearCloneStyle="content-box"===d.style.backgroundClip,b(function(){var n,r,a,s="padding:0;margin:0;border:0;display:block;box-sizing:content-box;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;",u=o.getElementsByTagName("body")[0];u&&(n=o.createElement("div"),n.style.cssText="border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px",u.appendChild(n).appendChild(d),d.innerHTML="<table><tr><td></td><td>t</td></tr></table>",a=d.getElementsByTagName("td"),a[0].style.cssText="padding:0;margin:0;border:0;display:none",p=0===a[0].offsetHeight,a[0].style.display="",a[1].style.display="none",t.reliableHiddenOffsets=p&&0===a[0].offsetHeight,d.innerHTML="",d.style.cssText="box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;",t.boxSizing=4===d.offsetWidth,t.doesNotIncludeMarginInBodyOffset=1!==u.offsetTop,e.getComputedStyle&&(t.pixelPosition="1%"!==(e.getComputedStyle(d,null)||{}).top,t.boxSizingReliable="4px"===(e.getComputedStyle(d,null)||{width:"4px"}).width,r=d.appendChild(o.createElement("div")),r.style.cssText=d.style.cssText=s,r.style.marginRight=r.style.width="0",d.style.width="1px",t.reliableMarginRight=!parseFloat((e.getComputedStyle(r,null)||{}).marginRight)),typeof d.style.zoom!==i&&(d.innerHTML="",d.style.cssText=s+"width:1px;padding:1px;display:inline;zoom:1",t.inlineBlockNeedsLayout=3===d.offsetWidth,d.style.display="block",d.innerHTML="<div></div>",d.firstChild.style.width="5px",t.shrinkWrapBlocks=3!==d.offsetWidth,t.inlineBlockNeedsLayout&&(u.style.zoom=1)),u.removeChild(n),n=d=a=r=null)}),n=s=u=l=r=a=null,t}();var O=/(?:\{[\s\S]*\}|\[[\s\S]*\])$/,B=/([A-Z])/g;function P(e,n,r,i){if(b.acceptData(e)){var o,a,s=b.expando,u="string"==typeof n,l=e.nodeType,p=l?b.cache:e,f=l?e[s]:e[s]&&s;if(f&&p[f]&&(i||p[f].data)||!u||r!==t)return f||(l?e[s]=f=c.pop()||b.guid++:f=s),p[f]||(p[f]={},l||(p[f].toJSON=b.noop)),("object"==typeof n||"function"==typeof n)&&(i?p[f]=b.extend(p[f],n):p[f].data=b.extend(p[f].data,n)),o=p[f],i||(o.data||(o.data={}),o=o.data),r!==t&&(o[b.camelCase(n)]=r),u?(a=o[n],null==a&&(a=o[b.camelCase(n)])):a=o,a}}function R(e,t,n){if(b.acceptData(e)){var r,i,o,a=e.nodeType,s=a?b.cache:e,u=a?e[b.expando]:b.expando;if(s[u]){if(t&&(o=n?s[u]:s[u].data)){b.isArray(t)?t=t.concat(b.map(t,b.camelCase)):t in o?t=[t]:(t=b.camelCase(t),t=t in o?[t]:t.split(" "));for(r=0,i=t.length;i>r;r++)delete o[t[r]];if(!(n?$:b.isEmptyObject)(o))return}(n||(delete s[u].data,$(s[u])))&&(a?b.cleanData([e],!0):b.support.deleteExpando||s!=s.window?delete s[u]:s[u]=null)}}}b.extend({cache:{},expando:"jQuery"+(p+Math.random()).replace(/\D/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(e){return e=e.nodeType?b.cache[e[b.expando]]:e[b.expando],!!e&&!$(e)},data:function(e,t,n){return P(e,t,n)},removeData:function(e,t){return R(e,t)},_data:function(e,t,n){return P(e,t,n,!0)},_removeData:function(e,t){return R(e,t,!0)},acceptData:function(e){if(e.nodeType&&1!==e.nodeType&&9!==e.nodeType)return!1;var t=e.nodeName&&b.noData[e.nodeName.toLowerCase()];return!t||t!==!0&&e.getAttribute("classid")===t}}),b.fn.extend({data:function(e,n){var r,i,o=this[0],a=0,s=null;if(e===t){if(this.length&&(s=b.data(o),1===o.nodeType&&!b._data(o,"parsedAttrs"))){for(r=o.attributes;r.length>a;a++)i=r[a].name,i.indexOf("data-")||(i=b.camelCase(i.slice(5)),W(o,i,s[i]));b._data(o,"parsedAttrs",!0)}return s}return"object"==typeof e?this.each(function(){b.data(this,e)}):b.access(this,function(n){return n===t?o?W(o,e,b.data(o,e)):null:(this.each(function(){b.data(this,e,n)}),t)},null,n,arguments.length>1,null,!0)},removeData:function(e){return this.each(function(){b.removeData(this,e)})}});function W(e,n,r){if(r===t&&1===e.nodeType){var i="data-"+n.replace(B,"-$1").toLowerCase();if(r=e.getAttribute(i),"string"==typeof r){try{r="true"===r?!0:"false"===r?!1:"null"===r?null:+r+""===r?+r:O.test(r)?b.parseJSON(r):r}catch(o){}b.data(e,n,r)}else r=t}return r}function $(e){var t;for(t in e)if(("data"!==t||!b.isEmptyObject(e[t]))&&"toJSON"!==t)return!1;return!0}b.extend({queue:function(e,n,r){var i;return e?(n=(n||"fx")+"queue",i=b._data(e,n),r&&(!i||b.isArray(r)?i=b._data(e,n,b.makeArray(r)):i.push(r)),i||[]):t},dequeue:function(e,t){t=t||"fx";var n=b.queue(e,t),r=n.length,i=n.shift(),o=b._queueHooks(e,t),a=function(){b.dequeue(e,t)};"inprogress"===i&&(i=n.shift(),r--),o.cur=i,i&&("fx"===t&&n.unshift("inprogress"),delete o.stop,i.call(e,a,o)),!r&&o&&o.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return b._data(e,n)||b._data(e,n,{empty:b.Callbacks("once memory").add(function(){b._removeData(e,t+"queue"),b._removeData(e,n)})})}}),b.fn.extend({queue:function(e,n){var r=2;return"string"!=typeof e&&(n=e,e="fx",r--),r>arguments.length?b.queue(this[0],e):n===t?this:this.each(function(){var t=b.queue(this,e,n);b._queueHooks(this,e),"fx"===e&&"inprogress"!==t[0]&&b.dequeue(this,e)})},dequeue:function(e){return this.each(function(){b.dequeue(this,e)})},delay:function(e,t){return e=b.fx?b.fx.speeds[e]||e:e,t=t||"fx",this.queue(t,function(t,n){var r=setTimeout(t,e);n.stop=function(){clearTimeout(r)}})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,n){var r,i=1,o=b.Deferred(),a=this,s=this.length,u=function(){--i||o.resolveWith(a,[a])};"string"!=typeof e&&(n=e,e=t),e=e||"fx";while(s--)r=b._data(a[s],e+"queueHooks"),r&&r.empty&&(i++,r.empty.add(u));return u(),o.promise(n)}});var I,z,X=/[\t\r\n]/g,U=/\r/g,V=/^(?:input|select|textarea|button|object)$/i,Y=/^(?:a|area)$/i,J=/^(?:checked|selected|autofocus|autoplay|async|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped)$/i,G=/^(?:checked|selected)$/i,Q=b.support.getSetAttribute,K=b.support.input;b.fn.extend({attr:function(e,t){return b.access(this,b.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each(function(){b.removeAttr(this,e)})},prop:function(e,t){return b.access(this,b.prop,e,t,arguments.length>1)},removeProp:function(e){return e=b.propFix[e]||e,this.each(function(){try{this[e]=t,delete this[e]}catch(n){}})},addClass:function(e){var t,n,r,i,o,a=0,s=this.length,u="string"==typeof e&&e;if(b.isFunction(e))return this.each(function(t){b(this).addClass(e.call(this,t,this.className))});if(u)for(t=(e||"").match(w)||[];s>a;a++)if(n=this[a],r=1===n.nodeType&&(n.className?(" "+n.className+" ").replace(X," "):" ")){o=0;while(i=t[o++])0>r.indexOf(" "+i+" ")&&(r+=i+" ");n.className=b.trim(r)}return this},removeClass:function(e){var t,n,r,i,o,a=0,s=this.length,u=0===arguments.length||"string"==typeof e&&e;if(b.isFunction(e))return this.each(function(t){b(this).removeClass(e.call(this,t,this.className))});if(u)for(t=(e||"").match(w)||[];s>a;a++)if(n=this[a],r=1===n.nodeType&&(n.className?(" "+n.className+" ").replace(X," "):"")){o=0;while(i=t[o++])while(r.indexOf(" "+i+" ")>=0)r=r.replace(" "+i+" "," ");n.className=e?b.trim(r):""}return this},toggleClass:function(e,t){var n=typeof e,r="boolean"==typeof t;return b.isFunction(e)?this.each(function(n){b(this).toggleClass(e.call(this,n,this.className,t),t)}):this.each(function(){if("string"===n){var o,a=0,s=b(this),u=t,l=e.match(w)||[];while(o=l[a++])u=r?u:!s.hasClass(o),s[u?"addClass":"removeClass"](o)}else(n===i||"boolean"===n)&&(this.className&&b._data(this,"__className__",this.className),this.className=this.className||e===!1?"":b._data(this,"__className__")||"")})},hasClass:function(e){var t=" "+e+" ",n=0,r=this.length;for(;r>n;n++)if(1===this[n].nodeType&&(" "+this[n].className+" ").replace(X," ").indexOf(t)>=0)return!0;return!1},val:function(e){var n,r,i,o=this[0];{if(arguments.length)return i=b.isFunction(e),this.each(function(n){var o,a=b(this);1===this.nodeType&&(o=i?e.call(this,n,a.val()):e,null==o?o="":"number"==typeof o?o+="":b.isArray(o)&&(o=b.map(o,function(e){return null==e?"":e+""})),r=b.valHooks[this.type]||b.valHooks[this.nodeName.toLowerCase()],r&&"set"in r&&r.set(this,o,"value")!==t||(this.value=o))});if(o)return r=b.valHooks[o.type]||b.valHooks[o.nodeName.toLowerCase()],r&&"get"in r&&(n=r.get(o,"value"))!==t?n:(n=o.value,"string"==typeof n?n.replace(U,""):null==n?"":n)}}}),b.extend({valHooks:{option:{get:function(e){var t=e.attributes.value;return!t||t.specified?e.value:e.text}},select:{get:function(e){var t,n,r=e.options,i=e.selectedIndex,o="select-one"===e.type||0>i,a=o?null:[],s=o?i+1:r.length,u=0>i?s:o?i:0;for(;s>u;u++)if(n=r[u],!(!n.selected&&u!==i||(b.support.optDisabled?n.disabled:null!==n.getAttribute("disabled"))||n.parentNode.disabled&&b.nodeName(n.parentNode,"optgroup"))){if(t=b(n).val(),o)return t;a.push(t)}return a},set:function(e,t){var n=b.makeArray(t);return b(e).find("option").each(function(){this.selected=b.inArray(b(this).val(),n)>=0}),n.length||(e.selectedIndex=-1),n}}},attr:function(e,n,r){var o,a,s,u=e.nodeType;if(e&&3!==u&&8!==u&&2!==u)return typeof e.getAttribute===i?b.prop(e,n,r):(a=1!==u||!b.isXMLDoc(e),a&&(n=n.toLowerCase(),o=b.attrHooks[n]||(J.test(n)?z:I)),r===t?o&&a&&"get"in o&&null!==(s=o.get(e,n))?s:(typeof e.getAttribute!==i&&(s=e.getAttribute(n)),null==s?t:s):null!==r?o&&a&&"set"in o&&(s=o.set(e,r,n))!==t?s:(e.setAttribute(n,r+""),r):(b.removeAttr(e,n),t))},removeAttr:function(e,t){var n,r,i=0,o=t&&t.match(w);if(o&&1===e.nodeType)while(n=o[i++])r=b.propFix[n]||n,J.test(n)?!Q&&G.test(n)?e[b.camelCase("default-"+n)]=e[r]=!1:e[r]=!1:b.attr(e,n,""),e.removeAttribute(Q?n:r)},attrHooks:{type:{set:function(e,t){if(!b.support.radioValue&&"radio"===t&&b.nodeName(e,"input")){var n=e.value;return e.setAttribute("type",t),n&&(e.value=n),t}}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(e,n,r){var i,o,a,s=e.nodeType;if(e&&3!==s&&8!==s&&2!==s)return a=1!==s||!b.isXMLDoc(e),a&&(n=b.propFix[n]||n,o=b.propHooks[n]),r!==t?o&&"set"in o&&(i=o.set(e,r,n))!==t?i:e[n]=r:o&&"get"in o&&null!==(i=o.get(e,n))?i:e[n]},propHooks:{tabIndex:{get:function(e){var n=e.getAttributeNode("tabindex");return n&&n.specified?parseInt(n.value,10):V.test(e.nodeName)||Y.test(e.nodeName)&&e.href?0:t}}}}),z={get:function(e,n){var r=b.prop(e,n),i="boolean"==typeof r&&e.getAttribute(n),o="boolean"==typeof r?K&&Q?null!=i:G.test(n)?e[b.camelCase("default-"+n)]:!!i:e.getAttributeNode(n);return o&&o.value!==!1?n.toLowerCase():t},set:function(e,t,n){return t===!1?b.removeAttr(e,n):K&&Q||!G.test(n)?e.setAttribute(!Q&&b.propFix[n]||n,n):e[b.camelCase("default-"+n)]=e[n]=!0,n}},K&&Q||(b.attrHooks.value={get:function(e,n){var r=e.getAttributeNode(n);return b.nodeName(e,"input")?e.defaultValue:r&&r.specified?r.value:t},set:function(e,n,r){return b.nodeName(e,"input")?(e.defaultValue=n,t):I&&I.set(e,n,r)}}),Q||(I=b.valHooks.button={get:function(e,n){var r=e.getAttributeNode(n);return r&&("id"===n||"name"===n||"coords"===n?""!==r.value:r.specified)?r.value:t},set:function(e,n,r){var i=e.getAttributeNode(r);return i||e.setAttributeNode(i=e.ownerDocument.createAttribute(r)),i.value=n+="","value"===r||n===e.getAttribute(r)?n:t}},b.attrHooks.contenteditable={get:I.get,set:function(e,t,n){I.set(e,""===t?!1:t,n)}},b.each(["width","height"],function(e,n){b.attrHooks[n]=b.extend(b.attrHooks[n],{set:function(e,r){return""===r?(e.setAttribute(n,"auto"),r):t}})})),b.support.hrefNormalized||(b.each(["href","src","width","height"],function(e,n){b.attrHooks[n]=b.extend(b.attrHooks[n],{get:function(e){var r=e.getAttribute(n,2);return null==r?t:r}})}),b.each(["href","src"],function(e,t){b.propHooks[t]={get:function(e){return e.getAttribute(t,4)}}})),b.support.style||(b.attrHooks.style={get:function(e){return e.style.cssText||t},set:function(e,t){return e.style.cssText=t+""}}),b.support.optSelected||(b.propHooks.selected=b.extend(b.propHooks.selected,{get:function(e){var t=e.parentNode;return t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex),null}})),b.support.enctype||(b.propFix.enctype="encoding"),b.support.checkOn||b.each(["radio","checkbox"],function(){b.valHooks[this]={get:function(e){return null===e.getAttribute("value")?"on":e.value}}}),b.each(["radio","checkbox"],function(){b.valHooks[this]=b.extend(b.valHooks[this],{set:function(e,n){return b.isArray(n)?e.checked=b.inArray(b(e).val(),n)>=0:t}})});var Z=/^(?:input|select|textarea)$/i,et=/^key/,tt=/^(?:mouse|contextmenu)|click/,nt=/^(?:focusinfocus|focusoutblur)$/,rt=/^([^.]*)(?:\.(.+)|)$/;function it(){return!0}function ot(){return!1}b.event={global:{},add:function(e,n,r,o,a){var s,u,l,c,p,f,d,h,g,m,y,v=b._data(e);if(v){r.handler&&(c=r,r=c.handler,a=c.selector),r.guid||(r.guid=b.guid++),(u=v.events)||(u=v.events={}),(f=v.handle)||(f=v.handle=function(e){return typeof b===i||e&&b.event.triggered===e.type?t:b.event.dispatch.apply(f.elem,arguments)},f.elem=e),n=(n||"").match(w)||[""],l=n.length;while(l--)s=rt.exec(n[l])||[],g=y=s[1],m=(s[2]||"").split(".").sort(),p=b.event.special[g]||{},g=(a?p.delegateType:p.bindType)||g,p=b.event.special[g]||{},d=b.extend({type:g,origType:y,data:o,handler:r,guid:r.guid,selector:a,needsContext:a&&b.expr.match.needsContext.test(a),namespace:m.join(".")},c),(h=u[g])||(h=u[g]=[],h.delegateCount=0,p.setup&&p.setup.call(e,o,m,f)!==!1||(e.addEventListener?e.addEventListener(g,f,!1):e.attachEvent&&e.attachEvent("on"+g,f))),p.add&&(p.add.call(e,d),d.handler.guid||(d.handler.guid=r.guid)),a?h.splice(h.delegateCount++,0,d):h.push(d),b.event.global[g]=!0;e=null}},remove:function(e,t,n,r,i){var o,a,s,u,l,c,p,f,d,h,g,m=b.hasData(e)&&b._data(e);if(m&&(c=m.events)){t=(t||"").match(w)||[""],l=t.length;while(l--)if(s=rt.exec(t[l])||[],d=g=s[1],h=(s[2]||"").split(".").sort(),d){p=b.event.special[d]||{},d=(r?p.delegateType:p.bindType)||d,f=c[d]||[],s=s[2]&&RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"),u=o=f.length;while(o--)a=f[o],!i&&g!==a.origType||n&&n.guid!==a.guid||s&&!s.test(a.namespace)||r&&r!==a.selector&&("**"!==r||!a.selector)||(f.splice(o,1),a.selector&&f.delegateCount--,p.remove&&p.remove.call(e,a));u&&!f.length&&(p.teardown&&p.teardown.call(e,h,m.handle)!==!1||b.removeEvent(e,d,m.handle),delete c[d])}else for(d in c)b.event.remove(e,d+t[l],n,r,!0);b.isEmptyObject(c)&&(delete m.handle,b._removeData(e,"events"))}},trigger:function(n,r,i,a){var s,u,l,c,p,f,d,h=[i||o],g=y.call(n,"type")?n.type:n,m=y.call(n,"namespace")?n.namespace.split("."):[];if(l=f=i=i||o,3!==i.nodeType&&8!==i.nodeType&&!nt.test(g+b.event.triggered)&&(g.indexOf(".")>=0&&(m=g.split("."),g=m.shift(),m.sort()),u=0>g.indexOf(":")&&"on"+g,n=n[b.expando]?n:new b.Event(g,"object"==typeof n&&n),n.isTrigger=!0,n.namespace=m.join("."),n.namespace_re=n.namespace?RegExp("(^|\\.)"+m.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,n.result=t,n.target||(n.target=i),r=null==r?[n]:b.makeArray(r,[n]),p=b.event.special[g]||{},a||!p.trigger||p.trigger.apply(i,r)!==!1)){if(!a&&!p.noBubble&&!b.isWindow(i)){for(c=p.delegateType||g,nt.test(c+g)||(l=l.parentNode);l;l=l.parentNode)h.push(l),f=l;f===(i.ownerDocument||o)&&h.push(f.defaultView||f.parentWindow||e)}d=0;while((l=h[d++])&&!n.isPropagationStopped())n.type=d>1?c:p.bindType||g,s=(b._data(l,"events")||{})[n.type]&&b._data(l,"handle"),s&&s.apply(l,r),s=u&&l[u],s&&b.acceptData(l)&&s.apply&&s.apply(l,r)===!1&&n.preventDefault();if(n.type=g,!(a||n.isDefaultPrevented()||p._default&&p._default.apply(i.ownerDocument,r)!==!1||"click"===g&&b.nodeName(i,"a")||!b.acceptData(i)||!u||!i[g]||b.isWindow(i))){f=i[u],f&&(i[u]=null),b.event.triggered=g;try{i[g]()}catch(v){}b.event.triggered=t,f&&(i[u]=f)}return n.result}},dispatch:function(e){e=b.event.fix(e);var n,r,i,o,a,s=[],u=h.call(arguments),l=(b._data(this,"events")||{})[e.type]||[],c=b.event.special[e.type]||{};if(u[0]=e,e.delegateTarget=this,!c.preDispatch||c.preDispatch.call(this,e)!==!1){s=b.event.handlers.call(this,e,l),n=0;while((o=s[n++])&&!e.isPropagationStopped()){e.currentTarget=o.elem,a=0;while((i=o.handlers[a++])&&!e.isImmediatePropagationStopped())(!e.namespace_re||e.namespace_re.test(i.namespace))&&(e.handleObj=i,e.data=i.data,r=((b.event.special[i.origType]||{}).handle||i.handler).apply(o.elem,u),r!==t&&(e.result=r)===!1&&(e.preventDefault(),e.stopPropagation()))}return c.postDispatch&&c.postDispatch.call(this,e),e.result}},handlers:function(e,n){var r,i,o,a,s=[],u=n.delegateCount,l=e.target;if(u&&l.nodeType&&(!e.button||"click"!==e.type))for(;l!=this;l=l.parentNode||this)if(1===l.nodeType&&(l.disabled!==!0||"click"!==e.type)){for(o=[],a=0;u>a;a++)i=n[a],r=i.selector+" ",o[r]===t&&(o[r]=i.needsContext?b(r,this).index(l)>=0:b.find(r,this,null,[l]).length),o[r]&&o.push(i);o.length&&s.push({elem:l,handlers:o})}return n.length>u&&s.push({elem:this,handlers:n.slice(u)}),s},fix:function(e){if(e[b.expando])return e;var t,n,r,i=e.type,a=e,s=this.fixHooks[i];s||(this.fixHooks[i]=s=tt.test(i)?this.mouseHooks:et.test(i)?this.keyHooks:{}),r=s.props?this.props.concat(s.props):this.props,e=new b.Event(a),t=r.length;while(t--)n=r[t],e[n]=a[n];return e.target||(e.target=a.srcElement||o),3===e.target.nodeType&&(e.target=e.target.parentNode),e.metaKey=!!e.metaKey,s.filter?s.filter(e,a):e},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(e,t){return null==e.which&&(e.which=null!=t.charCode?t.charCode:t.keyCode),e}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(e,n){var r,i,a,s=n.button,u=n.fromElement;return null==e.pageX&&null!=n.clientX&&(i=e.target.ownerDocument||o,a=i.documentElement,r=i.body,e.pageX=n.clientX+(a&&a.scrollLeft||r&&r.scrollLeft||0)-(a&&a.clientLeft||r&&r.clientLeft||0),e.pageY=n.clientY+(a&&a.scrollTop||r&&r.scrollTop||0)-(a&&a.clientTop||r&&r.clientTop||0)),!e.relatedTarget&&u&&(e.relatedTarget=u===e.target?n.toElement:u),e.which||s===t||(e.which=1&s?1:2&s?3:4&s?2:0),e}},special:{load:{noBubble:!0},click:{trigger:function(){return b.nodeName(this,"input")&&"checkbox"===this.type&&this.click?(this.click(),!1):t}},focus:{trigger:function(){if(this!==o.activeElement&&this.focus)try{return this.focus(),!1}catch(e){}},delegateType:"focusin"},blur:{trigger:function(){return this===o.activeElement&&this.blur?(this.blur(),!1):t},delegateType:"focusout"},beforeunload:{postDispatch:function(e){e.result!==t&&(e.originalEvent.returnValue=e.result)}}},simulate:function(e,t,n,r){var i=b.extend(new b.Event,n,{type:e,isSimulated:!0,originalEvent:{}});r?b.event.trigger(i,null,t):b.event.dispatch.call(t,i),i.isDefaultPrevented()&&n.preventDefault()}},b.removeEvent=o.removeEventListener?function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n,!1)}:function(e,t,n){var r="on"+t;e.detachEvent&&(typeof e[r]===i&&(e[r]=null),e.detachEvent(r,n))},b.Event=function(e,n){return this instanceof b.Event?(e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||e.returnValue===!1||e.getPreventDefault&&e.getPreventDefault()?it:ot):this.type=e,n&&b.extend(this,n),this.timeStamp=e&&e.timeStamp||b.now(),this[b.expando]=!0,t):new b.Event(e,n)},b.Event.prototype={isDefaultPrevented:ot,isPropagationStopped:ot,isImmediatePropagationStopped:ot,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=it,e&&(e.preventDefault?e.preventDefault():e.returnValue=!1)},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=it,e&&(e.stopPropagation&&e.stopPropagation(),e.cancelBubble=!0)},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=it,this.stopPropagation()}},b.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(e,t){b.event.special[e]={delegateType:t,bindType:t,handle:function(e){var n,r=this,i=e.relatedTarget,o=e.handleObj;
return(!i||i!==r&&!b.contains(r,i))&&(e.type=o.origType,n=o.handler.apply(this,arguments),e.type=t),n}}}),b.support.submitBubbles||(b.event.special.submit={setup:function(){return b.nodeName(this,"form")?!1:(b.event.add(this,"click._submit keypress._submit",function(e){var n=e.target,r=b.nodeName(n,"input")||b.nodeName(n,"button")?n.form:t;r&&!b._data(r,"submitBubbles")&&(b.event.add(r,"submit._submit",function(e){e._submit_bubble=!0}),b._data(r,"submitBubbles",!0))}),t)},postDispatch:function(e){e._submit_bubble&&(delete e._submit_bubble,this.parentNode&&!e.isTrigger&&b.event.simulate("submit",this.parentNode,e,!0))},teardown:function(){return b.nodeName(this,"form")?!1:(b.event.remove(this,"._submit"),t)}}),b.support.changeBubbles||(b.event.special.change={setup:function(){return Z.test(this.nodeName)?(("checkbox"===this.type||"radio"===this.type)&&(b.event.add(this,"propertychange._change",function(e){"checked"===e.originalEvent.propertyName&&(this._just_changed=!0)}),b.event.add(this,"click._change",function(e){this._just_changed&&!e.isTrigger&&(this._just_changed=!1),b.event.simulate("change",this,e,!0)})),!1):(b.event.add(this,"beforeactivate._change",function(e){var t=e.target;Z.test(t.nodeName)&&!b._data(t,"changeBubbles")&&(b.event.add(t,"change._change",function(e){!this.parentNode||e.isSimulated||e.isTrigger||b.event.simulate("change",this.parentNode,e,!0)}),b._data(t,"changeBubbles",!0))}),t)},handle:function(e){var n=e.target;return this!==n||e.isSimulated||e.isTrigger||"radio"!==n.type&&"checkbox"!==n.type?e.handleObj.handler.apply(this,arguments):t},teardown:function(){return b.event.remove(this,"._change"),!Z.test(this.nodeName)}}),b.support.focusinBubbles||b.each({focus:"focusin",blur:"focusout"},function(e,t){var n=0,r=function(e){b.event.simulate(t,e.target,b.event.fix(e),!0)};b.event.special[t]={setup:function(){0===n++&&o.addEventListener(e,r,!0)},teardown:function(){0===--n&&o.removeEventListener(e,r,!0)}}}),b.fn.extend({on:function(e,n,r,i,o){var a,s;if("object"==typeof e){"string"!=typeof n&&(r=r||n,n=t);for(a in e)this.on(a,n,r,e[a],o);return this}if(null==r&&null==i?(i=n,r=n=t):null==i&&("string"==typeof n?(i=r,r=t):(i=r,r=n,n=t)),i===!1)i=ot;else if(!i)return this;return 1===o&&(s=i,i=function(e){return b().off(e),s.apply(this,arguments)},i.guid=s.guid||(s.guid=b.guid++)),this.each(function(){b.event.add(this,e,i,r,n)})},one:function(e,t,n,r){return this.on(e,t,n,r,1)},off:function(e,n,r){var i,o;if(e&&e.preventDefault&&e.handleObj)return i=e.handleObj,b(e.delegateTarget).off(i.namespace?i.origType+"."+i.namespace:i.origType,i.selector,i.handler),this;if("object"==typeof e){for(o in e)this.off(o,n,e[o]);return this}return(n===!1||"function"==typeof n)&&(r=n,n=t),r===!1&&(r=ot),this.each(function(){b.event.remove(this,e,r,n)})},bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,r){return this.on(t,e,n,r)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",n)},trigger:function(e,t){return this.each(function(){b.event.trigger(e,t,this)})},triggerHandler:function(e,n){var r=this[0];return r?b.event.trigger(e,n,r,!0):t}}),function(e,t){var n,r,i,o,a,s,u,l,c,p,f,d,h,g,m,y,v,x="sizzle"+-new Date,w=e.document,T={},N=0,C=0,k=it(),E=it(),S=it(),A=typeof t,j=1<<31,D=[],L=D.pop,H=D.push,q=D.slice,M=D.indexOf||function(e){var t=0,n=this.length;for(;n>t;t++)if(this[t]===e)return t;return-1},_="[\\x20\\t\\r\\n\\f]",F="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",O=F.replace("w","w#"),B="([*^$|!~]?=)",P="\\["+_+"*("+F+")"+_+"*(?:"+B+_+"*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|("+O+")|)|)"+_+"*\\]",R=":("+F+")(?:\\(((['\"])((?:\\\\.|[^\\\\])*?)\\3|((?:\\\\.|[^\\\\()[\\]]|"+P.replace(3,8)+")*)|.*)\\)|)",W=RegExp("^"+_+"+|((?:^|[^\\\\])(?:\\\\.)*)"+_+"+$","g"),$=RegExp("^"+_+"*,"+_+"*"),I=RegExp("^"+_+"*([\\x20\\t\\r\\n\\f>+~])"+_+"*"),z=RegExp(R),X=RegExp("^"+O+"$"),U={ID:RegExp("^#("+F+")"),CLASS:RegExp("^\\.("+F+")"),NAME:RegExp("^\\[name=['\"]?("+F+")['\"]?\\]"),TAG:RegExp("^("+F.replace("w","w*")+")"),ATTR:RegExp("^"+P),PSEUDO:RegExp("^"+R),CHILD:RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+_+"*(even|odd|(([+-]|)(\\d*)n|)"+_+"*(?:([+-]|)"+_+"*(\\d+)|))"+_+"*\\)|)","i"),needsContext:RegExp("^"+_+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+_+"*((?:-\\d)?\\d*)"+_+"*\\)|)(?=[^-]|$)","i")},V=/[\x20\t\r\n\f]*[+~]/,Y=/^[^{]+\{\s*\[native code/,J=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,G=/^(?:input|select|textarea|button)$/i,Q=/^h\d$/i,K=/'|\\/g,Z=/\=[\x20\t\r\n\f]*([^'"\]]*)[\x20\t\r\n\f]*\]/g,et=/\\([\da-fA-F]{1,6}[\x20\t\r\n\f]?|.)/g,tt=function(e,t){var n="0x"+t-65536;return n!==n?t:0>n?String.fromCharCode(n+65536):String.fromCharCode(55296|n>>10,56320|1023&n)};try{q.call(w.documentElement.childNodes,0)[0].nodeType}catch(nt){q=function(e){var t,n=[];while(t=this[e++])n.push(t);return n}}function rt(e){return Y.test(e+"")}function it(){var e,t=[];return e=function(n,r){return t.push(n+=" ")>i.cacheLength&&delete e[t.shift()],e[n]=r}}function ot(e){return e[x]=!0,e}function at(e){var t=p.createElement("div");try{return e(t)}catch(n){return!1}finally{t=null}}function st(e,t,n,r){var i,o,a,s,u,l,f,g,m,v;if((t?t.ownerDocument||t:w)!==p&&c(t),t=t||p,n=n||[],!e||"string"!=typeof e)return n;if(1!==(s=t.nodeType)&&9!==s)return[];if(!d&&!r){if(i=J.exec(e))if(a=i[1]){if(9===s){if(o=t.getElementById(a),!o||!o.parentNode)return n;if(o.id===a)return n.push(o),n}else if(t.ownerDocument&&(o=t.ownerDocument.getElementById(a))&&y(t,o)&&o.id===a)return n.push(o),n}else{if(i[2])return H.apply(n,q.call(t.getElementsByTagName(e),0)),n;if((a=i[3])&&T.getByClassName&&t.getElementsByClassName)return H.apply(n,q.call(t.getElementsByClassName(a),0)),n}if(T.qsa&&!h.test(e)){if(f=!0,g=x,m=t,v=9===s&&e,1===s&&"object"!==t.nodeName.toLowerCase()){l=ft(e),(f=t.getAttribute("id"))?g=f.replace(K,"\\$&"):t.setAttribute("id",g),g="[id='"+g+"'] ",u=l.length;while(u--)l[u]=g+dt(l[u]);m=V.test(e)&&t.parentNode||t,v=l.join(",")}if(v)try{return H.apply(n,q.call(m.querySelectorAll(v),0)),n}catch(b){}finally{f||t.removeAttribute("id")}}}return wt(e.replace(W,"$1"),t,n,r)}a=st.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return t?"HTML"!==t.nodeName:!1},c=st.setDocument=function(e){var n=e?e.ownerDocument||e:w;return n!==p&&9===n.nodeType&&n.documentElement?(p=n,f=n.documentElement,d=a(n),T.tagNameNoComments=at(function(e){return e.appendChild(n.createComment("")),!e.getElementsByTagName("*").length}),T.attributes=at(function(e){e.innerHTML="<select></select>";var t=typeof e.lastChild.getAttribute("multiple");return"boolean"!==t&&"string"!==t}),T.getByClassName=at(function(e){return e.innerHTML="<div class='hidden e'></div><div class='hidden'></div>",e.getElementsByClassName&&e.getElementsByClassName("e").length?(e.lastChild.className="e",2===e.getElementsByClassName("e").length):!1}),T.getByName=at(function(e){e.id=x+0,e.innerHTML="<a name='"+x+"'></a><div name='"+x+"'></div>",f.insertBefore(e,f.firstChild);var t=n.getElementsByName&&n.getElementsByName(x).length===2+n.getElementsByName(x+0).length;return T.getIdNotName=!n.getElementById(x),f.removeChild(e),t}),i.attrHandle=at(function(e){return e.innerHTML="<a href='#'></a>",e.firstChild&&typeof e.firstChild.getAttribute!==A&&"#"===e.firstChild.getAttribute("href")})?{}:{href:function(e){return e.getAttribute("href",2)},type:function(e){return e.getAttribute("type")}},T.getIdNotName?(i.find.ID=function(e,t){if(typeof t.getElementById!==A&&!d){var n=t.getElementById(e);return n&&n.parentNode?[n]:[]}},i.filter.ID=function(e){var t=e.replace(et,tt);return function(e){return e.getAttribute("id")===t}}):(i.find.ID=function(e,n){if(typeof n.getElementById!==A&&!d){var r=n.getElementById(e);return r?r.id===e||typeof r.getAttributeNode!==A&&r.getAttributeNode("id").value===e?[r]:t:[]}},i.filter.ID=function(e){var t=e.replace(et,tt);return function(e){var n=typeof e.getAttributeNode!==A&&e.getAttributeNode("id");return n&&n.value===t}}),i.find.TAG=T.tagNameNoComments?function(e,n){return typeof n.getElementsByTagName!==A?n.getElementsByTagName(e):t}:function(e,t){var n,r=[],i=0,o=t.getElementsByTagName(e);if("*"===e){while(n=o[i++])1===n.nodeType&&r.push(n);return r}return o},i.find.NAME=T.getByName&&function(e,n){return typeof n.getElementsByName!==A?n.getElementsByName(name):t},i.find.CLASS=T.getByClassName&&function(e,n){return typeof n.getElementsByClassName===A||d?t:n.getElementsByClassName(e)},g=[],h=[":focus"],(T.qsa=rt(n.querySelectorAll))&&(at(function(e){e.innerHTML="<select><option selected=''></option></select>",e.querySelectorAll("[selected]").length||h.push("\\["+_+"*(?:checked|disabled|ismap|multiple|readonly|selected|value)"),e.querySelectorAll(":checked").length||h.push(":checked")}),at(function(e){e.innerHTML="<input type='hidden' i=''/>",e.querySelectorAll("[i^='']").length&&h.push("[*^$]="+_+"*(?:\"\"|'')"),e.querySelectorAll(":enabled").length||h.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),h.push(",.*:")})),(T.matchesSelector=rt(m=f.matchesSelector||f.mozMatchesSelector||f.webkitMatchesSelector||f.oMatchesSelector||f.msMatchesSelector))&&at(function(e){T.disconnectedMatch=m.call(e,"div"),m.call(e,"[s!='']:x"),g.push("!=",R)}),h=RegExp(h.join("|")),g=RegExp(g.join("|")),y=rt(f.contains)||f.compareDocumentPosition?function(e,t){var n=9===e.nodeType?e.documentElement:e,r=t&&t.parentNode;return e===r||!(!r||1!==r.nodeType||!(n.contains?n.contains(r):e.compareDocumentPosition&&16&e.compareDocumentPosition(r)))}:function(e,t){if(t)while(t=t.parentNode)if(t===e)return!0;return!1},v=f.compareDocumentPosition?function(e,t){var r;return e===t?(u=!0,0):(r=t.compareDocumentPosition&&e.compareDocumentPosition&&e.compareDocumentPosition(t))?1&r||e.parentNode&&11===e.parentNode.nodeType?e===n||y(w,e)?-1:t===n||y(w,t)?1:0:4&r?-1:1:e.compareDocumentPosition?-1:1}:function(e,t){var r,i=0,o=e.parentNode,a=t.parentNode,s=[e],l=[t];if(e===t)return u=!0,0;if(!o||!a)return e===n?-1:t===n?1:o?-1:a?1:0;if(o===a)return ut(e,t);r=e;while(r=r.parentNode)s.unshift(r);r=t;while(r=r.parentNode)l.unshift(r);while(s[i]===l[i])i++;return i?ut(s[i],l[i]):s[i]===w?-1:l[i]===w?1:0},u=!1,[0,0].sort(v),T.detectDuplicates=u,p):p},st.matches=function(e,t){return st(e,null,null,t)},st.matchesSelector=function(e,t){if((e.ownerDocument||e)!==p&&c(e),t=t.replace(Z,"='$1']"),!(!T.matchesSelector||d||g&&g.test(t)||h.test(t)))try{var n=m.call(e,t);if(n||T.disconnectedMatch||e.document&&11!==e.document.nodeType)return n}catch(r){}return st(t,p,null,[e]).length>0},st.contains=function(e,t){return(e.ownerDocument||e)!==p&&c(e),y(e,t)},st.attr=function(e,t){var n;return(e.ownerDocument||e)!==p&&c(e),d||(t=t.toLowerCase()),(n=i.attrHandle[t])?n(e):d||T.attributes?e.getAttribute(t):((n=e.getAttributeNode(t))||e.getAttribute(t))&&e[t]===!0?t:n&&n.specified?n.value:null},st.error=function(e){throw Error("Syntax error, unrecognized expression: "+e)},st.uniqueSort=function(e){var t,n=[],r=1,i=0;if(u=!T.detectDuplicates,e.sort(v),u){for(;t=e[r];r++)t===e[r-1]&&(i=n.push(r));while(i--)e.splice(n[i],1)}return e};function ut(e,t){var n=t&&e,r=n&&(~t.sourceIndex||j)-(~e.sourceIndex||j);if(r)return r;if(n)while(n=n.nextSibling)if(n===t)return-1;return e?1:-1}function lt(e){return function(t){var n=t.nodeName.toLowerCase();return"input"===n&&t.type===e}}function ct(e){return function(t){var n=t.nodeName.toLowerCase();return("input"===n||"button"===n)&&t.type===e}}function pt(e){return ot(function(t){return t=+t,ot(function(n,r){var i,o=e([],n.length,t),a=o.length;while(a--)n[i=o[a]]&&(n[i]=!(r[i]=n[i]))})})}o=st.getText=function(e){var t,n="",r=0,i=e.nodeType;if(i){if(1===i||9===i||11===i){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=o(e)}else if(3===i||4===i)return e.nodeValue}else for(;t=e[r];r++)n+=o(t);return n},i=st.selectors={cacheLength:50,createPseudo:ot,match:U,find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(et,tt),e[3]=(e[4]||e[5]||"").replace(et,tt),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||st.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&st.error(e[0]),e},PSEUDO:function(e){var t,n=!e[5]&&e[2];return U.CHILD.test(e[0])?null:(e[4]?e[2]=e[4]:n&&z.test(n)&&(t=ft(n,!0))&&(t=n.indexOf(")",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){return"*"===e?function(){return!0}:(e=e.replace(et,tt).toLowerCase(),function(t){return t.nodeName&&t.nodeName.toLowerCase()===e})},CLASS:function(e){var t=k[e+" "];return t||(t=RegExp("(^|"+_+")"+e+"("+_+"|$)"))&&k(e,function(e){return t.test(e.className||typeof e.getAttribute!==A&&e.getAttribute("class")||"")})},ATTR:function(e,t,n){return function(r){var i=st.attr(r,e);return null==i?"!="===t:t?(i+="","="===t?i===n:"!="===t?i!==n:"^="===t?n&&0===i.indexOf(n):"*="===t?n&&i.indexOf(n)>-1:"$="===t?n&&i.slice(-n.length)===n:"~="===t?(" "+i+" ").indexOf(n)>-1:"|="===t?i===n||i.slice(0,n.length+1)===n+"-":!1):!0}},CHILD:function(e,t,n,r,i){var o="nth"!==e.slice(0,3),a="last"!==e.slice(-4),s="of-type"===t;return 1===r&&0===i?function(e){return!!e.parentNode}:function(t,n,u){var l,c,p,f,d,h,g=o!==a?"nextSibling":"previousSibling",m=t.parentNode,y=s&&t.nodeName.toLowerCase(),v=!u&&!s;if(m){if(o){while(g){p=t;while(p=p[g])if(s?p.nodeName.toLowerCase()===y:1===p.nodeType)return!1;h=g="only"===e&&!h&&"nextSibling"}return!0}if(h=[a?m.firstChild:m.lastChild],a&&v){c=m[x]||(m[x]={}),l=c[e]||[],d=l[0]===N&&l[1],f=l[0]===N&&l[2],p=d&&m.childNodes[d];while(p=++d&&p&&p[g]||(f=d=0)||h.pop())if(1===p.nodeType&&++f&&p===t){c[e]=[N,d,f];break}}else if(v&&(l=(t[x]||(t[x]={}))[e])&&l[0]===N)f=l[1];else while(p=++d&&p&&p[g]||(f=d=0)||h.pop())if((s?p.nodeName.toLowerCase()===y:1===p.nodeType)&&++f&&(v&&((p[x]||(p[x]={}))[e]=[N,f]),p===t))break;return f-=i,f===r||0===f%r&&f/r>=0}}},PSEUDO:function(e,t){var n,r=i.pseudos[e]||i.setFilters[e.toLowerCase()]||st.error("unsupported pseudo: "+e);return r[x]?r(t):r.length>1?(n=[e,e,"",t],i.setFilters.hasOwnProperty(e.toLowerCase())?ot(function(e,n){var i,o=r(e,t),a=o.length;while(a--)i=M.call(e,o[a]),e[i]=!(n[i]=o[a])}):function(e){return r(e,0,n)}):r}},pseudos:{not:ot(function(e){var t=[],n=[],r=s(e.replace(W,"$1"));return r[x]?ot(function(e,t,n,i){var o,a=r(e,null,i,[]),s=e.length;while(s--)(o=a[s])&&(e[s]=!(t[s]=o))}):function(e,i,o){return t[0]=e,r(t,null,o,n),!n.pop()}}),has:ot(function(e){return function(t){return st(e,t).length>0}}),contains:ot(function(e){return function(t){return(t.textContent||t.innerText||o(t)).indexOf(e)>-1}}),lang:ot(function(e){return X.test(e||"")||st.error("unsupported lang: "+e),e=e.replace(et,tt).toLowerCase(),function(t){var n;do if(n=d?t.getAttribute("xml:lang")||t.getAttribute("lang"):t.lang)return n=n.toLowerCase(),n===e||0===n.indexOf(e+"-");while((t=t.parentNode)&&1===t.nodeType);return!1}}),target:function(t){var n=e.location&&e.location.hash;return n&&n.slice(1)===t.id},root:function(e){return e===f},focus:function(e){return e===p.activeElement&&(!p.hasFocus||p.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:function(e){return e.disabled===!1},disabled:function(e){return e.disabled===!0},checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,e.selected===!0},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeName>"@"||3===e.nodeType||4===e.nodeType)return!1;return!0},parent:function(e){return!i.pseudos.empty(e)},header:function(e){return Q.test(e.nodeName)},input:function(e){return G.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||t.toLowerCase()===e.type)},first:pt(function(){return[0]}),last:pt(function(e,t){return[t-1]}),eq:pt(function(e,t,n){return[0>n?n+t:n]}),even:pt(function(e,t){var n=0;for(;t>n;n+=2)e.push(n);return e}),odd:pt(function(e,t){var n=1;for(;t>n;n+=2)e.push(n);return e}),lt:pt(function(e,t,n){var r=0>n?n+t:n;for(;--r>=0;)e.push(r);return e}),gt:pt(function(e,t,n){var r=0>n?n+t:n;for(;t>++r;)e.push(r);return e})}};for(n in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})i.pseudos[n]=lt(n);for(n in{submit:!0,reset:!0})i.pseudos[n]=ct(n);function ft(e,t){var n,r,o,a,s,u,l,c=E[e+" "];if(c)return t?0:c.slice(0);s=e,u=[],l=i.preFilter;while(s){(!n||(r=$.exec(s)))&&(r&&(s=s.slice(r[0].length)||s),u.push(o=[])),n=!1,(r=I.exec(s))&&(n=r.shift(),o.push({value:n,type:r[0].replace(W," ")}),s=s.slice(n.length));for(a in i.filter)!(r=U[a].exec(s))||l[a]&&!(r=l[a](r))||(n=r.shift(),o.push({value:n,type:a,matches:r}),s=s.slice(n.length));if(!n)break}return t?s.length:s?st.error(e):E(e,u).slice(0)}function dt(e){var t=0,n=e.length,r="";for(;n>t;t++)r+=e[t].value;return r}function ht(e,t,n){var i=t.dir,o=n&&"parentNode"===i,a=C++;return t.first?function(t,n,r){while(t=t[i])if(1===t.nodeType||o)return e(t,n,r)}:function(t,n,s){var u,l,c,p=N+" "+a;if(s){while(t=t[i])if((1===t.nodeType||o)&&e(t,n,s))return!0}else while(t=t[i])if(1===t.nodeType||o)if(c=t[x]||(t[x]={}),(l=c[i])&&l[0]===p){if((u=l[1])===!0||u===r)return u===!0}else if(l=c[i]=[p],l[1]=e(t,n,s)||r,l[1]===!0)return!0}}function gt(e){return e.length>1?function(t,n,r){var i=e.length;while(i--)if(!e[i](t,n,r))return!1;return!0}:e[0]}function mt(e,t,n,r,i){var o,a=[],s=0,u=e.length,l=null!=t;for(;u>s;s++)(o=e[s])&&(!n||n(o,r,i))&&(a.push(o),l&&t.push(s));return a}function yt(e,t,n,r,i,o){return r&&!r[x]&&(r=yt(r)),i&&!i[x]&&(i=yt(i,o)),ot(function(o,a,s,u){var l,c,p,f=[],d=[],h=a.length,g=o||xt(t||"*",s.nodeType?[s]:s,[]),m=!e||!o&&t?g:mt(g,f,e,s,u),y=n?i||(o?e:h||r)?[]:a:m;if(n&&n(m,y,s,u),r){l=mt(y,d),r(l,[],s,u),c=l.length;while(c--)(p=l[c])&&(y[d[c]]=!(m[d[c]]=p))}if(o){if(i||e){if(i){l=[],c=y.length;while(c--)(p=y[c])&&l.push(m[c]=p);i(null,y=[],l,u)}c=y.length;while(c--)(p=y[c])&&(l=i?M.call(o,p):f[c])>-1&&(o[l]=!(a[l]=p))}}else y=mt(y===a?y.splice(h,y.length):y),i?i(null,a,y,u):H.apply(a,y)})}function vt(e){var t,n,r,o=e.length,a=i.relative[e[0].type],s=a||i.relative[" "],u=a?1:0,c=ht(function(e){return e===t},s,!0),p=ht(function(e){return M.call(t,e)>-1},s,!0),f=[function(e,n,r){return!a&&(r||n!==l)||((t=n).nodeType?c(e,n,r):p(e,n,r))}];for(;o>u;u++)if(n=i.relative[e[u].type])f=[ht(gt(f),n)];else{if(n=i.filter[e[u].type].apply(null,e[u].matches),n[x]){for(r=++u;o>r;r++)if(i.relative[e[r].type])break;return yt(u>1&&gt(f),u>1&&dt(e.slice(0,u-1)).replace(W,"$1"),n,r>u&&vt(e.slice(u,r)),o>r&&vt(e=e.slice(r)),o>r&&dt(e))}f.push(n)}return gt(f)}function bt(e,t){var n=0,o=t.length>0,a=e.length>0,s=function(s,u,c,f,d){var h,g,m,y=[],v=0,b="0",x=s&&[],w=null!=d,T=l,C=s||a&&i.find.TAG("*",d&&u.parentNode||u),k=N+=null==T?1:Math.random()||.1;for(w&&(l=u!==p&&u,r=n);null!=(h=C[b]);b++){if(a&&h){g=0;while(m=e[g++])if(m(h,u,c)){f.push(h);break}w&&(N=k,r=++n)}o&&((h=!m&&h)&&v--,s&&x.push(h))}if(v+=b,o&&b!==v){g=0;while(m=t[g++])m(x,y,u,c);if(s){if(v>0)while(b--)x[b]||y[b]||(y[b]=L.call(f));y=mt(y)}H.apply(f,y),w&&!s&&y.length>0&&v+t.length>1&&st.uniqueSort(f)}return w&&(N=k,l=T),x};return o?ot(s):s}s=st.compile=function(e,t){var n,r=[],i=[],o=S[e+" "];if(!o){t||(t=ft(e)),n=t.length;while(n--)o=vt(t[n]),o[x]?r.push(o):i.push(o);o=S(e,bt(i,r))}return o};function xt(e,t,n){var r=0,i=t.length;for(;i>r;r++)st(e,t[r],n);return n}function wt(e,t,n,r){var o,a,u,l,c,p=ft(e);if(!r&&1===p.length){if(a=p[0]=p[0].slice(0),a.length>2&&"ID"===(u=a[0]).type&&9===t.nodeType&&!d&&i.relative[a[1].type]){if(t=i.find.ID(u.matches[0].replace(et,tt),t)[0],!t)return n;e=e.slice(a.shift().value.length)}o=U.needsContext.test(e)?0:a.length;while(o--){if(u=a[o],i.relative[l=u.type])break;if((c=i.find[l])&&(r=c(u.matches[0].replace(et,tt),V.test(a[0].type)&&t.parentNode||t))){if(a.splice(o,1),e=r.length&&dt(a),!e)return H.apply(n,q.call(r,0)),n;break}}}return s(e,p)(r,t,d,n,V.test(e)),n}i.pseudos.nth=i.pseudos.eq;function Tt(){}i.filters=Tt.prototype=i.pseudos,i.setFilters=new Tt,c(),st.attr=b.attr,b.find=st,b.expr=st.selectors,b.expr[":"]=b.expr.pseudos,b.unique=st.uniqueSort,b.text=st.getText,b.isXMLDoc=st.isXML,b.contains=st.contains}(e);var at=/Until$/,st=/^(?:parents|prev(?:Until|All))/,ut=/^.[^:#\[\.,]*$/,lt=b.expr.match.needsContext,ct={children:!0,contents:!0,next:!0,prev:!0};b.fn.extend({find:function(e){var t,n,r,i=this.length;if("string"!=typeof e)return r=this,this.pushStack(b(e).filter(function(){for(t=0;i>t;t++)if(b.contains(r[t],this))return!0}));for(n=[],t=0;i>t;t++)b.find(e,this[t],n);return n=this.pushStack(i>1?b.unique(n):n),n.selector=(this.selector?this.selector+" ":"")+e,n},has:function(e){var t,n=b(e,this),r=n.length;return this.filter(function(){for(t=0;r>t;t++)if(b.contains(this,n[t]))return!0})},not:function(e){return this.pushStack(ft(this,e,!1))},filter:function(e){return this.pushStack(ft(this,e,!0))},is:function(e){return!!e&&("string"==typeof e?lt.test(e)?b(e,this.context).index(this[0])>=0:b.filter(e,this).length>0:this.filter(e).length>0)},closest:function(e,t){var n,r=0,i=this.length,o=[],a=lt.test(e)||"string"!=typeof e?b(e,t||this.context):0;for(;i>r;r++){n=this[r];while(n&&n.ownerDocument&&n!==t&&11!==n.nodeType){if(a?a.index(n)>-1:b.find.matchesSelector(n,e)){o.push(n);break}n=n.parentNode}}return this.pushStack(o.length>1?b.unique(o):o)},index:function(e){return e?"string"==typeof e?b.inArray(this[0],b(e)):b.inArray(e.jquery?e[0]:e,this):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){var n="string"==typeof e?b(e,t):b.makeArray(e&&e.nodeType?[e]:e),r=b.merge(this.get(),n);return this.pushStack(b.unique(r))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),b.fn.andSelf=b.fn.addBack;function pt(e,t){do e=e[t];while(e&&1!==e.nodeType);return e}b.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return b.dir(e,"parentNode")},parentsUntil:function(e,t,n){return b.dir(e,"parentNode",n)},next:function(e){return pt(e,"nextSibling")},prev:function(e){return pt(e,"previousSibling")},nextAll:function(e){return b.dir(e,"nextSibling")},prevAll:function(e){return b.dir(e,"previousSibling")},nextUntil:function(e,t,n){return b.dir(e,"nextSibling",n)},prevUntil:function(e,t,n){return b.dir(e,"previousSibling",n)},siblings:function(e){return b.sibling((e.parentNode||{}).firstChild,e)},children:function(e){return b.sibling(e.firstChild)},contents:function(e){return b.nodeName(e,"iframe")?e.contentDocument||e.contentWindow.document:b.merge([],e.childNodes)}},function(e,t){b.fn[e]=function(n,r){var i=b.map(this,t,n);return at.test(e)||(r=n),r&&"string"==typeof r&&(i=b.filter(r,i)),i=this.length>1&&!ct[e]?b.unique(i):i,this.length>1&&st.test(e)&&(i=i.reverse()),this.pushStack(i)}}),b.extend({filter:function(e,t,n){return n&&(e=":not("+e+")"),1===t.length?b.find.matchesSelector(t[0],e)?[t[0]]:[]:b.find.matches(e,t)},dir:function(e,n,r){var i=[],o=e[n];while(o&&9!==o.nodeType&&(r===t||1!==o.nodeType||!b(o).is(r)))1===o.nodeType&&i.push(o),o=o[n];return i},sibling:function(e,t){var n=[];for(;e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n}});function ft(e,t,n){if(t=t||0,b.isFunction(t))return b.grep(e,function(e,r){var i=!!t.call(e,r,e);return i===n});if(t.nodeType)return b.grep(e,function(e){return e===t===n});if("string"==typeof t){var r=b.grep(e,function(e){return 1===e.nodeType});if(ut.test(t))return b.filter(t,r,!n);t=b.filter(t,r)}return b.grep(e,function(e){return b.inArray(e,t)>=0===n})}function dt(e){var t=ht.split("|"),n=e.createDocumentFragment();if(n.createElement)while(t.length)n.createElement(t.pop());return n}var ht="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",gt=/ jQuery\d+="(?:null|\d+)"/g,mt=RegExp("<(?:"+ht+")[\\s/>]","i"),yt=/^\s+/,vt=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,bt=/<([\w:]+)/,xt=/<tbody/i,wt=/<|&#?\w+;/,Tt=/<(?:script|style|link)/i,Nt=/^(?:checkbox|radio)$/i,Ct=/checked\s*(?:[^=]|=\s*.checked.)/i,kt=/^$|\/(?:java|ecma)script/i,Et=/^true\/(.*)/,St=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,At={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],area:[1,"<map>","</map>"],param:[1,"<object>","</object>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:b.support.htmlSerialize?[0,"",""]:[1,"X<div>","</div>"]},jt=dt(o),Dt=jt.appendChild(o.createElement("div"));At.optgroup=At.option,At.tbody=At.tfoot=At.colgroup=At.caption=At.thead,At.th=At.td,b.fn.extend({text:function(e){return b.access(this,function(e){return e===t?b.text(this):this.empty().append((this[0]&&this[0].ownerDocument||o).createTextNode(e))},null,e,arguments.length)},wrapAll:function(e){if(b.isFunction(e))return this.each(function(t){b(this).wrapAll(e.call(this,t))});if(this[0]){var t=b(e,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){var e=this;while(e.firstChild&&1===e.firstChild.nodeType)e=e.firstChild;return e}).append(this)}return this},wrapInner:function(e){return b.isFunction(e)?this.each(function(t){b(this).wrapInner(e.call(this,t))}):this.each(function(){var t=b(this),n=t.contents();n.length?n.wrapAll(e):t.append(e)})},wrap:function(e){var t=b.isFunction(e);return this.each(function(n){b(this).wrapAll(t?e.call(this,n):e)})},unwrap:function(){return this.parent().each(function(){b.nodeName(this,"body")||b(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(e){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&this.appendChild(e)})},prepend:function(){return this.domManip(arguments,!0,function(e){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&this.insertBefore(e,this.firstChild)})},before:function(){return this.domManip(arguments,!1,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return this.domManip(arguments,!1,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},remove:function(e,t){var n,r=0;for(;null!=(n=this[r]);r++)(!e||b.filter(e,[n]).length>0)&&(t||1!==n.nodeType||b.cleanData(Ot(n)),n.parentNode&&(t&&b.contains(n.ownerDocument,n)&&Mt(Ot(n,"script")),n.parentNode.removeChild(n)));return this},empty:function(){var e,t=0;for(;null!=(e=this[t]);t++){1===e.nodeType&&b.cleanData(Ot(e,!1));while(e.firstChild)e.removeChild(e.firstChild);e.options&&b.nodeName(e,"select")&&(e.options.length=0)}return this},clone:function(e,t){return e=null==e?!1:e,t=null==t?e:t,this.map(function(){return b.clone(this,e,t)})},html:function(e){return b.access(this,function(e){var n=this[0]||{},r=0,i=this.length;if(e===t)return 1===n.nodeType?n.innerHTML.replace(gt,""):t;if(!("string"!=typeof e||Tt.test(e)||!b.support.htmlSerialize&&mt.test(e)||!b.support.leadingWhitespace&&yt.test(e)||At[(bt.exec(e)||["",""])[1].toLowerCase()])){e=e.replace(vt,"<$1></$2>");try{for(;i>r;r++)n=this[r]||{},1===n.nodeType&&(b.cleanData(Ot(n,!1)),n.innerHTML=e);n=0}catch(o){}}n&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(e){var t=b.isFunction(e);return t||"string"==typeof e||(e=b(e).not(this).detach()),this.domManip([e],!0,function(e){var t=this.nextSibling,n=this.parentNode;n&&(b(this).remove(),n.insertBefore(e,t))})},detach:function(e){return this.remove(e,!0)},domManip:function(e,n,r){e=f.apply([],e);var i,o,a,s,u,l,c=0,p=this.length,d=this,h=p-1,g=e[0],m=b.isFunction(g);if(m||!(1>=p||"string"!=typeof g||b.support.checkClone)&&Ct.test(g))return this.each(function(i){var o=d.eq(i);m&&(e[0]=g.call(this,i,n?o.html():t)),o.domManip(e,n,r)});if(p&&(l=b.buildFragment(e,this[0].ownerDocument,!1,this),i=l.firstChild,1===l.childNodes.length&&(l=i),i)){for(n=n&&b.nodeName(i,"tr"),s=b.map(Ot(l,"script"),Ht),a=s.length;p>c;c++)o=l,c!==h&&(o=b.clone(o,!0,!0),a&&b.merge(s,Ot(o,"script"))),r.call(n&&b.nodeName(this[c],"table")?Lt(this[c],"tbody"):this[c],o,c);if(a)for(u=s[s.length-1].ownerDocument,b.map(s,qt),c=0;a>c;c++)o=s[c],kt.test(o.type||"")&&!b._data(o,"globalEval")&&b.contains(u,o)&&(o.src?b.ajax({url:o.src,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0}):b.globalEval((o.text||o.textContent||o.innerHTML||"").replace(St,"")));l=i=null}return this}});function Lt(e,t){return e.getElementsByTagName(t)[0]||e.appendChild(e.ownerDocument.createElement(t))}function Ht(e){var t=e.getAttributeNode("type");return e.type=(t&&t.specified)+"/"+e.type,e}function qt(e){var t=Et.exec(e.type);return t?e.type=t[1]:e.removeAttribute("type"),e}function Mt(e,t){var n,r=0;for(;null!=(n=e[r]);r++)b._data(n,"globalEval",!t||b._data(t[r],"globalEval"))}function _t(e,t){if(1===t.nodeType&&b.hasData(e)){var n,r,i,o=b._data(e),a=b._data(t,o),s=o.events;if(s){delete a.handle,a.events={};for(n in s)for(r=0,i=s[n].length;i>r;r++)b.event.add(t,n,s[n][r])}a.data&&(a.data=b.extend({},a.data))}}function Ft(e,t){var n,r,i;if(1===t.nodeType){if(n=t.nodeName.toLowerCase(),!b.support.noCloneEvent&&t[b.expando]){i=b._data(t);for(r in i.events)b.removeEvent(t,r,i.handle);t.removeAttribute(b.expando)}"script"===n&&t.text!==e.text?(Ht(t).text=e.text,qt(t)):"object"===n?(t.parentNode&&(t.outerHTML=e.outerHTML),b.support.html5Clone&&e.innerHTML&&!b.trim(t.innerHTML)&&(t.innerHTML=e.innerHTML)):"input"===n&&Nt.test(e.type)?(t.defaultChecked=t.checked=e.checked,t.value!==e.value&&(t.value=e.value)):"option"===n?t.defaultSelected=t.selected=e.defaultSelected:("input"===n||"textarea"===n)&&(t.defaultValue=e.defaultValue)}}b.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,t){b.fn[e]=function(e){var n,r=0,i=[],o=b(e),a=o.length-1;for(;a>=r;r++)n=r===a?this:this.clone(!0),b(o[r])[t](n),d.apply(i,n.get());return this.pushStack(i)}});function Ot(e,n){var r,o,a=0,s=typeof e.getElementsByTagName!==i?e.getElementsByTagName(n||"*"):typeof e.querySelectorAll!==i?e.querySelectorAll(n||"*"):t;if(!s)for(s=[],r=e.childNodes||e;null!=(o=r[a]);a++)!n||b.nodeName(o,n)?s.push(o):b.merge(s,Ot(o,n));return n===t||n&&b.nodeName(e,n)?b.merge([e],s):s}function Bt(e){Nt.test(e.type)&&(e.defaultChecked=e.checked)}b.extend({clone:function(e,t,n){var r,i,o,a,s,u=b.contains(e.ownerDocument,e);if(b.support.html5Clone||b.isXMLDoc(e)||!mt.test("<"+e.nodeName+">")?o=e.cloneNode(!0):(Dt.innerHTML=e.outerHTML,Dt.removeChild(o=Dt.firstChild)),!(b.support.noCloneEvent&&b.support.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||b.isXMLDoc(e)))for(r=Ot(o),s=Ot(e),a=0;null!=(i=s[a]);++a)r[a]&&Ft(i,r[a]);if(t)if(n)for(s=s||Ot(e),r=r||Ot(o),a=0;null!=(i=s[a]);a++)_t(i,r[a]);else _t(e,o);return r=Ot(o,"script"),r.length>0&&Mt(r,!u&&Ot(e,"script")),r=s=i=null,o},buildFragment:function(e,t,n,r){var i,o,a,s,u,l,c,p=e.length,f=dt(t),d=[],h=0;for(;p>h;h++)if(o=e[h],o||0===o)if("object"===b.type(o))b.merge(d,o.nodeType?[o]:o);else if(wt.test(o)){s=s||f.appendChild(t.createElement("div")),u=(bt.exec(o)||["",""])[1].toLowerCase(),c=At[u]||At._default,s.innerHTML=c[1]+o.replace(vt,"<$1></$2>")+c[2],i=c[0];while(i--)s=s.lastChild;if(!b.support.leadingWhitespace&&yt.test(o)&&d.push(t.createTextNode(yt.exec(o)[0])),!b.support.tbody){o="table"!==u||xt.test(o)?"<table>"!==c[1]||xt.test(o)?0:s:s.firstChild,i=o&&o.childNodes.length;while(i--)b.nodeName(l=o.childNodes[i],"tbody")&&!l.childNodes.length&&o.removeChild(l)
}b.merge(d,s.childNodes),s.textContent="";while(s.firstChild)s.removeChild(s.firstChild);s=f.lastChild}else d.push(t.createTextNode(o));s&&f.removeChild(s),b.support.appendChecked||b.grep(Ot(d,"input"),Bt),h=0;while(o=d[h++])if((!r||-1===b.inArray(o,r))&&(a=b.contains(o.ownerDocument,o),s=Ot(f.appendChild(o),"script"),a&&Mt(s),n)){i=0;while(o=s[i++])kt.test(o.type||"")&&n.push(o)}return s=null,f},cleanData:function(e,t){var n,r,o,a,s=0,u=b.expando,l=b.cache,p=b.support.deleteExpando,f=b.event.special;for(;null!=(n=e[s]);s++)if((t||b.acceptData(n))&&(o=n[u],a=o&&l[o])){if(a.events)for(r in a.events)f[r]?b.event.remove(n,r):b.removeEvent(n,r,a.handle);l[o]&&(delete l[o],p?delete n[u]:typeof n.removeAttribute!==i?n.removeAttribute(u):n[u]=null,c.push(o))}}});var Pt,Rt,Wt,$t=/alpha\([^)]*\)/i,It=/opacity\s*=\s*([^)]*)/,zt=/^(top|right|bottom|left)$/,Xt=/^(none|table(?!-c[ea]).+)/,Ut=/^margin/,Vt=RegExp("^("+x+")(.*)$","i"),Yt=RegExp("^("+x+")(?!px)[a-z%]+$","i"),Jt=RegExp("^([+-])=("+x+")","i"),Gt={BODY:"block"},Qt={position:"absolute",visibility:"hidden",display:"block"},Kt={letterSpacing:0,fontWeight:400},Zt=["Top","Right","Bottom","Left"],en=["Webkit","O","Moz","ms"];function tn(e,t){if(t in e)return t;var n=t.charAt(0).toUpperCase()+t.slice(1),r=t,i=en.length;while(i--)if(t=en[i]+n,t in e)return t;return r}function nn(e,t){return e=t||e,"none"===b.css(e,"display")||!b.contains(e.ownerDocument,e)}function rn(e,t){var n,r,i,o=[],a=0,s=e.length;for(;s>a;a++)r=e[a],r.style&&(o[a]=b._data(r,"olddisplay"),n=r.style.display,t?(o[a]||"none"!==n||(r.style.display=""),""===r.style.display&&nn(r)&&(o[a]=b._data(r,"olddisplay",un(r.nodeName)))):o[a]||(i=nn(r),(n&&"none"!==n||!i)&&b._data(r,"olddisplay",i?n:b.css(r,"display"))));for(a=0;s>a;a++)r=e[a],r.style&&(t&&"none"!==r.style.display&&""!==r.style.display||(r.style.display=t?o[a]||"":"none"));return e}b.fn.extend({css:function(e,n){return b.access(this,function(e,n,r){var i,o,a={},s=0;if(b.isArray(n)){for(o=Rt(e),i=n.length;i>s;s++)a[n[s]]=b.css(e,n[s],!1,o);return a}return r!==t?b.style(e,n,r):b.css(e,n)},e,n,arguments.length>1)},show:function(){return rn(this,!0)},hide:function(){return rn(this)},toggle:function(e){var t="boolean"==typeof e;return this.each(function(){(t?e:nn(this))?b(this).show():b(this).hide()})}}),b.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=Wt(e,"opacity");return""===n?"1":n}}}},cssNumber:{columnCount:!0,fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":b.support.cssFloat?"cssFloat":"styleFloat"},style:function(e,n,r,i){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var o,a,s,u=b.camelCase(n),l=e.style;if(n=b.cssProps[u]||(b.cssProps[u]=tn(l,u)),s=b.cssHooks[n]||b.cssHooks[u],r===t)return s&&"get"in s&&(o=s.get(e,!1,i))!==t?o:l[n];if(a=typeof r,"string"===a&&(o=Jt.exec(r))&&(r=(o[1]+1)*o[2]+parseFloat(b.css(e,n)),a="number"),!(null==r||"number"===a&&isNaN(r)||("number"!==a||b.cssNumber[u]||(r+="px"),b.support.clearCloneStyle||""!==r||0!==n.indexOf("background")||(l[n]="inherit"),s&&"set"in s&&(r=s.set(e,r,i))===t)))try{l[n]=r}catch(c){}}},css:function(e,n,r,i){var o,a,s,u=b.camelCase(n);return n=b.cssProps[u]||(b.cssProps[u]=tn(e.style,u)),s=b.cssHooks[n]||b.cssHooks[u],s&&"get"in s&&(a=s.get(e,!0,r)),a===t&&(a=Wt(e,n,i)),"normal"===a&&n in Kt&&(a=Kt[n]),""===r||r?(o=parseFloat(a),r===!0||b.isNumeric(o)?o||0:a):a},swap:function(e,t,n,r){var i,o,a={};for(o in t)a[o]=e.style[o],e.style[o]=t[o];i=n.apply(e,r||[]);for(o in t)e.style[o]=a[o];return i}}),e.getComputedStyle?(Rt=function(t){return e.getComputedStyle(t,null)},Wt=function(e,n,r){var i,o,a,s=r||Rt(e),u=s?s.getPropertyValue(n)||s[n]:t,l=e.style;return s&&(""!==u||b.contains(e.ownerDocument,e)||(u=b.style(e,n)),Yt.test(u)&&Ut.test(n)&&(i=l.width,o=l.minWidth,a=l.maxWidth,l.minWidth=l.maxWidth=l.width=u,u=s.width,l.width=i,l.minWidth=o,l.maxWidth=a)),u}):o.documentElement.currentStyle&&(Rt=function(e){return e.currentStyle},Wt=function(e,n,r){var i,o,a,s=r||Rt(e),u=s?s[n]:t,l=e.style;return null==u&&l&&l[n]&&(u=l[n]),Yt.test(u)&&!zt.test(n)&&(i=l.left,o=e.runtimeStyle,a=o&&o.left,a&&(o.left=e.currentStyle.left),l.left="fontSize"===n?"1em":u,u=l.pixelLeft+"px",l.left=i,a&&(o.left=a)),""===u?"auto":u});function on(e,t,n){var r=Vt.exec(t);return r?Math.max(0,r[1]-(n||0))+(r[2]||"px"):t}function an(e,t,n,r,i){var o=n===(r?"border":"content")?4:"width"===t?1:0,a=0;for(;4>o;o+=2)"margin"===n&&(a+=b.css(e,n+Zt[o],!0,i)),r?("content"===n&&(a-=b.css(e,"padding"+Zt[o],!0,i)),"margin"!==n&&(a-=b.css(e,"border"+Zt[o]+"Width",!0,i))):(a+=b.css(e,"padding"+Zt[o],!0,i),"padding"!==n&&(a+=b.css(e,"border"+Zt[o]+"Width",!0,i)));return a}function sn(e,t,n){var r=!0,i="width"===t?e.offsetWidth:e.offsetHeight,o=Rt(e),a=b.support.boxSizing&&"border-box"===b.css(e,"boxSizing",!1,o);if(0>=i||null==i){if(i=Wt(e,t,o),(0>i||null==i)&&(i=e.style[t]),Yt.test(i))return i;r=a&&(b.support.boxSizingReliable||i===e.style[t]),i=parseFloat(i)||0}return i+an(e,t,n||(a?"border":"content"),r,o)+"px"}function un(e){var t=o,n=Gt[e];return n||(n=ln(e,t),"none"!==n&&n||(Pt=(Pt||b("<iframe frameborder='0' width='0' height='0'/>").css("cssText","display:block !important")).appendTo(t.documentElement),t=(Pt[0].contentWindow||Pt[0].contentDocument).document,t.write("<!doctype html><html><body>"),t.close(),n=ln(e,t),Pt.detach()),Gt[e]=n),n}function ln(e,t){var n=b(t.createElement(e)).appendTo(t.body),r=b.css(n[0],"display");return n.remove(),r}b.each(["height","width"],function(e,n){b.cssHooks[n]={get:function(e,r,i){return r?0===e.offsetWidth&&Xt.test(b.css(e,"display"))?b.swap(e,Qt,function(){return sn(e,n,i)}):sn(e,n,i):t},set:function(e,t,r){var i=r&&Rt(e);return on(e,t,r?an(e,n,r,b.support.boxSizing&&"border-box"===b.css(e,"boxSizing",!1,i),i):0)}}}),b.support.opacity||(b.cssHooks.opacity={get:function(e,t){return It.test((t&&e.currentStyle?e.currentStyle.filter:e.style.filter)||"")?.01*parseFloat(RegExp.$1)+"":t?"1":""},set:function(e,t){var n=e.style,r=e.currentStyle,i=b.isNumeric(t)?"alpha(opacity="+100*t+")":"",o=r&&r.filter||n.filter||"";n.zoom=1,(t>=1||""===t)&&""===b.trim(o.replace($t,""))&&n.removeAttribute&&(n.removeAttribute("filter"),""===t||r&&!r.filter)||(n.filter=$t.test(o)?o.replace($t,i):o+" "+i)}}),b(function(){b.support.reliableMarginRight||(b.cssHooks.marginRight={get:function(e,n){return n?b.swap(e,{display:"inline-block"},Wt,[e,"marginRight"]):t}}),!b.support.pixelPosition&&b.fn.position&&b.each(["top","left"],function(e,n){b.cssHooks[n]={get:function(e,r){return r?(r=Wt(e,n),Yt.test(r)?b(e).position()[n]+"px":r):t}}})}),b.expr&&b.expr.filters&&(b.expr.filters.hidden=function(e){return 0>=e.offsetWidth&&0>=e.offsetHeight||!b.support.reliableHiddenOffsets&&"none"===(e.style&&e.style.display||b.css(e,"display"))},b.expr.filters.visible=function(e){return!b.expr.filters.hidden(e)}),b.each({margin:"",padding:"",border:"Width"},function(e,t){b.cssHooks[e+t]={expand:function(n){var r=0,i={},o="string"==typeof n?n.split(" "):[n];for(;4>r;r++)i[e+Zt[r]+t]=o[r]||o[r-2]||o[0];return i}},Ut.test(e)||(b.cssHooks[e+t].set=on)});var cn=/%20/g,pn=/\[\]$/,fn=/\r?\n/g,dn=/^(?:submit|button|image|reset|file)$/i,hn=/^(?:input|select|textarea|keygen)/i;b.fn.extend({serialize:function(){return b.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=b.prop(this,"elements");return e?b.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!b(this).is(":disabled")&&hn.test(this.nodeName)&&!dn.test(e)&&(this.checked||!Nt.test(e))}).map(function(e,t){var n=b(this).val();return null==n?null:b.isArray(n)?b.map(n,function(e){return{name:t.name,value:e.replace(fn,"\r\n")}}):{name:t.name,value:n.replace(fn,"\r\n")}}).get()}}),b.param=function(e,n){var r,i=[],o=function(e,t){t=b.isFunction(t)?t():null==t?"":t,i[i.length]=encodeURIComponent(e)+"="+encodeURIComponent(t)};if(n===t&&(n=b.ajaxSettings&&b.ajaxSettings.traditional),b.isArray(e)||e.jquery&&!b.isPlainObject(e))b.each(e,function(){o(this.name,this.value)});else for(r in e)gn(r,e[r],n,o);return i.join("&").replace(cn,"+")};function gn(e,t,n,r){var i;if(b.isArray(t))b.each(t,function(t,i){n||pn.test(e)?r(e,i):gn(e+"["+("object"==typeof i?t:"")+"]",i,n,r)});else if(n||"object"!==b.type(t))r(e,t);else for(i in t)gn(e+"["+i+"]",t[i],n,r)}b.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(e,t){b.fn[t]=function(e,n){return arguments.length>0?this.on(t,null,e,n):this.trigger(t)}}),b.fn.hover=function(e,t){return this.mouseenter(e).mouseleave(t||e)};var mn,yn,vn=b.now(),bn=/\?/,xn=/#.*$/,wn=/([?&])_=[^&]*/,Tn=/^(.*?):[ \t]*([^\r\n]*)\r?$/gm,Nn=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Cn=/^(?:GET|HEAD)$/,kn=/^\/\//,En=/^([\w.+-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/,Sn=b.fn.load,An={},jn={},Dn="*/".concat("*");try{yn=a.href}catch(Ln){yn=o.createElement("a"),yn.href="",yn=yn.href}mn=En.exec(yn.toLowerCase())||[];function Hn(e){return function(t,n){"string"!=typeof t&&(n=t,t="*");var r,i=0,o=t.toLowerCase().match(w)||[];if(b.isFunction(n))while(r=o[i++])"+"===r[0]?(r=r.slice(1)||"*",(e[r]=e[r]||[]).unshift(n)):(e[r]=e[r]||[]).push(n)}}function qn(e,n,r,i){var o={},a=e===jn;function s(u){var l;return o[u]=!0,b.each(e[u]||[],function(e,u){var c=u(n,r,i);return"string"!=typeof c||a||o[c]?a?!(l=c):t:(n.dataTypes.unshift(c),s(c),!1)}),l}return s(n.dataTypes[0])||!o["*"]&&s("*")}function Mn(e,n){var r,i,o=b.ajaxSettings.flatOptions||{};for(i in n)n[i]!==t&&((o[i]?e:r||(r={}))[i]=n[i]);return r&&b.extend(!0,e,r),e}b.fn.load=function(e,n,r){if("string"!=typeof e&&Sn)return Sn.apply(this,arguments);var i,o,a,s=this,u=e.indexOf(" ");return u>=0&&(i=e.slice(u,e.length),e=e.slice(0,u)),b.isFunction(n)?(r=n,n=t):n&&"object"==typeof n&&(a="POST"),s.length>0&&b.ajax({url:e,type:a,dataType:"html",data:n}).done(function(e){o=arguments,s.html(i?b("<div>").append(b.parseHTML(e)).find(i):e)}).complete(r&&function(e,t){s.each(r,o||[e.responseText,t,e])}),this},b.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){b.fn[t]=function(e){return this.on(t,e)}}),b.each(["get","post"],function(e,n){b[n]=function(e,r,i,o){return b.isFunction(r)&&(o=o||i,i=r,r=t),b.ajax({url:e,type:n,dataType:o,data:r,success:i})}}),b.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:yn,type:"GET",isLocal:Nn.test(mn[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Dn,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText"},converters:{"* text":e.String,"text html":!0,"text json":b.parseJSON,"text xml":b.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?Mn(Mn(e,b.ajaxSettings),t):Mn(b.ajaxSettings,e)},ajaxPrefilter:Hn(An),ajaxTransport:Hn(jn),ajax:function(e,n){"object"==typeof e&&(n=e,e=t),n=n||{};var r,i,o,a,s,u,l,c,p=b.ajaxSetup({},n),f=p.context||p,d=p.context&&(f.nodeType||f.jquery)?b(f):b.event,h=b.Deferred(),g=b.Callbacks("once memory"),m=p.statusCode||{},y={},v={},x=0,T="canceled",N={readyState:0,getResponseHeader:function(e){var t;if(2===x){if(!c){c={};while(t=Tn.exec(a))c[t[1].toLowerCase()]=t[2]}t=c[e.toLowerCase()]}return null==t?null:t},getAllResponseHeaders:function(){return 2===x?a:null},setRequestHeader:function(e,t){var n=e.toLowerCase();return x||(e=v[n]=v[n]||e,y[e]=t),this},overrideMimeType:function(e){return x||(p.mimeType=e),this},statusCode:function(e){var t;if(e)if(2>x)for(t in e)m[t]=[m[t],e[t]];else N.always(e[N.status]);return this},abort:function(e){var t=e||T;return l&&l.abort(t),k(0,t),this}};if(h.promise(N).complete=g.add,N.success=N.done,N.error=N.fail,p.url=((e||p.url||yn)+"").replace(xn,"").replace(kn,mn[1]+"//"),p.type=n.method||n.type||p.method||p.type,p.dataTypes=b.trim(p.dataType||"*").toLowerCase().match(w)||[""],null==p.crossDomain&&(r=En.exec(p.url.toLowerCase()),p.crossDomain=!(!r||r[1]===mn[1]&&r[2]===mn[2]&&(r[3]||("http:"===r[1]?80:443))==(mn[3]||("http:"===mn[1]?80:443)))),p.data&&p.processData&&"string"!=typeof p.data&&(p.data=b.param(p.data,p.traditional)),qn(An,p,n,N),2===x)return N;u=p.global,u&&0===b.active++&&b.event.trigger("ajaxStart"),p.type=p.type.toUpperCase(),p.hasContent=!Cn.test(p.type),o=p.url,p.hasContent||(p.data&&(o=p.url+=(bn.test(o)?"&":"?")+p.data,delete p.data),p.cache===!1&&(p.url=wn.test(o)?o.replace(wn,"$1_="+vn++):o+(bn.test(o)?"&":"?")+"_="+vn++)),p.ifModified&&(b.lastModified[o]&&N.setRequestHeader("If-Modified-Since",b.lastModified[o]),b.etag[o]&&N.setRequestHeader("If-None-Match",b.etag[o])),(p.data&&p.hasContent&&p.contentType!==!1||n.contentType)&&N.setRequestHeader("Content-Type",p.contentType),N.setRequestHeader("Accept",p.dataTypes[0]&&p.accepts[p.dataTypes[0]]?p.accepts[p.dataTypes[0]]+("*"!==p.dataTypes[0]?", "+Dn+"; q=0.01":""):p.accepts["*"]);for(i in p.headers)N.setRequestHeader(i,p.headers[i]);if(p.beforeSend&&(p.beforeSend.call(f,N,p)===!1||2===x))return N.abort();T="abort";for(i in{success:1,error:1,complete:1})N[i](p[i]);if(l=qn(jn,p,n,N)){N.readyState=1,u&&d.trigger("ajaxSend",[N,p]),p.async&&p.timeout>0&&(s=setTimeout(function(){N.abort("timeout")},p.timeout));try{x=1,l.send(y,k)}catch(C){if(!(2>x))throw C;k(-1,C)}}else k(-1,"No Transport");function k(e,n,r,i){var c,y,v,w,T,C=n;2!==x&&(x=2,s&&clearTimeout(s),l=t,a=i||"",N.readyState=e>0?4:0,r&&(w=_n(p,N,r)),e>=200&&300>e||304===e?(p.ifModified&&(T=N.getResponseHeader("Last-Modified"),T&&(b.lastModified[o]=T),T=N.getResponseHeader("etag"),T&&(b.etag[o]=T)),204===e?(c=!0,C="nocontent"):304===e?(c=!0,C="notmodified"):(c=Fn(p,w),C=c.state,y=c.data,v=c.error,c=!v)):(v=C,(e||!C)&&(C="error",0>e&&(e=0))),N.status=e,N.statusText=(n||C)+"",c?h.resolveWith(f,[y,C,N]):h.rejectWith(f,[N,C,v]),N.statusCode(m),m=t,u&&d.trigger(c?"ajaxSuccess":"ajaxError",[N,p,c?y:v]),g.fireWith(f,[N,C]),u&&(d.trigger("ajaxComplete",[N,p]),--b.active||b.event.trigger("ajaxStop")))}return N},getScript:function(e,n){return b.get(e,t,n,"script")},getJSON:function(e,t,n){return b.get(e,t,n,"json")}});function _n(e,n,r){var i,o,a,s,u=e.contents,l=e.dataTypes,c=e.responseFields;for(s in c)s in r&&(n[c[s]]=r[s]);while("*"===l[0])l.shift(),o===t&&(o=e.mimeType||n.getResponseHeader("Content-Type"));if(o)for(s in u)if(u[s]&&u[s].test(o)){l.unshift(s);break}if(l[0]in r)a=l[0];else{for(s in r){if(!l[0]||e.converters[s+" "+l[0]]){a=s;break}i||(i=s)}a=a||i}return a?(a!==l[0]&&l.unshift(a),r[a]):t}function Fn(e,t){var n,r,i,o,a={},s=0,u=e.dataTypes.slice(),l=u[0];if(e.dataFilter&&(t=e.dataFilter(t,e.dataType)),u[1])for(i in e.converters)a[i.toLowerCase()]=e.converters[i];for(;r=u[++s];)if("*"!==r){if("*"!==l&&l!==r){if(i=a[l+" "+r]||a["* "+r],!i)for(n in a)if(o=n.split(" "),o[1]===r&&(i=a[l+" "+o[0]]||a["* "+o[0]])){i===!0?i=a[n]:a[n]!==!0&&(r=o[0],u.splice(s--,0,r));break}if(i!==!0)if(i&&e["throws"])t=i(t);else try{t=i(t)}catch(c){return{state:"parsererror",error:i?c:"No conversion from "+l+" to "+r}}}l=r}return{state:"success",data:t}}b.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},converters:{"text script":function(e){return b.globalEval(e),e}}}),b.ajaxPrefilter("script",function(e){e.cache===t&&(e.cache=!1),e.crossDomain&&(e.type="GET",e.global=!1)}),b.ajaxTransport("script",function(e){if(e.crossDomain){var n,r=o.head||b("head")[0]||o.documentElement;return{send:function(t,i){n=o.createElement("script"),n.async=!0,e.scriptCharset&&(n.charset=e.scriptCharset),n.src=e.url,n.onload=n.onreadystatechange=function(e,t){(t||!n.readyState||/loaded|complete/.test(n.readyState))&&(n.onload=n.onreadystatechange=null,n.parentNode&&n.parentNode.removeChild(n),n=null,t||i(200,"success"))},r.insertBefore(n,r.firstChild)},abort:function(){n&&n.onload(t,!0)}}}});var On=[],Bn=/(=)\?(?=&|$)|\?\?/;b.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=On.pop()||b.expando+"_"+vn++;return this[e]=!0,e}}),b.ajaxPrefilter("json jsonp",function(n,r,i){var o,a,s,u=n.jsonp!==!1&&(Bn.test(n.url)?"url":"string"==typeof n.data&&!(n.contentType||"").indexOf("application/x-www-form-urlencoded")&&Bn.test(n.data)&&"data");return u||"jsonp"===n.dataTypes[0]?(o=n.jsonpCallback=b.isFunction(n.jsonpCallback)?n.jsonpCallback():n.jsonpCallback,u?n[u]=n[u].replace(Bn,"$1"+o):n.jsonp!==!1&&(n.url+=(bn.test(n.url)?"&":"?")+n.jsonp+"="+o),n.converters["script json"]=function(){return s||b.error(o+" was not called"),s[0]},n.dataTypes[0]="json",a=e[o],e[o]=function(){s=arguments},i.always(function(){e[o]=a,n[o]&&(n.jsonpCallback=r.jsonpCallback,On.push(o)),s&&b.isFunction(a)&&a(s[0]),s=a=t}),"script"):t});var Pn,Rn,Wn=0,$n=e.ActiveXObject&&function(){var e;for(e in Pn)Pn[e](t,!0)};function In(){try{return new e.XMLHttpRequest}catch(t){}}function zn(){try{return new e.ActiveXObject("Microsoft.XMLHTTP")}catch(t){}}b.ajaxSettings.xhr=e.ActiveXObject?function(){return!this.isLocal&&In()||zn()}:In,Rn=b.ajaxSettings.xhr(),b.support.cors=!!Rn&&"withCredentials"in Rn,Rn=b.support.ajax=!!Rn,Rn&&b.ajaxTransport(function(n){if(!n.crossDomain||b.support.cors){var r;return{send:function(i,o){var a,s,u=n.xhr();if(n.username?u.open(n.type,n.url,n.async,n.username,n.password):u.open(n.type,n.url,n.async),n.xhrFields)for(s in n.xhrFields)u[s]=n.xhrFields[s];n.mimeType&&u.overrideMimeType&&u.overrideMimeType(n.mimeType),n.crossDomain||i["X-Requested-With"]||(i["X-Requested-With"]="XMLHttpRequest");try{for(s in i)u.setRequestHeader(s,i[s])}catch(l){}u.send(n.hasContent&&n.data||null),r=function(e,i){var s,l,c,p;try{if(r&&(i||4===u.readyState))if(r=t,a&&(u.onreadystatechange=b.noop,$n&&delete Pn[a]),i)4!==u.readyState&&u.abort();else{p={},s=u.status,l=u.getAllResponseHeaders(),"string"==typeof u.responseText&&(p.text=u.responseText);try{c=u.statusText}catch(f){c=""}s||!n.isLocal||n.crossDomain?1223===s&&(s=204):s=p.text?200:404}}catch(d){i||o(-1,d)}p&&o(s,c,p,l)},n.async?4===u.readyState?setTimeout(r):(a=++Wn,$n&&(Pn||(Pn={},b(e).unload($n)),Pn[a]=r),u.onreadystatechange=r):r()},abort:function(){r&&r(t,!0)}}}});var Xn,Un,Vn=/^(?:toggle|show|hide)$/,Yn=RegExp("^(?:([+-])=|)("+x+")([a-z%]*)$","i"),Jn=/queueHooks$/,Gn=[nr],Qn={"*":[function(e,t){var n,r,i=this.createTween(e,t),o=Yn.exec(t),a=i.cur(),s=+a||0,u=1,l=20;if(o){if(n=+o[2],r=o[3]||(b.cssNumber[e]?"":"px"),"px"!==r&&s){s=b.css(i.elem,e,!0)||n||1;do u=u||".5",s/=u,b.style(i.elem,e,s+r);while(u!==(u=i.cur()/a)&&1!==u&&--l)}i.unit=r,i.start=s,i.end=o[1]?s+(o[1]+1)*n:n}return i}]};function Kn(){return setTimeout(function(){Xn=t}),Xn=b.now()}function Zn(e,t){b.each(t,function(t,n){var r=(Qn[t]||[]).concat(Qn["*"]),i=0,o=r.length;for(;o>i;i++)if(r[i].call(e,t,n))return})}function er(e,t,n){var r,i,o=0,a=Gn.length,s=b.Deferred().always(function(){delete u.elem}),u=function(){if(i)return!1;var t=Xn||Kn(),n=Math.max(0,l.startTime+l.duration-t),r=n/l.duration||0,o=1-r,a=0,u=l.tweens.length;for(;u>a;a++)l.tweens[a].run(o);return s.notifyWith(e,[l,o,n]),1>o&&u?n:(s.resolveWith(e,[l]),!1)},l=s.promise({elem:e,props:b.extend({},t),opts:b.extend(!0,{specialEasing:{}},n),originalProperties:t,originalOptions:n,startTime:Xn||Kn(),duration:n.duration,tweens:[],createTween:function(t,n){var r=b.Tween(e,l.opts,t,n,l.opts.specialEasing[t]||l.opts.easing);return l.tweens.push(r),r},stop:function(t){var n=0,r=t?l.tweens.length:0;if(i)return this;for(i=!0;r>n;n++)l.tweens[n].run(1);return t?s.resolveWith(e,[l,t]):s.rejectWith(e,[l,t]),this}}),c=l.props;for(tr(c,l.opts.specialEasing);a>o;o++)if(r=Gn[o].call(l,e,c,l.opts))return r;return Zn(l,c),b.isFunction(l.opts.start)&&l.opts.start.call(e,l),b.fx.timer(b.extend(u,{elem:e,anim:l,queue:l.opts.queue})),l.progress(l.opts.progress).done(l.opts.done,l.opts.complete).fail(l.opts.fail).always(l.opts.always)}function tr(e,t){var n,r,i,o,a;for(i in e)if(r=b.camelCase(i),o=t[r],n=e[i],b.isArray(n)&&(o=n[1],n=e[i]=n[0]),i!==r&&(e[r]=n,delete e[i]),a=b.cssHooks[r],a&&"expand"in a){n=a.expand(n),delete e[r];for(i in n)i in e||(e[i]=n[i],t[i]=o)}else t[r]=o}b.Animation=b.extend(er,{tweener:function(e,t){b.isFunction(e)?(t=e,e=["*"]):e=e.split(" ");var n,r=0,i=e.length;for(;i>r;r++)n=e[r],Qn[n]=Qn[n]||[],Qn[n].unshift(t)},prefilter:function(e,t){t?Gn.unshift(e):Gn.push(e)}});function nr(e,t,n){var r,i,o,a,s,u,l,c,p,f=this,d=e.style,h={},g=[],m=e.nodeType&&nn(e);n.queue||(c=b._queueHooks(e,"fx"),null==c.unqueued&&(c.unqueued=0,p=c.empty.fire,c.empty.fire=function(){c.unqueued||p()}),c.unqueued++,f.always(function(){f.always(function(){c.unqueued--,b.queue(e,"fx").length||c.empty.fire()})})),1===e.nodeType&&("height"in t||"width"in t)&&(n.overflow=[d.overflow,d.overflowX,d.overflowY],"inline"===b.css(e,"display")&&"none"===b.css(e,"float")&&(b.support.inlineBlockNeedsLayout&&"inline"!==un(e.nodeName)?d.zoom=1:d.display="inline-block")),n.overflow&&(d.overflow="hidden",b.support.shrinkWrapBlocks||f.always(function(){d.overflow=n.overflow[0],d.overflowX=n.overflow[1],d.overflowY=n.overflow[2]}));for(i in t)if(a=t[i],Vn.exec(a)){if(delete t[i],u=u||"toggle"===a,a===(m?"hide":"show"))continue;g.push(i)}if(o=g.length){s=b._data(e,"fxshow")||b._data(e,"fxshow",{}),"hidden"in s&&(m=s.hidden),u&&(s.hidden=!m),m?b(e).show():f.done(function(){b(e).hide()}),f.done(function(){var t;b._removeData(e,"fxshow");for(t in h)b.style(e,t,h[t])});for(i=0;o>i;i++)r=g[i],l=f.createTween(r,m?s[r]:0),h[r]=s[r]||b.style(e,r),r in s||(s[r]=l.start,m&&(l.end=l.start,l.start="width"===r||"height"===r?1:0))}}function rr(e,t,n,r,i){return new rr.prototype.init(e,t,n,r,i)}b.Tween=rr,rr.prototype={constructor:rr,init:function(e,t,n,r,i,o){this.elem=e,this.prop=n,this.easing=i||"swing",this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=o||(b.cssNumber[n]?"":"px")},cur:function(){var e=rr.propHooks[this.prop];return e&&e.get?e.get(this):rr.propHooks._default.get(this)},run:function(e){var t,n=rr.propHooks[this.prop];return this.pos=t=this.options.duration?b.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):rr.propHooks._default.set(this),this}},rr.prototype.init.prototype=rr.prototype,rr.propHooks={_default:{get:function(e){var t;return null==e.elem[e.prop]||e.elem.style&&null!=e.elem.style[e.prop]?(t=b.css(e.elem,e.prop,""),t&&"auto"!==t?t:0):e.elem[e.prop]},set:function(e){b.fx.step[e.prop]?b.fx.step[e.prop](e):e.elem.style&&(null!=e.elem.style[b.cssProps[e.prop]]||b.cssHooks[e.prop])?b.style(e.elem,e.prop,e.now+e.unit):e.elem[e.prop]=e.now}}},rr.propHooks.scrollTop=rr.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},b.each(["toggle","show","hide"],function(e,t){var n=b.fn[t];b.fn[t]=function(e,r,i){return null==e||"boolean"==typeof e?n.apply(this,arguments):this.animate(ir(t,!0),e,r,i)}}),b.fn.extend({fadeTo:function(e,t,n,r){return this.filter(nn).css("opacity",0).show().end().animate({opacity:t},e,n,r)},animate:function(e,t,n,r){var i=b.isEmptyObject(e),o=b.speed(t,n,r),a=function(){var t=er(this,b.extend({},e),o);a.finish=function(){t.stop(!0)},(i||b._data(this,"finish"))&&t.stop(!0)};return a.finish=a,i||o.queue===!1?this.each(a):this.queue(o.queue,a)},stop:function(e,n,r){var i=function(e){var t=e.stop;delete e.stop,t(r)};return"string"!=typeof e&&(r=n,n=e,e=t),n&&e!==!1&&this.queue(e||"fx",[]),this.each(function(){var t=!0,n=null!=e&&e+"queueHooks",o=b.timers,a=b._data(this);if(n)a[n]&&a[n].stop&&i(a[n]);else for(n in a)a[n]&&a[n].stop&&Jn.test(n)&&i(a[n]);for(n=o.length;n--;)o[n].elem!==this||null!=e&&o[n].queue!==e||(o[n].anim.stop(r),t=!1,o.splice(n,1));(t||!r)&&b.dequeue(this,e)})},finish:function(e){return e!==!1&&(e=e||"fx"),this.each(function(){var t,n=b._data(this),r=n[e+"queue"],i=n[e+"queueHooks"],o=b.timers,a=r?r.length:0;for(n.finish=!0,b.queue(this,e,[]),i&&i.cur&&i.cur.finish&&i.cur.finish.call(this),t=o.length;t--;)o[t].elem===this&&o[t].queue===e&&(o[t].anim.stop(!0),o.splice(t,1));for(t=0;a>t;t++)r[t]&&r[t].finish&&r[t].finish.call(this);delete n.finish})}});function ir(e,t){var n,r={height:e},i=0;for(t=t?1:0;4>i;i+=2-t)n=Zt[i],r["margin"+n]=r["padding"+n]=e;return t&&(r.opacity=r.width=e),r}b.each({slideDown:ir("show"),slideUp:ir("hide"),slideToggle:ir("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,t){b.fn[e]=function(e,n,r){return this.animate(t,e,n,r)}}),b.speed=function(e,t,n){var r=e&&"object"==typeof e?b.extend({},e):{complete:n||!n&&t||b.isFunction(e)&&e,duration:e,easing:n&&t||t&&!b.isFunction(t)&&t};return r.duration=b.fx.off?0:"number"==typeof r.duration?r.duration:r.duration in b.fx.speeds?b.fx.speeds[r.duration]:b.fx.speeds._default,(null==r.queue||r.queue===!0)&&(r.queue="fx"),r.old=r.complete,r.complete=function(){b.isFunction(r.old)&&r.old.call(this),r.queue&&b.dequeue(this,r.queue)},r},b.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2}},b.timers=[],b.fx=rr.prototype.init,b.fx.tick=function(){var e,n=b.timers,r=0;for(Xn=b.now();n.length>r;r++)e=n[r],e()||n[r]!==e||n.splice(r--,1);n.length||b.fx.stop(),Xn=t},b.fx.timer=function(e){e()&&b.timers.push(e)&&b.fx.start()},b.fx.interval=13,b.fx.start=function(){Un||(Un=setInterval(b.fx.tick,b.fx.interval))},b.fx.stop=function(){clearInterval(Un),Un=null},b.fx.speeds={slow:600,fast:200,_default:400},b.fx.step={},b.expr&&b.expr.filters&&(b.expr.filters.animated=function(e){return b.grep(b.timers,function(t){return e===t.elem}).length}),b.fn.offset=function(e){if(arguments.length)return e===t?this:this.each(function(t){b.offset.setOffset(this,e,t)});var n,r,o={top:0,left:0},a=this[0],s=a&&a.ownerDocument;if(s)return n=s.documentElement,b.contains(n,a)?(typeof a.getBoundingClientRect!==i&&(o=a.getBoundingClientRect()),r=or(s),{top:o.top+(r.pageYOffset||n.scrollTop)-(n.clientTop||0),left:o.left+(r.pageXOffset||n.scrollLeft)-(n.clientLeft||0)}):o},b.offset={setOffset:function(e,t,n){var r=b.css(e,"position");"static"===r&&(e.style.position="relative");var i=b(e),o=i.offset(),a=b.css(e,"top"),s=b.css(e,"left"),u=("absolute"===r||"fixed"===r)&&b.inArray("auto",[a,s])>-1,l={},c={},p,f;u?(c=i.position(),p=c.top,f=c.left):(p=parseFloat(a)||0,f=parseFloat(s)||0),b.isFunction(t)&&(t=t.call(e,n,o)),null!=t.top&&(l.top=t.top-o.top+p),null!=t.left&&(l.left=t.left-o.left+f),"using"in t?t.using.call(e,l):i.css(l)}},b.fn.extend({position:function(){if(this[0]){var e,t,n={top:0,left:0},r=this[0];return"fixed"===b.css(r,"position")?t=r.getBoundingClientRect():(e=this.offsetParent(),t=this.offset(),b.nodeName(e[0],"html")||(n=e.offset()),n.top+=b.css(e[0],"borderTopWidth",!0),n.left+=b.css(e[0],"borderLeftWidth",!0)),{top:t.top-n.top-b.css(r,"marginTop",!0),left:t.left-n.left-b.css(r,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){var e=this.offsetParent||o.documentElement;while(e&&!b.nodeName(e,"html")&&"static"===b.css(e,"position"))e=e.offsetParent;return e||o.documentElement})}}),b.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(e,n){var r=/Y/.test(n);b.fn[e]=function(i){return b.access(this,function(e,i,o){var a=or(e);return o===t?a?n in a?a[n]:a.document.documentElement[i]:e[i]:(a?a.scrollTo(r?b(a).scrollLeft():o,r?o:b(a).scrollTop()):e[i]=o,t)},e,i,arguments.length,null)}});function or(e){return b.isWindow(e)?e:9===e.nodeType?e.defaultView||e.parentWindow:!1}b.each({Height:"height",Width:"width"},function(e,n){b.each({padding:"inner"+e,content:n,"":"outer"+e},function(r,i){b.fn[i]=function(i,o){var a=arguments.length&&(r||"boolean"!=typeof i),s=r||(i===!0||o===!0?"margin":"border");return b.access(this,function(n,r,i){var o;return b.isWindow(n)?n.document.documentElement["client"+e]:9===n.nodeType?(o=n.documentElement,Math.max(n.body["scroll"+e],o["scroll"+e],n.body["offset"+e],o["offset"+e],o["client"+e])):i===t?b.css(n,r,s):b.style(n,r,i,s)},n,a?i:t,a,null)}})}),e.jQuery=e.$=b,"function"==typeof define&&define.amd&&define.amd.jQuery&&define("jquery",[],function(){return b})})(window);
/*!
 * Bootstrap v3.3.6 (http://getbootstrap.com)
 * Copyright 2011-2015 Twitter, Inc.
 * Licensed under the MIT license
 */
if("undefined"==typeof jQuery)throw new Error("Bootstrap's JavaScript requires jQuery");+function(a){"use strict";var b=a.fn.jquery.split(" ")[0].split(".");if(b[0]<2&&b[1]<9||1==b[0]&&9==b[1]&&b[2]<1||b[0]>2)throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 3")}(jQuery),+function(a){"use strict";function b(){var a=document.createElement("bootstrap"),b={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"};for(var c in b)if(void 0!==a.style[c])return{end:b[c]};return!1}a.fn.emulateTransitionEnd=function(b){var c=!1,d=this;a(this).one("bsTransitionEnd",function(){c=!0});var e=function(){c||a(d).trigger(a.support.transition.end)};return setTimeout(e,b),this},a(function(){a.support.transition=b(),a.support.transition&&(a.event.special.bsTransitionEnd={bindType:a.support.transition.end,delegateType:a.support.transition.end,handle:function(b){return a(b.target).is(this)?b.handleObj.handler.apply(this,arguments):void 0}})})}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var c=a(this),e=c.data("bs.alert");e||c.data("bs.alert",e=new d(this)),"string"==typeof b&&e[b].call(c)})}var c='[data-dismiss="alert"]',d=function(b){a(b).on("click",c,this.close)};d.VERSION="3.3.6",d.TRANSITION_DURATION=150,d.prototype.close=function(b){function c(){g.detach().trigger("closed.bs.alert").remove()}var e=a(this),f=e.attr("data-target");f||(f=e.attr("href"),f=f&&f.replace(/.*(?=#[^\s]*$)/,""));var g=a(f);b&&b.preventDefault(),g.length||(g=e.closest(".alert")),g.trigger(b=a.Event("close.bs.alert")),b.isDefaultPrevented()||(g.removeClass("in"),a.support.transition&&g.hasClass("fade")?g.one("bsTransitionEnd",c).emulateTransitionEnd(d.TRANSITION_DURATION):c())};var e=a.fn.alert;a.fn.alert=b,a.fn.alert.Constructor=d,a.fn.alert.noConflict=function(){return a.fn.alert=e,this},a(document).on("click.bs.alert.data-api",c,d.prototype.close)}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("bs.button"),f="object"==typeof b&&b;e||d.data("bs.button",e=new c(this,f)),"toggle"==b?e.toggle():b&&e.setState(b)})}var c=function(b,d){this.$element=a(b),this.options=a.extend({},c.DEFAULTS,d),this.isLoading=!1};c.VERSION="3.3.6",c.DEFAULTS={loadingText:"loading..."},c.prototype.setState=function(b){var c="disabled",d=this.$element,e=d.is("input")?"val":"html",f=d.data();b+="Text",null==f.resetText&&d.data("resetText",d[e]()),setTimeout(a.proxy(function(){d[e](null==f[b]?this.options[b]:f[b]),"loadingText"==b?(this.isLoading=!0,d.addClass(c).attr(c,c)):this.isLoading&&(this.isLoading=!1,d.removeClass(c).removeAttr(c))},this),0)},c.prototype.toggle=function(){var a=!0,b=this.$element.closest('[data-toggle="buttons"]');if(b.length){var c=this.$element.find("input");"radio"==c.prop("type")?(c.prop("checked")&&(a=!1),b.find(".active").removeClass("active"),this.$element.addClass("active")):"checkbox"==c.prop("type")&&(c.prop("checked")!==this.$element.hasClass("active")&&(a=!1),this.$element.toggleClass("active")),c.prop("checked",this.$element.hasClass("active")),a&&c.trigger("change")}else this.$element.attr("aria-pressed",!this.$element.hasClass("active")),this.$element.toggleClass("active")};var d=a.fn.button;a.fn.button=b,a.fn.button.Constructor=c,a.fn.button.noConflict=function(){return a.fn.button=d,this},a(document).on("click.bs.button.data-api",'[data-toggle^="button"]',function(c){var d=a(c.target);d.hasClass("btn")||(d=d.closest(".btn")),b.call(d,"toggle"),a(c.target).is('input[type="radio"]')||a(c.target).is('input[type="checkbox"]')||c.preventDefault()}).on("focus.bs.button.data-api blur.bs.button.data-api",'[data-toggle^="button"]',function(b){a(b.target).closest(".btn").toggleClass("focus",/^focus(in)?$/.test(b.type))})}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("bs.carousel"),f=a.extend({},c.DEFAULTS,d.data(),"object"==typeof b&&b),g="string"==typeof b?b:f.slide;e||d.data("bs.carousel",e=new c(this,f)),"number"==typeof b?e.to(b):g?e[g]():f.interval&&e.pause().cycle()})}var c=function(b,c){this.$element=a(b),this.$indicators=this.$element.find(".carousel-indicators"),this.options=c,this.paused=null,this.sliding=null,this.interval=null,this.$active=null,this.$items=null,this.options.keyboard&&this.$element.on("keydown.bs.carousel",a.proxy(this.keydown,this)),"hover"==this.options.pause&&!("ontouchstart"in document.documentElement)&&this.$element.on("mouseenter.bs.carousel",a.proxy(this.pause,this)).on("mouseleave.bs.carousel",a.proxy(this.cycle,this))};c.VERSION="3.3.6",c.TRANSITION_DURATION=600,c.DEFAULTS={interval:5e3,pause:"hover",wrap:!0,keyboard:!0},c.prototype.keydown=function(a){if(!/input|textarea/i.test(a.target.tagName)){switch(a.which){case 37:this.prev();break;case 39:this.next();break;default:return}a.preventDefault()}},c.prototype.cycle=function(b){return b||(this.paused=!1),this.interval&&clearInterval(this.interval),this.options.interval&&!this.paused&&(this.interval=setInterval(a.proxy(this.next,this),this.options.interval)),this},c.prototype.getItemIndex=function(a){return this.$items=a.parent().children(".item"),this.$items.index(a||this.$active)},c.prototype.getItemForDirection=function(a,b){var c=this.getItemIndex(b),d="prev"==a&&0===c||"next"==a&&c==this.$items.length-1;if(d&&!this.options.wrap)return b;var e="prev"==a?-1:1,f=(c+e)%this.$items.length;return this.$items.eq(f)},c.prototype.to=function(a){var b=this,c=this.getItemIndex(this.$active=this.$element.find(".item.active"));return a>this.$items.length-1||0>a?void 0:this.sliding?this.$element.one("slid.bs.carousel",function(){b.to(a)}):c==a?this.pause().cycle():this.slide(a>c?"next":"prev",this.$items.eq(a))},c.prototype.pause=function(b){return b||(this.paused=!0),this.$element.find(".next, .prev").length&&a.support.transition&&(this.$element.trigger(a.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},c.prototype.next=function(){return this.sliding?void 0:this.slide("next")},c.prototype.prev=function(){return this.sliding?void 0:this.slide("prev")},c.prototype.slide=function(b,d){var e=this.$element.find(".item.active"),f=d||this.getItemForDirection(b,e),g=this.interval,h="next"==b?"left":"right",i=this;if(f.hasClass("active"))return this.sliding=!1;var j=f[0],k=a.Event("slide.bs.carousel",{relatedTarget:j,direction:h});if(this.$element.trigger(k),!k.isDefaultPrevented()){if(this.sliding=!0,g&&this.pause(),this.$indicators.length){this.$indicators.find(".active").removeClass("active");var l=a(this.$indicators.children()[this.getItemIndex(f)]);l&&l.addClass("active")}var m=a.Event("slid.bs.carousel",{relatedTarget:j,direction:h});return a.support.transition&&this.$element.hasClass("slide")?(f.addClass(b),f[0].offsetWidth,e.addClass(h),f.addClass(h),e.one("bsTransitionEnd",function(){f.removeClass([b,h].join(" ")).addClass("active"),e.removeClass(["active",h].join(" ")),i.sliding=!1,setTimeout(function(){i.$element.trigger(m)},0)}).emulateTransitionEnd(c.TRANSITION_DURATION)):(e.removeClass("active"),f.addClass("active"),this.sliding=!1,this.$element.trigger(m)),g&&this.cycle(),this}};var d=a.fn.carousel;a.fn.carousel=b,a.fn.carousel.Constructor=c,a.fn.carousel.noConflict=function(){return a.fn.carousel=d,this};var e=function(c){var d,e=a(this),f=a(e.attr("data-target")||(d=e.attr("href"))&&d.replace(/.*(?=#[^\s]+$)/,""));if(f.hasClass("carousel")){var g=a.extend({},f.data(),e.data()),h=e.attr("data-slide-to");h&&(g.interval=!1),b.call(f,g),h&&f.data("bs.carousel").to(h),c.preventDefault()}};a(document).on("click.bs.carousel.data-api","[data-slide]",e).on("click.bs.carousel.data-api","[data-slide-to]",e),a(window).on("load",function(){a('[data-ride="carousel"]').each(function(){var c=a(this);b.call(c,c.data())})})}(jQuery),+function(a){"use strict";function b(b){var c,d=b.attr("data-target")||(c=b.attr("href"))&&c.replace(/.*(?=#[^\s]+$)/,"");return a(d)}function c(b){return this.each(function(){var c=a(this),e=c.data("bs.collapse"),f=a.extend({},d.DEFAULTS,c.data(),"object"==typeof b&&b);!e&&f.toggle&&/show|hide/.test(b)&&(f.toggle=!1),e||c.data("bs.collapse",e=new d(this,f)),"string"==typeof b&&e[b]()})}var d=function(b,c){this.$element=a(b),this.options=a.extend({},d.DEFAULTS,c),this.$trigger=a('[data-toggle="collapse"][href="#'+b.id+'"],[data-toggle="collapse"][data-target="#'+b.id+'"]'),this.transitioning=null,this.options.parent?this.$parent=this.getParent():this.addAriaAndCollapsedClass(this.$element,this.$trigger),this.options.toggle&&this.toggle()};d.VERSION="3.3.6",d.TRANSITION_DURATION=350,d.DEFAULTS={toggle:!0},d.prototype.dimension=function(){var a=this.$element.hasClass("width");return a?"width":"height"},d.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass("in")){var b,e=this.$parent&&this.$parent.children(".panel").children(".in, .collapsing");if(!(e&&e.length&&(b=e.data("bs.collapse"),b&&b.transitioning))){var f=a.Event("show.bs.collapse");if(this.$element.trigger(f),!f.isDefaultPrevented()){e&&e.length&&(c.call(e,"hide"),b||e.data("bs.collapse",null));var g=this.dimension();this.$element.removeClass("collapse").addClass("collapsing")[g](0).attr("aria-expanded",!0),this.$trigger.removeClass("collapsed").attr("aria-expanded",!0),this.transitioning=1;var h=function(){this.$element.removeClass("collapsing").addClass("collapse in")[g](""),this.transitioning=0,this.$element.trigger("shown.bs.collapse")};if(!a.support.transition)return h.call(this);var i=a.camelCase(["scroll",g].join("-"));this.$element.one("bsTransitionEnd",a.proxy(h,this)).emulateTransitionEnd(d.TRANSITION_DURATION)[g](this.$element[0][i])}}}},d.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass("in")){var b=a.Event("hide.bs.collapse");if(this.$element.trigger(b),!b.isDefaultPrevented()){var c=this.dimension();this.$element[c](this.$element[c]())[0].offsetHeight,this.$element.addClass("collapsing").removeClass("collapse in").attr("aria-expanded",!1),this.$trigger.addClass("collapsed").attr("aria-expanded",!1),this.transitioning=1;var e=function(){this.transitioning=0,this.$element.removeClass("collapsing").addClass("collapse").trigger("hidden.bs.collapse")};return a.support.transition?void this.$element[c](0).one("bsTransitionEnd",a.proxy(e,this)).emulateTransitionEnd(d.TRANSITION_DURATION):e.call(this)}}},d.prototype.toggle=function(){this[this.$element.hasClass("in")?"hide":"show"]()},d.prototype.getParent=function(){return a(this.options.parent).find('[data-toggle="collapse"][data-parent="'+this.options.parent+'"]').each(a.proxy(function(c,d){var e=a(d);this.addAriaAndCollapsedClass(b(e),e)},this)).end()},d.prototype.addAriaAndCollapsedClass=function(a,b){var c=a.hasClass("in");a.attr("aria-expanded",c),b.toggleClass("collapsed",!c).attr("aria-expanded",c)};var e=a.fn.collapse;a.fn.collapse=c,a.fn.collapse.Constructor=d,a.fn.collapse.noConflict=function(){return a.fn.collapse=e,this},a(document).on("click.bs.collapse.data-api",'[data-toggle="collapse"]',function(d){var e=a(this);e.attr("data-target")||d.preventDefault();var f=b(e),g=f.data("bs.collapse"),h=g?"toggle":e.data();c.call(f,h)})}(jQuery),+function(a){"use strict";function b(b){var c=b.attr("data-target");c||(c=b.attr("href"),c=c&&/#[A-Za-z]/.test(c)&&c.replace(/.*(?=#[^\s]*$)/,""));var d=c&&a(c);return d&&d.length?d:b.parent()}function c(c){c&&3===c.which||(a(e).remove(),a(f).each(function(){var d=a(this),e=b(d),f={relatedTarget:this};e.hasClass("open")&&(c&&"click"==c.type&&/input|textarea/i.test(c.target.tagName)&&a.contains(e[0],c.target)||(e.trigger(c=a.Event("hide.bs.dropdown",f)),c.isDefaultPrevented()||(d.attr("aria-expanded","false"),e.removeClass("open").trigger(a.Event("hidden.bs.dropdown",f)))))}))}function d(b){return this.each(function(){var c=a(this),d=c.data("bs.dropdown");d||c.data("bs.dropdown",d=new g(this)),"string"==typeof b&&d[b].call(c)})}var e=".dropdown-backdrop",f='[data-toggle="dropdown"]',g=function(b){a(b).on("click.bs.dropdown",this.toggle)};g.VERSION="3.3.6",g.prototype.toggle=function(d){var e=a(this);if(!e.is(".disabled, :disabled")){var f=b(e),g=f.hasClass("open");if(c(),!g){"ontouchstart"in document.documentElement&&!f.closest(".navbar-nav").length&&a(document.createElement("div")).addClass("dropdown-backdrop").insertAfter(a(this)).on("click",c);var h={relatedTarget:this};if(f.trigger(d=a.Event("show.bs.dropdown",h)),d.isDefaultPrevented())return;e.trigger("focus").attr("aria-expanded","true"),f.toggleClass("open").trigger(a.Event("shown.bs.dropdown",h))}return!1}},g.prototype.keydown=function(c){if(/(38|40|27|32)/.test(c.which)&&!/input|textarea/i.test(c.target.tagName)){var d=a(this);if(c.preventDefault(),c.stopPropagation(),!d.is(".disabled, :disabled")){var e=b(d),g=e.hasClass("open");if(!g&&27!=c.which||g&&27==c.which)return 27==c.which&&e.find(f).trigger("focus"),d.trigger("click");var h=" li:not(.disabled):visible a",i=e.find(".dropdown-menu"+h);if(i.length){var j=i.index(c.target);38==c.which&&j>0&&j--,40==c.which&&j<i.length-1&&j++,~j||(j=0),i.eq(j).trigger("focus")}}}};var h=a.fn.dropdown;a.fn.dropdown=d,a.fn.dropdown.Constructor=g,a.fn.dropdown.noConflict=function(){return a.fn.dropdown=h,this},a(document).on("click.bs.dropdown.data-api",c).on("click.bs.dropdown.data-api",".dropdown form",function(a){a.stopPropagation()}).on("click.bs.dropdown.data-api",f,g.prototype.toggle).on("keydown.bs.dropdown.data-api",f,g.prototype.keydown).on("keydown.bs.dropdown.data-api",".dropdown-menu",g.prototype.keydown)}(jQuery),+function(a){"use strict";function b(b,d){return this.each(function(){var e=a(this),f=e.data("bs.modal"),g=a.extend({},c.DEFAULTS,e.data(),"object"==typeof b&&b);f||e.data("bs.modal",f=new c(this,g)),"string"==typeof b?f[b](d):g.show&&f.show(d)})}var c=function(b,c){this.options=c,this.$body=a(document.body),this.$element=a(b),this.$dialog=this.$element.find(".modal-dialog"),this.$backdrop=null,this.isShown=null,this.originalBodyPad=null,this.scrollbarWidth=0,this.ignoreBackdropClick=!1,this.options.remote&&this.$element.find(".modal-content").load(this.options.remote,a.proxy(function(){this.$element.trigger("loaded.bs.modal")},this))};c.VERSION="3.3.6",c.TRANSITION_DURATION=300,c.BACKDROP_TRANSITION_DURATION=150,c.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},c.prototype.toggle=function(a){return this.isShown?this.hide():this.show(a)},c.prototype.show=function(b){var d=this,e=a.Event("show.bs.modal",{relatedTarget:b});this.$element.trigger(e),this.isShown||e.isDefaultPrevented()||(this.isShown=!0,this.checkScrollbar(),this.setScrollbar(),this.$body.addClass("modal-open"),this.escape(),this.resize(),this.$element.on("click.dismiss.bs.modal",'[data-dismiss="modal"]',a.proxy(this.hide,this)),this.$dialog.on("mousedown.dismiss.bs.modal",function(){d.$element.one("mouseup.dismiss.bs.modal",function(b){a(b.target).is(d.$element)&&(d.ignoreBackdropClick=!0)})}),this.backdrop(function(){var e=a.support.transition&&d.$element.hasClass("fade");d.$element.parent().length||d.$element.appendTo(d.$body),d.$element.show().scrollTop(0),d.adjustDialog(),e&&d.$element[0].offsetWidth,d.$element.addClass("in"),d.enforceFocus();var f=a.Event("shown.bs.modal",{relatedTarget:b});e?d.$dialog.one("bsTransitionEnd",function(){d.$element.trigger("focus").trigger(f)}).emulateTransitionEnd(c.TRANSITION_DURATION):d.$element.trigger("focus").trigger(f)}))},c.prototype.hide=function(b){b&&b.preventDefault(),b=a.Event("hide.bs.modal"),this.$element.trigger(b),this.isShown&&!b.isDefaultPrevented()&&(this.isShown=!1,this.escape(),this.resize(),a(document).off("focusin.bs.modal"),this.$element.removeClass("in").off("click.dismiss.bs.modal").off("mouseup.dismiss.bs.modal"),this.$dialog.off("mousedown.dismiss.bs.modal"),a.support.transition&&this.$element.hasClass("fade")?this.$element.one("bsTransitionEnd",a.proxy(this.hideModal,this)).emulateTransitionEnd(c.TRANSITION_DURATION):this.hideModal())},c.prototype.enforceFocus=function(){a(document).off("focusin.bs.modal").on("focusin.bs.modal",a.proxy(function(a){this.$element[0]===a.target||this.$element.has(a.target).length||this.$element.trigger("focus")},this))},c.prototype.escape=function(){this.isShown&&this.options.keyboard?this.$element.on("keydown.dismiss.bs.modal",a.proxy(function(a){27==a.which&&this.hide()},this)):this.isShown||this.$element.off("keydown.dismiss.bs.modal")},c.prototype.resize=function(){this.isShown?a(window).on("resize.bs.modal",a.proxy(this.handleUpdate,this)):a(window).off("resize.bs.modal")},c.prototype.hideModal=function(){var a=this;this.$element.hide(),this.backdrop(function(){a.$body.removeClass("modal-open"),a.resetAdjustments(),a.resetScrollbar(),a.$element.trigger("hidden.bs.modal")})},c.prototype.removeBackdrop=function(){this.$backdrop&&this.$backdrop.remove(),this.$backdrop=null},c.prototype.backdrop=function(b){var d=this,e=this.$element.hasClass("fade")?"fade":"";if(this.isShown&&this.options.backdrop){var f=a.support.transition&&e;if(this.$backdrop=a(document.createElement("div")).addClass("modal-backdrop "+e).appendTo(this.$body),this.$element.on("click.dismiss.bs.modal",a.proxy(function(a){return this.ignoreBackdropClick?void(this.ignoreBackdropClick=!1):void(a.target===a.currentTarget&&("static"==this.options.backdrop?this.$element[0].focus():this.hide()))},this)),f&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass("in"),!b)return;f?this.$backdrop.one("bsTransitionEnd",b).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION):b()}else if(!this.isShown&&this.$backdrop){this.$backdrop.removeClass("in");var g=function(){d.removeBackdrop(),b&&b()};a.support.transition&&this.$element.hasClass("fade")?this.$backdrop.one("bsTransitionEnd",g).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION):g()}else b&&b()},c.prototype.handleUpdate=function(){this.adjustDialog()},c.prototype.adjustDialog=function(){var a=this.$element[0].scrollHeight>document.documentElement.clientHeight;this.$element.css({paddingLeft:!this.bodyIsOverflowing&&a?this.scrollbarWidth:"",paddingRight:this.bodyIsOverflowing&&!a?this.scrollbarWidth:""})},c.prototype.resetAdjustments=function(){this.$element.css({paddingLeft:"",paddingRight:""})},c.prototype.checkScrollbar=function(){var a=window.innerWidth;if(!a){var b=document.documentElement.getBoundingClientRect();a=b.right-Math.abs(b.left)}this.bodyIsOverflowing=document.body.clientWidth<a,this.scrollbarWidth=this.measureScrollbar()},c.prototype.setScrollbar=function(){var a=parseInt(this.$body.css("padding-right")||0,10);this.originalBodyPad=document.body.style.paddingRight||"",this.bodyIsOverflowing&&this.$body.css("padding-right",a+this.scrollbarWidth)},c.prototype.resetScrollbar=function(){this.$body.css("padding-right",this.originalBodyPad)},c.prototype.measureScrollbar=function(){var a=document.createElement("div");a.className="modal-scrollbar-measure",this.$body.append(a);var b=a.offsetWidth-a.clientWidth;return this.$body[0].removeChild(a),b};var d=a.fn.modal;a.fn.modal=b,a.fn.modal.Constructor=c,a.fn.modal.noConflict=function(){return a.fn.modal=d,this},a(document).on("click.bs.modal.data-api",'[data-toggle="modal"]',function(c){var d=a(this),e=d.attr("href"),f=a(d.attr("data-target")||e&&e.replace(/.*(?=#[^\s]+$)/,"")),g=f.data("bs.modal")?"toggle":a.extend({remote:!/#/.test(e)&&e},f.data(),d.data());d.is("a")&&c.preventDefault(),f.one("show.bs.modal",function(a){a.isDefaultPrevented()||f.one("hidden.bs.modal",function(){d.is(":visible")&&d.trigger("focus")})}),b.call(f,g,this)})}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("bs.tooltip"),f="object"==typeof b&&b;(e||!/destroy|hide/.test(b))&&(e||d.data("bs.tooltip",e=new c(this,f)),"string"==typeof b&&e[b]())})}var c=function(a,b){this.type=null,this.options=null,this.enabled=null,this.timeout=null,this.hoverState=null,this.$element=null,this.inState=null,this.init("tooltip",a,b)};c.VERSION="3.3.6",c.TRANSITION_DURATION=150,c.DEFAULTS={animation:!0,placement:"top",selector:!1,template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,container:!1,viewport:{selector:"body",padding:0}},c.prototype.init=function(b,c,d){if(this.enabled=!0,this.type=b,this.$element=a(c),this.options=this.getOptions(d),this.$viewport=this.options.viewport&&a(a.isFunction(this.options.viewport)?this.options.viewport.call(this,this.$element):this.options.viewport.selector||this.options.viewport),this.inState={click:!1,hover:!1,focus:!1},this.$element[0]instanceof document.constructor&&!this.options.selector)throw new Error("`selector` option must be specified when initializing "+this.type+" on the window.document object!");for(var e=this.options.trigger.split(" "),f=e.length;f--;){var g=e[f];if("click"==g)this.$element.on("click."+this.type,this.options.selector,a.proxy(this.toggle,this));else if("manual"!=g){var h="hover"==g?"mouseenter":"focusin",i="hover"==g?"mouseleave":"focusout";this.$element.on(h+"."+this.type,this.options.selector,a.proxy(this.enter,this)),this.$element.on(i+"."+this.type,this.options.selector,a.proxy(this.leave,this))}}this.options.selector?this._options=a.extend({},this.options,{trigger:"manual",selector:""}):this.fixTitle()},c.prototype.getDefaults=function(){return c.DEFAULTS},c.prototype.getOptions=function(b){return b=a.extend({},this.getDefaults(),this.$element.data(),b),b.delay&&"number"==typeof b.delay&&(b.delay={show:b.delay,hide:b.delay}),b},c.prototype.getDelegateOptions=function(){var b={},c=this.getDefaults();return this._options&&a.each(this._options,function(a,d){c[a]!=d&&(b[a]=d)}),b},c.prototype.enter=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget).data("bs."+this.type);return c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data("bs."+this.type,c)),b instanceof a.Event&&(c.inState["focusin"==b.type?"focus":"hover"]=!0),c.tip().hasClass("in")||"in"==c.hoverState?void(c.hoverState="in"):(clearTimeout(c.timeout),c.hoverState="in",c.options.delay&&c.options.delay.show?void(c.timeout=setTimeout(function(){"in"==c.hoverState&&c.show()},c.options.delay.show)):c.show())},c.prototype.isInStateTrue=function(){for(var a in this.inState)if(this.inState[a])return!0;return!1},c.prototype.leave=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget).data("bs."+this.type);return c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data("bs."+this.type,c)),b instanceof a.Event&&(c.inState["focusout"==b.type?"focus":"hover"]=!1),c.isInStateTrue()?void 0:(clearTimeout(c.timeout),c.hoverState="out",c.options.delay&&c.options.delay.hide?void(c.timeout=setTimeout(function(){"out"==c.hoverState&&c.hide()},c.options.delay.hide)):c.hide())},c.prototype.show=function(){var b=a.Event("show.bs."+this.type);if(this.hasContent()&&this.enabled){this.$element.trigger(b);var d=a.contains(this.$element[0].ownerDocument.documentElement,this.$element[0]);if(b.isDefaultPrevented()||!d)return;var e=this,f=this.tip(),g=this.getUID(this.type);this.setContent(),f.attr("id",g),this.$element.attr("aria-describedby",g),this.options.animation&&f.addClass("fade");var h="function"==typeof this.options.placement?this.options.placement.call(this,f[0],this.$element[0]):this.options.placement,i=/\s?auto?\s?/i,j=i.test(h);j&&(h=h.replace(i,"")||"top"),f.detach().css({top:0,left:0,display:"block"}).addClass(h).data("bs."+this.type,this),this.options.container?f.appendTo(this.options.container):f.insertAfter(this.$element),this.$element.trigger("inserted.bs."+this.type);var k=this.getPosition(),l=f[0].offsetWidth,m=f[0].offsetHeight;if(j){var n=h,o=this.getPosition(this.$viewport);h="bottom"==h&&k.bottom+m>o.bottom?"top":"top"==h&&k.top-m<o.top?"bottom":"right"==h&&k.right+l>o.width?"left":"left"==h&&k.left-l<o.left?"right":h,f.removeClass(n).addClass(h)}var p=this.getCalculatedOffset(h,k,l,m);this.applyPlacement(p,h);var q=function(){var a=e.hoverState;e.$element.trigger("shown.bs."+e.type),e.hoverState=null,"out"==a&&e.leave(e)};a.support.transition&&this.$tip.hasClass("fade")?f.one("bsTransitionEnd",q).emulateTransitionEnd(c.TRANSITION_DURATION):q()}},c.prototype.applyPlacement=function(b,c){var d=this.tip(),e=d[0].offsetWidth,f=d[0].offsetHeight,g=parseInt(d.css("margin-top"),10),h=parseInt(d.css("margin-left"),10);isNaN(g)&&(g=0),isNaN(h)&&(h=0),b.top+=g,b.left+=h,a.offset.setOffset(d[0],a.extend({using:function(a){d.css({top:Math.round(a.top),left:Math.round(a.left)})}},b),0),d.addClass("in");var i=d[0].offsetWidth,j=d[0].offsetHeight;"top"==c&&j!=f&&(b.top=b.top+f-j);var k=this.getViewportAdjustedDelta(c,b,i,j);k.left?b.left+=k.left:b.top+=k.top;var l=/top|bottom/.test(c),m=l?2*k.left-e+i:2*k.top-f+j,n=l?"offsetWidth":"offsetHeight";d.offset(b),this.replaceArrow(m,d[0][n],l)},c.prototype.replaceArrow=function(a,b,c){this.arrow().css(c?"left":"top",50*(1-a/b)+"%").css(c?"top":"left","")},c.prototype.setContent=function(){var a=this.tip(),b=this.getTitle();a.find(".tooltip-inner")[this.options.html?"html":"text"](b),a.removeClass("fade in top bottom left right")},c.prototype.hide=function(b){function d(){"in"!=e.hoverState&&f.detach(),e.$element.removeAttr("aria-describedby").trigger("hidden.bs."+e.type),b&&b()}var e=this,f=a(this.$tip),g=a.Event("hide.bs."+this.type);return this.$element.trigger(g),g.isDefaultPrevented()?void 0:(f.removeClass("in"),a.support.transition&&f.hasClass("fade")?f.one("bsTransitionEnd",d).emulateTransitionEnd(c.TRANSITION_DURATION):d(),this.hoverState=null,this)},c.prototype.fixTitle=function(){var a=this.$element;(a.attr("title")||"string"!=typeof a.attr("data-original-title"))&&a.attr("data-original-title",a.attr("title")||"").attr("title","")},c.prototype.hasContent=function(){return this.getTitle()},c.prototype.getPosition=function(b){b=b||this.$element;var c=b[0],d="BODY"==c.tagName,e=c.getBoundingClientRect();null==e.width&&(e=a.extend({},e,{width:e.right-e.left,height:e.bottom-e.top}));var f=d?{top:0,left:0}:b.offset(),g={scroll:d?document.documentElement.scrollTop||document.body.scrollTop:b.scrollTop()},h=d?{width:a(window).width(),height:a(window).height()}:null;return a.extend({},e,g,h,f)},c.prototype.getCalculatedOffset=function(a,b,c,d){return"bottom"==a?{top:b.top+b.height,left:b.left+b.width/2-c/2}:"top"==a?{top:b.top-d,left:b.left+b.width/2-c/2}:"left"==a?{top:b.top+b.height/2-d/2,left:b.left-c}:{top:b.top+b.height/2-d/2,left:b.left+b.width}},c.prototype.getViewportAdjustedDelta=function(a,b,c,d){var e={top:0,left:0};if(!this.$viewport)return e;var f=this.options.viewport&&this.options.viewport.padding||0,g=this.getPosition(this.$viewport);if(/right|left/.test(a)){var h=b.top-f-g.scroll,i=b.top+f-g.scroll+d;h<g.top?e.top=g.top-h:i>g.top+g.height&&(e.top=g.top+g.height-i)}else{var j=b.left-f,k=b.left+f+c;j<g.left?e.left=g.left-j:k>g.right&&(e.left=g.left+g.width-k)}return e},c.prototype.getTitle=function(){var a,b=this.$element,c=this.options;return a=b.attr("data-original-title")||("function"==typeof c.title?c.title.call(b[0]):c.title)},c.prototype.getUID=function(a){do a+=~~(1e6*Math.random());while(document.getElementById(a));return a},c.prototype.tip=function(){if(!this.$tip&&(this.$tip=a(this.options.template),1!=this.$tip.length))throw new Error(this.type+" `template` option must consist of exactly 1 top-level element!");return this.$tip},c.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".tooltip-arrow")},c.prototype.enable=function(){this.enabled=!0},c.prototype.disable=function(){this.enabled=!1},c.prototype.toggleEnabled=function(){this.enabled=!this.enabled},c.prototype.toggle=function(b){var c=this;b&&(c=a(b.currentTarget).data("bs."+this.type),c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data("bs."+this.type,c))),b?(c.inState.click=!c.inState.click,c.isInStateTrue()?c.enter(c):c.leave(c)):c.tip().hasClass("in")?c.leave(c):c.enter(c)},c.prototype.destroy=function(){var a=this;clearTimeout(this.timeout),this.hide(function(){a.$element.off("."+a.type).removeData("bs."+a.type),a.$tip&&a.$tip.detach(),a.$tip=null,a.$arrow=null,a.$viewport=null})};var d=a.fn.tooltip;a.fn.tooltip=b,a.fn.tooltip.Constructor=c,a.fn.tooltip.noConflict=function(){return a.fn.tooltip=d,this}}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("bs.popover"),f="object"==typeof b&&b;(e||!/destroy|hide/.test(b))&&(e||d.data("bs.popover",e=new c(this,f)),"string"==typeof b&&e[b]())})}var c=function(a,b){this.init("popover",a,b)};if(!a.fn.tooltip)throw new Error("Popover requires tooltip.js");c.VERSION="3.3.6",c.DEFAULTS=a.extend({},a.fn.tooltip.Constructor.DEFAULTS,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'}),c.prototype=a.extend({},a.fn.tooltip.Constructor.prototype),c.prototype.constructor=c,c.prototype.getDefaults=function(){return c.DEFAULTS},c.prototype.setContent=function(){var a=this.tip(),b=this.getTitle(),c=this.getContent();a.find(".popover-title")[this.options.html?"html":"text"](b),a.find(".popover-content").children().detach().end()[this.options.html?"string"==typeof c?"html":"append":"text"](c),a.removeClass("fade top bottom left right in"),a.find(".popover-title").html()||a.find(".popover-title").hide()},c.prototype.hasContent=function(){return this.getTitle()||this.getContent()},c.prototype.getContent=function(){var a=this.$element,b=this.options;return a.attr("data-content")||("function"==typeof b.content?b.content.call(a[0]):b.content)},c.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".arrow")};var d=a.fn.popover;a.fn.popover=b,a.fn.popover.Constructor=c,a.fn.popover.noConflict=function(){return a.fn.popover=d,this}}(jQuery),+function(a){"use strict";function b(c,d){this.$body=a(document.body),this.$scrollElement=a(a(c).is(document.body)?window:c),this.options=a.extend({},b.DEFAULTS,d),this.selector=(this.options.target||"")+" .nav li > a",this.offsets=[],this.targets=[],this.activeTarget=null,this.scrollHeight=0,this.$scrollElement.on("scroll.bs.scrollspy",a.proxy(this.process,this)),this.refresh(),this.process()}function c(c){return this.each(function(){var d=a(this),e=d.data("bs.scrollspy"),f="object"==typeof c&&c;e||d.data("bs.scrollspy",e=new b(this,f)),"string"==typeof c&&e[c]()})}b.VERSION="3.3.6",b.DEFAULTS={offset:10},b.prototype.getScrollHeight=function(){return this.$scrollElement[0].scrollHeight||Math.max(this.$body[0].scrollHeight,document.documentElement.scrollHeight)},b.prototype.refresh=function(){var b=this,c="offset",d=0;this.offsets=[],this.targets=[],this.scrollHeight=this.getScrollHeight(),a.isWindow(this.$scrollElement[0])||(c="position",d=this.$scrollElement.scrollTop()),this.$body.find(this.selector).map(function(){var b=a(this),e=b.data("target")||b.attr("href"),f=/^#./.test(e)&&a(e);return f&&f.length&&f.is(":visible")&&[[f[c]().top+d,e]]||null}).sort(function(a,b){return a[0]-b[0]}).each(function(){b.offsets.push(this[0]),b.targets.push(this[1])})},b.prototype.process=function(){var a,b=this.$scrollElement.scrollTop()+this.options.offset,c=this.getScrollHeight(),d=this.options.offset+c-this.$scrollElement.height(),e=this.offsets,f=this.targets,g=this.activeTarget;if(this.scrollHeight!=c&&this.refresh(),b>=d)return g!=(a=f[f.length-1])&&this.activate(a);if(g&&b<e[0])return this.activeTarget=null,this.clear();for(a=e.length;a--;)g!=f[a]&&b>=e[a]&&(void 0===e[a+1]||b<e[a+1])&&this.activate(f[a])},b.prototype.activate=function(b){this.activeTarget=b,this.clear();var c=this.selector+'[data-target="'+b+'"],'+this.selector+'[href="'+b+'"]',d=a(c).parents("li").addClass("active");
d.parent(".dropdown-menu").length&&(d=d.closest("li.dropdown").addClass("active")),d.trigger("activate.bs.scrollspy")},b.prototype.clear=function(){a(this.selector).parentsUntil(this.options.target,".active").removeClass("active")};var d=a.fn.scrollspy;a.fn.scrollspy=c,a.fn.scrollspy.Constructor=b,a.fn.scrollspy.noConflict=function(){return a.fn.scrollspy=d,this},a(window).on("load.bs.scrollspy.data-api",function(){a('[data-spy="scroll"]').each(function(){var b=a(this);c.call(b,b.data())})})}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("bs.tab");e||d.data("bs.tab",e=new c(this)),"string"==typeof b&&e[b]()})}var c=function(b){this.element=a(b)};c.VERSION="3.3.6",c.TRANSITION_DURATION=150,c.prototype.show=function(){var b=this.element,c=b.closest("ul:not(.dropdown-menu)"),d=b.data("target");if(d||(d=b.attr("href"),d=d&&d.replace(/.*(?=#[^\s]*$)/,"")),!b.parent("li").hasClass("active")){var e=c.find(".active:last a"),f=a.Event("hide.bs.tab",{relatedTarget:b[0]}),g=a.Event("show.bs.tab",{relatedTarget:e[0]});if(e.trigger(f),b.trigger(g),!g.isDefaultPrevented()&&!f.isDefaultPrevented()){var h=a(d);this.activate(b.closest("li"),c),this.activate(h,h.parent(),function(){e.trigger({type:"hidden.bs.tab",relatedTarget:b[0]}),b.trigger({type:"shown.bs.tab",relatedTarget:e[0]})})}}},c.prototype.activate=function(b,d,e){function f(){g.removeClass("active").find("> .dropdown-menu > .active").removeClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!1),b.addClass("active").find('[data-toggle="tab"]').attr("aria-expanded",!0),h?(b[0].offsetWidth,b.addClass("in")):b.removeClass("fade"),b.parent(".dropdown-menu").length&&b.closest("li.dropdown").addClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!0),e&&e()}var g=d.find("> .active"),h=e&&a.support.transition&&(g.length&&g.hasClass("fade")||!!d.find("> .fade").length);g.length&&h?g.one("bsTransitionEnd",f).emulateTransitionEnd(c.TRANSITION_DURATION):f(),g.removeClass("in")};var d=a.fn.tab;a.fn.tab=b,a.fn.tab.Constructor=c,a.fn.tab.noConflict=function(){return a.fn.tab=d,this};var e=function(c){c.preventDefault(),b.call(a(this),"show")};a(document).on("click.bs.tab.data-api",'[data-toggle="tab"]',e).on("click.bs.tab.data-api",'[data-toggle="pill"]',e)}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("bs.affix"),f="object"==typeof b&&b;e||d.data("bs.affix",e=new c(this,f)),"string"==typeof b&&e[b]()})}var c=function(b,d){this.options=a.extend({},c.DEFAULTS,d),this.$target=a(this.options.target).on("scroll.bs.affix.data-api",a.proxy(this.checkPosition,this)).on("click.bs.affix.data-api",a.proxy(this.checkPositionWithEventLoop,this)),this.$element=a(b),this.affixed=null,this.unpin=null,this.pinnedOffset=null,this.checkPosition()};c.VERSION="3.3.6",c.RESET="affix affix-top affix-bottom",c.DEFAULTS={offset:0,target:window},c.prototype.getState=function(a,b,c,d){var e=this.$target.scrollTop(),f=this.$element.offset(),g=this.$target.height();if(null!=c&&"top"==this.affixed)return c>e?"top":!1;if("bottom"==this.affixed)return null!=c?e+this.unpin<=f.top?!1:"bottom":a-d>=e+g?!1:"bottom";var h=null==this.affixed,i=h?e:f.top,j=h?g:b;return null!=c&&c>=e?"top":null!=d&&i+j>=a-d?"bottom":!1},c.prototype.getPinnedOffset=function(){if(this.pinnedOffset)return this.pinnedOffset;this.$element.removeClass(c.RESET).addClass("affix");var a=this.$target.scrollTop(),b=this.$element.offset();return this.pinnedOffset=b.top-a},c.prototype.checkPositionWithEventLoop=function(){setTimeout(a.proxy(this.checkPosition,this),1)},c.prototype.checkPosition=function(){if(this.$element.is(":visible")){var b=this.$element.height(),d=this.options.offset,e=d.top,f=d.bottom,g=Math.max(a(document).height(),a(document.body).height());"object"!=typeof d&&(f=e=d),"function"==typeof e&&(e=d.top(this.$element)),"function"==typeof f&&(f=d.bottom(this.$element));var h=this.getState(g,b,e,f);if(this.affixed!=h){null!=this.unpin&&this.$element.css("top","");var i="affix"+(h?"-"+h:""),j=a.Event(i+".bs.affix");if(this.$element.trigger(j),j.isDefaultPrevented())return;this.affixed=h,this.unpin="bottom"==h?this.getPinnedOffset():null,this.$element.removeClass(c.RESET).addClass(i).trigger(i.replace("affix","affixed")+".bs.affix")}"bottom"==h&&this.$element.offset({top:g-b-f})}};var d=a.fn.affix;a.fn.affix=b,a.fn.affix.Constructor=c,a.fn.affix.noConflict=function(){return a.fn.affix=d,this},a(window).on("load",function(){a('[data-spy="affix"]').each(function(){var c=a(this),d=c.data();d.offset=d.offset||{},null!=d.offsetBottom&&(d.offset.bottom=d.offsetBottom),null!=d.offsetTop&&(d.offset.top=d.offsetTop),b.call(c,d)})})}(jQuery);
/**
    * @name	jQuery Owl Carousel
    */
   "function"!=typeof Object.create&&(Object.create=function(t){function i(){}return i.prototype=t,new i}),function(t,i,s){var e={init:function(i,s){this.$elem=t(s),this.options=t.extend({},t.fn.owlCarousel.options,this.$elem.data(),i),this.userOptions=i,this.loadContent()},loadContent:function(){function i(t){var i,s="";if("function"==typeof e.options.jsonSuccess)e.options.jsonSuccess.apply(this,[t]);else{for(i in t.owl)t.owl.hasOwnProperty(i)&&(s+=t.owl[i].item);e.$elem.html(s)}e.logIn()}var s,e=this;"function"==typeof e.options.beforeInit&&e.options.beforeInit.apply(this,[e.$elem]),"string"==typeof e.options.jsonPath?(s=e.options.jsonPath,t.getJSON(s,i)):e.logIn()},logIn:function(){this.$elem.data("owl-originalStyles",this.$elem.attr("style")),this.$elem.data("owl-originalClasses",this.$elem.attr("class")),this.$elem.css({opacity:0}),this.orignalItems=this.options.items,this.checkBrowser(),this.wrapperWidth=0,this.checkVisible=null,this.setVars()},setVars:function(){return 0===this.$elem.children().length?!1:(this.baseClass(),this.eventTypes(),this.$userItems=this.$elem.children(),this.itemsAmount=this.$userItems.length,this.wrapItems(),this.$owlItems=this.$elem.find(".owl-item"),this.$owlWrapper=this.$elem.find(".owl-wrapper"),this.playDirection="next",this.prevItem=0,this.prevArr=[0],this.currentItem=0,this.customEvents(),void this.onStartup())},onStartup:function(){this.updateItems(),this.calculateAll(),this.buildControls(),this.updateControls(),this.response(),this.moveEvents(),this.stopOnHover(),this.owlStatus(),!1!==this.options.transitionStyle&&this.transitionTypes(this.options.transitionStyle),!0===this.options.autoPlay&&(this.options.autoPlay=5e3),this.play(),this.$elem.find(".owl-wrapper").css("display","block"),this.$elem.is(":visible")?this.$elem.css("opacity",1):this.watchVisibility(),this.onstartup=!1,this.eachMoveUpdate(),"function"==typeof this.options.afterInit&&this.options.afterInit.apply(this,[this.$elem])},eachMoveUpdate:function(){!0===this.options.lazyLoad&&this.lazyLoad(),!0===this.options.autoHeight&&this.autoHeight(),this.onVisibleItems(),"function"==typeof this.options.afterAction&&this.options.afterAction.apply(this,[this.$elem])},updateVars:function(){"function"==typeof this.options.beforeUpdate&&this.options.beforeUpdate.apply(this,[this.$elem]),this.watchVisibility(),this.updateItems(),this.calculateAll(),this.updatePosition(),this.updateControls(),this.eachMoveUpdate(),"function"==typeof this.options.afterUpdate&&this.options.afterUpdate.apply(this,[this.$elem])},reload:function(){var t=this;i.setTimeout(function(){t.updateVars()},0)},watchVisibility:function(){var t=this;return!1!==t.$elem.is(":visible")?!1:(t.$elem.css({opacity:0}),i.clearInterval(t.autoPlayInterval),i.clearInterval(t.checkVisible),void(t.checkVisible=i.setInterval(function(){t.$elem.is(":visible")&&(t.reload(),t.$elem.animate({opacity:1},200),i.clearInterval(t.checkVisible))},500)))},wrapItems:function(){this.$userItems.wrapAll('<div class="owl-wrapper">').wrap('<div class="owl-item"></div>'),this.$elem.find(".owl-wrapper").wrap('<div class="owl-wrapper-outer">'),this.wrapperOuter=this.$elem.find(".owl-wrapper-outer"),this.$elem.css("display","block")},baseClass:function(){var t=this.$elem.hasClass(this.options.baseClass),i=this.$elem.hasClass(this.options.theme);t||this.$elem.addClass(this.options.baseClass),i||this.$elem.addClass(this.options.theme)},updateItems:function(){var i,s;if(!1===this.options.responsive)return!1;if(!0===this.options.singleItem)return this.options.items=this.orignalItems=1,this.options.itemsCustom=!1,this.options.itemsDesktop=!1,this.options.itemsDesktopSmall=!1,this.options.itemsTablet=!1,this.options.itemsTabletSmall=!1,this.options.itemsMobile=!1;if(i=t(this.options.responsiveBaseWidth).width(),i>(this.options.itemsDesktop[0]||this.orignalItems)&&(this.options.items=this.orignalItems),!1!==this.options.itemsCustom)for(this.options.itemsCustom.sort(function(t,i){return t[0]-i[0]}),s=0;s<this.options.itemsCustom.length;s+=1)this.options.itemsCustom[s][0]<=i&&(this.options.items=this.options.itemsCustom[s][1]);else i<=this.options.itemsDesktop[0]&&!1!==this.options.itemsDesktop&&(this.options.items=this.options.itemsDesktop[1]),i<=this.options.itemsDesktopSmall[0]&&!1!==this.options.itemsDesktopSmall&&(this.options.items=this.options.itemsDesktopSmall[1]),i<=this.options.itemsTablet[0]&&!1!==this.options.itemsTablet&&(this.options.items=this.options.itemsTablet[1]),i<=this.options.itemsTabletSmall[0]&&!1!==this.options.itemsTabletSmall&&(this.options.items=this.options.itemsTabletSmall[1]),i<=this.options.itemsMobile[0]&&!1!==this.options.itemsMobile&&(this.options.items=this.options.itemsMobile[1]);this.options.items>this.itemsAmount&&!0===this.options.itemsScaleUp&&(this.options.items=this.itemsAmount)},response:function(){var s,e,o=this;return!0!==o.options.responsive?!1:(e=t(i).width(),o.resizer=function(){t(i).width()!==e&&(!1!==o.options.autoPlay&&i.clearInterval(o.autoPlayInterval),i.clearTimeout(s),s=i.setTimeout(function(){e=t(i).width(),o.updateVars()},o.options.responsiveRefreshRate))},void t(i).resize(o.resizer))},updatePosition:function(){this.jumpTo(this.currentItem),!1!==this.options.autoPlay&&this.checkAp()},appendItemsSizes:function(){var i=this,s=0,e=i.itemsAmount-i.options.items;i.$owlItems.each(function(o){var n=t(this);n.css({width:i.itemWidth}).data("owl-item",Number(o)),(0===o%i.options.items||o===e)&&(o>e||(s+=1)),n.data("owl-roundPages",s)})},appendWrapperSizes:function(){this.$owlWrapper.css({width:this.$owlItems.length*this.itemWidth*2,left:0}),this.appendItemsSizes()},calculateAll:function(){this.calculateWidth(),this.appendWrapperSizes(),this.loops(),this.max()},calculateWidth:function(){this.itemWidth=Math.round(this.$elem.width()/this.options.items)},max:function(){var t=-1*(this.itemsAmount*this.itemWidth-this.options.items*this.itemWidth);return this.options.items>this.itemsAmount?this.maximumPixels=t=this.maximumItem=0:(this.maximumItem=this.itemsAmount-this.options.items,this.maximumPixels=t),t},min:function(){return 0},loops:function(){var i,s,e=0,o=0;for(this.positionsInArray=[0],this.pagesInArray=[],i=0;i<this.itemsAmount;i+=1)o+=this.itemWidth,this.positionsInArray.push(-o),!0===this.options.scrollPerPage&&(s=t(this.$owlItems[i]),s=s.data("owl-roundPages"),s!==e&&(this.pagesInArray[e]=this.positionsInArray[i],e=s))},buildControls:function(){(!0===this.options.navigation||!0===this.options.pagination)&&(this.owlControls=t('<div class="owl-controls"/>').toggleClass("clickable",!this.browser.isTouch).appendTo(this.$elem)),!0===this.options.pagination&&this.buildPagination(),!0===this.options.navigation&&this.buildButtons()},buildButtons:function(){var i=this,s=t('<div class="owl-buttons"/>');i.owlControls.append(s),i.buttonPrev=t("<div/>",{"class":"owl-prev",html:i.options.navigationText[0]||""}),i.buttonNext=t("<div/>",{"class":"owl-next",html:i.options.navigationText[1]||""}),s.append(i.buttonPrev).append(i.buttonNext),s.on("touchstart.owlControls mousedown.owlControls",'div[class^="owl"]',function(t){t.preventDefault()}),s.on("touchend.owlControls mouseup.owlControls",'div[class^="owl"]',function(s){s.preventDefault(),t(this).hasClass("owl-next")?i.next():i.prev()})},buildPagination:function(){var i=this;i.paginationWrapper=t('<div class="owl-pagination"/>'),i.owlControls.append(i.paginationWrapper),i.paginationWrapper.on("touchend.owlControls mouseup.owlControls",".owl-page",function(s){s.preventDefault(),Number(t(this).data("owl-page"))!==i.currentItem&&i.goTo(Number(t(this).data("owl-page")),!0)})},updatePagination:function(){var i,s,e,o,n,a;if(!1===this.options.pagination)return!1;for(this.paginationWrapper.html(""),i=0,s=this.itemsAmount-this.itemsAmount%this.options.items,o=0;o<this.itemsAmount;o+=1)0===o%this.options.items&&(i+=1,s===o&&(e=this.itemsAmount-this.options.items),n=t("<div/>",{"class":"owl-page"}),a=t("<span></span>",{text:!0===this.options.paginationNumbers?i:"","class":!0===this.options.paginationNumbers?"owl-numbers":""}),n.append(a),n.data("owl-page",s===o?e:o),n.data("owl-roundPages",i),this.paginationWrapper.append(n));this.checkPagination()},checkPagination:function(){var i=this;return!1===i.options.pagination?!1:void i.paginationWrapper.find(".owl-page").each(function(){t(this).data("owl-roundPages")===t(i.$owlItems[i.currentItem]).data("owl-roundPages")&&(i.paginationWrapper.find(".owl-page").removeClass("active"),t(this).addClass("active"))})},checkNavigation:function(){return!1===this.options.navigation?!1:void(!1===this.options.rewindNav&&(0===this.currentItem&&0===this.maximumItem?(this.buttonPrev.addClass("disabled"),this.buttonNext.addClass("disabled")):0===this.currentItem&&0!==this.maximumItem?(this.buttonPrev.addClass("disabled"),this.buttonNext.removeClass("disabled")):this.currentItem===this.maximumItem?(this.buttonPrev.removeClass("disabled"),this.buttonNext.addClass("disabled")):0!==this.currentItem&&this.currentItem!==this.maximumItem&&(this.buttonPrev.removeClass("disabled"),this.buttonNext.removeClass("disabled"))))},updateControls:function(){this.updatePagination(),this.checkNavigation(),this.owlControls&&(this.options.items>=this.itemsAmount?this.owlControls.hide():this.owlControls.show())},destroyControls:function(){this.owlControls&&this.owlControls.remove()},next:function(t){if(this.isTransition)return!1;if(this.currentItem+=!0===this.options.scrollPerPage?this.options.items:1,this.currentItem>this.maximumItem+(!0===this.options.scrollPerPage?this.options.items-1:0)){if(!0!==this.options.rewindNav)return this.currentItem=this.maximumItem,!1;this.currentItem=0,t="rewind"}this.goTo(this.currentItem,t)},prev:function(t){if(this.isTransition)return!1;if(this.currentItem=!0===this.options.scrollPerPage&&0<this.currentItem&&this.currentItem<this.options.items?0:this.currentItem-(!0===this.options.scrollPerPage?this.options.items:1),0>this.currentItem){if(!0!==this.options.rewindNav)return this.currentItem=0,!1;this.currentItem=this.maximumItem,t="rewind"}this.goTo(this.currentItem,t)},goTo:function(t,s,e){var o=this;return o.isTransition?!1:("function"==typeof o.options.beforeMove&&o.options.beforeMove.apply(this,[o.$elem]),t>=o.maximumItem?t=o.maximumItem:0>=t&&(t=0),o.currentItem=o.owl.currentItem=t,!1!==o.options.transitionStyle&&"drag"!==e&&1===o.options.items&&!0===o.browser.support3d?(o.swapSpeed(0),!0===o.browser.support3d?o.transition3d(o.positionsInArray[t]):o.css2slide(o.positionsInArray[t],1),o.afterGo(),o.singleItemTransition(),!1):(t=o.positionsInArray[t],!0===o.browser.support3d?(o.isCss3Finish=!1,!0===s?(o.swapSpeed("paginationSpeed"),i.setTimeout(function(){o.isCss3Finish=!0},o.options.paginationSpeed)):"rewind"===s?(o.swapSpeed(o.options.rewindSpeed),i.setTimeout(function(){o.isCss3Finish=!0},o.options.rewindSpeed)):(o.swapSpeed("slideSpeed"),i.setTimeout(function(){o.isCss3Finish=!0},o.options.slideSpeed)),o.transition3d(t)):!0===s?o.css2slide(t,o.options.paginationSpeed):"rewind"===s?o.css2slide(t,o.options.rewindSpeed):o.css2slide(t,o.options.slideSpeed),void o.afterGo()))},jumpTo:function(t){"function"==typeof this.options.beforeMove&&this.options.beforeMove.apply(this,[this.$elem]),t>=this.maximumItem||-1===t?t=this.maximumItem:0>=t&&(t=0),this.swapSpeed(0),!0===this.browser.support3d?this.transition3d(this.positionsInArray[t]):this.css2slide(this.positionsInArray[t],1),this.currentItem=this.owl.currentItem=t,this.afterGo()},afterGo:function(){this.prevArr.push(this.currentItem),this.prevItem=this.owl.prevItem=this.prevArr[this.prevArr.length-2],this.prevArr.shift(0),this.prevItem!==this.currentItem&&(this.checkPagination(),this.checkNavigation(),this.eachMoveUpdate(),!1!==this.options.autoPlay&&this.checkAp()),"function"==typeof this.options.afterMove&&this.prevItem!==this.currentItem&&this.options.afterMove.apply(this,[this.$elem])},stop:function(){this.apStatus="stop",i.clearInterval(this.autoPlayInterval)},checkAp:function(){"stop"!==this.apStatus&&this.play()},play:function(){var t=this;return t.apStatus="play",!1===t.options.autoPlay?!1:(i.clearInterval(t.autoPlayInterval),void(t.autoPlayInterval=i.setInterval(function(){t.next(!0)},t.options.autoPlay)))},swapSpeed:function(t){"slideSpeed"===t?this.$owlWrapper.css(this.addCssSpeed(this.options.slideSpeed)):"paginationSpeed"===t?this.$owlWrapper.css(this.addCssSpeed(this.options.paginationSpeed)):"string"!=typeof t&&this.$owlWrapper.css(this.addCssSpeed(t))},addCssSpeed:function(t){return{"-webkit-transition":"all "+t+"ms ease","-moz-transition":"all "+t+"ms ease","-o-transition":"all "+t+"ms ease",transition:"all "+t+"ms ease"}},removeTransition:function(){return{"-webkit-transition":"","-moz-transition":"","-o-transition":"",transition:""}},doTranslate:function(t){return{"-webkit-transform":"translate3d("+t+"px, 0px, 0px)","-moz-transform":"translate3d("+t+"px, 0px, 0px)","-o-transform":"translate3d("+t+"px, 0px, 0px)","-ms-transform":"translate3d("+t+"px, 0px, 0px)",transform:"translate3d("+t+"px, 0px,0px)"}},transition3d:function(t){this.$owlWrapper.css($("html").hasClass("ar")?this.doTranslate(Math.abs(t)):this.doTranslate(t))},css2move:function(t){this.$owlWrapper.css($("html").hasClass("ar")?{left:Math.abs(t)}:{left:t})},css2slide:function(t,i){var s=this;s.isCssFinish=!1,$("html").hasClass("ar")?s.$owlWrapper.stop(!0,!0).animate({left:Math.abs(t)},{duration:i||s.options.slideSpeed,complete:function(){s.isCssFinish=!0}}):s.$owlWrapper.stop(!0,!0).animate({left:t},{duration:i||s.options.slideSpeed,complete:function(){s.isCssFinish=!0}})},checkBrowser:function(){var t=s.createElement("div");t.style.cssText="  -moz-transform:translate3d(0px, 0px, 0px); -ms-transform:translate3d(0px, 0px, 0px); -o-transform:translate3d(0px, 0px, 0px); -webkit-transform:translate3d(0px, 0px, 0px); transform:translate3d(0px, 0px, 0px)",t=t.style.cssText.match(/translate3d\(0px, 0px, 0px\)/g),this.browser={support3d:null!==t&&1===t.length,isTouch:"ontouchstart"in i||i.navigator.msMaxTouchPoints}},moveEvents:function(){(!1!==this.options.mouseDrag||!1!==this.options.touchDrag)&&(this.gestures(),this.disabledEvents())},eventTypes:function(){var t=["s","e","x"];this.ev_types={},!0===this.options.mouseDrag&&!0===this.options.touchDrag?t=["touchstart.owl mousedown.owl","touchmove.owl mousemove.owl","touchend.owl touchcancel.owl mouseup.owl"]:!1===this.options.mouseDrag&&!0===this.options.touchDrag?t=["touchstart.owl","touchmove.owl","touchend.owl touchcancel.owl"]:!0===this.options.mouseDrag&&!1===this.options.touchDrag&&(t=["mousedown.owl","mousemove.owl","mouseup.owl"]),this.ev_types.start=t[0],this.ev_types.move=t[1],this.ev_types.end=t[2]},disabledEvents:function(){this.$elem.on("dragstart.owl",function(t){t.preventDefault()}),this.$elem.on("mousedown.disableTextSelect",function(i){return t(i.target).is("input, textarea, select, option")})},gestures:function(){function e(t){if(void 0!==t.touches)return{x:t.touches[0].pageX,y:t.touches[0].pageY};if(void 0===t.touches){if(void 0!==t.pageX)return{x:t.pageX,y:t.pageY};if(void 0===t.pageX)return{x:t.clientX,y:t.clientY}}}function o(i){"on"===i?(t(s).on(r.ev_types.move,n),t(s).on(r.ev_types.end,a)):"off"===i&&(t(s).off(r.ev_types.move),t(s).off(r.ev_types.end))}function n(o){o=o.originalEvent||o||i.event,r.newPosX=e(o).x-l.offsetX,r.newPosY=e(o).y-l.offsetY,r.newRelativeX=r.newPosX-l.relativePos,"function"==typeof r.options.startDragging&&!0!==l.dragging&&0!==r.newRelativeX&&(l.dragging=!0,r.options.startDragging.apply(r,[r.$elem])),(8<r.newRelativeX||-8>r.newRelativeX)&&!0===r.browser.isTouch&&(void 0!==o.preventDefault?o.preventDefault():o.returnValue=!1,l.sliding=!0),(10<r.newPosY||-10>r.newPosY)&&!1===l.sliding&&t(s).off("touchmove.owl"),r.newPosX=Math.max(Math.min(r.newPosX,r.newRelativeX/5),r.maximumPixels+r.newRelativeX/5),!0===r.browser.support3d?r.transition3d(r.newPosX):r.css2move(r.newPosX)}function a(s){s=s.originalEvent||s||i.event;var e;s.target=s.target||s.srcElement,l.dragging=!1,!0!==r.browser.isTouch&&r.$owlWrapper.removeClass("grabbing"),r.dragDirection=r.owl.dragDirection=0>r.newRelativeX?"left":"right",0!==r.newRelativeX&&(e=r.getNewPosition(),r.goTo(e,!1,"drag"),l.targetElement===s.target&&!0!==r.browser.isTouch&&(t(s.target).on("click.disable",function(i){i.stopImmediatePropagation(),i.stopPropagation(),i.preventDefault(),t(i.target).off("click.disable")}),s=t._data(s.target,"events").click,e=s.pop(),s.splice(0,0,e))),o("off")}var r=this,l={offsetX:0,offsetY:0,baseElWidth:0,relativePos:0,position:null,minSwipe:null,maxSwipe:null,sliding:null,dargging:null,targetElement:null};r.isCssFinish=!0,r.$elem.on(r.ev_types.start,".owl-wrapper",function(s){s=s.originalEvent||s||i.event;var n;if(3===s.which)return!1;if(!(r.itemsAmount<=r.options.items)){if(!1===r.isCssFinish&&!r.options.dragBeforeAnimFinish||!1===r.isCss3Finish&&!r.options.dragBeforeAnimFinish)return!1;!1!==r.options.autoPlay&&i.clearInterval(r.autoPlayInterval),!0===r.browser.isTouch||r.$owlWrapper.hasClass("grabbing")||r.$owlWrapper.addClass("grabbing"),r.newPosX=0,r.newRelativeX=0,t(this).css(r.removeTransition()),n=t(this).position(),l.relativePos=n.left,l.offsetX=e(s).x-n.left,l.offsetY=e(s).y-n.top,o("on"),l.sliding=!1,l.targetElement=s.target||s.srcElement}})},getNewPosition:function(){var t=this.closestItem();return t>this.maximumItem?t=this.currentItem=this.maximumItem:0<=this.newPosX&&(this.currentItem=t=0),t},closestItem:function(){var i=this,s=!0===i.options.scrollPerPage?i.pagesInArray:i.positionsInArray,e=i.newPosX,o=null;return t.each(s,function(n,a){e-i.itemWidth/20>s[n+1]&&e-i.itemWidth/20<a&&"left"===i.moveDirection()?(o=a,i.currentItem=!0===i.options.scrollPerPage?t.inArray(o,i.positionsInArray):n):e+i.itemWidth/20<a&&e+i.itemWidth/20>(s[n+1]||s[n]-i.itemWidth)&&"right"===i.moveDirection()&&(!0===i.options.scrollPerPage?(o=s[n+1]||s[s.length-1],i.currentItem=t.inArray(o,i.positionsInArray)):(o=s[n+1],i.currentItem=n+1))}),i.currentItem},moveDirection:function(){var t;return 0>this.newRelativeX?(t="right",this.playDirection="next"):(t="left",this.playDirection="prev"),t},customEvents:function(){var t=this;t.$elem.on("owl.next",function(){t.next()}),t.$elem.on("owl.prev",function(){t.prev()}),t.$elem.on("owl.play",function(i,s){t.options.autoPlay=s,t.play(),t.hoverStatus="play"}),t.$elem.on("owl.stop",function(){t.stop(),t.hoverStatus="stop"}),t.$elem.on("owl.goTo",function(i,s){t.goTo(s)}),t.$elem.on("owl.jumpTo",function(i,s){t.jumpTo(s)})},stopOnHover:function(){var t=this;!0===t.options.stopOnHover&&!0!==t.browser.isTouch&&!1!==t.options.autoPlay&&(t.$elem.on("mouseover",function(){t.stop()}),t.$elem.on("mouseout",function(){"stop"!==t.hoverStatus&&t.play()}))},lazyLoad:function(){var i,s,e,o,n;if(!1===this.options.lazyLoad)return!1;for(i=0;i<this.itemsAmount;i+=1)s=t(this.$owlItems[i]),"loaded"!==s.data("owl-loaded")&&(e=s.data("owl-item"),o=s.find(".lazyOwl"),"string"!=typeof o.data("src")?s.data("owl-loaded","loaded"):(void 0===s.data("owl-loaded")&&(o.hide(),s.addClass("loading").data("owl-loaded","checked")),(n=!0===this.options.lazyFollow?e>=this.currentItem:!0)&&e<this.currentItem+this.options.items&&o.length&&this.lazyPreload(s,o)))},lazyPreload:function(t,s){function e(){t.data("owl-loaded","loaded").removeClass("loading"),s.removeAttr("data-src"),"fade"===a.options.lazyEffect?s.fadeIn(400):s.show(),"function"==typeof a.options.afterLazyLoad&&a.options.afterLazyLoad.apply(this,[a.$elem])}function o(){r+=1,a.completeImg(s.get(0))||!0===n?e():100>=r?i.setTimeout(o,100):e()}var n,a=this,r=0;"DIV"===s.prop("tagName")?(s.css("background-image","url("+s.data("src")+")"),n=!0):s[0].src=s.data("src"),o()},autoHeight:function(){function s(){var s=t(n.$owlItems[n.currentItem]).height();n.wrapperOuter.css("height",s+"px"),n.wrapperOuter.hasClass("autoHeight")||i.setTimeout(function(){n.wrapperOuter.addClass("autoHeight")},0)}function e(){o+=1,n.completeImg(a.get(0))?s():100>=o?i.setTimeout(e,100):n.wrapperOuter.css("height","")}var o,n=this,a=t(n.$owlItems[n.currentItem]).find("img");void 0!==a.get(0)?(o=0,e()):s()},completeImg:function(t){return!t.complete||"undefined"!=typeof t.naturalWidth&&0===t.naturalWidth?!1:!0},onVisibleItems:function(){var i;for(!0===this.options.addClassActive&&this.$owlItems.removeClass("active"),this.visibleItems=[],i=this.currentItem;i<this.currentItem+this.options.items;i+=1)this.visibleItems.push(i),!0===this.options.addClassActive&&t(this.$owlItems[i]).addClass("active");this.owl.visibleItems=this.visibleItems},transitionTypes:function(t){this.outClass="owl-"+t+"-out",this.inClass="owl-"+t+"-in"},singleItemTransition:function(){var t=this,i=t.outClass,s=t.inClass,e=t.$owlItems.eq(t.currentItem),o=t.$owlItems.eq(t.prevItem),n=Math.abs(t.positionsInArray[t.currentItem])+t.positionsInArray[t.prevItem],a=Math.abs(t.positionsInArray[t.currentItem])+t.itemWidth/2;t.isTransition=!0,t.$owlWrapper.addClass("owl-origin").css({"-webkit-transform-origin":a+"px","-moz-perspective-origin":a+"px","perspective-origin":a+"px"}),o.css({position:"relative",left:n+"px"}).addClass(i).on("webkitAnimationEnd oAnimationEnd MSAnimationEnd animationend",function(){t.endPrev=!0,o.off("webkitAnimationEnd oAnimationEnd MSAnimationEnd animationend"),t.clearTransStyle(o,i)}),e.addClass(s).on("webkitAnimationEnd oAnimationEnd MSAnimationEnd animationend",function(){t.endCurrent=!0,e.off("webkitAnimationEnd oAnimationEnd MSAnimationEnd animationend"),t.clearTransStyle(e,s)})},clearTransStyle:function(t,i){t.css({position:"",left:""}).removeClass(i),this.endPrev&&this.endCurrent&&(this.$owlWrapper.removeClass("owl-origin"),this.isTransition=this.endCurrent=this.endPrev=!1)},owlStatus:function(){this.owl={userOptions:this.userOptions,baseElement:this.$elem,userItems:this.$userItems,owlItems:this.$owlItems,currentItem:this.currentItem,prevItem:this.prevItem,visibleItems:this.visibleItems,isTouch:this.browser.isTouch,browser:this.browser,dragDirection:this.dragDirection}},clearEvents:function(){this.$elem.off(".owl owl mousedown.disableTextSelect"),t(s).off(".owl owl"),t(i).off("resize",this.resizer)},unWrap:function(){0!==this.$elem.children().length&&(this.$owlWrapper.unwrap(),this.$userItems.unwrap().unwrap(),this.owlControls&&this.owlControls.remove()),this.clearEvents(),this.$elem.attr("style",this.$elem.data("owl-originalStyles")||"").attr("class",this.$elem.data("owl-originalClasses"))},destroy:function(){this.stop(),i.clearInterval(this.checkVisible),this.unWrap(),this.$elem.removeData()},reinit:function(i){i=t.extend({},this.userOptions,i),this.unWrap(),this.init(i,this.$elem)},addItem:function(t,i){var s;return t?0===this.$elem.children().length?(this.$elem.append(t),this.setVars(),!1):(this.unWrap(),s=void 0===i||-1===i?-1:i,s>=this.$userItems.length||-1===s?this.$userItems.eq(-1).after(t):this.$userItems.eq(s).before(t),void this.setVars()):!1},removeItem:function(t){return 0===this.$elem.children().length?!1:(t=void 0===t||-1===t?-1:t,this.unWrap(),this.$userItems.eq(t).remove(),void this.setVars())}};t.fn.owlCarousel=function(i){return this.each(function(){if(!0===t(this).data("owl-init"))return!1;t(this).data("owl-init",!0);var s=Object.create(e);s.init(i,this),t.data(this,"owlCarousel",s)})},t.fn.owlCarousel.options={items:5,itemsCustom:!1,itemsDesktop:[1199,4],itemsDesktopSmall:[979,3],itemsTablet:[768,2],itemsTabletSmall:!1,itemsMobile:[479,1],singleItem:!1,itemsScaleUp:!1,slideSpeed:200,paginationSpeed:800,rewindSpeed:1e3,autoPlay:!1,stopOnHover:!1,navigation:!1,navigationText:['<span class="flaticon-direction196"></span>','<span class="flaticon-direction202"></span>'],rewindNav:!0,scrollPerPage:!1,pagination:!0,paginationNumbers:!1,responsive:!0,responsiveRefreshRate:200,responsiveBaseWidth:i,baseClass:"owl-carousel",theme:"owl-theme",lazyLoad:!1,lazyFollow:!0,lazyEffect:"fade",autoHeight:!1,jsonPath:!1,jsonSuccess:!1,dragBeforeAnimFinish:!0,mouseDrag:!0,touchDrag:!0,addClassActive:!1,transitionStyle:!1,beforeUpdate:!1,afterUpdate:!1,beforeInit:!1,afterInit:!1,beforeMove:!1,afterMove:!1,afterAction:!1,startDragging:!1,afterLazyLoad:!1}}(jQuery,window,document);
/*!
  hey, [be]Lazy.js - v1.6.2 - 2016.05.09
  A fast, small and dependency free lazy load script (https://github.com/dinbror/blazy)
  (c) Bjoern Klinggaard - @bklinggaard - http://dinbror.dk/blazy
*/
(function(p, m) {
    "function" === typeof define && define.amd ? define(m) : "object" === typeof exports ? module.exports = m() : p.Blazy = m()
})(this, function() {
    function p(b) {
        var c = b._util;
        c.elements = B(b.options.selector);
        c.count = c.elements.length;
        c.destroyed && (c.destroyed = !1, b.options.container && k(b.options.container, function(a) {
            n(a, "scroll", c.validateT)
        }), n(window, "resize", c.save_viewportOffsetT), n(window, "resize", c.validateT), n(window, "scroll", c.validateT));
        m(b)
    }

    function m(b) {
        for (var c = b._util, a = 0; a < c.count; a++) {
            var d = c.elements[a],
                f = d.getBoundingClientRect();
            if (f.right >= e.left && f.bottom >= e.top && f.left <= e.right && f.top <= e.bottom || q(d, b.options.successClass)) b.load(d), c.elements.splice(a, 1), c.count--, a--
        }
        0 === c.count && b.destroy()
    }

    function x(b, c, a) {
        if (!q(b, a.successClass) && (c || a.loadInvisible || 0 < b.offsetWidth && 0 < b.offsetHeight))
            if (c = b.getAttribute(r) || b.getAttribute(a.src)) {
                c = c.split(a.separator);
                var d = c[y && 1 < c.length ? 1 : 0],
                    f = "img" === b.nodeName.toLowerCase();
                if (f || void 0 === b.src) {
                    var l = new Image,
                        u = function() {
                            a.error && a.error(b, "invalid");
                            t(b, a.errorClass);
                            g(l, "error", u);
                            g(l, "load", h)
                        },
                        h = function() {
                            if (f) {
                                b.src = d;
                                v(b, "srcset", a.srcset);
                                var c = b.parentNode;
                                c && "picture" === c.nodeName.toLowerCase() && k(c.getElementsByTagName("source"), function(b) {
                                    v(b, "srcset", a.srcset)
                                })
                            } else b.style.backgroundImage = 'url("' + d + '")';
                            w(b, a);
                            g(l, "load", h);
                            g(l, "error", u)
                        };
                    n(l, "error", u);
                    n(l, "load", h);
                    l.src = d
                } else b.src = d, w(b, a)
            } else "video" === b.nodeName.toLowerCase() ? (k(b.getElementsByTagName("source"), function(b) {
                v(b, "src", a.src)
            }), b.load(), w(b, a)) : (a.error && a.error(b, "missing"), t(b, a.errorClass))
    }

    function w(b, c) {
        t(b, c.successClass);
        c.success && c.success(b);
        b.removeAttribute(c.src);
        k(c.breakpoints, function(a) {
            b.removeAttribute(a.src)
        })
    }

    function v(b, c, a) {
        var d = b.getAttribute(a);
        d && (b[c] = d, b.removeAttribute(a))
    }

    function q(b, c) {
        return -1 !== (" " + b.className + " ").indexOf(" " + c + " ")
    }

    function t(b, c) {
        q(b, c) || (b.className += " " + c)
    }

    function B(b) {
        var c = [];
        b = document.querySelectorAll(b);
        for (var a = b.length; a--; c.unshift(b[a]));
        return c
    }

    function z(b) {
        e.bottom = (window.innerHeight || document.documentElement.clientHeight) + b;
        e.right = (window.innerWidth || document.documentElement.clientWidth) + b
    }

    function n(b, c, a) {
        b.attachEvent ? b.attachEvent && b.attachEvent("on" + c, a) : b.addEventListener(c, a, !1)
    }

    function g(b, c, a) {
        b.detachEvent ? b.detachEvent && b.detachEvent("on" + c, a) : b.removeEventListener(c, a, !1)
    }

    function k(b, c) {
        if (b && c)
            for (var a = b.length, d = 0; d < a && !1 !== c(b[d], d); d++);
    }

    function A(b, c, a) {
        var d = 0;
        return function() {
            var f = +new Date;
            f - d < c || (d = f, b.apply(a, arguments))
        }
    }
    var r, e, y;
    return function(b) {
        if (!document.querySelectorAll) {
            var c = document.createStyleSheet();
            document.querySelectorAll = function(a, b, d, h, e) {
                e = document.all;
                b = [];
                a = a.replace(/\[for\b/gi, "[htmlFor").split(",");
                for (d = a.length; d--;) {
                    c.addRule(a[d], "k:v");
                    for (h = e.length; h--;) e[h].currentStyle.k && b.push(e[h]);
                    c.removeRule(0)
                }
                return b
            }
        }
        var a = this,
            d = a._util = {};
        d.elements = [];
        d.destroyed = !0;
        a.options = b || {};
        a.options.error = a.options.error || !1;
        a.options.offset = a.options.offset || 100;
        a.options.success = a.options.success || !1;
        a.options.selector = a.options.selector || ".b-lazy";
        a.options.separator = a.options.separator || "|";
        a.options.container = a.options.container ? document.querySelectorAll(a.options.container) : !1;
        a.options.errorClass = a.options.errorClass || "b-error";
        a.options.breakpoints = a.options.breakpoints || !1;
        a.options.loadInvisible = a.options.loadInvisible || !1;
        a.options.successClass = a.options.successClass || "b-loaded";
        a.options.validateDelay = a.options.validateDelay || 25;
        a.options.save_viewportOffsetDelay = a.options.save_viewportOffsetDelay || 50;
        a.options.srcset = a.options.srcset || "data-srcset";
        a.options.src = r = a.options.src || "data-src";
        y = 1 < window.devicePixelRatio;
        e = {};
        e.top = 0 - a.options.offset;
        e.left = 0 - a.options.offset;
        a.revalidate = function() {
            p(this)
        };
        a.load = function(a, b) {
            var c = this.options;
            void 0 === a.length ? x(a, b, c) : k(a, function(a) {
                x(a, b, c)
            })
        };
        a.destroy = function() {
            var a = this._util;
            this.options.container && k(this.options.container, function(b) {
                g(b, "scroll", a.validateT)
            });
            g(window, "scroll", a.validateT);
            g(window, "resize", a.validateT);
            g(window, "resize", a.save_viewportOffsetT);
            a.count = 0;
            a.elements.length = 0;
            a.destroyed = !0
        };
        d.validateT = A(function() {
            m(a)
        }, a.options.validateDelay, a);
        d.save_viewportOffsetT = A(function() {
            z(a.options.offset)
        }, a.options.save_viewportOffsetDelay, a);
        z(a.options.offset);
        k(a.options.breakpoints, function(a) {
            if (a.width >= window.screen.width) return r = a.src, !1
        });
        setTimeout(function() {
            p(a)
        })
    }
});
// Generated by CoffeeScript 1.6.2
(function() {
  var $, cardFromNumber, cardFromType, cards, defaultFormat, formatBackCardNumber, formatBackDateDDMMYYYY, formatBackDateYYYYMMDD, formatBackExpiry, formatBackOntarioDriversLicenseNumber, formatBackOntarioOutdoorsCardNumber, formatBackOntarioPhotoHealthCardNumber, formatBackPhoneNumber, formatBackPostalCode, formatBackTimeYYMM, formatBackUkSortCode, formatCardNumber, formatDateDDMMYYYY, formatDateYYYYMMDD, formatExpiry, formatForwardDateDDMMYYYY, formatForwardDateYYYYMMDD, formatForwardExpiry, formatForwardSlashDateDDMMYYYY, formatForwardSlashDateYYYYMMDD, formatForwardSlashExpiry, formatForwardSlashTimeYYMM, formatForwardTimeYYMM, formatForwardUkSortCode, formatOntarioDriversLicenseNumber, formatOntarioOutdoorsCardNumber, formatOntarioPhotoHealthCardNumber, formatPasteOntarioDriversLicenseNumber, formatPasteOntarioOutdoorsCardNumber, formatPasteOntarioPhotoHealthCardNumber, formatPastePhoneNumber, formatPastePostalCode, formatPhoneNumber, formatPostalCode, formatTimeYYMM, formatUkSortCode, hasTextSelected, luhnCheck, parseCreditCardExpiry, parseDateDDMMYYYY, parseTimeYYMM, parse_date_yyyy_mm_dd, reFormatCardNumber, reFormatPhoneNumber, restrictAlphaNumeric, restrictCVC, restrictCardNumber, restrictDateDDMMYYYY, restrictDateYYYYMMDD, restrictExpiry, restrictNumeric, restrictOntarioDriversLicenseNumber, restrictOntarioOutdoorsCardNumber, restrictOntarioPhotoHealthCardNumber, restrictPhoneNumber, restrictPostalCode, restrictTimeYYMM, restrictUkSortCode, setCardType,
    __slice = [].slice,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  $ = jQuery;

  $.formance = {};

  $.formance.fn = {};

  $.fn.formance = function() {
    var args, method;

    method = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
    return $.formance.fn[method].apply(this, args);
  };

  restrictNumeric = function(e) {
    var $target, input;

    $target = $(e.target);
    if (e.metaKey || e.ctrlKey) {
      return true;
    }
    if (e.which === 32) {
      return false;
    }
    if (e.which === 0) {
      return true;
    }
    if (e.which < 33) {
      return true;
    }
    input = String.fromCharCode(e.which);
    return !!/[\d\s]/.test(input);
  };

  restrictAlphaNumeric = function(e) {
    var $target, input;

    $target = $(e.target);
    if (e.metaKey || e.ctrlKey) {
      return true;
    }
    if (e.which === 32) {
      return false;
    }
    if (e.which === 0) {
      return true;
    }
    if (e.which < 33) {
      return true;
    }
    input = String.fromCharCode(e.which);
    return !!/[\d\sA-Za-z]/.test(input);
  };

  hasTextSelected = function($target) {
    var _ref;

    if (($target.prop('selectionStart') != null) && $target.prop('selectionStart') !== $target.prop('selectionEnd')) {
      return true;
    }
    if (typeof document !== "undefined" && document !== null ? (_ref = document.selection) != null ? typeof _ref.createRange === "function" ? _ref.createRange().text : void 0 : void 0 : void 0) {
      return true;
    }
    return false;
  };

  $.formance.fn.restrictNumeric = function() {
    this.on('keypress', restrictNumeric);
    return this;
  };

  $.formance.fn.restrictAlphaNumeric = function() {
    this.on('keypress', restrictAlphaNumeric);
    return this;
  };

  $.formance.fn.hasTextSelected = hasTextSelected;

  $ = jQuery;

  hasTextSelected = $.formance.fn.hasTextSelected;

  defaultFormat = /(\d{1,4})/g;

  cards = [
    {
      type: 'maestro',
      pattern: /^(5018|5020|5038|6304|6759|676[1-3])/,
      format: defaultFormat,
      length: [12, 13, 14, 15, 16, 17, 18, 19],
      cvcLength: [3],
      luhn: true
    }, {
      type: 'dinersclub',
      pattern: /^(36|38|30[0-5])/,
      format: defaultFormat,
      length: [14],
      cvcLength: [3],
      luhn: true
    }, {
      type: 'laser',
      pattern: /^(6706|6771|6709)/,
      format: defaultFormat,
      length: [16, 17, 18, 19],
      cvcLength: [3],
      luhn: true
    }, {
      type: 'jcb',
      pattern: /^35/,
      format: defaultFormat,
      length: [16],
      cvcLength: [3],
      luhn: true
    }, {
      type: 'unionpay',
      pattern: /^62/,
      format: defaultFormat,
      length: [16, 17, 18, 19],
      cvcLength: [3],
      luhn: false
    }, {
      type: 'discover',
      pattern: /^(6011|65|64[4-9]|622)/,
      format: defaultFormat,
      length: [16],
      cvcLength: [3],
      luhn: true
    }, {
      type: 'mastercard',
      pattern: /^5[1-5]/,
      format: defaultFormat,
      length: [16],
      cvcLength: [3],
      luhn: true
    }, {
      type: 'amex',
      pattern: /^3[47]/,
      format: /(\d{1,4})(\d{1,6})?(\d{1,5})?/,
      length: [15],
      cvcLength: [3, 4],
      luhn: true
    }, {
      type: 'visa',
      pattern: /^4/,
      format: defaultFormat,
      length: [13, 14, 15, 16],
      cvcLength: [3],
      luhn: true
    }
  ];

  cardFromNumber = function(num) {
    var card, _i, _len;

    num = (num + '').replace(/\D/g, '');
    for (_i = 0, _len = cards.length; _i < _len; _i++) {
      card = cards[_i];
      if (card.pattern.test(num)) {
        return card;
      }
    }
  };

  cardFromType = function(type) {
    var card, _i, _len;

    for (_i = 0, _len = cards.length; _i < _len; _i++) {
      card = cards[_i];
      if (card.type === type) {
        return card;
      }
    }
  };

  restrictCVC = function(e) {
    var $target, digit, val;

    $target = $(e.currentTarget);
    digit = String.fromCharCode(e.which);
    if (!/^\d+$/.test(digit)) {
      return;
    }
    val = $target.val() + digit;
    return val.length <= 4;
  };

  $.formance.fn.format_credit_card_cvc = function() {
    this.formance('restrictNumeric');
    this.on('keypress', restrictCVC);
    return this;
  };

  $.formance.fn.validate_credit_card_cvc = function() {
    var cvc, type, _ref, _ref1;

    type = $(this).data('credit_card_type');
    cvc = $(this).val();
    cvc = $.trim(cvc);
    if (!/^\d+$/.test(cvc)) {
      return false;
    }
    if (type) {
      return _ref = cvc.length, __indexOf.call((_ref1 = cardFromType(type)) != null ? _ref1.cvcLength : void 0, _ref) >= 0;
    } else {
      return cvc.length >= 3 && cvc.length <= 4;
    }
  };

  $ = jQuery;

  hasTextSelected = $.formance.fn.hasTextSelected;

  restrictExpiry = function(e) {
    var $target, digit, value;

    $target = $(e.currentTarget);
    digit = String.fromCharCode(e.which);
    if (!/^\d+$/.test(digit)) {
      return;
    }
    if (hasTextSelected($target)) {
      return;
    }
    value = $target.val() + digit;
    value = value.replace(/\D/g, '');
    if (value.length > 6) {
      return false;
    }
  };

  formatExpiry = function(e) {
    var $target, digit, val;

    digit = String.fromCharCode(e.which);
    if (!/^\d+$/.test(digit)) {
      return;
    }
    $target = $(e.currentTarget);
    val = $target.val() + digit;
    if (/^\d$/.test(val) && (val !== '0' && val !== '1')) {
      e.preventDefault();
      return $target.val("0" + val + " / ");
    } else if (/^\d\d$/.test(val)) {
      e.preventDefault();
      return $target.val("" + val + " / ");
    }
  };

  formatForwardExpiry = function(e) {
    var $target, digit, val;

    digit = String.fromCharCode(e.which);
    if (!/^\d+$/.test(digit)) {
      return;
    }
    $target = $(e.currentTarget);
    val = $target.val();
    if (/^\d\d$/.test(val)) {
      return $target.val("" + val + " / ");
    }
  };

  formatForwardSlashExpiry = function(e) {
    var $target, slash, val;

    slash = String.fromCharCode(e.which);
    if (slash !== '/') {
      return;
    }
    $target = $(e.currentTarget);
    val = $target.val();
    if (/^\d$/.test(val) && val !== '0') {
      return $target.val("0" + val + " / ");
    }
  };

  formatBackExpiry = function(e) {
    var $target, value;

    if (e.meta) {
      return;
    }
    $target = $(e.currentTarget);
    value = $target.val();
    if (e.which !== 8) {
      return;
    }
    if (($target.prop('selectionStart') != null) && $target.prop('selectionStart') !== value.length) {
      return;
    }
    if (/\d(\s|\/)+$/.test(value)) {
      e.preventDefault();
      return $target.val(value.replace(/\d(\s|\/)*$/, ''));
    } else if (/\s\/\s?\d?$/.test(value)) {
      e.preventDefault();
      return $target.val(value.replace(/\s\/\s?\d?$/, ''));
    }
  };

  $.formance.fn.format_credit_card_expiry = function() {
    this.formance('restrictNumeric');
    this.on('keypress', restrictExpiry);
    this.on('keypress', formatExpiry);
    this.on('keypress', formatForwardSlashExpiry);
    this.on('keypress', formatForwardExpiry);
    this.on('keydown', formatBackExpiry);
    return this;
  };

  parseCreditCardExpiry = function(expiry_string) {
    var month, prefix, val, year, _ref;

    val = expiry_string.replace(/\s/g, '');
    _ref = val.split('/', 2), month = _ref[0], year = _ref[1];
    if ((year != null ? year.length : void 0) === 2 && /^\d+$/.test(year)) {
      prefix = (new Date).getFullYear();
      prefix = prefix.toString().slice(0, 2);
      year = prefix + year;
    }
    month = parseInt(month, 10);
    year = parseInt(year, 10);
    return {
      month: month,
      year: year
    };
  };

  $.formance.fn.val_credit_card_expiry = function() {
    var expiry;

    expiry = parseCreditCardExpiry(this.val());
    if ((expiry.month == null) || isNaN(expiry.month)) {
      return false;
    }
    if ((expiry.year == null) || isNaN(expiry.year)) {
      return false;
    }
    return new Date(expiry.year, expiry.month - 1);
  };

  $.formance.fn.validate_credit_card_expiry = function() {
    var currentTime, expiry, expiry_date, month, prefix, year, _ref;

    expiry_date = parseCreditCardExpiry(this.val());
    month = expiry_date.month;
    year = expiry_date.year;
    if (typeof month === 'object' && 'month' in month) {
      _ref = month, month = _ref.month, year = _ref.year;
    }
    if (!(month && year)) {
      return false;
    }
    month = $.trim(month);
    year = $.trim(year);
    if (!/^\d+$/.test(month)) {
      return false;
    }
    if (!/^\d+$/.test(year)) {
      return false;
    }
    if (!(parseInt(month, 10) <= 12)) {
      return false;
    }
    if (year.length === 2) {
      prefix = (new Date).getFullYear();
      prefix = prefix.toString().slice(0, 2);
      year = prefix + year;
    }
    expiry = new Date(year, month);
    currentTime = new Date;
    expiry.setMonth(expiry.getMonth() - 1);
    expiry.setMonth(expiry.getMonth() + 1, 1);
    return expiry > currentTime;
  };

  $ = jQuery;

  hasTextSelected = $.formance.fn.hasTextSelected;

  defaultFormat = /(\d{1,4})/g;

  cards = [
    {
      type: 'maestro',
      pattern: /^(5018|5020|5038|6304|6759|676[1-3])/,
      format: defaultFormat,
      length: [12, 13, 14, 15, 16, 17, 18, 19],
      cvcLength: [3],
      luhn: true
    }, {
      type: 'dinersclub',
      pattern: /^(36|38|30[0-5])/,
      format: defaultFormat,
      length: [14],
      cvcLength: [3],
      luhn: true
    }, {
      type: 'laser',
      pattern: /^(6706|6771|6709)/,
      format: defaultFormat,
      length: [16, 17, 18, 19],
      cvcLength: [3],
      luhn: true
    }, {
      type: 'jcb',
      pattern: /^35/,
      format: defaultFormat,
      length: [16],
      cvcLength: [3],
      luhn: true
    }, {
      type: 'unionpay',
      pattern: /^62/,
      format: defaultFormat,
      length: [16, 17, 18, 19],
      cvcLength: [3],
      luhn: false
    }, {
      type: 'discover',
      pattern: /^(6011|65|64[4-9]|622)/,
      format: defaultFormat,
      length: [16],
      cvcLength: [3],
      luhn: true
    }, {
      type: 'mastercard',
      pattern: /^5[1-5]/,
      format: defaultFormat,
      length: [16],
      cvcLength: [3],
      luhn: true
    }, {
      type: 'amex',
      pattern: /^3[47]/,
      format: /(\d{1,4})(\d{1,6})?(\d{1,5})?/,
      length: [15],
      cvcLength: [3, 4],
      luhn: true
    }, {
      type: 'visa',
      pattern: /^4/,
      format: defaultFormat,
      length: [13, 14, 15, 16],
      cvcLength: [3],
      luhn: true
    }
  ];

  cardFromNumber = function(num) {
    var card, _i, _len;

    num = (num + '').replace(/\D/g, '');
    for (_i = 0, _len = cards.length; _i < _len; _i++) {
      card = cards[_i];
      if (card.pattern.test(num)) {
        return card;
      }
    }
  };

  cardFromType = function(type) {
    var card, _i, _len;

    for (_i = 0, _len = cards.length; _i < _len; _i++) {
      card = cards[_i];
      if (card.type === type) {
        return card;
      }
    }
  };

  luhnCheck = function(num) {
    var digit, digits, odd, sum, _i, _len;

    odd = true;
    sum = 0;
    digits = (num + '').split('').reverse();
    for (_i = 0, _len = digits.length; _i < _len; _i++) {
      digit = digits[_i];
      digit = parseInt(digit, 10);
      if ((odd = !odd)) {
        digit *= 2;
      }
      if (digit > 9) {
        digit -= 9;
      }
      sum += digit;
    }
    return sum % 10 === 0;
  };

  restrictCardNumber = function(e) {
    var $target, card, digit, value;

    $target = $(e.currentTarget);
    digit = String.fromCharCode(e.which);
    if (!/^\d+$/.test(digit)) {
      return;
    }
    if (hasTextSelected($target)) {
      return;
    }
    value = ($target.val() + digit).replace(/\D/g, '');
    card = cardFromNumber(value);
    if (card) {
      return value.length <= card.length[card.length.length - 1];
    } else {
      return value.length <= 16;
    }
  };

  reFormatCardNumber = function(e) {
    var _this = this;

    return setTimeout(function() {
      var $target, value;

      $target = $(e.currentTarget);
      value = $target.val();
      value = $.formance.formatCardNumber(value);
      return $target.val(value);
    });
  };

  formatCardNumber = function(e) {
    var $target, card, digit, length, re, upperLength, value;

    digit = String.fromCharCode(e.which);
    if (!/^\d+$/.test(digit)) {
      return;
    }
    $target = $(e.currentTarget);
    value = $target.val();
    card = cardFromNumber(value + digit);
    length = (value.replace(/\D/g, '') + digit).length;
    upperLength = 16;
    if (card) {
      upperLength = card.length[card.length.length - 1];
    }
    if (length >= upperLength) {
      return;
    }
    if (($target.prop('selectionStart') != null) && $target.prop('selectionStart') !== value.length) {
      return;
    }
    if (card && card.type === 'amex') {
      re = /^(\d{4}|\d{4}\s\d{6})$/;
    } else {
      re = /(?:^|\s)(\d{4})$/;
    }
    if (re.test(value)) {
      e.preventDefault();
      return $target.val(value + ' ' + digit);
    } else if (re.test(value + digit)) {
      e.preventDefault();
      return $target.val(value + digit + ' ');
    }
  };

  formatBackCardNumber = function(e) {
    var $target, value;

    $target = $(e.currentTarget);
    value = $target.val();
    if (e.meta) {
      return;
    }
    if (e.which !== 8) {
      return;
    }
    if (($target.prop('selectionStart') != null) && $target.prop('selectionStart') !== value.length) {
      return;
    }
    if (/\d\s$/.test(value)) {
      e.preventDefault();
      return $target.val(value.replace(/\d\s$/, ''));
    } else if (/\s\d?$/.test(value)) {
      e.preventDefault();
      return $target.val(value.replace(/\s\d?$/, ''));
    }
  };

  setCardType = function(e) {
    var $target, allTypes, card, cardType, val;

    $target = $(e.currentTarget);
    val = $target.val();
    cardType = $.formance.creditCardType(val) || 'unknown';
    if (!$target.hasClass(cardType)) {
      allTypes = (function() {
        var _i, _len, _results;

        _results = [];
        for (_i = 0, _len = cards.length; _i < _len; _i++) {
          card = cards[_i];
          _results.push(card.type);
        }
        return _results;
      })();
      $target.removeClass('unknown');
      $target.removeClass(allTypes.join(' '));
      $target.addClass(cardType);
      $target.toggleClass('identified', cardType !== 'unknown');
      return $target.trigger('payment.cardType', cardType);
    }
  };

  $.formance.creditCardType = function(num) {
    var _ref;

    if (!num) {
      return null;
    }
    return ((_ref = cardFromNumber(num)) != null ? _ref.type : void 0) || null;
  };

  $.formance.formatCreditCardNumber = function(num) {
    var card, groups, upperLength, _ref;

    card = cardFromNumber(num);
    if (!card) {
      return num;
    }
    upperLength = card.length[card.length.length - 1];
    num = num.replace(/\D/g, '');
    num = num.slice(0, +upperLength + 1 || 9e9);
    if (card.format.global) {
      return (_ref = num.match(card.format)) != null ? _ref.join(' ') : void 0;
    } else {
      groups = card.format.exec(num);
      if (groups != null) {
        groups.shift();
      }
      return groups != null ? groups.join(' ') : void 0;
    }
  };

  $.formance.fn.format_credit_card_number = function() {
    this.formance('restrictNumeric');
    this.on('keypress', restrictCardNumber);
    this.on('keypress', formatCardNumber);
    this.on('keydown', formatBackCardNumber);
    this.on('keyup', setCardType);
    this.on('paste', reFormatCardNumber);
    return this;
  };

  $.formance.fn.validate_credit_card_number = function() {
    var card, num, _ref;

    num = $(this).val();
    num = (num + '').replace(/\s+|-/g, '');
    if (!/^\d+$/.test(num)) {
      return false;
    }
    card = cardFromNumber(num);
    if (!card) {
      return false;
    }
    return (_ref = num.length, __indexOf.call(card.length, _ref) >= 0) && (card.luhn === false || luhnCheck(num));
  };

  $ = jQuery;

  hasTextSelected = $.formance.fn.hasTextSelected;

  restrictDateDDMMYYYY = function(e) {
    var $target, digit, value;

    $target = $(e.currentTarget);
    digit = String.fromCharCode(e.which);
    if (!/^\d+$/.test(digit)) {
      return;
    }
    if (hasTextSelected($target)) {
      return;
    }
    value = $target.val() + digit;
    value = value.replace(/\D/g, '');
    if (value.length > 8) {
      return false;
    }
  };

  formatDateDDMMYYYY = function(e) {
    var $target, digit, old_val, val;

    digit = String.fromCharCode(e.which);
    if (!/^\d+$/.test(digit)) {
      return;
    }
    $target = $(e.currentTarget);
    old_val = $target.val();
    val = old_val + digit;
    if (/^\d$/.test(val) && (digit !== '0' && digit !== '1' && digit !== '2' && digit !== '3')) {
      e.preventDefault();
      return $target.val("0" + val + " / ");
    } else if (/^\d{2}$/.test(val)) {
      e.preventDefault();
      return $target.val("" + val + " / ");
    } else if (/^\d{2}\s\/\s\d$/.test(val) && (digit !== '0' && digit !== '1')) {
      e.preventDefault();
      return $target.val("" + old_val + "0" + digit + " / ");
    } else if (/^\d{2}\s\/\s\d{2}$/.test(val)) {
      e.preventDefault();
      return $target.val("" + val + " / ");
    }
  };

  formatForwardDateDDMMYYYY = function(e) {
    var $target, digit, val;

    digit = String.fromCharCode(e.which);
    if (!/^\d+$/.test(digit)) {
      return;
    }
    $target = $(e.currentTarget);
    val = $target.val();
    if (/^\d{2}$/.test(val) || /^\d{2}\s\/\s\d{2}$/.test(val)) {
      return $target.val("" + val + " / ");
    }
  };

  formatForwardSlashDateDDMMYYYY = function(e) {
    var $target, date, day, month, parse_day, parse_month, slash, val, _ref;

    slash = String.fromCharCode(e.which);
    if (slash !== '/') {
      return;
    }
    $target = $(e.currentTarget);
    val = $target.val();
    parse_day = /^(\d)$/;
    parse_month = /^(\d{2})\s\/\s(\d)$/;
    if (parse_day.test(val) && val !== '0') {
      return $target.val("0" + val + " / ");
    } else if (parse_month.test(val)) {
      _ref = val.match(parse_month), date = _ref[0], day = _ref[1], month = _ref[2];
      if (month !== '0') {
        return $target.val("" + day + " / 0" + month + " / ");
      }
    }
  };

  formatBackDateDDMMYYYY = function(e) {
    var $target, value;

    if (e.meta) {
      return;
    }
    $target = $(e.currentTarget);
    value = $target.val();
    if (e.which !== 8) {
      return;
    }
    if (($target.prop('selectionStart') != null) && $target.prop('selectionStart') !== value.length) {
      return;
    }
    if (/\d(\s|\/)+$/.test(value)) {
      e.preventDefault();
      return $target.val(value.replace(/\d(\s|\/)*$/, ''));
    } else if (/\s\/\s?\d?$/.test(value)) {
      e.preventDefault();
      return $target.val(value.replace(/\s\/\s?\d?$/, ''));
    }
  };

  $.formance.fn.format_dd_mm_yyyy = function() {
    this.formance('restrictNumeric');
    this.on('keypress', restrictDateDDMMYYYY);
    this.on('keypress', formatDateDDMMYYYY);
    this.on('keypress', formatForwardSlashDateDDMMYYYY);
    this.on('keypress', formatForwardDateDDMMYYYY);
    this.on('keydown', formatBackDateDDMMYYYY);
    return this;
  };

  parseDateDDMMYYYY = function(date_string) {
    var day, month, year, _ref;

    _ref = date_string != null ? date_string.replace(/\s/g, '').split('/', 3) : [NaN, NaN, NaN], day = _ref[0], month = _ref[1], year = _ref[2];
    if (!((year != null) && year.length === 4)) {
      year = NaN;
    }
    day = parseInt(day, 10);
    month = parseInt(month, 10);
    year = parseInt(year, 10);
    return {
      day: day,
      month: month,
      year: year
    };
  };

  $.formance.fn.val_dd_mm_yyyy = function() {
    var date;

    date = parseDateDDMMYYYY(this.val());
    if ((date.day == null) || isNaN(date.day)) {
      return false;
    }
    if ((date.month == null) || isNaN(date.month)) {
      return false;
    }
    if ((date.year == null) || isNaN(date.year)) {
      return false;
    }
    return new Date(date.year, date.month - 1, date.day);
  };

  $.formance.fn.validate_dd_mm_yyyy = function() {
    var date, date_dict;

    date_dict = parseDateDDMMYYYY(this.val());
    date = this.formance('val_dd_mm_yyyy');
    if (!((date != null) && date instanceof Date)) {
      return false;
    }
    if (date.getDate() !== date_dict.day) {
      return false;
    }
    if (date.getMonth() + 1 !== date_dict.month) {
      return false;
    }
    if (date.getFullYear() !== date_dict.year) {
      return false;
    }
    return true;
  };

  $ = jQuery;

  hasTextSelected = $.formance.fn.hasTextSelected;

  $.formance.fn.format_email = function() {
    return this;
  };

  $.formance.fn.validate_email = function() {
    var $this, algorithms, val, validator;

    algorithms = {
      simple: /^\S+@\S+$/,
      complex: /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\ ".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA -Z\-0-9]+\.)+[a-zA-Z]{2,}))$/
    };
    $this = $(this);
    val = $this.val();
    if (val == null) {
      return false;
    }
    validator = $this.data('formance_algorithm');
    if ((validator != null) && validator in algorithms) {
      return algorithms[validator].test(val);
    }
    return algorithms['simple'].test(val);
  };

  $ = jQuery;

  $.formance.fn.format_number = function() {
    var length;

    length = $(this).data('formance_length');
    if (length != null) {
      $(this).attr('maxLength', length);
    }
    this.formance('restrictNumeric');
    return this;
  };

  $.formance.fn.validate_number = function() {
    var $this, length, val;

    $this = $(this);
    val = $this.val();
    length = $this.data('formance_length');
    if ((length != null) && (typeof length === 'number') && (val.length !== length)) {
      return false;
    }
    if ((length != null) && typeof length === 'string' && length !== '') {
      if (isNaN(parseInt(length, 10))) {
        return false;
      }
      if (val.length !== parseInt(length, 10)) {
        return false;
      }
    }
    return /^\d+$/.test(val);
  };

  $ = jQuery;

  hasTextSelected = $.formance.fn.hasTextSelected;

  restrictOntarioDriversLicenseNumber = function(e) {
    var $target, char, value;

    $target = $(e.currentTarget);
    char = String.fromCharCode(e.which);
    if (!/^[a-zA-Z\d]+$/.test(char)) {
      return;
    }
    if (hasTextSelected($target)) {
      return;
    }
    value = $target.val() + char;
    value = value.replace(/[^a-zA-Z\d]/g, '');
    if (value.length > 15) {
      return false;
    }
  };

  formatOntarioDriversLicenseNumber = function(e) {
    var $target, char, old_val, val;

    char = String.fromCharCode(e.which);
    if (!/^[a-zA-Z\d]+$/.test(char)) {
      return;
    }
    $target = $(e.currentTarget);
    old_val = $target.val();
    val = old_val + char.toUpperCase();
    if (old_val === '') {
      e.preventDefault();
      if (/^[A-Za-z]$/.test(val)) {
        return $target.val(val);
      }
    } else if (/^[A-Za-z]\d{0,3}$/.test(old_val)) {
      e.preventDefault();
      if (/^[A-Za-z]\d{4}$/.test(val)) {
        val = "" + val + " - ";
      }
      if (/^[A-Za-z]\d{0,4}[\s|\-]*$/.test(val)) {
        return $target.val(val);
      }
    } else if (/^[A-Za-z]\d{4}[\s|\-]*\d{0,4}$/.test(old_val)) {
      e.preventDefault();
      if (/^[A-Za-z]\d{4}[\s|\-]*\d{5}$/.test(val)) {
        val = "" + val + " - ";
      }
      if (/^[A-Za-z]\d{4}[\s|\-]*\d{0,5}[\s|\-]*$/.test(val)) {
        return $target.val(val);
      }
    }
  };

  formatBackOntarioDriversLicenseNumber = function(e) {
    var $target, value;

    if (e.meta) {
      return;
    }
    $target = $(e.currentTarget);
    value = $target.val();
    if (e.which !== 8) {
      return;
    }
    if (($target.prop('selectionStart') != null) && $target.prop('selectionStart') !== value.length) {
      return;
    }
    if (/\d(\s|\-)+$/.test(value)) {
      e.preventDefault();
      return $target.val(value.replace(/\d(\s|\-)+$/, ''));
    }
  };

  formatPasteOntarioDriversLicenseNumber = function(e) {
    var _this = this;

    return setTimeout(function() {
      var $target, first5, full, last5, middle5, val, _ref;

      $target = $(e.currentTarget);
      val = $target.val();
      _ref = val.match(/^([A-Za-z\d]{5})[\s|\-]*(\d{5})[\s|\-]*(\d{5})$/), full = _ref[0], first5 = _ref[1], middle5 = _ref[2], last5 = _ref[3];
      return $target.val("" + first5 + " - " + middle5 + " - " + last5);
    });
  };

  $.formance.fn.format_ontario_drivers_license_number = function() {
    this.formance('restrictAlphaNumeric');
    this.on('keypress', restrictOntarioDriversLicenseNumber);
    this.on('keypress', formatOntarioDriversLicenseNumber);
    this.on('keydown', formatBackOntarioDriversLicenseNumber);
    this.on('paste', formatPasteOntarioDriversLicenseNumber);
    return this;
  };

  $.formance.fn.validate_ontario_drivers_license_number = function() {
    var regex, val;

    val = $(this).val();
    if (val == null) {
      return false;
    }
    val = val.replace(/[\s|\-]/g, '');
    if (!/^[a-zA-Z\d]+$/.test()) {
      return false;
    }
    regex = /^[A-Za-z]\d{4}[\s|\-]*\d{5}[\s|\-]*\d{5}$/;
    return regex.test(val);
  };

  $ = jQuery;

  hasTextSelected = $.formance.fn.hasTextSelected;

  restrictOntarioOutdoorsCardNumber = function(e) {
    var $target, digit, value;

    $target = $(e.currentTarget);
    digit = String.fromCharCode(e.which);
    if (!/^\d+$/.test(digit)) {
      return;
    }
    if (hasTextSelected($target)) {
      return;
    }
    value = $target.val() + digit;
    value = value.replace(/\D/g, '');
    if (value.length > 15) {
      return false;
    }
  };

  formatOntarioOutdoorsCardNumber = function(e) {
    var $target, digit, old_val, val;

    digit = String.fromCharCode(e.which);
    if (!/^\d+$/.test(digit)) {
      return;
    }
    $target = $(e.currentTarget);
    old_val = $target.val();
    val = $target.val() + digit;
    if (old_val === '') {
      e.preventDefault();
      val = /^7$/.test(val) ? "708158 " : "708158 " + val;
      return $target.val(val);
    } else if (/^\d{5}$/.test(old_val)) {
      e.preventDefault();
      if (/^\d{6}$/.test(val)) {
        val = "" + val + " ";
      }
      if (/^\d{6}\s*$/.test(val)) {
        return target.val(val);
      }
    }
  };

  formatBackOntarioOutdoorsCardNumber = function(e) {
    var $target, value;

    if (e.meta) {
      return;
    }
    $target = $(e.currentTarget);
    value = $target.val();
    if (e.which !== 8) {
      return;
    }
    if (($target.prop('selectionStart') != null) && $target.prop('selectionStart') !== value.length) {
      return;
    }
    if (/708158\s+$/.test(value)) {
      e.preventDefault();
      return $target.val(value.replace(/708158\s+$/, ''));
    }
  };

  formatPasteOntarioOutdoorsCardNumber = function(e) {
    var _this = this;

    return setTimeout(function() {
      var $target, first6, full, last9, val, _ref;

      $target = $(e.currentTarget);
      val = $target.val();
      _ref = val.match(/^(\d{6})\s*(\d{9})$/), full = _ref[0], first6 = _ref[1], last9 = _ref[2];
      return $target.val("" + first6 + " " + last9);
    });
  };

  $.formance.fn.format_ontario_outdoors_card_number = function() {
    this.formance('restrictNumeric');
    this.on('keypress', restrictOntarioOutdoorsCardNumber);
    this.on('keypress', formatOntarioOutdoorsCardNumber);
    this.on('keydown', formatBackOntarioOutdoorsCardNumber);
    this.on('paste', formatPasteOntarioOutdoorsCardNumber);
    return this;
  };

  $.formance.fn.validate_ontario_outdoors_card_number = function() {
    var regex, val;

    val = $(this).val();
    if (val == null) {
      return false;
    }
    val = val.replace(/\s/g, '');
    if (!/^\d+$/.test(val)) {
      return false;
    }
    regex = /^708158\s*\d{9}$/;
    return regex.test(val);
  };

  $ = jQuery;

  hasTextSelected = $.formance.fn.hasTextSelected;

  restrictOntarioPhotoHealthCardNumber = function(e) {
    var $target, char, value;

    $target = $(e.currentTarget);
    char = String.fromCharCode(e.which);
    if (!/^[a-zA-Z\d]+$/.test(char)) {
      return;
    }
    if (hasTextSelected($target)) {
      return;
    }
    value = $target.val() + char;
    value = value.replace(/[^a-zA-Z\d]/g, '');
    if (value.length > 12) {
      return false;
    }
  };

  formatOntarioPhotoHealthCardNumber = function(e) {
    var $target, char, old_val, val;

    char = String.fromCharCode(e.which);
    if (!/^[a-zA-Z\d]+$/.test(char)) {
      return;
    }
    $target = $(e.currentTarget);
    old_val = $target.val();
    val = old_val + char.toUpperCase();
    if (/^\d{0,3}$/.test(old_val)) {
      e.preventDefault();
      if (/^\d{4}$/.test(val)) {
        val = "" + val + " - ";
      }
      if (/^\d{0,4}[\s|\-]*$/.test(val)) {
        return $target.val(val);
      }
    } else if (/^\d{4}[\s|\-]*\d{0,2}$/.test(old_val)) {
      e.preventDefault();
      if (/^\d{4}[\s|\-]*\d{3}$/.test(val)) {
        val = "" + val + " - ";
      }
      if (/^\d{4}[\s|\-]*\d{0,3}[\s|\-]*$/.test(val)) {
        return $target.val(val);
      }
    } else if (/^\d{4}[\s|\-]*\d{3}[\s|\-]*\d{0,2}$/.test(old_val)) {
      e.preventDefault();
      if (/^\d{4}[\s|\-]*\d{3}[\s|\-]*\d{3}$/.test(val)) {
        val = "" + val + " - ";
      }
      if (/^\d{4}[\s|\-]*\d{3}[\s|\-]*\d{0,3}[\s|\-]*$/.test(val)) {
        return $target.val(val);
      }
    } else if (/^\d{4}[\s|\-]*\d{3}[\s|\-]*\d{3}[\s|\-]*[A-Za-z]{0,1}$/.test(old_val)) {
      e.preventDefault();
      if (/^\d{4}[\s|\-]*\d{3}[\s|\-]*\d{3}[\s|\-]*[A-Za-z]{0,2}$/.test(val)) {
        return $target.val(val);
      }
    }
  };

  formatBackOntarioPhotoHealthCardNumber = function(e) {
    var $target, value;

    if (e.meta) {
      return;
    }
    $target = $(e.currentTarget);
    value = $target.val();
    if (e.which !== 8) {
      return;
    }
    if (($target.prop('selectionStart') != null) && $target.prop('selectionStart') !== value.length) {
      return;
    }
    if (/\d(\s|\-)+$/.test(value)) {
      e.preventDefault();
      return $target.val(value.replace(/\d(\s|\-)+$/, ''));
    }
  };

  formatPasteOntarioPhotoHealthCardNumber = function(e) {
    var _this = this;

    return setTimeout(function() {
      var $target, first4, full, last2, second3, third3, val, _ref;

      $target = $(e.currentTarget);
      val = $target.val();
      _ref = val.match(/^(\d{4})[\s|\-]*(\d{3})[\s|\-]*(\d{3})[\s|\-]*([A-Za-z]{2})$/), full = _ref[0], first4 = _ref[1], second3 = _ref[2], third3 = _ref[3], last2 = _ref[4];
      return $target.val("" + first4 + " - " + second3 + " - " + third3 + " - " + last2);
    });
  };

  $.formance.fn.format_ontario_photo_health_card_number = function() {
    this.formance('restrictAlphaNumeric');
    this.on('keypress', restrictOntarioPhotoHealthCardNumber);
    this.on('keypress', formatOntarioPhotoHealthCardNumber);
    this.on('keydown', formatBackOntarioPhotoHealthCardNumber);
    this.on('paste', formatPasteOntarioPhotoHealthCardNumber);
    return this;
  };

  $.formance.fn.validate_ontario_photo_health_card_number = function() {
    var regex, val;

    val = $(this).val();
    if (val == null) {
      return false;
    }
    val = val.replace(/[\s|\-]/g, '');
    if (!/^[a-zA-Z\d]+$/.test()) {
      return false;
    }
    regex = /^\d{4}[\s|\-]*\d{3}[\s|\-]*\d{3}[\s|\-]*[A-Za-z]{2}$/;
    return regex.test(val);
  };

  $ = jQuery;

  hasTextSelected = $.formance.fn.hasTextSelected;

  reFormatPhoneNumber = function(phoneNumberString) {
    var areaCode, first3, last4, phoneNumber, text, _ref;

    phoneNumber = phoneNumberString.replace(/\D/g, '').match(/^(\d{0,3})?(\d{0,3})?(\d{0,4})?$/);
    _ref = phoneNumber, phoneNumber = _ref[0], areaCode = _ref[1], first3 = _ref[2], last4 = _ref[3];
    text = '';
    if (areaCode != null) {
      text += "(" + areaCode;
    }
    if ((areaCode != null ? areaCode.length : void 0) === 3) {
      text += ") ";
    }
    if (first3 != null) {
      text += "" + first3;
    }
    if ((first3 != null ? first3.length : void 0) === 3) {
      text += " - ";
    }
    if (last4 != null) {
      text += "" + last4;
    }
    return text;
  };

  restrictPhoneNumber = function(e) {
    var $target, digit, value;

    $target = $(e.currentTarget);
    digit = String.fromCharCode(e.which);
    if (!/^\d+$/.test(digit)) {
      return;
    }
    if (hasTextSelected($target)) {
      return;
    }
    value = $target.val() + digit;
    value = value.replace(/\D/g, '');
    if (value.length > 10) {
      return false;
    }
  };

  formatPhoneNumber = function(e) {
    var $target, digit, text, val;

    digit = String.fromCharCode(e.which);
    if (!/^\d+$/.test(digit)) {
      return;
    }
    $target = $(e.currentTarget);
    val = $target.val() + digit;
    text = reFormatPhoneNumber(val);
    e.preventDefault();
    return $target.val(text);
  };

  formatBackPhoneNumber = function(e) {
    var $target, value;

    if (e.meta) {
      return;
    }
    $target = $(e.currentTarget);
    value = $target.val();
    if (e.which !== 8) {
      return;
    }
    if (($target.prop('selectionStart') != null) && $target.prop('selectionStart') !== value.length) {
      return;
    }
    if (/\(\d$/.test(value)) {
      e.preventDefault();
      return $target.val('');
    } else if (/\d\)(\s)+$/.test(value)) {
      e.preventDefault();
      return $target.val(value.replace(/\d\)(\s)*$/, ''));
    } else if (/\d(\s|\-)+$/.test(value)) {
      e.preventDefault();
      return $target.val(value.replace(/\d(\s|\-)+$/, ''));
    }
  };

  formatPastePhoneNumber = function(e) {
    var _this = this;

    return setTimeout(function() {
      var $target, text, val;

      $target = $(e.currentTarget);
      val = $target.val();
      text = reFormatPhoneNumber(val);
      return $target.val(text);
    });
  };

  $.formance.fn.format_phone_number = function() {
    this.formance('restrictNumeric');
    this.on('keypress', restrictPhoneNumber);
    this.on('keypress', formatPhoneNumber);
    this.on('keydown', formatBackPhoneNumber);
    this.on('paste', formatPastePhoneNumber);
    return this;
  };

  $.formance.fn.validate_phone_number = function() {
    var val;

    val = $(this).val();
    if (val == null) {
      return false;
    }
    val = val.replace(/\(|\)|\s+|-/g, '');
    if (!/^\d+$/.test(val)) {
      return false;
    }
    return val.replace(/\D/g, '').length === 10;
  };

  $ = jQuery;

  hasTextSelected = $.formance.fn.hasTextSelected;

  restrictPostalCode = function(e) {
    var $target, char, value;

    $target = $(e.currentTarget);
    char = String.fromCharCode(e.which);
    if (!/^[a-zA-Z\d]+$/.test(char)) {
      return;
    }
    if (hasTextSelected($target)) {
      return;
    }
    value = $target.val() + char;
    value = value.replace(/[^a-zA-Z\d]/g, '');
    if (value.length > 6) {
      return false;
    }
  };

  formatPostalCode = function(e) {
    var $target, char, old_val, val;

    char = String.fromCharCode(e.which);
    if (!/^[a-zA-Z\d]+$/.test(char)) {
      return;
    }
    $target = $(e.currentTarget);
    old_val = $target.val();
    val = old_val + char.toUpperCase();
    if (old_val === '') {
      e.preventDefault();
      if (/^[ABCEFGHJKLMNPRSTVXY]$/.test(val)) {
        return $target.val(val);
      }
    } else if (/^[ABCEFGHJKLMNPRSTVXY]$/.test(old_val)) {
      e.preventDefault();
      if (/^[ABCEFGHJKLMNPRSTVXY][0-9]$/.test(val)) {
        return $target.val(val);
      }
    } else if (/^[ABCEFGHJKLMNPRSTVXY][0-9]$/.test(old_val)) {
      e.preventDefault();
      if (/^[ABCEFGHJKLMNPRSTVXY][0-9][ABCEFGHJKLMNPRSTVWXYZ]$/.test(val)) {
        return $target.val("" + val + " ");
      }
    } else if (/^[ABCEFGHJKLMNPRSTVXY][0-9][ABCEFGHJKLMNPRSTVWXYZ]\s$/.test(old_val)) {
      e.preventDefault();
      if (/^[ABCEFGHJKLMNPRSTVXY][0-9][ABCEFGHJKLMNPRSTVWXYZ]\s?[0-9]$/.test(val)) {
        return $target.val(val);
      }
    } else if (/^[ABCEFGHJKLMNPRSTVXY][0-9][ABCEFGHJKLMNPRSTVWXYZ]\s?[0-9]$/.test(old_val)) {
      e.preventDefault();
      if (/^[ABCEFGHJKLMNPRSTVXY][0-9][ABCEFGHJKLMNPRSTVWXYZ]\s?[0-9][ABCEFGHJKLMNPRSTVWXYZ]$/.test(val)) {
        return $target.val(val);
      }
    } else if (/^[ABCEFGHJKLMNPRSTVXY][0-9][ABCEFGHJKLMNPRSTVWXYZ]\s?[0-9][ABCEFGHJKLMNPRSTVWXYZ]$/.test(old_val)) {
      e.preventDefault();
      if (/^[ABCEFGHJKLMNPRSTVXY][0-9][ABCEFGHJKLMNPRSTVWXYZ]\s?[0-9][ABCEFGHJKLMNPRSTVWXYZ][0-9]$/.test(val)) {
        return $target.val(val);
      }
    }
  };

  formatBackPostalCode = function(e) {
    var $target, value;

    if (e.meta) {
      return;
    }
    $target = $(e.currentTarget);
    value = $target.val();
    if (e.which !== 8) {
      return;
    }
    if (($target.prop('selectionStart') != null) && $target.prop('selectionStart') !== value.length) {
      return;
    }
    if (/[ABCEFGHJKLMNPRSTVWXYZ](\s)+$/.test(value)) {
      e.preventDefault();
      return $target.val(value.replace(/[ABCEFGHJKLMNPRSTVWXYZ](\s)*$/, ''));
    }
  };

  formatPastePostalCode = function(e) {
    var _this = this;

    return setTimeout(function() {
      var $target, first_part, full, second_part, val, _ref;

      $target = $(e.currentTarget);
      val = $target.val();
      _ref = val.match(/^([ABCEFGHJKLMNPRSTVXY][0-9][ABCEFGHJKLMNPRSTVWXYZ])\s?([0-9][ABCEFGHJKLMNPRSTVWXYZ][0-9])$/), full = _ref[0], first_part = _ref[1], second_part = _ref[2];
      return $target.val("" + first_part + " " + second_part);
    });
  };

  $.formance.fn.format_postal_code = function() {
    this.formance('restrictAlphaNumeric');
    this.on('keypress', restrictPostalCode);
    this.on('keypress', formatPostalCode);
    this.on('keydown', formatBackPostalCode);
    this.on('paste', formatPastePostalCode);
    return this;
  };

  $.formance.fn.validate_postal_code = function() {
    var val;

    val = $(this).val();
    if (val == null) {
      return false;
    }
    val = val.replace(/\s+/g, '');
    if (!/^[a-zA-Z\d]+$/.test(val)) {
      return false;
    }
    val = val.replace(/[^a-zA-Z\d]/g, '');
    return /^[ABCEFGHJKLMNPRSTVXY][0-9][ABCEFGHJKLMNPRSTVWXYZ]\s?[0-9][ABCEFGHJKLMNPRSTVWXYZ][0-9]$/.test(val.toUpperCase());
  };

  $ = jQuery;

  hasTextSelected = $.formance.fn.hasTextSelected;

  restrictTimeYYMM = function(e) {
    var $target, digit, value;

    $target = $(e.currentTarget);
    digit = String.fromCharCode(e.which);
    if (!/^\d+$/.test(digit)) {
      return;
    }
    if (hasTextSelected($target)) {
      return;
    }
    value = $target.val() + digit;
    value = value.replace(/\D/g, '');
    if (value.length > 4) {
      return false;
    }
  };

  formatTimeYYMM = function(e) {
    var $target, digit, old_val, val;

    digit = String.fromCharCode(e.which);
    if (!/^\d+$/.test(digit)) {
      return;
    }
    $target = $(e.currentTarget);
    old_val = $target.val();
    val = old_val + digit;
    if (/^\d{2}$/.test(val)) {
      e.preventDefault();
      return $target.val("" + val + " / ");
    } else if (/^\d{2}\s\/\s\d{1}$/.test(val) && (digit !== '0' && digit !== '1')) {
      e.preventDefault();
      return $target.val("" + old_val + "0" + digit);
    }
  };

  formatForwardTimeYYMM = function(e) {
    var $target, digit, val;

    digit = String.fromCharCode(e.which);
    if (!/^\d+$/.test(digit)) {
      return;
    }
    $target = $(e.currentTarget);
    val = $target.val();
    if (/^\d{2}$/.test(val)) {
      return $target.val("" + val + " / ");
    }
  };

  formatForwardSlashTimeYYMM = function(e) {
    var $target, parse_year, slash, val;

    slash = String.fromCharCode(e.which);
    if (slash !== '/') {
      return;
    }
    $target = $(e.currentTarget);
    val = $target.val();
    parse_year = /^(\d)$/;
    if (parse_year.test(val) && val.length === 2 || val.length === 1) {
      return $target.val("0" + val + " / ");
    }
  };

  formatBackTimeYYMM = function(e) {
    var $target, value;

    if (e.meta) {
      return;
    }
    $target = $(e.currentTarget);
    value = $target.val();
    if (e.which !== 8) {
      return;
    }
    if (($target.prop('selectionStart') != null) && $target.prop('selectionStart') !== value.length) {
      return;
    }
    if (/\d(\s|\/)+$/.test(value)) {
      e.preventDefault();
      return $target.val(value.replace(/\d(\s|\/)*$/, ''));
    } else if (/\s\/\s?\d?$/.test(value)) {
      e.preventDefault();
      return $target.val(value.replace(/\s\/\s?\d?$/, ''));
    }
  };

  $.formance.fn.format_time_yy_mm = function() {
    this.formance("restrictNumeric");
    this.on("keypress", restrictTimeYYMM);
    this.on("keypress", formatTimeYYMM);
    this.on("keypress", formatForwardTimeYYMM);
    this.on("keypress", formatForwardSlashTimeYYMM);
    this.on("keydown", formatBackTimeYYMM);
    return this;
  };

  parseTimeYYMM = function(time_string) {
    var months, years, _ref;

    _ref = time_string != null ? time_string.replace(/\s/g, '').split('/', 2) : [NaN, NaN], years = _ref[0], months = _ref[1];
    months = parseInt(months, 10);
    years = parseInt(years, 10);
    return {
      years: years,
      months: months
    };
  };

  $.formance.fn.val_time_yy_mm = function() {
    var time;

    time = parseTimeYYMM(this.val());
    if ((time.years == null) || isNaN(time.years)) {
      return false;
    }
    if ((time.months == null) || isNaN(time.months)) {
      return false;
    }
    return time;
  };

  $.formance.fn.validate_time_yy_mm = function() {
    var time, time_dict, time_yymm;

    time_dict = parseTimeYYMM(this.val());
    time = this.formance("val_time_yy_mm");
    time_yymm = $(this).val();
    if (time.months !== time_dict.months) {
      return false;
    }
    if (time.years !== time_dict.years) {
      return false;
    }
    if (/^(\d{1}[\d{1}]*)[\s\/]*(\d{1}[\d{1}]*)[\s\/]*$/.test(time_yymm)) {
      return true;
    }
    return false;
  };

  $ = jQuery;

  hasTextSelected = $.formance.fn.hasTextSelected;

  restrictUkSortCode = function(e) {
    var $target, digit, value;

    $target = $(e.currentTarget);
    digit = String.fromCharCode(e.which);
    if (!/^\d+$/.test(digit)) {
      return;
    }
    if (hasTextSelected($target)) {
      return;
    }
    value = $target.val() + digit;
    value = value.replace(/\D/g, '');
    if (value.length > 6) {
      return false;
    }
  };

  formatForwardUkSortCode = function(e) {
    var $target, digit, val;

    digit = String.fromCharCode(e.which);
    if (!/^\d+$/.test(digit)) {
      return;
    }
    $target = $(e.currentTarget);
    val = $target.val();
    if (/^\d{2}$/.test(val) || /^\d{2}\s\-\s\d{2}$/.test(val)) {
      return $target.val("" + val + " - ");
    }
  };

  formatBackUkSortCode = function(e) {
    var $target, value;

    if (e.meta) {
      return;
    }
    $target = $(e.currentTarget);
    value = $target.val();
    if (e.which !== 8) {
      return;
    }
    if (($target.prop('selectionStart') != null) && $target.prop('selectionStart') !== value.length) {
      return;
    }
    if (/\d(\s|\-)+$/.test(value)) {
      e.preventDefault();
      return $target.val(value.replace(/\d(\s|\-)+$/, ''));
    } else if (/\s\-\s?\d?$/.test(value)) {
      e.preventDefault();
      return $target.val(value.replace(/\s\-\s?\d?$/, ''));
    }
  };

  formatUkSortCode = function(e) {
    var $target, digit, old_val, val;

    digit = String.fromCharCode(e.which);
    if (!/^\d+$/.test(digit)) {
      return;
    }
    $target = $(e.currentTarget);
    old_val = $target.val();
    val = old_val + digit;
    if (/^\d{2}$/.test(val)) {
      e.preventDefault();
      return $target.val("" + val + " - ");
    } else if (/^\d{2}\s\-\s\d{2}$/.test(val)) {
      e.preventDefault();
      return $target.val("" + val + " - ");
    }
  };

  $.formance.fn.format_uk_sort_code = function(e) {
    this.formance("restrictNumeric");
    this.on("keypress", restrictUkSortCode);
    this.on("keypress", formatUkSortCode);
    this.on("keypress", formatForwardUkSortCode);
    this.on("keydown", formatBackUkSortCode);
    return this;
  };

  $.formance.fn.validate_uk_sort_code = function() {
    var sortCode;

    sortCode = $(this).val();
    if (/^(\d{2})[\s\-]*(\d{2})[\s\-]*(\d{2})[\s]*$/.test(sortCode)) {
      return true;
    }
    return false;
  };

  $ = jQuery;

  hasTextSelected = $.formance.fn.hasTextSelected;

  restrictDateYYYYMMDD = function(e) {
    var $target, digit, value;

    $target = $(e.currentTarget);
    digit = String.fromCharCode(e.which);
    if (!/^\d+$/.test(digit)) {
      return;
    }
    if (hasTextSelected($target)) {
      return;
    }
    value = $target.val() + digit;
    value = value.replace(/\D/g, '');
    if (value.length > 8) {
      return false;
    }
  };

  formatDateYYYYMMDD = function(e) {
    var $target, digit, old_val, val;

    digit = String.fromCharCode(e.which);
    if (!/^\d+$/.test(digit)) {
      return;
    }
    $target = $(e.currentTarget);
    old_val = $target.val();
    val = old_val + digit;
    if (/^\d{4}$/.test(val)) {
      e.preventDefault();
      return $target.val("" + val + " / ");
    } else if (/^\d{4}\s\/\s\d$/.test(val) && (digit !== '0' && digit !== '1')) {
      e.preventDefault();
      return $target.val("" + old_val + "0" + digit + " / ");
    } else if (/^\d{4}\s\/\s\d{2}$/.test(val)) {
      e.preventDefault();
      return $target.val("" + val + " / ");
    } else if (/^\d{4}\s\/\s\d{2}\s\/\s\d$/.test(val) && (digit !== '0' && digit !== '1' && digit !== '2' && digit !== '3')) {
      e.preventDefault();
      return $target.val("" + old_val + "0" + digit);
    }
  };

  formatForwardDateYYYYMMDD = function(e) {
    var $target, digit, val;

    digit = String.fromCharCode(e.which);
    if (!/^\d+$/.test(digit)) {
      return;
    }
    $target = $(e.currentTarget);
    val = $target.val();
    if (/^\d{4}$/.test(val) || /^\d{4}\s\/\s\d{2}$/.test(val)) {
      return $target.val("" + val + " / ");
    }
  };

  formatForwardSlashDateYYYYMMDD = function(e) {
    var $target, date, month, parse_month, slash, val, year, _ref;

    slash = String.fromCharCode(e.which);
    if (slash !== '/') {
      return;
    }
    $target = $(e.currentTarget);
    val = $target.val();
    parse_month = /^(\d{4})\s\/\s(\d)$/;
    if (parse_month.test(val)) {
      _ref = val.match(parse_month), date = _ref[0], year = _ref[1], month = _ref[2];
      if (month !== '0') {
        return $target.val("" + year + " / 0" + month + " / ");
      }
    }
  };

  formatBackDateYYYYMMDD = function(e) {
    var $target, value;

    if (e.meta) {
      return;
    }
    $target = $(e.currentTarget);
    value = $target.val();
    if (e.which !== 8) {
      return;
    }
    if (($target.prop('selectionStart') != null) && $target.prop('selectionStart') !== value.length) {
      return;
    }
    if (/\d(\s|\/)+$/.test(value)) {
      e.preventDefault();
      return $target.val(value.replace(/\d(\s|\/)*$/, ''));
    } else if (/\s\/\s?\d?$/.test(value)) {
      e.preventDefault();
      return $target.val(value.replace(/\s\/\s?\d?$/, ''));
    }
  };

  $.formance.fn.format_yyyy_mm_dd = function() {
    this.formance('restrictNumeric');
    this.on('keypress', restrictDateYYYYMMDD);
    this.on('keypress', formatDateYYYYMMDD);
    this.on('keypress', formatForwardSlashDateYYYYMMDD);
    this.on('keypress', formatForwardDateYYYYMMDD);
    this.on('keydown', formatBackDateYYYYMMDD);
    return this;
  };

  parse_date_yyyy_mm_dd = function(date_string) {
    var day, month, year, _ref;

    _ref = date_string != null ? date_string.replace(/\s/g, '').split('/', 3) : [NaN, NaN, NaN], year = _ref[0], month = _ref[1], day = _ref[2];
    if (!((year != null) && year.length === 4)) {
      year = NaN;
    }
    day = parseInt(day, 10);
    month = parseInt(month, 10);
    year = parseInt(year, 10);
    return {
      day: day,
      month: month,
      year: year
    };
  };

  $.formance.fn.val_yyyy_mm_dd = function() {
    var date;

    date = parse_date_yyyy_mm_dd(this.val());
    if ((date.day == null) || isNaN(date.day)) {
      return false;
    }
    if ((date.month == null) || isNaN(date.month)) {
      return false;
    }
    if ((date.year == null) || isNaN(date.year)) {
      return false;
    }
    return new Date(date.year, date.month - 1, date.day);
  };

  $.formance.fn.validate_yyyy_mm_dd = function() {
    var date, date_dict;

    date_dict = parse_date_yyyy_mm_dd(this.val());
    date = this.formance('val_yyyy_mm_dd');
    if (!((date != null) && date instanceof Date)) {
      return false;
    }
    if (date.getDate() !== date_dict.day) {
      return false;
    }
    if (date.getMonth() + 1 !== date_dict.month) {
      return false;
    }
    if (date.getFullYear() !== date_dict.year) {
      return false;
    }
    return true;
  };

}).call(this);

 /* show more show less */
 /* show more show less */
/**
 * iClear - Method for clearing input on click of x 
 */
jQuery(function($) {
	
	//FPH refresh time 
	 var PAGEID = $('input[name=_PAGE_ID]');
	if (PAGEID.val() == "FPHRESULT_PAGE") {
		
		$('#_bodyContainer').empty();
		
	} 

	if($(window).width() > 1024 && $(window).width() > 1048){
		function tog(v){return v?'addClass':'removeClass';}
		$('body').on('focus','input.iClear',function(){      
			$(this)[tog(this.value)]('x');
			$(this).select();
		}).on('keyup','input.iClear',function(e){  
			if(e.keyCode == 8 || e.keyCode == 46){
				if($(this).val().length==0){
					var jitVal = $(this).attr('data-jit');
					$(this).removeClass('x onX').val('').change();
					$(this).attr('value','');
					$(this).attr('data-iata','');
					if(jitVal!=""){
						$('#'+jitVal).val('').change();
					}
				}        	
			}else{            
				$(this)[tog(this.value)]('x'); 
			}
		}).on('mousemove', '.x', function(e) {
			var exLeft = e.clientX-this.getBoundingClientRect().left;
			var exRight = e.clientX-this.getBoundingClientRect().right, exRight = - exRight;
			var setCord = exLeft;
			/*Fix for arabic page*/
			if($("html").hasClass("ar")){
				setCord = exRight;
			}
			$(this)[tog(this.offsetWidth-18 < setCord)]('onX');
			
		}).on('blur','input',function(){
			$(this).removeClass('x');
		}).on('click','input.onX',function(){
			var jitVal = $(this).attr('data-jit');
			$(this).removeClass('x onX').val('').change();
			$(this).attr('value','');
			$(this).attr('data-iata','');
			$(this).attr('title','');
			if(jitVal!=""){
				$('#'+jitVal).val('').change();
			}
		});
	}	

    var minimized_elements = $('small.minimize');
    	_langGlobal.langRender(function(){
		minimized_elements.each(function(){    
        var t = $(this).text();        
        if(t.length < 50) return;
        
        $(this).html(
            t.slice(0,65)+'<span>... </span><a href="#" class="more">'+ i18n.t('more')+'</a>'+
            '<span style="display:none;">'+ t.slice(65,t.length)+' <a href="#" class="less">'+ i18n.t('less')+'</a></span>'
        );
        
    }); 
    
    $('a.more', minimized_elements).click(function(event){
        event.preventDefault();
        $(this).hide().prev().hide();
        $(this).next().show();        
    });
    
    $('a.less', minimized_elements).click(function(event){
        event.preventDefault();
        $(this).parent().hide().prev().show().prev().show();    
    });
});

/* show more show less end */	
if($('#_bodyContainer').hasClass('home') || $('#_bodyContainer').hasClass('lPage') || $('#_bodyContainer').hasClass('airLPage')){
	setTimeout(function(){
		$('body').append('<img src="/common/themes/v2/img/loadingRsltPage.gif" style="display:none;"/>');
	},10000);
};






/*
*@Scrool to Top //added by Raghava
*/  

$(window).scroll(function(){
	/*Mobile Script starts here*/
	if(typeof $('.availabilitySec')[0]!="undefined"){
		if($(this).scrollTop() > 58){
			$('.availabilitySec').addClass('fixed');
		}else if ($(this).scrollTop() < 58) {
			$('.availabilitySec').removeClass('fixed');
		}
	}
	if(typeof $('.scrollup')[0]!="undefined"){
		if($(this).scrollTop() > 100){
			$('.scrollup').fadeIn();
		}else{
			$('.scrollup').fadeOut();
		}
	}
});
 $('.scrollup').click(function(){
	$("html, body").animate({ scrollTop: 0 }, 600);
	return false;
}); 

/*  $('body').on('click', '.toggle-menu', function() {
 
    $(this).toggleClass('active');
    $('.filterSec').slideToggle();
}); */

/*   $('body').on('click', '.primary-content .toggle-menu', function() {
	   $('#filterFF.filterSec').hide();
  //  $('.toggle-menu').toggleClass('active');
	$('#filterBO.filterSec').show();
}); */
/*  $('body').on('click', '.primary-content.fResultSec .toggle-menu', function() {
$('#filterBO.filterSec').hide();
   // $('.toggle-menu').toggleClass('active');
    $('#filterFF.filterSec').show();
}); */
   

/* $('body').on('click', '.toggle-menu', function() {
	if($(window).width() < 1023){
		$(this).toggleClass('active');
		$('.filterSec').slideToggle();
	}
});   

$(window).resize(function() {
	if($(window).width() > 768){
		$('.filterSec').show(); 
	}
});
 */
	
	/* Header Navigation DropDown Functionality */
    $('body').on('click', '.topMenu .dp-opt', function(event) {
        if (!$('.dropdown').is(':visible')) {
            if (!$(this).find('.dropdown').is(':visible')) {
                $(this).find('.dropdown').toggle();
            }
        } else {
            $('.topMenu .dp-opt .dropdown').hide();
        }
        event.stopPropagation();
    });
    $(document).click(function(e) {
		
        if ($('.topMenu .dp-opt .dropdown').is(':visible')) {
            $('.topMenu .dp-opt .dropdown', this).hide();
        }
    });


$('.passengerSeg').click(function(){
	$(this).toggleClass('active');
	$(this).next().slideToggle();
})


/* [[ fare details start here ]]*/
$('body').on('click', '.trvlRSeatSel',function(){	
	seatValidation.setName($(this).text());
	if(!$(this).hasClass('active')){
		$('.trvlRSeatSelDet').slideDown(275);
		$(this).addClass('active');
	}else{
		$(this).removeClass('active');
		$('.trvlRSeatSelDet').slideUp(275);
	}
});

/* [[ fare details end here ]]*/
/*Footer Toggle*/

	$("#footerAir").click(function(){
		$(".bodyfooterco").toggle();
		$("#footerAir").toggleClass('active');
		event.stopPropagation();
	});

    /* [[ travellersDropdown Start here ]]*/
    $(".travellersDropdown").click(function(e) {
    	e.preventDefault();
        $(".travelerSelectWindow").slideToggle();
		$(".flt").toggleClass('arrow');
		$(".travelerSelectWindow").addClass('active');				
    });
	 $(".travellersDropdown1").click(function(e) {
    	e.preventDefault();
        $(".optWidget2").slideToggle();
		$(".fphRTT").toggleClass('arrow');
		$(".optWidget2").addClass('active');				
    });
	
	 $('body').on('click', '.mtravellersDropdown ._trvText', function(e) {
        $(this).parents('.custom-traveller').find(".mtravelerSelectWindow").slideToggle();
		$(".mtravellersDropdown").toggleClass('arrow');
					
    });
	
    
   $('body').on('click', '._trvText', function(e) {
        $(this).parents('.custom-traveller').find(".mtravelerSelectWindow").toggleClass('active');
        e.stopPropagation();
		$(".travelerSelectWindow").hide();
		
    });
     
    $(".closeLink").click(function() {
		$(".travelerSelectWindow").slideToggle();
    	$(".travelerSelectWindow").removeClass('active');
		$(".flt").toggleClass('arrow');
    });
    $('body').on('click', '.mcloseLink', function(e) {
    	 $(".mtravelerSelectWindow").slideToggle();
    	 $(".mtravelerSelectWindow").removeClass('active');
		  $(".travelerSelectWindow").hide();		
		  $(".mtravellersDropdown").removeClass('arrow');
		  
		
    });

    $('body').click(function(e) {
        $(".travelerSelectWindow").removeClass('active');
        if (!$(e.target).is('.mtravelerSelectWindow, .mtravelerSelectWindow *')) {
            $(".mtravelerSelectWindow").removeClass('active');
			$(".travelerSelectWindow").hide();
			  $(".mtravelerSelectWindow").hide();
			$(".travellersDropdown").removeClass('arrow');
			$(".mtravellersDropdown").removeClass('arrow');
			  $(".flt").removeClass('arrow');
        }

		var target = $(e.target);
    });
/*  $('body').on('click', '.merchandise .tabNav li', function() {
		$('.merchandise .tabNav li').removeClass('active');
		$(this).addClass('active');
		}); */
		
		
    $('.travelerSelectWindow, .travellersDropdown').click(function(e) {
    	e.stopPropagation();
    });

    /* [[ travellersDropdown end here ]]*/
 
    /* [[ hotel roomwidget Start here ]]*/
    $('.selectRoomsOptions._selectRooms').on('click', function(event) {
        event.preventDefault();
        $(this).toggleClass('active');
        $('#changesearch-options').slideToggle("fast");
    });


    $('#changesearch-options .closeBtn').on('click', function(event) {
        $('#changesearch-options').hide();
        $('.selectRoomsOptions._selectRooms').removeClass('active');
    });

    $('._csTopDesRoomSel').on('click', function(event) {
        event.preventDefault();
        $(this).toggleClass('active');
        $('#csTopDest-options').slideToggle("fast");
    });
    /* [[ hotel roomwidget end here ]]*/
	
/* [[ hotel pop up roomwidget start here ]]*/
$('.sropop._selectRoomsPOP').on('click',  function(event) {
	event.preventDefault();
	$(this).toggleClass('active');
	$('#changesearch-optionsPOP').slideToggle("fast");
});

$('#changesearch-optionsPOP .closeBtn').on('click',  function(event) {
	$('#changesearch-optionsPOP').hide();
	$('.sropop._selectRoomsPOP').removeClass('active');
});

/* [[transfer toggle start here ]]*/


$('body').on('change', '.checkBoxClick', function() {
    var Panel = $('.checkboxGrid');
    if ($(this).is(':checked')) {
        Panel.show();
    } else {
        Panel.hide();
    }
});

/* [[ transfer toggle end here ]]*/

/* [[ hotel pop up roomwidget end here ]]*/

    /* [[hotel popular hotels slider]]*/
        var owl = $(".hotelsfeaturedSlider, .homeSection");
        owl.owlCarousel({
            items: 4,
            itemsDesktop: [1199, 4],
			itemsTablet: [980, 3],
            itemsTabletSmall: [639, 2],
			itemsMobile: [478, 1],
            
            lazyLoad: true,
            navigation: true,
            pagination: false,
            autoPlay: false,
			rewindNav: false,
            stopOnHover: true,
			touchDrag  : false,
			mouseDrag  : false
        });

        var owl = $(".seatHdrSlider");
        owl.owlCarousel({
            items: 1,
            itemsDesktop: [1199, 1],
			itemsTablet: [980, 1],
            itemsTabletSmall: [639, 1],
			itemsMobile: [478, 1],
            lazyLoad: true,
            navigation: true,
            pagination: false,
            autoPlay: false,
			rewindNav: false,
            stopOnHover: true,
        });
        /*var owl = $(".trvlRFltDet");
        owl.owlCarousel({
            items: 0,
            itemsDesktop: [1199, 0],
			itemsTablet: [980, 0],
            itemsTabletSmall: [639, 0],
			itemsMobile: [478, 0],
            lazyLoad: true,
            navigation: true,
            pagination: false,
            autoPlay: false,
			rewindNav: false,
            stopOnHover: true,
        });*/
    /* [[Calender Month slider]]*/
        var owl = $(".calMonth");
        owl.owlCarousel({
            items: 3,
            itemsDesktop: [1199, 3],
            lazyLoad: true,
            navigation: true,
            pagination: false,
            autoPlay: false,
			rewindNav: false,
            stopOnHover: true,
			touchDrag  : false,
			mouseDrag  : false
        });
		/* [[Calender year slider]]*/
        var owl = $(".calYear");
        owl.owlCarousel({
            items: 1,
            itemsDesktop: [1199, 1],
            lazyLoad: true,
            navigation: true,
            pagination: false,
            autoPlay: false,
			rewindNav: false,
            stopOnHover: true,
			touchDrag  : false,
			mouseDrag  : false
        });

	 /* [[Tours Trending Tours]]*/
        var owl = $(".tToursSlider");
        owl.owlCarousel({
		   lazyLoad: true,
            navigation: true,
            pagination: false,
            loop: true,
            items: 2
        });
    
        var topAirlineSlider = $(".carouselSlider.owl-carousel");
        topAirlineSlider.owlCarousel({
            items: 5,
            itemsDesktop: [1199, 4],
            itemsDesktopSmall: [979, 2],
            itemsMobile: [480, 2],
			itemsMobile: [478, 1],
            lazyLoad: true,
            navigation: true,
            pagination: false,
            autoPlay: true,
			rewindNav: false,
            stopOnHover: true
        });
   
	
	
        var owl = $(".trnsfrSlider");
        owl.owlCarousel({
            items: 4,
            itemsDesktop: [1199, 4],
			itemsTablet: [980, 3],
            itemsTabletSmall: [639, 2],
			itemsMobile: [478, 1],
            lazyLoad: true,
            navigation: true,
            pagination: false,
            autoPlay: false,
			rewindNav: false,
            stopOnHover: true,
        });
    
		var offerSlider = $(".offer-slider");
        offerSlider.owlCarousel({
            items: 1,
			itemsDesktop: [1199, 3],
            itemsTablet: [768, 4],
            lazyLoad: true,
			autoPlay: true,
            navigation: true,
			rewindNav: true,
            stopOnHover: true,
        });
	
    /* [[flight top routes slider]] */
    
        var topRoutes = $(".topRoutes");
        topRoutes.owlCarousel({
            items: 1,
            itemsDesktop: [1199, 1],
            itemsTablet: [768, 1],
            lazyLoad: true,
            navigation: false,
            pagination: true,
            autoPlay: true,
			rewindNav: false,
            stopOnHover: true
        });
    


/** Hotel Review page slider by suresh **/
              
            var owl = $("#hRnearByHotel");    
            owl.owlCarousel({   
                items : 4,
                itemsDesktop: [1199, 4],
                lazyLoad : true,
                navigation : true,
                pagination: true,
                autoPlay : true,
				rewindNav: false,
                stopOnHover :true,
                touchDrag:false
                });
           
 /** bbc Hotel  page slider **/
             
            var owl = $(".bbchotelsldr");    
            owl.owlCarousel({   
                items : 1,
				itemsDesktop: [1199, 1],
                lazyLoad : true,
                navigation : true,
                pagination: true,
                autoPlay : false,
				rewindNav: false,
                stopOnHover :true,
                touchDrag:false
                });
           
			
			
//below script for alhilal ad scroller

	var owl = $(".alhAdblockHome");
	owl.owlCarousel({
		items: 1,
		
		lazyLoad: true,
		navigation: true,
		pagination: false,
		autoPlay: false,
		rewindNav: false,
		stopOnHover: true,
	});

			   
            var owl = $("#hotelCrossSellId");    
            owl.owlCarousel({   
                items :3,
                itemsDesktop: [1199, 3],
                lazyLoad : true,
                navigation : true,
                pagination: true,
                autoPlay : true,
				rewindNav: false,
                stopOnHover :true,
                touchDrag:false
                });
        
/*  [[Range Slider]]   */
 if($('section').hasClass('resultsPage')){
	$("#_price_fliter,#_price_fliter2").ionRangeSlider({
	   type: "double",
		min: 1000,
		max: 2000,
		from: 1200,
		to: 1800,
		hide_min_max: false,
		hide_from_to: false,
		grid: false
	});
};
//$('.rtnF,.itineraryBlock, .flightDtls > div').hide();
	
		
	 $('.onF .legResult .priceGrid .btn').click(function(){
		$('.fcSteps li:eq(0)').addClass('selected').removeClass('active');
		$(".loading_popup_flight").addClass('active');
		setTimeout(function(){$('.fcSteps li:eq(1)').addClass('active');},2000)
		setTimeout(function(){$(".loading_popup_flight").removeClass('active');},2500)
		$('.pBar strong').addClass('scltRtn');
		$('.pBar span:eq(0)').addClass('fMove');
		$('.selected .flightDtls div').fadeIn(1500);
		 $('.rtnF').fadeIn(1000);
		 $('.onF').fadeOut(1000);
		
	}) 
	$('.rtnF .legResult .priceGrid .btn').click(function(){
		$('#cssload-contain span').text("Loading Review page");
		$(".loading_popup_flight").addClass('active');
		$('.fcSteps li:eq(1)').addClass('selected').removeClass('active');
		$('.pBar strong').addClass('scltItnry');		
		$('.pBar span:eq(1)').addClass('fMove');
		setTimeout(function(){$('.fcSteps li:eq(2)').addClass('active');},2000);
		$('.fcSteps li:eq(2) .title').text('Review your itinerary');
		$('.itineraryBlock').fadeIn(1800);$('.resultBlock').fadeOut(2000);
		$('.selected .flightDtls div').fadeIn(1500);
		setTimeout(function(){$(".loading_popup_flight").removeClass('active');$('#cssload-contain span').text("");},1500);
	});
	
	/*$('.continueToPayment').click(function(){
		console.log('continueToPayment');
		$(".loading_popup_flight").addClass('active');
		$('.pBar span:eq(2)').addClass('fMove');
		$('.pBar strong').addClass('completed');
		$('#cssload-contain span').text("Loading Traveller Detail page");
		setTimeout(function(){$(".loading_popup_flight").removeClass('active');},2000);
		$('.fcSteps li:eq(2)').addClass('selected').removeClass('active');	
		setTimeout(function(){$('head').append('<link href="/common/themes/v2/css/reviewPage.css" rel="stylesheet"/>');},800);
		$('.selected .flightDtls div').fadeIn(2000);
		$('.fcSteps li:eq(2) .flightDtls').removeClass('nav-ic').addClass('cart-ic');
		$('.itineraryBlock').fadeOut(1500);
		//$('.fcReview').fadeIn(1800);
		$('#fcProvideTravellerDetails,._saveTravellerDetails,#fcFlightTripSummary').fadeIn(1800);
		$('.modifyTog,.modifyBlock a').fadeOut();
		
		$('._saveTravellerDetails').show();
	
	});*/
	
	initfcReview();
	
	$('.fcFligtTo').click(function(){
		$(this).next().slideToggle('slow');
		$(this).toggleClass("open");
		
	});
 /*  [[Range Slider ends here]]   */

    /* Function to load the fav airline grid
    */
    
  
     
        
    

  /*  [[Near by hotel click event starts here]]   */

/*  $(".near-hotels ").click(function(e){
    e.preventDefault();
    console.log('hi');
    $(".nearHotel").slideToggle();
  });*/

  /*  [[Near by hotel click event ends here]]   */
    /*  [[map Modal ]]   */
 $(".show-map").click(function(e){
    e.preventDefault();
    $(".showMapModal").fadeIn();
  });
 
 $(".showMapModal .close").click(function(e){ 
    e.preventDefault();
    $(".showMapModal").fadeOut();
  });


  /*  [[Hotel sort drop down ]]   */
 $('body').on('click', '.distanceSort > a', function(e){
        $(".distanceDropdown").slideToggle();
        e.stopPropagation();
    });
	$('body').on('click', '.distanceDropdown', function(e){
        e.stopPropagation(); 
    });
	$(document).click(function (e) {
        $(".distanceDropdown").slideUp();
    });
/*
*@Smooth Anchor scrolling for Anchor links //added by Raghava
*/  
$('body').on('click', '.anchorScroll', function(event){
	event.preventDefault();
    if(!$('body').hasClass('reviewPage')){
        var offset = $($(this).attr('href')).offset().top;
        $('html, body').animate({scrollTop:offset}, 500);
    } else {
        var offset = $($(this).attr('href')).offset().top-50;
        $('html, body').animate({scrollTop:offset}, 500);
        
    }

});



 /* [[ Hotel new review page show more show less ]]*/
   
    var myheight= $('.hotelServiceList');
    myheight.each(function(){
        var containerHeight = $(this).height();
        if(containerHeight > 100){
            $(this).css('height','78px');
            $(this).next('.showmore1').show();
        }
    });  



$('body').on('click','.showmore1', function(){
  $(this).prev().css('height','auto');
  $(this).text(i18n.t("showLesLabel"));
  $(this).addClass("less");
});

$('body').on('click','.showmore1.less', function(){
  $(this).prev().css('height','78px');
  $(this).text(i18n.t("showMoreLabel"));
  $(this).removeClass("less");
});
// [[ equal height  divs ]] 
//var highestCol = Math.max($('.roundRslt').height(),$('.priceGrid').height());
//$('.priceGrid').height(highestCol);

// [[ Filter Block Hide and Show ]] 
    $(".fPanel h4").click(function(){
    $(this).next().slideToggle("slow");
    $(this).toggleClass('open');
    });

    /* [[landing page popup functionalities ]]*/
    $('body').on('click', '.popupLand .close, .bgoverlay', function() {
        $('.bgoverlay, .popupLand').removeClass('active');
    });
    $('body').on('click', '.popupLand', function(e) {
        e.stopPropagation();
    })
    jQuery(document).on('keyup', function(evt) {
        if (evt.keyCode == 27) {
            if ($('.bgoverlay').hasClass('active')) {
                $('.bgoverlay, .popupLand').removeClass('active');
            }
        }
    });
    $('._fBtn').on('click',function(){
		$('#roundFromPOP,#roundToPOP,#rThdateFPOP,#rThdateTPOP').removeClass('error');
    	$('.popupLand').removeAttr("style");
    	var offsetTop = $(this).offset().top; 
    	$('.bgoverlay, .popupLand').addClass('active');
    	$('.popupLand').css('top',offsetTop+"px"); 
    	var offsetPopTop = $('.popupLand').offset().top;
    	$('html, body').animate({scrollTop:offsetPopTop-50}, 500);
    	$('#selectedFSOPOP').val('flightsRoundtripPOP');
    	$("#flightsRoundtripPOP").prop("checked", true);
    	$('.datepicker.returning').show();
    	var target = $('.popupLand');
    	var toDisplayPopup = $(this).attr('data-toIataDis');
    	var toHiddenPopup = $(this).attr('data-toIataHid');	
    	var fromDisplayPopup = $(this).attr('data-fromIataDis');	
    	var fromHiddenPopup = $(this).attr('data-fromIataHid');
    	var dataTit = $(this).attr('data-tit');
    	target.find('._datepicker.fromtwowayPOP, ._datepicker.totwowayPOP, #rThdateFHiddenpop, #rThdateTHiddenpop').val('');
    	target.find('#roundToPOP').val(toDisplayPopup);
    	target.find('#roundToPOP').attr("data-iata",toHiddenPopup);
    	target.find('#toRoundIDPOP').val(toHiddenPopup);
    	target.find('#roundFromPOP').val(fromDisplayPopup);
    	if(fromHiddenPopup!==""){
    		target.find('#roundFromPOP').attr("data-iata",fromHiddenPopup);
    	}else{
    		target.find('#roundFromPOP').attr("data-iata","");
    	}
    	target.find('#roundFromIdPOP').val(fromHiddenPopup);
    	target.find('h2.title').text(dataTit);	
    });
	$('._cBtn').on('click',function(){
		$('#roundFromCPOP,#roundToCPOP,#carsDateFromPOP,#carsDateToPOP').removeClass('error');
    	$('.popupLand').removeAttr("style");
    	var offsetTop = $(this).offset().top; 
    	$('.bgoverlay, .popupLand').addClass('active');
    	$('.popupLand').css('top',offsetTop+"px"); 
    	var offsetPopTop = $('.popupLand').offset().top;
    	$('html, body').animate({scrollTop:offsetPopTop-50}, 500);
    	//$('.datepicker.returning').show();
    	var target = $('.popupLand');
    	var toDisplayPopup = $(this).attr('data-toIatadis');
    	var toHiddenPopup = $(this).attr('data-toIatahid');	
    	var fromDisplayPopup = $(this).attr('data-fromIatadis');	
    	var fromHiddenPopup = $(this).attr('data-fromIatahid');
    	var dataTit = $(this).attr('data-tit');
    	target.find('._datepicker.carsDateFromPop, ._datepicker.carsDateToPop, #carsDateFromHiddenP, #carsDateToHiddenP').val('');
    	target.find('#roundToCPOP').val(toDisplayPopup);
    	target.find('#roundToCPOP').attr("data-iata",toHiddenPopup);
    	target.find('#roundToCIdPOP').val(toHiddenPopup);
    	target.find('#roundFromCPOP').val(fromDisplayPopup);
    	if(fromHiddenPopup!==""){
    		target.find('#roundFromCPOP').attr("data-iata",fromHiddenPopup);
    	}else{
    		target.find('#roundFromCPOP').attr("data-iata","");
    	}
    	target.find('#roundFromCPOPId').val(fromHiddenPopup);
    	target.find('h2.title').text(dataTit);	
    });
    $('._hBtn').on('click', function() {
        $('.popupLand').removeAttr("style");
        var offsetTop = $(this).offset().top;
        $('.bgoverlay, .popupLand').addClass('active');
        $('._predViewPOP').hide();
        $('.popupLand').css('top', offsetTop + "px");
        var offsetPopTop = $('.popupLand').offset().top;
        $('html, body').animate({
            scrollTop: offsetPopTop - 50
        }, 500);
        var target = $('.popupLand');
        var toDisplayPopup = $(this).attr('data-toIataDis');
        var toHiddenPopup = $(this).attr('data-toIataHid');
        var dataTit = $(this).attr('data-tit');
        target.find('._datepicker.fdphoFPOP, #fdphoFHiddenPOP, ._datepicker.fdphoTPOP, #fdphoTHiddenPOP').val("");
        target.find('.noOfNightsPOP').val("00");
        target.find('#countrycityhotelPOP').val(toDisplayPopup);
        target.find('#hotelsearchKeyPOP').val(toHiddenPopup);
        target.find('h2.title').text(dataTit);
    });
	$('._fphBtn').on('click',function(){
		$('.popupLand').removeAttr("style");
		var offsetTop = $(this).offset().top; 
		$('.bgoverlay, .popupLand').addClass('active');
		$('.popupLand').css('top',offsetTop+"px"); 
		var offsetPopTop = $('.popupLand').offset().top;
		$('html, body').animate({scrollTop:offsetPopTop-50}, 500);
		$('#searchDifferentPOP').prop("checked",false);
		$('._diffDatesPOP').hide();
		$('.oneWayStayPOP, .fphonewayDPPOP').hide();
		$('.twoWayStayPOP, .datepicker.departingPOP').show();
		$('.datepicker.returningPOP').show();
		$('#selectedFPHSOPOP').val('flightsRoundtripFHPOP');
		$("#flightsRoundtripFHPOP").prop("checked", true);
		$('.datepicker.returningPOP').show();
		var target = $('.popupLand');	
		var toDisplayPopup = $(this).attr('data-toIataDis');	
		var toHiddenPopup = $(this).attr('data-toIataHid');
		var toHiddenId = $(this).attr('data-toHiddenId');	
		var fromDatepop = $(this).attr('data-fromDateDis');
		var fromDatehid = $(this).attr('data-fromDateHid');
		var dataTit = $(this).attr('data-tit');
		var dataCap = $(this).attr('data-caption');
		target.find('#roundFromFPHPOP').attr("data-iata","");
		target.find('#roundToFPHPOP').val(toDisplayPopup);
		target.find('#toRoundIDFHPOP').val(toHiddenId);
		target.find('#roundToFPHPOP').attr("data-iata",toHiddenId);
		target.find('#roundFromFPHPOP, #roundFromIdFHPOP, #hdateFHiddenFHPOP, ._datepicker.fromonewayFPHPOP, ._datepicker.fromtwowayFPHPOP, #rThdateFHiddenFHPOP, ._datepicker.totwowayFPHPOP, #rThdateTHiddenFHPOP').val('');
		target.find('h2').text(dataTit);
		
		target.find('h2.title span').text(dataCap);		
		target.find('#flighthotelsearchKeyPOP').val(toHiddenPopup);	
		
	});
    $('#flightsOnewayPOP').on('click', function() {
        $('#selectedFSOPOP').val('flightsOnewayPOP');
        $('.datepicker.returning').hide();
    });
    $('#flightsRoundtripPOP').on('click', function() {
        $('#selectedFSOPOP').val('flightsRoundtripPOP');
        $('.datepicker.returning').show();
    });
    /* [[ flight+hotel roomwidget start here ]]*/
    $('body').on('click','.travellersDropdown.fphRTT',function(event){
    	event.preventDefault();
        $(this).toggleClass('active');
        $('.fphRoomWidget').slideToggle("fast");
    });
    
    $('.travellersDropdown.fphRTT').on('click', function(event) {
    	event.preventDefault();
        $(this).toggleClass('active');
        $('.fphRoomWidget').slideToggle("fast");
    });
    
	
	$('.travellersDropdown.fphPUP').on('click', function(event) {
        event.preventDefault();
        $(this).toggleClass('active');
        $('.popup-cont .fphRoomWidget').slideToggle("fast");
    });

    
    $('body').on('click','.fphRoomWidget .closeBtn', function(event) {
        $('.fphRoomWidget').hide();
        $('.travellersDropdown.fphRTT').removeClass('active');
    });
	
	 $('.popup-cont .fphRoomWidget .closeBtn').on('click', function(event) {
        $('.popup-cont .fphRoomWidget').hide();
        $('.popup-cont .travellersDropdown.fphPUP').removeClass('active');
    });
	
	
    /* [[ flight+hotel roomwidget end here ]]*/

	/*Passing Marketing page City Value by default starts here*/
	function mktHtlDefaultVal() { 
		setTimeout(function(){
			var toHiddenPopup = $('#mktHtlValID').attr('data-toIataHid');  
			var toDisplayPopup = $('#mktHtlValID').attr('data-toIataDis');	
			$('#countrycityhotel').val(toDisplayPopup);
			$('#hotelsearchKey').val(toHiddenPopup); 
			$('.nights-count').val("00");
			$('#mktHtlValID').remove();
		},500);
	};
	if($('#mktHtlValID').length){ 
		mktHtlDefaultVal();
	}
	/*Passing Marketing page City Value by default ends here*/
	
	
	
	//Homepage Top Routes / Suggestions Pills
	
    $('body').on('click', '.fastBookingTags .fltLink', function(){    
    	var fromDisplay = $(this).attr('data-fromDisplay');	
    	var fromHidden = $(this).attr('data-fromHidden'); 
    	var toDisplay = $(this).attr('data-toDisplay');
    	var toHidden = $(this).attr('data-toHidden');	
		
 
	
 
		$('#roundFrom, #onewayFrom, #roundTo, #onewayTo').addClass("aniBorder");
		
		setTimeout(function(){
			$('#roundFrom, #onewayFrom').val(fromDisplay);
			$('#roundFromId, #fromID').val(fromHidden);
			$('#roundFrom, #onewayFrom').attr('data-iata',fromHidden);
			$('#roundFrom, #onewayFrom').attr('title',fromDisplay);
			$('#roundTo, #onewayTo').val(toDisplay);
			$('#toRoundID,#toID').val(toHidden);
			$('#roundTo, #onewayTo').attr('data-iata',toHidden);
			$('#roundTo, #onewayTo').attr('title',toDisplay); 
		},500);
		
		setTimeout(function(){
			$('#roundFrom, #onewayFrom, #roundTo, #onewayTo').removeClass("aniBorder")
		},1000);
	});
	
    $('body').on('click', '.fastBookingTags .htlLink', function(){    
    	var destDisplay = $(this).attr('data-destDisplay');	
    	var destHidden = $(this).attr('data-destHidden');		
		$('#countrycityhotel').addClass("aniBorder");
		
		setTimeout(function(){
			$('#countrycityhotel').val(destDisplay);
			$('#hotelsearchKey').val(destHidden);  
		},500);
		
		setTimeout(function(){
			$('#countrycityhotel').removeClass("aniBorder")
		},1000);
		
		$('#countrycityhotel').attr("title",destDisplay);

	});
	
	 
	
/* [[ home search tab starts here ]]*/
$('body').on('click', '.sTabs li, .myAccTabs li', function() {
    var mySCId = $(this).attr('id');
    var mySCIdCont = '#' + mySCId + '-cont';
    if (!$(mySCIdCont).is(':visible')) {
        $('.sTabs li, .myAccTabs li').removeClass('active');
        $(this).addClass('active');
        $('.searchCont').slideUp();
        $(mySCIdCont).slideDown();
		if(mySCIdCont === '#carSec-cont'){
			$('head').append('<script src="/common/themes/v2/js/jlibs/carServiceProtoExt.js"></script>');		
		}else{
			$("script[src='/common/themes/v2/js/jlibs/carServiceProtoExt.js']").remove();
		}
    }
});

/*sub Tab Panel block*/

$('body').on('click','.subTabPanel > ul > li > a',function(){
	var tis = $(this), tTabTar = $(this).attr('data-target')
	if(!tis.parent().hasClass('active')){
	  tis.parent().addClass('active').siblings().removeClass('active');
	  $(tTabTar).slideDown(500).siblings().slideUp(500);
	 }
});

$('body').on('click','#showStcBtn', function(){
	
	$('#showStcReg').slideUp();
	$('#showWalPrice').slideDown();
});



var removehpb=function(){
	if($(".hotelsCPB.herobanner").hasClass("hpb")){
		$(".hotelsCPB.herobanner").removeClass("hpb")
		
	}
	}
removehpb();

/*adding class to body for banner*/
var bodyBannerClass=function(){
	var bbcArr=["fpb","hpb","fhpb","explore","ladies","funfill","weekend"];
	for(var i=0; i < bbcArr.length; i++){
		if($(".herobanner").hasClass(bbcArr[i])){
		  $(".herobanner").removeClass(bbcArr[i]);
		  $("body").addClass(bbcArr[i]);
		 break;		  
		 }
	}
	
}
bodyBannerClass();


/*adding class to body to remove the body background */
var bodyMarClass=function(){
	var bmcArr=[".marketingPage",".airLPage",".errorPage",".alhilalReg"];
	for(var i=0; i < bmcArr.length; i++){
		if($("body.homePage").find(bmcArr[i]).length==1){
		$("body.homePage").addClass("markPage");
		break;
		}	
	}
}
bodyMarClass();

/*cityPage Header make white*/
var cityPage=function(){
	 if($("body").find(".cityBgImg").length==1){
		 $("body").addClass("cityPg");
		 
	 }
	
}
cityPage();

/*alHilal Banner change*/
var alhilalHomeBody=function(){
	
	if($("body.alHilalHome").find(".alHilalBannerbg").length==1){
	$("body.alHilalHome").addClass("alhilalTheme homePage")	
	}	
}
alhilalHomeBody();

/* [[ fc tabs Start here ]]*/
$('body').on('click', '.fcTab nav li a', function() {
	var scId = $(this).attr('data-stn');
	$('.fcTab nav li a').removeClass('active');
	$(this).addClass('active'); 
	var tar = $('.fcTabGrd').find('.fcTabCnt'); 
	tar.each(function(){ 
		$(this).hide();
		if(scId==$(this).attr('data-stn') ){ 
			 $(this).show();
		}
		
	});
});
/* [[ fc tabs end here ]]*/

/* [[ flight tabs Start here ]]*/
$('body').on('click', '#flightSec-cont .tabsNav input', function() {
    var myInput = $(this).attr('id');
    var myInputCont = $("#" + myInput + "-tab");
    $('#flightSec-cont .tabs > div').hide();
    $(myInputCont).show();
	
    var multiCityHide = $('.flight-trips #selectedFSO').val();
		if(multiCityHide == "flightsMulticity") {
			$('.fastBookingTags.fltFast').hide();
		}
		else if(multiCityHide != "flightsMulticity") {
			$('.fastBookingTags.fltFast').show();
		}


});
/* [[ flight tabs end here ]]*/

/* [[ fph tabs Start here ]]*/
$('body').on('click', '#flightHotelSec-cont .tabsNav input', function() {
    var myInput = $(this).attr('id');
    var myInputCont = $("#" + myInput + "-tab");
    $('#flightHotelSec-cont .tabs > div').hide();
    $(myInputCont).show();
});
/* [[ fph tabs end here ]]*/

/* [[  show hide f+h "my hotel stay is on different dates" panel ]]*/
	$('body').on('change', '._searchDifferent', function() {
    var difDatePanel = $('._diffDates');
    if ($(this).is(':checked')) {
        difDatePanel.show();
    } else {
        difDatePanel.hide();
    }
});

/* [[  show hide f+h "my hotel stay is on different dates" panel ]]*/
$('._searchDifferentPOP').on('change', function() {
    var difDatePanel = $('._diffDatesPOP');
    if ($(this).is(':checked')) {
        difDatePanel.show();
    } else {
        difDatePanel.hide();
    }
});

/* [[  show hide car pop up panel ]]*/
$('._carsearchDifferentPop').on('change', function() {
    var difDatePanel = $('._cardiffDatesPop');
    if ($(this).is(':checked')) {
        difDatePanel.show();
    } else {
        difDatePanel.hide();
    }
});

/* [[ For clander showing  ]]*/
$('#departDate').on('click', function(event) {
    $('.FlightDepCalnder').toggleClass('active');
});

/* [[ flight+hotel roomwidget tab start here ]]*/


    var radioElm = $('#_tripsFPH');
    $(radioElm.find('input[type=radio]')[0]).prop('checked', true);

    var tabElm = $('#tabContainerFPH');
    tabElm.find('.fphOneWay').hide();
    tabElm.find('.fphRoundTrip').show();



var radioElm = $('#_tripsFPH');
radioElm.find('input[type=radio]').each(function() {
    var $this = $(this);
    $this.on('click', function() {
        var itemAttr = $(this).attr('data-tab');
        hideAllTabs();
        var tabElm = $('#tabContainerFPH');
        tabElm.find('.' + itemAttr).show();
    });
});

function hideAllTabs() {
    var tabElm = $('#tabContainerFPH');
    tabElm.find('.fphRoundTrip').hide();
    tabElm.find('.fphOneWay').hide();
}

$('.travellersDropdown.fphOWT').on('click', function(event) {
    event.preventDefault();
    $(this).toggleClass('active');
    $('.fphOWTCont').slideToggle("fast");
});


$('.fphOWTCont .closeBtn').on('click', function(event) {
    $('.fphOWTCont').hide();
    $('.travellersDropdown.fphOWT').removeClass('active');
});
/* [[ flight+hotel roomwidget tab end here ]]*/


//Load the Sign-In & Sign-Up Window
$('body').on('click','.load_ls_window',function(){
	//$('.page-loader').fadeToggle(300);
	//$('.login-signup-box').css ({'opacity':1});
	$('.ls-forgot-password-window').hide();
    $('.ls-login-window').show();
	$('.ls-content-box, .guest-signup-box').find('input[type=text]').each(function(){
		if($(this).hasClass('validate_error')){
			$(this).removeClass('validate_error');	
		}
		$(this).val('');
		var errorMsg = $('.login-signup-box').find('#loginStatus');
		errorMsg.hide();
	});
	$('.ls-content-box, .guest-signup-box').find('input[type=password]').each(function(){
		if($(this).hasClass('validate_error')){
			$(this).removeClass('validate_error');	
		}
		$(this).val('');
		var signupMsg = $('.ls-sign-up-window').find('#termsErrorMessage');
		signupMsg.hide();
	});
	
	$('.currency .dropdown').hide();
	$('.login-signup-box').fadeToggle();
	return false;
});

//Signup page Field label show/hide //by Suresh
$('body').on('keyup change', '.showlabel .form-control', function(){
	var mylgt = $(this).val().length;
	 if(mylgt > 0){
		$(this).parent().addClass('show');
	 } else {
		$(this).parent().removeClass('show');
	 }
});
$('body').on('change', '.showlabel select.form-control', function(){
	var mylgt = $(this).val().length;
	 if(mylgt > 0){
		$(this).parents('.showlabel').addClass('show');
	 } else {
		$(this).parents('.showlabel').removeClass('show');
	 }		 
});

//Toggle Sign-Up Form
$('body').on('click', '.activate-ls-signup', function() {
	$('.ls-sign-up-text-window').fadeToggle(function(){
		$('.col-right').css('background-color', '#FFF');
		$('.ls-sign-up-window').fadeToggle();
	});		
	$('.overlay1').toggle();
	return false;
});

//Toggle Forgot Password Form
$('body').on('click','.ls-fp-link a', function(){
	$('.ls-login-window').fadeToggle(function(){
		$('.ls-forgot-password-window').fadeToggle();
	});
	return false;
});

//Toggle Forgot Password Form
$('body').on('click', '.ls-back-link', function()
{
	$('.ls-forgot-password-window').fadeToggle(function(){
		$('.ls-login-window').toggle();
	});
	return false;
});


/*guest triger*/
$('body').on('click', '.myTrip > a, .main-menu-ul li.mnTp a', function(){
	$('.menu-mobile-version').fadeOut('fast');	
	$('.guest-signup-box').fadeIn('fast');	
    $('.ls-forgot-password-window3').hide();
    $('.ls-login-window2').show();
	$('.mobile-nav-custom').removeClass('active');	
	$(this).parent("li").removeClass('active');	
});	
$('body').on('click', '.guest-signup-box .load_ls_window2', function(){
	$('.guest-signup-box').fadeOut('fast');	
});
$('body').on('click', '.col-left .ls-fp-link > a', function(){
	$('.guest-signup-box .ls-login-window3').fadeOut('fast');
	$('.ls-forgot-password-window2').fadeIn('fast');	
});
$('body').on('click', '.col-left .ls-back-link > a', function(){
	$('.ls-forgot-password-window2').fadeOut('fast');
	$('.guest-signup-box .ls-login-window3').fadeIn('fast');
});


$('body').on('click', '.ls-fp-link > a', function(){
	$('.guest-signup-box .ls-login-window2').fadeOut(0);
	$('.ls-forgot-password-window3').fadeIn(1000);	
});
$('body').on('click', '.ls-back-link > a', function(){
	$('.ls-forgot-password-window3').fadeOut(0);
	$('.guest-signup-box .ls-login-window2').fadeIn(1000);
});
$('body').on('click', '.guest-signup-box .flaticon-delete30', function(){
	$('.ls-forgot-password-window3').fadeOut(0);
	$('.guest-signup-box .ls-login-window2').fadeIn(1000);
});


//tooltip for hotel result page top features
$('.tt').tooltip();


/* [[hotel nearby hotels slider]]*/
	
			var owl = $(".nearByhotels");
			owl.owlCarousel({
					items: 2,
					lazyLoad: true,
					navigation: true,
					pagination: false,
					autoPlay: false,
					stopOnHover: true
			});
	

	$('body').on('keyup', '.englishOnly', function(){
		if(_Aval($(this).val())){								
			growl_alert(i18n.t("namesinenglish"));
			$(this).val('');
			setTimeout(function(){
				$(this).focus();
			},80);
			return;
		}
		if($(this).hasClass('error')){
			$(this).removeClass('error');
			var element = document.getElementById('notie-alert-outer'),
		    style = window.getComputedStyle(element),
		    top = style.getPropertyValue('top');
			if(top=='0px'){
				$('#notie-alert-outer').hide();
			}
		}
		
	});
	

	// $('.payment .panel-heading a').click(function(){
	// 	$(this).toggleClass('active');
	// 	$('.payment .panel-heading a').not(this).removeClass('active');
	// });
	initPaymentPanel();
	var checkoutForm = $('.panel .panel-heading._checkout').attr('data-gateway');
	var style = $('.panel .panel-heading._checkout').attr('style');
	console.log('checkoutForm---------',style);
	if(checkoutForm==="'CHECKOUT'" && !$('#HTDP').length>0 && style==='display:block' && !$('._hashpay').is(":visible")){
		console.log('checkoutForm----inside-----');
		var $payObj = $('.panel .panel-heading._checkout');
			$payObj.trigger('click');
			if($payObj.next().is(":visible"))
			{
				$payObj.next().slideDown();
				$payObj.addClass('active');
			}
	  }
    
    /*Book Now Pay later */
    if($('.opcPayment').is(':visible')){
		if($('.bnplSection').length){
	   		$('.completeBooking').hide();
	    	$('.bnplBtn').show();
			$('#redeem-points').hide();
	    }
	}

	$('body').on('click','.brdRound.opcPayment > h3', function(){
		if(!$(this).parent().hasClass('active')){
			$(this).parent().addClass('active');
			$(' .panel.prfrdBnk .panel-heading').removeClass('active');
			$(' .panel.prfrdBnk .panel-collapse').slideUp(500);
			$(this).next().slideDown(500,function(){resTabPanel();});
			 $('._hashPayBtn').hide();
			 $('#paymeBtn').show();
		}
	});
	
	$('body').on('click','.prfrdBnk .panel-heading a',function(){
		if(!$(this).closest('.panel-heading').hasClass('active')){
			$(this).closest('.panel-heading').addClass('active');
			$(this).closest('.panel-heading').next().slideDown(500);
			$('.brdRound.opcPayment').removeClass('active');
			$('.brdRound.opcPayment .opcPayBlock').slideUp(400)
			 $('._hashPayBtn').show();
			 $('#paymeBtn').hide();
		}
		
	});
	
	
    $('body').on('click','.resTabPanel.paymentSection > li', function(){

	    	if($(this).hasClass('bnplSection active')){
	    		$('.completeBooking, .bankTransferBtn, .sarOnly,#redeem-points').hide();
	    		$('.bnplBtn').show();
				var offsetTop = $('.opcPayment').offset().top;
				$('html, body').animate({scrollTop:offsetTop}, 500);
			} else if($(this).hasClass('_bankTransferSection active')){
				$('.completeBooking, .bnplBtn, .sarOnly').hide(); 
	    		$('.bankTransferBtn,#redeem-points').show(); 
				var redeemHeight = $('.redeemList li.active .tarData').height()+42;
				$('.redeemList').css('height',redeemHeight);
			} else {
				$('.bankTransferBtn, .bnplBtn').hide(); 
				$('.completeBooking, .sarOnly, #redeem-points').show(); 
				var redeemHeight = $('.redeemList li.active .tarData').height()+42;
				$('.redeemList').css('height',redeemHeight);
			}
		

    });


   
 
	/*  if($('.panel-heading').hasClass('_payment active')){
    $('.completeBooking').show();
    $('.bnplBtn ').hide();
     
    } 
    if($('.panel-heading').hasClass('_bnpl active')){
     $('.completeBooking').hide();
     $('.bnplBtn ').show();
    }*/

   /* $('body').on('click','.panel-heading',function(){
        if(!$('.panel-heading').hasClass('_bnpl active')){
	         $('.completeBooking').show();
			 $('.completeBooking').removeAttr('disabled');
	         $('.bnplBtn ').hide();
			 $('.sarOnly ').show();
	         $('.redeemPoints').show();
			 $('._hashPayBtn').hide();
			  $('#paymeBtn').show();
			  $('#hashpaymeBtn').show();
        }  else {
	        $('.completeBooking').hide();
	        $('.bnplBtn ').show();
			$('.sarOnly ').hide();
			$('.redeemPoints').hide();
        }
		
		if($('.panel-heading').hasClass('_bankTransfer active')){
	        $('.bankTransferBtn').show();
		    $('#paymeBtn').hide();
			$('.completeBooking').hide();
	        $('.bnplBtn ').hide();
			$('.sarOnly ').hide();
			$('.redeemPoints').show();
			$('._hashPayBtn').hide();
	      } else {
			 $('.bankTransferBtn').hide();
		 }
		 
		 if($('.panel-heading').hasClass('_hashpay active')){
	        $('._hashPayBtn').show();
			$('#paymeBtn').hide();
	      } 
		 
		 
		 
    }); */




/* [[ show More ]]*/
	$('.more').on('click', function(){
		$('.hidden-con').toggleClass('show'); 
		$(this).hide();
	})

	   // below script for flight and hotel summery section sticky effect
		if($(window).width() > 1024)
		{
			/*Flight Review page sidebar scrollToFixed*/
			fltReviewSummery();
			
			/*Flight Review COMBO page sidebar scrollToFixed*/
			fltReviewComboSummery();
				
			/*Hotel Review page sidebar scrollToFixed*/
			 htlReviewSummery();
			 
			 /*Hotel Hashpay  page sidebar scrollToFixed*/
			 htlHashSummery();
				
			/*Static page sidebar scrollToFixed*/ 
			 stcReviewSummery();
				 
		}
	


			$('input[type="reset"]').click(function(){
				//console.log($('.contact-form').find('textarea'));
				var countryCode = $('#phoneCountryCode').val();
				var formValues = $('.contact-form').find('input');
				var selectValue = $('.contact-form').find('select');
				var textareaValue = $('.contact-form').find('textarea');
				$(formValues).val('');
				$(selectValue).val('');
				$(textareaValue).val('');
				$("._countryCode").val(countryCode);
				
			});

      
	$('.travellerSeat, .travellersName').each(function(){  
			var liItems = $(this);
			var Sum = 0;
			if(liItems.children('.col-xs-12').length >= 1){
			 $(this).children('.col-xs-12').each(function(i, e){
					Sum += $(e).outerWidth(true);
			 });
			$(this).width(Sum+1);
			} 
	});
	var bLazy = new Blazy({
        breakpoints: [{ 
		src: '../img/destinations/call-icon.jpg'
	}]
      , success: function(element){
	    setTimeout(function(){
		var parent = element.parentNode;
		parent.className = parent.className.replace(/\bloading\b/,'');
	    }, 200);
        }
   });

setTimeout(function(){if($('.redeemPoints, .chooseSeat').is(':visible')){
		var offsetPopTop = $('.redeemPoints, .chooseSeat').offset().top;
		$('html, body').animate({scrollTop:offsetPopTop}, 500);
	}},500	 );
	

	/*
	 *@Identifying the page ID and pass that class to Body tag 
	 HTML E.g. <div class="ClassNameGoesHere" id="_pageIdentifier"></div>
	 */ 
	function pageIdentify(){
	 var eml = $('#_pageIdentifier');
	 if(eml.length){
	  var pageClass = eml.attr("class"); 
	  $('body').addClass(pageClass);
	  $(eml).remove();
	 }
	}
	pageIdentify();	
		

	/*** Tooltip showing in mobile view ***/
if($(window).width() < 1199)
		{
		$('body').on('click', '.tooltipCustom', function(){
		$(this).find(".tooltipCustomCont").toggleClass('active');
		});

		}

	$('.pContainer > div:visible:last').addClass('last');
	$('.rFpriceInfo #showHideFareDetails a').on('click', function(){
		$('.rFpriceInfo #showHideFareDetails ul').slideToggle();
	});

	$('body').on('click', '.htmsmrydtls', function(){
	$('.fphHotelsmry').toggleClass('active');
 $('.fareDetails').slideToggle();

});


$('body').on('click', '.PayViaWallet', function(){
	$(this).toggleClass('active');
 $('.walletdtls').slideToggle();

});

/* Tistahel Read more start here */
    var minimized_elements = $('.tis_loyal_prog');
    
    minimized_elements.each(function(){    
        var t = $(this).text();        
        if(t.length < 500) return;
        
        $(this).html(
            t.slice(0,500)+'<span>... </span><a href="#" class="more">Read more</a>'+
            '<span style="display:none;">'+ t.slice(500,t.length)+' <a href="#" class="less">Read less</a></span>'
        );
        
    }); 
    
    $('a.more', minimized_elements).click(function(event){
        event.preventDefault();
        $(this).hide().prev().hide();
        $(this).next().show();        
    });
    
    $('a.less', minimized_elements).click(function(event){
        event.preventDefault();
        $(this).parent().hide().prev().show().prev().show();    
    });
	
	tourTopDestination();	
	 
});
//$(document).ready() ends here

/* Tours Top Destinations */
	function tourTopDestination(){
	var hCount=0;	
    var setActive=function(t){		
		setTimeout(function(){
		     t.find('figure').css({'width':t.width()});
			 t.addClass('active')
			 },1000);
	}		
		
	$(".tTopDstnRow").each(function(){
		
	var actIndex=0;
	var activeBlock=0;
	 $(this).find(".destBlock").each(function(index){
		var t=$(this);
		t.find('figure').css({'width':t.width()});		
		if(t.hasClass('active'))
		{
			actIndex=index;
			t.removeClass('active');
			setActive(t);
			activeBlock++;
			
		}  
	});	
	if(activeBlock==0){ //if no active class for the block, add active class to first block
		var t=$(this).find(".destBlock").first();
		setActive(t);	}
	});	
	
	$(".tTopDstnRow .destBlock").hover(function(){// On Hover the block
	  var th=$(this);
		if(!th.hasClass('active')){	th.addClass('active').siblings().removeClass('active');}
	});
	}
	
	
/*End Add the Quick links*/

/* [[ modify search toggle start here ]]*/
$('.modifyTog').click(function(){
	$('.seachContainer').slideToggle();
	$('.modifyTog').toggleClass('active');
	return false;
});

$('body').on('click','.fphModifyTog', function(){
	$('#flightsRoundtripFH-tab').slideToggle();
	$('.fphModifyTog').toggleClass('active');	
});

$('body').on('click','.errModfySrh', function(){
	$('.seachContainer').slideDown();
	$('.modifyTog').addClass('active');
});

/* [[ modify search toggle end here ]]*/

 

/* [[ flight show more&less start here ]]*/

/* [[  flight show more&less end here ]]*/

   
	
	/* [[ fare details start here ]]*/
		$('.fareRulesLink').click(function(){
		$('.expandContent').slideToggle();
		//$('.fareRulesLink').toggleClass('active');
		/*$('.fareRulesLink').removeClass('loader');
				var $this = $(this);
				$this.addClass('loader');
				$this.removeClass('.fareRulesLink');*/
		return false;
	});


/* [[ fare details end here ]]*/

/**
*Flight Summary Travellers info 
*/
function fltSmryTraDrpDwn(){
	jQuery(".travellerFareInfo .firstInfo .pull-left").on('click',function() {
		jQuery(this).parent().next().slideToggle ('medium', function() {
			if ($(this).is(':visible'))
					$(this).css('display','block');
		});
		jQuery(this).toggleClass('active');
	});
}

/* [[ plus1Date tooltip overlap start here ]]*/
$(".fltResults .flightTo .plus1Date.tooltipCustom").mouseenter(function() {
		$(this).parent().addClass('toolTipOverlap')
	 }).mouseleave(function () {
		 $(this).parent().removeClass('toolTipOverlap')
 });
/* [[ plus1Date tooltip overlap end here ]]*/


/* [[ below script for payment page tabs ]]*/
function initPaymentPanel(){
	
	$(".resTabPanel.paymentSection li").click(function(){
		console.log('Payment-inter');
		var $key = $(this).attr('data-gateway');
		var $product = 'FLIGHT';
		if($('#HTDP').length>0){
			$product = 'HOTEL';
		}else if($('#FTDP').length>0){
			$product = 'FLIGHT';
		}else if($('#FPHTDP').length>0){
			$product = 'FPH';
		}
		else if($('#CTDP').length>0){
			$product = 'CAR';
		}
		else if($('#commonPayment').length>0){
			$product = 'COMMON_PAYMENT';
		}
        else if($('#TTDP').length>0){
            $product = 'TRANSFER';
        }

		if($product==='HOTEL'){
			$('#paymeBtn').attr('onclick','payMeHotel('+$key+','+'this'+')')
		}
		else if($product==='FLIGHT'){
			$('#paymeBtn').attr('onclick','payMeFlight('+$key+','+'this'+')')
		}
		else if($product==='FPH'){
			$('#paymeBtn').attr('onclick','payMePackage('+$key+','+'this'+')')
		}
        else if($product==='TRANSFER'){
            $('#paymeBtn').attr('onclick','payMeTransfer('+$key+','+'this'+')')
        }
		else if($product==='CAR'){
			$('#paymeBtn').attr('onclick','payMeCar('+$key+','+'this'+')')
		}
		else {
			$('#paymeBtn').attr('onclick','payMeProduct('+$key+','+'this'+')')
		}
		
	});
}







/* [[ Flight Review details Show More/Less content ]]*/
$('body').on('click', '.showMoreFlightDetails', function(){
	$('.flightReivewShort').slideUp("",function(){$(this).css('overflow','');});
	$('.flightReivewMore').slideDown("",function(){$(this).css('overflow','');});
	$(this).hide();
	$(".showLessFlightDetails").show();
	showMoreLessFlightDet("inline");
});

$('body').on('click', '.showLessFlightDetails', function(){
	$('.flightReivewMore').slideUp("",function(){$(this).css('overflow','');});
	$('.flightReivewShort').slideDown("",function(){$(this).css('overflow','');});
	$(this).hide();
	$('.showMoreFlightDetails').show();
	showMoreLessFlightDet("none");
});
/* [[ Flight Review details Show More/Less content ]]*/

/* [[ below script for Redeem your points tabs in opc page ]]*/
$('.redeemPoints .nav-tabs a').click(function (e) {
  e.preventDefault()
  $(this).tab('show')
})

/* [[ fare details start here ]]*/
$('body').on('click', '.deskLinks a', function(){
        var srcLink = $(this).attr("class");
        var srcLinkCont = '.' + srcLink + 'Cont';
        if(!$(srcLinkCont).is(':visible')){
            console.log(srcLinkCont);
            $('.deskLinks a').parent().removeClass('active');
            $('.specialRequestbody').slideUp();
            $(srcLinkCont).slideDown();
            $(this).parent().addClass('active');
        } else{
            $('.deskLinks a').parent().removeClass('active');
            $('.specialRequestbody').slideUp();
        }
    });
/* [[ fare details end here ]]*/

$('#share-itnry').on('shown.bs.modal', function () {
  $('#share-itnry').focus()
})



/* [[ top destination room widget start here ]]*/



/* [[ top destination room widget end here ]]*/


/* [[ flight tabs Start here ]]*/
$('body').on('click', '#roundtrip-cont .tabsNav input', function() {
    var myInput = $(this).attr('id');
    var myInputCont = $("#" + myInput + "-tab");
    $('#roundtrip-cont .tabs > div').hide();
    $(myInputCont).show();
});
/* [[ flight tabs end here ]]*/

/* [[ flight tabs Start here ]]*/
$('body').on('click', '#oneway-cont .tabsNav input', function() {
    var myInput = $(this).attr('id');
    var myInputCont = $("#" + myInput + "-tab");
    $('#oneway-cont .tabs > div').hide();
    $(myInputCont).show();
});
/* [[ flight tabs end here ]]*/

/* [[ fph tabs Start here ]]*/
$('body').on('change','#flightsOnewayFH', function() {
	$('#selectedFPHSO').val('flightsOnewayFH');
    var returnDP  = $('.returnDP ');
	var fphCheckin=$('.fphCheckin');
	var diffDates=$('#diffDates');
	 
	 $('.fphRTT').removeClass('active');
	 $('.fphRmWdgt').slideUp('fast');
    if ($(this).is(':checked')) {
        returnDP.hide();
        $('.fphonewayDP').show();
        $('.departDP').hide();
		fphCheckin.show();
		diffDates.hide();
		//alert('in...');
    } 
});
$('body').on('change','#flightsRoundtripFH', function() {
	$('#selectedFPHSO').val('flightsRoundtripFH');
	 $('.fphRTT').removeClass('active');
	 $('.fphRmWdgt').slideUp('fast');
    var returnDP  = $('.returnDP ');
	var fphCheckin=$('.fphCheckin');
	var diffDates=$('#diffDates');
    if ($(this).is(':checked')) {
    	$('.fphonewayDP').hide();
    	 $('.departDP').show();
        returnDP.show();
		fphCheckin.hide();
		diffDates.show();
		//alert('out');
    }
});
/* [[ fph tabs end here ]]*/




// contact us validation

$("body").on('click','._validateFrm', function(e) {
	$(".error").remove();
	var $trgt = $('._validate');
	var status = true;
	$trgt.each(function(){
		if($(this).is(':visible')===true){
			var $elmName = $(this).attr('data-field');
			var $val = $(this).val();
			if ($val == ""){
				$(this).after('<div class="error">'+$elmName+' is required!</div>');
				$(this).focus();
				status = false;
				//return false;
			}
		}
	});
	
	return status;
	
});


/**
* Flight Review page sidebar scrollToFixed
*/
 function fltReviewSummery(){
	  $('.summarySec.flight').scrollToFixed({
			limit: function() {
				var limit = $('footer').offset().top - $('.summarySec.flight').outerHeight(true) - 250;
				return limit;
			}, 
			zIndex: 29
		});
 }
 
 /**
* Flight Review COMBO page sidebar scrollToFixed
*/
 function fltReviewComboSummery(){
	  $('.summarySec.fcSummary').scrollToFixed({
			limit: function() {
				var limit = $('footer').offset().top - $('.summarySec.fcSummary').outerHeight(true);
				return limit;
			}, 
			zIndex: 29
		});
 }
 /**
* Hotel Review page sidebar scrollToFixed
*/
function htlReviewSummery(){
	$('.summarySec.hotel').scrollToFixed({
		limit: function() {
			var limit = $('footer').offset().top - $('.summarySec.hotel').outerHeight(true);
			return limit;
		}, 
		zIndex: 29
	});
}

 /**
* Hotel Hashpay  page sidebar scrollToFixed
*/
function htlHashSummery(){
	$('.summarySec.hotelHash').scrollToFixed({
		limit: function() {
			var limit = $('footer').offset().top - $('.summarySec.hotelHash').outerHeight(true);
			return limit;
		}, 
		zIndex: 29
	});
}
 /**
* Transfer Review page sidebar scrollToFixed
*/
function transReviewSummery(){
	
	$('.summarySec.trnsfrSumSec').scrollToFixed({
		limit: function() {
			var limit = $('footer').offset().top - $('.summarySec.trnsfrSumSec').outerHeight(true);
			return limit;
		}, 
		zIndex: 29
	});
}
/**
* Static page sidebar scrollToFixed
*/
function stcReviewSummery(){
	$('.static-page .left-menu').scrollToFixed({
		limit: function() {
			var limit = $('.topListSec').offset().top - $('.static-page .left-menu').outerHeight(true) - 250;
			return limit;
		}, 
		zIndex: 29
	});
}	
// below script for airlines section search tabs
 
$('.tabsNav ul li label').on('click', function(){
	$('.tabsNav ul li label').parent().parent().removeClass('active');
	$(this).parent().parent().addClass('active');
});

/** My Account tab navigation **/
	 jQuery(".tab-nav").click(function() {
		jQuery('.dashboard-details').toggleClass('active');
		jQuery('.tab-nav').toggleClass('closed');
		
	 });
/* [[ my account open window start here ]]*/
function popitup(url) {
	newwindow=window.open(url,'name','height=570,width=800,scrollbars=1');
	if (window.focus) {newwindow.focus()}
	return false;
}
/* [[ my account open window end here ]]*/




/*
CSS Browser Selector v1 (April 16, 2014)
Fahid Mohammad (http://fahidmohammad.in)
http://fahidmohammad.in/css_browser_selector
License: http://creativecommons.org/licenses/by/2.5/
*/
function css_browser_selector(u) {
    var ua = u.toLowerCase(),
        is = function (t) {
            return ua.indexOf(t) > -1
        }, 
        g = 'gecko',
        w = 'webkit',
        s = 'safari',
        o = 'opera',
        m = 'mobile',
        h = document.documentElement,
        b = [(!(/opera|webtv/i.test(ua)) && /msie\s(\d)/.test(ua)) ? ('ie ie' + RegExp.$1) : is('firefox/2') ? g + ' ff2' : is('firefox/3.5') ? g + ' ff3 ff3_5' : is('firefox/3.6') ? g + ' ff3 ff3_6' : is('firefox/3') ? g + ' ff3' : is('gecko/') ? g : is('opera') ? o + (/version\/(\d+)/.test(ua) ? ' ' + o + RegExp.$1 : (/opera(\s|\/)(\d+)/.test(ua) ? ' ' + o + RegExp.$2 : '')) : is('konqueror') ? 'konqueror' : is('blackberry') ? m + ' blackberry' : is('android') ? m + ' android' : is('chrome') ? w + ' chrome' : is('iron') ? w + ' iron' : is('applewebkit/') ? w + ' ' + s + (/version\/(\d+)/.test(ua) ? ' ' + s + RegExp.$1 : '') : is('mozilla/') ? g : '', is('j2me') ? m + ' j2me' : is('iphone') ? m + ' iphone' : is('ipod') ? m + ' ipod' : is('ipad') ? m + ' ipad' : is('mac') ? 'mac' : is('darwin') ? 'mac' : is('webtv') ? 'webtv' : is('win') ? 'win' + (is('windows nt 6.0') ? ' vista' : '') : is('freebsd') ? 'freebsd' : (is('x11') || is('linux')) ? 'linux' : '', 'js'];
    c = b.join(' ');
    h.className += ' ' + c;
    return c;
};
css_browser_selector(navigator.userAgent);  

// CSS Selector for IE11 Browser 
$(window).load(function() {
     if(navigator.userAgent.match(/Trident.*rv:11\./)) {
          $('html').addClass('ie ie11');
     }
});

function scrollUp(){
	$("html").animate({ scrollTop: 0 }, 600);
	return false;
}

/*Set Equal height for Div*/

function setEqualHeight(columns)
 {
 var tallestcolumn = 0;
 columns.each(
 function()
 {
 currentHeight = $(this).height();
 if(currentHeight > tallestcolumn)
 {
 tallestcolumn  = currentHeight;
 }
 }
 );
 columns.height(tallestcolumn);
 }
$(document).ready(function() {
 setTimeout(function(){
    //setEqualHeight($(".myAccount > .container > .row > div"));
 },5000);
 
 $('body').on('click', '.travellerBtns .btn', function() {
	
    var cLink = $(this).attr('id');
	var cLinkCont = "."+cLink+"Cont";
	if(!$(cLinkCont).is(':visible')){
		$('.mpTabCont').hide();
		$(cLinkCont).show();
		$('.travellerBtns .btn').removeClass('active');
		$(this).addClass('active');
	}  
});




//Update card payment label text with 'Use another credit card' if quick payavailable
changePaymentLabel();
});
/**
 *Update card payment label text with 'Use another credit card' if quick pay is available
 */
function changePaymentLabel(){
	console.log('changePaymentLabel');
  var trgt = $('._quickPayCont'),
      label = $('.panel-heading._payfort').find('h4.panel-title a');
  if(trgt.is(':visible') && trgt.length>0){
    label.attr('data-i18n','useAnthrCredCard');
  }else{
    label.attr('data-i18n','cardPayment');
  }
  _langGlobal.langInit();
}

function changePaymentLabelFlight(){
	console.log('changePaymentLabel');
  var trgt = $('._quickPay'),
      label = $('.panel-heading._payfort').find('h4.panel-title a');
  if(trgt.is(':visible') && trgt.length>0){
    label.attr('data-i18n','useAnthrCredCard');
  }else{
    label.attr('data-i18n','cardPayment');
  }
  _langGlobal.langInit();
}

$('.change-room').on('click',  function(event) {
	event.preventDefault();
	$(this).toggleClass('active');
	$('.changeRoomDtls').slideToggle("medium");
});





$('body').on('click', '.owl-prev, .owl-next, #carousel-example-generic', function() {
	var bLazy = new Blazy({
        breakpoints: [{ 
		src: '../img/destinations/call-icon.jpg'
	}]
      , success: function(element){
	    setTimeout(function(){
		var parent = element.parentNode;
		parent.className = parent.className.replace(/\bloading\b/,'');
	    }, 200);
        }
   });
}); 


/*Price TAG differentiation between value and decimals starts here*/
var pricetagConvert = {
	elm:'._priceTag',
  convert:function(){
  	$(this.elm).map(function(k,v){
    	var priceStr = $(v).text().split('.');
		
		if(typeof priceStr[1]==='undefined'){
			priceStr[1] = '00';
		}
    if(priceStr[1].length<2){
    	priceStr[1] = parseInt(priceStr[1])+'0';
    }
      return $(this).html('<elm>'+priceStr[0]+'</elm>'+'<elm class="_decimel">.'+priceStr[1]+'</elm>'); 
	  
    });
  },
  init:function(){
  	this.convert();
  }
}
pricetagConvert.init();
/*Price TAG differentiation between value and decimals ends here*/

//below script for my account mobile navigation
$('body').on('click', '.my-nav .navbar-toggle', function() {
	$('.dashboard-details').slideToggle();
}); 

function delAlertPop(index){ 
	var idName = "#delAlertPop"+index;
	$(idName).modal({
		 show: true,
		 keyboard: false,
		 backdrop:'static'
	});
		
}


$(window).load(function() {
	var blueTxt = $('body .fPanel ul li label span.blue-txt');
		if (blueTxt.width() > 10) {
			$('body .fPanel ul li label span.ar-name').addClass('smWdth');
	}
});




//--------------------- For ALl Products Common Code ---------------//
/**
* Common Pagination Script for all roducts
*/
function cmnPaginationConfig(elm){
	var opt = {callback:elm};
	var items = {
		items_per_page:30,
		num_display_entries:6,
		num_edge_entries:2,
		prev_text: i18n.t('previous'),
		next_text: i18n.t('next')
	};	
	for(var key in items){
		opt[key] = items[key];
	}
	return opt;
}
/**
* Common Stops Lang Render
*/
function cmnStopsLangRender(value){
	var language_data = "";
	if(value!=""){
		switch(value){
			case '1':
				language_data = i18n.t("nonStop");
				break;
			case '2':
				language_data = i18n.t("oneStopKey");
				break;
			case '3':
				language_data = i18n.t("twoStopKey");
				break;
		}
	}
	return language_data;
}

/**
* Common Arrival and Departure Language Rendering
*/
function cmnArrivalEventLangRender(value,opt){
	  var language_data = "";
	  if(value!=""){
		  switch(value){
		  case 'EM':
			  language_data = opt+' - '+i18n.t("earlyMorning");
			  break;
		  case 'M':
			  language_data = opt+' - '+i18n.t("morning");
			  break;
		  case 'AN':
			  language_data = opt+' - '+i18n.t("afterNoon");
			  break;
		  case 'E':
			  language_data = opt+' - '+i18n.t("evening");
			  break;
		  }
	  }
	  return language_data;
 }

 /**
*@description Validate array value with an array
*@params Array
*@params Array
*@return Boolean
*/
function cmnIndexofSearchArr(Array1, Array2) {
	if (typeof Array1 !== 'undefined' && Array1.length > 0) {
		for (var i = 0; i < Array1.length; i++) {
			for (var e = 0; e < Array2.length; e++) {
				if (Array1[i] == Array2[e]) {
					return true;
				}
			}
		}
		return false;
	}
	return true;
}

/**
*@description Validate string with an array value
*@params String
*@params Array
*@return Boolean
*/
function cmnFindexofSearch(key, valueArr) {
	if (typeof valueArr !== 'undefined' && valueArr.length > 0) {
		for (var i = 0; i < valueArr.length; i++) {
			if (valueArr[i] == key) {
				return true;
			}
		}
	}
	return false;
}

/**
* Common Between Search with minimum and maximum values
*/
function cmnBetweenSearch(key,a,b){
	var min = Math.min.apply(Math, [a,b]),
		max = Math.max.apply(Math, [a,b]);
	return key >= min && key <= max;
}

/**
* Method to get URL query string 
* @param Query Key
* @returns
*/
function cmnGetURLQueryStr(key){
	var vars = [], hash;
	var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
	for(var i = 0; i < hashes.length; i++){
		hash = hashes[i].split('=');
		vars.push(hash[0]);
		vars[hash[0]] = hash[1];
	}
	return vars[key];
}
/**
* Method to get URL query string 
* @param Query Key and URL
* @returns 
*/
function cmnGetParFrmURL(key,url){
	var vars = [], hash;
	var hashes =url.slice(url.indexOf('?') + 1).split('&');
	for(var i = 0; i < hashes.length; i++){
		hash = hashes[i].split('=');
		vars.push(hash[0]);
		vars[hash[0]] = hash[1];
	}
	return vars[key];
}
/**
* Method to get objectified  query string 
* @param URL
* @returns 
*/
function cmnGetObjFrmURL(url){
	var vars = {}, hash;
	var hashes =url.slice(url.indexOf('?') + 1).split('&');
	for(var i = 0; i < hashes.length; i++){
		hash = hashes[i].split('=');
		//vars.push(hash[0]);
		vars[hash[0]] = hash[1];
	}
	return vars;
}
/*
* Localization for Departure/Arrival Events Filter
*/
function cmnDAEventLocalization(key){
	var keyAr = [], keyEn = [], validateArr=[];
	keyEn.push(
		{
		"EM": i18n.t('earlyMorning') + " (00:00 - 4:59)",
		"M":i18n.t('morning') + " (5:00 - 11:59)",
		"AN":i18n.t('afterNoon') + " (12:00 - 17:59)",
		"E": i18n.t('evening') + " (18:00 - 23:59)"
		}
	);
	keyAr.push(
		{
		"EM": i18n.t('earlyMorning') + " (00:00 - 4:59)",
		"M":i18n.t('morning') + " (5:00 - 11:59)",
		"AN":i18n.t('afterNoon') + " (12:00 - 17:59)",
		"E": i18n.t('evening') + " (18:00 - 23:59)"
		}
	);
	 //Check for language header
	if($("html").hasClass("arabic")){
		validateArr =  keyAr;
	}else{
		validateArr =  keyEn;
	}
	if(key!=""){
	  return validateArr[0][key];
	}  
}
/**
*@description Validate key is having Array
*@params Key
*@params Array
*@return Boolean
*/
function nn(key, valueArr) {
	for (var i = 0; i < valueArr.length; i++) {
		if (valueArr[i] == key) {
			return true;
		}
	}
	return false;
}

function cmnTrvlrVal($this, alertmsg){
	growl_alert(alertmsg);
	var offset = $this.offset().top;
	if($this.hasClass("_dob")){
		$this.find("select").addClass('error');
	}
	else if($this.hasClass("_nationality") || $this.hasClass("_issuingCountry")){
		$this.parents('.cSel').addClass('error');
		offset = $this.parents('.cSel').offset().top;
	}
	else{
		$this.addClass('error');
	}
	$this.focus();
	//$('body').scrollTop(0);
	$('html, body').animate({scrollTop: offset - 130});
	return false;
}

function cmnSrchVal($this, alrtMsg){
	$this.addClass('error');
	growl_alert(alrtMsg);
	if(!$this.hasClass("_datepicker")){
		$this.focus();
	}
	return false;
}

/*Marketing pages - Rabbani*/

$(function(){ 
$('.cntBtns a').parent().parent().find('.show').css({'height':'150px'});
$('.cntBtns a').click(function(e){
	e.preventDefault();
	var $this=$(this).parent().parent().find(".show");
	
$this.toggleClass('open');
    	   if ($this.height() == 150) {
             $this.animate({ 'height': $this[0].scrollHeight }, "slow");
           }
     else{
       $this.animate({
     "height": "150px"
    }, "slow");
      }

	})
 });
 $(function(){ 
$(this).find('.viewbtn').css({'height':'550px'});
$('.viewbtn .cntBtns a').click(function(e){
	e.preventDefault();
	var $this=$(this).parent().parent().parent().find(".viewbtn");
	
$this.toggleClass('open');
    	   if ($this.height() == 550) {
             $this.animate({ 'height': $this[0].scrollHeight }, "slow");
           }
     else{
       $this.animate({
     "height": "550px"
    }, "slow");
      }
	})
 });

/*Redeem points section visible*/
function reedemPointsVisible(){
	if($('.payment').is(":visible")){
		$('.redeemPoints').show(); 
	setTimeout(function(){		
			if(!$('.redeemPoints ul li').is(':visible')){
				$('.redeemPoints').hide(); 
			} 
		
	},200);
}
	 if($('.redeemPoints').length){
		 $('.redeemPoints ul li:first-child').addClass('active');
		 $('.redeemPoints .tab-content > div:first-child').addClass('active');
	 }
}
setTimeout(function(){
	reedemPointsVisible();
},500);


/*$('body').on('click', 'anothercard', function() {
$(this).addClass('active');	

});

function hideMore(){
	$('._saveCardHideShow li:gt(1)').hide();
	$('.anothercard').click(function(){
		$('._saveCardHideShow li').show();	
	}); 
}*/


var anothercardEvnt = true;

function hideMore(){
	
	//$("._saveCardHideShow li:nth-child(2) input").attr("checked","chcked");
			 
	//var showMore = i18n.t("showOtherSavedCards");
	//var showLess = i18n.t("hideOtherSavedCards");
	
	$('._saveCardHideShow li:nth-child(2)').show();
	
	var cardsLength=$('._saveCardHideShow li').length;
		if(cardsLength > 1){
			$('._saveCardHideShow li:gt(2)').slideUp(275); 
			
		}else{
			$('.anothercard').hide();
		}
	if(anothercardEvnt){
		
		$('body').on('click', '.anothercard', function(event) {
			var overLayLth = $('body').find('.onLoadOverlay').length;
			if(overLayLth==1){
				event.stopPropagation();
			} else {
				if (!$(this).hasClass('showLess')) {
					$(this).html(i18n.t("hideOtherSavedCards"));
					$(this).addClass('showLess');
					$(this).parents('.paySvddCrds').find('._saveCardHideShow li:gt(2)').slideDown(275); 
				} else {
					$(this).html(i18n.t("showOtherSavedCards"));
					$(this).removeClass('showLess');
					$(this).parents('.paySvddCrds').find('._saveCardHideShow li:gt(2)').slideUp(275); 
				}
			}
			
	    });
	    anothercardEvnt = false;
	}
    
	

$('body').on('click', '.quickPayBlock .cards', function() {
	if(!$(this).hasClass('active')){
			$('.quickPayBlock .cards').removeClass('active');
			$(this).addClass('active');
			$(this).slideDown(275);
        }
});
}

function saveCardInfo(){	

	$('body').on("click", "#saveCardDeatils",function(){		
		if($(this).is(':checked')){
			$('#payfort_remember_me').val('');
			$('#payfort_remember_me').val('YES');
		} else {
			$('#payfort_remember_me').val('');
			$('#payfort_remember_me').val('NO');
		}
		
	});	 
}
if($('.opcPayment').length){
	saveCardInfo();
	hideMore();
}
/*
var myAcshowMore = 'Add new card',
	myAcshowLess = 'Hide new card';
    $('body').on('click', '.addNewCard', function(event) {
	var overLayLth = $('body').find('.onLoadOverlay').length;
		if(overLayLth==1){
			event.stopPropagation();
		} else {
			if (!$(this).hasClass('myAcshowLess')) {
				$(this).html(myAcshowLess);
				$(this).addClass('myAcshowLess');
				$(this).parents('.peCont').find('.addNewCardBlock').slideDown(275);
			} else {
				$(this).html(myAcshowMore);
				$(this).removeClass('myAcshowLess');
				$(this).parents('.peCont').find('.addNewCardBlock').slideUp(275);
			}
		}
		
    });*/

	



$('body').on('click', '.tis_trms_cond',function(){	
	seatValidation.setName($(this).text());
	if(!$(this).hasClass('active')){
		$('.sar_text').slideDown(275);
		$(this).addClass('active');
	}else{
		$(this).removeClass('active');
		$('.sar_text').slideUp(275);
	}
});
/* Tistahel Read more end here */

/*$(document).ready(function(){
	setTimeout(function(){
		$('body').removeAttr('style');
		$('.myAccount .loading_popup_flight').remove();
	},500);
	
});*/
	
/*$('body').on('click', '.contList li ', function(){
	var index = $(this).attr('data-attr');
	if($(this).hasClass('active')){
		$(this).removeClass('active');
		$('.contList .pointsBox' +'.'+index).slideUp(500);
	}else{
			$('.contList li').removeClass('active');
			//console.log('index', index);
			$('.contList .pointsBox').slideUp(500);
			$(this).addClass('active');
			$('.contList .pointsBox' +'.'+index).slideDown(500);
			}
			//$(this).append('<div class="pointsBox"><figure><img src="http://localhost:3000/img/flights/1x/airline-logos/GF.png" alt=""></figure><div class="pointsPNR">GDS PNR<small>EQ 102</small></div><div class="pointsDest"><span class="pDestCont">Riyadh (RUH)<small><elm>12:55AM</elm>, Fri, 22 Nov 2016</small></span><span class="pDestCont">Dallas All (DXW)<small><elm>3:45AM</elm>, Fri, 24 Nov 2016</small></span></div></div>').slideDown(slow);
			
		 
});*/		

$('body').on('click', '.close', function(){
    $(".rAlerts").hide();     
});

/*Alhilal Static Landing page starts here*/
$("#signinLink").on("click",function(){
 
  $("#loginbox").animate({left: "-100%"});
   $("#signupbox").animate({left: "5%"});
});

$("#signupLink").on("click",function(){
 
  $("#loginbox").animate({left: "5%"});
   $("#signupbox").animate({left: "100%"});
 
});
$('body').on('click', '#frgtPassLink', function(){
 
  $("#forgotPass").animate({left: "5%"});
   $("#loginbox").animate({left: "-100%"});
   $("#signupbox").animate({left: "-100%"});
});
 $("#frgSignIn").on("click",function(){
  $("#signupbox").animate({left: "5%"});
   $("#forgotPass").animate({left: "100%"});
});
 
 $(".alhRegForm .form-group .ls-input-text").focus(function() {
  $(this).parent().find('label').addClass("labelHighlight");
}).blur(function() {
  $(this).parent().find('label').removeClass("labelHighlight");
});

/*Alhilal Static Landing page ends here*/

/*below styles transfer modify search*/
$('body').on('click', '.transferTrip strong a',function(){	
	seatValidation.setName($(this).text());
	if(!$(this).hasClass('active')){
		$('.transferSrchCret').slideDown(275);
		$(this).addClass('active');
	}else{
		$(this).removeClass('active');
		$('.transferSrchCret').slideUp(275);
	}
});


$('body').on('change','._cardExpMonthCO', function(){
	$('input[name="ccmonth_co"]').val($(this).val());
});

$('body').on('change','._cardExpYearCO',function(){
	$('input[name="ccyear_co"]').val($(this).val().substring(2,4));
});

//Below styles for ipad
var windowWidth = $(window).width();
if(windowWidth < 1023){
    $('body').on('click', '.plus1Date .tooltipCustom, .fltNameTime .plus1, .fltResults .flightTo .plus1Date.tooltipCustom', function(e) {
 e.stopPropagation();
 $(this).toggleClass('active')
 $(this).next().toggle();
 });
}
/***
   * @returns the distance between two points
   */
  function latLonToDistance(t,a,s,i){var n=3958.7558657440545,o=toRadius(s-t),h=toRadius(i-a),M=Math.sin(o/2)*Math.sin(o/2)+Math.cos(toRadius(t))*Math.cos(toRadius(s))*Math.sin(h/2)*Math.sin(h/2),u=2*Math.atan2(Math.sqrt(M),Math.sqrt(1-M)),r=n*u;return(1.609344*r).toFixed(1)}function toRadius(t){return t*Math.PI/180}
 
/***
 * Below code is for tracking the activity using webengage.. 
*/

//User Atrributes 
function userLogin(profId){
	if(typeof webengage != 'undefined'){
		webengage.user.login(profId.toString());
	}
}
//For Private ESP
function userLoginESP(profId){
	if(typeof webengage != 'undefined'){
		webengage.user.setAttribute({
			  we_hashed_email:profId.toString(),
			  we_hashed_phone:profId.toString(),
		});
	}
}
function userSignUp(profId){
	if(typeof webengage != 'undefined' && webengage.user.signup != undefined){
		webengage.user.signup(profId.toString());
	}
}
function userLogout(){
	if(typeof webengage != 'undefined'){
		webengage.user.logout();
	}
}
function editProf(obj){
	if(typeof webengage != 'undefined'){
		webengage.user.setAttribute(obj);
	}
}

//Header Events
function changeLang(uName,domainName,lng){
	if(typeof webengage != 'undefined'){
		var lang = "en_GB";
		if(lng=="ar"){
			lang = "ar_GB";
		}
		if(domainName=="Egypt"){
			if(lng=="ar"){
				lang = "ar_EG";
			}else{
				lang = "en_EG";
			}
		}
		if(uName==""){
			webengage.track("Language Change",{"lang":lang});
		}else{
			webengage.user.setAttribute({"preferred_language":lang});
		}
	}
}
function changeCurr(uName,cur){
	if(typeof webengage != 'undefined'){
		if(uName==""){
			webengage.track("Currency Change",{"currency":cur});
		}else{
			webengage.user.setAttribute({"selected_currency":cur});
		}
	}
}
function changeDomain(uName,country){
	if(typeof webengage != 'undefined'){
		var domain = "flyin.com";
		if(country == "EG"){
			domain = "eg.flyin.com";
		}
		if(uName==""){
			webengage.track("Domain Change",{"domain_type":domain});
		}else{
			webengage.user.setAttribute({"domain_type":domain});
		}
	}
}
function landingPageChange(uName,landingPage){
	if(typeof webengage != 'undefined'){
		if(uName==""){
			webengage.track("Landing Page Change",{"landing_page":landingPage});
		}else{
			webengage.user.setAttribute({"preferred_landing_page":landingPage});
		}
	}
}
function logoClick(uName){
	if(typeof webengage != 'undefined'){
		if(uName==""){
			webengage.track("Flyin Logo",{"Flyin_logo":"Home"});
		}
	}
}

//Flight Booking Flow
function flightSearch(obj,elm){
	if(typeof webengage != 'undefined'){
		if($(elm).hasClass("modiRTButton") || $(elm).hasClass("modiOWButton") || $(elm).hasClass("modiMCButton")){
			webengage.track("Flight Search Modify",obj);
		}else{
			webengage.track("Flight Search",obj);
		}
	}
}
function flightShowMore(action){
	if(typeof webengage != 'undefined'){
		webengage.track("Show More Flights",{"display":action});
	}
}
/*function flightPagination(action){
	webengage.track("Pagination Flights",{"page":action});
}*/
function flightScrollUp(){
	if(typeof webengage != 'undefined'){
		webengage.track("ScrollUp Flight Button",{"scroll":"Top"});
	}
}
function flightFareComb(action){
	if(typeof webengage != 'undefined'){
		webengage.track("Fare Combination Tab",{"fare_combination":action});
	}
};
function flightBook(obj){
	if(typeof webengage != 'undefined'){
		webengage.track("Book Now Flight",obj);
	}
}
function showMoreLessFlightDet(action){
	if(typeof webengage != 'undefined'){
		webengage.track("Show More Details Review",{"display":action});
	}
}
function chngFlgt(obj){
	if(typeof webengage != 'undefined'){
		webengage.track("Change Flight",obj);
	}
}
function flightSelTrav(obj){
	if(typeof webengage != 'undefined'){
		webengage.track("Select Traveller",obj);
	}
}
function flightContPay(obj){
	if(typeof webengage != 'undefined'){
		webengage.track("Continue to payment",obj);
	}
}
function payNow(obj){
	if(typeof webengage != 'undefined'){
		webengage.track("Payment",obj);
	}
}
function seatSelection(){
	if(typeof webengage != 'undefined'){
		webengage.track("Seat selection",{"seat_select":"true"});
	}
}

//Hotel Booking Flow
function hotelSearch(obj){
	if(typeof webengage != 'undefined'){
		webengage.track("Hotel Search",obj);
	}
}
function hotelBook(obj){
	if(typeof webengage != 'undefined'){
		webengage.track("Hotel Booking",obj);
	}
}
function updateSearch(obj){
	if(typeof webengage != 'undefined'){
		webengage.track("Update Search",obj);
	}
}
function bookRoom(obj){
	if(typeof webengage != 'undefined'){
		webengage.track("Book Room",obj);
	}
}
function hotelSelTrav(obj){
	if(typeof webengage != 'undefined'){
		webengage.track("Select Traveller",obj);
	}
}
function hotelContPay(obj){
	if(typeof webengage != 'undefined'){
		webengage.track("Book Room",obj);
	}
}

//FPH Booking Flow
function fphSearch(obj){
	if(typeof webengage != 'undefined'){
		webengage.track("FPH Search",obj);
	}
}
function fphContToFlght(obj){
	if(typeof webengage != 'undefined'){
		webengage.track("FPH continue to Flight",obj);
	}
}
function fphContToReview(obj){
	if(typeof webengage != 'undefined'){
		webengage.track("FPH Continue Button",obj);
	}
}

//Common Payment Flow
function loyaltyPnts(points){
	if(typeof webengage != 'undefined'){
		webengage.track("loyalty reward points",{ "reward_points":points });
	}
}
function postBooking(bId){
	if(typeof webengage != 'undefined'){
		webengage.track("Post Booking",{"status":"Success",	"booking_id":bId});
	}
}

function flightPriceChange(obj){
	if(typeof webengage != 'undefined'){
		webengage.track("Flight filter",obj);
	}
}

function FBFOnwardPriceChange(obj){
	if(typeof webengage != 'undefined'){
		webengage.track("Hotel filter",obj);
	}
}
function FBFRtnPriceChange(obj){
	if(typeof webengage != 'undefined'){
		webengage.track("Hotel filter",obj);
	}
}

function hotelPriceChange(obj){
	if(typeof webengage != 'undefined'){
		webengage.track("Hotel filter",obj);
	}
}

function hotelFltrByHtlName(obj){
	if(typeof webengage != 'undefined'){
		webengage.track("Hotel filter",obj);
	}
}

function fphHotelPriceChange(obj){
	if(typeof webengage != 'undefined'){
		webengage.track("Hotel filter",obj);
	}
}
function fphFlightriceChange(obj){
	if(typeof webengage != 'undefined'){
		webengage.track("Hotel filter",obj);
	}
}
WEEventCall();
var bound = false;
function WEEventCall(){
	$('body').on('click',"[WEEvent]",function(){
		if(!this.bound && typeof webengage != 'undefined'){
			var attrData = JSON.parse($(this).attr('WEData'));
			var attrName = $(this).attr('WEEvent');
			//User Atrributes
			if(attrName == "Login/Signup"){
				webengage.user.login(attrData);
			}else if(attrName == "Logout"){
				webengage.user.logout();
			}else if(attrName == "Flyin Logo"){
				webengage.track(attrName,attrData);
			}
			//Header Events
			else if(attrName == "Flyin Logo"){
				webengage.track(attrName,attrData);
			}//Sort By ArrivalTime
			else if(attrName == "Sorting"){
				webengage.track("Flight Sorting",attrData);
				this.bound = true;
			}//AirlineGrid Filter
			else if(attrName == "Airline Ribbon Filter"){
				webengage.track(attrName,attrData);
				this.bound = true;
			}//Flight Filters
			else if(attrName == "Flight filter"){
				if($(this).attr('data-Fltr')=='airlines'){
					webengage.track(attrName,attrData);
					this.bound = true;
				}else if($(this).attr('data-Fltr')=='stops'){
					webengage.track(attrName,attrData);
					this.bound = true;
				}else if($(this).attr('data-Fltr')=='departure'){
					webengage.track(attrName,attrData);
					this.bound = true;
				}else if($(this).attr('data-Fltr')=='arrival'){
					webengage.track(attrName,attrData);
					this.bound = true;
				}else if($(this).attr('data-Fltr')=='rtn_departure'){
					webengage.track(attrName,attrData);
					this.bound = true;
				}else if($(this).attr('data-Fltr')=='rtn_arrival'){
					webengage.track(attrName,attrData);
					this.bound = true;
				}else if($(this).attr('data-Fltr')=='soairport'){
					webengage.track(attrName,attrData);
					this.bound = true;
				}else if($(this).attr('data-Fltr')=='rtn_soairport'){
					webengage.track(attrName,attrData);
					this.bound = true;
				}else if($(this).attr('data-Fltr')=='nbairport'){
					webengage.track(attrName,attrData);
					this.bound = true;
				}				
			}else if(attrName == "Hotel sort"){
				webengage.track(attrName,attrData);
				this.bound = true;
			}//Hotel Filters
			else if(attrName == "Hotel filter"){
				if($(this).attr('data-Fltr')=='rating'){
					webengage.track(attrName,attrData);
					this.bound = true;
				}else if($(this).attr('data-Fltr')=='deals'){
					webengage.track(attrName,attrData);
					this.bound = true;
				}else if($(this).attr('data-Fltr')=='accommodation'){
					webengage.track(attrName,attrData);
					this.bound = true;
				}else if($(this).attr('data-Fltr')=='district'){
					webengage.track(attrName,attrData);
					this.bound = true;
				}else if($(this).attr('data-Fltr')=='hotel_chain'){
					webengage.track(attrName,attrData);
					this.bound = true;
				}
			}else if(attrName == "FPH Hotel sort"){
				webengage.track(attrName,attrData);
				this.bound = true;
			}//
			else if(attrName == "FPH Hotel filter"){
				if($(this).attr('data-Fltr')=='rating'){
					webengage.track(attrName,attrData);
					this.bound = true;
				}else if($(this).attr('data-Fltr')=='deals'){
					webengage.track(attrName,attrData);
					this.bound = true;
				}else if($(this).attr('data-Fltr')=='accommodation'){
					webengage.track(attrName,attrData);
					this.bound = true;
				}else if($(this).attr('data-Fltr')=='district'){
					webengage.track(attrName,attrData);
					this.bound = true;
				}else if($(this).attr('data-Fltr')=='hotel_chain'){
					webengage.track(attrName,attrData);
					this.bound = true;
				}
			}else if(attrName == "FPH Flight Sorting"){
				webengage.track(attrName,attrData);
				this.bound = true;
			}//FPH Flight Filter
			else if(attrName == "FPH Flight filter"){
				if($(this).attr('data-Fltr')=='airlines'){
					webengage.track(attrName,attrData);
					this.bound = true;
				}else if($(this).attr('data-Fltr')=='stops'){
					webengage.track(attrName,attrData);
					this.bound = true;
				}else if($(this).attr('data-Fltr')=='departure'){
					webengage.track(attrName,attrData);
					this.bound = true;
				}else if($(this).attr('data-Fltr')=='arrival'){
					webengage.track(attrName,attrData);
					this.bound = true;
				}else if($(this).attr('data-Fltr')=='rtn_departure'){
					webengage.track(attrName,attrData);
					this.bound = true;
				}else if($(this).attr('data-Fltr')=='rtn_arrival'){
					webengage.track(attrName,attrData);
					this.bound = true;
				}else if($(this).attr('data-Fltr')=='soairport'){
					webengage.track(attrName,attrData);
					this.bound = true;
				}else if($(this).attr('data-Fltr')=='rtn_soairport'){
					webengage.track(attrName,attrData);
					this.bound = true;
				}else if($(this).attr('data-Fltr')=='nbairport'){
					webengage.track(attrName,attrData);
					this.bound = true;
				}		
			}
		}
	});
};

function loadCheckoutKit(paymentObj) {
	window.CKOConfig = {
		debugMode: true,
		publicKey: paymentObj.checkoutDetails.publicKey,						                        
		customerEmail: paymentObj.emailId,
		ready: function(event) {
			CheckoutKit.monitorForm('#checkout-form', CheckoutKit.CardFormModes.CARD_TOKENISATION);
			CheckoutKit.addEventHandler(CheckoutKit.Events.CARD_TOKENISED , function(event) {   
				var token = event.data.id;			
				$('#cardTokenId').val(token);			
				$('#checkout-data-form').submit();												
			});
		},

	};
	var fileRef = document.createElement('script');
	fileRef.setAttribute("type", "text/javascript");
	fileRef.setAttribute("src", paymentObj.checkoutDetails.library_url);
	fileRef.setAttribute("async", "async");
	document.getElementsByTagName("head")[0].appendChild(fileRef);
}

// Review Terms Collapsing
function reviewCollapseFn() {
	if ($('.reviewCollapse').is(':visible')) {			
					$('.reviewCollapse').slideUp('slow');
					$('.review-terms .info .accordion-toggle').removeClass('collapsed');	
					var offsetPopTop = $('.opcPayment').offset().top;
					$('html, body').animate({scrollTop:offsetPopTop}, 500);					
		} else {
			$('.reviewCollapse').slideDown('slow');
			$('.review-terms .info .accordion-toggle').addClass('collapsed');
			var offsetPopTop = $('.review-terms.rvwClps').offset().top;
			$('html, body').animate({scrollTop:offsetPopTop}, 500);			
		}
}

/* for reviews  */
if ($(".opcPayment").is(':visible')) {
 $(".review-terms-fph").find(".info").css("display", "block");
}
// CDP show more & show less
$(".cdpMore").click(function(){
        if($(this).text()=== "Show More"){
            $(this).text("Show Less");
        }
        else{
            $(this).text("Show More");           
        }
         $(".cdpLess").toggle(300);
    });

// T&C confirmation page
$('body').on('click', '.tCtxt',function(){	
	seatValidation.setName($(this).text());
	if(!$(this).hasClass('active')){
		$('.termsConditions').slideDown(275);
		$(this).addClass('active');
	}else{
		$(this).removeClass('active');
		$('.termsConditions').slideUp(275);
	}
});
$('body').on('click', '.close', function(){
    $('.termsConditions').slideUp(275);    
});

/*$('body').on('click', '._removeCCD', function(){
  	$('.modal-backdrop.in, .modal.fade.in').hide();
  	$('body').removeClass('modal-open');
  	$('body').css('padding-right','0');
});*/
jQuery(document).ready(function(){
	window.onerror = function(message, file, line) {		
		$.post('/flyin/clientError',{message:message,file:file,line:line},function(res){
		});
	};
	
	var selectedLang = 'en';
	/**
	 * Language Render Callback
	 */
	_langGlobal.langRender(function(){
		/**
		 * Default Room Widget Rendering
		 */
		defaultSettings();
		//prepapulating data in hotel review page
		if($('.msdp.hotel-review').length){
			autoPopulateNewRoomWidget();
			if($('#changesearch-options').is(':visible')){
				$('#changesearch-options').hide();
			}
		}
		flightWidgetGen();
		initHotelRoomWidget();
		initFPHRoomWidget();
		if($("body").hasClass("homePage")){
			travllerAndClassWidgetF();
			travllerAndClassWidgetH();
			travllerAndClassWidgetFph();
		}
		
		//Quick links for homepage search section.. Added by Raghava
	//	flightQuickLinks();	
		//hotelQuickLinks();
		
		topRouteFlightFnDsk();
		topHotelsSrchFnDsk();
		
		//In traveler detail page "Type here" text localization
		if($("div.cSel div input").length){
			$("div.cSel div input").attr("placeholder",i18n.t('typeHere'));
		}
	});
	initLocalization();
	$("#homeHoSearch").removeAttr("disabled");	
	$('#roundTripButton').removeAttr("disabled");	
	$('#oneWayButton').removeAttr("disabled");
	$('#multicityButton').removeAttr("disabled");
	$('#QITAF_REDEEM_POINT_BTN').removeAttr("disabled");
	$('#QITAF_GRNOTP_BTN').removeAttr("disabled");
	$('#roundTripButtonFH2, #roundTripButtonFHPOP').removeAttr("disabled");
	
	
	/*mobile my acc menu active js*/
$('body').on('click', '.navbar-toggle', function(){
    $(this).toggleClass('active');
});
	
	//Flight Search Option Value
	$('input[name=flightsType]').on('click',function(){		
		$('#selectedFSO').val($(this).attr('id'));		
	});
	//Flight Search Option Value
	checkBoxHidden('flightsType','selectedFSO');
	function checkBoxHidden(key,hidden){
		$('#'+hidden).val('');
		$('input[name='+key+']').each(function(){			
			$(this).on('click',function(){
				$('#'+hidden).val($(this).attr('id'));			
			});			
		});
	}
	/**
	 * Default Home page loading with roundtrip  
	 */
	$('.tabsNav.cf span').each(function(){
		if($(this).hasClass('active')){
			$('#selectedFSO').val($(this).find('input').attr('id'));
			$(this).find('input').trigger('click');
		}
	});
	
	$('body').on('click','.closeBtn',function(){
	    $('#changesearch-options').hide();
	    $('.selectRoomsOptions._selectRooms').removeClass('active');
	});

	/* [[ continue payment start here ]]*/
	$('.continuePayment').click(function(){
		$('.paymentBlock').show();
	});
	/* [[ continue payment end here ]]*/

/*!
 * Hotel AutoComplete Functionality
 * http://flyin.com/
 *
 * Date: 16-04-2014
*/
window.displayBoxIndex = -1;
var Navigate = function(diff) {
	var speed = 25, scroll = 5, scrolling;
    var cssClass = "display_box_hover";	
    displayBoxIndex += diff;
	//For hotel
	$('.res_hotel').each(function(){
		if($(this).is(':visible')){
			var offsetVal = $(this).offset();
			var oBoxCollection = $(this).find('.tab-content').find('.preCont ul li');
			//get the container
			var list_hotel = $(this).find('.tab-content ').find('.preCont');
			if (displayBoxIndex >= oBoxCollection.length){
				displayBoxIndex = 0;
			}
			if (displayBoxIndex < 0){
				displayBoxIndex = oBoxCollection.length - 1;
			}	
			oBoxCollection.removeClass(cssClass).eq(displayBoxIndex).addClass(cssClass);
			var list_hotel_selected_elm = $(this).find('.tab-content').find('.preCont ul li.display_box_hover');
			list_hotel.scrollToElm(list_hotel_selected_elm,{'offsetTop':offsetVal.top}); 
		}	
	});
	//For Flight
	$('.results-list').each(function(){
		if($(this).is(':visible')){
			var offsetVal = $(this).offset();
			//var offsetVal = $(this).find('.forFlight.results-list').find('.rtfsf1').offset();
			var oBoxCollection2 = $(this).find('ul li');
			//get the container
			var list_flight = $(this).find('.preCont');
			if (displayBoxIndex >= oBoxCollection2.length){
				displayBoxIndex = 0;
			}
			if (displayBoxIndex < 0){
				displayBoxIndex = oBoxCollection2.length - 1;
			}	
			oBoxCollection2.removeClass(cssClass).eq(displayBoxIndex).addClass(cssClass);
			var list_flight_selected_elm = $(this).find('ul li.display_box_hover');
			list_flight.scrollToElm(list_flight_selected_elm,{'offsetTop':offsetVal.top});
		}
	});
}
/*!
 *@file_name jQuery.scrollToElm()
 *
 *@author Fahid Mohammad
 *@date 01-09-2014
 */
$.fn.scrollToElm = function(target, options, callback) {
	if(typeof options === 'function' && arguments.length === 2) {
		callback = options;
		options = target;
	}
	var settings = $.extend({
		scrollTarget  : target,
		offsetTop     : 10,
		duration      : 0,
		easing        : 'linear'
	}, options);
	return this.each(function(i) {
		var scrollPane = $(this);
		var scrollTarget = (typeof settings.scrollTarget === 'number') ? settings.scrollTarget : $(settings.scrollTarget);
		var scrollY = (typeof scrollTarget === 'number') ? scrollTarget : scrollTarget.offset().top + scrollPane.scrollTop() - parseInt(settings.offsetTop, 10);
		scrollPane.animate({scrollTop: scrollY}, parseInt(settings.duration, 10), settings.easing, function() {
			if (typeof callback === 'function') {
				callback.call(this);
			}
		});
	});
};

$(document).keydown(function(event) {
	//For Hotel
	if($('.res_hotel').is(':visible')){
		if(event.which == 40) { //down
				$('.res_hotel').find('.tab-content ul li').focus();
				Navigate(1);
				event.preventDefault();	
				return false;
		}
		if(event.which == 38) { //up
				$('.res_hotel').find('.tab-content ul li').focus();
				Navigate(-1);
				event.preventDefault();	
				return false;
		}	
		if(event.which == 13) { //enter
				var selected_elm = $('.res_hotel').find('.tab-content ul li.display_box_hover');	
				selected_elm.find('a').trigger('click');
				displayBoxIndex = -1;
				event.preventDefault();	
				return false;
		}
		return true;
	}
	
	//For Flight
	if($('.results-list').is(':visible')){
		if(event.which == 40) { // down
				$('.results-list').find('ul li').focus();
				Navigate(1);
				event.preventDefault();	
				return false;
		}
		if(event.which == 38) { // up
				$('.results-list').find('ul li').focus();
				Navigate(-1);
				event.preventDefault();	
				return false;
		}	
		if(event.which == 13) { // enter
				var selected_elm = $('.results-list').find('ul li.display_box_hover');	
				selected_elm.find('a').trigger('click');
				displayBoxIndex = -1;
				event.preventDefault();	
				return false;
		}
		return true;
	}
});


/* [[ result 100% start here ]]	  
$('body').on('click','.infoSec span.flaticon-arrowhead7',function(){
	$(this).toggleClass('active');
	var fullWidth = $('.infoSec');
	var asideFP = $(".filterSec");
	if (fullWidth.hasClass('open')){
		if($(window).width() > 1024){
			if ($('html').hasClass('arabic')) {
				asideFP.animate({"width":"20%", "padding-right":"10px"}, "slow").removeClass('hide');
				fullWidth.animate({ "width":"80%"}, "slow").removeClass('open');
			} else {
				asideFP.animate({"width":"20%", "padding-left":"10px"}, "slow").removeClass('hide');
				fullWidth.animate({ "width":"80%"}, "slow").removeClass('open');
			}
		} else {
			if ($('html').hasClass('arabic')) {
				asideFP.animate({"width":"23%", "padding-right":"10px"}, "slow").removeClass('hide');
				fullWidth.animate({ "width":"77%"}, "slow").removeClass('open');
			} else {
				asideFP.animate({"width":"23%", "padding-left":"10px"}, "slow").removeClass('hide');
				fullWidth.animate({ "width":"77%"}, "slow").removeClass('open');
			}
			
		}
	}
	else {
	if ($('html').hasClass('arabic')) {
		asideFP.animate({"width":"0", "padding-right":"0"}, "slow", function(){asideFP.addClass('hide')});
		fullWidth.animate({"width":"100%"}, "slow").addClass('open');
	} else {
		asideFP.animate({"width":"0", "padding-left":"0"}, "slow", function(){asideFP.addClass('hide')});
		fullWidth.animate({ "width":"100%"}, "slow").addClass('open');
	}
}
});*/


$('body').on('click','.infoSec span.flaticon-arrowhead7, .toggle-menu',function(){
		$('.filterSec').toggleClass('hider');
		$('.infoSec').toggleClass('extnd');
});


$(document).ready(function($) {

    /* Store the window width */
    var windowWidth = $(window).width();

    /* Resize Event */
    $(window).resize(function(){
        // Check window width has actually changed and it's not just iOS triggering a resize event on scroll
        if ($(window).width() != windowWidth) {

            // Update the window width for next time
            windowWidth = $(window).width();

            $('.filterSec').removeClass('active');
			$('.filterSec').removeClass('hider');
			$('.infoSec').removeClass('extnd');
			$('.toggle-menu').removeClass('active');
			$('.infoSec > .flaticon-arrowhead7').removeClass('active');
        }

    });

});

$('body').on('click','.toggle-menu',function(){
	$('.toggle-menu').toggleClass('active');
	if($(window).width() < 1023){
		$('.filterSec').toggleClass('active');
		$('body').css({"overflow":"hidden","height":"100%","position":"relative"});
	}
});
$('body').on('click','.fltSrchClose',function(){
	$('.filterSec').removeClass('active');
	$('button.toggle-menu').removeClass('active');
	$('body').css({"overflow":"","height":"","position":""});
});

$('body').on('click','#_FFSec',function(){
	$('.filterSec').addClass('fbf');
});

$('body').on('click','#_bestOffersSec',function(){
	$('.filterSec').removeClass('fbf');
});

$('body').on('click','.infoSec > .flaticon-arrowhead7',function(){
	$('.infoSec > .flaticon-arrowhead7').toggleClass('active');
});

/* [[ result 100% start here ]]*/	
$('body').on('click','.fPanel h4',function(){
    $(this).next().slideToggle("slow");
    $(this).toggleClass('open');
});
	

	initDatePickerComponent();
	initPredictiveSearchComponent();
	//initHotelRoomWidget();
	//initFPHRoomWidget();
	initLocalization();
	 /**
	 * Hotel Predictive Search 
	 */
	autoCompleteHotel('#countrycityhotel','','search-ul','hotelsearchKey');
	autoCompleteHotel('#countrycityhotelPOP','','searchPOP-ul','hotelsearchKeyPOP');
	
	autoCompleteHotel('#pickUpLocation','','searchTr-ul','pickUpSearchKey');
	autoCompleteHotel('#dropOffLocation','','searchTrDo-ul','dropOffSearchKey');
	autoCompleteHotel('#GTrHotel','','searchTr-ul','GTrHotlSearchKey');
	
	$('.nights-count').val('00');//default noofdays zero
	getCountryList();
	topNavActive();
	//$('#rThdateFHiddenFH').val('');
	//$('#rThdateTHiddenFH').val('');
	//$('#hdateFHiddenFH').val('');
	//$('#mchdateF2Hidden').val('');
	
	if($('#prePopulatePassengerDetails')  && $('#prePopulatePassengerDetails').val()){
		prePopulatePassengerDetails();
	}
/**
 * Home page flight widgets generation
 */
var totalCount = 0;
var totalCount2 = 0;
var totalCount3 = 0;
var totalCountPOP = 0;
function flightWidgetGen(){
	var option = [{label:i18n.t("adult_plural"),class:'elmAdult',dom:'select',value:[1,2,3,4,5,6,7,8,9],age:i18n.t("12+yrs")},{label:i18n.t("child_plural"),class:'elmChild',dom:'select',value:[0,1,2,3,4,5,6,7,8],age:i18n.t("2-12yrs")},{label:i18n.t("infant"),class:'elmInfant',dom:'select',value:[0,1,2,3,4,5,6,7,8,9],age:i18n.t("underInfantAge")}];
	flightHomeWidget(option,function(obj){
	    $('#travelRoundtrip').append(obj.html);
	    createSelObj();
	});
	var option2 = [{label:i18n.t("adult_plural"),class:'elmAdult2',dom:'select',value:[1,2,3,4,5,6,7,8,9],age:i18n.t("12+yrs")},{label:i18n.t("child_plural"),class:'elmChild2',dom:'select',value:[0,1,2,3,4,5,6,7,8],age:i18n.t("2-12yrs")},{label:i18n.t("infant"),class:'elmInfant2',dom:'select',value:[0,1,2,3,4,5,6,7,8,9],age:i18n.t("underInfantAge")}];
	flightHomeWidget2(option2,function(obj){
	    $('#travelOneway').append(obj.html);
	    createSelObj2();
	});
	var option3 = [{label:i18n.t("adult_plural"),class:'elmAdult3',dom:'select',value:[1,2,3,4,5,6,7,8,9],age:i18n.t("12+yrs")},{label:i18n.t("child_plural"),class:'elmChild3',dom:'select',value:[0,1,2,3,4,5,6,7,8],age:i18n.t("2-12yrs")},{label:i18n.t("infant"),class:'elmInfant3',dom:'select',value:[0,1,2,3,4,5,6,7,8,9],age:i18n.t("underInfantAge")}];
	flightHomeWidget3(option3,function(obj){
	    $('#travelMultiCity').append(obj.html);
	    createSelObj3();
	});
	var optionPOP = [{label:i18n.t("adult_plural"),class:'elmAdultPOP',dom:'select',value:[1,2,3,4,5,6,7,8,9],age:i18n.t("12+yrs")},{label:i18n.t("child_plural"),class:'elmChildPOP',dom:'select',value:[0,1,2,3,4,5,6,7,8],age:i18n.t("2-12yrs")},{label:i18n.t("infant"),class:'elmInfantPOP',dom:'select',value:[0,1,2,3,4,5,6,7,8,9],age:i18n.t("underInfantAge")}];
	flightHomeWidgetPOP(optionPOP,function(obj){
    $('#travelRoundtripPOP').append(obj.html);
    createSelObjPOP();
	});
	
	
	$('._apxSelection').on('change',function() {
		totalCount = 0;
		totalCount = parseInt($('.elmAdult').val())+parseInt($('.elmChild').val())+parseInt($('.elmInfant').val());
		var countAC = parseInt($('.elmAdult').val())+parseInt($('.elmChild').val());
		if(countAC>9){
			if($(this).hasClass('elmAdult')){
				$(this).val("1");
			}else{
				$(this).val("0");
			}
		   growl_alert(i18n.t('moreThan9Pax'));
		}
		if($('.elmInfant').val()>$('.elmAdult').val()){
			$('.elmInfant').val("0");
			growl_alert(i18n.t('moreThanAduInfR'));
		}
		totalCount = parseInt($('.elmAdult').val())+parseInt($('.elmChild').val())+parseInt($('.elmInfant').val());
		$('.elmAdult2, .elmAdult3').val($('.elmAdult').val());
		$('.elmChild2, .elmChild3').val($('.elmChild').val());
		$('.elmInfant2, .elmInfant3').val($('.elmInfant').val());
		if(totalCount==0 || totalCount==1){
			$('#_totStr, #_totStr2, #_totStr3').val(1 +' '+i18n.t('traveller')+' , '+$('#classType').find("option:selected" ).text());
		}else{
			$('#_totStr, #_totStr2, #_totStr3').val(totalCount+' ' + i18n.t('travellers')+' , '+$('#classType').find("option:selected" ).text());
		}
		createSelObj();
	});
	$('#classType').on("change",function(){
		totalCount = parseInt($('.elmAdult').val())+parseInt($('.elmChild').val())+parseInt($('.elmInfant').val());
		$('#classType2, #classType3').val($('#classType').val());
		if(totalCount==0 || totalCount==1){
			$('#_totStr, #_totStr2, #_totStr3').val(1+' '+i18n.t('traveller')+' , '+$(this).find("option:selected").text());
		}else{
			$('#_totStr, #_totStr2, #_totStr3').val(totalCount+' '+ i18n.t('travellers')+' , '+$(this).find("option:selected").text());
		}
		createSelObj();
	});
	
	//roundtrip
	$('._apxSelection2').on('change',function() {
		totalCount2 = 0;
		totalCount2 = parseInt($('.elmAdult2').val())+parseInt($('.elmChild2').val())+parseInt($('.elmInfant2').val());
		var countAC = parseInt($('.elmAdult2').val())+parseInt($('.elmChild2').val());
		if(countAC>9){
			if($(this).hasClass('elmAdult2')){
				$(this).val("1");
			}else{
				$(this).val("0");
			}
		   growl_alert(i18n.t('moreThan9Pax'));		
		}
		if($('.elmInfant2').val()>$('.elmAdult2').val()){
			$('.elmInfant2').val("0");
			growl_alert(i18n.t('moreThanAduInfR'));	
		}
		totalCount2 = parseInt($('.elmAdult2').val())+parseInt($('.elmChild2').val())+parseInt($('.elmInfant2').val());
		$('.elmAdult, .elmAdult3').val($('.elmAdult2').val());
		$('.elmChild, .elmChild3').val($('.elmChild2').val());
		$('.elmInfant, .elmInfant3').val($('.elmInfant2').val());
		if(totalCount2==0 || totalCount2==1){
			$('#_totStr, #_totStr2, #_totStr3').val(1+' '+i18n.t('traveller')+' , '+$('#classType2').find("option:selected" ).text());
		}else{
			$('#_totStr, #_totStr2, #_totStr3').val(totalCount2+' '+i18n.t('travellers')+' , '+$('#classType2').find("option:selected" ).text());
		}
		createSelObj2();
	});
	$('#classType2').on("change",function(){
		totalCount2 = parseInt($('.elmAdult2').val())+parseInt($('.elmChild2').val())+parseInt($('.elmInfant2').val());
		$('#classType, #classType3').val($('#classType2').val());
		if(totalCount2==0 || totalCount2==1){
			$('#_totStr, #_totStr2, #_totStr3').val(1+' '+i18n.t('traveller')+' , '+$(this).find("option:selected").text());
		}else{
			$('#_totStr, #_totStr2, #_totStr3').val(totalCount2+' '+i18n.t('travellers')+' , '+$(this).find("option:selected").text());
		}
		createSelObj2();
	});


	//roundtrip end @p //flight widget

	//multicity 
	$('._apxSelection3').on('change',function() {
		totalCount3 = 0;
		totalCount3 = parseInt($('.elmAdult3').val())+parseInt($('.elmChild3').val())+parseInt($('.elmInfant3').val());
		var countAC = parseInt($('.elmAdult3').val())+parseInt($('.elmChild3').val());
		if(countAC>9){
			if($(this).hasClass('elmAdult3')){
				$(this).val("1");
			}else{
				$(this).val("0");
			}
		   growl_alert(i18n.t('moreThan9Pax'));	
		}
		if($('.elmInfant3').val()>$('.elmAdult3').val()){
			$('.elmInfant3').val("0");
			growl_alert(i18n.t('moreThanAduInfR'));	
		}
		totalCount3 = parseInt($('.elmAdult3').val())+parseInt($('.elmChild3').val())+parseInt($('.elmInfant3').val());
		$('.elmAdult, .elmAdult2').val($('.elmAdult3').val());
		$('.elmChild, .elmChild2').val($('.elmChild3').val());
		$('.elmInfant, .elmInfant2').val($('.elmInfant3').val());
		if(totalCount3==0 || totalCount3==1){
			$('#_totStr, #_totStr2, #_totStr3').val(1+' '+i18n.t('traveller')+' , '+$('#classType3').find("option:selected" ).text());
		}else{
			$('#_totStr, #_totStr2, #_totStr3').val(totalCount3+' '+i18n.t('travellers')+' , '+$('#classType3').find("option:selected" ).text());
		}
		createSelObj3();
	});
	$('#classType3').on("change",function(){
		totalCount3 = parseInt($('.elmAdult3').val())+parseInt($('.elmChild3').val())+parseInt($('.elmInfant3').val());
		$('#classType2, #classType').val($('#classType3').val());
		if(totalCount3==0 || totalCount3==1){
			$('#_totStr, #_totStr2, #_totStr3').val(1+' '+i18n.t('traveller')+' , '+$(this).find("option:selected" ).text());
		}else{
			$('#_totStr, #_totStr2, #_totStr3').val(totalCount3+' '+i18n.t('travellers')+' , '+$(this).find("option:selected" ).text());
		}
		createSelObj3();
	});
	
	//pop
	$('._apxSelectionPOP').on('change',function() {
	totalCountPOP = 0;
    totalCountPOP = parseInt($('.elmAdultPOP').val())+parseInt($('.elmChildPOP').val())+parseInt($('.elmInfantPOP').val());
    var countAC = parseInt($('.elmAdultPOP').val())+parseInt($('.elmChildPOP').val());
    if(countAC>9){
        if($(this).hasClass('elmAdultPOP')){
    		$(this).val("1");
    	}else{
        	$(this).val("0");
        }
        growl_alert(i18n.t('moreThan9Pax'));
    }
    if($('.elmInfantPOP').val()>$('.elmAdultPOP').val()){
        $('.elmInfantPOP').val("0");
        growl_alert(i18n.t('moreThanAduInfR'));
    }
    totalCountPOP = parseInt($('.elmAdultPOP').val())+parseInt($('.elmChildPOP').val())+parseInt($('.elmInfantPOP').val());
	if(totalCountPOP==0 || totalCountPOP==1){
 		$('#_totStrPOP').val(1+' '+i18n.t('traveller')+' , '+$('#classTypePOP').find("option:selected" ).text());
    }else{
		$('#_totStrPOP').val(totalCountPOP+' '+i18n.t('travellers')+' , '+$('#classTypePOP').find("option:selected" ).text());
	}
    createSelObjPOP();
	});
	$('#classTypePOP').on("change",function(){
		totalCountPOP = parseInt($('.elmAdultPOP').val())+parseInt($('.elmChildPOP').val())+parseInt($('.elmInfantPOP').val());
		if(totalCountPOP==0 || totalCountPOP==1){
			$('#_totStrPOP').val(1+' '+i18n.t('traveller')+' , '+$(this).find("option:selected" ).text());
		}else{
			$('#_totStrPOP').val(totalCountPOP+' '+i18n.t('travellers')+' , '+$(this).find("option:selected" ).text());
		}
		createSelObjPOP();
	});
}

//roundtrip flight widget //flight widget
function flightHomeWidget(option,callback){
	$('#_totStr').val( '1 '+i18n.t("traveller")+', '+ i18n.t("economy"));
	$('#classType').val("Economy");
    if(typeof option!="undefined"){
        var data = {};
        data.html = "";
        var html = '';
        html +='<div class="travelDropdown">';
        for(var i in option){
           	html +='<div class="section"><fieldset>';
            html +='<label>';
            	html +=option[i].label;
            html +='</label>';
            
            html +='<div class="trvFld"><span class="custom-select-v3 sm"><select class="'+option[i].class+' _apxSelection">';
            	for(var l in option[i].value){
                    html +='<option value="'+option[i].value[l]+'">'+option[i].value[l];+'</option>';
                }
            html +='</select></span></div> <span class="ageRange">'+option[i].age+'</span>';
           	html +='</div>';
        }
		html +="</fieldset>";
        data.html = html;
        if(typeof callback==='function' && typeof callback!="undefined")
            return callback(data);
	}
}

//one way flight widget
function flightHomeWidget2(option2,callback){
	$('#_totStr2').val( '1 '+i18n.t("traveller")+', '+ i18n.t("economy"));
	$('#classType2').val("Economy");
    if(typeof option2!="undefined"){
        var data = {};
        data.html = "";
        var html = '';
        html +='<div class="travelDropdown">';
        for(var i in option2){
           	html +='<div class="section"><fieldset>';
            html +='<label>';
            	html +=option2[i].label;
            html +='</label>';
            
            html +='<div class="trvFld"><span class="custom-select-v3 sm"><select class="'+option2[i].class+' _apxSelection2">';
            	for(var l in option2[i].value){
                    html +='<option value="'+option2[i].value[l]+'">'+option2[i].value[l];+'</option>';
                }
            html +='</select></span></div> <span class="ageRange">'+option2[i].age+'</span>';
           	html +='</div>';
        }
	html +="</fieldset>";
        data.html = html;
        if(typeof callback==='function' && typeof callback!="undefined")
            return callback(data);
    }
}

//multi city flight widget
function flightHomeWidget3(option3,callback){
	$('#_totStr3').val( '1 '+i18n.t("traveller")+', '+ i18n.t("economy"));
	$('#classType3').val("Economy");
    if(typeof option3!="undefined"){
        var data = {};
        data.html = "";
        var html = '';
        html +='<div class="travelDropdown">';
        for(var i in option3){
           	html +='<div class="section"><fieldset>';
            html +='<label>';
            	html +=option3[i].label;
            html +='</label>';
            
            html +='<div class="trvFld"><span class="custom-select-v3 sm"><select class="'+option3[i].class+' _apxSelection3">';
            	for(var l in option3[i].value){
                    html +='<option value="'+option3[i].value[l]+'">'+option3[i].value[l];+'</option>';
                }
            html +='</select></span></div> <span class="ageRange">'+option3[i].age+'</span>';
           	html +='</div>';
        }
		html +="</fieldset>";
        data.html = html;
        if(typeof callback==='function' && typeof callback!="undefined")
            return callback(data);
    }
}
//pop 
function flightHomeWidgetPOP(optionPOP,callback){
	$('#_totStrPOP').val('1 '+i18n.t("traveller")+', '+ i18n.t("economy"));
	$('#classTypePOP').val("Economy");
    if(typeof optionPOP!="undefined"){
        var data = {};
        data.html = "";
        var html = '';
        html +='<div class="travelDropdownPOP">';
        for(var i in optionPOP){
           	html +='<div class="section"><fieldset>';
            html +='<label>';
            	html +=optionPOP[i].label;
            html +='</label>';
            
            html +='<div class="trvFld"><span class="custom-select-v3 sm"><select class="'+optionPOP[i].class+' _apxSelectionPOP">';
            	for(var l in optionPOP[i].value){
                    html +='<option value="'+optionPOP[i].value[l]+'">'+optionPOP[i].value[l];+'</option>';
                }
            html +='</select></span></div> <span class="ageRange">'+optionPOP[i].age+'</span>';
           	html +='</div>';
        }
		html +="</fieldset>";
        data.html = html;
        if(typeof callback==='function' && typeof callback!="undefined")
            return callback(data);
    }
}

//oneway

function  createSelObj(){
    var obj = {			
        class:$('#classType').find("option:selected" ).val(),
        noOfadults:$('.elmAdult').val(),
        noOfChildren:$('.elmChild').val(),
        noOfInfant:$('.elmInfant').val() 
    };
    $('#dataObject').val(JSON.stringify(obj));
}
function  createSelObj2(){
	var obj = {			
        class:$('#classType2').find("option:selected" ).val(),
        noOfadults:$('.elmAdult2').val(),
        noOfChildren:$('.elmChild2').val(),
        noOfInfant:$('.elmInfant2').val() 
    };
    $('#dataObject2').val(JSON.stringify(obj));
}
function  createSelObj3(){
	var obj = {			
        class:$('#classType3').find("option:selected" ).val(),
        noOfadults:$('.elmAdult3').val(),
        noOfChildren:$('.elmChild3').val(),
        noOfInfant:$('.elmInfant3').val() 
    };
    $('#dataObject3').val(JSON.stringify(obj));
}
function  createSelObjPOP(){
	var obj = {			
        class:$('#classTypePOP').find("option:selected" ).val(),
        noOfadults:$('.elmAdultPOP').val(),
        noOfChildren:$('.elmChildPOP').val(),
        noOfInfant:$('.elmInfantPOP').val() 
    };
    $('#dataObjectPOP').val(JSON.stringify(obj));
}
//multicity end @p //flight widget
//popFlightwidget();

//Newsletter Subscription Module
$newsletterModule.init();
//$('#searchDifferent').prop('checked',false);
	
	$(".currencyDropdown li").each(function(){
		if($(this).hasClass("active")){
			$("body").addClass($(this).find("a span").text().toLowerCase());
			return false;
		}
	});


	//Payment page tabpanel js
//tab panel starts
 

  if($('.opcPayment').is(':visible')){
		resTabPanel();
  }
  	
	
  $("body").on("click",".payBnkTrnsfr .bnkDet input",function(){
	  if(!$(this).closest("li").hasClass("active")){
		  $("#prfdBnkTabs li").removeClass("active");
		  $(this).closest("li").addClass("active");
		  $(this).closest("li").siblings().find(".accntDet").slideUp();
		  $(this).closest("li").find(".accntDet").slideDown();
	  }  
  });	
});

function resTabPanel(){
  	
   var tPanel=$(".resTabPanel"),tLink=$(".tarLink"),tData=$(".tarData"), tlHeight=0, tdHeight=0;
   
   tPanel.each(function(){
   var tis = $(this);
   $(this).children().each(function(){
	  tlHeight+=$(this).find(".tarLink").outerHeight();
   });
   if($(this).children("li.active").length==0){
    $(this).children().first().addClass("active");    
    if($('#HTDP').length>0){
    	$('#paymeBtn').attr('onclick','payMeHotel('+$(this).children("li.active").attr("data-gateway")+','+'this'+')');
	}else if($('#FTDP').length>0){
		$('#paymeBtn').attr('onclick','payMeFlight('+$(this).children("li.active").attr("data-gateway")+','+'this'+')');
	}else if($('#FPHTDP').length>0){
		$('#paymeBtn').attr('onclick','payMePackage('+$(this).children("li.active").attr("data-gateway")+','+'this'+')');
	}else if($('#CTDP').length>0){
		$('#paymeBtn').attr('onclick','payMeCar('+$(this).children("li.active").attr("data-gateway")+','+'this'+')');
	}else if($('#commonPayment').length>0){
		$('#paymeBtn').attr('onclick','payMeProduct('+$(this).children("li.active").attr("data-gateway")+','+'this'+')');
	}else if($('#TTDP').length>0){
    	$('#paymeBtn').attr('onclick','payMeTransfer('+$(this).children("li.active").attr("data-gateway")+','+'this'+')');
    }
   tdHeight=$(this).children().first().find(tData).outerHeight();
   }else{
    tdHeight=$(this).children("li.active").find(tData).outerHeight()
   }
   if(tlHeight < tdHeight){$(this).css({"height":tdHeight});}else{$(this).css({"height":tlHeight});}
	   $(this).children().find(tData).css({"min-height":tlHeight});
	 });
   tLink.on("click", function(){
	   var tlrHeight = 0,tdrHeight= 0;
	   tdrHeight = $(this).parent().find(tData).outerHeight();
	   $(this).parent().addClass("active").siblings().removeClass("active");
	    $(this).closest('.resTabPanel').children().each(function(){
		   tlrHeight+=$(this).find(".tarLink").outerHeight();
	   });	
		$(this).parent().find(tData).css({"min-height":tlrHeight});	
	   $(this).closest(tPanel).css({"height":tdrHeight > tlrHeight ? tdrHeight : tlrHeight});
	     
   });
  
  $('body').on('click', '.resTabPanel .tarData a, .resTabPanel .tarData .btn,.anothercard', function(){
	  var tis=$(this);
	  setTimeout(function(){
		tis.closest('.resTabPanel').css({'height':tis.closest(tData).outerHeight()});
	  },700)	  
	  
  });
  // $(".resTabPanel li:first-child").addClass('active');
   
  
  //Hide and Show the Offers
  $('body').on('click','.redeemPoints > h2',function(){	
  console.log('Offer clicked');
		$(this).parent().toggleClass('open'); 
		$('.resTabPanel.redeemList > li:first-child > a').trigger('click');
  });
paymentScolltop();
  }
  
  //scroll to top the payment panel
  
  function paymentScolltop(){
	  waitForElement('.allPaymentSec',function(){
     	$('html, body').animate({scrollTop:$('.allPaymentSec').offset().top}, 'slow');
	  });
  }
  
  // For BNPL qitaf tab alignment issues
  var rpannelToggle = 1; 
  $('body').on('click','.resTabPanel > li > a', function(){
	  var destBlock= $('.resTabPanel.redeemList'), tlrHeight = 0, tdrHeight = 0;
	   setTimeout(function(){	
 	   if((destBlock.is(':visible')) && (rpannelToggle == 1)){
		   
		   rpannelToggle = 0; 
		  destBlock.children().each(function(){tlrHeight += $(this).find(".tarLink").outerHeight(); });
          tdrHeight = destBlock.children("li.active").find('.tarData').outerHeight();
		  if(tdrHeight < tlrHeight){
			  destBlock.children(".active").find('.tarData').css({'min-height':tlrHeight});
			  destBlock.css({'height':tlrHeight});
		  }else{
			   destBlock.children(".active").find('.tarData').css({'min-height':tdrHeight});
			   destBlock.css({'height':tdrHeight});
		  }
	 } 
		  
	  },100);
 });

/**
 *@description Newsletter Subscription Module
 *@author Fahid Mohammad
 */
 var $newsletterModule = {
	 emailElm:null,
	 enableInput:function(args){
		 $(".subscribeInput").show();
		 args.hide();
		 $('.subscribeInput input.text').focus();
	 },
	 eventBinding:function(){
		 //set this
		 var $t = this;
		 //set click event
		 $(".subscribeLink").click(function(){
			 $t.enableInput($(this));
		 });
		 $("#newsletterSubscribeBtn").click(function(){
			 $this = $(this); $this.addClass('LoadBtn');
			 $t.save(function(err,res){
				 if(err){
					  growl_alert(err.message);
					  $('.alert_custom').removeClass('alert-success');
					  return $this.removeClass('LoadBtn'); 
				 }else if(res.status===200){
					growl_alert(i18n.t('success'));
					$('.alert_custom').addClass('alert-success');
					$(".subscribeInput").hide();
					$(".subscribeLink").show();
					$(".subscribeInput input").val('');
					return $this.removeClass('LoadBtn'); 
				 }else{
					growl_alert(res.message);
					return $this.removeClass('LoadBtn'); 
				 }
			 });
		 });
		 //set email element
		 $t.emailElm = $('#newslettersubemail') || null;
	 },
	 getEmail:function(){
		 if(this.validateEmail(this.emailElm.val()))
			 return this.emailElm.val();
	 },
	 save:function(cb){
		var email = this.getEmail();
		if(typeof email!='undefined'){
			$.post('/newsletter_subscribe',{email:email},function(res){
				return cb(null,res);
			});
		}else{
			return cb({message:i18n.t('errEmaiAdd')},null);
		}
	 },
	 validateEmail:function(email){
		var re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
		return re.test(email);
	 },
	 init:function(){ 
		 this.eventBinding();
	 }
 }







	
	

function topNavActive(){ 
	$('.topNavLinks > li').removeClass("active");
	if(!$('body').hasClass('resultPage')){
		var pathArray = window.location.pathname.split( '/' );
		if(pathArray[1]=='flights' || pathArray[2]=='flight' || pathArray[2]=='flights'){	
			$('.tnlFlight').addClass('active');
		}
		else if(pathArray[1]=='hotels' || pathArray[2]=='hotel' || pathArray[2]=='hotels'){	
			$('.tnlHotel').addClass('active');
		}else if(pathArray[1]=='packages' || pathArray[1]=='package' || pathArray[2]=='packages'){	
			$('.tnlFPH').addClass('active');
			$('#flightsRoundtripFH').trigger('click');
			$('#selectedFPHSO').val('flightsRoundtripFH');
		}else if(pathArray[1]=='cars' || pathArray[2]=='car' || pathArray[2]=='cars'){	
			$('.tnlCars').addClass('active');
		}else if(pathArray[1]==''){
			$('.tnlHome').addClass('active');
		} 
	}
}

function smartAutoCompleteFlight(inputData,selector,ulClassName,updateID){
	var $this = $(inputData);
	var $parent = $this.parent();	
	var $stringLength = 2;	
	var timer,xhr;
	var clickCheck = false;
	$this.on('keyup', function(event) {	
		if(arabicStringValidate($this.val())){
			$stringLength = 1;
		}
		var disKey = (event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 27 || event.keyCode == 37 || event.keyCode == 39 || event.keyCode == 13);
		//Check if the key if greather than the mentioned	
		if($.trim($this.val()).length>=$stringLength) {			
		}else{
			//Close the Predictive Panel	
			$this.parent().find('.forFlight').hide();
			$this.removeClass('focusin');
			//Clear the UL			
			$('ul.'+ulClassName).empty();
			//forFlight
		}
		//Navigate to the next dropdown
		if(!disKey){			
			clickCheck = false;
			//clear hidden input for the selected target
			$('#'+updateID).val('');	
			//Start the timer
			window.clearTimeout(timer);
			timer = window.setTimeout(function(){					
				
				if($.trim($this.val()).length>=2){
					if(xhr && xhr.readystate != 4){
						xhr.abort();
					}
					var predictiveArr = [];
					var q = $.trim($this.val());
					var regx='(\\()((?:[a-zA-Z]{3}))(\\))';
					var p = new RegExp(regx,["g"]);
					var m = p.exec(q);
					if(m!=null){q = m[2];}					
					//get the data from url
					xhr = $.get("/predictive/"+q,{q:q}).done(function(data){
						predictiveArr = [];
						//console.log(data);
						//check if the result is not empty		
						for(var i=0; i<data.length; i++){
							data[i].pkPredictiveSearchDataId = data[i].payload.airportCode;
							var c=data[i];
							var PTD='>>';
							predictiveArr.push('<li><a href="#" class="flaticon-shape autoRes" data-source-att="City'+PTD+ c.payload.airportCode +PTD +c.payload.airportName+PTD+c.payload.cityId+PTD+c.payload.cityName+PTD+c.payload.countryName+PTD+c.payload.countryCode+' " id="'+data[i].pkPredictiveSearchDataId+'" class="autoRes" data-iatacode="'+data[i].payload.airportCode+'">' +data[i].payload.cityName+ ', '  +data[i].payload.countryName+ ' <span class="grey">, '+'('+data[i].payload.airportCode+')'+ '- '  +data[i].payload.airportName+'</span></a></li>');
						}
						if(data!=""){							
							$('ul.'+ulClassName).empty();
							displayBoxIndex = -1;
							$('ul.'+ulClassName).append(predictiveArr.join(''));
							if($this.is(":focus")){
								$this.parent().find('.forFlight').show();	
								$this.addClass('focusin');	
							}
						}else{
							$('ul.'+ulClassName).empty();
							$('ul.'+ulClassName).prepend('<li><div class="noRecordFound">'+i18n.t('noMatchingResultsFound')+'</div></li>');

							if($this.is(":focus")){
								$this.parent().find('.forFlight').show();	
								$this.addClass('focusin');	
							}
						}
					});
				}
			},700);
		}
	});
	$this.on('blur',function(){
		//Commenting setTimeout function for cityId purpose. CityId getting null in the url.
		//setTimeout(function(){
			if(clickCheck==false){
				var uIDInput = $('#'+updateID);
				var q = $.trim($this.val());
				var dispStr = "";
				var language='en_GB';
				if(arabicStringValidate(q)){
					language='ar_SA';
				}			
				//regular expression for un-matched search string
				var regx='(\\()((?:[a-zA-Z]{3}))(\\))';
				var p = new RegExp(regx,["g"]);
				var m = p.exec(q);
				if(m!=null){q = m[2];}
				if(q.length>3 || arabicStringValidate(q)===true){
					$.get("/predictive/"+q,{q:q}).done(function(data){
						if(data.length>0){
							uIDInput.val(data[0].payload.airportCode);
							dispStr = data[0].payload.cityName+', '+data[0].payload.countryName+' , ('+data[0].payload.airportCode+ ') - '+data[0].payload.airportName;
							$this.val(dispStr);
							var PTD='>>';
							var hotelDetails = "City"+PTD+ data[0].payload.airportCode +PTD +data[0].payload.airportName+PTD+data[0].payload.cityId+PTD+data[0].payload.cityName+PTD+data[0].payload.countryName+PTD+data[0].payload.countryCode;
							updateFlightPredictiveWithElement($this,updateID,data[0].payload.airportCode,data[0].payload.airportCode,dispStr,hotelDetails);
						}
					});
				}else{
					if(q!=""){
						$.get("/predictive/"+q,{q:q}).done(function(data){
							if(data.length>0){
								var predCheck = false;
								for(var i=0; i<data.length; i++){
									if(data[i].payload.airportCode.toLowerCase()==q.toLowerCase()){
										predCheck = true;
										uIDInput.val(data[i].payload.airportCode);
										dispStr = data[i].payload.cityName+', '+data[i].payload.countryName+' , ('+data[i].payload.airportCode+ ') - '+data[i].payload.airportName;
										$this.val(dispStr);
										var PTD='>>';
										var hotelDetails = "City"+PTD+ data[i].payload.airportCode +PTD +data[i].payload.airportName+PTD+data[i].payload.cityId+PTD+data[i].payload.cityName+PTD+data[i].payload.countryName+PTD+data[i].payload.countryCode;
										updateFlightPredictiveWithElement($this,updateID,data[i].payload.airportCode,data[i].payload.airportCode,dispStr,hotelDetails);
										$('.'+ulClassName).triggerHandler('click');
										
									}
									if(predCheck){
										break;
									}
							    }				
							}/* else{								
								var elm = $('<div id="'+q+'" data-iatacode="'+q+'">'+q+'</div>');
								updateFlightPredictiveInp($this,elm,updateID);
								uIDInput.val(q);
							} */
						});
					
					}
				}
			}
		//},100);
	});
	
	//Prevent closing of predictive search on clicking itself
	$('.forFlight').on('click',function(e){
		e.preventDefault();
	});
	//Close the predictive search on clicking on the body
	$(document).on('click',function(e){
		$('.forFlight').hide();
	});
	$('input').on('focus',function(e){
		$('.forFlight').hide();
	});
	
	$('.'+ulClassName).on('mousedown','.autoRes',function(){
		updateFlightPredictiveInp($this,$(this),updateID,$(this).attr('data-source-att').split('>>')[3]);
		if(updateID=='toRoundIDFH'||updateID=='toIDFH'||updateID=='toRoundID'||updateID=='toID'||updateID=='multiToID1'){
		 var $thisAttrVal = $(this).attr('data-source-att');			 
		 $('input[name=flighthotelsearchKey]').val($thisAttrVal);
		}
		if(updateID=='roundFromIdFH'||updateID=='roundFromIdFHPOP'){
			 var $thisAttrVal = $(this).attr('data-source-att');			 
			 $('input[name=depFlightHotelSearchKey]').val($thisAttrVal);
		}
		if(updateID=='toRoundIDFHPOP'){
		var $thisAttrVal = $(this).attr('data-source-att');
		 $('input[name=flighthotelsearchKeyPOP]').val($thisAttrVal);
		}
		clickCheck = true;
		$('.forFlight').hide();
		return false;
	});
		$('.'+ulClassName).on('click','.autoRes',function(){
		updateFlightPredictiveInp($this,$(this),updateID,$(this).attr('data-source-att').split('>>')[3]);
		if(updateID=='toRoundIDFH'||updateID=='toIDFH'||updateID=='toRoundID'||updateID=='toID'||updateID=='multiToID1'){
		 var $thisAttrVal = $(this).attr('data-source-att');			 
		 $('input[name=flighthotelsearchKey]').val($thisAttrVal);
		}
		if(updateID=='roundFromIdFH'||updateID=='roundFromIdFHPOP'){
			 var $thisAttrVal = $(this).attr('data-source-att');			 
			 $('input[name=depFlightHotelSearchKey]').val($thisAttrVal);
		}
		if(updateID=='toRoundIDFHPOP'){
		var $thisAttrVal = $(this).attr('data-source-att');
		 $('input[name=flighthotelsearchKeyPOP]').val($thisAttrVal);
		}
		clickCheck = true;
		$('.forFlight').hide();
		return false;
	});
}
function initLocalization(){
	var name = "selectedLanguage=";
	var ca = document.cookie.split(';'); 
	var cval = "";
	var obj = {};

	for(var i=0; i<ca.length; i++) {
		var c = ca[i];
		while (c.charAt(0)==' ') c = c.substring(1);
		if (c.indexOf(name) == 0) cval = c.substring(name.length,c.length);
	}
	if(cval == ''){
		
	}
	selectedLang = cval;
}

function autoCompleteHotel(inputData,selector,ulClassName,updateID){
	
		var $this = $(inputData);
		var $previtem, $nextitem;	
		var $stringLength = 2;	
		var htimer = null;
		/**
		 * Predictive Search Delimiter
		 */
		var PTD='>>';
		$this.on('keyup',  function(event) {
			if(arabicStringValidate($this.val())){
				$stringLength = 1;
			}
			// to handle backspace and delete--clear the value
			if(event.keyCode == 8||event.keyCode == 46||(event.keyCode >=65 && event.keyCode<=90)){
				$('#hotelsearchKey, #hotelsearchKeyPOP').val("");				
			}
				
			var disKey = (event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 27 || event.keyCode == 37 || event.keyCode == 39 || event.keyCode == 13);
			if(!disKey){
				clearTimeout(htimer); 
				htimer = setTimeout(function(){
					event.preventDefault();		
					var d = '';
					if($this.val().length>$stringLength){
						$('ul.'+ulClassName).html('');
						$('ul.'+ulClassName+'.hotel').prev().hide();
						$('ul.'+ulClassName+'.city').prev().hide();
					var serviceURI1 = '';
					var serviceURI2 = '';
					var serviceURI3 = '';	
						if(inputData == "#pickUpLocation" || inputData == "#dropOffLocation" || inputData == "#GTrHotel"){
							serviceURI1 = '/pst/'; 
							serviceURI2 = $.trim($($this).attr('data-ccode'))+'/'+$.trim($this.val());
							serviceURI3 = {};
						}else{
							serviceURI1 = '/psh/'; 
							serviceURI2 = $.trim($this.val());
							serviceURI3 = {q:$.trim($this.val())};
						}
						
						$.get(serviceURI1+serviceURI2,serviceURI3).done(function(data){
							if((typeof data.cities!='undefined' && data.cities.length==0) && (typeof data.hotels!='undefined' && data.hotels.length==0) && (typeof data.airports!='undefined' && data.airports.length==0)){
								
								$('ul.'+ulClassName+'.city').prev().hide();
								$('ul.'+ulClassName+'.hotel').prev().hide();
								
								if(inputData == "#pickUpLocation" || inputData == "#dropOffLocation" || inputData == "#GTrHotel"){
									$('ul.'+ulClassName+'.airports').prev().hide();
									$('ul.'+ulClassName+'.hotel').prepend('<li><div class="noRecordFound" style="display:block">'+i18n.t('noMatchingResultsFound')+'</div></li>');
								}else{
									$('ul.'+ulClassName+'.city').prepend('<li><div class="noRecordFound" style="display:block">'+i18n.t('noMatchingResultsFound')+'</div></li>');
								}
							}
							else{
							//console.log(data);
							 var obj = data;
								var updateTimeout = -1, throttleTime = 800;	
								if (updateTimeout === -1){	
									updateTimeout = setTimeout(function(){	
										var hotel = [],airport = [],region = [],landmark = [],cityArr = [],district = [];;						
										//For Hotel
										for(var i=0; len = obj.hotels.length, i<len; ++i){
											var c = obj.hotels[i];
											hotel.push('<li><a data-source-att="Hotel'+PTD+ c.payload.uniqueId +PTD+c.productKey+PTD+c.crsName+PTD+c.payload.hotelName+PTD+c.payload.cityId+PTD+c.payload.cityName+PTD+c.payload.provinceName+PTD+c.payload.countryName+PTD+c.payload.countryCode+PTD+c.payload.latitude+PTD+c.payload.longitude+PTD+'"  id="'+ c.payload.uniqueId +'" class="autoRes flaticon-bed6" data-searchtype="HOTEL" data-searchid="'+c.payload.uniqueId+'" title="'+i18n.t("htl")+'"><span class="pull-right">'+i18n.t("htl")+'</span>' +c.payload.hotelName + ' <span class="grey">, '+ c.payload.cityName +', '+c.payload.countryName+'</span></a></li>');
										}
										if(hotel.length>0){
											$('ul.'+ulClassName+'.hotel').empty();
											$('ul.'+ulClassName+'.hotel').prepend(hotel.join(''));
											$('ul.'+ulClassName+'.hotel').prev().show();
											$('.noRecordFound').hide();
										}else{
											$('ul.'+ulClassName+'.hotel').prev().hide();
										}
										// Transfers Purpose Added condition
										if(inputData!=='#pickUpLocation' || inputData!=='#dropOffLocation' || inputData!=='#GTrHotel'){
											for(var i=0; len = obj.cities.length, i<len; ++i){
												var c = obj.cities[i];
												if(c.payload.cityName != null){
													cityArr.push('<li><a data-source-att="City'+PTD+ c.payload.cityId +PTD +c.payload.cityName+PTD+c.payload.provinceName+PTD+c.payload.countryName+PTD+c.payload.latitude+PTD+c.payload.longitude+PTD+c.payload.countryCode+PTD+c.payload.latitude+PTD+c.payload.longitude+'"  id="'+ c.cityId+'" class="autoRes flaticon-city5" data-searchtype="City" data-searchid="'+c.payload.cityId+'" title="'+i18n.t("city")+'"><span class="pull-right">'+i18n.t("city")+'</span>' + c.payload.cityName + ' <span class="grey">, '+c.payload.provinceName+', '+ c.payload.countryName +'</span></a></li>');
												}else{
													cityArr.push('<li><a data-source-att="City'+PTD+ c.payload.cityId +PTD +c.payload.cityName+PTD+c.payload.provinceName+PTD+c.payload.countryName+PTD+c.payload.latitude+PTD+c.payload.longitude+PTD+c.payload.countryCode+PTD+c.payload.latitude+PTD+c.payload.longitude+'"  id="'+ c.cityId+'" class="autoRes flaticon-city5" data-searchtype="City" data-searchid="'+c.payload.cityId+'" title="'+i18n.t("city")+'"><span class="pull-right">'+i18n.t("city")+'</span>' + c.payload.cityName + ' <span class="grey">, '+c.payload.provinceName+', '+ c.payload.countryName +'</span></a></li>');
												}
											}
											if(cityArr.length>0){
												$('ul.'+ulClassName+'.city').empty();
												$('ul.'+ulClassName+'.city').prepend(cityArr.join(''));
												$('ul.'+ulClassName+'.city').prev().show();
												$('.noRecordFound').hide();
											}else{
												$('ul.'+ulClassName+'.city').prev().hide();
											}
										}
										// Transfers Purpose Added condition
										if(inputData=='#pickUpLocation' || inputData=='#dropOffLocation'){
											//For Airport
											for(var i=0; len = obj.airports.length, i<len; ++i){
												var c = obj.airports[i];
												airport.push('<li><a data-source-att="Airport'+PTD+c.payload.airportId+PTD+c.payload.airportCode+PTD+c.payload.airportName+PTD+c.payload.cityId+PTD+c.payload.countryCode+PTD+c.payload.cityName+PTD+''+PTD+''+PTD+'" id="'+c.payload.cityId+'" class="autoRes " data-searchtype="Airport"><span>'+c.payload.cityName+', '+c.payload.countryName+', ('+c.payload.airportCode+') -'+c.payload.airportName+'</span></a></li>');
											}
											//console.log('airport',airport);
											if(airport.length>0){
												$('ul.'+ulClassName+'.airports').empty();
												$('ul.'+ulClassName+'.airports').prepend(airport.join(''));
												$('ul.'+ulClassName+'.airports').prev().show();
												$('.noRecordFound').hide();
											}else{
												$('ul.'+ulClassName+'.airports').prev().hide();
											}
										}
										
										var ar1 =   $.merge(cityArr,hotel,airport);						
										shuffle(ar1);
										if(ar1.length>0){
											displayBoxIndex = -1;
											$('ul.'+ulClassName+'.all').prepend(ar1.join(''));
										}
									},throttleTime);
								}
							}
						});
						if(inputData=='#countrycityhotel'){
							$('._predView').slideDown('fast',function(){$(this).css('overflow','')});
						}if(inputData=='#countrycityhotelPOP'){							
							$('._predViewPOP').slideDown('fast',function(){$(this).css('overflow','')});
						}if(inputData=='#pickUpLocation'){							
							$('._predViewTr').slideDown('fast',function(){$(this).css('overflow','')});
						}
						if(inputData=='#dropOffLocation'){							
							$('._predViewTrDo').slideDown('fast',function(){$(this).css('overflow','')});
						}
						if(inputData=='#GTrHotel'){							
							$('._predViewTrGTA').slideDown('fast',function(){$(this).css('overflow','')});
						}
					}
				}, 700);
			}
		});
		$("body").click(function(e) {
			if ($(e.target).closest('._predView').size() == 0) {
				$('._predView').slideUp('fast',function(){$(this).css('overflow','')});
			}
			if ($(e.target).closest('._predViewTr').size() == 0) {
				$('._predViewTr').slideUp('fast',function(){$(this).css('overflow','')});
			}
			if ($(e.target).closest('._predViewTrDo').size() == 0) {
				$('._predViewTrDo').slideUp('fast',function(){$(this).css('overflow','')});
			}
			if ($(e.target).closest('._predViewTrGTA').size() == 0) {
				$('._predViewTrGTA').slideUp('fast',function(){$(this).css('overflow','')});
			}
		});
		if(inputData=='#pickUpLocation' || inputData=='#dropOffLocation'|| inputData!=='#GTrHotel' ){
			$(inputData).on('blur',function(){
				if($('.'+ulClassName+' li')[0]){
					$('.'+ulClassName+' li').first().find('a').trigger('click');
				}
			});
		}
		//Update hidden value
		$('.'+ulClassName).on('click','.autoRes',function(){	
			var sType = $(this).attr('data-searchtype');
			var sId = $(this).attr('data-searchid');
			$('#'+updateID).val($(this).attr('id'));
			if(updateID=='hotelsearchKey'){
				$('input[name=hotelsearchKey]').val($(this).attr('data-source-att'));
			}if(updateID=='hotelsearchKeyPOP'){
				$('input[name=hotelsearchKeyPOP]').val($(this).attr('data-source-att'));
			}
			if(updateID=='pickUpSearchKey'){
				$('input[name=pickUpSearchKey]').val($(this).attr('data-source-att'));
			}
			if(updateID=='GTrHotlSearchKey'){
				$('input[name=GTrHotlSearchKey]').val($(this).attr('data-source-att'));
			}
			if(updateID=='dropOffSearchKey'){
				var keys = $(this).attr('data-source-att').split('>>');
				if(keys[0]=='Airport'){
					$('._dotForTransfer').show();
				}else{
					$('._dotForTransfer').hide();
				}
				$('input[name=dropOffSearchKey]').val($(this).attr('data-source-att'));
				 
			}
			$this.val($(this).text().replace($(this).attr('title'),''));
			$this.attr("title",$(this).text().replace($(this).attr('title'),''));
			$('._predView').slideUp(function(){$(this).css('overflow','')});
			$('._predViewPOP').slideUp(function(){$(this).css('overflow','')});
			$('._predViewTr').slideUp(function(){$(this).css('overflow','')});
			$('._predViewTrDo').slideUp(function(){$(this).css('overflow','')});
			$('._predViewTrGTA').slideUp(function(){$(this).css('overflow','')});
		});
	}

function initHotelRoomWidget(){
	/* on click of no of rooms */
$("body").on("change",".noOfRoomsSel._sub",function(){
		var roomPicker = $('.roomsWidget');
		var count = parseInt($(this).val());
		var totalRooms = calculateRooms();
		// adding rooms
		for(var i=totalRooms; i<count; i++){
			var clone = roomPicker.find('._htlroomcontainer:first').clone(true);
			clone.find('._roomCount').text(i+1);
			clone.find('.specifyChild').hide();
			roomPicker.find('._htlroomcontainer').last().after(clone);
		}
		//remove rooms
		var d = roomPicker.find('._htlroomcontainer');
		if(count<totalRooms){
			for(var i=count; i<totalRooms; i++){
				$(d[i]).remove();
			} 
		}
		calculatePax();
		//$(this).parents('.modifySearchDiv').find(' .modify-nav').show();
		//$(this).parents('.modifySearchDiv').find('.expand').addClass('active');
		$('.modify-nav li a').show().addClass('active');
		$('#changesearch-options').show();
		roomPicker.find('._htlroomcontainer').show(); 
});
//end
//calculatePax
function calculatePax(){
		var $adult = $('._htlroomcontainer .adult');
		var $child = $('._htlroomcontainer .child');
		var $childAge = $('._htlroomcontainer .specifyChild ');
		var aCount = [];
		var cCount = [];
		var caCount= [];
		var temp = [];
		var guestCnt=0;
		$adult.each(function(k,v){
			aCount.push(parseInt($(v).find('select').val()));
			guestCnt=guestCnt+parseInt($(v).find('select').val());
		});
		$child.each(function(k,v){
			cCount.push(parseInt($(v).find('select').val()));
			guestCnt=guestCnt+parseInt($(v).find('select').val());
		});
		$childAge.each(function(k,v){
			temp = [];
			var e = $(v).find('.custom-select-v3');
			e.each(function(key,val){
				if($(val).is(':visible')){					
					temp.push($(val).find('select').val());
				}else{
					temp.push(0);
				}
			});
			caCount.push(temp);
		});
		if(guestCnt > 9){
			growl_alert(i18n.t("errMorePax"));
		}
		$('#hotelRooms').val($adult.length);
		$('#hiddena').val(aCount.toString());
		$('#hiddenc').val(cCount.toString());
		$('#hiddenca').val(caCount.join('|'));
		
		$('#hotelRooms').attr('data-val',$adult.length);
		$('#hiddena').attr('data-val',aCount.toString());
		$('#hiddenc').attr('data-val',cCount.toString());
		$('#hiddenca').attr('data-val',caCount.join('|'));
		$('#hkeyTotalGHiddenAlter').val(guestCnt);
		$('#_rmWidStr').val(generateRoomWidgetString($('#hotelRooms').val(),$('#hkeyTotalGHiddenAlter').val()));
}
//calcuylatepax	end

$('body').on('change','._htlroomcontainer .adultSelected, ._htlroomcontainer .specifyChildrenAges select',function(){
	calculatePax();
});

/**
 * This code is for populating child ages 
 */
$('body').on('change','._htlroomcontainer .childSelected',function(){
	
	var target = $(this).parents('._htlroomcontainer');
	if($(this).val()==0){
		target.find('.specifyChild').hide();
	}
	else{
		calculateAgeElm(target,$(this).val());
		target.find('.specifyChild').show();
	}
	calculatePax();
	
});
//end
//calculateAgeElm 
function calculateAgeElm(elm,count){
	var target = elm.find('.specifyChild .custom-select-v3');		
	target.hide();
	for(var i=0; i<parseInt(count); i++){
		//$(target[i]).find('select option').eq(0).prop('selected', true)
		$(target[i]).show();
	}
}
//calculateAgeElm end

/**
 * This is for generate Room Widget String
 */
function generateRoomWidgetString(noRooms,noGuests){
	var roomStr="";
	 var guestStr="";
	 
	 
	 if(noRooms>1){
	  roomStr= noRooms+" "+ i18n.t("room_plural")
	 }
	 else{
	  roomStr= noRooms+" "+ i18n.t("room")
	 }
	 
	 if(noGuests>1){
	  guestStr= noGuests+" "+ i18n.t("guests")
	 }
	 else{
	  guestStr= noGuests+" "+ i18n.t("guest")
	 }
	 
	 var str=roomStr+', '+guestStr;	 
	return str;
}	
//end @p
$('body').on('change','#fdphoT,#fdphoF',function(){
	if($('#fdphoF').val()!="" && $('#fdphoT').val()!=""){
		var dateFirst = $('#fdphoF').val().split('/');
		var dateSecond = $('#fdphoT').val().split('/');
		var month1 = dateFirst[1]-1;
		var month2 = dateSecond[1]-1;
		var firstDate = new Date(dateFirst[2], month1, dateFirst[0]);
		var secondDate = new Date(dateSecond[2], month2, dateSecond[0]);
		var timeDiff = Math.abs(secondDate.getTime() - firstDate.getTime());
		var daysDiff = Math.ceil(timeDiff / (1000 * 3600 * 24));
		$('.nights-count').val(daysDiff);
	}
});
//to count no of days in hotel @p
//to hide the room widget when the date pciker's tab are open.
$('.fdphoF').on('focus',function(){ //checkin homepage.
	$('#changesearch-options').hide();
	$('.selectRoomsOptions').removeClass('active');
});
$('.fdphoT').on('focus',function(){ //checkout homepage.
	$('#changesearch-options').hide();
	$('.selectRoomsOptions').removeClass('active');
});
/**
 * This code is for populating rooms dynamically for popup
 */
$('body').on('change','.noOfRoomsSel._subPOP',function(){
	var roomPicker = $('.roomsWidgetPOP');
	var count = parseInt($(this).val());
	var totalRooms = calculateRoomsPOP();
    // adding rooms
	for(var i=totalRooms; i<count; i++){
		var clone = roomPicker.find('._htlroomcontainerPOP:first').clone(true);
		clone.find('._roomCount').text(i+1);
		clone.find('.specifyChild').hide();
		roomPicker.find('._htlroomcontainerPOP').last().after(clone);
	}
	//remove rooms
	var d = roomPicker.find('._htlroomcontainerPOP');
	if(count<totalRooms){
		for(var i=count; i<totalRooms; i++){
			$(d[i]).remove();
		} 
	}
	calculatePaxPOP();
	//$(this).parents('.modifySearchDiv').find(' .modify-nav').show();
	//$(this).parents('.modifySearchDiv').find('.expand').addClass('active');
	$('.modify-nav li a').show().addClass('active');
	$('#changesearch-optionsPOP').show();
	roomPicker.find('._htlroomcontainerPOP').show();

});	



//end
function calculateRoomsPOP(){
	var roomPicker = $('.roomsWidgetPOP').find('._htlroomcontainerPOP');
	return roomPicker.length;
}

/**
 * calculatePaxPOP() function updates the POPUP input hidden values.
 */
function calculatePaxPOP(){
	var $adult = $('._htlroomcontainerPOP .adult');
	var $child = $('._htlroomcontainerPOP .child');
	var $childAge = $('._htlroomcontainerPOP .specifyChild ');
	var aCount = [];
	var cCount = [];
	var caCount= [];
	var temp = [];
	var guestCnt=0;
	$adult.each(function(k,v){
		if($(v).find('select').val() != undefined){
			aCount.push(parseInt($(v).find('select').val()));
			guestCnt=guestCnt+parseInt($(v).find('select').val());
		}
	});
	$child.each(function(k,v){
		if($(v).find('select').val() != undefined){
			cCount.push(parseInt($(v).find('select').val()));
			guestCnt=guestCnt+parseInt($(v).find('select').val());
		}
	});
	$childAge.each(function(k,v){
		temp = [];
		var e = $(v).find('.custom-select-v3');
		e.each(function(key,val){
			if($(val).is(':visible')){					
				temp.push($(val).find('select').val());
			}else{
				temp.push(0);
			}
		});
		caCount.push(temp);
	});
	if(guestCnt > 9){
		growl_alert(i18n.t("errMorePax"));
	}
	$('#hotelRoomsPOP').val(aCount.length);
	$('#hiddenaPOP').val(aCount.toString());
	$('#hiddencPOP').val(cCount.toString());
	$('#hiddencaPOP').val(caCount.join('|'));
	$('#hkeyTotalGHiddenAlterPOP').val(guestCnt);
	
	$('#_rmWidStrPOP').val(generateRoomWidgetString($('#hotelRoomsPOP').val(),$('#hkeyTotalGHiddenAlterPOP').val()));
}

/**
 *  This is for updating the input hidden values on changing the adults and chind ages
 */
$('body').on('change','._htlroomcontainerPOP .adultSelected, ._htlroomcontainerPOP .specifyChildrenAges select',function(){
	calculatePaxPOP();
});

/**
 * This code is for populating child ages in POPUP 
 */
$('body').on('change','._htlroomcontainerPOP .childSelected',function(){
	var target = $(this).parents('._htlroomcontainerPOP');
	if($(this).val()==0){
		target.find('.specifyChild').hide();
		
	}
	else{
		calculateAgeElm(target,$(this).val());
		target.find('.specifyChild').show();
	
	}
	calculatePaxPOP();
});

//end @p
}

//default room widget
function defaultSettings(){
	var $nor = $('#hotelRooms, #_FH_hotelRooms, #_FHPOP_hotelRooms'), $noa = $('#hiddena, #_FH_hiddena, #_FHPOP_hiddena'), $noah = $('.home #hiddena, .lPage #hiddena'), $noc = $('#hiddenc, #_FH_hiddenc, #_FHPOP_hiddenc'), $noca = $('#hiddenca, #_FH_hiddenca, #_FHPOP_hiddenca'), $noia = $('#_FH_hiddeni');
	$noia.val(0);
	$nor.val(1); $noa.val(1); $noah.val(2);  $noc.val(0); $noca.val('0,0,0,0,0');// rooms=1; adult =2, child=0, childages=0
	var $norp = $('#hotelRoomsPOP'), $noap = $('#hiddenaPOP'), $nocp = $('#hiddencPOP'), $nocap = $('#hiddencaPOP');
	$norp.val(1); $noap.val(1); $nocp.val(0); $nocap.val('0,0,0,0,0');// rooms=1; adult =2, child=0, childages=0
	$('.noOfRoomsSel').find('option').eq(0).prop('selected', true);// 1 Room 2 Adult
	$('.noOfRoomsSel._sub').find('option').eq(0).prop('selected', true);// more options-- no of rooms =1
	$('.noOfRoomsSel._subPOP, .noOfRoomsSel._sub_FPHT2').find('option').eq(0).prop('selected', true);
	$('.adultSelected').val(1);
	$('.childSelected').val(0);
	$('#_FH_hkeyTotalGHiddenAlter, #_FHPOP_hkeyTotalGHiddenAlter').val(1);
	var roomStr="1 "+ i18n.t("room") +", 1 "+ i18n.t("guest") ;
		$('#_rmWidStr').val('1 '+i18n.t("room")+', 1 '+ i18n.t("guest"));		
		$('._FHTravInfo').val('1 '+i18n.t("room")+',1 '+ i18n.t("traveller"));
		$('.home #hotelSec-cont #_rmWidStr, .lPage #hotelSec-cont #_rmWidStr, .tis_search #hotelSec-cont #_rmWidStr').val('1 '+i18n.t("room")+', 2 '+ i18n.t("guest_plural"));
	
	$('.room-container .custom-select-v3').each(function(){
		$(this).find('select option').eq(0).prop('selected', true);		
	});
	$('.home #hotelSec-cont .adultSelected, .lPage #hotelSec-cont .adultSelected, .tis_search #hotelSec-cont .adultSelected').val(2);
	$(".noOfRoomsSel._subPOP").val(1);
}

//FPH Roomwidget functionality

function initFPHRoomWidget(){
	
	/**
	 * This code is for populating rooms dynamically in Flight Plus Hotel Home Page Two Way
	 */
	$('body').on('change','.noOfRoomsSel._sub_FPHT2',function(){
		var roomPicker = $('._FPHT2');
		var count = parseInt($(this).val());
		var totalRooms = calculateRoomsForFPHTwoWay();
		console.log(totalRooms);
	    // adding rooms
		for(var i=totalRooms; i<count; i++){
			var clone = roomPicker.find('._fthtlroomcontainer2:first').clone(true);
			clone.find('._roomCount_FPHT2').text(i+1);
			clone.find('.specifyChild').hide();
			roomPicker.find('._fthtlroomcontainer2').last().after(clone);
		}
		//remove rooms
		var d = roomPicker.find('._fthtlroomcontainer2');
		if(count<totalRooms){
			for(var i=count; i<totalRooms; i++){
				$(d[i]).remove();
			} 
		}
		calculateFPHPax();
		$(this).parents('.modifySearchDiv').find(' .modify-nav').show();
		$(this).parents('.modifySearchDiv').find('.expand').addClass('active');
		$('#changesearch-options').show();
		roomPicker.find('._fthtlroomcontainer2').show();

	});	
	
	/**
	 * This code is for populating rooms dynamically in Flight Plus Hotel Home Page POP up Two Way
	 */
	$('body').on('change','.noOfRoomsSel._sub_FPHT2POP',function(){		
		var roomPicker = $('._FPHT2POP');
		var count = parseInt($(this).val());
		var totalRooms = calculateRoomsForFPHTwoWayPOP();
	    // adding rooms
		for(var i=totalRooms; i<count; i++){
			var clone = roomPicker.find('._fthtlroomcontainer2POP:first').clone(true);
			clone.find('._roomCount_FPHT2POP').text(i+1);
			clone.find('.specifyChild').hide();
			roomPicker.find('._fthtlroomcontainer2POP').last().after(clone);
		}
		//remove rooms
		var d = roomPicker.find('._fthtlroomcontainer2POP');
		if(count<totalRooms){
			for(var i=count; i<totalRooms; i++){
				$(d[i]).remove();
			} 
		}
		calculateFPHPaxPOP();
		$(this).parents('.modifySearchDiv').find(' .modify-nav').show();
		$(this).parents('.modifySearchDiv').find('.expand').addClass('active');
		$('#changesearch-options').show();
		roomPicker.find('._fthtlroomcontainer2POP').show();

	});	
	
	
	
	
	
}


function calculateRoomsForFPHTwoWayPOP(){
	var roomPicker = $('._FPHT2POP'). find('._fthtlroomcontainer2POP');
	return roomPicker.length;
}

function calculateRoomsForFPHTwoWay(){
	var roomPicker = $('.fhWidget._FPHT2'). find('._fthtlroomcontainer2');
	return roomPicker.length;
}

/**
 * calculatePax() function updates the input hidden values.
 */
function calculateFPHPax(classType){
	var $adult = $('._fthtlroomcontainer2 .adult');
	var $child = $('._fthtlroomcontainer2 .child')
	var $childAge = $('._fthtlroomcontainer2 .specifyChild ');
	var $infant = $('._fthtlroomcontainer2 .infant')	
	var aCount = [];
	var cCount = [];
	var caCount= [];
	var iCount = [];
	var temp = [];
	var guestCnt=0;
	
	$adult.each(function(k,v){
		aCount.push(parseInt($(v).find('select').val()));
		guestCnt=guestCnt+parseInt($(v).find('select').val());
	});
	$child.each(function(k,v){
		cCount.push(parseInt($(v).find('select').val()));
		guestCnt=guestCnt+parseInt($(v).find('select').val());
	});
	$infant.each(function(k,v){
		iCount.push(parseInt($(v).find('select').val()));
		guestCnt=guestCnt+parseInt($(v).find('select').val());
	});
	$childAge.each(function(k,v){
		temp = [];
		var e = $(v).find('.custom-select-v3');
		e.each(function(key,val){
			if($(val).is(':visible')){
				temp.push($(val).find('select').val());
			}else{
				temp.push(0);
			}
		});
		caCount.push(temp);
	});
	$('#_FH_hotelRooms').val($adult.length);
	$('#_FH_hiddena').val(aCount.toString());
	$('#_FH_hiddenc').val(cCount.toString());
	$('#_FH_hiddenca').val(caCount.join('|'));
	$('#_FH_hiddeni').val(iCount.toString());
	$('#_FH_hkeyTotalGHiddenAlter').val(guestCnt);
	if(typeof classType!="undefined"){
		$('._FHTravInfo').val(generateFHRoomWidgetString($('#_FH_hotelRooms').val(),$('#_FH_hkeyTotalGHiddenAlter').val()));
	}else{
		$('._FHTravInfo').val(generateFHRoomWidgetString($('#_FH_hotelRooms').val(),$('#_FH_hkeyTotalGHiddenAlter').val()));
	}
	
}

/**
 * calculatePax() function for popup updates the input hidden values.
 */
function calculateFPHPaxPOP(classType){
	var $adult = $('._fthtlroomcontainer2POP .adult');
	var $child = $('._fthtlroomcontainer2POP .child')
	var $childAge = $('._fthtlroomcontainer2POP .specifyChild ');
	var $infant = $('._fthtlroomcontainer2POP .infant')
	var aCount = [];
	var cCount = [];
	var caCount= [];
	var iCount = [];
	var temp = [];
	var guestCnt=0;
	
	$adult.each(function(k,v){
		aCount.push(parseInt($(v).find('select').val()));
		guestCnt=guestCnt+parseInt($(v).find('select').val());
	});
	$child.each(function(k,v){
		cCount.push(parseInt($(v).find('select').val()));
		guestCnt=guestCnt+parseInt($(v).find('select').val());
	});
	$infant.each(function(k,v){
		iCount.push(parseInt($(v).find('select').val()));
		guestCnt=guestCnt+parseInt($(v).find('select').val());
	});
	$childAge.each(function(k,v){
		temp = [];
		var e = $(v).find('.custom-select-v3');
		e.each(function(key,val){
			if($(val).is(':visible')){					
				temp.push($(val).find('select').val());
			}else{
				temp.push(0);
			}
		});
		caCount.push(temp);
	});
	$('#_FHPOP_hotelRooms').val($adult.length);
	$('#_FHPOP_hiddena').val(aCount.toString());
	$('#_FHPOP_hiddenc').val(cCount.toString());
	$('#_FHPOP_hiddenca').val(caCount.join('|'));
	$('#_FHPOP_hiddeni').val(iCount.toString());
	$('#_FHPOP_hkeyTotalGHiddenAlter').val(guestCnt);	
	if(typeof classType!="undefined"){
		$('._FHTravInfoPOP').val(generateFHRoomWidgetString($('#_FHPOP_hotelRooms').val(),$('#_FHPOP_hkeyTotalGHiddenAlter').val()));
	}else{
		$('._FHTravInfoPOP').val(generateFHRoomWidgetString($('#_FHPOP_hotelRooms').val(),$('#_FHPOP_hkeyTotalGHiddenAlter').val()));
	}
	
}
/**
 * This is for generate Room Widget String
 */
function generateFHRoomWidgetString(noRooms,noGuests){
	var roomStr="";
	 var guestStr="";
	 if(noRooms>1){
	  roomStr= noRooms+' '+i18n.t('room_plural')
	 }
	 else{
	  roomStr= noRooms+' '+i18n.t('room')
	 }
	 
	 if(noGuests == 1){
	  guestStr= noGuests+' '+i18n.t('traveller')
	 }
	 else if(noGuests >= 2 && noGuests <= 10  ){
	  guestStr= noGuests+' '+i18n.t('2to10travellers')
	 }
	 else{
	 	guestStr= noGuests+' '+i18n.t('11plustravellers')
	 }
	 
	 var str=roomStr+', '+guestStr;
	return str;
}

/**
 *  This is for updating the input hidden values on changing the adults and chind ages
 */
$('body').on('change','._fthtlroomcontainer2 .adultSelected, ._fthtlroomcontainer2 .specifyChildrenAges select',function(){
	calculateFPHPax();
});

$('body').on('change','._fthtlroomcontainer2 .infantSelected',function(){
	calculateFPHPax();
});

$('body').on('change','._fthtlroomcontainer2POP .adultSelected, ._fthtlroomcontainer2POP .specifyChild select',function(){
	calculateFPHPaxPOP();
});

$('body').on('change','._fthtlroomcontainer2POP .infantSelected',function(){
	calculateFPHPaxPOP();
});
/**
 * This code is for populating child ages 
 */
$('body').on('change','._fthtlroomcontainer2POP .childSelected',function(){
	var target = $(this).parents('._fthtlroomcontainer2POP');
	if($(this).val()==0){
		target.find('.specifyChild').hide();
		
	}
	else{
		calculateAgeElm(target,$(this).val());
		target.find('.specifyChild').show();
	
	}


	calculateFPHPaxPOP();

});


/**
 * This code is for populating child ages 
 */
$('body').on('change','._fthtlroomcontainer2 .childSelected',function(){
	var target = $(this).parents('._fthtlroomcontainer2');
	if($(this).val()==0){
		target.find('.specifyChild').hide();
		
	}
	else{
		calculateAgeElm(target,$(this).val());
		target.find('.specifyChild').show();
	
	}
	calculateFPHPax();
});



function initPredictiveSearchComponent(){
	/**
	 * Flight Predictive search
	 */
	//OneWay Flight Search From
	smartAutoCompleteFlight('#onewayFrom','ul li','load_data_oneway','fromID');
	//OneWay Flight Search To
	smartAutoCompleteFlight('#onewayTo','ul li','load_data_oneway_to','toID');	
	//Round Trip From
	smartAutoCompleteFlight('#roundFrom','ul li','rtfsf1','roundFromId');
	//Round Trip To
	smartAutoCompleteFlight('#roundTo','ul li','rttst1','toRoundID');
	//Round Trip popup From
	smartAutoCompleteFlight('#roundFromPOP','ul li','rtfpopsf1','roundFromIdPOP');
	//Round Trip poup To
	smartAutoCompleteFlight('#roundToPOP','ul li','rttpopst1','toRoundIDPOP');	
	//Multi City From 1
	smartAutoCompleteFlight('#multicityFrom1','ul li','msff1','multiFromId1');
	//Multi City To 1
	smartAutoCompleteFlight('#multicityTo1','ul li','msft1','multiToID1');	
	
	//Multi City From 2
	smartAutoCompleteFlight('#multicityFrom2','ul li','msff2','multiFromId2');
	//Multi City To 2
	smartAutoCompleteFlight('#multicityTo2','ul li','msft2','multiToID2');
	
	//Multi City From 3
	smartAutoCompleteFlight('#multicityFrom3','ul li','msff3','multiFromId3');
	//Multi City To 3
	smartAutoCompleteFlight('#multicityTo3','ul li','msft3','multiToID3');
	
	//Multi City From 4
	smartAutoCompleteFlight('#multicityFrom4','ul li','msff4','multiFromId4');
	//Multi City To 4
	smartAutoCompleteFlight('#multicityTo4','ul li','msft4','multiToID4');
	
	//Multi City From 5
	smartAutoCompleteFlight('#multicityFrom5','ul li','msff5','multiFromId5');
	//Multi City To 5
	smartAutoCompleteFlight('#multicityTo5','ul li','msft5','multiToID5');
	
	//Multi City From 6
	smartAutoCompleteFlight('#multicityFrom6','ul li','msff6','multiFromId6');
	//Multi City To 6
	smartAutoCompleteFlight('#multicityTo6','ul li','msft6','multiToID6');
	
	
	//Round Trip From
	smartAutoCompleteFlight('#roundFromFPH','ul li','_fphrtfsf1','roundFromIdFH');
	//Round Trip To
	smartAutoCompleteFlight('#roundToFPH','ul li','_fphrttst1','toRoundIDFH');	
	//Round Trip From for flight + hotel landing page popup.
	smartAutoCompleteFlight('#roundFromFPHPOP','ul li','_fphrtpopfsf1','roundFromIdFHPOP');
	//Round Trip To for flight + hotel landing page popup.
	smartAutoCompleteFlight('#roundToFPHPOP','ul li','_fphrtpoptst1','toRoundIDFHPOP');	
	
}

function initDatePickerComponentaa(){
	
	var right = "right";
	var left = "left";
	var pos1 = right;
	var pos2 = left;
	if($('html').hasClass('ar')){
		pos1 = left;
		pos2 = right;		
	}
	var numberOfCalendar = 2;
	var dateformat = "DD/MM/YYYY";
	if(jsUpdateSize(1350)===false){
		/* pos1 = left;
		pos2 = left; */
		numberOfCalendar = 1;
	}
	var globalDate = new Date();
	/*Date-Picker Modify Search Page Hotel*/
	var mfdphoFSelector = $('._datepicker.mfdphoF');
	var mfdphoTSelector = $('._datepicker.mfdphoT');
	var mfdphoF = [mfdphoFSelector[0],((jsUpdateSize(769)===false)? pos2:pos1),false,false,true,new Date($('#hmdphoF').val() || new Date()),$('#hmdphoF')];
	var mfdphoT = [mfdphoTSelector[0],pos1,true,true,true,new Date($('#hmdphoT').val() || new Date()),$('#hmdphoT')];
	loadDatePicker(mfdphoF,mfdphoT,'',numberOfCalendar,dateformat,0,globalDate,true,false);
}



//default room widget end
function initDatePickerComponent(){
	getTotalTimeTaken('START');
		
		var right = "right";
		var left = "left";
		var pos1 = right;
		var pos2 = left;
		if($('html').hasClass('ar')){
			pos1 = left;
			pos2 = right;		
		}
		var numberOfCalendar = 2;
		var dateformat = "DD/MM/YYYY";
		if(jsUpdateSize(1350)===false){
			/* pos1 = left;
			pos2 = left; */
			numberOfCalendar = 1;
		}
		var globalDate = new Date();
		/*############################################## HOME-PAGE DATE-PICKER ####################################################*/
		var fCookie = Cookies.get('flightSearchCookie') || '';
		var checkHomeSearch = $('body.homePage');
		
		/*Date-Picker Home Page Flight Round-Trip*/
		var fromtwowaySelector = $('._datepicker.fromtwoway');
		var totwowaySelector = $('._datepicker.totwoway');
		var fromtwoway = [],totwoway =[];
		if(fCookie!="" && checkHomeSearch.length>0){
			var cookieData = JSON.parse(fCookie);
			var curDate = new Date();
			var depDate = new Date(cookieData.fromtwoway);
			if(depDate.setHours(0,0,0,0) < curDate.setHours(0,0,0,0)){
				fromtwoway = [fromtwowaySelector[0],pos2,false,false,false,new Date(),$('#rThdateFHidden'),true];
				totwoway = 	 [totwowaySelector[0],((jsUpdateSize(1350)===false)? pos1:pos2),true,true,false,"",$('#rThdateTHidden'),true];
			}
			else{
				fromtwoway = [fromtwowaySelector[0],pos2,false,false,false,new Date(cookieData.fromtwoway),$('#rThdateFHidden'),true];
				totwoway = 	 [totwowaySelector[0],((jsUpdateSize(1350)===false)? pos1:pos2),true,true,false,((typeof cookieData.totwoway!=='undefined')? new Date(cookieData.totwoway) : ""),$('#rThdateTHidden'),true];
			}
		}else{
			fromtwoway = [fromtwowaySelector[0],pos2,false,false,false,new Date(),$('#rThdateFHidden'),false];
			totwoway = 	 [totwowaySelector[0],((jsUpdateSize(1350)===false)? pos1:pos2),true,true,false,new Date(),$('#rThdateTHidden'),false];
		}
		
		loadDatePicker(fromtwoway,totwoway,'',numberOfCalendar,dateformat,0,globalDate);
		
		/*Date-Picker Home Page Flight Oneway*/
		var fromonewaySelector = $('._datepicker.fromoneway');
		var fromoneway = [];
		if(fCookie!="" && checkHomeSearch.length>0){
			var cookieData = JSON.parse(fCookie);
			fromoneway = [fromonewaySelector[0],pos2,false,false,false,new Date(cookieData.fromtwoway),$('#hdateFHidden'),true];
		}else{
			fromoneway = [fromonewaySelector[0],pos2,false,false,false,new Date(),$('#hdateFHidden'),false];
		}
		loadDatePicker(fromoneway,'','',numberOfCalendar,dateformat,0,globalDate);
		
		var trsfrDateSelector = $('._datepicker._trsfrDate');
		fromonewayTrsfr = [trsfrDateSelector[0],pos2,false,false,false,"",$('#_trsfrDateHidden'),true,"TrsfrDp"];
		loadDatePicker(fromonewayTrsfr,'','',1,dateformat,0,globalDate);
		
		/*Date-Picker Home Page Flight Multi-City*/
		var mchdateF1Selector = $('._datepicker.mchdateF1');
		var mchdateF2Selector = $('._datepicker.mchdateF2');
		var mchdateF3Selector = $('._datepicker.mchdateF3');
		var mchdateF4Selector = $('._datepicker.mchdateF4');
		var mchdateF5Selector = $('._datepicker.mchdateF5');
		var mchdateF6Selector = $('._datepicker.mchdateF6');
		var mchdateF1 = [],mchdateF2 = [],mchdateF3 = [],mchdateF4 = [],mchdateF5 = [],mchdateF6 = [];
		if(fCookie!="" && checkHomeSearch.length>0){
			var cookieData = JSON.parse(fCookie);
			var curDate = new Date();
			var depDate = new Date(cookieData.fromtwoway);
			if(depDate.setHours(0,0,0,0) < curDate.setHours(0,0,0,0)){
				mchdateF1 = [mchdateF1Selector[0],pos1,false,false,false,new Date(),$('#mchdateF1Hidden'),true];
				mchdateF2 = [mchdateF2Selector[0],pos1,true,true,false,"",$('#mchdateF2Hidden'),true];
				mchdateF3 = [mchdateF3Selector[0],pos1,true,true,false,"",$('#mchdateF3Hidden'),true];
				mchdateF4 = [mchdateF4Selector[0],pos1,true,true,false,"",$('#mchdateF4Hidden'),true];
				mchdateF5 = [mchdateF5Selector[0],pos1,true,true,false,"",$('#mchdateF5Hidden'),true];
				mchdateF6 = [mchdateF6Selector[0],pos1,true,true,false,"",$('#mchdateF6Hidden'),true];
			}else{
				mchdateF1 = [mchdateF1Selector[0],pos1,false,false,false,new Date(cookieData.fromtwoway),$('#mchdateF1Hidden'),true];
				mchdateF2 = [mchdateF2Selector[0],pos1,true,true,false,new Date(cookieData.fromtwoway2),$('#mchdateF2Hidden'),true];
				mchdateF3 = [mchdateF3Selector[0],pos1,true,true,false,new Date(cookieData.fromtwoway3),$('#mchdateF3Hidden'),true];
				mchdateF4 = [mchdateF4Selector[0],pos1,true,true,false,new Date(cookieData.fromtwoway4),$('#mchdateF4Hidden'),true];
				mchdateF5 = [mchdateF5Selector[0],pos1,true,true,false,new Date(cookieData.fromtwoway5),$('#mchdateF5Hidden'),true];
				mchdateF6 = [mchdateF6Selector[0],pos1,true,true,false,new Date(cookieData.fromtwoway6),$('#mchdateF6Hidden'),true];
			}
		}else{
			mchdateF1 = [mchdateF1Selector[0],pos1,false,false,false,new Date(),$('#mchdateF1Hidden'),false];
			mchdateF2 = [mchdateF2Selector[0],pos1,true,true,false,new Date(),$('#mchdateF2Hidden'),false];
			mchdateF3 = [mchdateF3Selector[0],pos1,true,true,false,new Date(),$('#mchdateF3Hidden'),false];
			mchdateF4 = [mchdateF4Selector[0],pos1,true,true,false,new Date(),$('#mchdateF4Hidden'),false];
			mchdateF5 = [mchdateF5Selector[0],pos1,true,true,false,new Date(),$('#mchdateF5Hidden'),false];
			mchdateF6 = [mchdateF6Selector[0],pos1,true,true,false,new Date(),$('#mchdateF6Hidden'),false];
		}
		loadDatePickerForMC(mchdateF1,mchdateF2,mchdateF3,mchdateF4,mchdateF5,mchdateF6,numberOfCalendar,dateformat,0,globalDate,false,false);
		
		
		/*Date-Picker Home Page popup Round-Trip*/
		var fromtwowaySelectorPOP = $('._datepicker.fromtwowayPOP');
		var totwowaySelectorPOP = $('._datepicker.totwowayPOP');
		var fromtwowayPOP = [fromtwowaySelectorPOP[0],pos2,false,false,false,new Date(),$('#rThdateFHiddenpop')];
		var totwowayPOP = 	 [totwowaySelectorPOP[0],((jsUpdateSize(769)===false)? pos1:pos1),true,true,false,new Date(),$('#rThdateTHiddenpop')];	
		loadDatePicker(fromtwowayPOP,totwowayPOP,'',numberOfCalendar,dateformat,0,globalDate);
		
		/*Date-Picker Flight Plus Hotel Home Page Round-Trip*/
		/*Flight Departing Date for Flight Plus Hotel Home Page Round-Trip*/
		var fphCookie = Cookies.get('fphNSearchCookie') || '';
		var fromtwowaySelectorFPH = $('._datepicker.fromtwowayFPH');
		var totwowaySelectorFPH = $('._datepicker.totwowayFPH');
		if(fphCookie!="" && checkHomeSearch.length>0){
			var cookieData = JSON.parse(fphCookie);
			var curDate = new Date();
			var depDate = new Date(cookieData.departureDate);
			if(depDate.setHours(0,0,0,0) < curDate.setHours(0,0,0,0)){
				var fromtwowayFPH = [fromtwowaySelectorFPH[0],pos2,false,false,true,new Date(),$('#rThdateFHiddenFH'),true];		
				var totwowayFPH = [totwowaySelectorFPH[0],((jsUpdateSize(769)===false)? pos1:pos2),true,false,false,"",$('#rThdateTHiddenFH'),true];
			}else{
				var fromtwowayFPH = [fromtwowaySelectorFPH[0],pos2,false,false,true,new Date(cookieData.departureDate),$('#rThdateFHiddenFH'),true];		
				var totwowayFPH = [totwowaySelectorFPH[0],((jsUpdateSize(769)===false)? pos1:pos2),true,false,false,new Date(cookieData.arrivalDate),$('#rThdateTHiddenFH'),true];
				
				/*Hotel stay check in check out*/
				var fromOneWayFPH = $('._datepicker.fromOneWayFPH');
				var fromOneWayFPH = $('._datepicker.toOneWayFPH');
				var fromOneWayFPH = [fromOneWayFPH[0],pos2,false,false,true,new Date(moment(cookieData.htlCheckIn,"DD-MM-YYYY").format('YYYY-MM-DD')),$('#fdphoFHiddenFH'),true];		
				var toOneWayFPH = [fromOneWayFPH[0],((jsUpdateSize(769)===false)? pos1:pos2),true,false,false,new Date(moment(cookieData.htlCheckOut,"DD-MM-YYYY").format('YYYY-MM-DD')),$('#fdphoTHiddenFH'),true];
			}
		}else{
			var fromtwowayFPH = [fromtwowaySelectorFPH[0],pos2,false,false,true,"",$('#rThdateFHiddenFH'),false];		
			var totwowayFPH = [totwowaySelectorFPH[0],((jsUpdateSize(769)===false)? pos1:pos2),true,false,false,"",$('#rThdateTHiddenFH'),false];
		}
				
		if($('body').hasClass('homePage')){			
			loadDatePicker(fromtwowayFPH,totwowayFPH,'',numberOfCalendar,dateformat,0,globalDate,true,false,[true,moment().format('DD-MM-YYYY'),moment().format('DD-MM-YYYY')]);
			
			/*Hotel stay check in check out*/
			//loadDatePicker(fromOneWayFPH,toOneWayFPH,'',numberOfCalendar,dateformat,0,globalDate,true,false,[true,moment().format('DD-MM-YYYY'),moment().format('DD-MM-YYYY')]);
			//fromtwowaySelectorFPH.val('');
			//totwowaySelectorFPH.val('');
		}
		/*if($('body').hasClass('fphResultPage')){			
			loadDatePicker(fromtwowayFPH,totwowayFPH,'',numberOfCalendar,dateformat,0,globalDate,true,false,[true,moment().format('DD-MM-YYYY'),moment().format('DD-MM-YYYY')]);
			fromtwowaySelectorFPH.val('');
			totwowaySelectorFPH.val('');
		}
		*/
		/*Date-Picker Flight Plus Hotel Home Page Oneway*/
		/*Flight Departing Date for Flight Plus Hotel Home Page Oneway*/
		var fromonewaySelectorFPH = $('._datepicker.fromonewayFPH');
		if(fphCookie!="" && checkHomeSearch.length>0){
			var cookieData = JSON.parse(fphCookie);
			var fromonewayFPH = [fromonewaySelectorFPH[0],pos2,false,false,true,new Date(cookieData.departureDate),$('#hdateFHiddenFH'),true];
		}else{
			var fromonewayFPH = [fromonewaySelectorFPH[0],pos2,false,false,true,new Date(),$('#hdateFHiddenFH'),false];
		}
		if($('body').hasClass('homePage')){
			loadDatePicker(fromonewayFPH,'','',numberOfCalendar,dateformat,0,globalDate,false,true,[true,moment().format('DD-MM-YYYY'),moment().format('DD-MM-YYYY')]);
			//fromonewaySelectorFPH.val('');
		}
		/*if($('body').hasClass('fphResultPage')){			
			loadDatePicker(fromonewayFPH,'','',numberOfCalendar,dateformat,0,globalDate,false,true,[true,moment().format('DD-MM-YYYY'),moment().format('DD-MM-YYYY')]);
			fromonewaySelectorFPH.val('');
		}*/
		/*Date-Picker for landing page Flight Plus Hotel Home Page Round-Trip*/
		/*Flight Departing Date for Flight Plus Hotel Home Page Round-Trip*/
		
		 var fromtwowaySelectorFPHPOP = $('._datepicker.fromtwowayFPHPOP');
		var totwowaySelectorFPHPOP = $('._datepicker.totwowayFPHPOP');
		
		var fromtwowayFPHPOPP = [fromtwowaySelectorFPHPOP[0],pos2,false,false,true,new Date(),$('#rThdateFHiddenFHPOP')];
		
		var totwowayFPHPOPP = [totwowaySelectorFPHPOP[0],((jsUpdateSize(769)===false)? pos1:pos1),true,false,false,new Date(),$('#rThdateTHiddenFHPOP')];
		
		 if($('body').hasClass('homePage')){
			 loadDatePicker(fromtwowayFPHPOPP,totwowayFPHPOPP,'',numberOfCalendar,dateformat,0,globalDate,true,false,[true,moment().format('DD-MM-YYYY'),moment().format('DD-MM-YYYY')]);
			 fromtwowaySelectorFPHPOP.val('');
			 totwowaySelectorFPHPOP.val('');
		}
		 /*Date-Picker Flight Plus Hotel Home Page OnewayPOPUP*/
			/*Flight Departing Date for Flight Plus Hotel Home Page OnewayPOPUP*/
			var fromonewaySelectorFPHPOP = $('._datepicker.fromonewayFPHPOP');
			var fromonewayFPHPOP = [fromonewaySelectorFPHPOP[0],pos2,false,false,true,new Date(),$('#hdateFHiddenFHPOP')];
			if($('body').hasClass('homePage')){
				loadDatePicker(fromonewayFPHPOP,'','',numberOfCalendar,dateformat,0,globalDate,false,true,[true,moment().format('DD-MM-YYYY'),moment().format('DD-MM-YYYY')]);
				fromonewaySelectorFPHPOP.val('');
			}
		/*Date-Picker Modify Search Page Round-Trip*/
		var mfromtwowaySelector = $('._datepicker.mmfromtwoway');
		var mtotwowaySelector = $('._datepicker.mmtotwoway');
		var mfromtwoway = [mfromtwowaySelector[0],((jsUpdateSize(1350)===false)? pos2:pos1),false,false,true,new Date($('#rThdateFM').val() || new Date()),$('#rThdateFM')];
		var mtotwoway =   [mtotwowaySelector[0],pos1,true,true,true,new Date($('#rThdateTM').val() || new Date()),$('#rThdateTM')];
		loadDatePicker(mfromtwoway,mtotwoway,'',numberOfCalendar,dateformat,0,globalDate,true);
		
		/*Date-Picker Modify Search Page Oneway*/	
		var mfromonewaySelector = $('._datepicker.mmfromoneway');
		var mfromoneway = [mfromonewaySelector[0],pos2,false,false,true,new Date($('#owdphoF').val() || new Date()),$('#owdphoF')];
		loadDatePicker(mfromoneway,'','',numberOfCalendar,dateformat,0,globalDate,true);
		
		/*Date-Picker Modify Search Page Multi-City*/
		var mmchdateF1Selector = $('._datepicker.mmchdateF1');
		var mmchdateF2Selector = $('._datepicker.mmchdateF2');
		var mmchdateF3Selector = $('._datepicker.mmchdateF3');
		var mmchdateF4Selector = $('._datepicker.mmchdateF4');
		var mmchdateF5Selector = $('._datepicker.mmchdateF5');
		var mmchdateF6Selector = $('._datepicker.mmchdateF6');
		var mmchdateF1 = [mmchdateF1Selector[0],pos1,false,false,true,new Date($('#mchdateF1').val() || new Date()),$('#mchdateF1')];
		var mmchdateF2 = [mmchdateF2Selector[0],pos1,true,true,true,new Date($('#mchdateF2').val() || new Date()),$('#mchdateF2')];
		var mmchdateF3 = [mmchdateF3Selector[0],pos1,true,true,true,new Date($('#mchdateF3').val() || new Date()),$('#mchdateF3')];
		var mmchdateF4 = [mmchdateF4Selector[0],pos1,true,true,true,new Date($('#mchdateF4').val() || new Date()),$('#mchdateF4')];
		var mmchdateF5 = [mmchdateF5Selector[0],pos1,true,true,true,new Date($('#mchdateF5').val() || new Date()),$('#mchdateF5')];
		var mmchdateF6 = [mmchdateF6Selector[0],pos1,true,true,true,new Date($('#mchdateF6').val() || new Date()),$('#mchdateF6')];
		loadDatePickerForMC(mmchdateF1,mmchdateF2,mmchdateF3,mmchdateF4,mmchdateF5,mmchdateF6,numberOfCalendar,dateformat,0,globalDate,true,true);
		
		/*Date-Picker Home Page Hotel*/
		var hCookie = Cookies.get('HOTEL_SEARCH_COOKIE') || '';
		var fdphoFSelector = $('._datepicker.fdphoF');
		var fdphoTSelector = $('._datepicker.fdphoT');
		if(hCookie!="" && checkHomeSearch.length>0){
			var cookieData = JSON.parse(hCookie);
			var curDate = new Date();
			var depDate = new Date(cookieData.checkIn);
			if(depDate.setHours(0,0,0,0) < curDate.setHours(0,0,0,0)){
				var fdphoF = [fdphoFSelector[0],pos2,false,false,false,new Date(),$('#fdphoFHidden'),true];
				var fdphoT = [fdphoTSelector[0],((jsUpdateSize(769)===false)? pos1:pos2),true,true,false,"",$('#fdphoTHidden'),true];
			}else{
				var fdphoF = [fdphoFSelector[0],pos2,false,false,false,new Date(cookieData.checkIn),$('#fdphoFHidden'),true];
				var fdphoT = [fdphoTSelector[0],((jsUpdateSize(769)===false)? pos1:pos2),true,true,false,new Date(cookieData.checkOut),$('#fdphoTHidden'),true];
			}
		}else{
			var fdphoF = [fdphoFSelector[0],pos2,false,false,false,new Date(),$('#fdphoFHidden'),false];
			var fdphoT = [fdphoTSelector[0],((jsUpdateSize(769)===false)? pos1:pos2),true,true,false,new Date(),$('#fdphoTHidden'),false];
		}
		loadDatePicker(fdphoF,fdphoT,'',numberOfCalendar,dateformat,0,globalDate,false,false);
		
		/*Date-Picker Check Avaiablity Page Hotel*/
		var mfdphoFSelector = $('._datepicker.cafdphoF');
		var mfdphoTSelector = $('._datepicker.cafdphoT');
		var checkInDt=new Date(new Date().getTime()+(1*24*60*60*1000));
		var mfdphoF = [mfdphoFSelector[0],pos2,false,false,true,new Date($('#fdphoFa').val() || checkInDt),$('#hcaFHidden1,#fdphoFa')];
		var checkoutDt = new Date(new Date().getTime()+(3*24*60*60*1000));
		var mfdphoT = [mfdphoTSelector[0],((jsUpdateSize(769)===false)? pos1:pos2),true,true,true,new Date($('#fdphoTa').val() ||checkoutDt),$('#hcaTHidden1,#fdphoTa')];
		loadDatePicker(mfdphoF,mfdphoT,'',numberOfCalendar,dateformat,0,globalDate,true,false);
		
		/*Date-Picker landing Page Hotel*/
		var fdphoFSelectorPOP = $('._datepicker.fdphoFPOP');
		var fdphoTSelectorPOP = $('._datepicker.fdphoTPOP');
		var fdphoFPOP = [fdphoFSelectorPOP[0],pos2,false,false,false,new Date(),$('#fdphoFHiddenPOP')];
		var fdphoTPOP = [fdphoTSelectorPOP[0],((jsUpdateSize(769)===false)? pos1:pos1),true,true,false,new Date(),$('#fdphoTHiddenPOP')];
		loadDatePicker(fdphoFPOP,fdphoTPOP,'',numberOfCalendar,dateformat,0,globalDate,false,false);
		
		
		/*Date-Picker BBC*/
		var hBBCheckIn = $('._datepicker.hBbcChIn');
		var hBbcCheckOut = $('._datepicker.hBbcChOut');
		var hBbcChIn = [hBBCheckIn[0],pos2,false,false,false,new Date(),$('#hBbcChInHidden')];
		var hBbcChOut = [hBbcCheckOut[0],((jsUpdateSize(769)===false)? pos1:pos1),true,true,false,new Date(),$('#hBbcChOutHidden')];
		loadDatePicker(hBbcChIn,hBbcChOut,'',numberOfCalendar,dateformat,0,globalDate,false,false);
		
		//Add Placeholder for all Datepicker input by identifying css class name _datepicker
		//$('._datepicker').attr('placeholder','Pick a date');
		$('body').on('keyup, keydown','._datepicker, .readonly',function(e){	
			if(e.keyCode!==9){
				e.preventDefault();
			}
		});
		getTotalTimeTaken('END','Date-Picker rendering:');
}

function updateFlightPredictiveWithElement(currentElm,updateID,idStr,iataStr,valStr,hotelDetails){		
	var elm = $('<div id="'+idStr+'" data-iatacode="'+iataStr+'">'+valStr+'</div>');
	if(updateID=='toRoundIDFH'||updateID=='toIDFH'){
		$('input[name=flighthotelsearchKey]').val(hotelDetails);
	}
	if(updateID=='toRoundIDFHPOP'){		
		 $('input[name=flighthotelsearchKeyPOP]').val(hotelDetails);
		}
	if(updateID=='roundFromIdFH'||updateID=='roundFromIdFHPOP'){
		$('input[name=depFlightHotelSearchKey]').val(hotelDetails);
	}
	updateFlightPredictiveInp(currentElm,elm,updateID,hotelDetails.split('>>')[3]);
}

function updateFlightPredictiveInp(current,global,updateID,cityId){
		var oneWayFrom = $('#onewayFrom'), oneWayFromHidden = 'fromID';
		var oneWayTo = $('#onewayTo'), oneWayToHidden = 'toID';
		
		var roundTripFrom = $('#roundFrom'), roundTripFromHidden = 'roundFromId';
		var roundTripTo = $('#roundTo'), roundTripToHidden = 'toRoundID';
		
		var multiCityFrom = $('#multicityFrom1'), multiCityFromHidden = 'multiFromId1';
		var multiCitTo = $('#multicityTo1'), multiCitToHidden = 'multiToID1';
		
		var oneWayFromFPH = $('#onewayFromFPH'), oneWayFromHiddenFPH = 'fromIDFH';
		var oneWayToFPH = $('#onewayToFPH'), oneWayToHiddenFPH = 'toIDFH';
		
		var roundTripFromFPH = $('#roundFromFPH'), roundTripFromHiddenFPH = 'roundFromIdFH';
		var roundTripToFPH = $('#roundToFPH'), roundTripToHiddenFPH = 'toRoundIDFH';
		
		var idName = current.attr('id');
		switch(idName){
			case oneWayFrom.attr('id'):
			case roundTripFrom.attr('id'):
			case multiCityFrom.attr('id'):
			case roundTripFromFPH.attr('id'):
			case oneWayFromFPH.attr('id'):

				oneWayFrom.val(global.text());
				roundTripFrom.val(global.text());
				multiCityFrom.val(global.text());
				oneWayFromFPH.val(global.text());
				roundTripFromFPH.val(global.text());
				oneWayFrom.attr("title",global.text());
				roundTripFrom.attr("title",global.text());
				multiCityFrom.attr("title",global.text());
				oneWayFromFPH.attr("title",global.text());
				roundTripFromFPH.attr("title",global.text());

				oneWayFrom.attr('data-iata',global.attr('data-iatacode'));
				roundTripFrom.attr('data-iata',global.attr('data-iatacode'));
				multiCityFrom.attr('data-iata',global.attr('data-iatacode'));
				oneWayFromFPH.attr('data-iata',global.attr('data-iatacode'));
				roundTripFromFPH.attr('data-iata',global.attr('data-iatacode'));
				
				$('#'+oneWayFromHidden).val(global.attr('id'));
				$('#'+roundTripFromHidden).val(global.attr('id'));
				$('#'+multiCityFromHidden).val(global.attr('id'));
				$('#'+oneWayFromHiddenFPH).val(global.attr('id'));
				$('#'+roundTripFromHiddenFPH).val(global.attr('id'));
			break;				
			case oneWayTo.attr('id'):
			case roundTripTo.attr('id'):
			case multiCitTo.attr('id'):
			case roundTripToFPH.attr('id'):
			case oneWayToFPH.attr('id'):

				oneWayTo.val(global.text());
				roundTripTo.val(global.text());
				multiCitTo.val(global.text());
				oneWayToFPH.val(global.text());
				roundTripToFPH.val(global.text());
				oneWayTo.attr("title",global.text());
				roundTripTo.attr("title",global.text());
				multiCitTo.attr("title",global.text());
				oneWayToFPH.attr("title",global.text());
				roundTripToFPH.attr("title",global.text());
 
				oneWayTo.attr('data-iata',global.attr('data-iatacode'));
				roundTripTo.attr('data-iata',global.attr('data-iatacode'));
				multiCitTo.attr('data-iata',global.attr('data-iatacode'));
				oneWayToFPH.attr('data-iata',global.attr('data-iatacode'));
				roundTripToFPH.attr('data-iata',global.attr('data-iatacode'));
				oneWayTo.attr('data-cityid',cityId);
				roundTripTo.attr('data-cityid',cityId);
				multiCitTo.attr('data-cityid',cityId);
				
				$('#'+oneWayToHidden).val(global.attr('id'));
				$('#'+roundTripToHidden).val(global.attr('id'));
				$('#'+multiCitToHidden).val(global.attr('id'));
				$('#'+oneWayToHiddenFPH).val(global.attr('id'));
				$('#'+roundTripToHiddenFPH).val(global.attr('id')); 
			break;
		}
		current.val(global.text());
		current.attr('data-iata',global.attr('data-iatacode'));
		current.attr('value',global.text())
		current.attr('title',global.text())
		$('#'+updateID).val(global.attr('id'));
		$('#'+updateID).attr('value',global.attr('id'));
		//current.parent().find('.results-list').hide();
		current.removeClass('focusin');
	}
/*Shuffle an array recursivly*/
function shuffle(array) {
  var currentIndex = array.length
    , temporaryValue
    , randomIndex
    ;

  // While there remain elements to shuffle...
  while (0 !== currentIndex) {

    // Pick a remaining element...
    randomIndex = Math.floor(Math.random() * currentIndex);
    currentIndex -= 1;

    // And swap it with the current element.
    temporaryValue = array[currentIndex];
    array[currentIndex] = array[randomIndex];
    array[randomIndex] = temporaryValue;
  }

  return array;
}
/*
 * Test Arabic Language
 */
function arabicStringValidate(string){
	var validateArabic = /[\u0600-\u06FF]/;
	return validateArabic.test(string);
}
 



$('body').on('change', '._mapxSelection', function(e) {
	var mtotCount = 0;
	var $t = $(this).parents('.custom-traveller');
	var adult = $t.find('.elmAdult');
	var child = $t.find('.elmChild');
	var infant = $t.find('.elmInfant');
	mtotCount = parseInt(adult.val())+parseInt(child.val())+parseInt(infant.val());
	var countAC = parseInt(adult.val())+parseInt(child.val());
	if(countAC>9){
        if(adult){
        	adult.val("1");
    	}else{
    		adult.val("0");
        }
       growl_alert(i18n.t('moreThan9Pax'));	
    }
   if(infant.val()>adult.val()){
	   infant.val("0");
    	growl_alert(i18n.t('moreThanAduInfR'));	
    }
   mtotCount = parseInt(adult.val())+parseInt(child.val())+parseInt(infant.val());
   	if(mtotCount==0 || mtotCount==1){
		$t.find('#_totStr').val(1+' ' + i18n.t('traveller')+' , '+$t.find('#classType').find("option:selected" ).text());
    }else{
    	$t.find('#_totStr').val(mtotCount+' ' + i18n.t('travellers')+' , '+$t.find('#classType').find("option:selected" ).text());
	}
});
$('body').on('change', '._apxClsSel', function(e) {
	var mtotCount = 0;
	var $t = $(this).parents('.custom-traveller');
	var $t = $(this).parents('.custom-traveller');
	var adult = $t.find('.elmAdult');
	var child = $t.find('.elmChild');
	var infant = $t.find('.elmInfant');
	mtotCount = parseInt(adult.val())+parseInt(child.val())+parseInt(infant.val());
    if(mtotCount==0 || mtotCount==1){
    	$t.find('#_totStr').val(1+' ' + i18n.t('traveller')+' , '+$t.find('#classType').find("option:selected" ).text());
    }else{
    	$t.find('#_totStr').val(mtotCount+' ' + i18n.t('travellers')+' , '+$t.find('#classType').find("option:selected" ).text());
    }
});



//plugin popup travellersDropdown 

$(".travellersDropdownPOP").click(function(e){
e.preventDefault();
var target = $(this).parent(".popupLand");
$(".travelerSelectWindowPOP").slideToggle();
$(".travellersDropdownPOP").toggleClass('arrow');
$(".travelerSelectWindowPOP").toggleClass('active');

});

$(".closeLinkPop").click(function(){
var target = $(this).parent(".popupLand");	
$(".travelerSelectWindowPOP").slideToggle()
$(".travelerSelectWindowPOP").removeClass('active');
$(".travellersDropdownPOP").toggleClass('arrow');
});

$('.popupLand, body').click( function(){		
$(".travelerSelectWindowPOP").removeClass('active');
$(".travelerSelectWindowPOP").hide()
$(".travellersDropdownPOP").removeClass('arrow');

});
 
$('.travelerSelectWindowPOP, .travellersDropdownPOP').click(function(e){
e.stopPropagation();
});



//for 6 leg implementation
$('._addAnotherFlight').on('click',function(){
	var mcDetailsRowId = parseInt($(this).attr('data-grip'));
	var mcCloseRowId = mcDetailsRowId;
	$('.multic'+mcDetailsRowId).show();
	if(mcDetailsRowId<=6){
		if(mcCloseRowId>4){
			$('._mcClose'+parseInt(mcCloseRowId-1)).hide();
		}
		mcDetailsRowId++;
		$(this).attr('data-grip',mcDetailsRowId);
		if(mcCloseRowId==6){
			$('.addMreSearch').hide();
		}else{
			$('.addMreSearch').show();
		}
	}
	
});
$('._closeXrow').on('click',function(){
	var closeXrowId = $(this).attr('data-grip');
	var closeXrow = $(this).parents().find('.multic'+parseInt(closeXrowId));
	$(closeXrow).hide();
	$('._mcClose'+parseInt(closeXrowId-1)).show();
	$('._addAnotherFlight').attr('data-grip',parseInt(closeXrowId));
	if(!$('._addAnotherFlight').is(':visible')){
		$('.addMreSearch').show();
	}
	
	$('#multiFromId'+parseInt(closeXrowId)).val('');
	$('#multiToID'+parseInt(closeXrowId)).val('');
	$('#mchdateF'+parseInt(closeXrowId)+'Hidden').val('');
	$('.mchdateF'+parseInt(closeXrowId)).val('');
	
	$('#multicityFrom'+parseInt(closeXrowId)).attr('data-iata','');
	$('#multicityFrom'+parseInt(closeXrowId)).attr('value','');
	$('#multicityFrom'+parseInt(closeXrowId)).val('');
	$('#multicityTo'+parseInt(closeXrowId)).attr('data-iata','');
	$('#multicityTo'+parseInt(closeXrowId)).attr('value','');
	$('#multicityTo'+parseInt(closeXrowId)).val('');
	
});

/*
 *Input Live Validation
 */
function inputLimiter(e,allow) {
    var AllowableCharacters = '';
    if (allow == 'Letters'){AllowableCharacters=' ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';}
    if (allow == 'Numbers'){AllowableCharacters='1234567890';}
    if (allow == 'NameCharacters'){AllowableCharacters=' ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-.\'';}
    if (allow == 'NameCharactersAndNumbers'){AllowableCharacters='1234567890 ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-\'';}
    if (allow == 'OnlyCharactersAndNumbers'){AllowableCharacters='1234567890 ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';}
    if (allow == 'CharactersAndNumbersWithOutSpace'){AllowableCharacters='1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';}
    var k = document.all?parseInt(e.keyCode): parseInt(e.which);    
    if (k!=13 && k!=8 && k!=0){        
    	if(arabicStringValidate(String.fromCharCode(k))===true){
        	return true;
        }else{
	    	if ((e.ctrlKey==false) && (e.altKey==false)) {
	    		return (AllowableCharacters.indexOf(String.fromCharCode(k))!=-1);
	        }else{
	        	return true;
	        }    
        }    	
    }else{
    	return true;
    }
}

/**
 * Auto Input Text Direction By Fahid Mohammad,
 */
//Arabic - Range:
//0600ï¿½06FF
var rtlChars		= '\u0600-\u06FF';

//Arabic Supplement - Range:
//0750ï¿½077F
rtlChars		+= '\u0750-\u077F';

//Arabic Presentation Forms-A - Range:
//FB50ï¿½FDFF
rtlChars		+= '\uFB50-\uFDFF';

//Arabic Presentation Forms-B - Range:
//FE70ï¿½FEFF
rtlChars		+= '\uFE70-\uFEFF';

//ASCII Punctuation - Range:
//0000-0020
var controlChars = '\u0000-\u0020';

//General Punctuation - Range
//2000-200D
controlChars 	+= '\u2000-\u200D';

//Start Regular Expression magic
var reRTL     = new RegExp('^[' + controlChars + ']*[' + rtlChars + ']');
var reControl = new RegExp('^[' + controlChars + ']*$');

function detectDirection(e) {
	var t = e.value;
	var $body = $('body');
	if (t.match(reRTL)) {
		e.dir = "rtl"
		if($body.hasClass('my_lang')==false){
			$body.addClass('my_lang');
		}
	}else if(t.match(reControl)) {
		$body.removeClass('my_lang');
		return false
	}else{
		e.dir = "ltr";
		$body.removeClass('my_lang');
	}
}



function getTotalTimeTaken(opt,msg){
	if(opt=="START"){
		start = new Date().getTime();
	}
	if(opt=="END"){
		end = new Date().getTime();
		var time = end - start;
		if(typeof msg !="undefined"){
			console.info(msg);
		}
		console.info('Execution time: ' + time);
	}
}

/*Prevent user from typing the date manually*/
$('._datepik').keydown(function(e) {
	e.preventDefault();
	return false;
});

  /**
   *Datepicker Method for binding 1 to many DP together
   *@param Array [HTML_SELECTOR, CALENDAR-POSITION, HOVER-EFFECT, RANGE-SELECT, SHOW-DEFAULT-DATE, SET-DATE]
   *@param Array [HTML_SELECTOR, CALENDAR-POSITION, HOVER-EFFECT, RANGE-SELECT, SHOW-DEFAULT-DATE, SET-DATE]
   *@param Array [HTML_SELECTOR, CALENDAR-POSITION, HOVER-EFFECT, RANGE-SELECT, SHOW-DEFAULT-DATE, SET-DATE]
   *@param Integer [NUMBER OF CALENDAR]
   *@param String [DATE-FORMAT] Default "DD/MM/YYYY" 
   *@param Integer Add Date to the connected calendar [2] OR [5]
   *@example
  	var dateformat = "YYYY/MM/DD";
  	var d1 = [HTML_SELECTOR,'left',true,false,false,new Date('2015-03-12')];
  	var d2 = [HTML_SELECTOR,'right',true,false,true,new Date('2015-03-25')];
  	var d3 = [HTML_SELECTOR,'middle',true,false,true,new Date('2015-03-28')];
  	loadDatePicker(d1,d2,d3,2,dateformat);
   */
	function loadDatePicker(from,to,to2,numoC,format,addDate,globalDate,pickDefault,nextDay,FPHCONDITION){
		var loadCheckFrom = true,
			loadCheckTo = true,cookieSelection = false;
		from = from || [];
		to = to || [];
		to2 = to2 || [];
		numoC = numoC || 2;
		format = format || 'DD/MM/YYYY';		
		var elmOverlay = $('.dpOverlay');
		if(from[7] && to[7]){
			cookieSelection = true;
		}
		if(isValidDate(from[5])==false){
			from[5] = moment(globalDate).subtract({days: 0}).toDate();
		}
		var picker2, pic1Date, minDate = from[5] || moment(globalDate).subtract({days: 0}).toDate();	
		var picker3, pic2Date, minDate2 = to[5] || moment(globalDate).subtract({days: 0}).toDate(),pic3Date;	
		var setDefaultDate1, setDefaultDate2, setDefaultDate3; 
		var curDateString = moment().format(format);
		if(from[4]){
			setDefaultDate1 = from[5] || moment(globalDate).subtract({days: 0}).toDate();
		}
		if(from[7]){
			setDefaultDate1 = from[5];
		}	
		if(typeof FPHCONDITION=="undefined"){
			FPHCONDITION = [false];
		}
		if(from[8]!=undefined && from[8]=="TrsfrDp"){
			var mnDate= moment(globalDate).subtract({days: 360}).toDate();
			var mxDate= moment(globalDate).subtract({days: 0}).toDate();
		}else{
			var mnDate= moment(globalDate).subtract({days: 0}).toDate();
			var mxDate= moment(globalDate).add({days: 360}).toDate();
		}
		var picker1 = new flyinDP({
			field: from[0] || '',
			datePickerPos:from[1] || 'left',
			mouseHoverEffect:from[2] || false,
			dateRange: from[3] || false,
			numberOfMonths: numoC,
			format: format,
			firstDay: 1,
			minDate: mnDate,
			maxDate: mxDate,
			setDefaultDate: setDefaultDate1,
			defaultDate:  from[5] || '',
			yearRange: [2000, 2020],
			onSelect: function(){
			var $this = $(this._o.field);
				if(from[6]){
					from[6].val(moment(picker1.getDate()).format('YYYY/MM/DD'));
				}
				//get selected date of from dp
				pic1Date = moment(picker1.getDate()).add({days: addDate || 0}).toDate();
				to[5] =  moment(picker1.getDate()).add({days: addDate || 0}).toDate();
				minDate = picker1.getMoment().toDate();			
				
				//get selected date of from dp
				pic2Date = moment(picker1.getDate()).add({days: addDate || 0}).toDate();
				minDate2 = picker1.getMoment().toDate();
				if(typeof $(to[0]).val() !="undefined" && $(to[0]).val()!=""){
					var d1 = moment(minDate).format('YYYY/MM/DD');
					var d2 = moment($(to[0]).val(),'DD/MM/YYYY').format('YYYY/MM/DD');
					if(d1>d2){
						pickDefault = true;
						$(to[0]).val('');
						$(to[0]).addClass('updatedDate');
						setTimeout(function(){
							$(to[0]).removeClass('updatedDate');
						},3000);
					}else{						
						pickDefault = false;
					}
				}
				if(typeof $(to2[0]).val() !="undefined" && $(to2[0]).val()!=""){
					$(to2[0]).val('');
				}
				//re set toDate picker
				setupDate2(function(){					
					if(FPHCONDITION[0]==true){
						var FPHToDate = picker2.getMoment().toDate();
						if(typeof to[0]=="undefined"){
							FPHToDate = moment(globalDate).add({days: 362}).toDate();
						}
						fphFrom($this,moment(minDate2).subtract({days: 0}).toDate(),moment(pic2Date).add({days: 30}).toDate());
						fphTo($this,picker1.getMoment().toDate(),moment(pic2Date).add({days: 30}).toDate());
						//fphFrom($this,moment(minDate2).subtract({days: 0}).toDate(),FPHToDate);
						//fphTo($this,picker1.getMoment().toDate(),moment(pic2Date).add({days: 362}).toDate());
					}
				});
				setupDate3();				
				setTimeout(function(){
					tabNext($this);    
				},100);			
			},
			onOpen: function(){
				//For Adding a data-grip for the active date-picker container
				var $thisGrip = $(this._o.field).attr('data-grip');						
				var $thisElm = $(this.el);
				if(typeof $thisGrip!="undefined"){
					$thisElm.addClass($thisGrip);
				}
				//elmOverlay.show();
			},
			onClose: function(){
				elmOverlay.hide();
			}
		});
		
		pic1Date = moment(picker1.getDate()).add({days: addDate || 0}).toDate();	
		
		if(from[6]){
			from[6].val(moment(picker1.getDate()).format('YYYY/MM/DD'));
		}
		if(to[4]){
			setDefaultDate2 = pic1Date || to[5];
		}
		if(cookieSelection){
			setDefaultDate2 = to[5];
		}
		function setupDate2(callback){
			if(typeof  picker2 !== 'undefined'){
				picker2.destroy();														
			}
			if(nextDay===true){
				minDate = moment(minDate).add({days: 1}).toDate();
			}
			picker2 = new flyinDP({
				field: to[0] || '',
				datePickerPos:to[1] || 'left',
				mouseHoverEffect:to[2] || false,
				dateRange: to[3] || false,
				numberOfMonths: numoC,
				format: format,
				firstDay: 1,
				minDate: moment(minDate).subtract({days: 0}).toDate() || moment(globalDate).add({days: 0}).toDate(),
				maxDate: moment(globalDate).add({days: 360}).toDate(),
				setDefaultDate:(((cookieSelection==true)? setDefaultDate2 : (pickDefault==true)? pic1Date || setDefaultDate2:'')),
				yearRange: [2000, 2020],
				defaultDate: to[5] || pic1Date,
				onSelect: function() {
					var $this = $(this._o.field);
					if(to[6]){
						to[6].val(moment(picker2.getDate()).format('YYYY/MM/DD'));
					}
					//get selected date of from dp
					pic2Date = moment(picker2.getDate()).add({days: addDate || 0}).toDate();
					to2[5] = moment(picker2.getDate()).add({days: addDate || 0}).toDate();					
				    pic3Date = moment(picker2.getDate()).add({days: addDate || 0}).toDate();
					minDate2 = picker2.getMoment().toDate();
					
					if(typeof $(to2[0]).val() !="undefined" && $(to2[0]).val()!=""){
						$(to2[0]).val('');
					}
					//re set toDate picker
					setupDate3();					
					if(FPHCONDITION[0]==true){
						fphFrom($this,picker1.getMoment().toDate(),pic2Date);
						fphTo($this,picker1.getMoment().toDate(),pic2Date);
					}
					setTimeout(function(){
						tabNext($this);    
					},100);	
				},
				onOpen: function(){
					//For Adding a data-grip for the active date-picker container
					var $thisGrip = $(this._o.field).attr('data-grip');						
					var $thisElm = $(this.el);
					if(typeof $thisGrip!="undefined"){
						$thisElm.addClass($thisGrip);
					}
					//elmOverlay.show();
				},
				onClose: function(){
					elmOverlay.hide();
				}
			});	
			pic2Date = moment(picker1.getDate()).add({days: addDate || 0}).toDate();			
			pic3Date = moment(picker2.getDate()).toDate();
			if(to[6]){
				if(typeof $(to[0]).val() !="undefined" && $(to[0]).val()!=""){
					var d1 = moment(minDate).format('YYYY/MM/DD');
					var d2 = moment($(to[0]).val(),'DD/MM/YYYY').format('YYYY/MM/DD');
					if(d1>d2){
						$(to[0]).val('');
						to[6].val(moment(picker2.getDate()).format('YYYY/MM/DD'));
					}else{
						var ndate = picker2.getDate() || moment($(to[0]).val(),'DD/MM/YYYY');
						to[6].val(moment(ndate).format('YYYY/MM/DD'));
					}
				}
			}
			if(typeof callback!="undefined")
				return callback();
		};
		setupDate2();
		setupDate3();
			
		if(to2[4]){
			setDefaultDate3 = pic2Date || to2[5];
		}	
		function setupDate3(){
			if(typeof  picker3 !== 'undefined'){
				picker3.destroy();
			}
			
			if(nextDay===true){
				minDate2 = moment(minDate2).add({days: 1}).toDate();
			}
			picker3 = new flyinDP({					
				field: to2[0] || '',
				datePickerPos:to2[1] || 'left',
				mouseHoverEffect:to2[2] || false,
				dateRange: to2[3] || false,
				numberOfMonths: numoC,
				format: format,
				firstDay: 1,
				minDate: minDate2 || pic2Date || moment(globalDate).subtract({days: 0}).toDate(),
				maxDate: moment(globalDate).add({days: 360}).toDate(),
				setDefaultDate:((pickDefault==true)? pic3Date || pic2Date || to2[5]:''),
				yearRange: [2000, 2020],
				defaultDate: to2[5] || pic3Date || pic2Date,
				onSelect: function() {
					if(to2[6]){
						to2[6].val(moment(picker3.getDate()).format('YYYY/MM/DD'));
					}
				},
				onOpen: function(){
					//For Adding a data-grip for the active date-picker container
					var $thisGrip = $(this._o.field).attr('data-grip');						
					var $thisElm = $(this.el);
					if(typeof $thisGrip!="undefined"){
						$thisElm.addClass($thisGrip);
					}
					//elmOverlay.show();
				},
				onClose: function(){
					elmOverlay.hide();
				}
			});	
			if(to2[6]){
				to2[6].val(moment(picker3.getDate()).format('YYYY/MM/DD'));
			}
			
			elmOverlay.hide();
		};
		
		if(FPHCONDITION[0]==true){
			var p1 = $(picker1._o.field),
				p2 = $(picker2._o.field),
				p1GetDate = moment(picker1.getDate()).toDate(),
				p2GetDate = moment(picker2.getDate()).toDate();
				if(isNaN(p2GetDate.getMonth())==true){
					p2GetDate = moment(FPHCONDITION[2],'DD-MM-YYYY').toDate();
				} 
			fphFrom(p1,p1GetDate,p2GetDate,FPHCONDITION[1]);
			fphTo(p1,p1GetDate,p2GetDate,FPHCONDITION[2]);
		}
		/**
		 * F+H Datepicker
		 */
		var fphPickerFrom,fphPickerTo;
		function fphFrom(elm,fphMinDate,fphMaxDate,defaultPdate){
			if(typeof  fphPickerFrom !== 'undefined'){
				fphPickerFrom.destroy();
			}
			if(typeof defaultPdate!="undefined" && defaultPdate!=""){
				defaultPdate = moment(defaultPdate,'DD-MM-YYYY').toDate();
			}
			var fieldElm = elm.attr('data-fphfrom'),
				fieldElm = $(fieldElm);
			if(fieldElm.length>0){
				var right = "right";
				var left = "left";
				var pos1 = left;
				var pos2 = right;
			if($('html').attr('data-lang')=='ar'){
				pos1 = right;
				pos2 = left;		
			}			
				fphPickerFrom = new flyinDP({
					field: fieldElm[0] || '',
					datePickerPos:FPHCONDITION[3] || pos1,
					mouseHoverEffect:false,
					dateRange:false,
					numberOfMonths: numoC,
					format: format,
					firstDay: 1,
					minDate: fphMinDate, 
					maxDate: (typeof FPHCONDITION[5]!="undefined" && FPHCONDITION[5]=="OneWay") ? moment(fphMinDate).add({days: 30}).toDate() :fphMaxDate,
					setDefaultDate: defaultPdate || fphMinDate,
					defaultDate:  defaultPdate || '',
					yearRange: [2000, 2020],
					onSelect: function(){
						fphTo(elm,fphPickerFrom.getMoment().toDate(),fphMaxDate);
					}
				});
				if(loadCheckFrom==true){
					setTimeout(function(){					
						fieldElm.val(moment(defaultPdate).format('DD/MM/YYYY'));
					},80);
					loadCheckFrom = false;
				}
			}
		}
		function fphTo(elm,fphMinDate,fphMaxDate,defaultPdate){
			if(typeof  fphPickerTo !== 'undefined'){
				fphPickerTo.destroy();
			}
			if(typeof defaultPdate!="undefined" && defaultPdate!=""){
				defaultPdate = moment(defaultPdate,'DD-MM-YYYY').toDate();
			}
			
			var fieldElm = elm.attr('data-fphTo');
			fieldElm = $(fieldElm);
			if(fieldElm.length>0){
				var right = "right";
				var left = "left";
				var pos1 = left;
				var pos2 = right;
				if($('html').attr('data-lang')=='ar'){
				pos1 = right;
				pos2 = left;		
			}
				fphPickerTo = new flyinDP({
					field: fieldElm[0] || '',
					datePickerPos:FPHCONDITION[4] || ((jsUpdateSize(769)===false)? pos2:pos1),
					mouseHoverEffect:false,
					dateRange:false,
					numberOfMonths: numoC,
					format: format,
					firstDay: 1,
					minDate: moment(fphPickerFrom.getDate()).toDate() || fphMinDate,
					maxDate: (typeof FPHCONDITION[5]!="undefined" && FPHCONDITION[5]=="OneWay") ? moment(fphMinDate).add({days: 30}).toDate() :fphMaxDate,
					setDefaultDate: defaultPdate || fphMinDate,
					defaultDate:  defaultPdate || '',
					yearRange: [2000, 2020]
				});
				if(loadCheckTo==true){
					setTimeout(function(){					
						fieldElm.val(moment(defaultPdate).format('DD/MM/YYYY'));
					},80);
					loadCheckTo = false;
				}
			}
		}
	}

	
function loadDatePickerForMC(from,to,to2,to3,to4,to5,numoC,format,addDate,globalDate,pickDefault,nextDay){
		
		var loadCheckFrom = true,loadCheckTo = true, from = from || [], to = to || [], to2 = to2 || [], to3 = to3 || [], to4 = to4 || [], numoC = numoC || 2, format = format || 'DD/MM/YYYY';
		
		var elmOverlay = $('.dpOverlay');
		
		if(isValidDate(from[5])==false){
			from[5] = moment(globalDate).subtract({days: 0}).toDate();
		}
		
		var picker2, pic1Date, minDate = from[5] || moment(globalDate).subtract({days: 0}).toDate();	
		var picker3, pic2Date, minDate2 = to[5] || moment(globalDate).subtract({days: 0}).toDate();
		var picker4, pic3Date, minDate3 = to[5] || moment(globalDate).subtract({days: 0}).toDate();		
		var picker5, pic4Date, minDate4 = to[5] || moment(globalDate).subtract({days: 0}).toDate();
		var picker6, pic5Date, minDate5 = to[5] || moment(globalDate).subtract({days: 0}).toDate(),pic6Date;
		var setDefaultDate1, setDefaultDate2, setDefaultDate3,setDefaultDate4,setDefaultDate5,setDefaultDate6; 
		var curDateString = moment().format(format);
		
		if(from[4]){
			setDefaultDate1 = from[5] || moment(globalDate).subtract({days: 0}).toDate();
		}	
		if(from[7]){
			setDefaultDate1 = from[5];
		}
		var picker1 = new flyinDP({
			field: from[0] || '',
			datePickerPos:from[1] || 'left',
			mouseHoverEffect:from[2] || false,
			dateRange: from[3] || false,
			numberOfMonths: numoC,
			format: format,
			firstDay: 1,
			minDate: moment(globalDate).subtract({days: 0}).toDate(),
			maxDate: moment(globalDate).add({days: 360}).toDate(),
			setDefaultDate: setDefaultDate1,
			defaultDate:  from[5] || '',
			yearRange: [2000, 2020],
			onSelect: function(){
			var $this = $(this._o.field);
				if(from[6]){
					from[6].val(moment(picker1.getDate()).format('YYYY/MM/DD'));
				}
				//get selected date of from dp
				pic1Date = moment(picker1.getDate()).add({days: addDate || 0}).toDate();
				to[5] =  moment(picker1.getDate()).add({days: addDate || 0}).toDate();
				minDate = picker1.getMoment().toDate();			
				
				//get selected date of from dp
				pic2Date = moment(picker1.getDate()).add({days: addDate || 0}).toDate();
				minDate2 = picker1.getMoment().toDate();
				if(typeof $(to[0]).val() !="undefined" && $(to[0]).val()!=""){
					var d1 = moment(minDate).format('YYYY/MM/DD');
					var d2 = moment($(to[0]).val(),'DD/MM/YYYY').format('YYYY/MM/DD');
					if(d1>d2){
						pickDefault = true;
						$(to[0]).val('');
						$(to[0]).addClass('updatedDate');
						setTimeout(function(){
							$(to[0]).removeClass('updatedDate');
						},3000);
					}else{						
						pickDefault = false;
					}
				}
				if(typeof $(to2[0]).val() !="undefined" && $(to2[0]).val()!=""){
					$(to2[0]).val('');
				}
				/* if(typeof $(to3[0]).val() !="undefined" && $(to3[0]).val()!=""){
					$(to3[0]).val('');
				} */
				//re set toDate picker
				setupDate2();
				setupDate3();				
				setupDate4();
				setupDate5();
				setupDate6();
				setTimeout(function(){
					tabNext($this);    
				},100);			
			},
			
			onOpen: function(){
				//For Adding a data-grip for the active date-picker container
				var $thisGrip = $(this._o.field).attr('data-grip');						
				var $thisElm = $(this.el);
				if(typeof $thisGrip!="undefined"){
					$thisElm.addClass($thisGrip);
				}
				//elmOverlay.show();
			},
			
			onClose: function(){
				elmOverlay.hide();
			}
			
		});
		
		pic1Date = moment(picker1.getDate()).add({days: addDate || 0}).toDate();
		
		if(from[6]){
			from[6].val(moment(picker1.getDate()).format('YYYY/MM/DD'));
		}
		
		if(to[4]){
			setDefaultDate2 = pic1Date || to[5];
		}
		if(from[7]){
			setDefaultDate2 = from[5];
		}
		function setupDate2(callback){
			
			if(typeof  picker2 !== 'undefined'){
				picker2.destroy();														
			}
			
			if(nextDay===true){
				minDate = moment(minDate).add({days: 1}).toDate();
			}
			
			picker2 = new flyinDP({
				field: to[0] || '',
				datePickerPos:to[1] || 'left',
				mouseHoverEffect:to[2] || false,
				dateRange: to[3] || false,
				numberOfMonths: numoC,
				format: format,
				firstDay: 1,
				minDate: moment(minDate).subtract({days: 0}).toDate() || moment(globalDate).add({days: 0}).toDate(),
				maxDate: moment(globalDate).add({days: 360}).toDate(),
				setDefaultDate:(((setDefaultDate2!=='') ? setDefaultDate2 : (pickDefault==true)? pic1Date || setDefaultDate2:'')),
				yearRange: [2000, 2020],
				defaultDate: to[5] || pic1Date,
				onSelect: function() {
					var $this = $(this._o.field);
					if(to[6]){
						to[6].val(moment(picker2.getDate()).format('YYYY/MM/DD'));
					}
					//get selected date of from dp
					pic2Date = moment(picker2.getDate()).add({days: addDate || 0}).toDate();
					to2[5] = moment(picker2.getDate()).add({days: addDate || 0}).toDate();					
				    pic3Date = moment(picker2.getDate()).add({days: addDate || 0}).toDate();
					minDate2 = picker2.getMoment().toDate();
					
					if(typeof $(to2[0]).val() !="undefined" && $(to2[0]).val()!=""){
						$(to2[0]).val('');
					}
					//re set toDate picker
					setupDate3();					
					setupDate4();
					setupDate5(); 
					setupDate6();
					setTimeout(function(){
						tabNext($this);    
					},100);	
				},
				onOpen: function(){
					//For Adding a data-grip for the active date-picker container
					var $thisGrip = $(this._o.field).attr('data-grip');						
					var $thisElm = $(this.el);
					if(typeof $thisGrip!="undefined"){
						$thisElm.addClass($thisGrip);
					}
					//elmOverlay.show();
				},
				onClose: function(){
					elmOverlay.hide();
				}
			});	
			
			pic2Date = moment(picker1.getDate()).add({days: addDate || 0}).toDate();			
			pic3Date = moment(picker2.getDate()).toDate();
			
			if(to[6]){
				if(typeof $(to[0]).val() !="undefined" && $(to[0]).val()!=""){
					var d1 = moment(minDate).format('YYYY/MM/DD');
					var d2 = moment($(to[0]).val(),'DD/MM/YYYY').format('YYYY/MM/DD');
					if(d1>d2){
						$(to[0]).val('');
						to[6].val(moment(picker2.getDate()).format('YYYY/MM/DD'));
					}else{
						var ndate = picker2.getDate() || moment($(to[0]).val(),'DD/MM/YYYY');
						to[6].val(moment(ndate).format('YYYY/MM/DD'));
					}
				}
			}
			
			if(typeof callback!="undefined")
				return callback();
		};
		
		setupDate2();
		setupDate3();
		setupDate4();
		setupDate5();
		setupDate6();
		if(to2[4]){
			setDefaultDate3 = pic2Date || to2[5];
		}	
		if(from[7]){
			setDefaultDate3 = from[5];
		}
		function setupDate3(){
			
			if(typeof  picker3 !== 'undefined'){
				picker3.destroy();
			}
			
			if(nextDay===true){
				minDate2 = moment(minDate2).add({days: 1}).toDate();
			}
			
			picker3 = new flyinDP({					
				field: to2[0] || '',
				datePickerPos:to2[1] || 'left',
				mouseHoverEffect:to2[2] || false,
				dateRange: to2[3] || false,
				numberOfMonths: numoC,
				format: format,
				firstDay: 1,
				minDate: minDate2 || pic2Date || moment(globalDate).subtract({days: 0}).toDate(),
				maxDate: moment(globalDate).add({days: 360}).toDate(),
				setDefaultDate:(((setDefaultDate3!=='') ? setDefaultDate3 : (pickDefault==true)? pic2Date || setDefaultDate3:'')),
				yearRange: [2000, 2020],
				defaultDate: to2[5] || pic3Date || pic2Date,
				onSelect: function() {
					var $this = $(this._o.field);
					if(to2[6]){
						to2[6].val(moment(picker3.getDate()).format('YYYY/MM/DD'));
					}
					//get selected date of from dp
					pic3Date = moment(picker3.getDate()).add({days: addDate || 0}).toDate();
					to3[5] = moment(picker3.getDate()).add({days: addDate || 0}).toDate();					
				    pic4Date = moment(picker3.getDate()).add({days: addDate || 0}).toDate();
					minDate3 = picker3.getMoment().toDate();
					
					if(typeof $(to3[0]).val() !="undefined" && $(to3[0]).val()!=""){
						$(to3[0]).val('');
					}
					//re set toDate picker					
					setupDate4();
					setupDate5();
					setupDate6();
					setTimeout(function(){
						tabNext($this);    
					},100);	
				},
				onOpen: function(){
					//For Adding a data-grip for the active date-picker container
					var $thisGrip = $(this._o.field).attr('data-grip');						
					var $thisElm = $(this.el);
					if(typeof $thisGrip!="undefined"){
						$thisElm.addClass($thisGrip);
					}
					//elmOverlay.show();
				},
				onClose: function(){
					elmOverlay.hide();
				}
			});	
			
			pic3Date = moment(picker2.getDate()).add({days: addDate || 0}).toDate();			
			pic4Date = moment(picker3.getDate()).toDate();
			if(to2[6]){
				if(typeof $(to2[0]).val() !="undefined" && $(to2[0]).val()!=""){
					var d1 = moment(minDate2).format('YYYY/MM/DD');
					var d2 = moment($(to2[0]).val(),'DD/MM/YYYY').format('YYYY/MM/DD');
					if(d1>d2){
						$(to2[0]).val('');
						to2[6].val(moment(picker3.getDate()).format('YYYY/MM/DD'));
					}else{
						var ndate = picker3.getDate() || moment($(to2[0]).val(),'DD/MM/YYYY');
						to2[6].val(moment(ndate).format('YYYY/MM/DD'));
					}
				}
			}
			
			if(typeof callback!="undefined")
				return callback();
			
			
		};
		
		setupDate3();
		setupDate4();
		setupDate5();
		setupDate6();	
		if(to3[4]){
			setDefaultDate4 = pic3Date || to3[5];
		}	
		if(from[7]){
			setDefaultDate4 = from[5];
		}
		function setupDate4(){
			
			if(typeof  picker4 !== 'undefined'){
				picker4.destroy();
			}
			
			if(nextDay===true){
				minDate3 = moment(minDate3).add({days: 1}).toDate();
			}
			
			picker4 = new flyinDP({					
				field: to3[0] || '',
				datePickerPos:to3[1] || 'left',
				mouseHoverEffect:to3[2] || false,
				dateRange: to3[3] || false,
				numberOfMonths: numoC,
				format: format,
				firstDay: 1,
				minDate: minDate3 || pic3Date || moment(globalDate).subtract({days: 0}).toDate(),
				maxDate: moment(globalDate).add({days: 360}).toDate(),
				setDefaultDate:(((setDefaultDate4!=='') ? setDefaultDate4 : (pickDefault==true)? pic3Date || setDefaultDate4:'')),
				yearRange: [2000, 2020],
				defaultDate: to3[5] || pic4Date || pic3Date,
				onSelect: function() {
					var $this = $(this._o.field);
					if(to3[6]){
						to3[6].val(moment(picker4.getDate()).format('YYYY/MM/DD'));
					}
					//get selected date of from dp
					pic4Date = moment(picker4.getDate()).add({days: addDate || 0}).toDate();
					to4[5] = moment(picker4.getDate()).add({days: addDate || 0}).toDate();					
				    pic5Date = moment(picker4.getDate()).add({days: addDate || 0}).toDate();
					minDate4 = picker4.getMoment().toDate();
					
					if(typeof $(to4[0]).val() !="undefined" && $(to4[0]).val()!=""){
						$(to4[0]).val('');
					}
					//re set toDate picker
					setupDate5();
					setupDate6();
					setTimeout(function(){
						tabNext($this);    
					},100);	
				},
				
				
				onOpen: function(){
					//For Adding a data-grip for the active date-picker container
					var $thisGrip = $(this._o.field).attr('data-grip');						
					var $thisElm = $(this.el);
					if(typeof $thisGrip!="undefined"){
						$thisElm.addClass($thisGrip);
					}
					//elmOverlay.show();
				},
				
				onClose: function(){
					elmOverlay.hide();
				}
				
			});	
			pic4Date = moment(picker3.getDate()).add({days: addDate || 0}).toDate();			
			pic5Date = moment(picker4.getDate()).toDate();
			
			if(to3[6]){
				if(typeof $(to3[0]).val() !="undefined" && $(to3[0]).val()!=""){
					var d1 = moment(minDate3).format('YYYY/MM/DD');
					var d2 = moment($(to3[0]).val(),'DD/MM/YYYY').format('YYYY/MM/DD');
					if(d1>d2){
						$(to3[0]).val('');
						to3[6].val(moment(picker4.getDate()).format('YYYY/MM/DD'));
					}else{
						var ndate = picker4.getDate() || moment($(to3[0]).val(),'DD/MM/YYYY');
						to3[6].val(moment(ndate).format('YYYY/MM/DD'));
					}
				}
			}
			
			if(typeof callback!="undefined")
				return callback();
			
		};
		
		
		
		setupDate4();
		setupDate5();
		setupDate6();
		if(to4[4]){
			setDefaultDate5 = pic4Date || to4[5];
		}	
		
		if(from[7]){
			setDefaultDate5 = from[5];
		}
		function setupDate5(){
			
			if(typeof  picker5 !== 'undefined'){
				picker5.destroy();
			}
			
			if(nextDay===true){
				minDate4 = moment(minDate4).add({days: 1}).toDate();
			}
			
			picker5 = new flyinDP({					
				field: to4[0] || '',
				datePickerPos:to4[1] || 'left',
				mouseHoverEffect:to4[2] || false,
				dateRange: to4[3] || false,
				numberOfMonths: numoC,
				format: format,
				firstDay: 1,
				minDate: minDate4 || pic4Date || moment(globalDate).subtract({days: 0}).toDate(),
				maxDate: moment(globalDate).add({days: 360}).toDate(),
				setDefaultDate:(((setDefaultDate5!=='') ? setDefaultDate5 : (pickDefault==true)? pic4Date || setDefaultDate5:'')),
				yearRange: [2000, 2020],
				defaultDate: to4[5] || pic5Date || pic4Date,
				
				onSelect: function() {
					var $this = $(this._o.field);
					if(to4[6]){
						to4[6].val(moment(picker5.getDate()).format('YYYY/MM/DD'));
					}
					//get selected date of from dp
					pic5Date = moment(picker5.getDate()).add({days: addDate || 0}).toDate();
					to5[5] = moment(picker5.getDate()).add({days: addDate || 0}).toDate();					
				    pic6Date = moment(picker5.getDate()).add({days: addDate || 0}).toDate();
					minDate5 = picker5.getMoment().toDate();
					
					if(typeof $(to5[0]).val() !="undefined" && $(to5[0]).val()!=""){
						$(to5[0]).val('');
					}
					//re set toDate picker
					setupDate6();
					setTimeout(function(){
						tabNext($this);    
					},100);	
				},

				
				onOpen: function(){
					//For Adding a data-grip for the active date-picker container
					var $thisGrip = $(this._o.field).attr('data-grip');						
					var $thisElm = $(this.el);
					if(typeof $thisGrip!="undefined"){
						$thisElm.addClass($thisGrip);
					}
					//elmOverlay.show();
				},
				
				onClose: function(){
					elmOverlay.hide();
				}
				
			});	
			pic5Date = moment(picker4.getDate()).add({days: addDate || 0}).toDate();			
			pic6Date = moment(picker5.getDate()).toDate();
			
			if(to4[6]){
				if(typeof $(to4[0]).val() !="undefined" && $(to4[0]).val()!=""){
					var d1 = moment(minDate4).format('YYYY/MM/DD');
					var d2 = moment($(to4[0]).val(),'DD/MM/YYYY').format('YYYY/MM/DD');
					if(d1>d2){
						$(to4[0]).val('');
						to4[6].val(moment(picker5.getDate()).format('YYYY/MM/DD'));
					}else{
						var ndate = picker5.getDate() || moment($(to4[0]).val(),'DD/MM/YYYY');
						to4[6].val(moment(ndate).format('YYYY/MM/DD'));
					}
				}
			}
			
			if(typeof callback!="undefined")
				return callback();
			
		};
		
		
		setupDate5();
		setupDate6();	
		if(to5[4]){
			setDefaultDate6 = pic5Date || to5[5];
		}	
		if(from[7]){
			setDefaultDate6 = from[5];
		}
		
		function setupDate6(){
			
			if(typeof  picker6 !== 'undefined'){
				picker6.destroy();
			}
			
			if(nextDay===true){
				minDate5 = moment(minDate5).add({days: 1}).toDate();
			}
			picker6 = new flyinDP({					
				field: to5[0] || '',
				datePickerPos:to5[1] || 'left',
				mouseHoverEffect:to5[2] || false,
				dateRange: to5[3] || false,
				numberOfMonths: numoC,
				format: format,
				firstDay: 1,
				minDate: minDate5 || pic5Date || moment(globalDate).subtract({days: 0}).toDate(),
				maxDate: moment(globalDate).add({days: 360}).toDate(),
				setDefaultDate:(((setDefaultDate6!=='') ? setDefaultDate6 : (pickDefault==true)? pic5Date || setDefaultDate6:'')),
				yearRange: [2000, 2020],
				defaultDate: to5[5] || pic6Date || pic5Date,
				
				onSelect: function() {
					if(to5[6]){
						to5[6].val(moment(picker6.getDate()).format('YYYY/MM/DD'));
					}
					
				},

				
				onOpen: function(){
					//For Adding a data-grip for the active date-picker container
					var $thisGrip = $(this._o.field).attr('data-grip');						
					var $thisElm = $(this.el);
					if(typeof $thisGrip!="undefined"){
						$thisElm.addClass($thisGrip);
					}
					//elmOverlay.show();
				},
				
				onClose: function(){
					elmOverlay.hide();
				}
				
			});	
			if(to5[6]){
				to5[6].val(moment(picker6.getDate()).format('YYYY/MM/DD'));
			}
			
		};
				
	}
	
	function isValidDate(d) {
	  if ( Object.prototype.toString.call(d) !== "[object Date]" )
		return false;
	  return !isNaN(d.getTime());
	}
	function tabNext(elm){
	    var curIndex = parseInt(elm.attr('tabindex')) +1;  
		if($(window).width() > 767){
		$('input[tabindex='+curIndex+']').focus();  
		}
	}


	function changeCurrency(cur,elm){
		changeCurr($("#uName").val(),cur);
		$('.currencyDropdown').find('ul').each(function(){
			$(this).find('li').removeClass('active');
		});
		$(elm).parents('li').addClass('active');
		var resultRender = true;
		document.cookie = "ckmcur"+"="+cur+"; path=/; domain="+window.domainName;
		document.cookie = "cur"+"="+cur+"; path=/;";
		$.post('/changeCurrency',{cur:cur},function(res){
			if(res.res == "OK"){
				if(typeof flightComboSerVar!="undefined" && flightComboSerVar.isActive===true){
					resultRender = false;
					flightComboSerVar.ccm(cur);
					flightComboSerVar.renderBestOffers = true;
					flightSerVar.renderFBFOffers = true;
					flightSerVar.setSelectedCurrency = cur;
				}else if(typeof flightSerVar!="undefined" && flightSerVar.isActive===true){
					resultRender = false;
					flightSerVar.ccm(cur);
					flightSerVar.renderFBFOffers = true;
				}else if(typeof hotelTemplateVar!="undefined" && hotelTemplateVar.isActive===true){
					resultRender = false;
					hotelTemplateVar.ccm(cur);
				}else if(typeof fphService!="undefined" && fphService.isActive===true){
					resultRender = false;
					fphService.ccm(cur);
				}else if(typeof flightSerVar!="undefined" && flightSerVar.curChaLdngRlts===true){
					flightSerVar.setSelectedCurrency = cur;
					resultRender = false;
				}else if(typeof carsVar!="undefined" && carsVar.isActive===true){
					resultRender = false;
					carsVar.ccm(cur);
				}else if(resultRender===true){
					var me=cmnGetURLQueryStr('me');
					if(me !=undefined && (me=== '11' || me==='12')){
						var currency=cmnGetURLQueryStr('currency');
						var url=updateQueryStringParameter(window.location.href,'currency',cur);
						window.history.replaceState({url:url,EVENT:'HOTEL_REVIEW'}, 'Hotel Review...', url);
					}
					window.location.reload(false);
				}
			}
			
			$(".currencyDropdown li").each(function(){
				var cur=$(this).find("a span").text().toLowerCase();
				if($('body').hasClass(cur)){
					$('body').removeClass(cur);
				}
			});
			$("body").addClass(cur.toLowerCase());
			var text = currencySymbols($(elm).attr('data-cur'));
			console.log(text);
			$('.curChange').text(text);
		});
	}
	
	
	function updateQueryStringParameter(uri, key, value) {
	  var re = new RegExp("([?|&])" + key + "=.*?(&|#|$)", "i");
	  if (uri.match(re)) {
		return uri.replace(re, '$1' + key + "=" + value + '$2');
	  } else {
		var hash =  '';
		if( uri.indexOf('#') !== -1 ){
			hash = uri.replace(/.*#/, '#');
			uri = uri.replace(/#.*/, '');
		}
		var separator = uri.indexOf('?') !== -1 ? "&" : "?";    
		return uri + separator + key + "=" + value + hash;
	  }
   }

	function changeLanguage(lng){
		changeLang($("#uName").val(),$("#domainNa").val(),lng);
		var ca = document.cookie.split(';');
		document.cookie = "selectedLanguage"+"="+lng+"; path=/";
		document.cookie = "ckmlang"+"="+lng+"; path=/; domain="+window.domainName;
		var q = window.location.search;
		
		langKey = '.'+lng+'.';
		urlLang = '/'+lng+'/';
		var modifiedUrl = window.location.href;
		if(window.location.href.indexOf('.en.')>0){
			modifiedUrl = window.location.href.replace('.en.',langKey);
			window.location.href = modifiedUrl;
			return;
		}
		else if(window.location.href.indexOf('.ar.')>0){
			modifiedUrl = window.location.href.replace('.ar.',langKey);
			window.location.href = modifiedUrl;
			return;
		}
		else if(window.location.href.indexOf('/en/')>-1){
			modifiedUrl = window.location.href.replace('/en/',urlLang);
			window.location.href = modifiedUrl;
			return;
		}
		else if(window.location.href.indexOf('/ar/')>-1){
			modifiedUrl = window.location.href.replace('/ar/',urlLang);
			window.location.href = modifiedUrl;
			return;
		}
		var urlQuery = getJsonFromUrl(window.location.href);
		var returnUrl = window.location.href;
		if(urlQuery.language){
			var currentLang = urlQuery.language;
			
			var modifiedLang = (lng === 'ar')?'ar_SA':'en_GB';
			modifiedLang = (currentLang.indexOf('_')>-1)?modifiedLang:modifiedLang.split('_')[0];
			
			returnUrl = returnUrl.replace('language='+currentLang,'language='+modifiedLang);
			//window.location.href = modifiedUrl;
		}
		if(urlQuery.lng){
			var currentLang = urlQuery.lng;
			returnUrl =returnUrl.replace('lng='+currentLang,'lng='+lng);
			window.location.href = returnUrl;
		}else{
			if(q==""){
				if (!window.location.origin) {
				  window.location.origin = window.location.protocol + "//" + window.location.hostname + (window.location.port ? ':' + window.location.port: '');
				}
				returnUrl = window.location.origin+window.location.pathname+'?lng='+lng;
				window.location.href = returnUrl;
			}else{
				if (!window.location.origin) {
					  window.location.origin = window.location.protocol + "//" + window.location.hostname + (window.location.port ? ':' + window.location.port: '');
					}
				returnUrl = window.location.origin+window.location.pathname+window.location.search+'&lng='+lng;
				window.location.href = returnUrl;
			}
		}
	}
	
	/**
	 *@description URL Query to JSON 
	 *@author Fahid Mohammad
	 */
	function getJsonFromUrl() {
	  var query = location.search.substr(1);
	  var result = {};
	  query.split("&").forEach(function(part) {
		var item = part.split("=");
		if(item[0]!=""){
			result[item[0]] = decodeURIComponent(item[1]);
		}
	  });
	  return result;
	}
	function changeCountry(country){
		changeDomain($("#uName").val(),country);
		document.cookie = "cc"+"="+country+"; path=/; domain="+window.domainName;
		var url = window.location.href;
		var keyParam = cmnGetURLQueryStr('key');
		var utmParam = cmnGetURLQueryStr('utm_source');
		if(keyParam){
			url = removeParam("key", url);
		}
		if(utmParam){
			url = removeParam("utm_source", url);
		}
		window.location.href=url;
	}
	
	
// to count no of days in hotel
$('#fdphoT,#fdphoF').on('change',function(){
	if($('#fdphoF').val()!="" && $('#fdphoT').val()!=""){
		var dateFirst = $('#fdphoF').val().split('/');
		var dateSecond = $('#fdphoT').val().split('/');
		var month1 = dateFirst[1]-1;
		var month2 = dateSecond[1]-1;
		var firstDate = new Date(dateFirst[2], month1, dateFirst[0]);
		var secondDate = new Date(dateSecond[2], month2, dateSecond[0]);
		var timeDiff = Math.abs(secondDate.getTime() - firstDate.getTime());
		var daysDiff = Math.ceil(timeDiff / (1000 * 3600 * 24));
		$('.nights-count').val(daysDiff);
	}
});

$('#fdphoFPOP,#fdphoTPOP').on('change',function(){
	
	if($('#fdphoFPOP').val()!="" && $('#fdphoTPOP').val()!=""){
		var dateFirst = $('#fdphoFPOP').val().split('/');
		var dateSecond = $('#fdphoTPOP').val().split('/');
		var month1 = dateFirst[1]-1;
		var month2 = dateSecond[1]-1;
		var firstDate = new Date(dateFirst[2], month1, dateFirst[0]);
		var secondDate = new Date(dateSecond[2], month2, dateSecond[0]);
		var timeDiff = Math.abs(secondDate.getTime() - firstDate.getTime());
		var daysDiff = Math.ceil(timeDiff / (1000 * 3600 * 24));
		$('.noOfNightsPOP').val(daysDiff);		
	}
});

//to count no of days in hotel @p
//to hide the room widget when the date pciker's tab are open.
$('.fdphoF').on('focus',function(){ //checkin homepage.
	$('#changesearch-options').hide();
	$('.selectRoomsOptions').removeClass('active');
});
$('.fdphoT').on('focus',function(){ //checkout homepage.
	$('#changesearch-options').hide();
	$('.selectRoomsOptions').removeClass('active');
});
//to hide the room widget when the date pciker's tab are open. @p


function formatDate(objDate,formatKey){
	var bDate,formatedDate;
	var dayShort = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri","Sat"];
	var arabicDayShort = ["\u0627\u0644\u0623\u062D\u062F", "\u0627\u0644\u0627\u062B\u0646\u064A\u0646", "\u0627\u0644\u062B\u0644\u0627\u062B\u0627\u0621","\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621", "\u0627\u0644\u062E\u0645\u064A\u0633", "\u0627\u0644\u062C\u0645\u0639\u0629",
    "\u0627\u0644\u0633\u0628\u062A"];
	var monthShort = ["Jan", "Feb", "Mar", "Apr", "May", "Jun","Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
	var arabicMonthShort = ["\u064A\u0646\u0627\u064A\u0631", "\u0641\u0628\u0631\u0627\u064A\u0631", "\u0645\u0627\u0631\u0633", "\u0627\u0628\u0631\u064A\u0644", "\u0645\u0627\u064A\u0648", "\u064A\u0648\u0646\u064A\u0648","\u064A\u0648\u0644\u064A\u0648", "\u0623\u063A\u0633\u0637\u0633", "\u0633\u0628\u062A\u0645\u0628\u0631", "\u0623\u0643\u062A\u0648\u0628\u0631", "\u0646\u0648\u0641\u0645\u0628\u0631", "\u062F\u064A\u0633\u0645\u0628\u0631"];
	//check if the objDate if an object or string
	if(typeof objDate.getMonth === 'function'){
		bDate = objDate;
	}else{
		bDate = new Date(objDate.replace(/-/g,"/").replace(/[TZ]/g," "));
	}
	
	//format time "12:45 AM/PM"
	if(formatKey=="time"){
		var AM = "AM";
		var PM = "PM";		
		if($("html").hasClass("arabic")){
			AM = "\u0635\u0628\u0627\u062D\u0627";
			PM = "\u0645\u0633\u0627\u0621\u064B";	
		}
		var d = bDate;
		var hh = d.getHours();
		var m = d.getMinutes();
		var s = d.getSeconds();
		var dd = AM;
		var h = hh;
		/*if (h >= 12) {h = hh-12;dd = PM;}
		if (h == 0) {h = 12;}*/
		m = m<10?"0"+m:m;
		s = s<10?"0"+s:s;
		h = h<10?"0"+h:h;
		//formatedDate = h+":"+m+" "+dd;
		formatedDate = h+":"+m;
	}
	
	//format w-d-m-y "Wed, 22 Nov 2015"
	if(formatKey=="w-d-m-y"){
		w =  (($('html').hasClass('en'))? dayShort[bDate.getDay()]:arabicDayShort[bDate.getDay()]) 
		d = bDate.getDate();
		m = (($('html').hasClass('en'))? monthShort[bDate.getMonth()]:arabicMonthShort[bDate.getMonth()]);
		y = bDate.getFullYear();
		formatedDate = w+", "+d+" "+m+" "+y;
	}
	//format w-d-m-y "Wed, 22 Nov"
	if(formatKey=="w-d-m"){
		w = dayShort[bDate.getDay()]
		d = bDate.getDate();
		m = monthShort[bDate.getMonth()];		
		formatedDate = w+", "+d+" "+m;
	}
	
	//Produce "Early Morning, Morning, Afternoon etc..."
	if(formatKey=="events"){
		hr    = bDate.getHours();  /* Returns the hour (from 0-23) */
		min     = bDate.getMinutes();  /* Returns the minutes (from 0-59) */	
		h = parseInt(hr);
		m =  parseInt(min);
        if(h<=4 && m<=59){
            formatedDate = "EM";
        }else if(h>=5 && h<=11 && m<=59){
            formatedDate = "M";
        }else if(h>=12 && h<=17 && m<=59){
            formatedDate = "AN";
        }else if(h>=18 && h<=23 && m<=59){
            formatedDate = "E";
        }else{
        	 formatedDate = "";
        }
	}
	
	//format mins "1705" - Mins
	if(formatKey=="mins"){
		hr    = bDate.getHours();  /* Returns the hour (from 0-23) */
		min     = bDate.getMinutes();  /* Returns the minutes (from 0-59) */	
		h = parseInt(hr)*60;
		m =  parseInt(min);
		formatedDate = h+m;
	}	
	return formatedDate;
}


function currencySymbols(code){
	var currency_symbols = {
		'USD': '$', // US Dollar
		'EUR': 'â‚¬', // Euro
		'CRC': 'â‚¡', // Costa Rican ColÃ³n
		'GBP': 'Â£', // British Pound Sterling
		'ILS': 'â‚ª', // Israeli New Sheqel
		'INR': 'â‚¹', // Indian Rupee
		'JPY': 'Â¥', // Japanese Yen
		'KRW': 'â‚©', // South Korean Won
		'NGN': 'â‚¦', // Nigerian Naira
		'PHP': 'â‚±', // Philippine Peso
		'PLN': 'zÅ‚', // Polish Zloty
		'PYG': 'â‚²', // Paraguayan Guarani
		'THB': 'à¸¿', // Thai Baht
		'UAH': 'â‚´', // Ukrainian Hryvnia
		'VND': 'â‚«', // Vietnamese Dong
	};	
	if(typeof currency_symbols[code]!=='undefined'){
		return currency_symbols[code];
	}else{
		if(code=="SAR"){
			return i18n.t("SAR");			
		}else if(code=="AED"){
			return i18n.t("AED");
		}else if(code=="QAR"){
			return i18n.t("QAR");
		}else if(code=="OMR"){
			return i18n.t("OMR");
		}else if(code=="KWD"){
			return i18n.t("KWD");
		}else if(code=="BHD"){
			return i18n.t("BHD");
		}else if(code=="EGP"){
			return i18n.t("EGP");
		}else{
			return code;
		}
	}
}

$('body').on('click','.closeLink',function(){			
		$(".travelerSelectWindow").removeClass('active');
	});
$('body').on('click',function(){
		$(".travelerSelectWindow").removeClass('active');
});
$('body').on('click','.modifyTog',function(){
	if($('#changesearch-options:visible').length==0)
	{
		$('.seachContainer .selectRoomsOptions').removeClass('active');
	}
	$('.seachContainer').slideToggle();
	$('.modifyTog').toggleClass('active');
	return false;
}); //hotel modify search on click func end

function removeValueFromArr(source, value, array){
    var index;
    if(typeof array!=="undefined"){
	    for (var i = 0; i < array.length; i++) {
	  	  if(value!=""){
		          if (array[i].source == source && array[i].value == value) {
		              index = i;
		              break;
		          }
	  	  }else{
	  		  if (array[i].source == source) {
		              index = i;
		              break;
		          }
	  	  }
	    }
    }
    if (index > -1){
        array.splice(index, 1);
    }
}

function generateFilterUI(array,classname){
	  classname = classname || 'youHaveFiltered';
    //get the target HTML UL for clear filters
    var clearFilterTarget = $('.'+classname).find('ul');
    clearFilterTarget.empty().append('<li class="yhfReset '+classname+'Reset">'+i18n.t("reset")+'</li>');
    //get the target HTML LI for clear filters
	var clearFilterli = clearFilterTarget.find('li');
    if(array.length>0){
  	  $('.'+classname).slideDown();
        for(var i=0; i<array.length; i++){
             var ulHtml  = '';
				  ulHtml  += '<li data-source="'+array[i].source+'" data-value="'+array[i].value+'" data-id="'+array[i].id+'">';
				  ulHtml  += array[i].display;
				  ulHtml  += '<span class="flaticon-delete30 _TabFilterRemove"></span></li>';
				  clearFilterTarget.find('li:last-child').before(ulHtml);
        }
    }else{
  	  $('.'+classname).slideUp();
    }
}

function isFilterInArray(source, value, array) {
    var index;
    for (var i = 0; i < array.length; i++) {
        if (array[i].source == source && array[i].value == value) {
            return false;
            break;
        }
    }
    return true;
}
$('._hBtn').on('click',function(){	
	$('.popupLand').removeAttr("style");
	var offsetTop = $(this).offset().top; 
	$('.bgoverlay, .popupLand').addClass('active');
	$('.popupLand').css('top',offsetTop+"px"); 
	var offsetPopTop = $('.popupLand').offset().top;
	$('html, body').animate({scrollTop:offsetPopTop-50}, 500);
	var target = $('.popupLand');
	var toDisplayPopup = $(this).attr('data-toIataDis');	
	var toHiddenPopup = $(this).attr('data-toIataHid');
	
	var dataTit = $(this).attr('data-tit');
	
	target.find('#countrycityhotelPOP').val(toDisplayPopup);
	target.find('#hotelsearchKeyPOP').val(toHiddenPopup);
	target.find('h2.title').text(dataTit);	
});

$('#flightsOnewayFHPOP').on('click',function(){
	$('#selectedFPHSOPOP').val('flightsOnewayFHPOP');
	$('.oneWayStayPOP, .fphonewayDPPOP').show();
	$('.twoWayStayPOP, .datepicker.departingPOP').hide();
	$('.datepicker.returningPOP').hide();
	
});	

$('#flightsRoundtripFHPOP').on('click',function(){
	$('#selectedFPHSOPOP').val('flightsRoundtripFHPOP');
	$('.oneWayStayPOP, .fphonewayDPPOP').hide();
	$('.twoWayStayPOP, .datepicker.departingPOP').show();
	$('.datepicker.returningPOP').show();
});	



function _Aval(a) {
	  var regex = /[\u0600-\u06FF]/;
	  return regex.test(a);
}
function _fnval(fnam) {
	  var regex = /^[a-zA-Z -]{2,30}$/;  
	  return regex.test(fnam);
}
function _mnval(fnam) {
	  var regex = /^[a-zA-Z -]{1,30}$/;  
	  return regex.test(fnam);
}
function _lnval(lnam) {
	  var regex = /^[a-zA-Z -]{1,30}$/;  
	  return regex.test(lnam);
}
function _evl(email){
	  //var regex = /^([a-zA-Z0-9_.+-])+\@(([a-zA-Z0-9-])+\.)([a-zA-Z0-9]{2,4})$/;
	  //return regex.test(email);
	  //var regex = /^([a-zA-Z0-9_.+-])+\@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})$/;
	  var regex = /^([a-zA-Z0-9_.-])+\@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/;
	  var dotLetter = '\\.';
	  var spiltEmail = email.split("@");
	  if(regex.test(email)){
		  if(spiltEmail[1].match(RegExp(dotLetter,'g') ).length > 2)
			  return false;
		  else
			  return true;
	  }
	  else
		  return false;
}
function _Nonly(n) {
	  var regex = /^[0-9]{1,25}$/;  
	  return regex.test(n);
}
/*
 * For National id, iqama id
 */
function _natnVal(n) {
	  var regex = /^[a-zA-Z0-9]{1,25}$/;  
	  return regex.test(n);
}
/*
 * For passport validation(alternate for keypress event not worked in android chrome)
 */
function _passportVal(n) {
	  var regex = /^[a-zA-Z0-9]{1,20}$/;  
	  return regex.test(n);
}

/*
* @Updated the follwoing code for showing error msg popup
*/
function growl_alert(msg,time){
	if(msg!=""){
		$('.alert_custom').find('.alert-msg').text(msg);	
		$('.alert_custom').show();
		setTimeout(function(){$('.alert_custom').fadeOut(); 
		},time || 10000);
		if($('.alert_custom').hasClass('alert-success')){
			setTimeout(function(){
				$('.alert_custom').removeClass('alert-success');
			},11000);
		}
		/* setTimeout(function(){
			
			$('.alert_custom').removeClass('alert-success');
		},11000); */
	}
}

$('body').on('click','button.close',function(){
	$('.alert_custom').hide();
	$('.alert_custom').removeClass('alert-success');
});
/**
 *---------For Top Destination RoomWidget Implementation stats------------
 *
 * This code is for populating rooms dynamically in Top Destination
 */ 
 $('body').on('click','.close',function(){
	$('.hotelmapview').hide();
});
 
 $('body').on('change','.noOfRoomsSel._topd',function(){
	var roomPicker = $('.roomsWidgetTop');
	var count = parseInt($(this).val());
	var totalRooms = calculateRoomsTopd();
	if(count == 1){
	$('.selectRooms').find('.roomTit').text(i18n.t("noOfRoom"));	
	}else{
	$('.selectRooms').find('.roomTit').text(i18n.t("noOfRooms"));
	}
	
    // adding rooms
	for(var i=totalRooms; i<count; i++){
		var clone = roomPicker.find('._topdroomcontainer:first').clone(true);
		clone.find('._roomCount').text(i+1);
		clone.find('.specifyChild').hide();
		roomPicker.find('._topdroomcontainer').last().after(clone);
	}
	//remove rooms
	var d = roomPicker.find('._topdroomcontainer');
	if(count<totalRooms){
		for(var i=count; i<totalRooms; i++){
			$(d[i]).remove();
		} 
	}
	calculateTopDestinationPax();
	//$(this).parents('.modifySearchDiv').find(' .modify-nav').show();
	//$(this).parents('.modifySearchDiv').find('.expand').addClass('active');
	$('.modify-nav li a').show().addClass('active');
	$('#changesearch-options').show();
	roomPicker.find('._topdroomcontainer').show();
	
 });
 function calculateRoomsTopd(){
	var roomPicker = $('._topdroomcontainer');
	return roomPicker.length;
}

function calculateTopDestinationPax(){
	var $adult = $('._topdroomcontainer .adult');
	var $child = $('._topdroomcontainer .child');
	var $childAge = $('._topdroomcontainer .specifyChild ');
	var aCount = [];
	var cCount = [];
	var caCount= [];
	var temp = [];
	var guestCnt=0;
	$adult.each(function(k,v){
		aCount.push(parseInt($(v).find('select').val()));
		guestCnt=guestCnt+parseInt($(v).find('select').val());
	});
	$child.each(function(k,v){
		cCount.push(parseInt($(v).find('select').val()));
		guestCnt=guestCnt+parseInt($(v).find('select').val());
	});
	$childAge.each(function(k,v){
		temp = [];
		var e = $(v).find('.custom-select-v3');
		e.each(function(key,val){
			if($(val).is(':visible')){					
				temp.push($(val).find('select').val());
			}else{
				temp.push(0);
			}
		});
		caCount.push(temp);
	});
	$('#hotelRoomsPOP').val($adult.length);
	$('#hiddenaPOP').val(aCount.toString());
	$('#hiddencPOP').val(cCount.toString());
	$('#hiddencaPOP').val(caCount.join('|'));
	$('#hkeyTotalGHiddenAlterPOP').val(guestCnt);
	
	
	$('#_rmWidStr').val(generateRoomWidgetString($('#hotelRoomsPOP').val(),$('#hkeyTotalGHiddenAlterPOP').val()));
}
 /**
 * This code is for populating child ages For TOp Destination
 */
$('body').on('change','._topdroomcontainer .childSelected',function(){
	var target = $(this).parents('._topdroomcontainer');
	console.log("target "+target);
	if($(this).val()==0){
		target.find('.specifyChild').hide();
	}
	else{
		if($(this).val() ==1){
			$(this).parents('._topdroomcontainer').find('._dynamicChildTxt').text(i18n.t("specifyChildrenAge"));	
		}else{
			$(this).parents('._topdroomcontainer').find('._dynamicChildTxt').text(i18n.t("specifyChildrenAges"));	
		}
		calculateAgeElm(target,$(this).val());
		target.find('.specifyChild').show();
	}
	calculateTopDestinationPax();
});
function calculateAgeElm(elm,count){
	var target = elm.find('.specifyChild .custom-select-v3');		
	target.hide();
	for(var i=0; i<parseInt(count); i++){
		//$(target[i]).find('select option').eq(0).prop('selected', true)
		$(target[i]).show();
	}
}
function generateRoomWidgetString(noRooms,noGuests){
	var roomStr="";
	 var guestStr="";
	 
	 
	 if(noRooms>1){
		  roomStr= noRooms+" "+ i18n.t("room_plural")
	 }
	 else{
		  roomStr= noRooms+" "+ i18n.t("room")
	 }
		 
	 if(noGuests>1){
		  guestStr= noGuests+" "+ i18n.t("guests")
	 }
	 else{
		  guestStr= noGuests+" "+ i18n.t("guest")
	 }
	 
	 var str=roomStr+',  '+guestStr;	 
	return str;
}	
/**
 *  This is for updating the input hidden values on changing the adults and chind ages For Top Destination
 */
$('body').on('change','._topdroomcontainer .adultSelected, ._topdroomcontainer .specifyChildrenAges select',function(){
	calculateTopDestinationPax();
});
/**
 *---------For Top Destination RoomWidget Implementation ends Here------------ 
*/


/**
 * Method to truncate HTML List to a limited number of reocrd by adding a Less/More view option
 * @param idArray Javascript Array of HTML List id's
 */
function ULlessMore(idArray){
	if(idArray!="" && idArray.length>0){
		for(var i=0; i<idArray.length; i++){
			$('ul._slm').each(function(){
				if($(this).attr('id')==idArray[i]){	
					if ($(this).children().length == 5) {
						$(this).children('li:gt(4)').hide(); 
					}else if($(this).children().length > 5){
						$(this).children('li:gt(4)').hide(); 
						$(this).after('<a href="javascript:void(0);" class="showHideLessMore showMore">'+((selectedLang=='en')?"Show More":"Ø¹Ø±Ø¶ Ø§Ù„Ù…Ø²ÙŠØ¯")+'  </a>');
					}
				}
			});
		}
	}		
}
/**
 * Hide/Show for Flight/Hotel/Flight+Hotel filters showmore and showless 
 */
$('body').on('click', '.showHideLessMore', function(e) {

    e.preventDefault();
    var $this = $(this);
    if ($this.hasClass('showMore')) {
		$this.text(i18n.t('showLesLabel'));
		$this.removeClass('showMore');
        $this.addClass('showLess');
    } else { if ($this.hasClass('showLess')) {
		$this.text(i18n.t('showMoreLabel'));
		$this.removeClass('showLess');
		$this.addClass('showMore');
    } }
    $this.prev('ul._slm').children('li:gt(4)').slideToggle();
    $('ul._slm').not($this.prev('ul._slm')).each(function() {
        $(this).children('li:gt(4)').hide();
		$(this).next('.showHideLessMore').removeClass("showLess").addClass('showMore').text(i18n.t('showMoreLabel'));
		
    });
});

/**
 * Mobile Number Field Setting Country Flag 
 */
function setCounryFlag(){
	try{
		var oDropdown = $("#countries").fmDropdown({
		on:{
			create:function(){
				setTimeout(function(){
					$('#countries_title .ddlabel').text('');
					var d = oDropdown.getData();
					var ccFH1 = $('.country-code-hdv');
					var ccFH2 = $('.country-ff-hdv');
					var ccFH3 = $('.country-cm-hdv');					

					//Update Area Code Value
					ccFH1.val(d.data.value);	
					ccFH1.attr('value',d.data.value);
					//Update Country Code Value
					ccFH2.val($(d.option).attr('data-cc-code'));	
					ccFH2.attr('value',$(d.option).attr('data-cc-code'));
					//Update Country Name Value
					ccFH3.val($(d.option).attr('data-title'));	
					ccFH3.attr('value',$(d.option).attr('data-title'));
					$('#phoneCountryCode').val('+'+d.data.value);
				},80);
			},
			change: function(data, ui) {
				var d = oDropdown.getData();
				var ccFH1 = ui.parents('.app-dp').find('.country-code-hdv');
				var ccFH2 = ui.parents('.app-dp').find('.country-ff-hdv');
				var ccFH3 = ui.parents('.app-dp').find('.country-cm-hdv');
				var ccFH4 = ui.parents('.app-dp').find('#phoneCountryCode');
				var ccFH5 = ui.parents('.app-dp').find('._phone-number');
				var ccFH6 = ui.parents('.app-dp').find('#phoneCountryName');
				
				$('#countries_title .ddlabel').hide();
				setTimeout(function(){
					$('#countries_title .ddlabel').text('');
				},80);
				//Update Area Code Value
				ccFH1.val(data.value);	
				ccFH1.attr('value',data.value);
				//Update Country Code Value
				ccFH2.val($(d.option).attr('data-cc-code'));	
				ccFH2.attr('value',$(d.option).attr('data-cc-code'));
				//Update Country Name Value
				ccFH3.val($(d.option).attr('data-title'));	
				ccFH3.attr('value',$(d.option).attr('data-title'));
				//Update Area Code Value
				ccFH4.val('+'+data.value);	
				ccFH4.attr('value','+'+data.value);
				ccFH5.focus();
				ccFH6.val($(d.option).attr('data-title'));
				ccFH6.attr('value',$(d.option).attr('data-title'));
				
			}
		}
	}).data("dd");
	var updateValCode = 0;
	if(typeof $('.country-code-hdv').val()=='undefined' || $('.country-code-hdv').val()==""){
		var domainType=$('#domainNa').val();		
		 if(typeof domainType=='undefined' || domainType==='Global') {
			 updateValCode = 966;
		 }else{
			 updateValCode = 20;
		 }
	}else{
		updateValCode = $('.country-code-hdv').val();
	}
	oDropdown.setIndexByValue(updateValCode);
	//Handling scroll issue on Android & IOS Browser
	touchScroll('countries_child');
	}catch(e){
		console.info("FM-DropDown Load Error:");
		console.log(e);		
	}
}

function touchScroll(id){
	if(isTouchDevice()){ //if touch events exist...
		var el=document.getElementById(id);
		var scrollStartPosY=0;
		var scrollStartPosX=0;

		document.getElementById(id).addEventListener("touchstart", function(event) {
			scrollStartPosY=this.scrollTop+event.touches[0].pageY;
			scrollStartPosX=this.scrollLeft+event.touches[0].pageX;
			//event.preventDefault(); // Keep this remarked so you can click on buttons and links in the div
		},false);

		document.getElementById(id).addEventListener("touchmove", function(event) {
			// These if statements allow the full page to scroll (not just the div) if they are
			// at the top of the div scroll or the bottom of the div scroll
			// The -5 and +5 below are in case they are trying to scroll the page sideways
			// but their finger moves a few pixels down or up.  The event.preventDefault() function
			// will not be called in that case so that the whole page can scroll.
			if ((this.scrollTop < this.scrollHeight-this.offsetHeight &&
				this.scrollTop+event.touches[0].pageY < scrollStartPosY-5) ||
				(this.scrollTop != 0 && this.scrollTop+event.touches[0].pageY > scrollStartPosY+5))
					event.preventDefault();	
			if ((this.scrollLeft < this.scrollWidth-this.offsetWidth &&
				this.scrollLeft+event.touches[0].pageX < scrollStartPosX-5) ||
				(this.scrollLeft != 0 && this.scrollLeft+event.touches[0].pageX > scrollStartPosX+5))
					event.preventDefault();	
			this.scrollTop=scrollStartPosY-event.touches[0].pageY;
			this.scrollLeft=scrollStartPosX-event.touches[0].pageX;
		},false);
	}
}

/* This function makes a div scrollable with android and iphone */

function isTouchDevice(){
	/* Added Android 3.0 honeycomb detection because touchscroll.js breaks
		the built in div scrolling of android 3.0 mobile safari browser */
	if((navigator.userAgent.match(/android 3/i)) ||
		(navigator.userAgent.match(/honeycomb/i)))
		return false;
	try{
		document.createEvent("TouchEvent");
		return true;
	}catch(e){
		return false;
	}
}
function getCountryList(){
	$.get('/stdCountries',function(res){
		if(res =='ERROR'){
			location.href="/flight/error"; 
			return;
		}
		else{			
			generateCountryCodeSelectV2(res);
			setCounryFlag();
			return res;
		}
	});
}

function getCountryListmyaccount(){
	$.get('/stdCountries',function(res){
		if(res =='ERROR'){
			location.href="/flight/error"; 
			return;
		}
		else{			
			generateCountryCodeSelectV2(res);
			setCounryFlag();
			return res;
		}
	});
}

/**
 * Generationg Country list drop down with country code and country name
 *  @param obj
 */
function generateCountryCodeSelectV2(obj){	
	var $target= $('#countries');
	var ccObj = obj.res;
	//console.log(ccObj);
	$target.each(function(){
	var html1 = [];
	var html2 = [];
		 $(this).empty();
		 
		 if(typeof ccObj!="undefined" && ccObj!=""){
			for(i in ccObj){
				if(ccObj[i].CC == "SA" || ccObj[i].CC == "AE" || ccObj[i].CC == "OM" || ccObj[i].CC == "QA" || ccObj[i].CC == "KW" || ccObj[i].CC == "BH"){
					if(ccObj[i].CC == "SA"){
						html1.splice(0, 0, '<option value="'+ccObj[i].CAC+'" data-image="/common/themes/v1/images/spacer.gif" data-cc-code="'+ccObj[i].CAC+'" data-imagecss="'+ccObj[i].CC.toLowerCase()+' fnone cc-flag" >'+ccObj[i].CN+' + '+ccObj[i].CAC+'</option>');
					}
					if (ccObj[i].CC == "AE") {
						html1.splice(1, 0, '<option value="'+ccObj[i].CAC+'" data-image="/common/themes/v1/images/spacer.gif" data-cc-code="'+ccObj[i].CAC+'" data-imagecss="'+ccObj[i].CC.toLowerCase()+' fnone cc-flag" >'+ccObj[i].CN+' + '+ccObj[i].CAC+'</option>');
					}
					if (ccObj[i].CC == "OM") {
						html1.splice(0, 0, '<option value="'+ccObj[i].CAC+'" data-image="/common/themes/v1/images/spacer.gif" data-cc-code="'+ccObj[i].CAC+'" data-imagecss="'+ccObj[i].CC.toLowerCase()+' fnone cc-flag" >'+ccObj[i].CN+' + '+ccObj[i].CAC+'</option>');
					}
					if (ccObj[i].CC == "QA") {
						html1.splice(1, 0, '<option value="'+ccObj[i].CAC+'" data-image="/common/themes/v1/images/spacer.gif" data-cc-code="'+ccObj[i].CAC+'" data-imagecss="'+ccObj[i].CC.toLowerCase()+' fnone cc-flag" >'+ccObj[i].CN+' + '+ccObj[i].CAC+'</option>');
					}
					if (ccObj[i].CC == "KW") {
						html1.splice(0, 0, '<option value="'+ccObj[i].CAC+'" data-image="/common/themes/v1/images/spacer.gif" data-cc-code="'+ccObj[i].CAC+'" data-imagecss="'+ccObj[i].CC.toLowerCase()+' fnone cc-flag" >'+ccObj[i].CN+' + '+ccObj[i].CAC+'</option>');
					}
					if(ccObj[i].CC == "BH") {
						html1.splice(0, 0, '<option value="'+ccObj[i].CAC+'" data-image="/common/themes/v1/images/spacer.gif" data-cc-code="'+ccObj[i].CAC+'" data-imagecss="'+ccObj[i].CC.toLowerCase()+' fnone cc-flag" >'+ccObj[i].CN+' + '+ccObj[i].CAC+'</option>');
					}
				}
				else{
					html2.push('<option value="'+ccObj[i].CAC+'" data-image="/common/themes/v1/images/spacer.gif" data-cc-code="'+ccObj[i].CAC+'" data-imagecss="'+ccObj[i].CC.toLowerCase()+' fnone cc-flag" >'+ccObj[i].CN+' + '+ccObj[i].CAC+'</option>');
				}
				
			}
		}
		$(this).append(html1.join(''));
		$(this).append(html2.join(''));
	});
}

/**
 * This is for auto populating Room widget
 */
function autoPopulateNewRoomWidget(){
	var defaultSelect = $('.selectRoomsOptions select.noOfRoomsSel');
	var noRSelection = $('.selectRooms select.noOfRoomsSel._sub');
	var getRoomElm = $('input[name=hiddena]'), getRoom=[];
	if(getRoomElm.length>0){
		getRoom = getRoomElm.attr('data-val').split(',');
	}
	var getChildElm = $('input[name=hiddenc]'), getChild=[];
	if(getChildElm.length>0){
		getChild = getChildElm.attr('data-val').split(',');
	}
	var getAgeArrElm = $('input[name=hiddenca]'), getAgeArr=[];
	if(getAgeArrElm.length>0){
		getAgeArr = getAgeArrElm.attr('data-val').split('|');
	}	
	var roomWidgetElm = $('.optWidget');
	var totalRooms = calculateRooms();
	var caObj = [];
	var adults=0,childs=0;
	if(getRoom.length==1){
		adults = getRoom[0]; 
	}else{
		for(var i in getRoom){
			adults = parseInt(adults)+parseInt(getRoom[i]);
		}
	}
	if(getChild.length==1){
		childs = getChild[0]; 
	}else{
		for(var i in getChild){
			childs = parseInt(childs)+parseInt(getChild[i]);
		}
	}
	$('#hkeyTotalGHiddenAlter').val(parseInt(adults)+parseInt(childs));
	$('#_rmWidStr').val(generateRoomWidgetString(getRoom.length,$('#hkeyTotalGHiddenAlter').val()));
	var noGuests=$('#hkeyTotalGHiddenAlter').val();
	
	if(getRoom.length==1 && getRoom[0]<=2 && getChildElm.attr('data-val')==0){
		defaultSelect.val(getRoom[0]||1);
		roomWidgetElm.show();
		//roomWidgetElm.find('._htlroomcontainer').hide();
		roomWidgetElm.find('.selectRooms').show();
		roomWidgetElm.find('.adultSelected').val(noGuests);
		roomWidgetElm.find('.specifyChild').hide();
	}
	else{
	//if(getRoom.length>=1 && getChildElm.val()!=0 && getRoom[0]>=2){
		defaultSelect.parents('.selectRoomsOptions').hide();
		roomWidgetElm.find('.specifyChild').hide();
		
		//Populate number of rooms
		for(var i=totalRooms; i<getRoom.length; i++){
			var clone = roomWidgetElm.find('._htlroomcontainer:first').clone(true);
			clone.find('._roomCount').text(i+1);
			clone.find('.specifyChild').hide();
			clone.find('.adultSelected').val(getRoom[i]);
			roomWidgetElm.find('._htlroomcontainer').last().after(clone);
		}		
		if(getAgeArr.length>0){
			for(var i=0; i<getAgeArr.length; i++){				
				var sp = getAgeArr[i].split(',');
				var caTemp = [];
				for(var e=0; e<sp.length; e++){
					var countCA = parseInt(sp[e]);
					if(countCA!=0){
						caTemp.push(countCA);
					}
				}		
				caObj.push(caTemp);				
			}	
		}
		roomWidgetElm.find('._htlroomcontainer').each(function(k,v){
			$(this).find('.adultSelected').val(getRoom[k]);
			$(this).find('.childSelected').val(getChild[k]);
			if(getChild[k]!==undefined){
				if(parseInt(getChild[k])!==0){
					$(this).find('.specifyChild').show();
					$(this).find('.specifyChild').find('.custom-select-v3').hide();
					var ageSel = $(this).find('.specifyChild').find('.custom-select-v3');
					for(var l=0; l<parseInt(getChild[k]); l++){
						$(ageSel[l]).show();
						if(caObj[k]!==undefined){
							$(ageSel[l]).find('select').val(caObj[k][l]);
						}
					}
				}
			}
		});
		roomWidgetElm.show();
		$('.modifySearchDiv').find(' .modify-nav').show();
		//$('.modifySearchDiv').find('.expand').addClass('active');
		//$('#changesearch-options').show();
		noRSelection.val(getRoom.length);
		noRSelection.parents('.selectRooms').show();
	}
	
}

//calculateRooms
function calculateRooms(){
		var roomPicker = $('.roomsWidget').find('._htlroomcontainer');
		return roomPicker.length;
}
//end
function btnLoadingAnimation(elm){
	elm.addClass('LoadBtn');
	elm.val(i18n.t('processingTxt'));
}

function unicodeConverter(data){
	var datas =data;
	var r = /\\u([\d\w]{4})/gi;
	datas = datas.replace(r, function (match, grp) {
		  return String.fromCharCode(parseInt(grp, 16)); } );
	var d = unescape(datas);
	return d;
}
/**
*Don't refresh popup
*/

function dontRefreshPopup(){
	$('#dontRefreshPopup').modal({
		 show: true,
		 keyboard: false,
		 backdrop:'static'
	});
		
}
/**
*Don't refresh popup for book now paylater
*/
	function dontRefreshPopupForBnpl(){
	$('#dontRefreshPopupForbnpl').modal({
	 show: true,
	 keyboard: false,
	 backdrop:'static'
	 });
		
	}

	
	/*
	 *Flight Traveller details page Session Popup  // Added by Raghava
	 */ 
	function showSesssionExpiryPopup(){
		$('.modal').hide(); // hide other pop-ups if any
		$('#showSesssionExpiryPopup').modal({
		show: true,
		keyboard: false,
		backdrop:'static'
		});
	}
	
	function noRefreshAction(){		
		 $('head').append('<script src="/common/themes/v2/js/jlibs/pageRefresh.js"></script>');		
	}

	function saveGuestTrack(startPoint){
		var url = window.location.href.split('?')[0];
		var querystr = window.location.href.split('?')[1];
		var obj = {
				startPoint:startPoint,
				status:"Clicked",
				url:url,
				querystr:querystr,
				localization:false
		};
		$.post('/saveGuestTrack',obj,function(data){
		});
	}
	

	
	
	
$(window).resize(function() {

function ScaleSlider() {
	var parentWidth = $('#slider1_container').parent().width();
	if (parentWidth) {
		jssor_slider1.$ScaleWidth(parentWidth);
	}
	else
		window.setTimeout(ScaleSlider, 30);
	}
//Scale slider after document ready
ScaleSlider();

$(window).bind("load", ScaleSlider);
$(window).bind("resize", ScaleSlider);
$(window).bind("orientationchange", ScaleSlider);
 
});							 

function removeParam(key, sourceURL) {
    var rtn = sourceURL.split("?")[0],
        param,
        params_arr = [],
        queryString = (sourceURL.indexOf("?") !== -1) ? sourceURL.split("?")[1] : "";
    if (queryString !== "") {
        params_arr = queryString.split("&");
        for (var i = params_arr.length - 1; i >= 0; i -= 1) {
            param = params_arr[i].split("=")[0];
            if (param === key) {
                params_arr.splice(i, 1);
            }
        }
        rtn = rtn + "?" + params_arr.join("&");
    }
    return rtn;
}
	
function changeThemes(){
	$.post('/changeThemes',function(status){
		if(status.status == "success"){
			var url = window.location.href;
		  window.location.href =url;
		}
	});
}	

function prePopulatePassengerDetails(){
	
	//pre poulate for fare Chnage
		if($('#prePopulatePassengerDetails')  && $('#prePopulatePassengerDetails').val()){
			//console.log('prePopulatePassengerDetails exists');
			var prePopulatePassengerDetails = JSON.parse($('#prePopulatePassengerDetails').val());
			//console.log('prePopulatePassengerDetails');console.log(prePopulatePassengerDetails);
			$('._txtEmail').val(prePopulatePassengerDetails.email);
			$('._txtPhone').val(prePopulatePassengerDetails.ph);
			for(var paxIndex in prePopulatePassengerDetails.paxList.at){
				$('._txtFName:eq('+paxIndex+')').val(prePopulatePassengerDetails.paxList.at[paxIndex]['gn']);
				//$('._txtMName:eq('+paxIndex+')').val(prePopulatePassengerDetails.paxList.at[paxIndex]['gn']);
				$('._txtLName:eq('+paxIndex+')').val(prePopulatePassengerDetails.paxList.at[paxIndex]['sn']);
				$('._txtPNum:eq('+paxIndex+')').val(prePopulatePassengerDetails.paxList.at[paxIndex].doc.di);
				$('._txtTitle :eq('+paxIndex+')').val(prePopulatePassengerDetails.paxList.at[paxIndex].title);
			//	$('#phoneCountryCode:eq('+paxIndex+')').val(prePopulatePassengerDetails.paxList.at[paxIndex].doc.di);
				//$('._txtPNum:eq('+paxIndex+')').val(prePopulatePassengerDetails.paxList.at[paxIndex].doc.di);
				prePopulateDateUpdate($('._dob:eq('+paxIndex+')') ,prePopulatePassengerDetails.paxList.at[paxIndex].doc.bd);
				prePopulateDateUpdate($('._passportExpiryDate:eq('+paxIndex+')') ,prePopulatePassengerDetails.paxList.at[paxIndex].doc.exd);
				prePopulateDateUpdate($('._passportIssuedDate:eq('+paxIndex+')') ,prePopulatePassengerDetails.paxList.at[paxIndex].doc.efd);
			
			//Nationality Pre populating 
			$('._nationality:eq('+paxIndex+')').each(function(){
				if($(this).parents('.custom-select-v3').is(':visible')){
					$(this).parents('.custom-select-v3').find('a span').text('');
					$(this).parents('.custom-select-v3').find('a span').text($(this).parents('.custom-select-v3').find('ul li[data-value="'+prePopulatePassengerDetails.paxList.at[paxIndex].doc.dia+'"]').attr('data-cname'));
					var nationality = $(this).parents('.custom-select-v3').find('._nationality option[value="'+prePopulatePassengerDetails.paxList.at[paxIndex].doc.dia+'"]');
					nationality.prop('selected','selected');
				}
			});
			//Issuing Country 
			$('._issuingCountry:eq('+paxIndex+')').each(function(){
				if($(this).parents('.custom-select-v3').is(':visible')){
					$(this).parents('.custom-select-v3').find('a span').text('');
					$(this).parents('.custom-select-v3').find('a span').text($(this).parents('.custom-select-v3').find('ul li[data-value="'+prePopulatePassengerDetails.paxList.at[paxIndex].doc.dil+'"]').attr('data-cname'));
					var nationality = $(this).parents('.custom-select-v3').find('._issuingCountry option[value="'+prePopulatePassengerDetails.paxList.at[paxIndex].doc.dil+'"]');
					nationality.prop('selected','selected');
				}
	});
			
			}
		}
	
	
}	
function dividerFun(frm,to,frmHdn,toHdn,fphSearchKey,depFlightHotelSearchKey){
	var frmVal = $(frm).val();
	var frmTitle = $(frm).attr('title');
	var frmIata = $(frm).attr('data-iata');
	var toVal = $(to).val();
	var toTitle = $(to).attr('title'); 
	var toIata = $(to).attr('data-iata');
	var frmHdnVal = $(frmHdn).val();
	var toHdnVal = $(toHdn).val();
    var depFlightHotelSearchKeyVal = $(depFlightHotelSearchKey).val();
    var fphSearchKeyVal = $(fphSearchKey).val(); 	
	
	if(frmVal!="" && toVal!=""){
		
		$(frm).closest('.ftdField').find('.swaps').toggleClass("reswap");   
		$(frm).val(toVal);
        $(to).val(frmVal);
		$(frmHdn).val(toHdnVal);
        $(toHdn).val(frmHdnVal);
		$(frm).attr("title", toTitle);
		$(to).attr("title", frmTitle);
		$(frm).attr("data-iata", toIata);
		$(to).attr("data-iata", frmIata);
		if(depFlightHotelSearchKey != "" || depFlightHotelSearchKey != "undefined")
		{
			$(depFlightHotelSearchKey).val(fphSearchKeyVal);
            $(fphSearchKey).val(depFlightHotelSearchKeyVal);
		}
		
	}
	
}

function loadSwapFunction(){
	
	$("body").on("mousedown",'#flightsRoundtrip-tab .swaps', function(){
		dividerFun('#roundFrom','#roundTo','#roundFromId','#toRoundID');      
     });
	 
	 $("body").on("mousedown",'#flightsOneway-tab .swaps', function(){
		dividerFun('#onewayFrom','#onewayTo','#fromID','#toID');       
     });
	 
	 $("body").on("mousedown",'#flightsMulticity-tab .multic1 .swaps', function(){
		dividerFun('#multicityFrom1','#multicityTo1','#multiFromId1','#multiToID1');       
     });
	 
	 $("body").on("mousedown",'#flightsMulticity-tab .multic2 .swaps', function(){
		dividerFun('#multicityFrom2','#multicityTo2','#multiFromId2','#multiToID2');       
     });
	 
	 $("body").on("mousedown",'#flightsMulticity-tab .multic3 .swaps', function(){
		dividerFun('#multicityFrom3','#multicityTo3','#multiFromId3','#multiToID3');       
     });
	 
	 $("body").on("mousedown",'#flightsMulticity-tab .multic4 .swaps', function(){
		dividerFun('#multicityFrom4','#multicityTo4','#multiFromId4','#multiToID4');       
     }) ;
	 
	 $("body").on("mousedown",'#flightsMulticity-tab .multic5 .swaps', function(){
		dividerFun('#multicityFrom5','#multicityTo5','#multiFromId5','#multiToID5');       
     });
	 
	 $("body").on("mousedown",'#flightsMulticity-tab .multic6 .swaps', function(){
		dividerFun('#multicityFrom6','#multicityTo6','#multiFromId6','#multiToID6');       
     });
	 
	 $("body").on("mousedown",'#flightsRoundtripFH-tab .swaps', function(){
		dividerFun('#roundFromFPH','#roundToFPH','#roundFromIdFH','#toRoundIDFH','#flighthotelsearchKey','#depFlightHotelSearchKey');       
		
     });
	 
}

$(document).ready(function () {
		 
    loadSwapFunction();
    
    $('body').on('click', '.validate_fsrt', function(){
    	$(".form-control").removeClass("error");
    	$('html, body').animate({scrollTop:0});	
    	
    	if($("#domainNa").val()=="Global"){
    	   $("#phoneCountryCode").val("+966");
    	   $("#countries_title img").attr("class","sa fnone cc-flag fnone");
    	   $("#countries_title img").attr("src","/common/themes/v1/images/spacer.gif");
    	   $("#countries_child ul li").removeClass("selected");
    	   $("#countries_child ul li:first").addClass("selected");
       	}else{
    	   $("#phoneCountryCode").val("+20");
    	   $("#countries_title img").attr("class","eg fnone cc-flag fnone");
    	   $("#countries_title img").attr("src","/common/themes/v1/images/spacer.gif");
    	   $("#countries_child ul li").removeClass("selected");
    	   $("#countries_child ul li").each(function(){
    		   if($(this).find("img").hasClass("eg")){
    			   $(this).addClass("selected");
    			   return false;
    		   }
    	   });
       }    	
    });
    
});

/** Global Variable Detection Egypt **/
var globalVarEgypt = $('html').attr('lang');
/**/

/**
 Top Flights in Desktop (QuickLinks) 
**/

function topRouteFlightFnDsk() {
	if (globalVarEgypt=='ar-eg' || globalVarEgypt=='en-eg') {	
				var topFltRoutes = [
				{
					"fromDisplay" 		:  	i18n.t("airportCAI"),	
					"toDisplay"   		:  	i18n.t("airportSSH"),
					"fromToRoute" 		:  	i18n.t("cairo") +' - '+ i18n.t("sharm"),	
					"fromHidden"		: 	"CAI",	
					"toHidden"			: 	"SSH"	
				},	
				{
					"fromDisplay" 		:  	i18n.t("airportCAI"),
					"toDisplay"   		:  	i18n.t("airportHUR"),
					"fromToRoute" 		:  	i18n.t("cairo") +' - '+ i18n.t("hurghada"),
					"fromHidden"		: 	"CAI",		
					"toHidden"			: 	"HRG"		
				},
				{
					"fromDisplay" 		:  	i18n.t("airportCAI"),
					"toDisplay"   		:  	i18n.t("airportJED"),
					"fromToRoute" 		:  	i18n.t("cairo") +' - '+ i18n.t("jeddah"),
					"fromHidden"		: 	"CAI",		
					"toHidden"			: 	"JED"		
				},
				{
					"fromDisplay" 		:  	i18n.t("airportCAI"),
					"toDisplay"   		:  	i18n.t("airportRUH"), 
					"fromToRoute" 		:  	i18n.t("cairo") +' - '+ i18n.t("riyadh"),
					"fromHidden"		: 	"CAI",		
					"toHidden"			: 	"RUH"		
				},
				{
					"fromDisplay" 		:  	i18n.t("airportSSH"), 	
					"toDisplay"   		:  	i18n.t("airportCAI"),
					"fromToRoute" 		:  	i18n.t("sharm") +' - '+ i18n.t("cairo"),
					"fromHidden"		: 	"SSH",		
					"toHidden"			: 	"CAI"		
				},
				{
					"fromDisplay" 		:  	i18n.t("airportHUR"),
					"toDisplay"   		:  	i18n.t("airportCAI"),
					"fromToRoute" 		:  	i18n.t("hurghada") +' - '+ i18n.t("cairo"),
					"fromHidden"		: 	"HRG",
					"toHidden"			: 	"CAI"		
				},
				{
					"fromDisplay" 		:  	i18n.t("airpotASW"), 	
					"toDisplay"   		:  	i18n.t("airportCAI"),
					"fromToRoute" 		:  	i18n.t("aswan") +' - '+ i18n.t("cairo"),
					"fromHidden"		: 	"ASW",		
					"toHidden"			: 	"CAI"		
				},
				{
					"fromDisplay" 		:  	i18n.t("airportCAI"), 	
					"toDisplay"   		:  	i18n.t("airportDXB"),
					"fromToRoute" 		:  	i18n.t("cairo") +' - '+ i18n.t("dubai"),
					"fromHidden"		: 	"CAI",		
					"toHidden"			: 	"DXB"
				}];
		}		
		else  {
				var topFltRoutes = [
				{
					"fromDisplay" 		:  	i18n.t("airportRUH"), 	
					"toDisplay"   		:  	i18n.t("airportDXB"),
					"fromToRoute" 		:  	i18n.t("riyadh") +' - '+ i18n.t("dubai"),
					"fromHidden"		: 	"RUH",		
					"toHidden"			: 	"DXB"		
				},	
				{
					"fromDisplay" 		:  	i18n.t("airportJED"), 	
					"toDisplay"   		:  	i18n.t("airportCAI"),
					"fromToRoute" 		:  	i18n.t("jeddah") +' - '+ i18n.t("cairo"),
					"fromHidden"		: 	"JED",		
					"toHidden"			: 	"CAI"		
				},
				{
					"fromDisplay" 		:  	i18n.t("airportRUH"), 	
					"toDisplay"   		:  	i18n.t("airportMNL"),
					"fromToRoute" 		:  	i18n.t("riyadh") +' - '+ i18n.t("manila"),
					"fromHidden"		: 	"RUH",		
					"toHidden"			: 	"MNL"		
				},
				{
					"fromDisplay" 		:  	i18n.t("airportRUH"), 	
					"toDisplay"   		:  	i18n.t("airportJED"),
					"fromToRoute" 		:  	i18n.t("riyadh") +' - '+ i18n.t("jeddah"),
					"fromHidden"		: 	"RUH",		
					"toHidden"			: 	"JED"		
				},
				{
					"fromDisplay" 		:  	i18n.t("airportJED"), 	
					"toDisplay"   		:  	i18n.t("airportDXB"),
					"fromToRoute" 		:  	i18n.t("jeddah") +' - '+ i18n.t("dubai"),
					"fromHidden"		: 	"JED",		
					"toHidden"			: 	"DXB"		
				},
				{
					"fromDisplay" 		:  	i18n.t("airportRUH"), 	
					"toDisplay"   		:  	i18n.t("airportLHE"),
					"fromToRoute" 		:  	i18n.t("riyadh") +' - '+ i18n.t("lahore"),
					"fromHidden"		: 	"RUH",		
					"toHidden"			: 	"LHE"		
				},
				{
					"fromDisplay" 		:  	i18n.t("airportRUH"), 	
					"toDisplay"   		:  	i18n.t("airportLHR"),
					"fromToRoute" 		:  	i18n.t("riyadh") +' - '+ i18n.t("london"),
					"fromHidden"		: 	"RUH",		
					"toHidden"			: 	"LHR"		
				},
				{
					"fromDisplay" 		:  	i18n.t("airportJED"),
					"toDisplay"   		:  	i18n.t("airportRUH"),
					"fromToRoute" 		:  	i18n.t("jeddah") +' - '+ i18n.t("riyadh"),
					"fromHidden"		: 	"JED",
					"toHidden"			: 	"RUH"
				}];
			}		
	for(var i = 0; i < topFltRoutes.length; i++) {
		var rT = topFltRoutes[i];		
		var myLoop = '<a class="fltLink" data-fromDisplay="'+rT.fromDisplay+'" data-fromHidden="'+rT.fromHidden+'" data-toDisplay="'+rT.toDisplay+'" data-toHidden="'+rT.toHidden+'">'+rT.fromToRoute+'</a>';		
		$(".fastBookingTags.fltFast").append(myLoop);
	}
}
/**
 Top Destinations & Hotels  (QuickLinks)
**/
function topHotelsSrchFnDsk() {
	
	if (globalVarEgypt=='ar-eg' || globalVarEgypt=='en-eg') {
		// Displaying all data for egypt location
		var topHotelsFn = [	
							{
								"type"				:	"City",
								"dataDisplay"		:	i18n.t("cityDescSharm"),
								"dataHidden"		:	"City>>51025>>Sharm el Sheikh>>South Sinai Governorate>>Egypt>>27.85183>>34.30499>>EG",	
								"cityName" 			:  	i18n.t("sharmElSheikh"),
								"countryName"  		:  	i18n.t("egypt")
							},
							{		
								"type"				:	"City",
								"dataDisplay"		:	i18n.t("cityDescHurghada"),
								"dataHidden"		:	"City>>51006>>Hurghada>>Red Sea Governorate>>Egypt>>27.25738>>33.81291>>EG",
								"cityName" 			:  	i18n.t("hurghada"),
								"countryName"   	:  	i18n.t("egypt")
							},	
							{		
								"type"				:	"City",
								"dataDisplay"		:	i18n.t("cityDescDubai"),
								"dataHidden"		:	"City>>50257>>Dubai>>Dubai Emirate>>United Arab Emirates>>25.25817>>55.30472>>AE",
								"cityName" 			:  	i18n.t("dubai"),
								"countryName"   	:  	i18n.t("uae")
							},		
							{		
								"type"				:	"City",
								"dataDisplay"		:	i18n.t("cityDescKuala"),
								"dataHidden"		:	"City>>50476>>Kuala Lumpur>>Kuala Lumpur>>Malaysia>>3.1412>>101.68653>>MY",
								"cityName" 			:  	i18n.t("kualalampur"),
								"countryName"   	:  	i18n.t("malaysia")
							},
							{		
								"type"				:	"City",
								"dataDisplay"		:	i18n.t("cityDescMarsa"),
								"dataHidden"		:	"City>>56944>>Marsa Alam>>Red Sea Governorate>>Egypt>>25.06305>>34.89005>>EG",
								"cityName" 			:  	i18n.t("marsa"),
								"countryName"   	:  	i18n.t("egypt")
							},
							{
								"type"				:	"City",
								"dataDisplay"		:	i18n.t("cityDescBali"),
								"dataHidden"		:	"City>>50072>>Bali>>Bali>>Indonesia>>-8.65>>115.21667>>ID",
								"cityName"			:   i18n.t("bali"),
								"countryName"   	:  	i18n.t("indonesia")
							},
							{
								"type"				:	"City",
								"dataDisplay"		:	i18n.t("cityDescTbilisi"),
								"dataHidden"		:	"City>>55250>>Tbilisi>>Tbilisi>>Georgia>>41.69411>>44.83368>>GE",
								"cityName" 		 	:   i18n.t("tbilisi"),
								"countryName"   	:  	i18n.t("Georgia")
							},
							{
								"type"				:	"City",
								"dataDisplay"		:	i18n.t("cityDescBangkok"),
								"dataHidden"		:	"City>>50079>>Bangkok>>Bangkok>>Thailand>>13.75398>>100.50144>>TH",
								"cityName" 		 	:   i18n.t("Bangkok"),
								"countryName"   	:  	i18n.t("thailand")
							}
						];
					}
		
 else  {
	// Displaying all data for Global
	var topHotelsFn = [
	
	
	{
		"type"				:	"City",
		"dataDisplay"		:	i18n.t("cityDescDubai"),
		"dataHidden"		:	"City>>50257>>Dubai>>Dubai Emirate>>United Arab Emirates>>25.25817>>55.30472>>AE",	
		"cityName" 			:  	i18n.t('dubai'),
		"countryName"  		:  	i18n.t('uae')
	},
	{		
		"type"				:	"City",
		"dataDisplay"		:	i18n.t("cityDescMakkah"),
		"dataHidden"		:	"City>>140436>>Makkah>>Makkah Province>>Saudi Arabia>>21.42667>>39.82611>>SA",
		"cityName" 			:  	i18n.t('makkah'),
		"countryName"   	:  	i18n.t('saudarabia')
	},	
	{		
		"type"				:	"City",
		"dataDisplay"		:	i18n.t("cityDescIstanbul"),
		"dataHidden"		:	"City>>50412>>Istanbul>>Marmara Region>>Turkey>>41.01384>>28.94966>>TR",
		"cityName" 			:  	i18n.t('istanbul'),
		"countryName"   	:  	i18n.t('turkey')
	},
	
	{		
		"type"				:	"Hotel",
		"dataDisplay"		:	i18n.t("htlcityDesc1"),
		"dataHidden"		:	"Hotel>>SA510197>>undefined>>undefined>>Anjum Makkah Hotel>>140436>>Makkah>>Makkah Province>>Saudi Arabia>>SA>>",
		"hotelName" 		:  	i18n.t('mobTobHtlNm1'),
		"cityName" 			:  	i18n.t('makkah'),
		"countryName"   	:  	i18n.t('saudiarabia')
	},
	{		
		"type"				:	"Hotel",
		"dataDisplay"		:	i18n.t("htlcityDesc2"),
		"dataHidden"		:	"Hotel>>SA000103>>undefined>>undefined>>Le Meridien Towers Makkah Hotel>>140436>>Makkah>>Makkah Province>>Saudi Arabia>>SA>>",
		"hotelName" 		:  	i18n.t('mobTobHtlNm2'),
		"cityName" 			:  	i18n.t('makkah'),
		"countryName"  	 	:  	i18n.t('saudiarabia')
	},
	{
		"type"				:	"Hotel",
		"dataDisplay"		:	i18n.t("htlcityDesc3"),
		"dataHidden"		:	"Hotel>>SA538302>>undefined>>undefined>>Hyatt Regency Makkah Hotel>>140436>>Makkah>>Makkah Province>>Saudi Arabia>>SA>>","hotelName" 		 :   i18n.t('mobTobHtlNm3'),
		"cityName" 			:  	i18n.t('makkah'),
		"countryName"  	 	:  	i18n.t('saudiarabia')
	}
	
	];	
	
}
	for(var i = 0; i < topHotelsFn.length; i++) {
		var rT = topHotelsFn[i];	
		var htlType = rT.type;		
		if(htlType == "Hotel"){		
			var myLoop = '<a class="htlLink" data-destDisplay="'+rT.dataDisplay+'" data-destHidden="'+rT.dataHidden+'">'+rT.hotelName+'</a>';	
			$(".fastBookingTags.htlFast").append(myLoop);
		}
		else if(htlType == "City"){	
			var myLoop = '<a class="htlLink" data-destDisplay="'+rT.dataDisplay+'" data-destHidden="'+rT.dataHidden+'">'+rT.cityName+'</a>';	
			$(".fastBookingTags.htlFast").append(myLoop);
		}
	}		
}
//! moment.js
//! version : 2.10.6
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com

(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
    typeof define === 'function' && define.amd ? define(factory) :
    global.moment = factory()
}(this, function () { 'use strict';

    var hookCallback;

    function utils_hooks__hooks () {
        return hookCallback.apply(null, arguments);
    }

    // This is done to register the method called with moment()
    // without creating circular dependencies.
    function setHookCallback (callback) {
        hookCallback = callback;
    }

    function isArray(input) {
        return Object.prototype.toString.call(input) === '[object Array]';
    }

    function isDate(input) {
        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
    }

    function map(arr, fn) {
        var res = [], i;
        for (i = 0; i < arr.length; ++i) {
            res.push(fn(arr[i], i));
        }
        return res;
    }

    function hasOwnProp(a, b) {
        return Object.prototype.hasOwnProperty.call(a, b);
    }

    function extend(a, b) {
        for (var i in b) {
            if (hasOwnProp(b, i)) {
                a[i] = b[i];
            }
        }

        if (hasOwnProp(b, 'toString')) {
            a.toString = b.toString;
        }

        if (hasOwnProp(b, 'valueOf')) {
            a.valueOf = b.valueOf;
        }

        return a;
    }

    function create_utc__createUTC (input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, true).utc();
    }

    function defaultParsingFlags() {
        // We need to deep clone this object.
        return {
            empty           : false,
            unusedTokens    : [],
            unusedInput     : [],
            overflow        : -2,
            charsLeftOver   : 0,
            nullInput       : false,
            invalidMonth    : null,
            invalidFormat   : false,
            userInvalidated : false,
            iso             : false
        };
    }

    function getParsingFlags(m) {
        if (m._pf == null) {
            m._pf = defaultParsingFlags();
        }
        return m._pf;
    }

    function valid__isValid(m) {
        if (m._isValid == null) {
            var flags = getParsingFlags(m);
            m._isValid = !isNaN(m._d.getTime()) &&
                flags.overflow < 0 &&
                !flags.empty &&
                !flags.invalidMonth &&
                !flags.invalidWeekday &&
                !flags.nullInput &&
                !flags.invalidFormat &&
                !flags.userInvalidated;

            if (m._strict) {
                m._isValid = m._isValid &&
                    flags.charsLeftOver === 0 &&
                    flags.unusedTokens.length === 0 &&
                    flags.bigHour === undefined;
            }
        }
        return m._isValid;
    }

    function valid__createInvalid (flags) {
        var m = create_utc__createUTC(NaN);
        if (flags != null) {
            extend(getParsingFlags(m), flags);
        }
        else {
            getParsingFlags(m).userInvalidated = true;
        }

        return m;
    }

    var momentProperties = utils_hooks__hooks.momentProperties = [];

    function copyConfig(to, from) {
        var i, prop, val;

        if (typeof from._isAMomentObject !== 'undefined') {
            to._isAMomentObject = from._isAMomentObject;
        }
        if (typeof from._i !== 'undefined') {
            to._i = from._i;
        }
        if (typeof from._f !== 'undefined') {
            to._f = from._f;
        }
        if (typeof from._l !== 'undefined') {
            to._l = from._l;
        }
        if (typeof from._strict !== 'undefined') {
            to._strict = from._strict;
        }
        if (typeof from._tzm !== 'undefined') {
            to._tzm = from._tzm;
        }
        if (typeof from._isUTC !== 'undefined') {
            to._isUTC = from._isUTC;
        }
        if (typeof from._offset !== 'undefined') {
            to._offset = from._offset;
        }
        if (typeof from._pf !== 'undefined') {
            to._pf = getParsingFlags(from);
        }
        if (typeof from._locale !== 'undefined') {
            to._locale = from._locale;
        }

        if (momentProperties.length > 0) {
            for (i in momentProperties) {
                prop = momentProperties[i];
                val = from[prop];
                if (typeof val !== 'undefined') {
                    to[prop] = val;
                }
            }
        }

        return to;
    }

    var updateInProgress = false;

    // Moment prototype object
    function Moment(config) {
        copyConfig(this, config);
        this._d = new Date(config._d != null ? config._d.getTime() : NaN);
        // Prevent infinite loop in case updateOffset creates new moment
        // objects.
        if (updateInProgress === false) {
            updateInProgress = true;
            utils_hooks__hooks.updateOffset(this);
            updateInProgress = false;
        }
    }

    function isMoment (obj) {
        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);
    }

    function absFloor (number) {
        if (number < 0) {
            return Math.ceil(number);
        } else {
            return Math.floor(number);
        }
    }

    function toInt(argumentForCoercion) {
        var coercedNumber = +argumentForCoercion,
            value = 0;

        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
            value = absFloor(coercedNumber);
        }

        return value;
    }

    function compareArrays(array1, array2, dontConvert) {
        var len = Math.min(array1.length, array2.length),
            lengthDiff = Math.abs(array1.length - array2.length),
            diffs = 0,
            i;
        for (i = 0; i < len; i++) {
            if ((dontConvert && array1[i] !== array2[i]) ||
                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
                diffs++;
            }
        }
        return diffs + lengthDiff;
    }

    function Locale() {
    }

    var locales = {};
    var globalLocale;

    function normalizeLocale(key) {
        return key ? key.toLowerCase().replace('_', '-') : key;
    }

    // pick the locale from the array
    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
    function chooseLocale(names) {
        var i = 0, j, next, locale, split;

        while (i < names.length) {
            split = normalizeLocale(names[i]).split('-');
            j = split.length;
            next = normalizeLocale(names[i + 1]);
            next = next ? next.split('-') : null;
            while (j > 0) {
                locale = loadLocale(split.slice(0, j).join('-'));
                if (locale) {
                    return locale;
                }
                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
                    //the next array item is better than a shallower substring of this one
                    break;
                }
                j--;
            }
            i++;
        }
        return null;
    }

    function loadLocale(name) {
        var oldLocale = null;
        // TODO: Find a better way to register and load all the locales in Node
        if (!locales[name] && typeof module !== 'undefined' &&
                module && module.exports) {
            try {
                oldLocale = globalLocale._abbr;
                require('./locale/' + name);
                // because defineLocale currently also sets the global locale, we
                // want to undo that for lazy loaded locales
                locale_locales__getSetGlobalLocale(oldLocale);
            } catch (e) { }
        }
        return locales[name];
    }

    // This function will load locale and then set the global locale.  If
    // no arguments are passed in, it will simply return the current global
    // locale key.
    function locale_locales__getSetGlobalLocale (key, values) {
        var data;
        if (key) {
            if (typeof values === 'undefined') {
                data = locale_locales__getLocale(key);
            }
            else {
                data = defineLocale(key, values);
            }

            if (data) {
                // moment.duration._locale = moment._locale = data;
                globalLocale = data;
            }
        }

        return globalLocale._abbr;
    }

    function defineLocale (name, values) {
        if (values !== null) {
            values.abbr = name;
            locales[name] = locales[name] || new Locale();
            locales[name].set(values);

            // backwards compat for now: also set the locale
            locale_locales__getSetGlobalLocale(name);

            return locales[name];
        } else {
            // useful for testing
            delete locales[name];
            return null;
        }
    }

    // returns locale data
    function locale_locales__getLocale (key) {
        var locale;

        if (key && key._locale && key._locale._abbr) {
            key = key._locale._abbr;
        }

        if (!key) {
            return globalLocale;
        }

        if (!isArray(key)) {
            //short-circuit everything else
            locale = loadLocale(key);
            if (locale) {
                return locale;
            }
            key = [key];
        }

        return chooseLocale(key);
    }

    var aliases = {};

    function addUnitAlias (unit, shorthand) {
        var lowerCase = unit.toLowerCase();
        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
    }

    function normalizeUnits(units) {
        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
    }

    function normalizeObjectUnits(inputObject) {
        var normalizedInput = {},
            normalizedProp,
            prop;

        for (prop in inputObject) {
            if (hasOwnProp(inputObject, prop)) {
                normalizedProp = normalizeUnits(prop);
                if (normalizedProp) {
                    normalizedInput[normalizedProp] = inputObject[prop];
                }
            }
        }

        return normalizedInput;
    }

    function makeGetSet (unit, keepTime) {
        return function (value) {
            if (value != null) {
                get_set__set(this, unit, value);
                utils_hooks__hooks.updateOffset(this, keepTime);
                return this;
            } else {
                return get_set__get(this, unit);
            }
        };
    }

    function get_set__get (mom, unit) {
        return mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]();
    }

    function get_set__set (mom, unit, value) {
        return mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
    }

    // MOMENTS

    function getSet (units, value) {
        var unit;
        if (typeof units === 'object') {
            for (unit in units) {
                this.set(unit, units[unit]);
            }
        } else {
            units = normalizeUnits(units);
            if (typeof this[units] === 'function') {
                return this[units](value);
            }
        }
        return this;
    }

    function zeroFill(number, targetLength, forceSign) {
        var absNumber = '' + Math.abs(number),
            zerosToFill = targetLength - absNumber.length,
            sign = number >= 0;
        return (sign ? (forceSign ? '+' : '') : '-') +
            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
    }

    var formattingTokens = /(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;

    var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;

    var formatFunctions = {};

    var formatTokenFunctions = {};

    // token:    'M'
    // padded:   ['MM', 2]
    // ordinal:  'Mo'
    // callback: function () { this.month() + 1 }
    function addFormatToken (token, padded, ordinal, callback) {
        var func = callback;
        if (typeof callback === 'string') {
            func = function () {
                return this[callback]();
            };
        }
        if (token) {
            formatTokenFunctions[token] = func;
        }
        if (padded) {
            formatTokenFunctions[padded[0]] = function () {
                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
            };
        }
        if (ordinal) {
            formatTokenFunctions[ordinal] = function () {
                return this.localeData().ordinal(func.apply(this, arguments), token);
            };
        }
    }

    function removeFormattingTokens(input) {
        if (input.match(/\[[\s\S]/)) {
            return input.replace(/^\[|\]$/g, '');
        }
        return input.replace(/\\/g, '');
    }

    function makeFormatFunction(format) {
        var array = format.match(formattingTokens), i, length;

        for (i = 0, length = array.length; i < length; i++) {
            if (formatTokenFunctions[array[i]]) {
                array[i] = formatTokenFunctions[array[i]];
            } else {
                array[i] = removeFormattingTokens(array[i]);
            }
        }

        return function (mom) {
            var output = '';
            for (i = 0; i < length; i++) {
                output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];
            }
            return output;
        };
    }

    // format date using native date object
    function formatMoment(m, format) {
        if (!m.isValid()) {
            return m.localeData().invalidDate();
        }

        format = expandFormat(format, m.localeData());
        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);

        return formatFunctions[format](m);
    }

    function expandFormat(format, locale) {
        var i = 5;

        function replaceLongDateFormatTokens(input) {
            return locale.longDateFormat(input) || input;
        }

        localFormattingTokens.lastIndex = 0;
        while (i >= 0 && localFormattingTokens.test(format)) {
            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
            localFormattingTokens.lastIndex = 0;
            i -= 1;
        }

        return format;
    }

    var match1         = /\d/;            //       0 - 9
    var match2         = /\d\d/;          //      00 - 99
    var match3         = /\d{3}/;         //     000 - 999
    var match4         = /\d{4}/;         //    0000 - 9999
    var match6         = /[+-]?\d{6}/;    // -999999 - 999999
    var match1to2      = /\d\d?/;         //       0 - 99
    var match1to3      = /\d{1,3}/;       //       0 - 999
    var match1to4      = /\d{1,4}/;       //       0 - 9999
    var match1to6      = /[+-]?\d{1,6}/;  // -999999 - 999999

    var matchUnsigned  = /\d+/;           //       0 - inf
    var matchSigned    = /[+-]?\d+/;      //    -inf - inf

    var matchOffset    = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z

    var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123

    // any word (or two) characters or numbers including two/three word month in arabic.
    var matchWord = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i;

    var regexes = {};

    function isFunction (sth) {
        // https://github.com/moment/moment/issues/2325
        return typeof sth === 'function' &&
            Object.prototype.toString.call(sth) === '[object Function]';
    }


    function addRegexToken (token, regex, strictRegex) {
        regexes[token] = isFunction(regex) ? regex : function (isStrict) {
            return (isStrict && strictRegex) ? strictRegex : regex;
        };
    }

    function getParseRegexForToken (token, config) {
        if (!hasOwnProp(regexes, token)) {
            return new RegExp(unescapeFormat(token));
        }

        return regexes[token](config._strict, config._locale);
    }

    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
    function unescapeFormat(s) {
        return s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
            return p1 || p2 || p3 || p4;
        }).replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
    }

    var tokens = {};

    function addParseToken (token, callback) {
        var i, func = callback;
        if (typeof token === 'string') {
            token = [token];
        }
        if (typeof callback === 'number') {
            func = function (input, array) {
                array[callback] = toInt(input);
            };
        }
        for (i = 0; i < token.length; i++) {
            tokens[token[i]] = func;
        }
    }

    function addWeekParseToken (token, callback) {
        addParseToken(token, function (input, array, config, token) {
            config._w = config._w || {};
            callback(input, config._w, config, token);
        });
    }

    function addTimeToArrayFromToken(token, input, config) {
        if (input != null && hasOwnProp(tokens, token)) {
            tokens[token](input, config._a, config, token);
        }
    }

    var YEAR = 0;
    var MONTH = 1;
    var DATE = 2;
    var HOUR = 3;
    var MINUTE = 4;
    var SECOND = 5;
    var MILLISECOND = 6;

    function daysInMonth(year, month) {
        return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();
    }

    // FORMATTING

    addFormatToken('M', ['MM', 2], 'Mo', function () {
        return this.month() + 1;
    });

    addFormatToken('MMM', 0, 0, function (format) {
        return this.localeData().monthsShort(this, format);
    });

    addFormatToken('MMMM', 0, 0, function (format) {
        return this.localeData().months(this, format);
    });

    // ALIASES

    addUnitAlias('month', 'M');

    // PARSING

    addRegexToken('M',    match1to2);
    addRegexToken('MM',   match1to2, match2);
    addRegexToken('MMM',  matchWord);
    addRegexToken('MMMM', matchWord);

    addParseToken(['M', 'MM'], function (input, array) {
        array[MONTH] = toInt(input) - 1;
    });

    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
        var month = config._locale.monthsParse(input, token, config._strict);
        // if we didn't find a month name, mark the date as invalid.
        if (month != null) {
            array[MONTH] = month;
        } else {
            getParsingFlags(config).invalidMonth = input;
        }
    });

    // LOCALES

    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
    function localeMonths (m) {
        return this._months[m.month()];
    }

    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
    function localeMonthsShort (m) {
        return this._monthsShort[m.month()];
    }

    function localeMonthsParse (monthName, format, strict) {
        var i, mom, regex;

        if (!this._monthsParse) {
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
        }

        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = create_utc__createUTC([2000, i]);
            if (strict && !this._longMonthsParse[i]) {
                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
            }
            if (!strict && !this._monthsParse[i]) {
                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
                return i;
            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
                return i;
            } else if (!strict && this._monthsParse[i].test(monthName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function setMonth (mom, value) {
        var dayOfMonth;

        // TODO: Move this out of here!
        if (typeof value === 'string') {
            value = mom.localeData().monthsParse(value);
            // TODO: Another silent failure?
            if (typeof value !== 'number') {
                return mom;
            }
        }

        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
        return mom;
    }

    function getSetMonth (value) {
        if (value != null) {
            setMonth(this, value);
            utils_hooks__hooks.updateOffset(this, true);
            return this;
        } else {
            return get_set__get(this, 'Month');
        }
    }

    function getDaysInMonth () {
        return daysInMonth(this.year(), this.month());
    }

    function checkOverflow (m) {
        var overflow;
        var a = m._a;

        if (a && getParsingFlags(m).overflow === -2) {
            overflow =
                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :
                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :
                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :
                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :
                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :
                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :
                -1;

            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
                overflow = DATE;
            }

            getParsingFlags(m).overflow = overflow;
        }

        return m;
    }

    function warn(msg) {
        if (utils_hooks__hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {
            console.warn('Deprecation warning: ' + msg);
        }
    }

    function deprecate(msg, fn) {
        var firstTime = true;

        return extend(function () {
            if (firstTime) {
                warn(msg + '\n' + (new Error()).stack);
                firstTime = false;
            }
            return fn.apply(this, arguments);
        }, fn);
    }

    var deprecations = {};

    function deprecateSimple(name, msg) {
        if (!deprecations[name]) {
            warn(msg);
            deprecations[name] = true;
        }
    }

    utils_hooks__hooks.suppressDeprecationWarnings = false;

    var from_string__isoRegex = /^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;

    var isoDates = [
        ['YYYYYY-MM-DD', /[+-]\d{6}-\d{2}-\d{2}/],
        ['YYYY-MM-DD', /\d{4}-\d{2}-\d{2}/],
        ['GGGG-[W]WW-E', /\d{4}-W\d{2}-\d/],
        ['GGGG-[W]WW', /\d{4}-W\d{2}/],
        ['YYYY-DDD', /\d{4}-\d{3}/]
    ];

    // iso time formats and regexes
    var isoTimes = [
        ['HH:mm:ss.SSSS', /(T| )\d\d:\d\d:\d\d\.\d+/],
        ['HH:mm:ss', /(T| )\d\d:\d\d:\d\d/],
        ['HH:mm', /(T| )\d\d:\d\d/],
        ['HH', /(T| )\d\d/]
    ];

    var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;

    // date from iso format
    function configFromISO(config) {
        var i, l,
            string = config._i,
            match = from_string__isoRegex.exec(string);

        if (match) {
            getParsingFlags(config).iso = true;
            for (i = 0, l = isoDates.length; i < l; i++) {
                if (isoDates[i][1].exec(string)) {
                    config._f = isoDates[i][0];
                    break;
                }
            }
            for (i = 0, l = isoTimes.length; i < l; i++) {
                if (isoTimes[i][1].exec(string)) {
                    // match[6] should be 'T' or space
                    config._f += (match[6] || ' ') + isoTimes[i][0];
                    break;
                }
            }
            if (string.match(matchOffset)) {
                config._f += 'Z';
            }
            configFromStringAndFormat(config);
        } else {
            config._isValid = false;
        }
    }

    // date from iso format or fallback
    function configFromString(config) {
        var matched = aspNetJsonRegex.exec(config._i);

        if (matched !== null) {
            config._d = new Date(+matched[1]);
            return;
        }

        configFromISO(config);
        if (config._isValid === false) {
            delete config._isValid;
            utils_hooks__hooks.createFromInputFallback(config);
        }
    }

    utils_hooks__hooks.createFromInputFallback = deprecate(
        'moment construction falls back to js Date. This is ' +
        'discouraged and will be removed in upcoming major ' +
        'release. Please refer to ' +
        'https://github.com/moment/moment/issues/1407 for more info.',
        function (config) {
            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
        }
    );

    function createDate (y, m, d, h, M, s, ms) {
        //can't just apply() to create a date:
        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply
        var date = new Date(y, m, d, h, M, s, ms);

        //the date constructor doesn't accept years < 1970
        if (y < 1970) {
            date.setFullYear(y);
        }
        return date;
    }

    function createUTCDate (y) {
        var date = new Date(Date.UTC.apply(null, arguments));
        if (y < 1970) {
            date.setUTCFullYear(y);
        }
        return date;
    }

    addFormatToken(0, ['YY', 2], 0, function () {
        return this.year() % 100;
    });

    addFormatToken(0, ['YYYY',   4],       0, 'year');
    addFormatToken(0, ['YYYYY',  5],       0, 'year');
    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

    // ALIASES

    addUnitAlias('year', 'y');

    // PARSING

    addRegexToken('Y',      matchSigned);
    addRegexToken('YY',     match1to2, match2);
    addRegexToken('YYYY',   match1to4, match4);
    addRegexToken('YYYYY',  match1to6, match6);
    addRegexToken('YYYYYY', match1to6, match6);

    addParseToken(['YYYYY', 'YYYYYY'], YEAR);
    addParseToken('YYYY', function (input, array) {
        array[YEAR] = input.length === 2 ? utils_hooks__hooks.parseTwoDigitYear(input) : toInt(input);
    });
    addParseToken('YY', function (input, array) {
        array[YEAR] = utils_hooks__hooks.parseTwoDigitYear(input);
    });

    // HELPERS

    function daysInYear(year) {
        return isLeapYear(year) ? 366 : 365;
    }

    function isLeapYear(year) {
        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
    }

    // HOOKS

    utils_hooks__hooks.parseTwoDigitYear = function (input) {
        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
    };

    // MOMENTS

    var getSetYear = makeGetSet('FullYear', false);

    function getIsLeapYear () {
        return isLeapYear(this.year());
    }

    addFormatToken('w', ['ww', 2], 'wo', 'week');
    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

    // ALIASES

    addUnitAlias('week', 'w');
    addUnitAlias('isoWeek', 'W');

    // PARSING

    addRegexToken('w',  match1to2);
    addRegexToken('ww', match1to2, match2);
    addRegexToken('W',  match1to2);
    addRegexToken('WW', match1to2, match2);

    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
        week[token.substr(0, 1)] = toInt(input);
    });

    // HELPERS

    // firstDayOfWeek       0 = sun, 6 = sat
    //                      the day of the week that starts the week
    //                      (usually sunday or monday)
    // firstDayOfWeekOfYear 0 = sun, 6 = sat
    //                      the first week is the week that contains the first
    //                      of this day of the week
    //                      (eg. ISO weeks use thursday (4))
    function weekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {
        var end = firstDayOfWeekOfYear - firstDayOfWeek,
            daysToDayOfWeek = firstDayOfWeekOfYear - mom.day(),
            adjustedMoment;


        if (daysToDayOfWeek > end) {
            daysToDayOfWeek -= 7;
        }

        if (daysToDayOfWeek < end - 7) {
            daysToDayOfWeek += 7;
        }

        adjustedMoment = local__createLocal(mom).add(daysToDayOfWeek, 'd');
        return {
            week: Math.ceil(adjustedMoment.dayOfYear() / 7),
            year: adjustedMoment.year()
        };
    }

    // LOCALES

    function localeWeek (mom) {
        return weekOfYear(mom, this._week.dow, this._week.doy).week;
    }

    var defaultLocaleWeek = {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 1st is the first week of the year.
    };

    function localeFirstDayOfWeek () {
        return this._week.dow;
    }

    function localeFirstDayOfYear () {
        return this._week.doy;
    }

    // MOMENTS

    function getSetWeek (input) {
        var week = this.localeData().week(this);
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    function getSetISOWeek (input) {
        var week = weekOfYear(this, 1, 4).week;
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

    // ALIASES

    addUnitAlias('dayOfYear', 'DDD');

    // PARSING

    addRegexToken('DDD',  match1to3);
    addRegexToken('DDDD', match3);
    addParseToken(['DDD', 'DDDD'], function (input, array, config) {
        config._dayOfYear = toInt(input);
    });

    // HELPERS

    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
    function dayOfYearFromWeeks(year, week, weekday, firstDayOfWeekOfYear, firstDayOfWeek) {
        var week1Jan = 6 + firstDayOfWeek - firstDayOfWeekOfYear, janX = createUTCDate(year, 0, 1 + week1Jan), d = janX.getUTCDay(), dayOfYear;
        if (d < firstDayOfWeek) {
            d += 7;
        }

        weekday = weekday != null ? 1 * weekday : firstDayOfWeek;

        dayOfYear = 1 + week1Jan + 7 * (week - 1) - d + weekday;

        return {
            year: dayOfYear > 0 ? year : year - 1,
            dayOfYear: dayOfYear > 0 ?  dayOfYear : daysInYear(year - 1) + dayOfYear
        };
    }

    // MOMENTS

    function getSetDayOfYear (input) {
        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');
    }

    // Pick the first defined of two or three arguments.
    function defaults(a, b, c) {
        if (a != null) {
            return a;
        }
        if (b != null) {
            return b;
        }
        return c;
    }

    function currentDateArray(config) {
        var now = new Date();
        if (config._useUTC) {
            return [now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate()];
        }
        return [now.getFullYear(), now.getMonth(), now.getDate()];
    }

    // convert an array to a date.
    // the array should mirror the parameters below
    // note: all values past the year are optional and will default to the lowest possible value.
    // [year, month, day , hour, minute, second, millisecond]
    function configFromArray (config) {
        var i, date, input = [], currentDate, yearToUse;

        if (config._d) {
            return;
        }

        currentDate = currentDateArray(config);

        //compute day of the year from weeks and weekdays
        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
            dayOfYearFromWeekInfo(config);
        }

        //if the day of the year is set, figure out what it is
        if (config._dayOfYear) {
            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

            if (config._dayOfYear > daysInYear(yearToUse)) {
                getParsingFlags(config)._overflowDayOfYear = true;
            }

            date = createUTCDate(yearToUse, 0, config._dayOfYear);
            config._a[MONTH] = date.getUTCMonth();
            config._a[DATE] = date.getUTCDate();
        }

        // Default to current date.
        // * if no year, month, day of month are given, default to today
        // * if day of month is given, default month and year
        // * if month is given, default only year
        // * if year is given, don't default anything
        for (i = 0; i < 3 && config._a[i] == null; ++i) {
            config._a[i] = input[i] = currentDate[i];
        }

        // Zero out whatever was not defaulted, including time
        for (; i < 7; i++) {
            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
        }

        // Check for 24:00:00.000
        if (config._a[HOUR] === 24 &&
                config._a[MINUTE] === 0 &&
                config._a[SECOND] === 0 &&
                config._a[MILLISECOND] === 0) {
            config._nextDay = true;
            config._a[HOUR] = 0;
        }

        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
        // Apply timezone offset from input. The actual utcOffset can be changed
        // with parseZone.
        if (config._tzm != null) {
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
        }

        if (config._nextDay) {
            config._a[HOUR] = 24;
        }
    }

    function dayOfYearFromWeekInfo(config) {
        var w, weekYear, week, weekday, dow, doy, temp;

        w = config._w;
        if (w.GG != null || w.W != null || w.E != null) {
            dow = 1;
            doy = 4;

            // TODO: We need to take the current isoWeekYear, but that depends on
            // how we interpret now (local, utc, fixed offset). So create
            // a now version of current config (take local/utc/offset flags, and
            // create now).
            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(local__createLocal(), 1, 4).year);
            week = defaults(w.W, 1);
            weekday = defaults(w.E, 1);
        } else {
            dow = config._locale._week.dow;
            doy = config._locale._week.doy;

            weekYear = defaults(w.gg, config._a[YEAR], weekOfYear(local__createLocal(), dow, doy).year);
            week = defaults(w.w, 1);

            if (w.d != null) {
                // weekday -- low day numbers are considered next week
                weekday = w.d;
                if (weekday < dow) {
                    ++week;
                }
            } else if (w.e != null) {
                // local weekday -- counting starts from begining of week
                weekday = w.e + dow;
            } else {
                // default to begining of week
                weekday = dow;
            }
        }
        temp = dayOfYearFromWeeks(weekYear, week, weekday, doy, dow);

        config._a[YEAR] = temp.year;
        config._dayOfYear = temp.dayOfYear;
    }

    utils_hooks__hooks.ISO_8601 = function () {};

    // date from string and format string
    function configFromStringAndFormat(config) {
        // TODO: Move this to another part of the creation flow to prevent circular deps
        if (config._f === utils_hooks__hooks.ISO_8601) {
            configFromISO(config);
            return;
        }

        config._a = [];
        getParsingFlags(config).empty = true;

        // This array is used to make a Date, either with `new Date` or `Date.UTC`
        var string = '' + config._i,
            i, parsedInput, tokens, token, skipped,
            stringLength = string.length,
            totalParsedInputLength = 0;

        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

        for (i = 0; i < tokens.length; i++) {
            token = tokens[i];
            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
            if (parsedInput) {
                skipped = string.substr(0, string.indexOf(parsedInput));
                if (skipped.length > 0) {
                    getParsingFlags(config).unusedInput.push(skipped);
                }
                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
                totalParsedInputLength += parsedInput.length;
            }
            // don't parse if it's not a known token
            if (formatTokenFunctions[token]) {
                if (parsedInput) {
                    getParsingFlags(config).empty = false;
                }
                else {
                    getParsingFlags(config).unusedTokens.push(token);
                }
                addTimeToArrayFromToken(token, parsedInput, config);
            }
            else if (config._strict && !parsedInput) {
                getParsingFlags(config).unusedTokens.push(token);
            }
        }

        // add remaining unparsed input length to the string
        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
        if (string.length > 0) {
            getParsingFlags(config).unusedInput.push(string);
        }

        // clear _12h flag if hour is <= 12
        if (getParsingFlags(config).bigHour === true &&
                config._a[HOUR] <= 12 &&
                config._a[HOUR] > 0) {
            getParsingFlags(config).bigHour = undefined;
        }
        // handle meridiem
        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);

        configFromArray(config);
        checkOverflow(config);
    }


    function meridiemFixWrap (locale, hour, meridiem) {
        var isPm;

        if (meridiem == null) {
            // nothing to do
            return hour;
        }
        if (locale.meridiemHour != null) {
            return locale.meridiemHour(hour, meridiem);
        } else if (locale.isPM != null) {
            // Fallback
            isPm = locale.isPM(meridiem);
            if (isPm && hour < 12) {
                hour += 12;
            }
            if (!isPm && hour === 12) {
                hour = 0;
            }
            return hour;
        } else {
            // this is not supposed to happen
            return hour;
        }
    }

    function configFromStringAndArray(config) {
        var tempConfig,
            bestMoment,

            scoreToBeat,
            i,
            currentScore;

        if (config._f.length === 0) {
            getParsingFlags(config).invalidFormat = true;
            config._d = new Date(NaN);
            return;
        }

        for (i = 0; i < config._f.length; i++) {
            currentScore = 0;
            tempConfig = copyConfig({}, config);
            if (config._useUTC != null) {
                tempConfig._useUTC = config._useUTC;
            }
            tempConfig._f = config._f[i];
            configFromStringAndFormat(tempConfig);

            if (!valid__isValid(tempConfig)) {
                continue;
            }

            // if there is any input that was not parsed add a penalty for that format
            currentScore += getParsingFlags(tempConfig).charsLeftOver;

            //or tokens
            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

            getParsingFlags(tempConfig).score = currentScore;

            if (scoreToBeat == null || currentScore < scoreToBeat) {
                scoreToBeat = currentScore;
                bestMoment = tempConfig;
            }
        }

        extend(config, bestMoment || tempConfig);
    }

    function configFromObject(config) {
        if (config._d) {
            return;
        }

        var i = normalizeObjectUnits(config._i);
        config._a = [i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond];

        configFromArray(config);
    }

    function createFromConfig (config) {
        var res = new Moment(checkOverflow(prepareConfig(config)));
        if (res._nextDay) {
            // Adding is smart enough around DST
            res.add(1, 'd');
            res._nextDay = undefined;
        }

        return res;
    }

    function prepareConfig (config) {
        var input = config._i,
            format = config._f;

        config._locale = config._locale || locale_locales__getLocale(config._l);

        if (input === null || (format === undefined && input === '')) {
            return valid__createInvalid({nullInput: true});
        }

        if (typeof input === 'string') {
            config._i = input = config._locale.preparse(input);
        }

        if (isMoment(input)) {
            return new Moment(checkOverflow(input));
        } else if (isArray(format)) {
            configFromStringAndArray(config);
        } else if (format) {
            configFromStringAndFormat(config);
        } else if (isDate(input)) {
            config._d = input;
        } else {
            configFromInput(config);
        }

        return config;
    }

    function configFromInput(config) {
        var input = config._i;
        if (input === undefined) {
            config._d = new Date();
        } else if (isDate(input)) {
            config._d = new Date(+input);
        } else if (typeof input === 'string') {
            configFromString(config);
        } else if (isArray(input)) {
            config._a = map(input.slice(0), function (obj) {
                return parseInt(obj, 10);
            });
            configFromArray(config);
        } else if (typeof(input) === 'object') {
            configFromObject(config);
        } else if (typeof(input) === 'number') {
            // from milliseconds
            config._d = new Date(input);
        } else {
            utils_hooks__hooks.createFromInputFallback(config);
        }
    }

    function createLocalOrUTC (input, format, locale, strict, isUTC) {
        var c = {};

        if (typeof(locale) === 'boolean') {
            strict = locale;
            locale = undefined;
        }
        // object construction must be done this way.
        // https://github.com/moment/moment/issues/1423
        c._isAMomentObject = true;
        c._useUTC = c._isUTC = isUTC;
        c._l = locale;
        c._i = input;
        c._f = format;
        c._strict = strict;

        return createFromConfig(c);
    }

    function local__createLocal (input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, false);
    }

    var prototypeMin = deprecate(
         'moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548',
         function () {
             var other = local__createLocal.apply(null, arguments);
             return other < this ? this : other;
         }
     );

    var prototypeMax = deprecate(
        'moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548',
        function () {
            var other = local__createLocal.apply(null, arguments);
            return other > this ? this : other;
        }
    );

    // Pick a moment m from moments so that m[fn](other) is true for all
    // other. This relies on the function fn to be transitive.
    //
    // moments should either be an array of moment objects or an array, whose
    // first element is an array of moment objects.
    function pickBy(fn, moments) {
        var res, i;
        if (moments.length === 1 && isArray(moments[0])) {
            moments = moments[0];
        }
        if (!moments.length) {
            return local__createLocal();
        }
        res = moments[0];
        for (i = 1; i < moments.length; ++i) {
            if (!moments[i].isValid() || moments[i][fn](res)) {
                res = moments[i];
            }
        }
        return res;
    }

    // TODO: Use [].sort instead?
    function min () {
        var args = [].slice.call(arguments, 0);

        return pickBy('isBefore', args);
    }

    function max () {
        var args = [].slice.call(arguments, 0);

        return pickBy('isAfter', args);
    }

    function Duration (duration) {
        var normalizedInput = normalizeObjectUnits(duration),
            years = normalizedInput.year || 0,
            quarters = normalizedInput.quarter || 0,
            months = normalizedInput.month || 0,
            weeks = normalizedInput.week || 0,
            days = normalizedInput.day || 0,
            hours = normalizedInput.hour || 0,
            minutes = normalizedInput.minute || 0,
            seconds = normalizedInput.second || 0,
            milliseconds = normalizedInput.millisecond || 0;

        // representation for dateAddRemove
        this._milliseconds = +milliseconds +
            seconds * 1e3 + // 1000
            minutes * 6e4 + // 1000 * 60
            hours * 36e5; // 1000 * 60 * 60
        // Because of dateAddRemove treats 24 hours as different from a
        // day when working around DST, we need to store them separately
        this._days = +days +
            weeks * 7;
        // It is impossible translate months into days without knowing
        // which months you are are talking about, so we have to store
        // it separately.
        this._months = +months +
            quarters * 3 +
            years * 12;

        this._data = {};

        this._locale = locale_locales__getLocale();

        this._bubble();
    }

    function isDuration (obj) {
        return obj instanceof Duration;
    }

    function offset (token, separator) {
        addFormatToken(token, 0, 0, function () {
            var offset = this.utcOffset();
            var sign = '+';
            if (offset < 0) {
                offset = -offset;
                sign = '-';
            }
            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);
        });
    }

    offset('Z', ':');
    offset('ZZ', '');

    // PARSING

    addRegexToken('Z',  matchOffset);
    addRegexToken('ZZ', matchOffset);
    addParseToken(['Z', 'ZZ'], function (input, array, config) {
        config._useUTC = true;
        config._tzm = offsetFromString(input);
    });

    // HELPERS

    // timezone chunker
    // '+10:00' > ['10',  '00']
    // '-1530'  > ['-15', '30']
    var chunkOffset = /([\+\-]|\d\d)/gi;

    function offsetFromString(string) {
        var matches = ((string || '').match(matchOffset) || []);
        var chunk   = matches[matches.length - 1] || [];
        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];
        var minutes = +(parts[1] * 60) + toInt(parts[2]);

        return parts[0] === '+' ? minutes : -minutes;
    }

    // Return a moment from input, that is local/utc/zone equivalent to model.
    function cloneWithOffset(input, model) {
        var res, diff;
        if (model._isUTC) {
            res = model.clone();
            diff = (isMoment(input) || isDate(input) ? +input : +local__createLocal(input)) - (+res);
            // Use low-level api, because this fn is low-level api.
            res._d.setTime(+res._d + diff);
            utils_hooks__hooks.updateOffset(res, false);
            return res;
        } else {
            return local__createLocal(input).local();
        }
    }

    function getDateOffset (m) {
        // On Firefox.24 Date#getTimezoneOffset returns a floating point.
        // https://github.com/moment/moment/pull/1871
        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
    }

    // HOOKS

    // This function will be called whenever a moment is mutated.
    // It is intended to keep the offset in sync with the timezone.
    utils_hooks__hooks.updateOffset = function () {};

    // MOMENTS

    // keepLocalTime = true means only change the timezone, without
    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
    // +0200, so we adjust the time as needed, to be valid.
    //
    // Keeping the time actually adds/subtracts (one hour)
    // from the actual represented time. That is why we call updateOffset
    // a second time. In case it wants us to change the offset again
    // _changeInProgress == true case, then we have to adjust, because
    // there is no such time in the given timezone.
    function getSetOffset (input, keepLocalTime) {
        var offset = this._offset || 0,
            localAdjust;
        if (input != null) {
            if (typeof input === 'string') {
                input = offsetFromString(input);
            }
            if (Math.abs(input) < 16) {
                input = input * 60;
            }
            if (!this._isUTC && keepLocalTime) {
                localAdjust = getDateOffset(this);
            }
            this._offset = input;
            this._isUTC = true;
            if (localAdjust != null) {
                this.add(localAdjust, 'm');
            }
            if (offset !== input) {
                if (!keepLocalTime || this._changeInProgress) {
                    add_subtract__addSubtract(this, create__createDuration(input - offset, 'm'), 1, false);
                } else if (!this._changeInProgress) {
                    this._changeInProgress = true;
                    utils_hooks__hooks.updateOffset(this, true);
                    this._changeInProgress = null;
                }
            }
            return this;
        } else {
            return this._isUTC ? offset : getDateOffset(this);
        }
    }

    function getSetZone (input, keepLocalTime) {
        if (input != null) {
            if (typeof input !== 'string') {
                input = -input;
            }

            this.utcOffset(input, keepLocalTime);

            return this;
        } else {
            return -this.utcOffset();
        }
    }

    function setOffsetToUTC (keepLocalTime) {
        return this.utcOffset(0, keepLocalTime);
    }

    function setOffsetToLocal (keepLocalTime) {
        if (this._isUTC) {
            this.utcOffset(0, keepLocalTime);
            this._isUTC = false;

            if (keepLocalTime) {
                this.subtract(getDateOffset(this), 'm');
            }
        }
        return this;
    }

    function setOffsetToParsedOffset () {
        if (this._tzm) {
            this.utcOffset(this._tzm);
        } else if (typeof this._i === 'string') {
            this.utcOffset(offsetFromString(this._i));
        }
        return this;
    }

    function hasAlignedHourOffset (input) {
        input = input ? local__createLocal(input).utcOffset() : 0;

        return (this.utcOffset() - input) % 60 === 0;
    }

    function isDaylightSavingTime () {
        return (
            this.utcOffset() > this.clone().month(0).utcOffset() ||
            this.utcOffset() > this.clone().month(5).utcOffset()
        );
    }

    function isDaylightSavingTimeShifted () {
        if (typeof this._isDSTShifted !== 'undefined') {
            return this._isDSTShifted;
        }

        var c = {};

        copyConfig(c, this);
        c = prepareConfig(c);

        if (c._a) {
            var other = c._isUTC ? create_utc__createUTC(c._a) : local__createLocal(c._a);
            this._isDSTShifted = this.isValid() &&
                compareArrays(c._a, other.toArray()) > 0;
        } else {
            this._isDSTShifted = false;
        }

        return this._isDSTShifted;
    }

    function isLocal () {
        return !this._isUTC;
    }

    function isUtcOffset () {
        return this._isUTC;
    }

    function isUtc () {
        return this._isUTC && this._offset === 0;
    }

    var aspNetRegex = /(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/;

    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
    var create__isoRegex = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/;

    function create__createDuration (input, key) {
        var duration = input,
            // matching against regexp is expensive, do it on demand
            match = null,
            sign,
            ret,
            diffRes;

        if (isDuration(input)) {
            duration = {
                ms : input._milliseconds,
                d  : input._days,
                M  : input._months
            };
        } else if (typeof input === 'number') {
            duration = {};
            if (key) {
                duration[key] = input;
            } else {
                duration.milliseconds = input;
            }
        } else if (!!(match = aspNetRegex.exec(input))) {
            sign = (match[1] === '-') ? -1 : 1;
            duration = {
                y  : 0,
                d  : toInt(match[DATE])        * sign,
                h  : toInt(match[HOUR])        * sign,
                m  : toInt(match[MINUTE])      * sign,
                s  : toInt(match[SECOND])      * sign,
                ms : toInt(match[MILLISECOND]) * sign
            };
        } else if (!!(match = create__isoRegex.exec(input))) {
            sign = (match[1] === '-') ? -1 : 1;
            duration = {
                y : parseIso(match[2], sign),
                M : parseIso(match[3], sign),
                d : parseIso(match[4], sign),
                h : parseIso(match[5], sign),
                m : parseIso(match[6], sign),
                s : parseIso(match[7], sign),
                w : parseIso(match[8], sign)
            };
        } else if (duration == null) {// checks for null or undefined
            duration = {};
        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
            diffRes = momentsDifference(local__createLocal(duration.from), local__createLocal(duration.to));

            duration = {};
            duration.ms = diffRes.milliseconds;
            duration.M = diffRes.months;
        }

        ret = new Duration(duration);

        if (isDuration(input) && hasOwnProp(input, '_locale')) {
            ret._locale = input._locale;
        }

        return ret;
    }

    create__createDuration.fn = Duration.prototype;

    function parseIso (inp, sign) {
        // We'd normally use ~~inp for this, but unfortunately it also
        // converts floats to ints.
        // inp may be undefined, so careful calling replace on it.
        var res = inp && parseFloat(inp.replace(',', '.'));
        // apply sign while we're at it
        return (isNaN(res) ? 0 : res) * sign;
    }

    function positiveMomentsDifference(base, other) {
        var res = {milliseconds: 0, months: 0};

        res.months = other.month() - base.month() +
            (other.year() - base.year()) * 12;
        if (base.clone().add(res.months, 'M').isAfter(other)) {
            --res.months;
        }

        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));

        return res;
    }

    function momentsDifference(base, other) {
        var res;
        other = cloneWithOffset(other, base);
        if (base.isBefore(other)) {
            res = positiveMomentsDifference(base, other);
        } else {
            res = positiveMomentsDifference(other, base);
            res.milliseconds = -res.milliseconds;
            res.months = -res.months;
        }

        return res;
    }

    function createAdder(direction, name) {
        return function (val, period) {
            var dur, tmp;
            //invert the arguments, but complain about it
            if (period !== null && !isNaN(+period)) {
                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');
                tmp = val; val = period; period = tmp;
            }

            val = typeof val === 'string' ? +val : val;
            dur = create__createDuration(val, period);
            add_subtract__addSubtract(this, dur, direction);
            return this;
        };
    }

    function add_subtract__addSubtract (mom, duration, isAdding, updateOffset) {
        var milliseconds = duration._milliseconds,
            days = duration._days,
            months = duration._months;
        updateOffset = updateOffset == null ? true : updateOffset;

        if (milliseconds) {
            mom._d.setTime(+mom._d + milliseconds * isAdding);
        }
        if (days) {
            get_set__set(mom, 'Date', get_set__get(mom, 'Date') + days * isAdding);
        }
        if (months) {
            setMonth(mom, get_set__get(mom, 'Month') + months * isAdding);
        }
        if (updateOffset) {
            utils_hooks__hooks.updateOffset(mom, days || months);
        }
    }

    var add_subtract__add      = createAdder(1, 'add');
    var add_subtract__subtract = createAdder(-1, 'subtract');

    function moment_calendar__calendar (time, formats) {
        // We want to compare the start of today, vs this.
        // Getting start-of-today depends on whether we're local/utc/offset or not.
        var now = time || local__createLocal(),
            sod = cloneWithOffset(now, this).startOf('day'),
            diff = this.diff(sod, 'days', true),
            format = diff < -6 ? 'sameElse' :
                diff < -1 ? 'lastWeek' :
                diff < 0 ? 'lastDay' :
                diff < 1 ? 'sameDay' :
                diff < 2 ? 'nextDay' :
                diff < 7 ? 'nextWeek' : 'sameElse';
        return this.format(formats && formats[format] || this.localeData().calendar(format, this, local__createLocal(now)));
    }

    function clone () {
        return new Moment(this);
    }

    function isAfter (input, units) {
        var inputMs;
        units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');
        if (units === 'millisecond') {
            input = isMoment(input) ? input : local__createLocal(input);
            return +this > +input;
        } else {
            inputMs = isMoment(input) ? +input : +local__createLocal(input);
            return inputMs < +this.clone().startOf(units);
        }
    }

    function isBefore (input, units) {
        var inputMs;
        units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');
        if (units === 'millisecond') {
            input = isMoment(input) ? input : local__createLocal(input);
            return +this < +input;
        } else {
            inputMs = isMoment(input) ? +input : +local__createLocal(input);
            return +this.clone().endOf(units) < inputMs;
        }
    }

    function isBetween (from, to, units) {
        return this.isAfter(from, units) && this.isBefore(to, units);
    }

    function isSame (input, units) {
        var inputMs;
        units = normalizeUnits(units || 'millisecond');
        if (units === 'millisecond') {
            input = isMoment(input) ? input : local__createLocal(input);
            return +this === +input;
        } else {
            inputMs = +local__createLocal(input);
            return +(this.clone().startOf(units)) <= inputMs && inputMs <= +(this.clone().endOf(units));
        }
    }

    function diff (input, units, asFloat) {
        var that = cloneWithOffset(input, this),
            zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4,
            delta, output;

        units = normalizeUnits(units);

        if (units === 'year' || units === 'month' || units === 'quarter') {
            output = monthDiff(this, that);
            if (units === 'quarter') {
                output = output / 3;
            } else if (units === 'year') {
                output = output / 12;
            }
        } else {
            delta = this - that;
            output = units === 'second' ? delta / 1e3 : // 1000
                units === 'minute' ? delta / 6e4 : // 1000 * 60
                units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60
                units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst
                units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst
                delta;
        }
        return asFloat ? output : absFloor(output);
    }

    function monthDiff (a, b) {
        // difference in months
        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),
            // b is in (anchor - 1 month, anchor + 1 month)
            anchor = a.clone().add(wholeMonthDiff, 'months'),
            anchor2, adjust;

        if (b - anchor < 0) {
            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor - anchor2);
        } else {
            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor2 - anchor);
        }

        return -(wholeMonthDiff + adjust);
    }

    utils_hooks__hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';

    function toString () {
        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
    }

    function moment_format__toISOString () {
        var m = this.clone().utc();
        if (0 < m.year() && m.year() <= 9999) {
            if ('function' === typeof Date.prototype.toISOString) {
                // native implementation is ~50x faster, use it when we can
                return this.toDate().toISOString();
            } else {
                return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
            }
        } else {
            return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
        }
    }

    function format (inputString) {
        var output = formatMoment(this, inputString || utils_hooks__hooks.defaultFormat);
        return this.localeData().postformat(output);
    }

    function from (time, withoutSuffix) {
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }
        return create__createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);
    }

    function fromNow (withoutSuffix) {
        return this.from(local__createLocal(), withoutSuffix);
    }

    function to (time, withoutSuffix) {
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }
        return create__createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);
    }

    function toNow (withoutSuffix) {
        return this.to(local__createLocal(), withoutSuffix);
    }

    function locale (key) {
        var newLocaleData;

        if (key === undefined) {
            return this._locale._abbr;
        } else {
            newLocaleData = locale_locales__getLocale(key);
            if (newLocaleData != null) {
                this._locale = newLocaleData;
            }
            return this;
        }
    }

    var lang = deprecate(
        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
        function (key) {
            if (key === undefined) {
                return this.localeData();
            } else {
                return this.locale(key);
            }
        }
    );

    function localeData () {
        return this._locale;
    }

    function startOf (units) {
        units = normalizeUnits(units);
        // the following switch intentionally omits break keywords
        // to utilize falling through the cases.
        switch (units) {
        case 'year':
            this.month(0);
            /* falls through */
        case 'quarter':
        case 'month':
            this.date(1);
            /* falls through */
        case 'week':
        case 'isoWeek':
        case 'day':
            this.hours(0);
            /* falls through */
        case 'hour':
            this.minutes(0);
            /* falls through */
        case 'minute':
            this.seconds(0);
            /* falls through */
        case 'second':
            this.milliseconds(0);
        }

        // weeks are a special case
        if (units === 'week') {
            this.weekday(0);
        }
        if (units === 'isoWeek') {
            this.isoWeekday(1);
        }

        // quarters are also special
        if (units === 'quarter') {
            this.month(Math.floor(this.month() / 3) * 3);
        }

        return this;
    }

    function endOf (units) {
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond') {
            return this;
        }
        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');
    }

    function to_type__valueOf () {
        return +this._d - ((this._offset || 0) * 60000);
    }

    function unix () {
        return Math.floor(+this / 1000);
    }

    function toDate () {
        return this._offset ? new Date(+this) : this._d;
    }

    function toArray () {
        var m = this;
        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
    }

    function toObject () {
        var m = this;
        return {
            years: m.year(),
            months: m.month(),
            date: m.date(),
            hours: m.hours(),
            minutes: m.minutes(),
            seconds: m.seconds(),
            milliseconds: m.milliseconds()
        };
    }

    function moment_valid__isValid () {
        return valid__isValid(this);
    }

    function parsingFlags () {
        return extend({}, getParsingFlags(this));
    }

    function invalidAt () {
        return getParsingFlags(this).overflow;
    }

    addFormatToken(0, ['gg', 2], 0, function () {
        return this.weekYear() % 100;
    });

    addFormatToken(0, ['GG', 2], 0, function () {
        return this.isoWeekYear() % 100;
    });

    function addWeekYearFormatToken (token, getter) {
        addFormatToken(0, [token, token.length], 0, getter);
    }

    addWeekYearFormatToken('gggg',     'weekYear');
    addWeekYearFormatToken('ggggg',    'weekYear');
    addWeekYearFormatToken('GGGG',  'isoWeekYear');
    addWeekYearFormatToken('GGGGG', 'isoWeekYear');

    // ALIASES

    addUnitAlias('weekYear', 'gg');
    addUnitAlias('isoWeekYear', 'GG');

    // PARSING

    addRegexToken('G',      matchSigned);
    addRegexToken('g',      matchSigned);
    addRegexToken('GG',     match1to2, match2);
    addRegexToken('gg',     match1to2, match2);
    addRegexToken('GGGG',   match1to4, match4);
    addRegexToken('gggg',   match1to4, match4);
    addRegexToken('GGGGG',  match1to6, match6);
    addRegexToken('ggggg',  match1to6, match6);

    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
        week[token.substr(0, 2)] = toInt(input);
    });

    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
        week[token] = utils_hooks__hooks.parseTwoDigitYear(input);
    });

    // HELPERS

    function weeksInYear(year, dow, doy) {
        return weekOfYear(local__createLocal([year, 11, 31 + dow - doy]), dow, doy).week;
    }

    // MOMENTS

    function getSetWeekYear (input) {
        var year = weekOfYear(this, this.localeData()._week.dow, this.localeData()._week.doy).year;
        return input == null ? year : this.add((input - year), 'y');
    }

    function getSetISOWeekYear (input) {
        var year = weekOfYear(this, 1, 4).year;
        return input == null ? year : this.add((input - year), 'y');
    }

    function getISOWeeksInYear () {
        return weeksInYear(this.year(), 1, 4);
    }

    function getWeeksInYear () {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
    }

    addFormatToken('Q', 0, 0, 'quarter');

    // ALIASES

    addUnitAlias('quarter', 'Q');

    // PARSING

    addRegexToken('Q', match1);
    addParseToken('Q', function (input, array) {
        array[MONTH] = (toInt(input) - 1) * 3;
    });

    // MOMENTS

    function getSetQuarter (input) {
        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
    }

    addFormatToken('D', ['DD', 2], 'Do', 'date');

    // ALIASES

    addUnitAlias('date', 'D');

    // PARSING

    addRegexToken('D',  match1to2);
    addRegexToken('DD', match1to2, match2);
    addRegexToken('Do', function (isStrict, locale) {
        return isStrict ? locale._ordinalParse : locale._ordinalParseLenient;
    });

    addParseToken(['D', 'DD'], DATE);
    addParseToken('Do', function (input, array) {
        array[DATE] = toInt(input.match(match1to2)[0], 10);
    });

    // MOMENTS

    var getSetDayOfMonth = makeGetSet('Date', true);

    addFormatToken('d', 0, 'do', 'day');

    addFormatToken('dd', 0, 0, function (format) {
        return this.localeData().weekdaysMin(this, format);
    });

    addFormatToken('ddd', 0, 0, function (format) {
        return this.localeData().weekdaysShort(this, format);
    });

    addFormatToken('dddd', 0, 0, function (format) {
        return this.localeData().weekdays(this, format);
    });

    addFormatToken('e', 0, 0, 'weekday');
    addFormatToken('E', 0, 0, 'isoWeekday');

    // ALIASES

    addUnitAlias('day', 'd');
    addUnitAlias('weekday', 'e');
    addUnitAlias('isoWeekday', 'E');

    // PARSING

    addRegexToken('d',    match1to2);
    addRegexToken('e',    match1to2);
    addRegexToken('E',    match1to2);
    addRegexToken('dd',   matchWord);
    addRegexToken('ddd',  matchWord);
    addRegexToken('dddd', matchWord);

    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config) {
        var weekday = config._locale.weekdaysParse(input);
        // if we didn't get a weekday name, mark the date as invalid
        if (weekday != null) {
            week.d = weekday;
        } else {
            getParsingFlags(config).invalidWeekday = input;
        }
    });

    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
        week[token] = toInt(input);
    });

    // HELPERS

    function parseWeekday(input, locale) {
        if (typeof input !== 'string') {
            return input;
        }

        if (!isNaN(input)) {
            return parseInt(input, 10);
        }

        input = locale.weekdaysParse(input);
        if (typeof input === 'number') {
            return input;
        }

        return null;
    }

    // LOCALES

    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
    function localeWeekdays (m) {
        return this._weekdays[m.day()];
    }

    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
    function localeWeekdaysShort (m) {
        return this._weekdaysShort[m.day()];
    }

    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
    function localeWeekdaysMin (m) {
        return this._weekdaysMin[m.day()];
    }

    function localeWeekdaysParse (weekdayName) {
        var i, mom, regex;

        this._weekdaysParse = this._weekdaysParse || [];

        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already
            if (!this._weekdaysParse[i]) {
                mom = local__createLocal([2000, 1]).day(i);
                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (this._weekdaysParse[i].test(weekdayName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function getSetDayOfWeek (input) {
        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
        if (input != null) {
            input = parseWeekday(input, this.localeData());
            return this.add(input - day, 'd');
        } else {
            return day;
        }
    }

    function getSetLocaleDayOfWeek (input) {
        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
        return input == null ? weekday : this.add(input - weekday, 'd');
    }

    function getSetISODayOfWeek (input) {
        // behaves the same as moment#day except
        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
        // as a setter, sunday should belong to the previous week.
        return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);
    }

    addFormatToken('H', ['HH', 2], 0, 'hour');
    addFormatToken('h', ['hh', 2], 0, function () {
        return this.hours() % 12 || 12;
    });

    function meridiem (token, lowercase) {
        addFormatToken(token, 0, 0, function () {
            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
        });
    }

    meridiem('a', true);
    meridiem('A', false);

    // ALIASES

    addUnitAlias('hour', 'h');

    // PARSING

    function matchMeridiem (isStrict, locale) {
        return locale._meridiemParse;
    }

    addRegexToken('a',  matchMeridiem);
    addRegexToken('A',  matchMeridiem);
    addRegexToken('H',  match1to2);
    addRegexToken('h',  match1to2);
    addRegexToken('HH', match1to2, match2);
    addRegexToken('hh', match1to2, match2);

    addParseToken(['H', 'HH'], HOUR);
    addParseToken(['a', 'A'], function (input, array, config) {
        config._isPm = config._locale.isPM(input);
        config._meridiem = input;
    });
    addParseToken(['h', 'hh'], function (input, array, config) {
        array[HOUR] = toInt(input);
        getParsingFlags(config).bigHour = true;
    });

    // LOCALES

    function localeIsPM (input) {
        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
        // Using charAt should be more compatible.
        return ((input + '').toLowerCase().charAt(0) === 'p');
    }

    var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
    function localeMeridiem (hours, minutes, isLower) {
        if (hours > 11) {
            return isLower ? 'pm' : 'PM';
        } else {
            return isLower ? 'am' : 'AM';
        }
    }


    // MOMENTS

    // Setting the hour should keep the time, because the user explicitly
    // specified which hour he wants. So trying to maintain the same hour (in
    // a new timezone) makes sense. Adding/subtracting hours does not follow
    // this rule.
    var getSetHour = makeGetSet('Hours', true);

    addFormatToken('m', ['mm', 2], 0, 'minute');

    // ALIASES

    addUnitAlias('minute', 'm');

    // PARSING

    addRegexToken('m',  match1to2);
    addRegexToken('mm', match1to2, match2);
    addParseToken(['m', 'mm'], MINUTE);

    // MOMENTS

    var getSetMinute = makeGetSet('Minutes', false);

    addFormatToken('s', ['ss', 2], 0, 'second');

    // ALIASES

    addUnitAlias('second', 's');

    // PARSING

    addRegexToken('s',  match1to2);
    addRegexToken('ss', match1to2, match2);
    addParseToken(['s', 'ss'], SECOND);

    // MOMENTS

    var getSetSecond = makeGetSet('Seconds', false);

    addFormatToken('S', 0, 0, function () {
        return ~~(this.millisecond() / 100);
    });

    addFormatToken(0, ['SS', 2], 0, function () {
        return ~~(this.millisecond() / 10);
    });

    addFormatToken(0, ['SSS', 3], 0, 'millisecond');
    addFormatToken(0, ['SSSS', 4], 0, function () {
        return this.millisecond() * 10;
    });
    addFormatToken(0, ['SSSSS', 5], 0, function () {
        return this.millisecond() * 100;
    });
    addFormatToken(0, ['SSSSSS', 6], 0, function () {
        return this.millisecond() * 1000;
    });
    addFormatToken(0, ['SSSSSSS', 7], 0, function () {
        return this.millisecond() * 10000;
    });
    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
        return this.millisecond() * 100000;
    });
    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
        return this.millisecond() * 1000000;
    });


    // ALIASES

    addUnitAlias('millisecond', 'ms');

    // PARSING

    addRegexToken('S',    match1to3, match1);
    addRegexToken('SS',   match1to3, match2);
    addRegexToken('SSS',  match1to3, match3);

    var token;
    for (token = 'SSSS'; token.length <= 9; token += 'S') {
        addRegexToken(token, matchUnsigned);
    }

    function parseMs(input, array) {
        array[MILLISECOND] = toInt(('0.' + input) * 1000);
    }

    for (token = 'S'; token.length <= 9; token += 'S') {
        addParseToken(token, parseMs);
    }
    // MOMENTS

    var getSetMillisecond = makeGetSet('Milliseconds', false);

    addFormatToken('z',  0, 0, 'zoneAbbr');
    addFormatToken('zz', 0, 0, 'zoneName');

    // MOMENTS

    function getZoneAbbr () {
        return this._isUTC ? 'UTC' : '';
    }

    function getZoneName () {
        return this._isUTC ? 'Coordinated Universal Time' : '';
    }

    var momentPrototype__proto = Moment.prototype;

    momentPrototype__proto.add          = add_subtract__add;
    momentPrototype__proto.calendar     = moment_calendar__calendar;
    momentPrototype__proto.clone        = clone;
    momentPrototype__proto.diff         = diff;
    momentPrototype__proto.endOf        = endOf;
    momentPrototype__proto.format       = format;
    momentPrototype__proto.from         = from;
    momentPrototype__proto.fromNow      = fromNow;
    momentPrototype__proto.to           = to;
    momentPrototype__proto.toNow        = toNow;
    momentPrototype__proto.get          = getSet;
    momentPrototype__proto.invalidAt    = invalidAt;
    momentPrototype__proto.isAfter      = isAfter;
    momentPrototype__proto.isBefore     = isBefore;
    momentPrototype__proto.isBetween    = isBetween;
    momentPrototype__proto.isSame       = isSame;
    momentPrototype__proto.isValid      = moment_valid__isValid;
    momentPrototype__proto.lang         = lang;
    momentPrototype__proto.locale       = locale;
    momentPrototype__proto.localeData   = localeData;
    momentPrototype__proto.max          = prototypeMax;
    momentPrototype__proto.min          = prototypeMin;
    momentPrototype__proto.parsingFlags = parsingFlags;
    momentPrototype__proto.set          = getSet;
    momentPrototype__proto.startOf      = startOf;
    momentPrototype__proto.subtract     = add_subtract__subtract;
    momentPrototype__proto.toArray      = toArray;
    momentPrototype__proto.toObject     = toObject;
    momentPrototype__proto.toDate       = toDate;
    momentPrototype__proto.toISOString  = moment_format__toISOString;
    momentPrototype__proto.toJSON       = moment_format__toISOString;
    momentPrototype__proto.toString     = toString;
    momentPrototype__proto.unix         = unix;
    momentPrototype__proto.valueOf      = to_type__valueOf;

    // Year
    momentPrototype__proto.year       = getSetYear;
    momentPrototype__proto.isLeapYear = getIsLeapYear;

    // Week Year
    momentPrototype__proto.weekYear    = getSetWeekYear;
    momentPrototype__proto.isoWeekYear = getSetISOWeekYear;

    // Quarter
    momentPrototype__proto.quarter = momentPrototype__proto.quarters = getSetQuarter;

    // Month
    momentPrototype__proto.month       = getSetMonth;
    momentPrototype__proto.daysInMonth = getDaysInMonth;

    // Week
    momentPrototype__proto.week           = momentPrototype__proto.weeks        = getSetWeek;
    momentPrototype__proto.isoWeek        = momentPrototype__proto.isoWeeks     = getSetISOWeek;
    momentPrototype__proto.weeksInYear    = getWeeksInYear;
    momentPrototype__proto.isoWeeksInYear = getISOWeeksInYear;

    // Day
    momentPrototype__proto.date       = getSetDayOfMonth;
    momentPrototype__proto.day        = momentPrototype__proto.days             = getSetDayOfWeek;
    momentPrototype__proto.weekday    = getSetLocaleDayOfWeek;
    momentPrototype__proto.isoWeekday = getSetISODayOfWeek;
    momentPrototype__proto.dayOfYear  = getSetDayOfYear;

    // Hour
    momentPrototype__proto.hour = momentPrototype__proto.hours = getSetHour;

    // Minute
    momentPrototype__proto.minute = momentPrototype__proto.minutes = getSetMinute;

    // Second
    momentPrototype__proto.second = momentPrototype__proto.seconds = getSetSecond;

    // Millisecond
    momentPrototype__proto.millisecond = momentPrototype__proto.milliseconds = getSetMillisecond;

    // Offset
    momentPrototype__proto.utcOffset            = getSetOffset;
    momentPrototype__proto.utc                  = setOffsetToUTC;
    momentPrototype__proto.local                = setOffsetToLocal;
    momentPrototype__proto.parseZone            = setOffsetToParsedOffset;
    momentPrototype__proto.hasAlignedHourOffset = hasAlignedHourOffset;
    momentPrototype__proto.isDST                = isDaylightSavingTime;
    momentPrototype__proto.isDSTShifted         = isDaylightSavingTimeShifted;
    momentPrototype__proto.isLocal              = isLocal;
    momentPrototype__proto.isUtcOffset          = isUtcOffset;
    momentPrototype__proto.isUtc                = isUtc;
    momentPrototype__proto.isUTC                = isUtc;

    // Timezone
    momentPrototype__proto.zoneAbbr = getZoneAbbr;
    momentPrototype__proto.zoneName = getZoneName;

    // Deprecations
    momentPrototype__proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
    momentPrototype__proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
    momentPrototype__proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);
    momentPrototype__proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. https://github.com/moment/moment/issues/1779', getSetZone);

    var momentPrototype = momentPrototype__proto;

    function moment__createUnix (input) {
        return local__createLocal(input * 1000);
    }

    function moment__createInZone () {
        return local__createLocal.apply(null, arguments).parseZone();
    }

    var defaultCalendar = {
        sameDay : '[Today at] LT',
        nextDay : '[Tomorrow at] LT',
        nextWeek : 'dddd [at] LT',
        lastDay : '[Yesterday at] LT',
        lastWeek : '[Last] dddd [at] LT',
        sameElse : 'L'
    };

    function locale_calendar__calendar (key, mom, now) {
        var output = this._calendar[key];
        return typeof output === 'function' ? output.call(mom, now) : output;
    }

    var defaultLongDateFormat = {
        LTS  : 'h:mm:ss A',
        LT   : 'h:mm A',
        L    : 'MM/DD/YYYY',
        LL   : 'MMMM D, YYYY',
        LLL  : 'MMMM D, YYYY h:mm A',
        LLLL : 'dddd, MMMM D, YYYY h:mm A'
    };

    function longDateFormat (key) {
        var format = this._longDateFormat[key],
            formatUpper = this._longDateFormat[key.toUpperCase()];

        if (format || !formatUpper) {
            return format;
        }

        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
            return val.slice(1);
        });

        return this._longDateFormat[key];
    }

    var defaultInvalidDate = 'Invalid date';

    function invalidDate () {
        return this._invalidDate;
    }

    var defaultOrdinal = '%d';
    var defaultOrdinalParse = /\d{1,2}/;

    function ordinal (number) {
        return this._ordinal.replace('%d', number);
    }

    function preParsePostFormat (string) {
        return string;
    }

    var defaultRelativeTime = {
        future : 'in %s',
        past   : '%s ago',
        s  : 'a few seconds',
        m  : 'a minute',
        mm : '%d minutes',
        h  : 'an hour',
        hh : '%d hours',
        d  : 'a day',
        dd : '%d days',
        M  : 'a month',
        MM : '%d months',
        y  : 'a year',
        yy : '%d years'
    };

    function relative__relativeTime (number, withoutSuffix, string, isFuture) {
        var output = this._relativeTime[string];
        return (typeof output === 'function') ?
            output(number, withoutSuffix, string, isFuture) :
            output.replace(/%d/i, number);
    }

    function pastFuture (diff, output) {
        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
        return typeof format === 'function' ? format(output) : format.replace(/%s/i, output);
    }

    function locale_set__set (config) {
        var prop, i;
        for (i in config) {
            prop = config[i];
            if (typeof prop === 'function') {
                this[i] = prop;
            } else {
                this['_' + i] = prop;
            }
        }
        // Lenient ordinal parsing accepts just a number in addition to
        // number + (possibly) stuff coming from _ordinalParseLenient.
        this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + (/\d{1,2}/).source);
    }

    var prototype__proto = Locale.prototype;

    prototype__proto._calendar       = defaultCalendar;
    prototype__proto.calendar        = locale_calendar__calendar;
    prototype__proto._longDateFormat = defaultLongDateFormat;
    prototype__proto.longDateFormat  = longDateFormat;
    prototype__proto._invalidDate    = defaultInvalidDate;
    prototype__proto.invalidDate     = invalidDate;
    prototype__proto._ordinal        = defaultOrdinal;
    prototype__proto.ordinal         = ordinal;
    prototype__proto._ordinalParse   = defaultOrdinalParse;
    prototype__proto.preparse        = preParsePostFormat;
    prototype__proto.postformat      = preParsePostFormat;
    prototype__proto._relativeTime   = defaultRelativeTime;
    prototype__proto.relativeTime    = relative__relativeTime;
    prototype__proto.pastFuture      = pastFuture;
    prototype__proto.set             = locale_set__set;

    // Month
    prototype__proto.months       =        localeMonths;
    prototype__proto._months      = defaultLocaleMonths;
    prototype__proto.monthsShort  =        localeMonthsShort;
    prototype__proto._monthsShort = defaultLocaleMonthsShort;
    prototype__proto.monthsParse  =        localeMonthsParse;

    // Week
    prototype__proto.week = localeWeek;
    prototype__proto._week = defaultLocaleWeek;
    prototype__proto.firstDayOfYear = localeFirstDayOfYear;
    prototype__proto.firstDayOfWeek = localeFirstDayOfWeek;

    // Day of Week
    prototype__proto.weekdays       =        localeWeekdays;
    prototype__proto._weekdays      = defaultLocaleWeekdays;
    prototype__proto.weekdaysMin    =        localeWeekdaysMin;
    prototype__proto._weekdaysMin   = defaultLocaleWeekdaysMin;
    prototype__proto.weekdaysShort  =        localeWeekdaysShort;
    prototype__proto._weekdaysShort = defaultLocaleWeekdaysShort;
    prototype__proto.weekdaysParse  =        localeWeekdaysParse;

    // Hours
    prototype__proto.isPM = localeIsPM;
    prototype__proto._meridiemParse = defaultLocaleMeridiemParse;
    prototype__proto.meridiem = localeMeridiem;

    function lists__get (format, index, field, setter) {
        var locale = locale_locales__getLocale();
        var utc = create_utc__createUTC().set(setter, index);
        return locale[field](utc, format);
    }

    function list (format, index, field, count, setter) {
        if (typeof format === 'number') {
            index = format;
            format = undefined;
        }

        format = format || '';

        if (index != null) {
            return lists__get(format, index, field, setter);
        }

        var i;
        var out = [];
        for (i = 0; i < count; i++) {
            out[i] = lists__get(format, i, field, setter);
        }
        return out;
    }

    function lists__listMonths (format, index) {
        return list(format, index, 'months', 12, 'month');
    }

    function lists__listMonthsShort (format, index) {
        return list(format, index, 'monthsShort', 12, 'month');
    }

    function lists__listWeekdays (format, index) {
        return list(format, index, 'weekdays', 7, 'day');
    }

    function lists__listWeekdaysShort (format, index) {
        return list(format, index, 'weekdaysShort', 7, 'day');
    }

    function lists__listWeekdaysMin (format, index) {
        return list(format, index, 'weekdaysMin', 7, 'day');
    }

    locale_locales__getSetGlobalLocale('en', {
        ordinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (toInt(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        }
    });

    // Side effect imports
    utils_hooks__hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', locale_locales__getSetGlobalLocale);
    utils_hooks__hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', locale_locales__getLocale);

    var mathAbs = Math.abs;

    function duration_abs__abs () {
        var data           = this._data;

        this._milliseconds = mathAbs(this._milliseconds);
        this._days         = mathAbs(this._days);
        this._months       = mathAbs(this._months);

        data.milliseconds  = mathAbs(data.milliseconds);
        data.seconds       = mathAbs(data.seconds);
        data.minutes       = mathAbs(data.minutes);
        data.hours         = mathAbs(data.hours);
        data.months        = mathAbs(data.months);
        data.years         = mathAbs(data.years);

        return this;
    }

    function duration_add_subtract__addSubtract (duration, input, value, direction) {
        var other = create__createDuration(input, value);

        duration._milliseconds += direction * other._milliseconds;
        duration._days         += direction * other._days;
        duration._months       += direction * other._months;

        return duration._bubble();
    }

    // supports only 2.0-style add(1, 's') or add(duration)
    function duration_add_subtract__add (input, value) {
        return duration_add_subtract__addSubtract(this, input, value, 1);
    }

    // supports only 2.0-style subtract(1, 's') or subtract(duration)
    function duration_add_subtract__subtract (input, value) {
        return duration_add_subtract__addSubtract(this, input, value, -1);
    }

    function absCeil (number) {
        if (number < 0) {
            return Math.floor(number);
        } else {
            return Math.ceil(number);
        }
    }

    function bubble () {
        var milliseconds = this._milliseconds;
        var days         = this._days;
        var months       = this._months;
        var data         = this._data;
        var seconds, minutes, hours, years, monthsFromDays;

        // if we have a mix of positive and negative values, bubble down first
        // check: https://github.com/moment/moment/issues/2166
        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||
                (milliseconds <= 0 && days <= 0 && months <= 0))) {
            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
            days = 0;
            months = 0;
        }

        // The following code bubbles up values, see the tests for
        // examples of what that means.
        data.milliseconds = milliseconds % 1000;

        seconds           = absFloor(milliseconds / 1000);
        data.seconds      = seconds % 60;

        minutes           = absFloor(seconds / 60);
        data.minutes      = minutes % 60;

        hours             = absFloor(minutes / 60);
        data.hours        = hours % 24;

        days += absFloor(hours / 24);

        // convert days to months
        monthsFromDays = absFloor(daysToMonths(days));
        months += monthsFromDays;
        days -= absCeil(monthsToDays(monthsFromDays));

        // 12 months -> 1 year
        years = absFloor(months / 12);
        months %= 12;

        data.days   = days;
        data.months = months;
        data.years  = years;

        return this;
    }

    function daysToMonths (days) {
        // 400 years have 146097 days (taking into account leap year rules)
        // 400 years have 12 months === 4800
        return days * 4800 / 146097;
    }

    function monthsToDays (months) {
        // the reverse of daysToMonths
        return months * 146097 / 4800;
    }

    function as (units) {
        var days;
        var months;
        var milliseconds = this._milliseconds;

        units = normalizeUnits(units);

        if (units === 'month' || units === 'year') {
            days   = this._days   + milliseconds / 864e5;
            months = this._months + daysToMonths(days);
            return units === 'month' ? months : months / 12;
        } else {
            // handle milliseconds separately because of floating point math errors (issue #1867)
            days = this._days + Math.round(monthsToDays(this._months));
            switch (units) {
                case 'week'   : return days / 7     + milliseconds / 6048e5;
                case 'day'    : return days         + milliseconds / 864e5;
                case 'hour'   : return days * 24    + milliseconds / 36e5;
                case 'minute' : return days * 1440  + milliseconds / 6e4;
                case 'second' : return days * 86400 + milliseconds / 1000;
                // Math.floor prevents floating point math errors here
                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;
                default: throw new Error('Unknown unit ' + units);
            }
        }
    }

    // TODO: Use this.as('ms')?
    function duration_as__valueOf () {
        return (
            this._milliseconds +
            this._days * 864e5 +
            (this._months % 12) * 2592e6 +
            toInt(this._months / 12) * 31536e6
        );
    }

    function makeAs (alias) {
        return function () {
            return this.as(alias);
        };
    }

    var asMilliseconds = makeAs('ms');
    var asSeconds      = makeAs('s');
    var asMinutes      = makeAs('m');
    var asHours        = makeAs('h');
    var asDays         = makeAs('d');
    var asWeeks        = makeAs('w');
    var asMonths       = makeAs('M');
    var asYears        = makeAs('y');

    function duration_get__get (units) {
        units = normalizeUnits(units);
        return this[units + 's']();
    }

    function makeGetter(name) {
        return function () {
            return this._data[name];
        };
    }

    var milliseconds = makeGetter('milliseconds');
    var seconds      = makeGetter('seconds');
    var minutes      = makeGetter('minutes');
    var hours        = makeGetter('hours');
    var days         = makeGetter('days');
    var months       = makeGetter('months');
    var years        = makeGetter('years');

    function weeks () {
        return absFloor(this.days() / 7);
    }

    var round = Math.round;
    var thresholds = {
        s: 45,  // seconds to minute
        m: 45,  // minutes to hour
        h: 22,  // hours to day
        d: 26,  // days to month
        M: 11   // months to year
    };

    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
    }

    function duration_humanize__relativeTime (posNegDuration, withoutSuffix, locale) {
        var duration = create__createDuration(posNegDuration).abs();
        var seconds  = round(duration.as('s'));
        var minutes  = round(duration.as('m'));
        var hours    = round(duration.as('h'));
        var days     = round(duration.as('d'));
        var months   = round(duration.as('M'));
        var years    = round(duration.as('y'));

        var a = seconds < thresholds.s && ['s', seconds]  ||
                minutes === 1          && ['m']           ||
                minutes < thresholds.m && ['mm', minutes] ||
                hours   === 1          && ['h']           ||
                hours   < thresholds.h && ['hh', hours]   ||
                days    === 1          && ['d']           ||
                days    < thresholds.d && ['dd', days]    ||
                months  === 1          && ['M']           ||
                months  < thresholds.M && ['MM', months]  ||
                years   === 1          && ['y']           || ['yy', years];

        a[2] = withoutSuffix;
        a[3] = +posNegDuration > 0;
        a[4] = locale;
        return substituteTimeAgo.apply(null, a);
    }

    // This function allows you to set a threshold for relative time strings
    function duration_humanize__getSetRelativeTimeThreshold (threshold, limit) {
        if (thresholds[threshold] === undefined) {
            return false;
        }
        if (limit === undefined) {
            return thresholds[threshold];
        }
        thresholds[threshold] = limit;
        return true;
    }

    function humanize (withSuffix) {
        var locale = this.localeData();
        var output = duration_humanize__relativeTime(this, !withSuffix, locale);

        if (withSuffix) {
            output = locale.pastFuture(+this, output);
        }

        return locale.postformat(output);
    }

    var iso_string__abs = Math.abs;

    function iso_string__toISOString() {
        // for ISO strings we do not use the normal bubbling rules:
        //  * milliseconds bubble up until they become hours
        //  * days do not bubble at all
        //  * months bubble up until they become years
        // This is because there is no context-free conversion between hours and days
        // (think of clock changes)
        // and also not between days and months (28-31 days per month)
        var seconds = iso_string__abs(this._milliseconds) / 1000;
        var days         = iso_string__abs(this._days);
        var months       = iso_string__abs(this._months);
        var minutes, hours, years;

        // 3600 seconds -> 60 minutes -> 1 hour
        minutes           = absFloor(seconds / 60);
        hours             = absFloor(minutes / 60);
        seconds %= 60;
        minutes %= 60;

        // 12 months -> 1 year
        years  = absFloor(months / 12);
        months %= 12;


        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
        var Y = years;
        var M = months;
        var D = days;
        var h = hours;
        var m = minutes;
        var s = seconds;
        var total = this.asSeconds();

        if (!total) {
            // this is the same as C#'s (Noda) and python (isodate)...
            // but not other JS (goog.date)
            return 'P0D';
        }

        return (total < 0 ? '-' : '') +
            'P' +
            (Y ? Y + 'Y' : '') +
            (M ? M + 'M' : '') +
            (D ? D + 'D' : '') +
            ((h || m || s) ? 'T' : '') +
            (h ? h + 'H' : '') +
            (m ? m + 'M' : '') +
            (s ? s + 'S' : '');
    }

    var duration_prototype__proto = Duration.prototype;

    duration_prototype__proto.abs            = duration_abs__abs;
    duration_prototype__proto.add            = duration_add_subtract__add;
    duration_prototype__proto.subtract       = duration_add_subtract__subtract;
    duration_prototype__proto.as             = as;
    duration_prototype__proto.asMilliseconds = asMilliseconds;
    duration_prototype__proto.asSeconds      = asSeconds;
    duration_prototype__proto.asMinutes      = asMinutes;
    duration_prototype__proto.asHours        = asHours;
    duration_prototype__proto.asDays         = asDays;
    duration_prototype__proto.asWeeks        = asWeeks;
    duration_prototype__proto.asMonths       = asMonths;
    duration_prototype__proto.asYears        = asYears;
    duration_prototype__proto.valueOf        = duration_as__valueOf;
    duration_prototype__proto._bubble        = bubble;
    duration_prototype__proto.get            = duration_get__get;
    duration_prototype__proto.milliseconds   = milliseconds;
    duration_prototype__proto.seconds        = seconds;
    duration_prototype__proto.minutes        = minutes;
    duration_prototype__proto.hours          = hours;
    duration_prototype__proto.days           = days;
    duration_prototype__proto.weeks          = weeks;
    duration_prototype__proto.months         = months;
    duration_prototype__proto.years          = years;
    duration_prototype__proto.humanize       = humanize;
    duration_prototype__proto.toISOString    = iso_string__toISOString;
    duration_prototype__proto.toString       = iso_string__toISOString;
    duration_prototype__proto.toJSON         = iso_string__toISOString;
    duration_prototype__proto.locale         = locale;
    duration_prototype__proto.localeData     = localeData;

    // Deprecations
    duration_prototype__proto.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', iso_string__toISOString);
    duration_prototype__proto.lang = lang;

    // Side effect imports

    addFormatToken('X', 0, 0, 'unix');
    addFormatToken('x', 0, 0, 'valueOf');

    // PARSING

    addRegexToken('x', matchSigned);
    addRegexToken('X', matchTimestamp);
    addParseToken('X', function (input, array, config) {
        config._d = new Date(parseFloat(input, 10) * 1000);
    });
    addParseToken('x', function (input, array, config) {
        config._d = new Date(toInt(input));
    });

    // Side effect imports


    utils_hooks__hooks.version = '2.10.6';

    setHookCallback(local__createLocal);

    utils_hooks__hooks.fn                    = momentPrototype;
    utils_hooks__hooks.min                   = min;
    utils_hooks__hooks.max                   = max;
    utils_hooks__hooks.utc                   = create_utc__createUTC;
    utils_hooks__hooks.unix                  = moment__createUnix;
    utils_hooks__hooks.months                = lists__listMonths;
    utils_hooks__hooks.isDate                = isDate;
    utils_hooks__hooks.locale                = locale_locales__getSetGlobalLocale;
    utils_hooks__hooks.invalid               = valid__createInvalid;
    utils_hooks__hooks.duration              = create__createDuration;
    utils_hooks__hooks.isMoment              = isMoment;
    utils_hooks__hooks.weekdays              = lists__listWeekdays;
    utils_hooks__hooks.parseZone             = moment__createInZone;
    utils_hooks__hooks.localeData            = locale_locales__getLocale;
    utils_hooks__hooks.isDuration            = isDuration;
    utils_hooks__hooks.monthsShort           = lists__listMonthsShort;
    utils_hooks__hooks.weekdaysMin           = lists__listWeekdaysMin;
    utils_hooks__hooks.defineLocale          = defineLocale;
    utils_hooks__hooks.weekdaysShort         = lists__listWeekdaysShort;
    utils_hooks__hooks.normalizeUnits        = normalizeUnits;
    utils_hooks__hooks.relativeTimeThreshold = duration_humanize__getSetRelativeTimeThreshold;

    var _moment = utils_hooks__hooks;

    return _moment;

}));

/**
 * Datepicker
 */
/*!
 * Flyin-Datepicker
 * Copyright Â© 2015 Fahid Mohammad | https://bitbucket.org/fahid_mohammad/flyin-date-picker
 */
(function(root, factory) {
    'use strict';

    var moment;
    if (typeof exports === 'object') {
        // CommonJS module
        // Load moment.js as an optional dependency
        try {
            moment = require('moment');
        } catch (e) {}
        module.exports = factory(moment);
    } else if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define(function(req) {
            // Load moment.js as an optional dependency
            var id = 'moment';
            moment = req.defined && req.defined(id) ? req(id) : undefined;
            return factory(moment);
        });
    } else {
        root.flyinDP = factory(root.moment);
    }
}(this, function(moment) {
    'use strict';

    /**
     * feature detection and helper functions
     */
    var hasMoment = typeof moment === 'function',

        hasEventListeners = !!window.addEventListener,

        document = window.document,

        sto = window.setTimeout,

        addEvent = function(el, e, callback, capture) {
            if (hasEventListeners) {
                el.addEventListener(e, callback, !!capture);
            } else {
                el.attachEvent('on' + e, callback);
            }
        },

        removeEvent = function(el, e, callback, capture) {
            if (hasEventListeners) {
                el.removeEventListener(e, callback, !!capture);
            } else {
                el.detachEvent('on' + e, callback);
            }
        },

        fireEvent = function(el, eventName, data) {
            var ev;

            if (document.createEvent) {
                ev = document.createEvent('HTMLEvents');
                ev.initEvent(eventName, true, false);
                ev = extend(ev, data);
                el.dispatchEvent(ev);
            } else if (document.createEventObject) {
                ev = document.createEventObject();
                ev = extend(ev, data);
                el.fireEvent('on' + eventName, ev);
            }
        },

        trim = function(str) {
            return str.trim ? str.trim() : str.replace(/^\s+|\s+$/g, '');
        },

        hasClass = function(el, cn) {
            return (' ' + el.className + ' ').indexOf(' ' + cn + ' ') !== -1;
        },

        addClass = function(el, cn) {
            if (!hasClass(el, cn)) {
                el.className = (el.className === '') ? cn : el.className + ' ' + cn;
            }
        },

        removeClass = function(el, cn) {
            el.className = trim((' ' + el.className + ' ').replace(' ' + cn + ' ', ' '));
        },

        isArray = function(obj) {
            return (/Array/).test(Object.prototype.toString.call(obj));
        },

        isDate = function(obj) {
            return (/Date/).test(Object.prototype.toString.call(obj)) && !isNaN(obj.getTime());
        },

        isLeapYear = function(year) {
            // solution by Matti Virkkunen: http://stackoverflow.com/a/4881951
            return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
        },

        getDaysInMonth = function(year, month) {
            return [31, isLeapYear(year) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month];
        },

        setToStartOfDay = function(date) {
            if (isDate(date)) date.setHours(0, 0, 0, 0);
        },

        compareDates = function(a, b) {
            // weak date comparison (use setToStartOfDay(date) to ensure correct result)
            return a.getTime() === b.getTime();
        },

        extend = function(to, from, overwrite) {
            var prop, hasProp;
            for (prop in from) {
                hasProp = to[prop] !== undefined;
                if (hasProp && typeof from[prop] === 'object' && from[prop].nodeName === undefined) {
                    if (isDate(from[prop])) {
                        if (overwrite) {
                            to[prop] = new Date(from[prop].getTime());
                        }
                    } else if (isArray(from[prop])) {
                        if (overwrite) {
                            to[prop] = from[prop].slice(0);
                        }
                    } else {
                        to[prop] = extend({}, from[prop], overwrite);
                    }
                } else if (overwrite || !hasProp) {
                    to[prop] = from[prop];
                }
            }
            return to;
        },

        adjustCalendar = function(calendar) {
            if (calendar.month < 0) {
                calendar.year -= Math.ceil(Math.abs(calendar.month) / 12);
                calendar.month += 12;
            }
            if (calendar.month > 11) {
                calendar.year += Math.floor(Math.abs(calendar.month) / 12);
                calendar.month -= 12;
            }
            return calendar;
        },

        /**
         * defaults and localisation
         */
        defaults = {

            // bind the picker to a form field
            field: null,

            // automatically show/hide the picker on `field` focus (default `true` if `field` is set)
            bound: undefined,

            // position of the datepicker, relative to the field (default to bottom & left)
            // ('bottom' & 'left' keywords are not used, 'top' & 'right' are modifier on the bottom/left position)
            position: 'bottom left',

            // automatically fit in the viewport even if it means repositioning from the position option
            reposition: true,

            // the default output format for `.toString()` and `field` value
            format: 'YYYY-MM-DD',

            // the initial date to view when first opened
            defaultDate: null,

            // make the `defaultDate` the initial selected value
            setDefaultDate: false,

            // first day of week (0: Sunday, 1: Monday etc)
            firstDay: 0,

            // the minimum/earliest date that can be selected
            minDate: null,
            // the maximum/latest date that can be selected
            maxDate: null,

            // Set date range
            dateRange: null,

            // Mouse Hover Effect
            mouseHoverEffect: false,
			
			//date-picker position
			datePickerPos: 'left',

            // number of years either side, or array of upper/lower range
            yearRange: 10,

            // show week numbers at head of row
            showWeekNumber: false,

            // used internally (don't config outside)
            minYear: 0,
            maxYear: 9999,
            minMonth: undefined,
            maxMonth: undefined,

            isRTL: false,

            // Additional text to append to the year in the calendar title
            yearSuffix: '',

            // Render the month after year in the calendar title
            showMonthAfterYear: false,

            // how many months are visible
            numberOfMonths: 1,

            // when numberOfMonths is used, this will help you to choose where the main calendar will be (default `left`, can be set to `right`)
            // only used for the first display or when a selected date is not visible
            mainCalendar: 'left',

            // Specify a DOM element to render the calendar in
            container: undefined,

            // internationalization
            i18n: {
                previousMonth: '',
                nextMonth: '',
                months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
                weekdays: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
                weekdaysShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']
            },
			// internationalization Arabic
            i18nArr: {
				previousMonth: '',
				nextMonth: '',
				months: [
					'\u064A\u0646\u0627\u064A\u0631', 
					'\u0641\u0628\u0631\u0627\u064A\u0631', 
					'\u0645\u0627\u0631\u0633',
					'\u0627\u0628\u0631\u064A\u0644', 
					'\u0645\u0627\u064A\u0648', 
					'\u064A\u0648\u0646\u064A\u0648', 
					'\u064A\u0648\u0644\u064A\u0648', 
					'\u0623\u063A\u0633\u0637\u0633', 
					'\u0633\u0628\u062A\u0645\u0628\u0631',
					'\u0623\u0643\u062A\u0648\u0628\u0631', 
					'\u0646\u0648\u0641\u0645\u0628\u0631', 
					'\u062F\u064A\u0633\u0645\u0628\u0631'
				],
				weekdays: [
					'\u0627\u0644\u0623\u062D\u062F', 
					'\u0627\u0644\u0627\u062B\u0646\u064A\u0646', 
					'\u0627\u0644\u062B\u0644\u0627\u062B\u0627\u0621', 
					'\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621', 
					'\u0627\u0644\u062E\u0645\u064A\u0633', 
					'\u0627\u0644\u062C\u0645\u0639\u0629', 
					'\u0627\u0644\u0633\u0628\u062A'
				],
				weekdaysShort: [
					'\u0627\u0644\u0623\u062D\u062F', 
					'\u0627\u0644\u0627\u062B\u0646\u064A\u0646', 
					'\u0627\u0644\u062B\u0644\u0627\u062B\u0627\u0621', 
					'\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621', 
					'\u0627\u0644\u062E\u0645\u064A\u0633', 
					'\u0627\u0644\u062C\u0645\u0639\u0629', 
					'\u0627\u0644\u0633\u0628\u062A'
				]
			},

            // callback function
            onSelect: null,
            onOpen: null,
            onClose: null,
            onDraw: null
        },

        /**
         * templating functions to abstract HTML rendering
         */
        renderDayName = function(opts, day, abbr) {
            day += opts.firstDay;
            while (day >= 7) {
                day -= 7;
            }
            return abbr ? opts.i18n.weekdaysShort[day] : opts.i18n.weekdays[day];
        },

        renderDay = function(d, m, y, isSelected, isToday, isDisabled, isEmpty, isRange,isRangeSelected) {
            if (isEmpty) {
                return '<td class="is-empty"></td>';
            }
            var arr = [];
            if (isDisabled) {
                arr.push('is-disabled');
            }
            if (isToday) {
                arr.push('is-today');
            }
            if (isSelected) {
                arr.push('is-selected');
            }  
			if(isRange){
				arr.push('is-range');
			}  
			if(isRangeSelected){
				arr.push('is-selected');
			}
            return '<td data-day="' + d + '" class="' + arr.join(' ') + '">' +
                '<button class="pika-button pika-day" type="button" ' +
                'data-pika-year="' + y + '" data-pika-month="' + m + '" data-pika-day="' + d + '">' +
                d +
                '</button>' +
                '</td>';
        },

        renderWeek = function(d, m, y) {
            // Lifted from http://javascript.about.com/library/blweekyear.htm, lightly modified.
            var onejan = new Date(y, 0, 1),
                weekNum = Math.ceil((((new Date(y, m, d) - onejan) / 86400000) + onejan.getDay() + 1) / 7);
            return '<td class="pika-week">' + weekNum + '</td>';
        },

        renderRow = function(days, isRTL) {
            return '<tr>' + (isRTL ? days.reverse() : days).join('') + '</tr>';
        },

        renderBody = function(rows) {
            return '<tbody>' + rows.join('') + '</tbody>';
        },

        renderHead = function(opts) {
            var i, arr = [];
            if (opts.showWeekNumber) {
                arr.push('<th></th>');
            }
            for (i = 0; i < 7; i++) {
                arr.push('<th scope="col"><abbr title="' + renderDayName(opts, i) + '">' + renderDayName(opts, i, true) + '</abbr></th>');
            }
            return '<thead>' + (opts.isRTL ? arr.reverse() : arr).join('') + '</thead>';
        },

        renderTitle = function(instance, c, year, month, refYear) {
            var i, j, arr,
                opts = instance._o,
                isMinYear = year === opts.minYear,
                isMaxYear = year === opts.maxYear,
                html = '<div class="pika-title">',
                monthHtml,
                yearHtml,
                prev = true,
                next = true;
            for (arr = [], i = 0; i < 12; i++) {
                arr.push('<option value="' + (year === refYear ? i - c : 12 + i - c) + '"' +
                    (i === month ? ' selected' : '') +
                    ((isMinYear && i < opts.minMonth) || (isMaxYear && i > opts.maxMonth) ? 'disabled' : '') + '>' +
                    opts.i18n.months[i] + '</option>');
            }
            monthHtml = '<div class="pika-label"> <select class="pika-select pika-select-month">' + arr.join('') + '</select></div>';

            if (isArray(opts.yearRange)) {
                i = opts.yearRange[0];
                j = opts.yearRange[1] + 1;
            } else {
                i = year - opts.yearRange;
                j = 1 + year + opts.yearRange;
            }

            for (arr = []; i < j && i <= opts.maxYear; i++) {
                if (i >= opts.minYear) {
                    arr.push('<option value="' + i + '"' + (i === year ? ' selected' : '') + '>' + (i) + '</option>');
                }
            }
            yearHtml = '<div class="pika-label"> <select class="pika-select pika-select-year">' + arr.join('') + '</select></div>';

            if (opts.showMonthAfterYear) {
                html += yearHtml + monthHtml;
            } else {
                html += monthHtml + yearHtml;
            }

            if (isMinYear && (month === 0 || opts.minMonth >= month)) {
                prev = false;
            }

            if (isMaxYear && (month === 11 || opts.maxMonth <= month)) {
                next = false;
            }

            if (c === 0) {
                html += '<a class="pika-prev' + (prev ? '' : ' is-disabled') + '">' + opts.i18n.previousMonth + '</a>';
            }
            if (c === (instance._o.numberOfMonths - 1)) {
                html += '<a class="pika-next' + (next ? '' : ' is-disabled') + '">' + opts.i18n.nextMonth + '</a>';
            }

            return html += '</div>';
        },

        renderTable = function(opts, data) {
            return '<table cellpadding="0" cellspacing="0" class="pika-table">' + renderHead(opts) + renderBody(data) + '</table>';
        },


        /**
         * flyinDP constructor
         */
        flyinDP = function(options) {
            var self = this,
                opts = self.config(options);

            /*
             *Background range-colour on Mouse-hover
             */
            self._onMouseOver = function(e){                
				if (opts.mouseHoverEffect === true) {
					e = e || window.event;
					var target = e.target || e.srcElement;
					var selectedDate = function(){};
					var tbl = $(target).parents('.pika-single').find('table');
					var selectedBtn = tbl.find('td.is-selected').find('button');
					var hVDate = new Date(target.getAttribute('data-pika-year'), target.getAttribute('data-pika-month'), target.getAttribute('data-pika-day'));
					if (hasClass(target, 'pika-button') && !hasClass(target, 'is-empty')){						
						tbl.find('td').each(function(){		
							$(this).removeClass('is-H');
							if($(this).hasClass('is-empty')==false && $(this).hasClass('is-disabled')==false){
								var tdButtonElm = $(this).find('button');
								var tdDate = new Date(tdButtonElm[0].getAttribute('data-pika-year'), tdButtonElm[0].getAttribute('data-pika-month'), tdButtonElm[0].getAttribute('data-pika-day'));							
								if(selectedBtn.length){
									selectedDate = new Date(selectedBtn[0].getAttribute('data-pika-year'), selectedBtn[0].getAttribute('data-pika-month'), selectedBtn[0].getAttribute('data-pika-day'));
									if(typeof selectedDate.getMonth === 'function'){
										if(selectedDate>hVDate && selectedDate>tdDate && tdDate>hVDate ){
											$(this).addClass('is-H');
										}
									}
									if(typeof selectedDate.getMonth === 'function'){
										if(selectedDate<hVDate && selectedDate<tdDate && tdDate<hVDate ){
											$(this).addClass('is-H');
										}
									}
								}else{
									if(tdDate<hVDate){
										$(this).addClass('is-H');
									}
								}
							}
						});
					}else{						
						tbl.find('td').removeClass('is-H');
					}
				}
            };

            self._onMouseDown = function(e) {
                if (!self._v) {
                    return;
                }
                e = e || window.event;
                var target = e.target || e.srcElement;
                if (!target) {
                    return;
                }
                if (!hasClass(target, 'is-disabled')) {
                    if (hasClass(target, 'pika-button') && !hasClass(target, 'is-empty')) {
                        self.setDate(new Date(target.getAttribute('data-pika-year'), target.getAttribute('data-pika-month'), target.getAttribute('data-pika-day')));
                        if (opts.bound) {
                            sto(function() {
                                self.hide();
                                if (opts.field) {
                                    opts.field.blur();
                                }else{
									console.info('No Field Defiened!');
								}
                            }, 100);
                        }
                        return;
                    } else if (hasClass(target, 'pika-prev')) {
                        self.prevMonth();
                    } else if (hasClass(target, 'pika-next')) {
                        self.nextMonth();
                    }
                }
                if (!hasClass(target, 'pika-select')) {
                    if (e.preventDefault) {
                        e.preventDefault();
                    } else {
                        e.returnValue = false;
                        return false;
                    }
                } else {
                    self._c = true;
                }
            };

            self._onChange = function(e) {
                e = e || window.event;
                var target = e.target || e.srcElement;
                if (!target) {
                    return;
                }
                if (hasClass(target, 'pika-select-month')) {
                    self.gotoMonth(target.value);
                } else if (hasClass(target, 'pika-select-year')) {
                    self.gotoYear(target.value);
                }
            };

            self._onInputChange = function(e) {
                var date;

                if (e.firedBy === self) {
                    return;
                }
                if (hasMoment) {
                    date = moment(opts.field.value, opts.format);
                    date = (date && date.isValid()) ? date.toDate() : null;
                } else {
                    date = new Date(Date.parse(opts.field.value));
                }
                self.setDate(isDate(date) ? date : null);
                if (!self._v) {
                    self.show();
                }
            };

            self._onInputFocus = function() {
                self.show();
            };

            self._onInputClick = function() {
                self.show();
            };

            self._onInputBlur = function() {
                if (!self._c) {
                    self._b = sto(function() {
                        self.hide();
                    }, 50);
                }
                self._c = false;
            };

            self._onClick = function(e) {
                e = e || window.event;
                var target = e.target || e.srcElement,
                    pEl = target;
                if (!target) {
                    return;
                }
                if (!hasEventListeners && hasClass(target, 'pika-select')) {
                    if (!target.onchange) {
                        target.setAttribute('onchange', 'return;');
                        addEvent(target, 'change', self._onChange);
                    }
                }
                do {
                    if (hasClass(pEl, 'pika-single')) {
                        return;
                    }
                }
                while ((pEl = pEl.parentNode));
                if (self._v && target !== opts.trigger) {
                    self.hide();
                }
            };

            self.el = document.createElement('div');
            self.el.className = 'pika-single' + (opts.isRTL ? ' is-rtl' : '');

            addEvent(self.el, 'mousedown', self._onMouseDown, true);
            addEvent(self.el, 'mouseover', self._onMouseOver);
            addEvent(self.el, 'change', self._onChange);

            if (opts.field) {
                if (opts.container) {
                    opts.container.appendChild(self.el);
                } else if (opts.bound) {
                    document.body.appendChild(self.el);
                } else {
                    opts.field.parentNode.insertBefore(self.el, opts.field.nextSibling);
                }
                addEvent(opts.field, 'change', self._onInputChange);

                if (!opts.defaultDate) {
                    if (hasMoment && opts.field.value) {
                        opts.defaultDate = moment(opts.field.value, opts.format).toDate();
                    } else {
                        opts.defaultDate = new Date(Date.parse(opts.field.value));
                    }
                    opts.setDefaultDate = true;
                }
            }

            var defDate = opts.defaultDate;

            if (isDate(defDate)) {
                if (opts.setDefaultDate) {
                    self.setDate(defDate, true);
                } else {
                    self.gotoDate(defDate);
                }
            } else {
                self.gotoDate(new Date());
            }

            if (opts.bound) {
                this.hide();
                self.el.className += ' is-bound';
                addEvent(opts.trigger, 'click', self._onInputClick);
                addEvent(opts.trigger, 'focus', self._onInputFocus);
                addEvent(opts.trigger, 'blur', self._onInputBlur);
            } else {
                this.show();
            }
        };

    /**
     * public flyinDP API
     */
    flyinDP.prototype = {
        /**
         * configure functionality
         */
        config: function(options) {
            if (!this._o) {
                this._o = extend({}, defaults, true);
            }

            var opts = extend(this._o, options, true);

            opts.isRTL = !!opts.isRTL;

            opts.field = (opts.field && opts.field.nodeName) ? opts.field : null;

            opts.bound = !!(opts.bound !== undefined ? opts.field && opts.bound : opts.field);

            opts.trigger = (opts.trigger && opts.trigger.nodeName) ? opts.trigger : opts.field;
			if($('html').hasClass('ar')){
			 opts.i18n =  opts.i18nArr;
			}
            var nom = parseInt(opts.numberOfMonths, 10) || 1;
            opts.numberOfMonths = nom > 4 ? 4 : nom;

            if (!isDate(opts.minDate)) {
                opts.minDate = false;
            }
            if (!isDate(opts.maxDate)) {
                opts.maxDate = false;
            }
            if ((opts.minDate && opts.maxDate) && opts.maxDate < opts.minDate) {
                opts.maxDate = opts.minDate = false;
            }
            if (opts.minDate) {
                setToStartOfDay(opts.minDate);
                opts.minYear = opts.minDate.getFullYear();
                opts.minMonth = opts.minDate.getMonth();
            }
            if (opts.maxDate) {
                setToStartOfDay(opts.maxDate);
                opts.maxYear = opts.maxDate.getFullYear();
                opts.maxMonth = opts.maxDate.getMonth();
            }

            if (isArray(opts.yearRange)) {
                var fallback = new Date().getFullYear() - 10;
                opts.yearRange[0] = parseInt(opts.yearRange[0], 10) || fallback;
                opts.yearRange[1] = parseInt(opts.yearRange[1], 10) || fallback;
            } else {
                opts.yearRange = Math.abs(parseInt(opts.yearRange, 10)) || defaults.yearRange;
                if (opts.yearRange > 100) {
                    opts.yearRange = 100;
                }
            }

            return opts;
        },

        /**
         * return a formatted string of the current selection (using Moment.js if available)
         */
        toString: function(format) {
            return !isDate(this._d) ? '' : hasMoment ? moment(this._d).format(format || this._o.format) : this._d.toDateString();
        },

        /**
         * return a Moment.js object of the current selection (if available)
         */
        getMoment: function() {
            return hasMoment ? moment(this._d) : null;
        },

        /**
         * set the current selection from a Moment.js object (if available)
         */
        setMoment: function(date, preventOnSelect) {
            if (hasMoment && moment.isMoment(date)) {
                this.setDate(date.toDate(), preventOnSelect);
            }
        },

        /**
         * return a Date object of the current selection
         */
        getDate: function() {
            return isDate(this._d) ? new Date(this._d.getTime()) : null;
        },

        /**
         * set the current selection
         */
        setDate: function(date, preventOnSelect) {
            if (!date) {
                this._d = null;

                if (this._o.field) {
                    this._o.field.value = '';
                    fireEvent(this._o.field, 'change', {
                        firedBy: this
                    });
                }

                return this.draw();
            }
            if (typeof date === 'string') {
                date = new Date(Date.parse(date));
            }
            if (!isDate(date)) {
                return;
            }

            var min = this._o.minDate,
                max = this._o.maxDate;

            if (isDate(min) && date < min) {
                date = min;
            } else if (isDate(max) && date > max) {
                date = max;
            }

            this._d = new Date(date.getTime());
            setToStartOfDay(this._d);
            this.gotoDate(this._d);

            if (this._o.field) {
                this._o.field.value = this.toString();
                fireEvent(this._o.field, 'change', {
                    firedBy: this
                });
            }
            if (!preventOnSelect && typeof this._o.onSelect === 'function') {
                this._o.onSelect.call(this, this.getDate());
            }
        },

        /**
         * change view to a specific date
         */
        gotoDate: function(date) {
            var newCalendar = true;

            if (!isDate(date)) {
                return;
            }

            if (this.calendars) {
                var firstVisibleDate = new Date(this.calendars[0].year, this.calendars[0].month, 1),
                    lastVisibleDate = new Date(this.calendars[this.calendars.length - 1].year, this.calendars[this.calendars.length - 1].month, 1),
                    visibleDate = date.getTime();
                // get the end of the month
                lastVisibleDate.setMonth(lastVisibleDate.getMonth() + 1);
                lastVisibleDate.setDate(lastVisibleDate.getDate() - 1);
                newCalendar = (visibleDate < firstVisibleDate.getTime() || lastVisibleDate.getTime() < visibleDate);
            }

            if (newCalendar) {
                this.calendars = [{
                    month: date.getMonth(),
                    year: date.getFullYear()
                }];
                if (this._o.mainCalendar === 'right') {
                    this.calendars[0].month += 1 - this._o.numberOfMonths;
                }
            }

            this.adjustCalendars();
        },

        adjustCalendars:function(){
            this.calendars[0] = adjustCalendar(this.calendars[0]);
            for (var c = 1; c < this._o.numberOfMonths; c++) {
                this.calendars[c] = adjustCalendar({
                    month: this.calendars[0].month + c,
                    year: this.calendars[0].year
                });
            }
            this.draw();
        },

        gotoToday: function() {
            this.gotoDate(new Date());
        },

        /**
         * change view to a specific month (zero-index, e.g. 0: January)
         */
        gotoMonth: function(month) {
            if (!isNaN(month)) {
                this.calendars[0].month = parseInt(month, 10);
                this.adjustCalendars();
            }
        },

        nextMonth: function() {
            this.calendars[0].month++;
            this.adjustCalendars();
        },

        prevMonth: function() {
            this.calendars[0].month--;
            this.adjustCalendars();
        },

        /**
         * change view to a specific full year (e.g. "2012")
         */
        gotoYear: function(year) {
            if (!isNaN(year)) {
                this.calendars[0].year = parseInt(year, 10);
                this.adjustCalendars();
            }
        },
		
        /**
         * change the minDate
         */
        setMinDate: function(value) {
            this._o.minDate = value;
        },

        /**
         * Change date dateRange
         */
        setDateRange: function(value) {
            this._o.dateRange = value;
            return this.draw();
        },

        /**
         * change the maxDate
         */
        setMaxDate: function(value) {
            this._o.maxDate = value;
        },

        /**
         * refresh the HTML
         */
        draw: function(force) {
            if (!this._v && !force) {
                return;
            }
            var opts = this._o,
                minYear = opts.minYear,
                maxYear = opts.maxYear,
                minMonth = opts.minMonth,
                maxMonth = opts.maxMonth,
                html = '';

            if (this._y <= minYear) {
                this._y = minYear;
                if (!isNaN(minMonth) && this._m < minMonth) {
                    this._m = minMonth;
                }
            }
            if (this._y >= maxYear) {
                this._y = maxYear;
                if (!isNaN(maxMonth) && this._m > maxMonth) {
                    this._m = maxMonth;
                }
            }
            for (var c = 0; c < opts.numberOfMonths; c++) {
                html += '<div class="pika-lendar">' + renderTitle(this, c, this.calendars[c].year, this.calendars[c].month, this.calendars[0].year) + this.render(this.calendars[c].year, this.calendars[c].month) + '</div>';
            }

            this.el.innerHTML = html;

            if (opts.bound) {
                if (opts.field.type !== 'hidden') {
                    sto(function() {
                        opts.trigger.focus();
                    }, 1);
                }
            }

            if (typeof this._o.onDraw === 'function') {
                var self = this;
                sto(function() {
                    self._o.onDraw.call(self);
                }, 0);
            }
        },
        adjustPosition: function() {
            if (this._o.container) return;			
          //  if($(window).innerWidth()>641){
				var opts = this._o;
				var field = this._o.trigger,
                pEl = field;
				var pos=$(pEl).offset();
				var rt = (pos.left -  $(this.el).innerWidth() + $(pEl).innerWidth());
				var h=$(pEl).height();
				var w=$(pEl).width();
				var widthOfDP = $(this.el).innerWidth();
				var widthOfInput = $(pEl).innerWidth();
				var mW = (widthOfDP - widthOfInput) + widthOfDP/2 - widthOfInput/2;
				if(opts.datePickerPos=='right'){					
					$(this.el).addClass('right');
					this.el.style.cssText = [
						'position: absolute',
						'left: ' + (rt) + 'px',
						'top: ' + (pos.top + $(pEl).innerHeight() + 15) + 'px'
					].join(';');
				}else if(opts.datePickerPos=='left'){				
					$(this.el).addClass('left');
					this.el.style.cssText = [
						'position: absolute',
						'left: ' + (pos.left + 0) + 'px',
						'top: ' + (pos.top + $(pEl).innerHeight() + 15) + 'px'
					].join(';');
				}else if(opts.datePickerPos=='middle'){				
					$(this.el).addClass('middle');					
					this.el.style.cssText = [
						'position: absolute',
						'left: ' + (pos.left - widthOfInput/2 - widthOfDP/2 + widthOfInput) + 'px',
						'top: ' + (pos.top + $(pEl).innerHeight() + 15) + 'px'
					].join(';');
				}
			//}				
        },

        /**
         * render HTML for a particular month
         */
        render: function(year, month) {
            var opts = this._o,
                now = new Date(),
                days = getDaysInMonth(year, month),
                before = new Date(year, month, 1).getDay(),
                data = [],
                row = [];
            setToStartOfDay(now);
            if (opts.firstDay > 0) {
                before -= opts.firstDay;
                if (before < 0) {
                    before += 7;
                }
            }
            var cells = days + before,
                after = cells;
            while (after > 7) {
                after -= 7;
            }
            cells += 7 - after;
            for (var i = 0, r = 0; i < cells; i++) {
                var day = new Date(year, month, 1 + (i - before)),
                    isDisabled = (opts.minDate && day < opts.minDate) || (opts.maxDate && day > opts.maxDate),
                    isSelected = isDate(this._d) ? compareDates(day, this._d) : false,
                    isToday = compareDates(day, now),
                    isEmpty = i < before || i >= (days + before),
					isDateRange = opts.dateRange==true && this._d>=day && isDisabled===false,
					isRangeSelected = opts.dateRange==true && (opts.minDate>=day && opts.minDate<=day);
					
                row.push(renderDay(1 + (i - before), month, year, isSelected, isToday, isDisabled, isEmpty, isDateRange,isRangeSelected));

                if (++r === 7) {
                    if (opts.showWeekNumber) {
                        row.unshift(renderWeek(i - before, month, year));
                    }
                    data.push(renderRow(row, opts.isRTL));
                    row = [];
                    r = 0;
                }
            }
            return renderTable(opts, data);
        },

        isVisible: function() {
            return this._v;
        },

        show: function() {
            if (!this._v) {
                removeClass(this.el, 'is-hidden');
                this._v = true;
                this.draw();
                if (this._o.bound) {
                    addEvent(document, 'click', this._onClick);
                    this.adjustPosition();
                }
                if (typeof this._o.onOpen === 'function') {
                    this._o.onOpen.call(this);
                }
            }
        },

        hide: function() {
            var v = this._v;
            if (v !== false) {
                if (this._o.bound) {
                    removeEvent(document, 'click', this._onClick);
                }
                this.el.style.cssText = '';
                addClass(this.el, 'is-hidden');
                this._v = false;
                if (v !== undefined && typeof this._o.onClose === 'function') {
                    this._o.onClose.call(this);
                }
            }
        },

        /**
         * GAME OVER
         */
        destroy: function() {
            this.hide();
            removeEvent(this.el, 'mousedown', this._onMouseDown, true);
            removeEvent(this.el, 'change', this._onChange);
            if (this._o.field) {
                removeEvent(this._o.field, 'change', this._onInputChange);
                if (this._o.bound) {
                    removeEvent(this._o.trigger, 'click', this._onInputClick);
                    removeEvent(this._o.trigger, 'focus', this._onInputFocus);
                    removeEvent(this._o.trigger, 'blur', this._onInputBlur);
                }
            }
            if (this.el.parentNode) {
                this.el.parentNode.removeChild(this.el);
            }
        }

    };

    return flyinDP;

}));

/**
 *Validate Screen Dimensions
 *@param Integer
 *@return Boolean
 */
function jsUpdateSize(e){{var n=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth;window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight}return e>n?!1:!0}window.onload=jsUpdateSize,window.onresize=jsUpdateSize;

//i18next, v1.6.3
//Copyright (c)2013 Jan MÃƒÂ¼hlemann (jamuhl).
//Distributed under MIT license
//http://i18next.com

(function(){function n(n,e){if(!e||"function"==typeof e)return n;for(var r in e)n[r]=e[r];return n}function e(n,e,r){var t,u=0,a=n.length,s=void 0===a||"function"==typeof n;if(r)if(s){for(t in n)if(e.apply(n[t],r)===!1)break}else for(;a>u&&e.apply(n[u++],r)!==!1;);else if(s){for(t in n)if(e.call(n[t],t,n[t])===!1)break}else for(;a>u&&e.call(n[u],u,n[u++])!==!1;);return n}function r(n){return"string"==typeof n?n.replace(/[&<>"'\/]/g,function(n){return C[n]}):n}function t(n){var e=function(n){if(window.XMLHttpRequest)return n(null,new XMLHttpRequest);if(window.ActiveXObject)try{return n(null,new ActiveXObject("Msxml2.XMLHTTP"))}catch(e){return n(null,new ActiveXObject("Microsoft.XMLHTTP"))}return n(Error())},r=function(n){if("string"==typeof n)return n;var e=[];for(var r in n)n.hasOwnProperty(r)&&e.push(encodeURIComponent(r)+"="+encodeURIComponent(n[r]));return e.join("&")},t=function(n){n=n.replace(/\r\n/g,"\n");for(var e="",r=0;n.length>r;r++){var t=n.charCodeAt(r);128>t?e+=String.fromCharCode(t):t>127&&2048>t?(e+=String.fromCharCode(192|t>>6),e+=String.fromCharCode(128|63&t)):(e+=String.fromCharCode(224|t>>12),e+=String.fromCharCode(128|63&t>>6),e+=String.fromCharCode(128|63&t))}return e},u=function(n){var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";n=t(n);var r,u,a,s,o,i,l,c="",f=0;do r=n.charCodeAt(f++),u=n.charCodeAt(f++),a=n.charCodeAt(f++),s=r>>2,o=(3&r)<<4|u>>4,i=(15&u)<<2|a>>6,l=63&a,isNaN(u)?i=l=64:isNaN(a)&&(l=64),c+=e.charAt(s)+e.charAt(o)+e.charAt(i)+e.charAt(l),r=u=a="",s=o=i=l="";while(n.length>f);return c},a=function(){for(var n=arguments[0],e=1;arguments.length>e;e++){var r=arguments[e];for(var t in r)r.hasOwnProperty(t)&&(n[t]=r[t])}return n},s=function(n,t,u,o){"function"==typeof u&&(o=u,u={}),u.cache=u.cache||!1,u.data=u.data||{},u.headers=u.headers||{},u.jsonp=u.jsonp||!1,u.async=void 0===u.async?!0:u.async;var i,l=a({accept:"*/*","content-type":"application/x-www-form-urlencoded;charset=UTF-8"},s.headers,u.headers);if(i="application/json"===l["content-type"]?JSON.stringify(u.data):r(u.data),"GET"===n){var c=[];if(i&&(c.push(i),i=null),u.cache||c.push("_="+(new Date).getTime()),u.jsonp&&(c.push("callback="+u.jsonp),c.push("jsonp="+u.jsonp)),c=c.join("&"),c.length>1&&(t+=t.indexOf("?")>-1?"&"+c:"?"+c),u.jsonp){var f=document.getElementsByTagName("head")[0],m=document.createElement("script");return m.type="text/javascript",m.src=t,f.appendChild(m),void 0}}e(function(e,r){if(e)return o(e);r.open(n,t,u.async);for(var a in l)l.hasOwnProperty(a)&&r.setRequestHeader(a,l[a]);r.onreadystatechange=function(){if(4===r.readyState){var n=r.responseText||"";if(!o)return;o(r.status,{text:function(){return n},json:function(){return JSON.parse(n)}})}},r.send(i)})},o={authBasic:function(n,e){s.headers.Authorization="Basic "+u(n+":"+e)},connect:function(n,e,r){return s("CONNECT",n,e,r)},del:function(n,e,r){return s("DELETE",n,e,r)},get:function(n,e,r){return s("GET",n,e,r)},head:function(n,e,r){return s("HEAD",n,e,r)},headers:function(n){s.headers=n||{}},isAllowed:function(n,e,r){this.options(n,function(n,t){r(-1!==t.text().indexOf(e))})},options:function(n,e,r){return s("OPTIONS",n,e,r)},patch:function(n,e,r){return s("PATCH",n,e,r)},post:function(n,e,r){return s("POST",n,e,r)},put:function(n,e,r){return s("PUT",n,e,r)},trace:function(n,e,r){return s("TRACE",n,e,r)}},i=n.type?n.type.toLowerCase():"get";o[i](n.url,n,function(e,r){200===e?n.success(r.json(),e,null):n.error(r.text(),e,null)})}function u(n,e){"function"==typeof n&&(e=n,n={}),n=n||{},E.extend(A,n),"string"==typeof A.ns&&(A.ns={namespaces:[A.ns],defaultNs:A.ns}),"string"==typeof A.fallbackNS&&(A.fallbackNS=[A.fallbackNS]),A.interpolationPrefixEscaped=E.regexEscape(A.interpolationPrefix),A.interpolationSuffixEscaped=E.regexEscape(A.interpolationSuffix),A.lng||(A.lng=E.detectLanguage()),A.lng?A.useCookie&&E.cookie.create(A.cookieName,A.lng,A.cookieExpirationTime):(A.lng=A.fallbackLng,A.useCookie&&E.cookie.remove(A.cookieName)),P=E.toLanguages(A.lng),S=P[0],E.log("currentLng set to: "+S),R.setCurrentLng(S),L&&A.setJqueryExt&&m();var r;if(L&&L.Deferred&&(r=L.Deferred()),!A.resStore){var t=E.toLanguages(A.lng);"string"==typeof A.preload&&(A.preload=[A.preload]);for(var u=0,a=A.preload.length;a>u;u++)for(var s=E.toLanguages(A.preload[u]),o=0,i=s.length;i>o;o++)0>t.indexOf(s[o])&&t.push(s[o]);return w.sync.load(t,A,function(n,t){j=t,e&&e(N),r&&r.resolve()}),r?r.promise():void 0}return j=A.resStore,e&&e(N),r&&r.resolve(),r?r.promise():void 0}function a(n,e){"string"==typeof n&&(n=[n]);for(var r=0,t=n.length;t>r;r++)0>A.preload.indexOf(n[r])&&A.preload.push(n[r]);return u(e)}function s(n,e,r){"string"!=typeof e?(r=e,e=A.ns.defaultNs):0>A.ns.namespaces.indexOf(e)&&A.ns.namespaces.push(e),j[n]=j[n]||{},j[n][e]=j[n][e]||{},E.extend(j[n][e],r)}function o(n){A.ns.defaultNs=n}function i(n,e){l([n],e)}function l(n,e){var r={dynamicLoad:A.dynamicLoad,resGetPath:A.resGetPath,getAsync:A.getAsync,customLoad:A.customLoad,ns:{namespaces:n,defaultNs:""}},t=E.toLanguages(A.lng);"string"==typeof A.preload&&(A.preload=[A.preload]);for(var u=0,a=A.preload.length;a>u;u++)for(var s=E.toLanguages(A.preload[u]),o=0,i=s.length;i>o;o++)0>t.indexOf(s[o])&&t.push(s[o]);for(var l=[],c=0,f=t.length;f>c;c++){var m=!1,p=j[t[c]];if(p)for(var b=0,g=n.length;g>b;b++)p[n[b]]||(m=!0);else m=!0;m&&l.push(t[c])}l.length?w.sync._fetch(l,r,function(r,t){var u=n.length*l.length;E.each(n,function(n,r){0>A.ns.namespaces.indexOf(r)&&A.ns.namespaces.push(r),E.each(l,function(n,a){j[a]=j[a]||{},j[a][r]=t[a][r],u--,0===u&&e&&(A.useLocalStorage&&w.sync._storeLocal(j),e())})})}):e&&e()}function c(n,e){return u({lng:n},e)}function f(){return S}function m(){function n(n,e,r){if(0!==e.length){var t="text";if(0===e.indexOf("[")){var u=e.split("]");e=u[1],t=u[0].substr(1,u[0].length-1)}e.indexOf(";")===e.length-1&&(e=e.substr(0,e.length-2));var a;"html"===t?(a=A.defaultValueFromContent?L.extend({defaultValue:n.html()},r):r,n.html(L.t(e,a))):"text"===t?(a=A.defaultValueFromContent?L.extend({defaultValue:n.text()},r):r,n.text(L.t(e,a))):(a=A.defaultValueFromContent?L.extend({defaultValue:n.attr(t)},r):r,n.attr(t,L.t(e,a)))}}function e(e,r){var t=e.attr(A.selectorAttr);if(t){var u=e,a=e.data("i18n-target");if(a&&(u=e.find(a)||e),r||A.useDataAttrOptions!==!0||(r=e.data("i18n-options")),r=r||{},t.indexOf(";")>=0){var s=t.split(";");L.each(s,function(e,t){""!==t&&n(u,t,r)})}else n(u,t,r);A.useDataAttrOptions===!0&&e.data("i18n-options",r)}}L.t=L.t||N,L.fn.i18n=function(n){return this.each(function(){e(L(this),n);var r=L(this).find("["+A.selectorAttr+"]");r.each(function(){e(L(this),n)})})}}function p(n,e,r,t){if(!n)return n;if(t=t||e,0>n.indexOf(t.interpolationPrefix||A.interpolationPrefix))return n;var u=t.interpolationPrefix?E.regexEscape(t.interpolationPrefix):A.interpolationPrefixEscaped,a=t.interpolationSuffix?E.regexEscape(t.interpolationSuffix):A.interpolationSuffixEscaped,s="HTML"+a;return E.each(e,function(e,o){var i=r?r+A.keyseparator+e:e;"object"==typeof o&&null!==o?n=p(n,o,i,t):t.escapeInterpolation||A.escapeInterpolation?(n=n.replace(RegExp([u,i,s].join(""),"g"),o),n=n.replace(RegExp([u,i,a].join(""),"g"),E.escape(o))):n=n.replace(RegExp([u,i,a].join(""),"g"),o)}),n}function b(n,e){var r=",",t="{",u="}",a=E.extend({},e);for(delete a.postProcess;-1!=n.indexOf(A.reusePrefix)&&(T++,!(T>A.maxRecursion));){var s=n.lastIndexOf(A.reusePrefix),o=n.indexOf(A.reuseSuffix,s)+A.reuseSuffix.length,i=n.substring(s,o),l=i.replace(A.reusePrefix,"").replace(A.reuseSuffix,"");if(-1!=l.indexOf(r)){var c=l.indexOf(r);if(-1!=l.indexOf(t,c)&&-1!=l.indexOf(u,c)){var f=l.indexOf(t,c),m=l.indexOf(u,f)+u.length;try{a=E.extend(a,JSON.parse(l.substring(f,m))),l=l.substring(0,c)}catch(p){}}}var b=x(l,a);n=n.replace(i,b)}return n}function g(n){return n.context&&"string"==typeof n.context}function d(n){return void 0!==n.count&&"string"!=typeof n.count&&1!==n.count}function h(n,e){e=e||{};var r=e.defaultValue||n,t=y(n,e);return void 0!==t||t===r}function N(){return T=0,x.apply(null,arguments)}function v(){for(var n=[],e=1;arguments.length>e;e++)n.push(arguments[e]);return{postProcess:"sprintf",sprintf:n}}function x(n,e){e="string"==typeof e?v.apply(null,arguments):e||{};var r,t=e.defaultValue||n,u=y(n,e),a=e.lng?E.toLanguages(e.lng):P,s=e.ns||A.ns.defaultNs;n.indexOf(A.nsseparator)>-1&&(r=n.split(A.nsseparator),s=r[0],n=r[1]),void 0===u&&A.sendMissing&&(e.lng?F.postMissing(a[0],s,n,t,a):F.postMissing(A.lng,s,n,t,a));var o=e.postProcess||A.postProcess;void 0!==u&&o&&z[o]&&(u=z[o](u,n,e));var i=t;if(t.indexOf(A.nsseparator)>-1&&(r=t.split(A.nsseparator),i=r[1]),i===n&&A.parseMissingKey&&(t=A.parseMissingKey(t)),void 0===u&&(t=p(t,e),t=b(t,e),o&&z[o])){var l=e.defaultValue||n;u=z[o](l,n,e)}return void 0!==u?u:t}function y(n,e){e=e||{};var r,t,u=e.defaultValue||n,a=P;if(!j)return u;if(e.lng&&(a=E.toLanguages(e.lng),!j[a[0]])){var s=A.getAsync;A.getAsync=!1,w.sync.load(a,A,function(n,e){E.extend(j,e),A.getAsync=s})}var o=e.ns||A.ns.defaultNs;if(n.indexOf(A.nsseparator)>-1){var i=n.split(A.nsseparator);o=i[0],n=i[1]}if(g(e)){r=E.extend({},e),delete r.context,r.defaultValue=A.contextNotFound;var l=o+A.nsseparator+n+"_"+e.context;if(t=N(l,r),t!=A.contextNotFound)return p(t,{context:e.context})}if(d(e)){r=E.extend({},e),delete r.count,r.defaultValue=A.pluralNotFound;var c=o+A.nsseparator+n+A.pluralSuffix,f=R.get(a[0],e.count);if(f>=0?c=c+"_"+f:1===f&&(c=o+A.nsseparator+n),t=N(c,r),t!=A.pluralNotFound)return p(t,{count:e.count,interpolationPrefix:e.interpolationPrefix,interpolationSuffix:e.interpolationSuffix})}for(var m,h=n.split(A.keyseparator),v=0,k=a.length;k>v&&void 0===m;v++){for(var S=a[v],O=0,L=j[S]&&j[S][o];h[O];)L=L&&L[h[O]],O++;if(void 0!==L){if("string"==typeof L)L=p(L,e),L=b(L,e);else if("[object Array]"!==Object.prototype.toString.apply(L)||A.returnObjectTrees||e.returnObjectTrees){if(null===L&&A.fallbackOnNull===!0)L=void 0;else if(null!==L)if(A.returnObjectTrees||e.returnObjectTrees){var T={};for(var C in L)T[C]=x(o+A.nsseparator+n+A.keyseparator+C,e);L=T}else L="key '"+o+":"+n+" ("+S+")' "+"returned a object instead of string.",E.log(L)}else L=L.join("\n"),L=p(L,e),L=b(L,e);m=L}}if(void 0===m&&!e.isFallbackLookup&&(A.fallbackToDefaultNS===!0||A.fallbackNS&&A.fallbackNS.length>0))if(e.isFallbackLookup=!0,A.fallbackNS.length){for(var _=0,M=A.fallbackNS.length;M>_;_++)if(m=y(A.fallbackNS[_]+A.nsseparator+n,e)){var F=m.indexOf(A.nsseparator)>-1?m.split(A.nsseparator)[1]:m,z=u.indexOf(A.nsseparator)>-1?u.split(A.nsseparator)[1]:u;if(F!==z)break}}else m=y(n,e);return m}function k(){var n,e=[];if("undefined"!=typeof window&&(function(){for(var n=window.location.search.substring(1),r=n.split("&"),t=0;r.length>t;t++){var u=r[t].indexOf("=");if(u>0){var a=r[t].substring(0,u),s=r[t].substring(u+1);e[a]=s}}}(),e[A.detectLngQS]&&(n=e[A.detectLngQS])),!n&&"undefined"!=typeof document&&A.useCookie){var r=E.cookie.read(A.cookieName);r&&(n=r)}return n||"undefined"==typeof navigator||(n=navigator.language?navigator.language:navigator.userLanguage),n}Array.prototype.indexOf||(Array.prototype.indexOf=function(n){"use strict";if(null==this)throw new TypeError;var e=Object(this),r=e.length>>>0;if(0===r)return-1;var t=0;if(arguments.length>0&&(t=Number(arguments[1]),t!=t?t=0:0!=t&&1/0!=t&&t!=-1/0&&(t=(t>0||-1)*Math.floor(Math.abs(t)))),t>=r)return-1;for(var u=t>=0?t:Math.max(r-Math.abs(t),0);r>u;u++)if(u in e&&e[u]===n)return u;return-1}),Array.prototype.lastIndexOf||(Array.prototype.lastIndexOf=function(n){"use strict";if(null==this)throw new TypeError;var e=Object(this),r=e.length>>>0;if(0===r)return-1;var t=r;arguments.length>1&&(t=Number(arguments[1]),t!=t?t=0:0!=t&&t!=1/0&&t!=-(1/0)&&(t=(t>0||-1)*Math.floor(Math.abs(t))));for(var u=t>=0?Math.min(t,r-1):r-Math.abs(t);u>=0;u--)if(u in e&&e[u]===n)return u;return-1});var S,O=this,L=O.jQuery||O.Zepto,w={},j={},T=0,P=[];"undefined"!=typeof module&&module.exports?module.exports=w:(L&&(L.i18n=L.i18n||w),O.i18n=O.i18n||w);var A={lng:void 0,load:"all",preload:[],lowerCaseLng:!1,returnObjectTrees:!1,fallbackLng:"dev",fallbackNS:[],detectLngQS:"setLng",ns:"translation",fallbackOnNull:!0,fallbackToDefaultNS:!1,nsseparator:":",keyseparator:".",selectorAttr:"data-i18n",debug:!1,resGetPath:"locales/__lng__/__ns__.json",resPostPath:"locales/add/__lng__/__ns__",getAsync:!0,postAsync:!0,resStore:void 0,useLocalStorage:!1,localStorageExpirationTime:6048e5,dynamicLoad:!1,sendMissing:!1,sendMissingTo:"fallback",sendType:"POST",interpolationPrefix:"__",interpolationSuffix:"__",reusePrefix:"$t(",reuseSuffix:")",pluralSuffix:"_plural",pluralNotFound:["plural_not_found",Math.random()].join(""),contextNotFound:["context_not_found",Math.random()].join(""),escapeInterpolation:!1,setJqueryExt:!0,defaultValueFromContent:!0,useDataAttrOptions:!1,cookieExpirationTime:void 0,useCookie:!0,cookieName:"selectedLanguage",postProcess:void 0,parseMissingKey:void 0},C={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;"},_={create:function(n,e,r){var t;if(r){var u=new Date;u.setTime(u.getTime()+1e3*60*r),t="; expires="+u.toGMTString()}else t="";document.cookie=n+"="+e+t+"; path=/"},read:function(n){for(var e=n+"=",r=document.cookie.split(";"),t=0;r.length>t;t++){for(var u=r[t];" "==u.charAt(0);)u=u.substring(1,u.length);if(0===u.indexOf(e))return u.substring(e.length,u.length)}return null},remove:function(n){this.create(n,"",-1)}},M={create:function(){},read:function(){return null},remove:function(){}},E={extend:L?L.extend:n,each:L?L.each:e,ajax:L?L.ajax:t,cookie:"undefined"!=typeof document?_:M,detectLanguage:k,escape:r,log:function(n){A.debug&&"undefined"!=typeof console&&console.log(n)},toLanguages:function(n){var e=[];if("string"==typeof n&&n.indexOf("-")>-1){var r=n.split("-");n=A.lowerCaseLng?r[0].toLowerCase()+"-"+r[1].toLowerCase():r[0].toLowerCase()+"-"+r[1].toUpperCase(),"unspecific"!==A.load&&e.push(n),"current"!==A.load&&e.push(r[0])}else e.push(n);return-1===e.indexOf(A.fallbackLng)&&A.fallbackLng&&e.push(A.fallbackLng),e},regexEscape:function(n){return n.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&")}};E.applyReplacement=p;var F={load:function(n,e,r){e.useLocalStorage?F._loadLocal(n,e,function(t,u){for(var a=[],s=0,o=n.length;o>s;s++)u[n[s]]||a.push(n[s]);a.length>0?F._fetch(a,e,function(n,e){E.extend(u,e),F._storeLocal(e),r(null,u)}):r(null,u)}):F._fetch(n,e,function(n,e){r(null,e)})},_loadLocal:function(n,e,r){var t={},u=(new Date).getTime();if(window.localStorage){var a=n.length;E.each(n,function(n,s){var o=window.localStorage.getItem("res_"+s);o&&(o=JSON.parse(o),o.i18nStamp&&o.i18nStamp+e.localStorageExpirationTime>u&&(t[s]=o)),a--,0===a&&r(null,t)})}},_storeLocal:function(n){if(window.localStorage)for(var e in n)n[e].i18nStamp=(new Date).getTime(),window.localStorage.setItem("res_"+e,JSON.stringify(n[e]))},_fetch:function(n,e,r){var t=e.ns,u={};if(e.dynamicLoad){var a=function(n,e){r(null,e)};if("function"==typeof e.customLoad)e.customLoad(n,t.namespaces,e,a);else{var s=p(e.resGetPath,{lng:n.join("+"),ns:t.namespaces.join("+")});E.ajax({url:s,success:function(n){E.log("loaded: "+s),a(null,n)},error:function(n,e,r){E.log("failed loading: "+s),a("failed loading resource.json error: "+r)},dataType:"json",async:e.getAsync})}}else{var o,i=t.namespaces.length*n.length;E.each(t.namespaces,function(t,a){E.each(n,function(n,t){var s=function(n,e){n&&(o=o||[],o.push(n)),u[t]=u[t]||{},u[t][a]=e,i--,0===i&&r(o,u)};"function"==typeof e.customLoad?e.customLoad(t,a,e,s):F._fetchOne(t,a,e,s)})})}},_fetchOne:function(n,e,r,t){var u=p(r.resGetPath,{lng:n,ns:e});E.ajax({url:u,success:function(n){E.log("loaded: "+u),t(null,n)},error:function(n,e,r){E.log("failed loading: "+u),t(r,{})},dataType:"json",async:r.getAsync})},postMissing:function(n,e,r,t,u){var a={};a[r]=t;var s=[];if("fallback"===A.sendMissingTo&&A.fallbackLng!==!1)s.push({lng:A.fallbackLng,url:p(A.resPostPath,{lng:A.fallbackLng,ns:e})});else if("current"===A.sendMissingTo||"fallback"===A.sendMissingTo&&A.fallbackLng===!1)s.push({lng:n,url:p(A.resPostPath,{lng:n,ns:e})});else if("all"===A.sendMissingTo)for(var o=0,i=u.length;i>o;o++)s.push({lng:u[o],url:p(A.resPostPath,{lng:u[o],ns:e})});for(var l=0,c=s.length;c>l;l++){var f=s[l];E.ajax({url:f.url,type:A.sendType,data:a,success:function(){E.log("posted missing key '"+r+"' to: "+f.url);for(var n=r.split("."),u=0,a=j[f.lng][e];n[u];)a=a[n[u]]=u===n.length-1?t:a[n[u]]||{},u++},error:function(){E.log("failed posting missing key '"+r+"' to: "+f.url)},dataType:"json",async:A.postAsync})}}},R={rules:{ach:{name:"Acholi",numbers:[1,2],plurals:function(n){return Number(n>1)}},af:{name:"Afrikaans",numbers:[1,2],plurals:function(n){return Number(1!=n)}},ak:{name:"Akan",numbers:[1,2],plurals:function(n){return Number(n>1)}},am:{name:"Amharic",numbers:[1,2],plurals:function(n){return Number(n>1)}},an:{name:"Aragonese",numbers:[1,2],plurals:function(n){return Number(1!=n)}},ar:{name:"Arabic",numbers:[0,1,2,3,11,100],plurals:function(n){return Number(0===n?0:1==n?1:2==n?2:n%100>=3&&10>=n%100?3:n%100>=11?4:5)}},arn:{name:"Mapudungun",numbers:[1,2],plurals:function(n){return Number(n>1)}},ast:{name:"Asturian",numbers:[1,2],plurals:function(n){return Number(1!=n)}},ay:{name:"AymarÃƒÂ¡",numbers:[1],plurals:function(){return 0}},az:{name:"Azerbaijani",numbers:[1,2],plurals:function(n){return Number(1!=n)}},be:{name:"Belarusian",numbers:[1,2,5],plurals:function(n){return Number(1==n%10&&11!=n%100?0:n%10>=2&&4>=n%10&&(10>n%100||n%100>=20)?1:2)}},bg:{name:"Bulgarian",numbers:[1,2],plurals:function(n){return Number(1!=n)}},bn:{name:"Bengali",numbers:[1,2],plurals:function(n){return Number(1!=n)}},bo:{name:"Tibetan",numbers:[1],plurals:function(){return 0}},br:{name:"Breton",numbers:[1,2],plurals:function(n){return Number(n>1)}},bs:{name:"Bosnian",numbers:[1,2,5],plurals:function(n){return Number(1==n%10&&11!=n%100?0:n%10>=2&&4>=n%10&&(10>n%100||n%100>=20)?1:2)}},ca:{name:"Catalan",numbers:[1,2],plurals:function(n){return Number(1!=n)}},cgg:{name:"Chiga",numbers:[1],plurals:function(){return 0}},cs:{name:"Czech",numbers:[1,2,5],plurals:function(n){return Number(1==n?0:n>=2&&4>=n?1:2)}},csb:{name:"Kashubian",numbers:[1,2,5],plurals:function(n){return Number(1==n?0:n%10>=2&&4>=n%10&&(10>n%100||n%100>=20)?1:2)}},cy:{name:"Welsh",numbers:[1,2,3,8],plurals:function(n){return Number(1==n?0:2==n?1:8!=n&&11!=n?2:3)}},da:{name:"Danish",numbers:[1,2],plurals:function(n){return Number(1!=n)}},de:{name:"German",numbers:[1,2],plurals:function(n){return Number(1!=n)}},dz:{name:"Dzongkha",numbers:[1],plurals:function(){return 0}},el:{name:"Greek",numbers:[1,2],plurals:function(n){return Number(1!=n)}},en:{name:"English",numbers:[1,2],plurals:function(n){return Number(1!=n)}},eo:{name:"Esperanto",numbers:[1,2],plurals:function(n){return Number(1!=n)}},es:{name:"Spanish",numbers:[1,2],plurals:function(n){return Number(1!=n)}},es_ar:{name:"Argentinean Spanish",numbers:[1,2],plurals:function(n){return Number(1!=n)}},et:{name:"Estonian",numbers:[1,2],plurals:function(n){return Number(1!=n)}},eu:{name:"Basque",numbers:[1,2],plurals:function(n){return Number(1!=n)}},fa:{name:"Persian",numbers:[1],plurals:function(){return 0}},fi:{name:"Finnish",numbers:[1,2],plurals:function(n){return Number(1!=n)}},fil:{name:"Filipino",numbers:[1,2],plurals:function(n){return Number(n>1)}},fo:{name:"Faroese",numbers:[1,2],plurals:function(n){return Number(1!=n)}},fr:{name:"French",numbers:[1,2],plurals:function(n){return Number(n>1)}},fur:{name:"Friulian",numbers:[1,2],plurals:function(n){return Number(1!=n)}},fy:{name:"Frisian",numbers:[1,2],plurals:function(n){return Number(1!=n)}},ga:{name:"Irish",numbers:[1,2,3,7,11],plurals:function(n){return Number(1==n?0:2==n?1:7>n?2:11>n?3:4)}},gd:{name:"Scottish Gaelic",numbers:[1,2,3,20],plurals:function(n){return Number(1==n||11==n?0:2==n||12==n?1:n>2&&20>n?2:3)}},gl:{name:"Galician",numbers:[1,2],plurals:function(n){return Number(1!=n)}},gu:{name:"Gujarati",numbers:[1,2],plurals:function(n){return Number(1!=n)}},gun:{name:"Gun",numbers:[1,2],plurals:function(n){return Number(n>1)}},ha:{name:"Hausa",numbers:[1,2],plurals:function(n){return Number(1!=n)}},he:{name:"Hebrew",numbers:[1,2],plurals:function(n){return Number(1!=n)}},hi:{name:"Hindi",numbers:[1,2],plurals:function(n){return Number(1!=n)}},hr:{name:"Croatian",numbers:[1,2,5],plurals:function(n){return Number(1==n%10&&11!=n%100?0:n%10>=2&&4>=n%10&&(10>n%100||n%100>=20)?1:2)}},hu:{name:"Hungarian",numbers:[1,2],plurals:function(n){return Number(1!=n)}},hy:{name:"Armenian",numbers:[1,2],plurals:function(n){return Number(1!=n)}},ia:{name:"Interlingua",numbers:[1,2],plurals:function(n){return Number(1!=n)}},id:{name:"Indonesian",numbers:[1],plurals:function(){return 0}},is:{name:"Icelandic",numbers:[1,2],plurals:function(n){return Number(1!=n%10||11==n%100)}},it:{name:"Italian",numbers:[1,2],plurals:function(n){return Number(1!=n)}},ja:{name:"Japanese",numbers:[1],plurals:function(){return 0}},jbo:{name:"Lojban",numbers:[1],plurals:function(){return 0}},jv:{name:"Javanese",numbers:[0,1],plurals:function(n){return Number(0!==n)}},ka:{name:"Georgian",numbers:[1],plurals:function(){return 0}},kk:{name:"Kazakh",numbers:[1],plurals:function(){return 0}},km:{name:"Khmer",numbers:[1],plurals:function(){return 0}},kn:{name:"Kannada",numbers:[1,2],plurals:function(n){return Number(1!=n)}},ko:{name:"Korean",numbers:[1],plurals:function(){return 0}},ku:{name:"Kurdish",numbers:[1,2],plurals:function(n){return Number(1!=n)}},kw:{name:"Cornish",numbers:[1,2,3,4],plurals:function(n){return Number(1==n?0:2==n?1:3==n?2:3)}},ky:{name:"Kyrgyz",numbers:[1],plurals:function(){return 0}},lb:{name:"Letzeburgesch",numbers:[1,2],plurals:function(n){return Number(1!=n)}},ln:{name:"Lingala",numbers:[1,2],plurals:function(n){return Number(n>1)}},lo:{name:"Lao",numbers:[1],plurals:function(){return 0}},lt:{name:"Lithuanian",numbers:[1,2,10],plurals:function(n){return Number(1==n%10&&11!=n%100?0:n%10>=2&&(10>n%100||n%100>=20)?1:2)}},lv:{name:"Latvian",numbers:[0,1,2],plurals:function(n){return Number(1==n%10&&11!=n%100?0:0!==n?1:2)}},mai:{name:"Maithili",numbers:[1,2],plurals:function(n){return Number(1!=n)}},mfe:{name:"Mauritian Creole",numbers:[1,2],plurals:function(n){return Number(n>1)}},mg:{name:"Malagasy",numbers:[1,2],plurals:function(n){return Number(n>1)}},mi:{name:"Maori",numbers:[1,2],plurals:function(n){return Number(n>1)}},mk:{name:"Macedonian",numbers:[1,2],plurals:function(n){return Number(1==n||1==n%10?0:1)}},ml:{name:"Malayalam",numbers:[1,2],plurals:function(n){return Number(1!=n)}},mn:{name:"Mongolian",numbers:[1,2],plurals:function(n){return Number(1!=n)}},mnk:{name:"Mandinka",numbers:[0,1,2],plurals:function(n){return Number(1==n?1:2)}},mr:{name:"Marathi",numbers:[1,2],plurals:function(n){return Number(1!=n)}},ms:{name:"Malay",numbers:[1],plurals:function(){return 0}},mt:{name:"Maltese",numbers:[1,2,11,20],plurals:function(n){return Number(1==n?0:0===n||n%100>1&&11>n%100?1:n%100>10&&20>n%100?2:3)}},nah:{name:"Nahuatl",numbers:[1,2],plurals:function(n){return Number(1!=n)}},nap:{name:"Neapolitan",numbers:[1,2],plurals:function(n){return Number(1!=n)}},nb:{name:"Norwegian Bokmal",numbers:[1,2],plurals:function(n){return Number(1!=n)}},ne:{name:"Nepali",numbers:[1,2],plurals:function(n){return Number(1!=n)}},nl:{name:"Dutch",numbers:[1,2],plurals:function(n){return Number(1!=n)}},nn:{name:"Norwegian Nynorsk",numbers:[1,2],plurals:function(n){return Number(1!=n)}},no:{name:"Norwegian",numbers:[1,2],plurals:function(n){return Number(1!=n)}},nso:{name:"Northern Sotho",numbers:[1,2],plurals:function(n){return Number(1!=n)}},oc:{name:"Occitan",numbers:[1,2],plurals:function(n){return Number(n>1)}},or:{name:"Oriya",numbers:[2,1],plurals:function(n){return Number(1!=n)}},pa:{name:"Punjabi",numbers:[1,2],plurals:function(n){return Number(1!=n)}},pap:{name:"Papiamento",numbers:[1,2],plurals:function(n){return Number(1!=n)}},pl:{name:"Polish",numbers:[1,2,5],plurals:function(n){return Number(1==n?0:n%10>=2&&4>=n%10&&(10>n%100||n%100>=20)?1:2)}},pms:{name:"Piemontese",numbers:[1,2],plurals:function(n){return Number(1!=n)}},ps:{name:"Pashto",numbers:[1,2],plurals:function(n){return Number(1!=n)}},pt:{name:"Portuguese",numbers:[1,2],plurals:function(n){return Number(1!=n)}},pt_br:{name:"Brazilian Portuguese",numbers:[1,2],plurals:function(n){return Number(1!=n)}},rm:{name:"Romansh",numbers:[1,2],plurals:function(n){return Number(1!=n)}},ro:{name:"Romanian",numbers:[1,2,20],plurals:function(n){return Number(1==n?0:0===n||n%100>0&&20>n%100?1:2)}},ru:{name:"Russian",numbers:[1,2,5],plurals:function(n){return Number(1==n%10&&11!=n%100?0:n%10>=2&&4>=n%10&&(10>n%100||n%100>=20)?1:2)}},sah:{name:"Yakut",numbers:[1],plurals:function(){return 0}},sco:{name:"Scots",numbers:[1,2],plurals:function(n){return Number(1!=n)}},se:{name:"Northern Sami",numbers:[1,2],plurals:function(n){return Number(1!=n)}},si:{name:"Sinhala",numbers:[1,2],plurals:function(n){return Number(1!=n)}},sk:{name:"Slovak",numbers:[1,2,5],plurals:function(n){return Number(1==n?0:n>=2&&4>=n?1:2)}},sl:{name:"Slovenian",numbers:[5,1,2,3],plurals:function(n){return Number(1==n%100?1:2==n%100?2:3==n%100||4==n%100?3:0)}},so:{name:"Somali",numbers:[1,2],plurals:function(n){return Number(1!=n)}},son:{name:"Songhay",numbers:[1,2],plurals:function(n){return Number(1!=n)}},sq:{name:"Albanian",numbers:[1,2],plurals:function(n){return Number(1!=n)}},sr:{name:"Serbian",numbers:[1,2,5],plurals:function(n){return Number(1==n%10&&11!=n%100?0:n%10>=2&&4>=n%10&&(10>n%100||n%100>=20)?1:2)}},su:{name:"Sundanese",numbers:[1],plurals:function(){return 0}},sv:{name:"Swedish",numbers:[1,2],plurals:function(n){return Number(1!=n)}},sw:{name:"Swahili",numbers:[1,2],plurals:function(n){return Number(1!=n)}},ta:{name:"Tamil",numbers:[1,2],plurals:function(n){return Number(1!=n)}},te:{name:"Telugu",numbers:[1,2],plurals:function(n){return Number(1!=n)}},tg:{name:"Tajik",numbers:[1,2],plurals:function(n){return Number(n>1)}},th:{name:"Thai",numbers:[1],plurals:function(){return 0}},ti:{name:"Tigrinya",numbers:[1,2],plurals:function(n){return Number(n>1)}},tk:{name:"Turkmen",numbers:[1,2],plurals:function(n){return Number(1!=n)}},tr:{name:"Turkish",numbers:[1,2],plurals:function(n){return Number(n>1)}},tt:{name:"Tatar",numbers:[1],plurals:function(){return 0}},ug:{name:"Uyghur",numbers:[1],plurals:function(){return 0}},uk:{name:"Ukrainian",numbers:[1,2,5],plurals:function(n){return Number(1==n%10&&11!=n%100?0:n%10>=2&&4>=n%10&&(10>n%100||n%100>=20)?1:2)}},ur:{name:"Urdu",numbers:[1,2],plurals:function(n){return Number(1!=n)}},uz:{name:"Uzbek",numbers:[1,2],plurals:function(n){return Number(n>1)}},vi:{name:"Vietnamese",numbers:[1],plurals:function(){return 0}},wa:{name:"Walloon",numbers:[1,2],plurals:function(n){return Number(n>1)}},wo:{name:"Wolof",numbers:[1],plurals:function(){return 0}},yo:{name:"Yoruba",numbers:[1,2],plurals:function(n){return Number(1!=n)}},zh:{name:"Chinese",numbers:[1],plurals:function(){return 0}}},addRule:function(n,e){R.rules[n]=e},setCurrentLng:function(n){if(!R.currentRule||R.currentRule.lng!==n){var e=n.split("-");R.currentRule={lng:n,rule:R.rules[e[0]]}}},get:function(n,e){function r(e,r){var t;if(t=R.currentRule&&R.currentRule.lng===n?R.currentRule.rule:R.rules[e]){var u=t.plurals(r),a=t.numbers[u];return 2===t.numbers.length&&1===t.numbers[0]&&(2===a?a=-1:1===a&&(a=1)),a}return 1===r?"1":"-1"}var t=n.split("-");return r(t[0],e)}},z={},D=function(n,e){z[n]=e},I=function(){function n(n){return Object.prototype.toString.call(n).slice(8,-1).toLowerCase()}function e(n,e){for(var r=[];e>0;r[--e]=n);return r.join("")}var r=function(){return r.cache.hasOwnProperty(arguments[0])||(r.cache[arguments[0]]=r.parse(arguments[0])),r.format.call(null,r.cache[arguments[0]],arguments)};return r.format=function(r,t){var u,a,s,o,i,l,c,f=1,m=r.length,p="",b=[];for(a=0;m>a;a++)if(p=n(r[a]),"string"===p)b.push(r[a]);else if("array"===p){if(o=r[a],o[2])for(u=t[f],s=0;o[2].length>s;s++){if(!u.hasOwnProperty(o[2][s]))throw I('[sprintf] property "%s" does not exist',o[2][s]);u=u[o[2][s]]}else u=o[1]?t[o[1]]:t[f++];if(/[^s]/.test(o[8])&&"number"!=n(u))throw I("[sprintf] expecting number but found %s",n(u));switch(o[8]){case"b":u=u.toString(2);break;case"c":u=String.fromCharCode(u);break;case"d":u=parseInt(u,10);break;case"e":u=o[7]?u.toExponential(o[7]):u.toExponential();break;case"f":u=o[7]?parseFloat(u).toFixed(o[7]):parseFloat(u);break;case"o":u=u.toString(8);break;case"s":u=(u+="")&&o[7]?u.substring(0,o[7]):u;break;case"u":u=Math.abs(u);break;case"x":u=u.toString(16);break;case"X":u=u.toString(16).toUpperCase()}u=/[def]/.test(o[8])&&o[3]&&u>=0?"+"+u:u,l=o[4]?"0"==o[4]?"0":o[4].charAt(1):" ",c=o[6]-(u+"").length,i=o[6]?e(l,c):"",b.push(o[5]?u+i:i+u)}return b.join("")},r.cache={},r.parse=function(n){for(var e=n,r=[],t=[],u=0;e;){if(null!==(r=/^[^\x25]+/.exec(e)))t.push(r[0]);else if(null!==(r=/^\x25{2}/.exec(e)))t.push("%");else{if(null===(r=/^\x25(?:([1-9]\d*)\$|\(([^\)]+)\))?(\+)?(0|'[^$])?(-)?(\d+)?(?:\.(\d+))?([b-fosuxX])/.exec(e)))throw"[sprintf] huh?";if(r[2]){u|=1;var a=[],s=r[2],o=[];if(null===(o=/^([a-z_][a-z_\d]*)/i.exec(s)))throw"[sprintf] huh?";for(a.push(o[1]);""!==(s=s.substring(o[0].length));)if(null!==(o=/^\.([a-z_][a-z_\d]*)/i.exec(s)))a.push(o[1]);else{if(null===(o=/^\[(\d+)\]/.exec(s)))throw"[sprintf] huh?";a.push(o[1])}r[2]=a}else u|=2;if(3===u)throw"[sprintf] mixing positional and named placeholders is not (yet) supported";t.push(r)}e=e.substring(r[0].length)}return t},r}(),G=function(n,e){return e.unshift(n),I.apply(null,e)};D("sprintf",function(n,e,r){return r.sprintf?"[object Array]"===Object.prototype.toString.apply(r.sprintf)?G(n,r.sprintf):"object"==typeof r.sprintf?I(n,r.sprintf):n:n}),w.init=u,w.setLng=c,w.preload=a,w.addResourceBundle=s,w.loadNamespace=i,w.loadNamespaces=l,w.setDefaultNamespace=o,w.t=N,w.translate=N,w.exists=h,w.detectLanguage=E.detectLanguage,w.pluralExtensions=R,w.sync=F,w.functions=E,w.lng=f,w.addPostProcessor=D,w.options=A})();

/**
 * Language Setter
 */
var _langGlobal = (function(next){
	 return {
		langObject:null,
		langSetter:function(res){
		var url = window.location.search;
		var cval = "";
		var name = "selectedLanguage=";
		var ca = document.cookie.split(';'); 
		var obj = {};
		//console.log("url::::"+window.location.search);
		if(window.location.href.indexOf('/en/')>-1){
			cval = 'en';
		}
		else if(window.location.href.indexOf('/ar/')>-1){			
			cval = 'ar';
		}
		if(window.location.href.indexOf('.en.')>0){
			cval = 'en';
		}
		else if(window.location.href.indexOf('.ar.')>0){			
			cval = 'ar';
		}else if(window.location.href.indexOf('lng=')>-1){
			var index = window.location.search.indexOf('lng=');
			var cval = window.location.search.substring((index+4),(index+6));
		}
		else{
			for(var i=0; i<ca.length; i++) {
				var c = ca[i];
				while (c.charAt(0)==' ') c = c.substring(1);
				if (c.indexOf(name) == 0) cval = c.substring(name.length,c.length);
			}
		}

			if(cval==''){
				cval="en";
			}
			if(cval == 'en'){
				obj.en = {};
				obj.en.translation = res.res;
			}
			else{
				obj.ar = {};
				obj.ar.translation = res.res;
			}
			i18n.init({
				"lng": cval,
				"resStore": obj,
				"fallbackLng" : 'ar'
			}, function (t) {
				$(document).i18n();
			});
		},
		langInit:function(next){
			if(_langGlobal.langObject==null){
				$.get('/lng',{v:Math.random()},function(res){
					if(res =='ERROR'){
						return location.href="/flight/error"; 						
					}else{
						_langGlobal.langObject = res;
						_langGlobal.langSetter(_langGlobal.langObject);
						console.log('languages loaded');
						if(typeof next==='function'){
							return next();
						}
					}
				});
			}else{
				_langGlobal.langSetter(_langGlobal.langObject);
			}
		},
		langRender:function(next){
			if(_langGlobal.langObject!==null){				
				return next();
			}else{
				this.langInit(function(){					
					return next();
				});
			}
		}
		
	 }
}());

//initializing languages
//_langGlobal.langInit();
/*!
 * JavaScript Cookie v2.1.0
 * https://github.com/js-cookie/js-cookie
 *
 * Copyright 2006, 2015 Klaus Hartl & Fagner Brack
 * Released under the MIT license
 */
!function(e){if("function"==typeof define&&define.amd)define(e);else if("object"==typeof exports)module.exports=e();else{var n=window.Cookies,t=window.Cookies=e();t.noConflict=function(){return window.Cookies=n,t}}}(function(){function e(){for(var e=0,n={};e<arguments.length;e++){var t=arguments[e];for(var o in t)n[o]=t[o]}return n}function n(t){function o(n,r,i){var c;if(arguments.length>1){if(i=e({path:"/"},o.defaults,i),"number"==typeof i.expires){var s=new Date;s.setMilliseconds(s.getMilliseconds()+864e5*i.expires),i.expires=s}try{c=JSON.stringify(r),/^[\{\[]/.test(c)&&(r=c)}catch(a){}return r=t.write?t.write(r,n):encodeURIComponent(String(r)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g,decodeURIComponent),n=encodeURIComponent(String(n)),n=n.replace(/%(23|24|26|2B|5E|60|7C)/g,decodeURIComponent),n=n.replace(/[\(\)]/g,escape),document.cookie=[n,"=",r,i.expires&&"; expires="+i.expires.toUTCString(),i.path&&"; path="+i.path,i.domain&&"; domain="+i.domain,i.secure?"; secure":""].join("")}n||(c={});for(var p=document.cookie?document.cookie.split("; "):[],d=/(%[0-9A-Z]{2})+/g,u=0;u<p.length;u++){var f=p[u].split("="),l=f[0].replace(d,decodeURIComponent),m=f.slice(1).join("=");'"'===m.charAt(0)&&(m=m.slice(1,-1));try{if(m=t.read?t.read(m,l):t(m,l)||m.replace(d,decodeURIComponent),this.json)try{m=JSON.parse(m)}catch(a){}if(n===l){c=m;break}n||(c[l]=m)}catch(a){}}return c}return o.get=o.set=o,o.getJSON=function(){return o.apply({json:!0},[].slice.call(arguments))},o.defaults={},o.remove=function(n,t){o(n,"",e(t,{expires:-1}))},o.withConverter=n,o}return n(function(){})});

/**
 * Dynamic Loading Page Function
 */
(function($){
	$.loadingPageAnimation = function(args,arg,loadTxt) {
		$('.tnlHome,.tnlFlight,.tnlHotel,.tnlFPH,.tnlCars').removeClass('active');
		var popupHtml = '';
		//define the loading popup html
		if(typeof arg!=='undefined' && arg==true){
			// Refresh View time added language translation as lable data-i18n
			popupHtml =  '<div class="loading_popup_flight"><div id="cssload-contain"><img src="https://www.flyin.com/common/themes/v1/images/fareLoader.gif"/><span>'+((selectedLang=='en')?"Please wait. Your request is being processed...":"Ø§Ù„Ø±Ø¬Ø§Ø¡ Ø§Ù„Ø§Ù†ØªØ¸Ø§Ø± .. Ø·Ù„Ø¨Ùƒ Ù‚ÙŠØ¯ Ø§Ù„ØªÙ†ÙÙŠØ°â€¦")+'</span></div></div>';
		}else if(typeof arg!=='undefined' && arg==false){
			popupHtml = '<div class="resultsLoader loading_popup_flight"><div class="resultsLoaderCont"><span class="img"><img src="/common/themes/v2/img/loadingRsltPage.gif"/></span><span class="tit1">'+i18n.t('loadTit')+'</span><span class="tit2">'+i18n.t('loadTitFlight')+'</span><span class="searchInfo"><span class="siTit"><span class="destSpace">'+loadTxt.loadCityTxt+'</span></span> '+loadTxt.loadStr+' </span></div></div>';
		}else if(typeof arg!=='undefined' && arg=='hotel'){
			popupHtml = '<div class="resultsLoader loading_popup_flight"><div class="resultsLoaderCont"><span class="img"><img src="/common/themes/v2/img/loadingRsltPage.gif"/></span><span class="tit1">'+i18n.t('loadTit')+'</span><span class="tit2">'+i18n.t('loadTitHotel')+'</span><span class="searchInfo">'+loadTxt.loadStr+'</span></div></div>';
		}else if(typeof arg!=='undefined' && arg=='FPH' && loadTxt == "Flight"){
            popupHtml = '<div class="resultsLoader loading_popup_flight"><div class="resultsLoaderCont"><span class="img"><img src="/common/themes/v2/img/loadingRsltPage.gif"/></span><span class="tit1">'+i18n.t('loadTit')+'</span><span class="tit2">'+i18n.t('loadTitPFH')+'</span></div></div>';
        }else if(typeof arg!=='undefined' && arg=='FPH'){
			popupHtml = '<div class="resultsLoader loading_popup_flight"><div class="resultsLoaderCont"><span class="img"><img src="/common/themes/v2/img/loadingRsltPage.gif"/></span><span class="tit1">'+i18n.t('loadTit')+'</span><span class="tit2">'+i18n.t('loadTitPFH')+'</span><span class="searchInfo"><span class="siTit"><span class="destSpace">'+loadTxt.loadCityTxt+'</span></span> '+loadTxt.loadStr+' <span class="_hoteldates">'+loadTxt.loadHotelTxt+'</span></span></div></div>';
		}else if(typeof arg!=='undefined' && arg=='car'){
			popupHtml = '<div class="resultsLoader loading_popup_flight"><div class="resultsLoaderCont"><span class="img"><img src="/common/themes/v2/img/loadingRsltPage.gif"/></span><span class="tit1">'+i18n.t('loadTit')+'</span><span class="tit2">'+i18n.t('loadTitCar')+'</span><span class="searchInfo"><span class="siTit"><span class="destSpace">'+loadTxt.loadCityTxt+'</span></span> '+loadTxt.loadStr+' </span></div></div>';
		}else{
			popupHtml = '<div class="loading_popup_flight"><div id="cssload-contain"><img src="https://www.flyin.com/common/themes/v1/images/fareLoader.gif"/><span>'+((selectedLang=='en')?"Please wait. Your request is being processed...":"Ø§Ù„Ø±Ø¬Ø§Ø¡ Ø§Ù„Ø§Ù†ØªØ¸Ø§Ø± .. Ø·Ù„Ø¨Ùƒ Ù‚ÙŠØ¯ Ø§Ù„ØªÙ†ÙÙŠØ°â€¦")+'</span></div></div>';
		}
		if(args=="show"){
			//check if the popup already exists
			if($('.loading_popup_flight').length<1){				
				//Show popup
				
				$('body').removeClass("hpb");
				var offsetPopTop = $('body').offset().top;
				$('html, body').animate({scrollTop:offsetPopTop}, 0);
				console.log(arg);
				if(arg=="myAccount"){
					$('.myAccountContainer').append('<div class="loading_popup_flight myAccLoader"><div id="cssload-contain"><img src="https://www.flyin.com/common/themes/v1/images/fareLoader.gif"/><span>'+((selectedLang=='en')?"Please wait. Your request is being processed...":"Ø§Ù„Ø±Ø¬Ø§Ø¡ Ø§Ù„Ø§Ù†ØªØ¸Ø§Ø± .. Ø·Ù„Ø¨Ùƒ Ù‚ÙŠØ¯ Ø§Ù„ØªÙ†ÙÙŠØ°â€¦")+'</span></div></div>');
				} else {
					$('body').append(popupHtml);
				}
				$('body').css('overflow','hidden');
			}
		}else{	
			$('body').css('overflow','');		
			waitForElement('.loading_popup_flight',function(){
				$('.loading_popup_flight').remove();
			});
		}
	}
}(jQuery));
/**
 *@description Method to find whether the element is available and it wait until its readyState
 *@author Fahid Mohammad
 */
function waitForElement(elementPath, callBack){
  window.setTimeout(function(){
    if($(elementPath).length){
      callBack(elementPath, $(elementPath));
    }else{
      waitForElement(elementPath, callBack);
    }
  },500);
}

/**
 *Flyin Route Frontend 
 */
!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("Navigo",[],e):"object"==typeof exports?exports.Navigo=e():t.Navigo=e()}(this,function(){return function(t){function e(o){if(n[o])return n[o].exports;var r=n[o]={exports:{},id:o,loaded:!1};return t[o].call(r.exports,r,r.exports,e),r.loaded=!0,r.exports}var n={};return e.m=t,e.c=n,e.p="",e(0)}([function(t,e){"use strict";function n(t){if(Array.isArray(t)){for(var e=0,n=Array(t.length);e<t.length;e++)n[e]=t[e];return n}return Array.from(t)}function o(t){return t instanceof RegExp?t:t.replace(/\/+$/,"").replace(/^\/+/,"/")}function r(t,e){return 0===e.length?null:t?t.slice(1,t.length).reduce(function(t,n,o){return null===t&&(t={}),t[e[o]]=n,t},null):null}function i(t){var e,n=[];return e=t instanceof RegExp?t:new RegExp(o(t).replace(f,function(t,e,o){return n.push(o),h}).replace(d,g)+p),{regexp:e,paramNames:n}}function u(t){var e=arguments.length<=1||void 0===arguments[1]?[]:arguments[1];return e.map(function(e){var n=i(e.route),o=n.regexp,u=n.paramNames,a=t.match(o),s=r(a,u);return a?{match:a,route:e,params:s}:!1}).filter(function(t){return t})}function a(t,e){return u(t,e)[0]||!1}function s(t,e){var n=u(t,e.filter(function(t){var e=o(t.route);return""!==e&&"*"!==e})),r=o(t);return n.length>0?n.map(function(e){return o(t.substr(0,e.match.index))}).reduce(function(t,e){return e.length<t.length?e:t},r):r}function c(t,e){this._routes=[],this.root=t||null,this._useHash=e,this._ok=!e&&!("undefined"==typeof window||!window.history||!window.history.pushState),this._listen(),this.updatePageLinks()}var l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol?"symbol":typeof t};Object.defineProperty(e,"__esModule",{value:!0});var f=/([:*])(\w+)/g,d=/\*/g,h="([^/]+)",g="(?:.*)",p="(?:/|$)";c.prototype={helpers:{match:a,root:s,clean:o},navigate:function(t,e){t=t||"",this._ok?(history.pushState({},"",(e?"":this._getRoot()+"/")+o(t)),this.resolve()):"undefined"!=typeof window&&(window.location.href=window.location.href.replace(/#(.*)$/,"")+"#"+t)},on:function(){if(arguments.length>=2)this._add(arguments.length<=0?void 0:arguments[0],arguments.length<=1?void 0:arguments[1]);else if("object"===l(arguments.length<=0?void 0:arguments[0]))for(var t in arguments.length<=0?void 0:arguments[0])this._add(t,(arguments.length<=0?void 0:arguments[0])[t]);else"function"==typeof(arguments.length<=0?void 0:arguments[0])&&this._add("",arguments.length<=0?void 0:arguments[0]);(3!==arguments.length||(arguments.length<=2?void 0:arguments[2])!==!0)&&this.resolve()},resolve:function(t){var e,o,r=(t||this._cLoc()).replace(this._getRoot(),"");return this._useHash&&(r=r.replace(/^\/#/,"/")),o=a(r,this._routes),o?(e=o.route.handler,o.route.route instanceof RegExp?e.apply(void 0,n(o.match.slice(1,o.match.length))):e(o.params),o):!1},destroy:function(){this._routes=[],clearTimeout(this._listenningInterval),"undefined"!=typeof window?window.onpopstate=null:null},updatePageLinks:function(){var t=this;"undefined"!=typeof document&&this._findLinks().forEach(function(e){var n="javascript:void(0);",r=e.getAttribute("href");"1"!==e.getAttribute("data-navigo-set")&&(r===n&&(r=e.getAttribute("data-navigo")),e.setAttribute("href",n),e.setAttribute("data-navigo",r),e.setAttribute("data-navigo-set","1"),e.addEventListener("click",function(e){e.preventDefault(),t.navigate(o(r))}))})},_add:function(t){var e=arguments.length<=1||void 0===arguments[1]?null:arguments[1];return this._routes.push({route:t,handler:e}),this._add},link:function(t){return this._getRoot()+t},_getRoot:function(){return null!==this.root?this.root:(this.root=s(this._cLoc(),this._routes),this.root)},_listen:function(){var t=this;this._ok?window.onpopstate=function(){t.resolve()}:!function(){var e=t._cLoc(),n=void 0,o=void 0;(o=function(){n=t._cLoc(),e!==n&&(e=n,t.resolve()),t._listenningInterval=setTimeout(o,200)})()}()},_cLoc:function(){return"undefined"!=typeof window?window.location.href:""},_findLinks:function(){return[].slice.call(document.querySelectorAll("[data-navigo]"))}},e["default"]=c,t.exports=e["default"]}])});

/*!
 * async
 * https://github.com/caolan/async
 *
 * Copyright 2010-2014 Caolan McMahon
 * Released under the MIT license
 */
!function(){function n(){}function t(n){return n}function e(n){return!!n}function r(n){return!n}function u(n){return function(){if(null===n)throw new Error("Callback was already called.");n.apply(this,arguments),n=null}}function i(n){return function(){null!==n&&(n.apply(this,arguments),n=null)}}function o(n){return M(n)||"number"==typeof n.length&&n.length>=0&&n.length%1===0}function c(n,t){for(var e=-1,r=n.length;++e<r;)t(n[e],e,n)}function a(n,t){for(var e=-1,r=n.length,u=Array(r);++e<r;)u[e]=t(n[e],e,n);return u}function f(n){return a(Array(n),function(n,t){return t})}function l(n,t,e){return c(n,function(n,r,u){e=t(e,n,r,u)}),e}function s(n,t){c(W(n),function(e){t(n[e],e)})}function p(n,t){for(var e=0;e<n.length;e++)if(n[e]===t)return e;return-1}function h(n){var t,e,r=-1;return o(n)?(t=n.length,function(){return r++,t>r?r:null}):(e=W(n),t=e.length,function(){return r++,t>r?e[r]:null})}function m(n,t){return t=null==t?n.length-1:+t,function(){for(var e=Math.max(arguments.length-t,0),r=Array(e),u=0;e>u;u++)r[u]=arguments[u+t];switch(t){case 0:return n.call(this,r);case 1:return n.call(this,arguments[0],r)}}}function y(n){return function(t,e,r){return n(t,r)}}function v(t){return function(e,r,o){o=i(o||n),e=e||[];var c=h(e);if(0>=t)return o(null);var a=!1,f=0,l=!1;!function s(){if(a&&0>=f)return o(null);for(;t>f&&!l;){var n=c();if(null===n)return a=!0,void(0>=f&&o(null));f+=1,r(e[n],n,u(function(n){f-=1,n?(o(n),l=!0):s()}))}}()}}function d(n){return function(t,e,r){return n(C.eachOf,t,e,r)}}function g(n){return function(t,e,r,u){return n(v(e),t,r,u)}}function k(n){return function(t,e,r){return n(C.eachOfSeries,t,e,r)}}function b(t,e,r,u){u=i(u||n),e=e||[];var c=o(e)?[]:{};t(e,function(n,t,e){r(n,function(n,r){c[t]=r,e(n)})},function(n){u(n,c)})}function w(n,t,e,r){var u=[];n(t,function(n,t,r){e(n,function(e){e&&u.push({index:t,value:n}),r()})},function(){r(a(u.sort(function(n,t){return n.index-t.index}),function(n){return n.value}))})}function O(n,t,e,r){w(n,t,function(n,t){e(n,function(n){t(!n)})},r)}function S(n,t,e){return function(r,u,i,o){function c(){o&&o(e(!1,void 0))}function a(n,r,u){return o?void i(n,function(r){o&&t(r)&&(o(e(!0,n)),o=i=!1),u()}):u()}arguments.length>3?n(r,u,a,c):(o=i,i=u,n(r,a,c))}}function E(n,t){return t}function L(t,e,r){r=r||n;var u=o(e)?[]:{};t(e,function(n,t,e){n(m(function(n,r){r.length<=1&&(r=r[0]),u[t]=r,e(n)}))},function(n){r(n,u)})}function I(n,t,e,r){var u=[];n(t,function(n,t,r){e(n,function(n,t){u=u.concat(t||[]),r(n)})},function(n){r(n,u)})}function x(t,e,r){function i(t,e,r,u){if(null!=u&&"function"!=typeof u)throw new Error("task callback must be a function");return t.started=!0,M(e)||(e=[e]),0===e.length&&t.idle()?C.setImmediate(function(){t.drain()}):(c(e,function(e){var i={data:e,callback:u||n};r?t.tasks.unshift(i):t.tasks.push(i),t.tasks.length===t.concurrency&&t.saturated()}),void C.setImmediate(t.process))}function o(n,t){return function(){f-=1;var e=!1,r=arguments;c(t,function(n){c(l,function(t,r){t!==n||e||(l.splice(r,1),e=!0)}),n.callback.apply(n,r)}),n.tasks.length+f===0&&n.drain(),n.process()}}if(null==e)e=1;else if(0===e)throw new Error("Concurrency must not be zero");var f=0,l=[],s={tasks:[],concurrency:e,payload:r,saturated:n,empty:n,drain:n,started:!1,paused:!1,push:function(n,t){i(s,n,!1,t)},kill:function(){s.drain=n,s.tasks=[]},unshift:function(n,t){i(s,n,!0,t)},process:function(){for(;!s.paused&&f<s.concurrency&&s.tasks.length;){var n=s.payload?s.tasks.splice(0,s.payload):s.tasks.splice(0,s.tasks.length),e=a(n,function(n){return n.data});0===s.tasks.length&&s.empty(),f+=1,l.push(n[0]);var r=u(o(s,n));t(e,r)}},length:function(){return s.tasks.length},running:function(){return f},workersList:function(){return l},idle:function(){return s.tasks.length+f===0},pause:function(){s.paused=!0},resume:function(){if(s.paused!==!1){s.paused=!1;for(var n=Math.min(s.concurrency,s.tasks.length),t=1;n>=t;t++)C.setImmediate(s.process)}}};return s}function j(n){return m(function(t,e){t.apply(null,e.concat([m(function(t,e){"object"==typeof console&&(t?console.error&&console.error(t):console[n]&&c(e,function(t){console[n](t)}))})]))})}function A(n){return function(t,e,r){n(f(t),e,r)}}function T(n){return m(function(t,e){var r=m(function(e){var r=this,u=e.pop();return n(t,function(n,t,u){n.apply(r,e.concat([u]))},u)});return e.length?r.apply(this,e):r})}function z(n){return m(function(t){var e=t.pop();t.push(function(){var n=arguments;r?C.setImmediate(function(){e.apply(null,n)}):e.apply(null,n)});var r=!0;n.apply(this,t),r=!1})}var q,C={},P="object"==typeof self&&self.self===self&&self||"object"==typeof global&&global.global===global&&global||this;null!=P&&(q=P.async),C.noConflict=function(){return P.async=q,C};var H=Object.prototype.toString,M=Array.isArray||function(n){return"[object Array]"===H.call(n)},U=function(n){var t=typeof n;return"function"===t||"object"===t&&!!n},W=Object.keys||function(n){var t=[];for(var e in n)n.hasOwnProperty(e)&&t.push(e);return t},B="function"==typeof setImmediate&&setImmediate,D=B?function(n){B(n)}:function(n){setTimeout(n,0)};"object"==typeof process&&"function"==typeof process.nextTick?C.nextTick=process.nextTick:C.nextTick=D,C.setImmediate=B?D:C.nextTick,C.forEach=C.each=function(n,t,e){return C.eachOf(n,y(t),e)},C.forEachSeries=C.eachSeries=function(n,t,e){return C.eachOfSeries(n,y(t),e)},C.forEachLimit=C.eachLimit=function(n,t,e,r){return v(t)(n,y(e),r)},C.forEachOf=C.eachOf=function(t,e,r){function o(n){f--,n?r(n):null===c&&0>=f&&r(null)}r=i(r||n),t=t||[];for(var c,a=h(t),f=0;null!=(c=a());)f+=1,e(t[c],c,u(o));0===f&&r(null)},C.forEachOfSeries=C.eachOfSeries=function(t,e,r){function o(){var n=!0;return null===a?r(null):(e(t[a],a,u(function(t){if(t)r(t);else{if(a=c(),null===a)return r(null);n?C.setImmediate(o):o()}})),void(n=!1))}r=i(r||n),t=t||[];var c=h(t),a=c();o()},C.forEachOfLimit=C.eachOfLimit=function(n,t,e,r){v(t)(n,e,r)},C.map=d(b),C.mapSeries=k(b),C.mapLimit=g(b),C.inject=C.foldl=C.reduce=function(n,t,e,r){C.eachOfSeries(n,function(n,r,u){e(t,n,function(n,e){t=e,u(n)})},function(n){r(n,t)})},C.foldr=C.reduceRight=function(n,e,r,u){var i=a(n,t).reverse();C.reduce(i,e,r,u)},C.transform=function(n,t,e,r){3===arguments.length&&(r=e,e=t,t=M(n)?[]:{}),C.eachOf(n,function(n,r,u){e(t,n,r,u)},function(n){r(n,t)})},C.select=C.filter=d(w),C.selectLimit=C.filterLimit=g(w),C.selectSeries=C.filterSeries=k(w),C.reject=d(O),C.rejectLimit=g(O),C.rejectSeries=k(O),C.any=C.some=S(C.eachOf,e,t),C.someLimit=S(C.eachOfLimit,e,t),C.all=C.every=S(C.eachOf,r,r),C.everyLimit=S(C.eachOfLimit,r,r),C.detect=S(C.eachOf,t,E),C.detectSeries=S(C.eachOfSeries,t,E),C.detectLimit=S(C.eachOfLimit,t,E),C.sortBy=function(n,t,e){function r(n,t){var e=n.criteria,r=t.criteria;return r>e?-1:e>r?1:0}C.map(n,function(n,e){t(n,function(t,r){t?e(t):e(null,{value:n,criteria:r})})},function(n,t){return n?e(n):void e(null,a(t.sort(r),function(n){return n.value}))})},C.auto=function(t,e,r){function u(n){d.unshift(n)}function o(n){var t=p(d,n);t>=0&&d.splice(t,1)}function a(){h--,c(d.slice(0),function(n){n()})}"function"==typeof arguments[1]&&(r=e,e=null),r=i(r||n);var f=W(t),h=f.length;if(!h)return r(null);e||(e=h);var y={},v=0,d=[];u(function(){h||r(null,y)}),c(f,function(n){function i(){return e>v&&l(g,function(n,t){return n&&y.hasOwnProperty(t)},!0)&&!y.hasOwnProperty(n)}function c(){i()&&(v++,o(c),h[h.length-1](d,y))}for(var f,h=M(t[n])?t[n]:[t[n]],d=m(function(t,e){if(v--,e.length<=1&&(e=e[0]),t){var u={};s(y,function(n,t){u[t]=n}),u[n]=e,r(t,u)}else y[n]=e,C.setImmediate(a)}),g=h.slice(0,h.length-1),k=g.length;k--;){if(!(f=t[g[k]]))throw new Error("Has inexistant dependency");if(M(f)&&p(f,n)>=0)throw new Error("Has cyclic dependencies")}i()?(v++,h[h.length-1](d,y)):u(c)})},C.retry=function(n,t,e){function r(n,t){if("number"==typeof t)n.times=parseInt(t,10)||i;else{if("object"!=typeof t)throw new Error("Unsupported argument type for 'times': "+typeof t);n.times=parseInt(t.times,10)||i,n.interval=parseInt(t.interval,10)||o}}function u(n,t){function e(n,e){return function(r){n(function(n,t){r(!n||e,{err:n,result:t})},t)}}function r(n){return function(t){setTimeout(function(){t(null)},n)}}for(;a.times;){var u=!(a.times-=1);c.push(e(a.task,u)),!u&&a.interval>0&&c.push(r(a.interval))}C.series(c,function(t,e){e=e[e.length-1],(n||a.callback)(e.err,e.result)})}var i=5,o=0,c=[],a={times:i,interval:o},f=arguments.length;if(1>f||f>3)throw new Error("Invalid arguments - must be either (task), (task, callback), (times, task) or (times, task, callback)");return 2>=f&&"function"==typeof n&&(e=t,t=n),"function"!=typeof n&&r(a,n),a.callback=e,a.task=t,a.callback?u():u},C.waterfall=function(t,e){function r(n){return m(function(t,u){if(t)e.apply(null,[t].concat(u));else{var i=n.next();i?u.push(r(i)):u.push(e),z(n).apply(null,u)}})}if(e=i(e||n),!M(t)){var u=new Error("First argument to waterfall must be an array of functions");return e(u)}return t.length?void r(C.iterator(t))():e()},C.parallel=function(n,t){L(C.eachOf,n,t)},C.parallelLimit=function(n,t,e){L(v(t),n,e)},C.series=function(n,t){L(C.eachOfSeries,n,t)},C.iterator=function(n){function t(e){function r(){return n.length&&n[e].apply(null,arguments),r.next()}return r.next=function(){return e<n.length-1?t(e+1):null},r}return t(0)},C.apply=m(function(n,t){return m(function(e){return n.apply(null,t.concat(e))})}),C.concat=d(I),C.concatSeries=k(I),C.whilst=function(t,e,r){if(r=r||n,t()){var u=m(function(n,i){n?r(n):t.apply(this,i)?e(u):r.apply(null,[null].concat(i))});e(u)}else r(null)},C.doWhilst=function(n,t,e){var r=0;return C.whilst(function(){return++r<=1||t.apply(this,arguments)},n,e)},C.until=function(n,t,e){return C.whilst(function(){return!n.apply(this,arguments)},t,e)},C.doUntil=function(n,t,e){return C.doWhilst(n,function(){return!t.apply(this,arguments)},e)},C.during=function(t,e,r){r=r||n;var u=m(function(n,e){n?r(n):(e.push(i),t.apply(this,e))}),i=function(n,t){n?r(n):t?e(u):r(null)};t(i)},C.doDuring=function(n,t,e){var r=0;C.during(function(n){r++<1?n(null,!0):t.apply(this,arguments)},n,e)},C.queue=function(n,t){var e=x(function(t,e){n(t[0],e)},t,1);return e},C.priorityQueue=function(t,e){function r(n,t){return n.priority-t.priority}function u(n,t,e){for(var r=-1,u=n.length-1;u>r;){var i=r+(u-r+1>>>1);e(t,n[i])>=0?r=i:u=i-1}return r}function i(t,e,i,o){if(null!=o&&"function"!=typeof o)throw new Error("task callback must be a function");return t.started=!0,M(e)||(e=[e]),0===e.length?C.setImmediate(function(){t.drain()}):void c(e,function(e){var c={data:e,priority:i,callback:"function"==typeof o?o:n};t.tasks.splice(u(t.tasks,c,r)+1,0,c),t.tasks.length===t.concurrency&&t.saturated(),C.setImmediate(t.process)})}var o=C.queue(t,e);return o.push=function(n,t,e){i(o,n,t,e)},delete o.unshift,o},C.cargo=function(n,t){return x(n,1,t)},C.log=j("log"),C.dir=j("dir"),C.memoize=function(n,e){var r={},u={};e=e||t;var i=m(function(t){var i=t.pop(),o=e.apply(null,t);o in r?C.setImmediate(function(){i.apply(null,r[o])}):o in u?u[o].push(i):(u[o]=[i],n.apply(null,t.concat([m(function(n){r[o]=n;var t=u[o];delete u[o];for(var e=0,i=t.length;i>e;e++)t[e].apply(null,n)})])))});return i.memo=r,i.unmemoized=n,i},C.unmemoize=function(n){return function(){return(n.unmemoized||n).apply(null,arguments)}},C.times=A(C.map),C.timesSeries=A(C.mapSeries),C.timesLimit=function(n,t,e,r){return C.mapLimit(f(n),t,e,r)},C.seq=function(){var t=arguments;return m(function(e){var r=this,u=e[e.length-1];"function"==typeof u?e.pop():u=n,C.reduce(t,e,function(n,t,e){t.apply(r,n.concat([m(function(n,t){e(n,t)})]))},function(n,t){u.apply(r,[n].concat(t))})})},C.compose=function(){return C.seq.apply(null,Array.prototype.reverse.call(arguments))},C.applyEach=T(C.eachOf),C.applyEachSeries=T(C.eachOfSeries),C.forever=function(t,e){function r(n){return n?i(n):void o(r)}var i=u(e||n),o=z(t);r()},C.ensureAsync=z,C.constant=m(function(n){var t=[null].concat(n);return function(n){return n.apply(this,t)}}),C.wrapSync=C.asyncify=function(n){return m(function(t){var e,r=t.pop();try{e=n.apply(this,t)}catch(u){return r(u)}U(e)&&"function"==typeof e.then?e.then(function(n){r(null,n)})["catch"](function(n){r(n.message?n:new Error(n))}):r(null,e)})},"object"==typeof module&&module.exports?module.exports=C:"function"==typeof define&&define.amd?define([],function(){return C}):P.async=C}();

notie=function(){function e(){$=document.body.style.height,_=document.body.style.overflow,document.body.style.height="100%",document.body.style.overflow="hidden"}function t(){document.body.style.height=$,document.body.style.overflow=_}function n(e,t,n){document.activeElement.blur(),se++,setTimeout(function(){se--},1e3*h+10),1==se&&(le?(clearTimeout(ie),clearTimeout(oe),o(function(){i(e,t,n)})):i(e,t,n))}function i(e,t,n){le=!0;var i=0;if("undefined"==typeof n)var i=3e3;else i=1>n?1e3:1e3*n;switch(e){case 1:ee.style.backgroundColor=b;break;case 2:ee.style.backgroundColor=x;break;case 3:ee.style.backgroundColor=v;break;case 4:ee.style.backgroundColor=w}ne.innerHTML=t,ee.style.top="-10000px",ee.style.display="table",ee.style.top="-"+ee.offsetHeight-5+"px",ie=setTimeout(function(){c&&(ee.style.boxShadow="0px 0px 10px 0px rgba(0,0,0,0.5)"),ee.style.MozTransition="all "+h+"s ease",ee.style.WebkitTransition="all "+h+"s ease",ee.style.transition="all "+h+"s ease",ee.style.top=0,oe=setTimeout(function(){o(function(){})},i)},20)}function o(e){ee.style.top="-"+ee.offsetHeight-5+"px",setTimeout(function(){c&&(ee.style.boxShadow=""),ee.style.MozTransition="",ee.style.WebkitTransition="",ee.style.transition="",ee.style.top="-10000px",le=!1,e&&e()},1e3*h+10)}function l(e,t,n,i){document.activeElement.blur(),le?(clearTimeout(ie),clearTimeout(oe),o(function(){s(e,t,n,i)})):s(e,t,n,i)}function s(t,n,i,o){function l(){ue.innerHTML=t,pe.innerHTML=n,fe.innerHTML=i,de.style.top="-10000px",de.style.display="table",de.style.top="-"+de.offsetHeight-5+"px",ae.style.display="block",setTimeout(function(){c&&(de.style.boxShadow="0px 0px 10px 0px rgba(0,0,0,0.5)"),de.style.MozTransition="all "+h+"s ease",de.style.WebkitTransition="all "+h+"s ease",de.style.transition="all "+h+"s ease",de.style.top=0,ae.style.opacity="0.75",setTimeout(function(){he=!0},1e3*h+10)},20)}e(),ye.onclick=function(){d(),setTimeout(function(){o()},1e3*h+10)},he?(d(),setTimeout(function(){l()},1e3*h+10)):l()}function d(){de.style.top="-"+de.offsetHeight-5+"px",ae.style.opacity="0",setTimeout(function(){c&&(de.style.boxShadow=""),de.style.MozTransition="",de.style.WebkitTransition="",de.style.transition="",ae.style.display="none",de.style.top="-10000px",t(),he=!1},1e3*h+10)}function a(e,t,n,i,l,s,d){document.activeElement.blur(),setTimeout(function(){we.focus()},1e3*h),we.setAttribute("type",i),we.setAttribute("placeholder",l),we.value="","undefined"!=typeof d&&d.length>0&&(we.value=d),le?(clearTimeout(ie),clearTimeout(oe),o(function(){r(e,t,n,s)})):r(e,t,n,s)}function r(t,n,i,o){function l(){ke.innerHTML=t,ze.innerHTML=n,Ee.innerHTML=i,me.style.top="-10000px",me.style.display="table",me.style.top="-"+me.offsetHeight-5+"px",be.style.display="block",setTimeout(function(){c&&(me.style.boxShadow="0px 0px 10px 0px rgba(0,0,0,0.5)"),me.style.MozTransition="all "+h+"s ease",me.style.WebkitTransition="all "+h+"s ease",me.style.transition="all "+h+"s ease",me.style.top=0,be.style.opacity="0.75",setTimeout(function(){Ce=!0},1e3*h+10)},20)}e(),ge.onclick=function(){y(),setTimeout(function(){o(we.value)},1e3*h+10)},Ce?(y(),setTimeout(function(){l()},1e3*h+10)):l()}function y(){me.style.top="-"+me.offsetHeight-5+"px",be.style.opacity="0",setTimeout(function(){c&&(me.style.boxShadow=""),me.style.MozTransition="",me.style.WebkitTransition="",me.style.transition="",be.style.display="none",me.style.top="-10000px",t(),Ce=!1},1e3*h+10)}var c=!0,u="14px",p="24px",f=600,h=.3,m=!0,b="#57BF57",x="#E3B771",v="#c04848",w="#4D82D6",g="#FFF",T="#4D82D6",k="#57BF57",z="#c04848",E="#FFF",C="#FFF",S="#FFF",F="notie-alert-outer",W="notie-alert-inner",L="notie-alert-text",M="notie-confirm-outer",H="notie-confirm-inner",A="notie-confirm-background",I="notie-confirm-yes",B="notie-confirm-no",D="notie-confirm-text",R="notie-confirm-yes-text",j="notie-confirm-no-text",q="notie-input-outer",G="notie-input-inner",J="notie-input-background",K="notie-input-div",N="notie-input-field",O="notie-input-yes",P="notie-input-no",Q="notie-input-text",U="notie-input-yes-text",V="notie-input-no-text",X=function(e){window.innerWidth<=f?e.style.fontSize=u:e.style.fontSize=p},Y=500,Z=function(e,t,n){var i;return function(){var o=this,l=arguments,s=function(){i=null,n||e.apply(o,l)},d=n&&!i;clearTimeout(i),i=setTimeout(s,t),d&&e.apply(o,l)}};window.addEventListener("keydown",function(e){var t=13==e.which||13==e.keyCode,n=27==e.which||27==e.keyCode;le?(t||n)&&(clearTimeout(ie),clearTimeout(oe),o()):he?t?ye.click():n&&ce.click():Ce&&(t?ge.click():n&&Te.click())}),"undefined"==typeof Element.prototype.addEventListener&&(Element.prototype.addEventListener=Window.prototype.addEventListener=function(e,t){return e="on"+e,this.attachEvent(e,t)});var $,_,ee=document.createElement("div");ee.id=F,ee.style.position="fixed",ee.style.top="0",ee.style.left="0",ee.style.zIndex="999999999",ee.style.height="auto",ee.style.width="100%",ee.style.display="none",ee.style.textAlign="center",ee.style.cursor="default",ee.style.MozTransition="",ee.style.WebkitTransition="",ee.style.transition="",ee.style.cursor="pointer",ee.onclick=function(){clearTimeout(ie),clearTimeout(oe),o()};var te=document.createElement("div");te.id=W,te.style.padding="10px",te.style.display="table-cell",te.style.verticalAlign="middle",ee.appendChild(te);var ne=document.createElement("span");ne.id=L,ne.style.color=g,window.innerWidth<=f?ne.style.fontSize=u:ne.style.fontSize=p,window.addEventListener("resize",Z(X.bind(null,ne),Y),!0),te.appendChild(ne),document.body.appendChild(ee);var ie,oe,le=!1,se=0,de=document.createElement("div");de.id=M,de.style.position="fixed",de.style.top="0",de.style.left="0",de.style.zIndex="999999998",de.style.height="auto",de.style.width="100%",de.style.display="none",de.style.textAlign="center",de.style.MozTransition="",de.style.WebkitTransition="",de.style.transition="";var ae=document.createElement("div");ae.id=A,ae.style.position="fixed",ae.style.top="0",ae.style.left="0",ae.style.zIndex="999999997",ae.style.height="100%",ae.style.width="100%",ae.style.display="none",ae.style.backgroundColor="white",ae.style.MozTransition="all "+h+"s ease",ae.style.WebkitTransition="all "+h+"s ease",ae.style.transition="all "+h+"s ease",ae.style.opacity="0",ae.onclick=function(){m&&d()};var re=document.createElement("div");re.id=H,re.style.boxSizing="border-box",re.style.width="100%",re.style.padding="20px",re.style.display="block",re.style.cursor="default",re.style.backgroundColor=T,de.appendChild(re);var ye=document.createElement("div");ye.id=I,ye.style.cssFloat="left",ye.style.height="50px",ye.style.lineHeight="50px",ye.style.width="50%",ye.style.cursor="pointer",ye.style.backgroundColor=k,de.appendChild(ye);var ce=document.createElement("div");ce.id=B,ce.style.cssFloat="right",ce.style.height="50px",ce.style.lineHeight="50px",ce.style.width="50%",ce.style.cursor="pointer",ce.style.backgroundColor=z,ce.onclick=function(){d()},de.appendChild(ce);var ue=document.createElement("span");ue.id=D,ue.style.color=E,window.innerWidth<=f?ue.style.fontSize=u:ue.style.fontSize=p,window.addEventListener("resize",Z(X.bind(null,ue),Y),!0),re.appendChild(ue);var pe=document.createElement("span");pe.id=R,pe.style.color=C,window.innerWidth<=f?pe.style.fontSize=u:pe.style.fontSize=p,window.addEventListener("resize",Z(X.bind(null,pe),Y),!0),ye.appendChild(pe);var fe=document.createElement("span");fe.id=j,fe.style.color=S,window.innerWidth<=f?fe.style.fontSize=u:fe.style.fontSize=p,window.addEventListener("resize",Z(X.bind(null,fe),Y),!0),ce.appendChild(fe),document.body.appendChild(de),document.body.appendChild(ae);var he=!1,me=document.createElement("div");me.id=q,me.style.position="fixed",me.style.top="0",me.style.left="0",me.style.zIndex="999999998",me.style.height="auto",me.style.width="100%",me.style.display="none",me.style.textAlign="center",me.style.MozTransition="",me.style.WebkitTransition="",me.style.transition="";var be=document.createElement("div");be.id=J,be.style.position="fixed",be.style.top="0",be.style.left="0",be.style.zIndex="999999997",be.style.height="100%",be.style.width="100%",be.style.display="none",be.style.backgroundColor="white",be.style.MozTransition="all "+h+"s ease",be.style.WebkitTransition="all "+h+"s ease",be.style.transition="all "+h+"s ease",be.style.opacity="0",be.onclick=function(){m&&y()};var xe=document.createElement("div");xe.id=G,xe.style.boxSizing="border-box",xe.style.width="100%",xe.style.padding="20px",xe.style.display="block",xe.style.cursor="default",xe.style.backgroundColor=T,me.appendChild(xe);var ve=document.createElement("div");ve.id=K,ve.style.boxSizing="border-box",ve.style.height="55px",ve.style.width="100%",ve.style.display="block",ve.style.cursor="default",ve.style.backgroundColor="#FFF",me.appendChild(ve);var we=document.createElement("input");we.id=N,we.setAttribute("autocomplete","off"),we.setAttribute("autocorrect","off"),we.setAttribute("autocapitalize","off"),we.setAttribute("spellcheck","false"),we.style.boxSizing="border-box",we.style.height="55px",we.style.width="100%",we.style.textAlign="center",we.style.textIndent="10px",we.style.paddingRight="10px",we.style.outline="0",we.style.border="0",we.style.fontFamily="inherit",we.style.fontSize=p,window.innerWidth<=f?we.style.fontSize=u:we.style.fontSize=p,window.addEventListener("resize",Z(X.bind(null,we),Y),!0),ve.appendChild(we);var ge=document.createElement("div");ge.id=O,ge.style.cssFloat="left",ge.style.height="50px",ge.style.lineHeight="50px",ge.style.width="50%",ge.style.cursor="pointer",ge.style.backgroundColor=k,me.appendChild(ge);var Te=document.createElement("div");Te.id=P,Te.style.cssFloat="right",Te.style.height="50px",Te.style.lineHeight="50px",Te.style.width="50%",Te.style.cursor="pointer",Te.style.backgroundColor=z,Te.onclick=function(){y()},me.appendChild(Te);var ke=document.createElement("span");ke.id=Q,ke.style.color=E,window.innerWidth<=f?ke.style.fontSize=u:ke.style.fontSize=p,window.addEventListener("resize",Z(X.bind(null,ke),Y),!0),xe.appendChild(ke);var ze=document.createElement("span");ze.id=U,ze.style.color=C,window.innerWidth<=f?ze.style.fontSize=u:ze.style.fontSize=p,window.addEventListener("resize",Z(X.bind(null,ze),Y),!0),ge.appendChild(ze);var Ee=document.createElement("span");Ee.id=V,Ee.style.color=S,window.innerWidth<=f?Ee.style.fontSize=u:Ee.style.fontSize=p,window.addEventListener("resize",Z(X.bind(null,Ee),Y),!0),Te.appendChild(Ee),document.body.appendChild(me),document.body.appendChild(be);var Ce=!1;return{alert:n,confirm:l,input:a}}();"undefined"!=typeof module&&module&&(module.exports=notie);

//FMDropdown - jquery.dd.js
//author: Fahid Mohammad
//Date: 19 Jan, 2015
//Version: 1.0
//Revision: 0
//web: www.fahidmohammad.in
var fmBeautify=fmBeautify||{};(function($){function dd(element,settings){var settings=$.extend(true,{byJson:{data:null,selectedIndex:0,name:null,size:0,multiple:false,width:250},mainCSS:"dd",height:120,visibleRows:7,rowHeight:0,showIcon:true,zIndex:9999,useSprite:false,animStyle:"slideDown",event:"click",openDirection:"auto",jsonTitle:true,style:"",disabledOpacity:.7,disabledOptionEvents:true,childWidth:0,enableCheckbox:false,checkboxNameSuffix:"_mscheck",append:"",prepend:"",reverseMode:true,roundedCorner:true,enableAutoFilter:true,on:{create:null,open:null,close:null,add:null,remove:null,change:null,blur:null,click:null,dblclick:null,mousemove:null,mouseover:null,mouseout:null,focus:null,mousedown:null,mouseup:null}},settings);var $this=this;var holderId={postElementHolder:"_msddHolder",postID:"_msdd",postTitleID:"_title",postTitleTextID:"_titleText",postChildID:"_child"};var css={dd:settings.mainCSS,ddTitle:"ddTitle",arrow:"ddArrow arrowoff",ddChild:"ddChild",ddTitleText:"ddTitleText",disabled:"disabled",enabled:"enabled",ddOutOfVision:"ddOutOfVision",borderTop:"borderTop",noBorderTop:"noBorderTop",selected:"selected",divider:"divider",optgroup:"optgroup",optgroupTitle:"optgroupTitle",description:"description",label:"ddlabel",hover:"hover",disabledAll:"disabledAll"};var css_i={li:"_msddli_",borderRadiusTp:"borderRadiusTp",ddChildMore:"border shadow",fnone:"fnone"};var isList=false,isMultiple=false,isDisabled=false,cacheElement={},element,orginial={},isOpen=false;var DOWN_ARROW=40,UP_ARROW=38,LEFT_ARROW=37,RIGHT_ARROW=39,ESCAPE=27,ENTER=13,ALPHABETS_START=47,SHIFT=16,CONTROL=17,BACKSPACE=8,DELETE=46;var shiftHolded=false,controlHolded=false,lastTarget=null,forcedTrigger=false,oldSelected,isCreated=false;var doc=document,ua=window.navigator.userAgent,isIE=ua.match(/msie/i);settings.reverseMode=settings.reverseMode.toString();settings.roundedCorner=settings.roundedCorner.toString();var isArray=function(e){return Object.prototype.toString.call(e)=="[object Array]"?true:false};var msieversion=function(){var e=ua.indexOf("MSIE");if(e>0){return parseInt(ua.substring(e+5,ua.indexOf(".",e)))}else{return 0}};var checkDataSetting=function(){settings.mainCSS=$("#"+element).data("maincss")||settings.mainCSS;settings.visibleRows=$("#"+element).data("visiblerows")||settings.visibleRows;if($("#"+element).data("showicon")==false){settings.showIcon=$("#"+element).data("showicon")}settings.useSprite=$("#"+element).data("usesprite")||settings.useSprite;settings.animStyle=$("#"+element).data("animstyle")||settings.animStyle;settings.event=$("#"+element).data("event")||settings.event;settings.openDirection=$("#"+element).data("opendirection")||settings.openDirection;settings.jsonTitle=$("#"+element).data("jsontitle")||settings.jsonTitle;settings.disabledOpacity=$("#"+element).data("disabledopacity")||settings.disabledOpacity;settings.childWidth=$("#"+element).data("childwidth")||settings.childWidth;settings.enableCheckbox=$("#"+element).data("enablecheckbox")||settings.enableCheckbox;settings.checkboxNameSuffix=$("#"+element).data("checkboxnamesuffix")||settings.checkboxNameSuffix;settings.append=$("#"+element).data("append")||settings.append;settings.prepend=$("#"+element).data("prepend")||settings.prepend;settings.reverseMode=$("#"+element).data("reversemode")||settings.reverseMode;settings.roundedCorner=$("#"+element).data("roundedcorner")||settings.roundedCorner;settings.enableAutoFilter=$("#"+element).data("enableautofilter")||settings.enableAutoFilter;settings.reverseMode=settings.reverseMode.toString();settings.roundedCorner=settings.roundedCorner.toString();settings.enableAutoFilter=settings.enableAutoFilter.toString()};var getElement=function(e){if(cacheElement[e]===undefined){cacheElement[e]=doc.getElementById(e)}return cacheElement[e]};var getIndex=function(e){var t=getPostID("postChildID");return $("#"+t+" li."+css_i.li).index(e)};var createByJson=function(){if(settings.byJson.data){var validData=["description","image","title"];try{if(!element.id){element.id="dropdown"+fmBeautify.counter}settings.byJson.data=eval(settings.byJson.data);var id="msdropdown"+fmBeautify.counter++;var obj={};obj.id=id;obj.name=settings.byJson.name||element.id;if(settings.byJson.size>0){obj.size=settings.byJson.size}obj.multiple=settings.byJson.multiple;var oSelect=createElement("select",obj);for(var i=0;i<settings.byJson.data.length;i++){var current=settings.byJson.data[i];var opt=new Option(current.text,current.value);for(var p in current){if(p.toLowerCase()!="text"){var key=$.inArray(p.toLowerCase(),validData)!=-1?"data-":"";opt.setAttribute(key+p,current[p])}}oSelect.options[i]=opt}getElement(element.id).appendChild(oSelect);oSelect.selectedIndex=settings.byJson.selectedIndex;$(oSelect).css({width:settings.byJson.width+"px"});element=oSelect}catch(e){throw"There is an error in json data."}}};var init=function(){createByJson();if(!element.id){element.id="msdrpdd"+fmBeautify.counter++}element=element.id;$this.element=element;checkDataSetting();isDisabled=getElement(element).disabled;var e=settings.enableCheckbox;if(e.toString()==="true"){getElement(element).multiple=true;settings.enableCheckbox=true}isList=getElement(element).size>1||getElement(element).multiple==true?true:false;if(isList){isMultiple=getElement(element).multiple}mergeAllProp();createLayout();updateProp("uiData",getDataAndUI());updateProp("selectedOptions",$("#"+element+" option:selected"));var t=getPostID("postChildID");oldSelected=$("#"+t+" li."+css.selected);if(settings.reverseMode==="true"){$("#"+element).on("change",function(){setValue(this.selectedIndex)})}getElement(element).refresh=function(e){$("#"+element).fmDropdown().data("dd").refresh()}};var getPostID=function(e){return element+holderId[e]};var getInternalStyle=function(e){var t=e.style===undefined?"":e.style.cssText;return t};var parseOption=function(opt){var imagePath="",title="",description="",value=-1,text="",className="",imagecss="",index;if(opt!==undefined){var attrTitle=opt.title||"";if(attrTitle!=""){var reg=/^\{.*\}$/;var isJson=reg.test(attrTitle);if(isJson&&settings.jsonTitle){var obj=eval("["+attrTitle+"]")}title=isJson&&settings.jsonTitle?obj[0].title:title;description=isJson&&settings.jsonTitle?obj[0].description:description;imagePath=isJson&&settings.jsonTitle?obj[0].image:attrTitle;imagecss=isJson&&settings.jsonTitle?obj[0].imagecss:imagecss;index=opt.index}text=opt.text||"";value=opt.value||"";className=opt.className||"";title=$(opt).prop("data-title")||$(opt).data("title")||title||"";description=$(opt).prop("data-description")||$(opt).data("description")||description||"";imagePath=$(opt).prop("data-image")||$(opt).data("image")||imagePath||"";imagecss=$(opt).prop("data-imagecss")||$(opt).data("imagecss")||imagecss||"";index=$(opt).index()}var o={image:imagePath,title:title,description:description,value:value,text:text,className:className,imagecss:imagecss,index:index};return o};var createElement=function(e,t,n){var r=doc.createElement(e);if(t){for(var i in t){switch(i){case"style":r.style.cssText=t[i];break;default:r[i]=t[i];break}}}if(n){r.innerHTML=n}return r};var hideOriginal=function(){var e=getPostID("postElementHolder");if($("#"+e).length==0){var t={style:"height: 0px;overflow: hidden;position: absolute;",className:css.ddOutOfVision};t.id=e;var n=createElement("div",t);$("#"+element).after(n);$("#"+element).appendTo($("#"+e))}else{$("#"+e).css({height:0,overflow:"hidden",position:"absolute"})}getElement(element).tabIndex=-1};var createWrapper=function(){var e=settings.roundedCorner=="true"?" borderRadius":"";var t={className:css.dd+" ddcommon"+e};var n=getInternalStyle(getElement(element));var r=$("#"+element).outerWidth();t.style="width: "+r+"px;";if(n.length>0){t.style=t.style+""+n}t.id=getPostID("postID");t.tabIndex=getElement(element).tabIndex;var i=createElement("div",t);return i};var createTitle=function(){var e;if(getElement(element).selectedIndex>=0){e=getElement(element).options[getElement(element).selectedIndex]}else{e={value:"",text:""}}var t="",n="";var r=$("#"+element).data("usesprite");if(r){settings.useSprite=r}if(settings.useSprite!=false){t=" "+settings.useSprite;n=" "+e.className}var i=settings.roundedCorner=="true"?" "+css_i.borderRadiusTp:"";var s=createElement("div",{className:css.ddTitle+t+i});var o=createElement("span",{className:css.arrow});var u=getPostID("postTitleID");var a=createElement("span",{className:css.ddTitleText+n,id:u});var f=parseOption(e);var l=f.image;var c=f.text||"";if(l!=""&&settings.showIcon){var h=createElement("img");h.src=l;if(f.imagecss!=""){h.className=f.imagecss+" "}}var p=createElement("span",{className:css.label},c);s.appendChild(o);if(h){a.appendChild(h)}a.appendChild(p);s.appendChild(a);var d=createElement("span",{className:css.description},f.description);a.appendChild(d);return s};var createFilterBox=function(){var e=getPostID("postTitleTextID");var t=settings.roundedCorner=="true"?"borderRadius":"";var n=createElement("input",{id:e,type:"text",value:"",autocomplete:"off",className:"text shadow "+t,style:"display: none"});return n};var createChild=function(e){var t={};var n=getInternalStyle(e);if(n.length>0){t.style=n}var r=e.disabled?css.disabled:css.enabled;r=e.selected?r+" "+css.selected:r;r=r+" "+css_i.li;t.className=r;if(settings.useSprite!=false){t.className=r+" "+e.className}var i=createElement("li",t);var s=parseOption(e);if(s.title!=""){i.title=s.title}var o=s.image;if(o!=""&&settings.showIcon){var u=createElement("img");u.src=o;if(s.imagecss!=""){u.className=s.imagecss+" "}}if(s.description!=""){var a=createElement("span",{className:css.description},s.description)}var f=e.text||"";var l=createElement("span",{className:css.label},f);if(settings.enableCheckbox===true){var c=createElement("input",{type:"checkbox",name:element+settings.checkboxNameSuffix+"[]",value:e.value||"",className:"checkbox"});i.appendChild(c);if(settings.enableCheckbox===true){c.checked=e.selected?true:false}}if(u){i.appendChild(u)}i.appendChild(l);if(a){i.appendChild(a)}else{if(u){u.className=u.className+css_i.fnone}}var h=createElement("div",{className:"clear"});i.appendChild(h);return i};var createChildren=function(){var e=getPostID("postChildID");var t={className:css.ddChild+" ddchild_ "+css_i.ddChildMore,id:e};if(isList==false){t.style="z-index: "+settings.zIndex}else{t.style="z-index:1"}var n=$("#"+element).data("childwidth")||settings.childWidth;if(n){t.style=(t.style||"")+";width:"+n}var r=createElement("div",t);var i=createElement("ul");if(settings.useSprite!=false){i.className=settings.useSprite}var s=getElement(element).children;for(var o=0;o<s.length;o++){var u=s[o];var a;if(u.nodeName.toLowerCase()=="optgroup"){a=createElement("li",{className:css.optgroup});var f=createElement("span",{className:css.optgroupTitle},u.label);a.appendChild(f);var l=u.children;var c=createElement("ul");for(var h=0;h<l.length;h++){var p=createChild(l[h]);c.appendChild(p)}a.appendChild(c)}else{a=createChild(u)}i.appendChild(a)}r.appendChild(i);return r};var childHeight=function(e){var t=getPostID("postChildID");if(e){if(e==-1){$("#"+t).css({height:"auto",overflow:"auto"})}else{$("#"+t).css("height",e+"px")}return false}var n;var r=getElement(element).options.length;if(r>settings.visibleRows||settings.visibleRows){var i=$("#"+t+" li:first");var s=parseInt(i.css("padding-bottom"))+parseInt(i.css("padding-top"));if(settings.rowHeight===0){$("#"+t).css({visibility:"hidden",display:"block"});settings.rowHeight=Math.ceil(i.height());$("#"+t).css({visibility:"visible"});if(!isList||settings.enableCheckbox===true){$("#"+t).css({display:"none"})}}n=(settings.rowHeight+s)*Math.min(settings.visibleRows,r)+3}else if(isList){n=$("#"+element).height()}return n};var applyChildEvents=function(){var e=getPostID("postChildID");$("#"+e).on("click",function(e){if(isDisabled===true)return false;e.preventDefault();e.stopPropagation();if(isList){bind_on_events()}});$("#"+e+" li."+css.enabled).on("click",function(e){if(e.target.nodeName.toLowerCase()!=="input"){close(this)}});$("#"+e+" li."+css.enabled).on("mousedown",function(t){if(isDisabled===true)return false;oldSelected=$("#"+e+" li."+css.selected);lastTarget=this;t.preventDefault();t.stopPropagation();if(settings.enableCheckbox===true){if(t.target.nodeName.toLowerCase()==="input"){controlHolded=true}}if(isList===true){if(isMultiple){if(shiftHolded===true){$(this).addClass(css.selected);var n=$("#"+e+" li."+css.selected);var r=getIndex(this);if(n.length>1){var i=$("#"+e+" li."+css_i.li);var s=getIndex(n[0]);var o=getIndex(n[1]);if(r>o){s=r;o=o+1}for(var u=Math.min(s,o);u<=Math.max(s,o);u++){var a=i[u];if($(a).hasClass(css.enabled)){$(a).addClass(css.selected)}}}}else if(controlHolded===true){$(this).toggleClass(css.selected);if(settings.enableCheckbox===true){var f=this.childNodes[0];f.checked=!f.checked}}else{$("#"+e+" li."+css.selected).removeClass(css.selected);$("#"+e+" input:checkbox").prop("checked",false);$(this).addClass(css.selected);if(settings.enableCheckbox===true){this.childNodes[0].checked=true}}}else{$("#"+e+" li."+css.selected).removeClass(css.selected);$(this).addClass(css.selected)}}else{$("#"+e+" li."+css.selected).removeClass(css.selected);$(this).addClass(css.selected)}});$("#"+e+" li."+css.enabled).on("mouseenter",function(e){if(isDisabled===true)return false;e.preventDefault();e.stopPropagation();if(lastTarget!=null){if(isMultiple){$(this).addClass(css.selected);if(settings.enableCheckbox===true){this.childNodes[0].checked=true}}}});$("#"+e+" li."+css.enabled).on("mouseover",function(e){if(isDisabled===true)return false;$(this).addClass(css.hover)});$("#"+e+" li."+css.enabled).on("mouseout",function(t){if(isDisabled===true)return false;$("#"+e+" li."+css.hover).removeClass(css.hover)});$("#"+e+" li."+css.enabled).on("mouseup",function(t){if(isDisabled===true)return false;t.preventDefault();t.stopPropagation();if(settings.enableCheckbox===true){controlHolded=false}var n=$("#"+e+" li."+css.selected).length;forcedTrigger=oldSelected.length!=n||n==0?true:false;fireAfterItemClicked();unbind_on_events();bind_on_events();lastTarget=null});if(settings.disabledOptionEvents==false){$("#"+e+" li."+css_i.li).on("click",function(e){if(isDisabled===true)return false;fireOptionEventIfExist(this,"click")});$("#"+e+" li."+css_i.li).on("mouseenter",function(e){if(isDisabled===true)return false;fireOptionEventIfExist(this,"mouseenter")});$("#"+e+" li."+css_i.li).on("mouseover",function(e){if(isDisabled===true)return false;fireOptionEventIfExist(this,"mouseover")});$("#"+e+" li."+css_i.li).on("mouseout",function(e){if(isDisabled===true)return false;fireOptionEventIfExist(this,"mouseout")});$("#"+e+" li."+css_i.li).on("mousedown",function(e){if(isDisabled===true)return false;fireOptionEventIfExist(this,"mousedown")});$("#"+e+" li."+css_i.li).on("mouseup",function(e){if(isDisabled===true)return false;fireOptionEventIfExist(this,"mouseup")})}};var removeChildEvents=function(){var e=getPostID("postChildID");$("#"+e).off("click");$("#"+e+" li."+css.enabled).off("mouseenter");$("#"+e+" li."+css.enabled).off("click");$("#"+e+" li."+css.enabled).off("mouseover");$("#"+e+" li."+css.enabled).off("mouseout");$("#"+e+" li."+css.enabled).off("mousedown");$("#"+e+" li."+css.enabled).off("mouseup")};var triggerBypassingHandler=function(e,t,n){$("#"+e).off(t,n);$("#"+e).trigger(t);$("#"+e).on(t,n)};var applyEvents=function(){var e=getPostID("postID");var t=getPostID("postTitleTextID");var n=getPostID("postChildID");$("#"+e).on(settings.event,function(e){if(isDisabled===true)return false;fireEventIfExist(settings.event);e.preventDefault();e.stopPropagation();open(e)});$("#"+e).on("keydown",function(e){var t=e.which;if(!isOpen&&(t==ENTER||t==UP_ARROW||t==DOWN_ARROW||t==LEFT_ARROW||t==RIGHT_ARROW||t>=ALPHABETS_START&&!isList)){open(e);if(t>=ALPHABETS_START){showFilterBox()}else{e.preventDefault();e.stopImmediatePropagation()}}});$("#"+e).on("focus",wrapperFocusHandler);$("#"+e).on("blur",wrapperBlurHandler);$("#"+t).on("blur",function(t){triggerBypassingHandler(e,"focus",wrapperFocusHandler)});applyChildEvents();$("#"+e).on("dblclick",on_dblclick);$("#"+e).on("mousemove",on_mousemove);$("#"+e).on("mouseenter",on_mouseover);$("#"+e).on("mouseleave",on_mouseout);$("#"+e).on("mousedown",on_mousedown);$("#"+e).on("mouseup",on_mouseup)};var wrapperFocusHandler=function(e){fireEventIfExist("focus")};var wrapperBlurHandler=function(e){fireEventIfExist("blur")};var fixedForList=function(){var e=getPostID("postID");var t=getPostID("postChildID");if(isList===true&&settings.enableCheckbox===false){$("#"+e+" ."+css.ddTitle).hide();$("#"+t).css({display:"block",position:"relative"})}else{if(settings.enableCheckbox===false){isMultiple=false}$("#"+e+" ."+css.ddTitle).show();$("#"+t).css({display:"none",position:"absolute"});var n=$("#"+t+" li."+css.selected)[0];$("#"+t+" li."+css.selected).removeClass(css.selected);var r=getIndex($(n).addClass(css.selected));setValue(r)}childHeight(childHeight())};var fixedForDisabled=function(){var e=getPostID("postID");var t=isDisabled==true?settings.disabledOpacity:1;if(isDisabled===true){$("#"+e).addClass(css.disabledAll)}else{$("#"+e).removeClass(css.disabledAll)}};var fixedSomeUI=function(){var e=getPostID("postTitleTextID");if(settings.enableAutoFilter=="true"){$("#"+e).on("keyup",applyFilters)}fixedForList();fixedForDisabled()};var createLayout=function(){var e=createWrapper();var t=createTitle();e.appendChild(t);var n=createFilterBox();e.appendChild(n);var r=createChildren();e.appendChild(r);$("#"+element).after(e);hideOriginal();fixedSomeUI();applyEvents();var i=getPostID("postChildID");if(settings.append!=""){$("#"+i).append(settings.append)}if(settings.prepend!=""){$("#"+i).prepend(settings.prepend)}if(typeof settings.on.create=="function"){settings.on.create.apply($this,arguments)}};var selectUI_LI=function(e){function r(e){$($("#"+t+" li."+css_i.li)[e]).addClass(css.selected);if(settings.enableCheckbox===true){$($("#"+t+" li."+css_i.li)[e]).find("input.checkbox").prop("checked","checked")}}var t=getPostID("postChildID");$("#"+t+" li."+css_i.li).removeClass(css.selected);if(settings.enableCheckbox===true){$("#"+t+" li."+css_i.li+" input.checkbox").prop("checked",false)}if(isArray(e)===true){for(var n=0;n<e.length;n++){r(e[n])}}else{r(e)}};var selectMutipleOptions=function(e,t){var n=getPostID("postChildID");var r=e||$("#"+n+" li."+css.selected);for(var i=0;i<r.length;i++){var s=t===true?r[i]:getIndex(r[i]);getElement(element).options[s].selected="selected"}setValue(r)};var fireAfterItemClicked=function(){var e=getPostID("postChildID");var t=$("#"+e+" li."+css.selected);if(isMultiple&&(shiftHolded||controlHolded)||forcedTrigger){getElement(element).selectedIndex=-1}var n;if(t.length==0){n=-1}else if(t.length>1){selectMutipleOptions(t)}else{n=getIndex($("#"+e+" li."+css.selected))}if((getElement(element).selectedIndex!=n||forcedTrigger)&&t.length<=1){forcedTrigger=false;var r=has_handler("change");getElement(element).selectedIndex=n;setValue(n);if(typeof settings.on.change=="function"){var i=getDataAndUI();settings.on.change(i.data,i.ui)}$("#"+element).trigger("change")}};var setValue=function(e,t){if(e!==undefined){var n,r,i;if(e==-1){n=-1;r="";i="";updateTitleUI(-1)}else{if(typeof e!="object"){var s=getElement(element).options[e];getElement(element).selectedIndex=e;n=e;r=parseOption(s);i=e>=0?getElement(element).options[e].text:"";updateTitleUI(undefined,r);r=r.value}else{n=t&&t.index||getElement(element).selectedIndex;r=t&&t.value||getElement(element).value;i=t&&t.text||getElement(element).options[getElement(element).selectedIndex].text||"";updateTitleUI(n)}}updateProp("selectedIndex",n);updateProp("value",r);updateProp("selectedText",i);updateProp("children",getElement(element).children);updateProp("uiData",getDataAndUI());updateProp("selectedOptions",$("#"+element+" option:selected"))}};var has_handler=function(e){var t={byElement:false,byJQuery:false,hasEvent:false};var n=$("#"+element);try{if(n.prop("on"+e)!==null){t.hasEvent=true;t.byElement=true}}catch(r){}var i;if(typeof $._data=="function"){i=$._data(n[0],"events")}else{i=n.data("events")}if(i&&i[e]){t.hasEvent=true;t.byJQuery=true}return t};var bind_on_events=function(){unbind_on_events();$("body").on("click",close);$(document).on("keydown",on_keydown);$(document).on("keyup",on_keyup)};var unbind_on_events=function(){$("body").off("click",close);$(document).off("keydown",on_keydown);$(document).off("keyup",on_keyup)};var applyFilters=function(e){if(e.keyCode<ALPHABETS_START&&e.keyCode!=BACKSPACE&&e.keyCode!=DELETE){return false}var t=getPostID("postChildID");var n=getPostID("postTitleTextID");var r=getElement(n).value;if(r.length==0){$("#"+t+" li:hidden").show();childHeight(childHeight())}else{$("#"+t+" li").hide();var i=$("#"+t+" li:Contains('"+r+"')").show();if($("#"+t+" li:visible").length<=settings.visibleRows){childHeight(-1)}if(i.length>0&&!isList||!isMultiple){$("#"+t+" ."+css.selected).removeClass(css.selected);$(i[0]).addClass(css.selected)}}if(!isList){adjustOpen()}};var showFilterBox=function(){if(settings.enableAutoFilter=="true"){var e=getPostID("postID");var t=getPostID("postTitleTextID");if($("#"+t+":hidden").length>0&&controlHolded==false){$("#"+t+":hidden").show().val("");triggerBypassingHandler(e,"blur",wrapperBlurHandler);getElement(t).focus()}}};var hideFilterBox=function(){var e=getPostID("postTitleTextID");if($("#"+e+":visible").length>0){$("#"+e+":visible").hide();getElement(e).blur()}};var on_keydown=function(e){var t=getPostID("postTitleTextID");var n=getPostID("postChildID");switch(e.keyCode){case DOWN_ARROW:case RIGHT_ARROW:e.preventDefault();e.stopPropagation();next();break;case UP_ARROW:case LEFT_ARROW:e.preventDefault();e.stopPropagation();previous();break;case ESCAPE:case ENTER:e.preventDefault();e.stopPropagation();close();var r=$("#"+n+" li."+css.selected).length;forcedTrigger=oldSelected.length!=r||r==0?true:false;fireAfterItemClicked();unbind_on_events();lastTarget=null;break;case SHIFT:shiftHolded=true;break;case CONTROL:controlHolded=true;break;default:if(e.keyCode>=ALPHABETS_START&&isList===false){showFilterBox()}break}if(isDisabled===true)return false;fireEventIfExist("keydown")};var on_keyup=function(e){switch(e.keyCode){case SHIFT:shiftHolded=false;break;case CONTROL:controlHolded=false;break}if(isDisabled===true)return false;fireEventIfExist("keyup")};var on_dblclick=function(e){if(isDisabled===true)return false;fireEventIfExist("dblclick")};var on_mousemove=function(e){if(isDisabled===true)return false;fireEventIfExist("mousemove")};var on_mouseover=function(e){if(isDisabled===true)return false;e.preventDefault();fireEventIfExist("mouseover")};var on_mouseout=function(e){if(isDisabled===true)return false;e.preventDefault();fireEventIfExist("mouseout")};var on_mousedown=function(e){if(isDisabled===true)return false;fireEventIfExist("mousedown")};var on_mouseup=function(e){if(isDisabled===true)return false;fireEventIfExist("mouseup")};var option_has_handler=function(e,t){var n={byElement:false,byJQuery:false,hasEvent:false};if($(e).prop("on"+t)!=undefined){n.hasEvent=true;n.byElement=true}var r=$(e).data("events");if(r&&r[t]){n.hasEvent=true;n.byJQuery=true}return n};var fireOptionEventIfExist=function(e,t){if(settings.disabledOptionEvents==false){var n=getElement(element).options[getIndex(e)];if(option_has_handler(n,t).hasEvent===true){if(option_has_handler(n,t).byElement===true){n["on"+t]()}if(option_has_handler(n,t).byJQuery===true){switch(t){case"keydown":case"keyup":break;default:$(n).trigger(t);break}}return false}}};var fireEventIfExist=function(e){if(typeof settings.on[e]=="function"){settings.on[e].apply(this,arguments)}if(has_handler(e).hasEvent===true){if(has_handler(e).byElement===true){getElement(element)["on"+e]()}else if(has_handler(e).byJQuery===true){switch(e){case"keydown":case"keyup":break;default:$("#"+element).triggerHandler(e);break}}return false}};var scrollToIfNeeded=function(e){var t=getPostID("postChildID");e=e!==undefined?e:$("#"+t+" li."+css.selected);if(e.length>0){var n=parseInt($(e).position().top);var r=parseInt($("#"+t).height());if(n>r){var i=n+$("#"+t).scrollTop()-r/2;$("#"+t).animate({scrollTop:i},500)}}};var next=function(){function i(e){e=e+1;if(e>t.length){return e}if($(t[e]).hasClass(css.enabled)===true){return e}return e=i(e)}var e=getPostID("postChildID");var t=$("#"+e+" li:visible."+css_i.li);var n=$("#"+e+" li:visible."+css.selected);n=n.length==0?t[0]:n;var r=$("#"+e+" li:visible."+css_i.li).index(n);if(r<t.length-1){r=i(r);if(r<t.length){if(!shiftHolded||!isList||!isMultiple){$("#"+e+" ."+css.selected).removeClass(css.selected)}$(t[r]).addClass(css.selected);updateTitleUI(r);if(isList==true){fireAfterItemClicked()}scrollToIfNeeded($(t[r]))}if(!isList){adjustOpen()}}};var previous=function(){function s(e){e=e-1;if(e<0){return e}if($(n[e]).hasClass(css.enabled)===true){return e}return e=s(e)}var e=getPostID("postChildID");var t=$("#"+e+" li:visible."+css.selected);var n=$("#"+e+" li:visible."+css_i.li);var r=$("#"+e+" li:visible."+css_i.li).index(t[0]);if(r>=0){r=s(r);if(r>=0){if(!shiftHolded||!isList||!isMultiple){$("#"+e+" ."+css.selected).removeClass(css.selected)}$(n[r]).addClass(css.selected);updateTitleUI(r);if(isList==true){fireAfterItemClicked()}if(parseInt($(n[r]).position().top+$(n[r]).height())<=0){var i=$("#"+e).scrollTop()-$("#"+e).height()-$(n[r]).height();$("#"+e).animate({scrollTop:i},500)}}if(!isList){adjustOpen()}}};var adjustOpen=function(){var e=getPostID("postID");var t=getPostID("postChildID");var n=$("#"+e).offset();var r=$("#"+e).height();var i=$(window).height();var s=$(window).scrollTop();var o=$("#"+t).height();var u=$("#"+e).height();var a=settings.openDirection.toLowerCase();if((i+s<Math.floor(o+r+n.top)||a=="alwaysup")&&a!="alwaysdown"){u=o;$("#"+t).css({top:"-"+u+"px",display:"block",zIndex:settings.zIndex});if(settings.roundedCorner=="true"){$("#"+e).removeClass("borderRadius borderRadiusTp").addClass("borderRadiusBtm")}var u=$("#"+t).offset().top;if(u<-10){$("#"+t).css({top:parseInt($("#"+t).css("top"))-u+20+s+"px",zIndex:settings.zIndex});if(settings.roundedCorner=="true"){$("#"+e).removeClass("borderRadiusBtm borderRadiusTp").addClass("borderRadius")}}}else{$("#"+t).css({top:u+"px",zIndex:settings.zIndex});if(settings.roundedCorner=="true"){$("#"+e).removeClass("borderRadius borderRadiusBtm").addClass("borderRadiusTp")}}if(isIE){if(msieversion()<=7){$("div.ddcommon").css("zIndex",settings.zIndex-10);$("#"+e).css("zIndex",settings.zIndex+5)}}};var open=function(e){if(isDisabled===true)return false;var t=getPostID("postID");var n=getPostID("postChildID");if(!isOpen){isOpen=true;if(fmBeautify.oldDiv!=""){$("#"+fmBeautify.oldDiv).css({display:"none"})}fmBeautify.oldDiv=n;$("#"+n+" li:hidden").show();adjustOpen();var r=settings.animStyle;if(r==""||r=="none"){$("#"+n).css({display:"block"});scrollToIfNeeded();if(typeof settings.on.open=="function"){var i=getDataAndUI();settings.on.open(i.data,i.ui)}}else{$("#"+n)[r]("fast",function(){scrollToIfNeeded();if(typeof settings.on.open=="function"){var e=getDataAndUI();settings.on.open(e.data,e.ui)}})}bind_on_events()}else{if(settings.event!=="mouseover"){close()}}};var close=function(e){isOpen=false;var t=getPostID("postID");var n=getPostID("postChildID");if(isList===false||settings.enableCheckbox===true){$("#"+n).css({display:"none"});if(settings.roundedCorner=="true"){$("#"+t).removeClass("borderRadiusTp borderRadiusBtm").addClass("borderRadius")}}unbind_on_events();if(typeof settings.on.close=="function"){var r=getDataAndUI();settings.on.close(r.data,r.ui)}hideFilterBox();childHeight(childHeight());$("#"+n).css({zIndex:1});updateTitleUI(getElement(element).selectedIndex)};var mergeAllProp=function(){try{orginial=$.extend(true,{},getElement(element));for(var e in orginial){if(typeof orginial[e]!="function"){$this[e]=orginial[e]}}}catch(t){}$this.selectedText=getElement(element).selectedIndex>=0?getElement(element).options[getElement(element).selectedIndex].text:"";$this.version=fmBeautify.version.fmDropdown;$this.author=fmBeautify.author};var getDataAndUIByOption=function(e){if(e!=null&&typeof e!="undefined"){var t=getPostID("postChildID");var n=parseOption(e);var r=$("#"+t+" li."+css_i.li+":eq("+e.index+")");return{data:n,ui:r,option:e,index:e.index}}return null};var getDataAndUI=function(){var e=getPostID("postChildID");var t=getElement(element);var n,r,i,s;if(t.selectedIndex==-1){n=null;r=null;i=null;s=-1}else{r=$("#"+e+" li."+css.selected);if(r.length>1){var o=[],u=[],a=[];for(var f=0;f<r.length;f++){var l=getIndex(r[f]);o.push(l);u.push(t.options[l])}n=o;i=u;s=o}else{i=t.options[t.selectedIndex];n=parseOption(i);s=t.selectedIndex}}return{data:n,ui:r,index:s,option:i}};var updateTitleUI=function(e,t){var n=getPostID("postTitleID");var r={};if(e==-1){r.text="&nbsp;";r.className="";r.description="";r.image=""}else if(typeof e!="undefined"){var i=getElement(element).options[e];r=parseOption(i)}else{r=t}$("#"+n).find("."+css.label).html(r.text);getElement(n).className=css.ddTitleText+" "+r.className;if(r.description!=""){$("#"+n).find("."+css.description).html(r.description).show()}else{$("#"+n).find("."+css.description).html("").hide()}var s=$("#"+n).find("img");if(s.length>0){$(s).remove()}if(r.image!=""&&settings.showIcon){s=createElement("img",{src:r.image});$("#"+n).prepend(s);if(r.imagecss!=""){s.className=r.imagecss+" "}if(r.description==""){s.className=s.className+css_i.fnone}}};var updateProp=function(e,t){$this[e]=t};var updateUI=function(e,t,n){var r=getPostID("postChildID");var i=false;switch(e){case"add":var s=createChild(t||getElement(element).options[n]);var o;if(arguments.length==3){o=n}else{o=$("#"+r+" li."+css_i.li).length-1}if(o<0||!o){$("#"+r+" ul").append(s)}else{var u=$("#"+r+" li."+css_i.li)[o];$(u).before(s)}removeChildEvents();applyChildEvents();if(settings.on.add!=null){settings.on.add.apply(this,arguments)}break;case"remove":i=$($("#"+r+" li."+css_i.li)[n]).hasClass(css.selected);$("#"+r+" li."+css_i.li+":eq("+n+")").remove();var a=$("#"+r+" li."+css.enabled);if(i==true){if(a.length>0){$(a[0]).addClass(css.selected);var f=$("#"+r+" li."+css_i.li).index(a[0]);setValue(f)}}if(a.length==0){setValue(-1)}if($("#"+r+" li."+css_i.li).length<settings.visibleRows&&!isList){childHeight(-1)}if(settings.on.remove!=null){settings.on.remove.apply(this,arguments)}break}};this.act=function(){var e=arguments[0];Array.prototype.shift.call(arguments);switch(e){case"add":$this.add.apply(this,arguments);break;case"remove":$this.remove.apply(this,arguments);break;default:try{getElement(element)[e].apply(getElement(element),arguments)}catch(t){}break}};this.add=function(){var e,t,n,r,i;var s=arguments[0];if(typeof s=="string"){e=s;t=e;opt=new Option(e,t)}else{e=s.text||"";t=s.value||e;n=s.title||"";r=s.image||"";i=s.description||"";opt=new Option(e,t);$(opt).data("description",i);$(opt).data("image",r);$(opt).data("title",n)}arguments[0]=opt;getElement(element).add.apply(getElement(element),arguments);updateProp("children",getElement(element)["children"]);updateProp("length",getElement(element).length);updateUI("add",opt,arguments[1])};this.remove=function(e){getElement(element).remove(e);updateProp("children",getElement(element)["children"]);updateProp("length",getElement(element).length);updateUI("remove",undefined,e)};this.set=function(e,t){if(typeof e=="undefined"||typeof t=="undefined")return false;e=e.toString();try{updateProp(e,t)}catch(n){}switch(e){case"size":getElement(element)[e]=t;if(t==0){getElement(element).multiple=false}isList=getElement(element).size>1||getElement(element).multiple==true?true:false;fixedForList();break;case"multiple":getElement(element)[e]=t;isList=getElement(element).size>1||getElement(element).multiple==true?true:false;isMultiple=getElement(element).multiple;fixedForList();updateProp(e,t);break;case"disabled":getElement(element)[e]=t;isDisabled=t;fixedForDisabled();break;case"selectedIndex":case"value":if(e=="selectedIndex"&&isArray(t)===true){$("#"+element+" option").prop("selected",false);selectMutipleOptions(t,true);selectUI_LI(t)}else{getElement(element)[e]=t;selectUI_LI(getElement(element).selectedIndex);setValue(getElement(element).selectedIndex)}break;case"length":var r=getPostID("postChildID");if(t<getElement(element).length){getElement(element)[e]=t;if(t==0){$("#"+r+" li."+css_i.li).remove();setValue(-1)}else{$("#"+r+" li."+css_i.li+":gt("+(t-1)+")").remove();if($("#"+r+" li."+css.selected).length==0){$("#"+r+" li."+css.enabled+":eq(0)").addClass(css.selected)}}updateProp(e,t);updateProp("children",getElement(element)["children"])}break;case"id":break;default:try{getElement(element)[e]=t;updateProp(e,t)}catch(n){}break}};this.get=function(e){return $this[e]||getElement(element)[e]};this.visible=function(e){var t=getPostID("postID");if(e===true){$("#"+t).show()}else if(e===false){$("#"+t).hide()}else{return $("#"+t).css("display")=="none"?false:true}};this.debug=function(e){fmBeautify.debug(e)};this.close=function(){close()};this.open=function(){open()};this.showRows=function(e){if(typeof e=="undefined"||e==0){return false}settings.visibleRows=e;childHeight(childHeight())};this.visibleRows=this.showRows;this.on=function(e,t){$("#"+element).on(e,t)};this.off=function(e,t){$("#"+element).off(e,t)};this.addMyEvent=this.on;this.getData=function(){return getDataAndUI()};this.namedItem=function(){var e=getElement(element).namedItem.apply(getElement(element),arguments);return getDataAndUIByOption(e)};this.item=function(){var e=getElement(element).item.apply(getElement(element),arguments);return getDataAndUIByOption(e)};this.setIndexByValue=function(e){this.set("value",e)};this.destroy=function(){var e=getPostID("postElementHolder");var t=getPostID("postID");$("#"+t+", #"+t+" *").off();getElement(element).tabIndex=getElement(t).tabIndex;$("#"+t).remove();$("#"+element).parent().replaceWith($("#"+element));$("#"+element).data("dd",null)};this.refresh=function(){setValue(getElement(element).selectedIndex)};init()}fmBeautify={version:{fmDropdown:"3.5.2"},author:"Fahid Mohammad",counter:20,debug:function(e){if(e!==false){$(".ddOutOfVision").css({height:"auto",position:"relative"})}else{$(".ddOutOfVision").css({height:"0px",position:"absolute"})}},oldDiv:"",create:function(e,t,n){n=n||"dropdown";var r;switch(n.toLowerCase()){case"dropdown":case"select":r=$(e).fmDropdown(t).data("dd");break}return r}};$.fmDropdown={};$.fmDropdown={};$.extend(true,$.fmDropdown,fmBeautify);$.extend(true,$.fmDropdown,fmBeautify);if($.fn.prop===undefined){$.fn.prop=$.fn.attr}if($.fn.on===undefined){$.fn.on=$.fn.bind;$.fn.off=$.fn.unbind}if(typeof $.expr.createPseudo==="function"){$.expr[":"].Contains=$.expr.createPseudo(function(e){return function(t){return $(t).text().toUpperCase().indexOf(e.toUpperCase())>=0}})}else{$.expr[":"].Contains=function(e,t,n){return $(e).text().toUpperCase().indexOf(n[3].toUpperCase())>=0}}$.fn.extend({fmDropdown:function(e){return this.each(function(){if(!$(this).data("dd")){var t=new dd(this,e);$(this).data("dd",t)}})}});$.fn.fmDropdown=$.fn.fmDropdown})(jQuery);

/**
* @name	scrollToFixed // Added by Raghava
*/
(function(a){a.isScrollToFixed=function(b){return !!a(b).data("ScrollToFixed")};a.ScrollToFixed=function(d,i){var m=this;m.$el=a(d);m.el=d;m.$el.data("ScrollToFixed",m);var c=false;var H=m.$el;var I;var F;var k;var e;var z;var E=0;var r=0;var j=-1;var f=-1;var u=null;var A;var g;function v(){H.trigger("preUnfixed.ScrollToFixed");l();H.trigger("unfixed.ScrollToFixed");f=-1;E=H.offset().top;r=H.offset().left;if(m.options.offsets){r+=(H.offset().left-H.position().left)}if(j==-1){j=r}I=H.css("position");c=true;if(m.options.bottom!=-1){H.trigger("preFixed.ScrollToFixed");x();H.trigger("fixed.ScrollToFixed")}}function o(){var J=m.options.limit;if(!J){return 0}if(typeof(J)==="function"){return J.apply(H)}return J}function q(){return I==="fixed"}function y(){return I==="absolute"}function h(){return !(q()||y())}function x(){if(!q()){var J=H[0].getBoundingClientRect();u.css({display:H.css("display"),width:J.width,height:J.height,"float":H.css("float")});cssOptions={"z-index":m.options.zIndex,position:"fixed",top:m.options.bottom==-1?t():"",bottom:m.options.bottom==-1?"":m.options.bottom,"margin-left":"0px"};if(!m.options.dontSetWidth){cssOptions.width=H.css("width")}H.css(cssOptions);H.addClass(m.options.baseClassName);if(m.options.className){H.addClass(m.options.className)}I="fixed"}}function b(){var K=o();var J=r;if(m.options.removeOffsets){J="";K=K-E}cssOptions={position:"absolute",top:K,left:"10px","margin-left":"0px",bottom:""};if(!m.options.dontSetWidth){cssOptions.width=H.css("width")}H.css(cssOptions);I="absolute"}function l(){if(!h()){f=-1;u.css("display","none");H.css({"z-index":z,width:"",position:F,left:"",top:e,"margin-left":""});H.removeClass("scroll-to-fixed-fixed");if(m.options.className){H.removeClass(m.options.className)}I=null}}function w(J){if(J!=f){H.css("left",r-J);f=J}}function t(){var J=m.options.marginTop;if(!J){return 0}if(typeof(J)==="function"){return J.apply(H)}return J}function B(){if(!a.isScrollToFixed(H)||H.is(":hidden")){return}var M=c;var L=h();if(!c){v()}else{if(h()){E=H.offset().top;r=H.offset().left}}var J=a(window).scrollLeft();var N=a(window).scrollTop();var K=o();if(m.options.minWidth&&a(window).width()<m.options.minWidth){if(!h()||!M){p();H.trigger("preUnfixed.ScrollToFixed");l();H.trigger("unfixed.ScrollToFixed")}}else{if(m.options.maxWidth&&a(window).width()>m.options.maxWidth){if(!h()||!M){p();H.trigger("preUnfixed.ScrollToFixed");l();H.trigger("unfixed.ScrollToFixed")}}else{if(m.options.bottom==-1){if(K>0&&N>=K-t()){if(!L&&(!y()||!M)){p();H.trigger("preAbsolute.ScrollToFixed");b();H.trigger("unfixed.ScrollToFixed")}}else{if(N>=E-t()){if(!q()||!M){p();H.trigger("preFixed.ScrollToFixed");x();f=-1;H.trigger("fixed.ScrollToFixed")}w(J)}else{if(!h()||!M){p();H.trigger("preUnfixed.ScrollToFixed");l();H.trigger("unfixed.ScrollToFixed")}}}}else{if(K>0){if(N+a(window).height()-H.outerHeight(true)>=K-(t()||-n())){if(q()){p();H.trigger("preUnfixed.ScrollToFixed");if(F==="absolute"){b()}else{l()}H.trigger("unfixed.ScrollToFixed")}}else{if(!q()){p();H.trigger("preFixed.ScrollToFixed");x()}w(J);H.trigger("fixed.ScrollToFixed")}}else{w(J)}}}}}function n(){if(!m.options.bottom){return 0}return m.options.bottom}function p(){var J=H.css("position");if(J=="absolute"){H.trigger("postAbsolute.ScrollToFixed")}else{if(J=="fixed"){H.trigger("postFixed.ScrollToFixed")}else{H.trigger("postUnfixed.ScrollToFixed")}}}var D=function(J){if(H.is(":visible")){c=false;B()}};var G=function(J){(!!window.requestAnimationFrame)?requestAnimationFrame(B):B()};var C=function(){var K=document.body;if(document.createElement&&K&&K.appendChild&&K.removeChild){var M=document.createElement("div");if(!M.getBoundingClientRect){return null}M.innerHTML="x";M.style.cssText="position:fixed;top:100px;";K.appendChild(M);var N=K.style.height,O=K.scrollTop;K.style.height="3000px";K.scrollTop=500;var J=M.getBoundingClientRect().top;K.style.height=N;var L=(J===100);K.removeChild(M);K.scrollTop=O;return L}return null};var s=function(J){J=J||window.event;if(J.preventDefault){J.preventDefault()}J.returnValue=false};m.init=function(){m.options=a.extend({},a.ScrollToFixed.defaultOptions,i);z=H.css("z-index");m.$el.css("z-index",m.options.zIndex);u=a("<div />");I=H.css("position");F=H.css("position");k=H.css("float");e=H.css("top");if(h()){m.$el.after(u)}a(window).bind("resize.ScrollToFixed",D);a(window).bind("scroll.ScrollToFixed",G);if("ontouchmove" in window){a(window).bind("touchmove.ScrollToFixed",B)}if(m.options.preFixed){H.bind("preFixed.ScrollToFixed",m.options.preFixed)}if(m.options.postFixed){H.bind("postFixed.ScrollToFixed",m.options.postFixed)}if(m.options.preUnfixed){H.bind("preUnfixed.ScrollToFixed",m.options.preUnfixed)}if(m.options.postUnfixed){H.bind("postUnfixed.ScrollToFixed",m.options.postUnfixed)}if(m.options.preAbsolute){H.bind("preAbsolute.ScrollToFixed",m.options.preAbsolute)}if(m.options.postAbsolute){H.bind("postAbsolute.ScrollToFixed",m.options.postAbsolute)}if(m.options.fixed){H.bind("fixed.ScrollToFixed",m.options.fixed)}if(m.options.unfixed){H.bind("unfixed.ScrollToFixed",m.options.unfixed)}if(m.options.spacerClass){u.addClass(m.options.spacerClass)}H.bind("resize.ScrollToFixed",function(){u.height(H.height())});H.bind("scroll.ScrollToFixed",function(){H.trigger("preUnfixed.ScrollToFixed");l();H.trigger("unfixed.ScrollToFixed");B()});H.bind("detach.ScrollToFixed",function(J){s(J);H.trigger("preUnfixed.ScrollToFixed");l();H.trigger("unfixed.ScrollToFixed");a(window).unbind("resize.ScrollToFixed",D);a(window).unbind("scroll.ScrollToFixed",G);H.unbind(".ScrollToFixed");u.remove();m.$el.removeData("ScrollToFixed")});D()};m.init()};a.ScrollToFixed.defaultOptions={marginTop:0,limit:0,bottom:-1,zIndex:1000,baseClassName:"scroll-to-fixed-fixed"};a.fn.scrollToFixed=function(b){return this.each(function(){(new a.ScrollToFixed(this,b))})}})(jQuery);

/*! Select2 4.0.2 | https://github.com/select2/select2/blob/master/LICENSE.md */!function(a){"function"==typeof define&&define.amd?define(["jquery"],a):a("object"==typeof exports?require("jquery"):jQuery)}(function(a){var b=function(){if(a&&a.fn&&a.fn.select2&&a.fn.select2.amd)var b=a.fn.select2.amd;var b;return function(){if(!b||!b.requirejs){b?c=b:b={};var a,c,d;!function(b){function e(a,b){return u.call(a,b)}function f(a,b){var c,d,e,f,g,h,i,j,k,l,m,n=b&&b.split("/"),o=s.map,p=o&&o["*"]||{};if(a&&"."===a.charAt(0))if(b){for(a=a.split("/"),g=a.length-1,s.nodeIdCompat&&w.test(a[g])&&(a[g]=a[g].replace(w,"")),a=n.slice(0,n.length-1).concat(a),k=0;k<a.length;k+=1)if(m=a[k],"."===m)a.splice(k,1),k-=1;else if(".."===m){if(1===k&&(".."===a[2]||".."===a[0]))break;k>0&&(a.splice(k-1,2),k-=2)}a=a.join("/")}else 0===a.indexOf("./")&&(a=a.substring(2));if((n||p)&&o){for(c=a.split("/"),k=c.length;k>0;k-=1){if(d=c.slice(0,k).join("/"),n)for(l=n.length;l>0;l-=1)if(e=o[n.slice(0,l).join("/")],e&&(e=e[d])){f=e,h=k;break}if(f)break;!i&&p&&p[d]&&(i=p[d],j=k)}!f&&i&&(f=i,h=j),f&&(c.splice(0,h,f),a=c.join("/"))}return a}function g(a,c){return function(){var d=v.call(arguments,0);return"string"!=typeof d[0]&&1===d.length&&d.push(null),n.apply(b,d.concat([a,c]))}}function h(a){return function(b){return f(b,a)}}function i(a){return function(b){q[a]=b}}function j(a){if(e(r,a)){var c=r[a];delete r[a],t[a]=!0,m.apply(b,c)}if(!e(q,a)&&!e(t,a))throw new Error("No "+a);return q[a]}function k(a){var b,c=a?a.indexOf("!"):-1;return c>-1&&(b=a.substring(0,c),a=a.substring(c+1,a.length)),[b,a]}function l(a){return function(){return s&&s.config&&s.config[a]||{}}}var m,n,o,p,q={},r={},s={},t={},u=Object.prototype.hasOwnProperty,v=[].slice,w=/\.js$/;o=function(a,b){var c,d=k(a),e=d[0];return a=d[1],e&&(e=f(e,b),c=j(e)),e?a=c&&c.normalize?c.normalize(a,h(b)):f(a,b):(a=f(a,b),d=k(a),e=d[0],a=d[1],e&&(c=j(e))),{f:e?e+"!"+a:a,n:a,pr:e,p:c}},p={require:function(a){return g(a)},exports:function(a){var b=q[a];return"undefined"!=typeof b?b:q[a]={}},module:function(a){return{id:a,uri:"",exports:q[a],config:l(a)}}},m=function(a,c,d,f){var h,k,l,m,n,s,u=[],v=typeof d;if(f=f||a,"undefined"===v||"function"===v){for(c=!c.length&&d.length?["require","exports","module"]:c,n=0;n<c.length;n+=1)if(m=o(c[n],f),k=m.f,"require"===k)u[n]=p.require(a);else if("exports"===k)u[n]=p.exports(a),s=!0;else if("module"===k)h=u[n]=p.module(a);else if(e(q,k)||e(r,k)||e(t,k))u[n]=j(k);else{if(!m.p)throw new Error(a+" missing "+k);m.p.load(m.n,g(f,!0),i(k),{}),u[n]=q[k]}l=d?d.apply(q[a],u):void 0,a&&(h&&h.exports!==b&&h.exports!==q[a]?q[a]=h.exports:l===b&&s||(q[a]=l))}else a&&(q[a]=d)},a=c=n=function(a,c,d,e,f){if("string"==typeof a)return p[a]?p[a](c):j(o(a,c).f);if(!a.splice){if(s=a,s.deps&&n(s.deps,s.callback),!c)return;c.splice?(a=c,c=d,d=null):a=b}return c=c||function(){},"function"==typeof d&&(d=e,e=f),e?m(b,a,c,d):setTimeout(function(){m(b,a,c,d)},4),n},n.config=function(a){return n(a)},a._defined=q,d=function(a,b,c){if("string"!=typeof a)throw new Error("See almond README: incorrect module build, no module name");b.splice||(c=b,b=[]),e(q,a)||e(r,a)||(r[a]=[a,b,c])},d.amd={jQuery:!0}}(),b.requirejs=a,b.require=c,b.define=d}}(),b.define("almond",function(){}),b.define("jquery",[],function(){var b=a||$;return null==b&&console&&console.error&&console.error("Select2: An instance of jQuery or a jQuery-compatible library was not found. Make sure that you are including jQuery before Select2 on your web page."),b}),b.define("select2/utils",["jquery"],function(a){function b(a){var b=a.prototype,c=[];for(var d in b){var e=b[d];"function"==typeof e&&"constructor"!==d&&c.push(d)}return c}var c={};c.Extend=function(a,b){function c(){this.constructor=a}var d={}.hasOwnProperty;for(var e in b)d.call(b,e)&&(a[e]=b[e]);return c.prototype=b.prototype,a.prototype=new c,a.__super__=b.prototype,a},c.Decorate=function(a,c){function d(){var b=Array.prototype.unshift,d=c.prototype.constructor.length,e=a.prototype.constructor;d>0&&(b.call(arguments,a.prototype.constructor),e=c.prototype.constructor),e.apply(this,arguments)}function e(){this.constructor=d}var f=b(c),g=b(a);c.displayName=a.displayName,d.prototype=new e;for(var h=0;h<g.length;h++){var i=g[h];d.prototype[i]=a.prototype[i]}for(var j=(function(a){var b=function(){};a in d.prototype&&(b=d.prototype[a]);var e=c.prototype[a];return function(){var a=Array.prototype.unshift;return a.call(arguments,b),e.apply(this,arguments)}}),k=0;k<f.length;k++){var l=f[k];d.prototype[l]=j(l)}return d};var d=function(){this.listeners={}};return d.prototype.on=function(a,b){this.listeners=this.listeners||{},a in this.listeners?this.listeners[a].push(b):this.listeners[a]=[b]},d.prototype.trigger=function(a){var b=Array.prototype.slice;this.listeners=this.listeners||{},a in this.listeners&&this.invoke(this.listeners[a],b.call(arguments,1)),"*"in this.listeners&&this.invoke(this.listeners["*"],arguments)},d.prototype.invoke=function(a,b){for(var c=0,d=a.length;d>c;c++)a[c].apply(this,b)},c.Observable=d,c.generateChars=function(a){for(var b="",c=0;a>c;c++){var d=Math.floor(36*Math.random());b+=d.toString(36)}return b},c.bind=function(a,b){return function(){a.apply(b,arguments)}},c._convertData=function(a){for(var b in a){var c=b.split("-"),d=a;if(1!==c.length){for(var e=0;e<c.length;e++){var f=c[e];f=f.substring(0,1).toLowerCase()+f.substring(1),f in d||(d[f]={}),e==c.length-1&&(d[f]=a[b]),d=d[f]}delete a[b]}}return a},c.hasScroll=function(b,c){var d=a(c),e=c.style.overflowX,f=c.style.overflowY;return e!==f||"hidden"!==f&&"visible"!==f?"scroll"===e||"scroll"===f?!0:d.innerHeight()<c.scrollHeight||d.innerWidth()<c.scrollWidth:!1},c.escapeMarkup=function(a){var b={"\\":"&#92;","&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#47;"};return"string"!=typeof a?a:String(a).replace(/[&<>"'\/\\]/g,function(a){return b[a]})},c.appendMany=function(b,c){if("1.7"===a.fn.jquery.substr(0,3)){var d=a();a.map(c,function(a){d=d.add(a)}),c=d}b.append(c)},c}),b.define("select2/results",["jquery","./utils"],function(a,b){function c(a,b,d){this.$element=a,this.data=d,this.options=b,c.__super__.constructor.call(this)}return b.Extend(c,b.Observable),c.prototype.render=function(){var b=a('<ul class="select2-results__options" role="tree"></ul>');return this.options.get("multiple")&&b.attr("aria-multiselectable","true"),this.$results=b,b},c.prototype.clear=function(){this.$results.empty()},c.prototype.displayMessage=function(b){var c=this.options.get("escapeMarkup");this.clear(),this.hideLoading();var d=a('<li role="treeitem" aria-live="assertive" class="select2-results__option"></li>'),e=this.options.get("translations").get(b.message);d.append(c(e(b.args))),d[0].className+=" select2-results__message",this.$results.append(d)},c.prototype.hideMessages=function(){this.$results.find(".select2-results__message").remove()},c.prototype.append=function(a){this.hideLoading();var b=[];if(null==a.results||0===a.results.length)return void(0===this.$results.children().length&&this.trigger("results:message",{message:"noResults"}));a.results=this.sort(a.results);for(var c=0;c<a.results.length;c++){var d=a.results[c],e=this.option(d);b.push(e)}this.$results.append(b)},c.prototype.position=function(a,b){var c=b.find(".select2-results");c.append(a)},c.prototype.sort=function(a){var b=this.options.get("sorter");return b(a)},c.prototype.setClasses=function(){var b=this;this.data.current(function(c){var d=a.map(c,function(a){return a.id.toString()}),e=b.$results.find(".select2-results__option[aria-selected]");e.each(function(){var b=a(this),c=a.data(this,"data"),e=""+c.id;null!=c.element&&c.element.selected||null==c.element&&a.inArray(e,d)>-1?b.attr("aria-selected","true"):b.attr("aria-selected","false")});var f=e.filter("[aria-selected=true]");f.length>0?f.first().trigger("mouseenter"):e.first().trigger("mouseenter")})},c.prototype.showLoading=function(a){this.hideLoading();var b=this.options.get("translations").get("searching"),c={disabled:!0,loading:!0,text:b(a)},d=this.option(c);d.className+=" loading-results",this.$results.prepend(d)},c.prototype.hideLoading=function(){this.$results.find(".loading-results").remove()},c.prototype.option=function(b){var c=document.createElement("li");c.className="select2-results__option";var d={role:"treeitem","aria-selected":"false"};b.disabled&&(delete d["aria-selected"],d["aria-disabled"]="true"),null==b.id&&delete d["aria-selected"],null!=b._resultId&&(c.id=b._resultId),b.title&&(c.title=b.title),b.children&&(d.role="group",d["aria-label"]=b.text,delete d["aria-selected"]);for(var e in d){var f=d[e];c.setAttribute(e,f)}if(b.children){var g=a(c),h=document.createElement("strong");h.className="select2-results__group";a(h);this.template(b,h);for(var i=[],j=0;j<b.children.length;j++){var k=b.children[j],l=this.option(k);i.push(l)}var m=a("<ul></ul>",{"class":"select2-results__options select2-results__options--nested"});m.append(i),g.append(h),g.append(m)}else this.template(b,c);return a.data(c,"data",b),c},c.prototype.bind=function(b,c){var d=this,e=b.id+"-results";this.$results.attr("id",e),b.on("results:all",function(a){d.clear(),d.append(a.data),b.isOpen()&&d.setClasses()}),b.on("results:append",function(a){d.append(a.data),b.isOpen()&&d.setClasses()}),b.on("query",function(a){d.hideMessages(),d.showLoading(a)}),b.on("select",function(){b.isOpen()&&d.setClasses()}),b.on("unselect",function(){b.isOpen()&&d.setClasses()}),b.on("open",function(){d.$results.attr("aria-expanded","true"),d.$results.attr("aria-hidden","false"),d.setClasses(),d.ensureHighlightVisible()}),b.on("close",function(){d.$results.attr("aria-expanded","false"),d.$results.attr("aria-hidden","true"),d.$results.removeAttr("aria-activedescendant")}),b.on("results:toggle",function(){var a=d.getHighlightedResults();0!==a.length&&a.trigger("mouseup")}),b.on("results:select",function(){var a=d.getHighlightedResults();if(0!==a.length){var b=a.data("data");"true"==a.attr("aria-selected")?d.trigger("close",{}):d.trigger("select",{data:b})}}),b.on("results:previous",function(){var a=d.getHighlightedResults(),b=d.$results.find("[aria-selected]"),c=b.index(a);if(0!==c){var e=c-1;0===a.length&&(e=0);var f=b.eq(e);f.trigger("mouseenter");var g=d.$results.offset().top,h=f.offset().top,i=d.$results.scrollTop()+(h-g);0===e?d.$results.scrollTop(0):0>h-g&&d.$results.scrollTop(i)}}),b.on("results:next",function(){var a=d.getHighlightedResults(),b=d.$results.find("[aria-selected]"),c=b.index(a),e=c+1;if(!(e>=b.length)){var f=b.eq(e);f.trigger("mouseenter");var g=d.$results.offset().top+d.$results.outerHeight(!1),h=f.offset().top+f.outerHeight(!1),i=d.$results.scrollTop()+h-g;0===e?d.$results.scrollTop(0):h>g&&d.$results.scrollTop(i)}}),b.on("results:focus",function(a){a.element.addClass("select2-results__option--highlighted")}),b.on("results:message",function(a){d.displayMessage(a)}),a.fn.mousewheel&&this.$results.on("mousewheel",function(a){var b=d.$results.scrollTop(),c=d.$results.get(0).scrollHeight-b+a.deltaY,e=a.deltaY>0&&b-a.deltaY<=0,f=a.deltaY<0&&c<=d.$results.height();e?(d.$results.scrollTop(0),a.preventDefault(),a.stopPropagation()):f&&(d.$results.scrollTop(d.$results.get(0).scrollHeight-d.$results.height()),a.preventDefault(),a.stopPropagation())}),this.$results.on("mouseup",".select2-results__option[aria-selected]",function(b){var c=a(this),e=c.data("data");return"true"===c.attr("aria-selected")?void(d.options.get("multiple")?d.trigger("unselect",{originalEvent:b,data:e}):d.trigger("close",{})):void d.trigger("select",{originalEvent:b,data:e})}),this.$results.on("mouseenter",".select2-results__option[aria-selected]",function(b){var c=a(this).data("data");d.getHighlightedResults().removeClass("select2-results__option--highlighted"),d.trigger("results:focus",{data:c,element:a(this)})})},c.prototype.getHighlightedResults=function(){var a=this.$results.find(".select2-results__option--highlighted");return a},c.prototype.destroy=function(){this.$results.remove()},c.prototype.ensureHighlightVisible=function(){var a=this.getHighlightedResults();if(0!==a.length){var b=this.$results.find("[aria-selected]"),c=b.index(a),d=this.$results.offset().top,e=a.offset().top,f=this.$results.scrollTop()+(e-d),g=e-d;f-=2*a.outerHeight(!1),2>=c?this.$results.scrollTop(0):(g>this.$results.outerHeight()||0>g)&&this.$results.scrollTop(f)}},c.prototype.template=function(b,c){var d=this.options.get("templateResult"),e=this.options.get("escapeMarkup"),f=d(b,c);null==f?c.style.display="none":"string"==typeof f?c.innerHTML=e(f):a(c).append(f)},c}),b.define("select2/keys",[],function(){var a={BACKSPACE:8,TAB:9,ENTER:13,SHIFT:16,CTRL:17,ALT:18,ESC:27,SPACE:32,PAGE_UP:33,PAGE_DOWN:34,END:35,HOME:36,LEFT:37,UP:38,RIGHT:39,DOWN:40,DELETE:46};return a}),b.define("select2/selection/base",["jquery","../utils","../keys"],function(a,b,c){function d(a,b){this.$element=a,this.options=b,d.__super__.constructor.call(this)}return b.Extend(d,b.Observable),d.prototype.render=function(){var b=a('<span class="select2-selection" role="combobox"  aria-haspopup="true" aria-expanded="false"></span>');return this._tabindex=0,null!=this.$element.data("old-tabindex")?this._tabindex=this.$element.data("old-tabindex"):null!=this.$element.attr("tabindex")&&(this._tabindex=this.$element.attr("tabindex")),b.attr("title",this.$element.attr("title")),b.attr("tabindex",this._tabindex),this.$selection=b,b},d.prototype.bind=function(a,b){var d=this,e=(a.id+"-container",a.id+"-results");this.container=a,this.$selection.on("focus",function(a){d.trigger("focus",a)}),this.$selection.on("blur",function(a){d._handleBlur(a)}),this.$selection.on("keydown",function(a){d.trigger("keypress",a),a.which===c.SPACE&&a.preventDefault()}),a.on("results:focus",function(a){d.$selection.attr("aria-activedescendant",a.data._resultId)}),a.on("selection:update",function(a){d.update(a.data)}),a.on("open",function(){d.$selection.attr("aria-expanded","true"),d.$selection.attr("aria-owns",e),d._attachCloseHandler(a)}),a.on("close",function(){d.$selection.attr("aria-expanded","false"),d.$selection.removeAttr("aria-activedescendant"),d.$selection.removeAttr("aria-owns"),d.$selection.focus(),d._detachCloseHandler(a)}),a.on("enable",function(){d.$selection.attr("tabindex",d._tabindex)}),a.on("disable",function(){d.$selection.attr("tabindex","-1")})},d.prototype._handleBlur=function(b){var c=this;window.setTimeout(function(){document.activeElement==c.$selection[0]||a.contains(c.$selection[0],document.activeElement)||c.trigger("blur",b)},1)},d.prototype._attachCloseHandler=function(b){a(document.body).on("mousedown.select2."+b.id,function(b){var c=a(b.target),d=c.closest(".select2"),e=a(".select2.select2-container--open");e.each(function(){var b=a(this);if(this!=d[0]){var c=b.data("element");c.select2("close")}})})},d.prototype._detachCloseHandler=function(b){a(document.body).off("mousedown.select2."+b.id)},d.prototype.position=function(a,b){var c=b.find(".selection");c.append(a)},d.prototype.destroy=function(){this._detachCloseHandler(this.container)},d.prototype.update=function(a){throw new Error("The `update` method must be defined in child classes.")},d}),b.define("select2/selection/single",["jquery","./base","../utils","../keys"],function(a,b,c,d){function e(){e.__super__.constructor.apply(this,arguments)}return c.Extend(e,b),e.prototype.render=function(){var a=e.__super__.render.call(this);return a.addClass("select2-selection--single"),a.html('<span class="select2-selection__rendered"></span><span class="select2-selection__arrow" role="presentation"><b role="presentation"></b></span>'),a},e.prototype.bind=function(a,b){var c=this;e.__super__.bind.apply(this,arguments);var d=a.id+"-container";this.$selection.find(".select2-selection__rendered").attr("id",d),this.$selection.attr("aria-labelledby",d),this.$selection.on("mousedown",function(a){1===a.which&&c.trigger("toggle",{originalEvent:a})}),this.$selection.on("focus",function(a){}),this.$selection.on("blur",function(a){}),a.on("selection:update",function(a){c.update(a.data)})},e.prototype.clear=function(){this.$selection.find(".select2-selection__rendered").empty()},e.prototype.display=function(a,b){var c=this.options.get("templateSelection"),d=this.options.get("escapeMarkup");return d(c(a,b))},e.prototype.selectionContainer=function(){return a("<span></span>")},e.prototype.update=function(a){if(0===a.length)return void this.clear();var b=a[0],c=this.$selection.find(".select2-selection__rendered"),d=this.display(b,c);c.empty().append(d),c.prop("title",b.title||b.text)},e}),b.define("select2/selection/multiple",["jquery","./base","../utils"],function(a,b,c){function d(a,b){d.__super__.constructor.apply(this,arguments)}return c.Extend(d,b),d.prototype.render=function(){var a=d.__super__.render.call(this);return a.addClass("select2-selection--multiple"),a.html('<ul class="select2-selection__rendered"></ul>'),a},d.prototype.bind=function(b,c){var e=this;d.__super__.bind.apply(this,arguments),this.$selection.on("click",function(a){e.trigger("toggle",{originalEvent:a})}),this.$selection.on("click",".select2-selection__choice__remove",function(b){if(!e.options.get("disabled")){var c=a(this),d=c.parent(),f=d.data("data");e.trigger("unselect",{originalEvent:b,data:f})}})},d.prototype.clear=function(){this.$selection.find(".select2-selection__rendered").empty()},d.prototype.display=function(a,b){var c=this.options.get("templateSelection"),d=this.options.get("escapeMarkup");return d(c(a,b))},d.prototype.selectionContainer=function(){var b=a('<li class="select2-selection__choice"><span class="select2-selection__choice__remove" role="presentation">&times;</span></li>');return b},d.prototype.update=function(a){if(this.clear(),0!==a.length){for(var b=[],d=0;d<a.length;d++){var e=a[d],f=this.selectionContainer(),g=this.display(e,f);f.append(g),f.prop("title",e.title||e.text),f.data("data",e),b.push(f)}var h=this.$selection.find(".select2-selection__rendered");c.appendMany(h,b)}},d}),b.define("select2/selection/placeholder",["../utils"],function(a){function b(a,b,c){this.placeholder=this.normalizePlaceholder(c.get("placeholder")),a.call(this,b,c)}return b.prototype.normalizePlaceholder=function(a,b){return"string"==typeof b&&(b={id:"",text:b}),b},b.prototype.createPlaceholder=function(a,b){var c=this.selectionContainer();return c.html(this.display(b)),c.addClass("select2-selection__placeholder").removeClass("select2-selection__choice"),c},b.prototype.update=function(a,b){var c=1==b.length&&b[0].id!=this.placeholder.id,d=b.length>1;if(d||c)return a.call(this,b);this.clear();var e=this.createPlaceholder(this.placeholder);this.$selection.find(".select2-selection__rendered").append(e)},b}),b.define("select2/selection/allowClear",["jquery","../keys"],function(a,b){function c(){}return c.prototype.bind=function(a,b,c){var d=this;a.call(this,b,c),null==this.placeholder&&this.options.get("debug")&&window.console&&console.error&&console.error("Select2: The `allowClear` option should be used in combination with the `placeholder` option."),this.$selection.on("mousedown",".select2-selection__clear",function(a){d._handleClear(a)}),b.on("keypress",function(a){d._handleKeyboardClear(a,b)})},c.prototype._handleClear=function(a,b){if(!this.options.get("disabled")){var c=this.$selection.find(".select2-selection__clear");if(0!==c.length){b.stopPropagation();for(var d=c.data("data"),e=0;e<d.length;e++){var f={data:d[e]};if(this.trigger("unselect",f),f.prevented)return}this.$element.val(this.placeholder.id).trigger("change"),this.trigger("toggle",{})}}},c.prototype._handleKeyboardClear=function(a,c,d){d.isOpen()||(c.which==b.DELETE||c.which==b.BACKSPACE)&&this._handleClear(c)},c.prototype.update=function(b,c){if(b.call(this,c),!(this.$selection.find(".select2-selection__placeholder").length>0||0===c.length)){var d=a('<span class="select2-selection__clear">&times;</span>');d.data("data",c),this.$selection.find(".select2-selection__rendered").prepend(d)}},c}),b.define("select2/selection/search",["jquery","../utils","../keys"],function(a,b,c){function d(a,b,c){a.call(this,b,c)}return d.prototype.render=function(b){var c=a('<li class="select2-search select2-search--inline"><input class="select2-search__field" type="search" tabindex="-1" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" role="textbox" aria-autocomplete="list" /></li>');this.$searchContainer=c,this.$search=c.find("input");var d=b.call(this);return this._transferTabIndex(),d},d.prototype.bind=function(a,b,d){var e=this;a.call(this,b,d),b.on("open",function(){e.$search.trigger("focus")}),b.on("close",function(){e.$search.val(""),e.$search.removeAttr("aria-activedescendant"),e.$search.trigger("focus")}),b.on("enable",function(){e.$search.prop("disabled",!1),e._transferTabIndex()}),b.on("disable",function(){e.$search.prop("disabled",!0)}),b.on("focus",function(a){e.$search.trigger("focus")}),b.on("results:focus",function(a){e.$search.attr("aria-activedescendant",a.id)}),this.$selection.on("focusin",".select2-search--inline",function(a){e.trigger("focus",a)}),this.$selection.on("focusout",".select2-search--inline",function(a){e._handleBlur(a)}),this.$selection.on("keydown",".select2-search--inline",function(a){a.stopPropagation(),e.trigger("keypress",a),e._keyUpPrevented=a.isDefaultPrevented();var b=a.which;if(b===c.BACKSPACE&&""===e.$search.val()){var d=e.$searchContainer.prev(".select2-selection__choice");if(d.length>0){var f=d.data("data");e.searchRemoveChoice(f),a.preventDefault()}}});var f=document.documentMode,g=f&&11>=f;this.$selection.on("input.searchcheck",".select2-search--inline",function(a){return g?void e.$selection.off("input.search input.searchcheck"):void e.$selection.off("keyup.search")}),this.$selection.on("keyup.search input.search",".select2-search--inline",function(a){if(g&&"input"===a.type)return void e.$selection.off("input.search input.searchcheck");var b=a.which;b!=c.SHIFT&&b!=c.CTRL&&b!=c.ALT&&b!=c.TAB&&e.handleSearch(a)})},d.prototype._transferTabIndex=function(a){this.$search.attr("tabindex",this.$selection.attr("tabindex")),this.$selection.attr("tabindex","-1")},d.prototype.createPlaceholder=function(a,b){this.$search.attr("placeholder",b.text)},d.prototype.update=function(a,b){var c=this.$search[0]==document.activeElement;this.$search.attr("placeholder",""),a.call(this,b),this.$selection.find(".select2-selection__rendered").append(this.$searchContainer),this.resizeSearch(),c&&this.$search.focus()},d.prototype.handleSearch=function(){if(this.resizeSearch(),!this._keyUpPrevented){var a=this.$search.val();this.trigger("query",{term:a})}this._keyUpPrevented=!1},d.prototype.searchRemoveChoice=function(a,b){this.trigger("unselect",{data:b}),this.$search.val(b.text),this.handleSearch()},d.prototype.resizeSearch=function(){this.$search.css("width","25px");var a="";if(""!==this.$search.attr("placeholder"))a=this.$selection.find(".select2-selection__rendered").innerWidth();else{var b=this.$search.val().length+1;a=.75*b+"em"}this.$search.css("width",a)},d}),b.define("select2/selection/eventRelay",["jquery"],function(a){function b(){}return b.prototype.bind=function(b,c,d){var e=this,f=["open","opening","close","closing","select","selecting","unselect","unselecting"],g=["opening","closing","selecting","unselecting"];b.call(this,c,d),c.on("*",function(b,c){if(-1!==a.inArray(b,f)){c=c||{};var d=a.Event("select2:"+b,{params:c});e.$element.trigger(d),-1!==a.inArray(b,g)&&(c.prevented=d.isDefaultPrevented())}})},b}),b.define("select2/translation",["jquery","require"],function(a,b){function c(a){this.dict=a||{}}return c.prototype.all=function(){return this.dict},c.prototype.get=function(a){return this.dict[a]},c.prototype.extend=function(b){this.dict=a.extend({},b.all(),this.dict)},c._cache={},c.loadPath=function(a){if(!(a in c._cache)){var d=b(a);c._cache[a]=d}return new c(c._cache[a])},c}),b.define("select2/diacritics",[],function(){var a={"â’¶":"A","ï¼¡":"A","Ã€":"A","Ã":"A","Ã‚":"A","áº¦":"A","áº¤":"A","áºª":"A","áº¨":"A","Ãƒ":"A","Ä€":"A","Ä‚":"A","áº°":"A","áº®":"A","áº´":"A","áº²":"A","È¦":"A","Ç ":"A","Ã„":"A","Çž":"A","áº¢":"A","Ã…":"A","Çº":"A","Ç":"A","È€":"A","È‚":"A","áº ":"A","áº¬":"A","áº¶":"A","á¸€":"A","Ä„":"A","Èº":"A","â±¯":"A","êœ²":"AA","Ã†":"AE","Ç¼":"AE","Ç¢":"AE","êœ´":"AO","êœ¶":"AU","êœ¸":"AV","êœº":"AV","êœ¼":"AY","â’·":"B","ï¼¢":"B","á¸‚":"B","á¸„":"B","á¸†":"B","Éƒ":"B","Æ‚":"B","Æ":"B","â’¸":"C","ï¼£":"C","Ä†":"C","Äˆ":"C","ÄŠ":"C","ÄŒ":"C","Ã‡":"C","á¸ˆ":"C","Æ‡":"C","È»":"C","êœ¾":"C","â’¹":"D","ï¼¤":"D","á¸Š":"D","ÄŽ":"D","á¸Œ":"D","á¸":"D","á¸’":"D","á¸Ž":"D","Ä":"D","Æ‹":"D","ÆŠ":"D","Æ‰":"D","ê¹":"D","Ç±":"DZ","Ç„":"DZ","Ç²":"Dz","Ç…":"Dz","â’º":"E","ï¼¥":"E","Ãˆ":"E","Ã‰":"E","ÃŠ":"E","á»€":"E","áº¾":"E","á»„":"E","á»‚":"E","áº¼":"E","Ä’":"E","á¸”":"E","á¸–":"E","Ä”":"E","Ä–":"E","Ã‹":"E","áºº":"E","Äš":"E","È„":"E","È†":"E","áº¸":"E","á»†":"E","È¨":"E","á¸œ":"E","Ä˜":"E","á¸˜":"E","á¸š":"E","Æ":"E","ÆŽ":"E","â’»":"F","ï¼¦":"F","á¸ž":"F","Æ‘":"F","ê»":"F","â’¼":"G","ï¼§":"G","Ç´":"G","Äœ":"G","á¸ ":"G","Äž":"G","Ä ":"G","Ç¦":"G","Ä¢":"G","Ç¤":"G","Æ“":"G","êž ":"G","ê½":"G","ê¾":"G","â’½":"H","ï¼¨":"H","Ä¤":"H","á¸¢":"H","á¸¦":"H","Èž":"H","á¸¤":"H","á¸¨":"H","á¸ª":"H","Ä¦":"H","â±§":"H","â±µ":"H","êž":"H","â’¾":"I","ï¼©":"I","ÃŒ":"I","Ã":"I","ÃŽ":"I","Ä¨":"I","Äª":"I","Ä¬":"I","Ä°":"I","Ã":"I","á¸®":"I","á»ˆ":"I","Ç":"I","Èˆ":"I","ÈŠ":"I","á»Š":"I","Ä®":"I","á¸¬":"I","Æ—":"I","â’¿":"J","ï¼ª":"J","Ä´":"J","Éˆ":"J","â“€":"K","ï¼«":"K","á¸°":"K","Ç¨":"K","á¸²":"K","Ä¶":"K","á¸´":"K","Æ˜":"K","â±©":"K","ê€":"K","ê‚":"K","ê„":"K","êž¢":"K","â“":"L","ï¼¬":"L","Ä¿":"L","Ä¹":"L","Ä½":"L","á¸¶":"L","á¸¸":"L","Ä»":"L","á¸¼":"L","á¸º":"L","Å":"L","È½":"L","â±¢":"L","â± ":"L","êˆ":"L","ê†":"L","êž€":"L","Ç‡":"LJ","Çˆ":"Lj","â“‚":"M","ï¼­":"M","á¸¾":"M","á¹€":"M","á¹‚":"M","â±®":"M","Æœ":"M","â“ƒ":"N","ï¼®":"N","Ç¸":"N","Åƒ":"N","Ã‘":"N","á¹„":"N","Å‡":"N","á¹†":"N","Å…":"N","á¹Š":"N","á¹ˆ":"N","È ":"N","Æ":"N","êž":"N","êž¤":"N","ÇŠ":"NJ","Ç‹":"Nj","â“„":"O","ï¼¯":"O","Ã’":"O","Ã“":"O","Ã”":"O","á»’":"O","á»":"O","á»–":"O","á»”":"O","Ã•":"O","á¹Œ":"O","È¬":"O","á¹Ž":"O","ÅŒ":"O","á¹":"O","á¹’":"O","ÅŽ":"O","È®":"O","È°":"O","Ã–":"O","Èª":"O","á»Ž":"O","Å":"O","Ç‘":"O","ÈŒ":"O","ÈŽ":"O","Æ ":"O","á»œ":"O","á»š":"O","á» ":"O","á»ž":"O","á»¢":"O","á»Œ":"O","á»˜":"O","Çª":"O","Ç¬":"O","Ã˜":"O","Ç¾":"O","Æ†":"O","ÆŸ":"O","êŠ":"O","êŒ":"O","Æ¢":"OI","êŽ":"OO","È¢":"OU","â“…":"P","ï¼°":"P","á¹”":"P","á¹–":"P","Æ¤":"P","â±£":"P","ê":"P","ê’":"P","ê”":"P","â“†":"Q","ï¼±":"Q","ê–":"Q","ê˜":"Q","ÉŠ":"Q","â“‡":"R","ï¼²":"R","Å”":"R","á¹˜":"R","Å˜":"R","È":"R","È’":"R","á¹š":"R","á¹œ":"R","Å–":"R","á¹ž":"R","ÉŒ":"R","â±¤":"R","êš":"R","êž¦":"R","êž‚":"R","â“ˆ":"S","ï¼³":"S","áºž":"S","Åš":"S","á¹¤":"S","Åœ":"S","á¹ ":"S","Å ":"S","á¹¦":"S","á¹¢":"S","á¹¨":"S","È˜":"S","Åž":"S","â±¾":"S","êž¨":"S","êž„":"S","â“‰":"T","ï¼´":"T","á¹ª":"T","Å¤":"T","á¹¬":"T","Èš":"T","Å¢":"T","á¹°":"T","á¹®":"T","Å¦":"T","Æ¬":"T","Æ®":"T","È¾":"T","êž†":"T","êœ¨":"TZ","â“Š":"U","ï¼µ":"U","Ã™":"U","Ãš":"U","Ã›":"U","Å¨":"U","á¹¸":"U","Åª":"U","á¹º":"U","Å¬":"U","Ãœ":"U","Ç›":"U","Ç—":"U","Ç•":"U","Ç™":"U","á»¦":"U","Å®":"U","Å°":"U","Ç“":"U","È”":"U","È–":"U","Æ¯":"U","á»ª":"U","á»¨":"U","á»®":"U","á»¬":"U","á»°":"U","á»¤":"U","á¹²":"U","Å²":"U","á¹¶":"U","á¹´":"U","É„":"U","â“‹":"V","ï¼¶":"V","á¹¼":"V","á¹¾":"V","Æ²":"V","êž":"V","É…":"V","ê ":"VY","â“Œ":"W","ï¼·":"W","áº€":"W","áº‚":"W","Å´":"W","áº†":"W","áº„":"W","áºˆ":"W","â±²":"W","â“":"X","ï¼¸":"X","áºŠ":"X","áºŒ":"X","â“Ž":"Y","ï¼¹":"Y","á»²":"Y","Ã":"Y","Å¶":"Y","á»¸":"Y","È²":"Y","áºŽ":"Y","Å¸":"Y","á»¶":"Y","á»´":"Y","Æ³":"Y","ÉŽ":"Y","á»¾":"Y","â“":"Z","ï¼º":"Z","Å¹":"Z","áº":"Z","Å»":"Z","Å½":"Z","áº’":"Z","áº”":"Z","Æµ":"Z","È¤":"Z","â±¿":"Z","â±«":"Z","ê¢":"Z","â“":"a","ï½":"a","áºš":"a","Ã ":"a","Ã¡":"a","Ã¢":"a","áº§":"a","áº¥":"a","áº«":"a","áº©":"a","Ã£":"a","Ä":"a","Äƒ":"a","áº±":"a","áº¯":"a","áºµ":"a","áº³":"a","È§":"a","Ç¡":"a","Ã¤":"a","ÇŸ":"a","áº£":"a","Ã¥":"a","Ç»":"a","ÇŽ":"a","È":"a","Èƒ":"a","áº¡":"a","áº­":"a","áº·":"a","á¸":"a","Ä…":"a","â±¥":"a","É":"a","êœ³":"aa","Ã¦":"ae","Ç½":"ae","Ç£":"ae","êœµ":"ao","êœ·":"au","êœ¹":"av","êœ»":"av","êœ½":"ay","â“‘":"b","ï½‚":"b","á¸ƒ":"b","á¸…":"b","á¸‡":"b","Æ€":"b","Æƒ":"b","É“":"b","â“’":"c","ï½ƒ":"c","Ä‡":"c","Ä‰":"c","Ä‹":"c","Ä":"c","Ã§":"c","á¸‰":"c","Æˆ":"c","È¼":"c","êœ¿":"c","â†„":"c","â““":"d","ï½„":"d","á¸‹":"d","Ä":"d","á¸":"d","á¸‘":"d","á¸“":"d","á¸":"d","Ä‘":"d","ÆŒ":"d","É–":"d","É—":"d","êº":"d","Ç³":"dz","Ç†":"dz","â“”":"e","ï½…":"e","Ã¨":"e","Ã©":"e","Ãª":"e","á»":"e","áº¿":"e","á»…":"e","á»ƒ":"e","áº½":"e","Ä“":"e","á¸•":"e","á¸—":"e","Ä•":"e","Ä—":"e","Ã«":"e","áº»":"e","Ä›":"e","È…":"e","È‡":"e","áº¹":"e","á»‡":"e","È©":"e","á¸":"e","Ä™":"e","á¸™":"e","á¸›":"e","É‡":"e","É›":"e","Ç":"e","â“•":"f","ï½†":"f","á¸Ÿ":"f","Æ’":"f","ê¼":"f","â“–":"g","ï½‡":"g","Çµ":"g","Ä":"g","á¸¡":"g","ÄŸ":"g","Ä¡":"g","Ç§":"g","Ä£":"g","Ç¥":"g","É ":"g","êž¡":"g","áµ¹":"g","ê¿":"g","â“—":"h","ï½ˆ":"h","Ä¥":"h","á¸£":"h","á¸§":"h","ÈŸ":"h","á¸¥":"h","á¸©":"h","á¸«":"h","áº–":"h","Ä§":"h","â±¨":"h","â±¶":"h","É¥":"h","Æ•":"hv","â“˜":"i","ï½‰":"i","Ã¬":"i","Ã­":"i","Ã®":"i","Ä©":"i","Ä«":"i","Ä­":"i","Ã¯":"i","á¸¯":"i","á»‰":"i","Ç":"i","È‰":"i","È‹":"i","á»‹":"i","Ä¯":"i","á¸­":"i","É¨":"i","Ä±":"i","â“™":"j","ï½Š":"j","Äµ":"j","Ç°":"j","É‰":"j","â“š":"k","ï½‹":"k","á¸±":"k","Ç©":"k","á¸³":"k","Ä·":"k","á¸µ":"k","Æ™":"k","â±ª":"k","ê":"k","êƒ":"k","ê…":"k","êž£":"k","â“›":"l","ï½Œ":"l","Å€":"l","Äº":"l","Ä¾":"l","á¸·":"l","á¸¹":"l","Ä¼":"l","á¸½":"l","á¸»":"l","Å¿":"l","Å‚":"l","Æš":"l","É«":"l","â±¡":"l","ê‰":"l","êž":"l","ê‡":"l","Ç‰":"lj","â“œ":"m","ï½":"m","á¸¿":"m","á¹":"m","á¹ƒ":"m","É±":"m","É¯":"m","â“":"n","ï½Ž":"n","Ç¹":"n","Å„":"n","Ã±":"n","á¹…":"n","Åˆ":"n","á¹‡":"n","Å†":"n","á¹‹":"n","á¹‰":"n","Æž":"n","É²":"n","Å‰":"n","êž‘":"n","êž¥":"n","ÇŒ":"nj","â“ž":"o","ï½":"o","Ã²":"o","Ã³":"o","Ã´":"o","á»“":"o","á»‘":"o","á»—":"o","á»•":"o","Ãµ":"o","á¹":"o","È­":"o","á¹":"o","Å":"o","á¹‘":"o","á¹“":"o","Å":"o","È¯":"o","È±":"o","Ã¶":"o","È«":"o","á»":"o","Å‘":"o","Ç’":"o","È":"o","È":"o","Æ¡":"o","á»":"o","á»›":"o","á»¡":"o","á»Ÿ":"o","á»£":"o","á»":"o","á»™":"o","Ç«":"o","Ç­":"o","Ã¸":"o","Ç¿":"o","É”":"o","ê‹":"o","ê":"o","Éµ":"o","Æ£":"oi","È£":"ou","ê":"oo","â“Ÿ":"p","ï½":"p","á¹•":"p","á¹—":"p","Æ¥":"p","áµ½":"p","ê‘":"p","ê“":"p","ê•":"p","â“ ":"q","ï½‘":"q","É‹":"q","ê—":"q","ê™":"q","â“¡":"r","ï½’":"r","Å•":"r","á¹™":"r","Å™":"r","È‘":"r","È“":"r","á¹›":"r","á¹":"r","Å—":"r","á¹Ÿ":"r","É":"r","É½":"r","ê›":"r","êž§":"r","êžƒ":"r","â“¢":"s","ï½“":"s","ÃŸ":"s","Å›":"s","á¹¥":"s","Å":"s","á¹¡":"s","Å¡":"s","á¹§":"s","á¹£":"s","á¹©":"s","È™":"s","ÅŸ":"s","È¿":"s","êž©":"s","êž…":"s","áº›":"s","â“£":"t","ï½”":"t","á¹«":"t","áº—":"t","Å¥":"t","á¹­":"t","È›":"t","Å£":"t","á¹±":"t","á¹¯":"t","Å§":"t","Æ­":"t","Êˆ":"t","â±¦":"t","êž‡":"t","êœ©":"tz","â“¤":"u","ï½•":"u","Ã¹":"u","Ãº":"u","Ã»":"u","Å©":"u","á¹¹":"u","Å«":"u","á¹»":"u","Å­":"u","Ã¼":"u","Çœ":"u","Ç˜":"u","Ç–":"u","Çš":"u","á»§":"u","Å¯":"u","Å±":"u","Ç”":"u","È•":"u","È—":"u","Æ°":"u","á»«":"u","á»©":"u","á»¯":"u","á»­":"u","á»±":"u","á»¥":"u","á¹³":"u","Å³":"u","á¹·":"u","á¹µ":"u","Ê‰":"u","â“¥":"v","ï½–":"v","á¹½":"v","á¹¿":"v","Ê‹":"v","êŸ":"v","ÊŒ":"v","ê¡":"vy","â“¦":"w","ï½—":"w","áº":"w","áºƒ":"w","Åµ":"w","áº‡":"w","áº…":"w","áº˜":"w","áº‰":"w","â±³":"w","â“§":"x","ï½˜":"x","áº‹":"x","áº":"x","â“¨":"y","ï½™":"y","á»³":"y","Ã½":"y","Å·":"y","á»¹":"y","È³":"y","áº":"y","Ã¿":"y","á»·":"y","áº™":"y","á»µ":"y","Æ´":"y","É":"y","á»¿":"y","â“©":"z","ï½š":"z","Åº":"z","áº‘":"z","Å¼":"z","Å¾":"z","áº“":"z","áº•":"z","Æ¶":"z","È¥":"z","É€":"z","â±¬":"z","ê£":"z","Î†":"Î‘","Îˆ":"Î•","Î‰":"Î—","ÎŠ":"Î™","Îª":"Î™","ÎŒ":"ÎŸ","ÎŽ":"Î¥","Î«":"Î¥","Î":"Î©","Î¬":"Î±","Î­":"Îµ","Î®":"Î·","Î¯":"Î¹","ÏŠ":"Î¹","Î":"Î¹","ÏŒ":"Î¿","Ï":"Ï…","Ï‹":"Ï…","Î°":"Ï…","Ï‰":"Ï‰","Ï‚":"Ïƒ"};return a}),b.define("select2/data/base",["../utils"],function(a){function b(a,c){b.__super__.constructor.call(this)}return a.Extend(b,a.Observable),b.prototype.current=function(a){throw new Error("The `current` method must be defined in child classes.")},b.prototype.query=function(a,b){throw new Error("The `query` method must be defined in child classes.")},b.prototype.bind=function(a,b){},b.prototype.destroy=function(){},b.prototype.generateResultId=function(b,c){var d=b.id+"-result-";return d+=a.generateChars(4),d+=null!=c.id?"-"+c.id.toString():"-"+a.generateChars(4)},b}),b.define("select2/data/select",["./base","../utils","jquery"],function(a,b,c){function d(a,b){this.$element=a,this.options=b,d.__super__.constructor.call(this)}return b.Extend(d,a),d.prototype.current=function(a){var b=[],d=this;this.$element.find(":selected").each(function(){var a=c(this),e=d.item(a);b.push(e)}),a(b)},d.prototype.select=function(a){var b=this;if(a.selected=!0,c(a.element).is("option"))return a.element.selected=!0,void this.$element.trigger("change");if(this.$element.prop("multiple"))this.current(function(d){var e=[];a=[a],a.push.apply(a,d);for(var f=0;f<a.length;f++){var g=a[f].id;-1===c.inArray(g,e)&&e.push(g)}b.$element.val(e),b.$element.trigger("change")});else{var d=a.id;this.$element.val(d),this.$element.trigger("change")}},d.prototype.unselect=function(a){var b=this;if(this.$element.prop("multiple"))return a.selected=!1,
c(a.element).is("option")?(a.element.selected=!1,void this.$element.trigger("change")):void this.current(function(d){for(var e=[],f=0;f<d.length;f++){var g=d[f].id;g!==a.id&&-1===c.inArray(g,e)&&e.push(g)}b.$element.val(e),b.$element.trigger("change")})},d.prototype.bind=function(a,b){var c=this;this.container=a,a.on("select",function(a){c.select(a.data)}),a.on("unselect",function(a){c.unselect(a.data)})},d.prototype.destroy=function(){this.$element.find("*").each(function(){c.removeData(this,"data")})},d.prototype.query=function(a,b){var d=[],e=this,f=this.$element.children();f.each(function(){var b=c(this);if(b.is("option")||b.is("optgroup")){var f=e.item(b),g=e.matches(a,f);null!==g&&d.push(g)}}),b({results:d})},d.prototype.addOptions=function(a){b.appendMany(this.$element,a)},d.prototype.option=function(a){var b;a.children?(b=document.createElement("optgroup"),b.label=a.text):(b=document.createElement("option"),void 0!==b.textContent?b.textContent=a.text:b.innerText=a.text),a.id&&(b.value=a.id),a.disabled&&(b.disabled=!0),a.selected&&(b.selected=!0),a.title&&(b.title=a.title);var d=c(b),e=this._normalizeItem(a);return e.element=b,c.data(b,"data",e),d},d.prototype.item=function(a){var b={};if(b=c.data(a[0],"data"),null!=b)return b;if(a.is("option"))b={id:a.val(),text:a.text(),disabled:a.prop("disabled"),selected:a.prop("selected"),title:a.prop("title")};else if(a.is("optgroup")){b={text:a.prop("label"),children:[],title:a.prop("title")};for(var d=a.children("option"),e=[],f=0;f<d.length;f++){var g=c(d[f]),h=this.item(g);e.push(h)}b.children=e}return b=this._normalizeItem(b),b.element=a[0],c.data(a[0],"data",b),b},d.prototype._normalizeItem=function(a){c.isPlainObject(a)||(a={id:a,text:a}),a=c.extend({},{text:""},a);var b={selected:!1,disabled:!1};return null!=a.id&&(a.id=a.id.toString()),null!=a.text&&(a.text=a.text.toString()),null==a._resultId&&a.id&&null!=this.container&&(a._resultId=this.generateResultId(this.container,a)),c.extend({},b,a)},d.prototype.matches=function(a,b){var c=this.options.get("matcher");return c(a,b)},d}),b.define("select2/data/array",["./select","../utils","jquery"],function(a,b,c){function d(a,b){var c=b.get("data")||[];d.__super__.constructor.call(this,a,b),this.addOptions(this.convertToOptions(c))}return b.Extend(d,a),d.prototype.select=function(a){var b=this.$element.find("option").filter(function(b,c){return c.value==a.id.toString()});0===b.length&&(b=this.option(a),this.addOptions(b)),d.__super__.select.call(this,a)},d.prototype.convertToOptions=function(a){function d(a){return function(){return c(this).val()==a.id}}for(var e=this,f=this.$element.find("option"),g=f.map(function(){return e.item(c(this)).id}).get(),h=[],i=0;i<a.length;i++){var j=this._normalizeItem(a[i]);if(c.inArray(j.id,g)>=0){var k=f.filter(d(j)),l=this.item(k),m=c.extend(!0,{},j,l),n=this.option(m);k.replaceWith(n)}else{var o=this.option(j);if(j.children){var p=this.convertToOptions(j.children);b.appendMany(o,p)}h.push(o)}}return h},d}),b.define("select2/data/ajax",["./array","../utils","jquery"],function(a,b,c){function d(a,b){this.ajaxOptions=this._applyDefaults(b.get("ajax")),null!=this.ajaxOptions.processResults&&(this.processResults=this.ajaxOptions.processResults),d.__super__.constructor.call(this,a,b)}return b.Extend(d,a),d.prototype._applyDefaults=function(a){var b={data:function(a){return c.extend({},a,{q:a.term})},transport:function(a,b,d){var e=c.ajax(a);return e.then(b),e.fail(d),e}};return c.extend({},b,a,!0)},d.prototype.processResults=function(a){return a},d.prototype.query=function(a,b){function d(){var d=f.transport(f,function(d){var f=e.processResults(d,a);e.options.get("debug")&&window.console&&console.error&&(f&&f.results&&c.isArray(f.results)||console.error("Select2: The AJAX results did not return an array in the `results` key of the response.")),b(f)},function(){e.trigger("results:message",{message:"errorLoading"})});e._request=d}var e=this;null!=this._request&&(c.isFunction(this._request.abort)&&this._request.abort(),this._request=null);var f=c.extend({type:"GET"},this.ajaxOptions);"function"==typeof f.url&&(f.url=f.url.call(this.$element,a)),"function"==typeof f.data&&(f.data=f.data.call(this.$element,a)),this.ajaxOptions.delay&&""!==a.term?(this._queryTimeout&&window.clearTimeout(this._queryTimeout),this._queryTimeout=window.setTimeout(d,this.ajaxOptions.delay)):d()},d}),b.define("select2/data/tags",["jquery"],function(a){function b(b,c,d){var e=d.get("tags"),f=d.get("createTag");void 0!==f&&(this.createTag=f);var g=d.get("insertTag");if(void 0!==g&&(this.insertTag=g),b.call(this,c,d),a.isArray(e))for(var h=0;h<e.length;h++){var i=e[h],j=this._normalizeItem(i),k=this.option(j);this.$element.append(k)}}return b.prototype.query=function(a,b,c){function d(a,f){for(var g=a.results,h=0;h<g.length;h++){var i=g[h],j=null!=i.children&&!d({results:i.children},!0),k=i.text===b.term;if(k||j)return f?!1:(a.data=g,void c(a))}if(f)return!0;var l=e.createTag(b);if(null!=l){var m=e.option(l);m.attr("data-select2-tag",!0),e.addOptions([m]),e.insertTag(g,l)}a.results=g,c(a)}var e=this;return this._removeOldTags(),null==b.term||null!=b.page?void a.call(this,b,c):void a.call(this,b,d)},b.prototype.createTag=function(b,c){var d=a.trim(c.term);return""===d?null:{id:d,text:d}},b.prototype.insertTag=function(a,b,c){b.unshift(c)},b.prototype._removeOldTags=function(b){var c=(this._lastTag,this.$element.find("option[data-select2-tag]"));c.each(function(){this.selected||a(this).remove()})},b}),b.define("select2/data/tokenizer",["jquery"],function(a){function b(a,b,c){var d=c.get("tokenizer");void 0!==d&&(this.tokenizer=d),a.call(this,b,c)}return b.prototype.bind=function(a,b,c){a.call(this,b,c),this.$search=b.dropdown.$search||b.selection.$search||c.find(".select2-search__field")},b.prototype.query=function(a,b,c){function d(a){e.trigger("select",{data:a})}var e=this;b.term=b.term||"";var f=this.tokenizer(b,this.options,d);f.term!==b.term&&(this.$search.length&&(this.$search.val(f.term),this.$search.focus()),b.term=f.term),a.call(this,b,c)},b.prototype.tokenizer=function(b,c,d,e){for(var f=d.get("tokenSeparators")||[],g=c.term,h=0,i=this.createTag||function(a){return{id:a.term,text:a.term}};h<g.length;){var j=g[h];if(-1!==a.inArray(j,f)){var k=g.substr(0,h),l=a.extend({},c,{term:k}),m=i(l);null!=m?(e(m),g=g.substr(h+1)||"",h=0):h++}else h++}return{term:g}},b}),b.define("select2/data/minimumInputLength",[],function(){function a(a,b,c){this.minimumInputLength=c.get("minimumInputLength"),a.call(this,b,c)}return a.prototype.query=function(a,b,c){return b.term=b.term||"",b.term.length<this.minimumInputLength?void this.trigger("results:message",{message:"inputTooShort",args:{minimum:this.minimumInputLength,input:b.term,params:b}}):void a.call(this,b,c)},a}),b.define("select2/data/maximumInputLength",[],function(){function a(a,b,c){this.maximumInputLength=c.get("maximumInputLength"),a.call(this,b,c)}return a.prototype.query=function(a,b,c){return b.term=b.term||"",this.maximumInputLength>0&&b.term.length>this.maximumInputLength?void this.trigger("results:message",{message:"inputTooLong",args:{maximum:this.maximumInputLength,input:b.term,params:b}}):void a.call(this,b,c)},a}),b.define("select2/data/maximumSelectionLength",[],function(){function a(a,b,c){this.maximumSelectionLength=c.get("maximumSelectionLength"),a.call(this,b,c)}return a.prototype.query=function(a,b,c){var d=this;this.current(function(e){var f=null!=e?e.length:0;return d.maximumSelectionLength>0&&f>=d.maximumSelectionLength?void d.trigger("results:message",{message:"maximumSelected",args:{maximum:d.maximumSelectionLength}}):void a.call(d,b,c)})},a}),b.define("select2/dropdown",["jquery","./utils"],function(a,b){function c(a,b){this.$element=a,this.options=b,c.__super__.constructor.call(this)}return b.Extend(c,b.Observable),c.prototype.render=function(){var b=a('<span class="select2-dropdown"><span class="select2-results"></span></span>');return b.attr("dir",this.options.get("dir")),this.$dropdown=b,b},c.prototype.bind=function(){},c.prototype.position=function(a,b){},c.prototype.destroy=function(){this.$dropdown.remove()},c}),b.define("select2/dropdown/search",["jquery","../utils"],function(a,b){function c(){}return c.prototype.render=function(b){var c=b.call(this),d=a('<span class="select2-search select2-search--dropdown"><input class="select2-search__field" type="search" tabindex="-1" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" role="textbox" /></span>');return this.$searchContainer=d,this.$search=d.find("input"),c.prepend(d),c},c.prototype.bind=function(b,c,d){var e=this;b.call(this,c,d),this.$search.on("keydown",function(a){e.trigger("keypress",a),e._keyUpPrevented=a.isDefaultPrevented()}),this.$search.on("input",function(b){a(this).off("keyup")}),this.$search.on("keyup input",function(a){e.handleSearch(a)}),c.on("open",function(){e.$search.attr("tabindex",0),e.$search.focus(),window.setTimeout(function(){e.$search.focus()},0)}),c.on("close",function(){e.$search.attr("tabindex",-1),e.$search.val("")}),c.on("results:all",function(a){if(null==a.query.term||""===a.query.term){var b=e.showSearch(a);b?e.$searchContainer.removeClass("select2-search--hide"):e.$searchContainer.addClass("select2-search--hide")}})},c.prototype.handleSearch=function(a){if(!this._keyUpPrevented){var b=this.$search.val();this.trigger("query",{term:b})}this._keyUpPrevented=!1},c.prototype.showSearch=function(a,b){return!0},c}),b.define("select2/dropdown/hidePlaceholder",[],function(){function a(a,b,c,d){this.placeholder=this.normalizePlaceholder(c.get("placeholder")),a.call(this,b,c,d)}return a.prototype.append=function(a,b){b.results=this.removePlaceholder(b.results),a.call(this,b)},a.prototype.normalizePlaceholder=function(a,b){return"string"==typeof b&&(b={id:"",text:b}),b},a.prototype.removePlaceholder=function(a,b){for(var c=b.slice(0),d=b.length-1;d>=0;d--){var e=b[d];this.placeholder.id===e.id&&c.splice(d,1)}return c},a}),b.define("select2/dropdown/infiniteScroll",["jquery"],function(a){function b(a,b,c,d){this.lastParams={},a.call(this,b,c,d),this.$loadingMore=this.createLoadingMore(),this.loading=!1}return b.prototype.append=function(a,b){this.$loadingMore.remove(),this.loading=!1,a.call(this,b),this.showLoadingMore(b)&&this.$results.append(this.$loadingMore)},b.prototype.bind=function(b,c,d){var e=this;b.call(this,c,d),c.on("query",function(a){e.lastParams=a,e.loading=!0}),c.on("query:append",function(a){e.lastParams=a,e.loading=!0}),this.$results.on("scroll",function(){var b=a.contains(document.documentElement,e.$loadingMore[0]);if(!e.loading&&b){var c=e.$results.offset().top+e.$results.outerHeight(!1),d=e.$loadingMore.offset().top+e.$loadingMore.outerHeight(!1);c+50>=d&&e.loadMore()}})},b.prototype.loadMore=function(){this.loading=!0;var b=a.extend({},{page:1},this.lastParams);b.page++,this.trigger("query:append",b)},b.prototype.showLoadingMore=function(a,b){return b.pagination&&b.pagination.more},b.prototype.createLoadingMore=function(){var b=a('<li class="select2-results__option select2-results__option--load-more"role="treeitem" aria-disabled="true"></li>'),c=this.options.get("translations").get("loadingMore");return b.html(c(this.lastParams)),b},b}),b.define("select2/dropdown/attachBody",["jquery","../utils"],function(a,b){function c(b,c,d){this.$dropdownParent=d.get("dropdownParent")||a(document.body),b.call(this,c,d)}return c.prototype.bind=function(a,b,c){var d=this,e=!1;a.call(this,b,c),b.on("open",function(){d._showDropdown(),d._attachPositioningHandler(b),e||(e=!0,b.on("results:all",function(){d._positionDropdown(),d._resizeDropdown()}),b.on("results:append",function(){d._positionDropdown(),d._resizeDropdown()}))}),b.on("close",function(){d._hideDropdown(),d._detachPositioningHandler(b)}),this.$dropdownContainer.on("mousedown",function(a){a.stopPropagation()})},c.prototype.destroy=function(a){a.call(this),this.$dropdownContainer.remove()},c.prototype.position=function(a,b,c){b.attr("class",c.attr("class")),b.removeClass("select2"),b.addClass("select2-container--open"),b.css({position:"absolute",top:-999999}),this.$container=c},c.prototype.render=function(b){var c=a("<span></span>"),d=b.call(this);return c.append(d),this.$dropdownContainer=c,c},c.prototype._hideDropdown=function(a){this.$dropdownContainer.detach()},c.prototype._attachPositioningHandler=function(c,d){var e=this,f="scroll.select2."+d.id,g="resize.select2."+d.id,h="orientationchange.select2."+d.id,i=this.$container.parents().filter(b.hasScroll);i.each(function(){a(this).data("select2-scroll-position",{x:a(this).scrollLeft(),y:a(this).scrollTop()})}),i.on(f,function(b){var c=a(this).data("select2-scroll-position");a(this).scrollTop(c.y)}),a(window).on(f+" "+g+" "+h,function(a){e._positionDropdown(),e._resizeDropdown()})},c.prototype._detachPositioningHandler=function(c,d){var e="scroll.select2."+d.id,f="resize.select2."+d.id,g="orientationchange.select2."+d.id,h=this.$container.parents().filter(b.hasScroll);h.off(e),a(window).off(e+" "+f+" "+g)},c.prototype._positionDropdown=function(){var b=a(window),c=this.$dropdown.hasClass("select2-dropdown--above"),d=this.$dropdown.hasClass("select2-dropdown--below"),e=null,f=this.$container.offset();f.bottom=f.top+this.$container.outerHeight(!1);var g={height:this.$container.outerHeight(!1)};g.top=f.top,g.bottom=f.top+g.height;var h={height:this.$dropdown.outerHeight(!1)},i={top:b.scrollTop(),bottom:b.scrollTop()+b.height()},j=i.top<f.top-h.height,k=i.bottom>f.bottom+h.height,l={left:f.left,top:g.bottom},m=this.$dropdownParent;"static"===m.css("position")&&(m=m.offsetParent());var n=m.offset();l.top-=n.top,l.left-=n.left,c||d||(e="below"),k||!j||c?!j&&k&&c&&(e="below"):e="above",("above"==e||c&&"below"!==e)&&(l.top=g.top-h.height),null!=e&&(this.$dropdown.removeClass("select2-dropdown--below select2-dropdown--above").addClass("select2-dropdown--"+e),this.$container.removeClass("select2-container--below select2-container--above").addClass("select2-container--"+e)),this.$dropdownContainer.css(l)},c.prototype._resizeDropdown=function(){var a={width:this.$container.outerWidth(!1)+"px"};this.options.get("dropdownAutoWidth")&&(a.minWidth=a.width,a.width="auto"),this.$dropdown.css(a)},c.prototype._showDropdown=function(a){this.$dropdownContainer.appendTo(this.$dropdownParent),this._positionDropdown(),this._resizeDropdown()},c}),b.define("select2/dropdown/minimumResultsForSearch",[],function(){function a(b){for(var c=0,d=0;d<b.length;d++){var e=b[d];e.children?c+=a(e.children):c++}return c}function b(a,b,c,d){this.minimumResultsForSearch=c.get("minimumResultsForSearch"),this.minimumResultsForSearch<0&&(this.minimumResultsForSearch=1/0),a.call(this,b,c,d)}return b.prototype.showSearch=function(b,c){return a(c.data.results)<this.minimumResultsForSearch?!1:b.call(this,c)},b}),b.define("select2/dropdown/selectOnClose",[],function(){function a(){}return a.prototype.bind=function(a,b,c){var d=this;a.call(this,b,c),b.on("close",function(){d._handleSelectOnClose()})},a.prototype._handleSelectOnClose=function(){var a=this.getHighlightedResults();if(!(a.length<1)){var b=a.data("data");null!=b.element&&b.element.selected||null==b.element&&b.selected||this.trigger("select",{data:b})}},a}),b.define("select2/dropdown/closeOnSelect",[],function(){function a(){}return a.prototype.bind=function(a,b,c){var d=this;a.call(this,b,c),b.on("select",function(a){d._selectTriggered(a)}),b.on("unselect",function(a){d._selectTriggered(a)})},a.prototype._selectTriggered=function(a,b){var c=b.originalEvent;c&&c.ctrlKey||this.trigger("close",{})},a}),b.define("select2/i18n/en",[],function(){return{errorLoading:function(){return"The results could not be loaded."},inputTooLong:function(a){var b=a.input.length-a.maximum,c="Please delete "+b+" character";return 1!=b&&(c+="s"),c},inputTooShort:function(a){var b=a.minimum-a.input.length,c="Please enter "+b+" or more characters";return c},loadingMore:function(){return"Loading more resultsâ€¦"},maximumSelected:function(a){var b="You can only select "+a.maximum+" item";return 1!=a.maximum&&(b+="s"),b},noResults:function(){return"No results found"},searching:function(){return"Searchingâ€¦"}}}),b.define("select2/defaults",["jquery","require","./results","./selection/single","./selection/multiple","./selection/placeholder","./selection/allowClear","./selection/search","./selection/eventRelay","./utils","./translation","./diacritics","./data/select","./data/array","./data/ajax","./data/tags","./data/tokenizer","./data/minimumInputLength","./data/maximumInputLength","./data/maximumSelectionLength","./dropdown","./dropdown/search","./dropdown/hidePlaceholder","./dropdown/infiniteScroll","./dropdown/attachBody","./dropdown/minimumResultsForSearch","./dropdown/selectOnClose","./dropdown/closeOnSelect","./i18n/en"],function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C){function D(){this.reset()}D.prototype.apply=function(l){if(l=a.extend(!0,{},this.defaults,l),null==l.dataAdapter){if(null!=l.ajax?l.dataAdapter=o:null!=l.data?l.dataAdapter=n:l.dataAdapter=m,l.minimumInputLength>0&&(l.dataAdapter=j.Decorate(l.dataAdapter,r)),l.maximumInputLength>0&&(l.dataAdapter=j.Decorate(l.dataAdapter,s)),l.maximumSelectionLength>0&&(l.dataAdapter=j.Decorate(l.dataAdapter,t)),l.tags&&(l.dataAdapter=j.Decorate(l.dataAdapter,p)),(null!=l.tokenSeparators||null!=l.tokenizer)&&(l.dataAdapter=j.Decorate(l.dataAdapter,q)),null!=l.query){var C=b(l.amdBase+"compat/query");l.dataAdapter=j.Decorate(l.dataAdapter,C)}if(null!=l.initSelection){var D=b(l.amdBase+"compat/initSelection");l.dataAdapter=j.Decorate(l.dataAdapter,D)}}if(null==l.resultsAdapter&&(l.resultsAdapter=c,null!=l.ajax&&(l.resultsAdapter=j.Decorate(l.resultsAdapter,x)),null!=l.placeholder&&(l.resultsAdapter=j.Decorate(l.resultsAdapter,w)),l.selectOnClose&&(l.resultsAdapter=j.Decorate(l.resultsAdapter,A))),null==l.dropdownAdapter){if(l.multiple)l.dropdownAdapter=u;else{var E=j.Decorate(u,v);l.dropdownAdapter=E}if(0!==l.minimumResultsForSearch&&(l.dropdownAdapter=j.Decorate(l.dropdownAdapter,z)),l.closeOnSelect&&(l.dropdownAdapter=j.Decorate(l.dropdownAdapter,B)),null!=l.dropdownCssClass||null!=l.dropdownCss||null!=l.adaptDropdownCssClass){var F=b(l.amdBase+"compat/dropdownCss");l.dropdownAdapter=j.Decorate(l.dropdownAdapter,F)}l.dropdownAdapter=j.Decorate(l.dropdownAdapter,y)}if(null==l.selectionAdapter){if(l.multiple?l.selectionAdapter=e:l.selectionAdapter=d,null!=l.placeholder&&(l.selectionAdapter=j.Decorate(l.selectionAdapter,f)),l.allowClear&&(l.selectionAdapter=j.Decorate(l.selectionAdapter,g)),l.multiple&&(l.selectionAdapter=j.Decorate(l.selectionAdapter,h)),null!=l.containerCssClass||null!=l.containerCss||null!=l.adaptContainerCssClass){var G=b(l.amdBase+"compat/containerCss");l.selectionAdapter=j.Decorate(l.selectionAdapter,G)}l.selectionAdapter=j.Decorate(l.selectionAdapter,i)}if("string"==typeof l.language)if(l.language.indexOf("-")>0){var H=l.language.split("-"),I=H[0];l.language=[l.language,I]}else l.language=[l.language];if(a.isArray(l.language)){var J=new k;l.language.push("en");for(var K=l.language,L=0;L<K.length;L++){var M=K[L],N={};try{N=k.loadPath(M)}catch(O){try{M=this.defaults.amdLanguageBase+M,N=k.loadPath(M)}catch(P){l.debug&&window.console&&console.warn&&console.warn('Select2: The language file for "'+M+'" could not be automatically loaded. A fallback will be used instead.');continue}}J.extend(N)}l.translations=J}else{var Q=k.loadPath(this.defaults.amdLanguageBase+"en"),R=new k(l.language);R.extend(Q),l.translations=R}return l},D.prototype.reset=function(){function b(a){function b(a){return l[a]||a}return a.replace(/[^\u0000-\u007E]/g,b)}function c(d,e){if(""===a.trim(d.term))return e;if(e.children&&e.children.length>0){for(var f=a.extend(!0,{},e),g=e.children.length-1;g>=0;g--){var h=e.children[g],i=c(d,h);null==i&&f.children.splice(g,1)}return f.children.length>0?f:c(d,f)}var j=b(e.text).toUpperCase(),k=b(d.term).toUpperCase();return j.indexOf(k)>-1?e:null}this.defaults={amdBase:"./",amdLanguageBase:"./i18n/",closeOnSelect:!0,debug:!1,dropdownAutoWidth:!1,escapeMarkup:j.escapeMarkup,language:C,matcher:c,minimumInputLength:0,maximumInputLength:0,maximumSelectionLength:0,minimumResultsForSearch:0,selectOnClose:!1,sorter:function(a){return a},templateResult:function(a){return a.text},templateSelection:function(a){return a.text},theme:"default",width:"resolve"}},D.prototype.set=function(b,c){var d=a.camelCase(b),e={};e[d]=c;var f=j._convertData(e);a.extend(this.defaults,f)};var E=new D;return E}),b.define("select2/options",["require","jquery","./defaults","./utils"],function(a,b,c,d){function e(b,e){if(this.options=b,null!=e&&this.fromElement(e),this.options=c.apply(this.options),e&&e.is("input")){var f=a(this.get("amdBase")+"compat/inputData");this.options.dataAdapter=d.Decorate(this.options.dataAdapter,f)}}return e.prototype.fromElement=function(a){var c=["select2"];null==this.options.multiple&&(this.options.multiple=a.prop("multiple")),null==this.options.disabled&&(this.options.disabled=a.prop("disabled")),null==this.options.language&&(a.prop("lang")?this.options.language=a.prop("lang").toLowerCase():a.closest("[lang]").prop("lang")&&(this.options.language=a.closest("[lang]").prop("lang"))),null==this.options.dir&&(a.prop("dir")?this.options.dir=a.prop("dir"):a.closest("[dir]").prop("dir")?this.options.dir=a.closest("[dir]").prop("dir"):this.options.dir="ltr"),a.prop("disabled",this.options.disabled),a.prop("multiple",this.options.multiple),a.data("select2Tags")&&(this.options.debug&&window.console&&console.warn&&console.warn('Select2: The `data-select2-tags` attribute has been changed to use the `data-data` and `data-tags="true"` attributes and will be removed in future versions of Select2.'),a.data("data",a.data("select2Tags")),a.data("tags",!0)),a.data("ajaxUrl")&&(this.options.debug&&window.console&&console.warn&&console.warn("Select2: The `data-ajax-url` attribute has been changed to `data-ajax--url` and support for the old attribute will be removed in future versions of Select2."),a.attr("ajax--url",a.data("ajaxUrl")),a.data("ajax--url",a.data("ajaxUrl")));var e={};e=b.fn.jquery&&"1."==b.fn.jquery.substr(0,2)&&a[0].dataset?b.extend(!0,{},a[0].dataset,a.data()):a.data();var f=b.extend(!0,{},e);f=d._convertData(f);for(var g in f)b.inArray(g,c)>-1||(b.isPlainObject(this.options[g])?b.extend(this.options[g],f[g]):this.options[g]=f[g]);return this},e.prototype.get=function(a){return this.options[a]},e.prototype.set=function(a,b){this.options[a]=b},e}),b.define("select2/core",["jquery","./options","./utils","./keys"],function(a,b,c,d){var e=function(a,c){null!=a.data("select2")&&a.data("select2").destroy(),this.$element=a,this.id=this._generateId(a),c=c||{},this.options=new b(c,a),e.__super__.constructor.call(this);var d=a.attr("tabindex")||0;a.data("old-tabindex",d),a.attr("tabindex","-1");var f=this.options.get("dataAdapter");this.dataAdapter=new f(a,this.options);var g=this.render();this._placeContainer(g);var h=this.options.get("selectionAdapter");this.selection=new h(a,this.options),this.$selection=this.selection.render(),this.selection.position(this.$selection,g);var i=this.options.get("dropdownAdapter");this.dropdown=new i(a,this.options),this.$dropdown=this.dropdown.render(),this.dropdown.position(this.$dropdown,g);var j=this.options.get("resultsAdapter");this.results=new j(a,this.options,this.dataAdapter),this.$results=this.results.render(),this.results.position(this.$results,this.$dropdown);var k=this;this._bindAdapters(),this._registerDomEvents(),this._registerDataEvents(),this._registerSelectionEvents(),this._registerDropdownEvents(),this._registerResultsEvents(),this._registerEvents(),this.dataAdapter.current(function(a){k.trigger("selection:update",{data:a})}),a.addClass("select2-hidden-accessible"),a.attr("aria-hidden","true"),this._syncAttributes(),a.data("select2",this)};return c.Extend(e,c.Observable),e.prototype._generateId=function(a){var b="";return b=null!=a.attr("id")?a.attr("id"):null!=a.attr("name")?a.attr("name")+"-"+c.generateChars(2):c.generateChars(4),b=b.replace(/(:|\.|\[|\]|,)/g,""),b="select2-"+b},e.prototype._placeContainer=function(a){a.insertAfter(this.$element);var b=this._resolveWidth(this.$element,this.options.get("width"));null!=b&&a.css("width",b)},e.prototype._resolveWidth=function(a,b){var c=/^width:(([-+]?([0-9]*\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/i;if("resolve"==b){var d=this._resolveWidth(a,"style");return null!=d?d:this._resolveWidth(a,"element")}if("element"==b){var e=a.outerWidth(!1);return 0>=e?"auto":e+"px"}if("style"==b){var f=a.attr("style");if("string"!=typeof f)return null;for(var g=f.split(";"),h=0,i=g.length;i>h;h+=1){var j=g[h].replace(/\s/g,""),k=j.match(c);if(null!==k&&k.length>=1)return k[1]}return null}return b},e.prototype._bindAdapters=function(){this.dataAdapter.bind(this,this.$container),this.selection.bind(this,this.$container),this.dropdown.bind(this,this.$container),this.results.bind(this,this.$container)},e.prototype._registerDomEvents=function(){var b=this;this.$element.on("change.select2",function(){b.dataAdapter.current(function(a){b.trigger("selection:update",{data:a})})}),this._sync=c.bind(this._syncAttributes,this),this.$element[0].attachEvent&&this.$element[0].attachEvent("onpropertychange",this._sync);var d=window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver;null!=d?(this._observer=new d(function(c){a.each(c,b._sync)}),this._observer.observe(this.$element[0],{attributes:!0,subtree:!1})):this.$element[0].addEventListener&&this.$element[0].addEventListener("DOMAttrModified",b._sync,!1)},e.prototype._registerDataEvents=function(){var a=this;this.dataAdapter.on("*",function(b,c){a.trigger(b,c)})},e.prototype._registerSelectionEvents=function(){var b=this,c=["toggle","focus"];this.selection.on("toggle",function(){b.toggleDropdown()}),this.selection.on("focus",function(a){b.focus(a)}),this.selection.on("*",function(d,e){-1===a.inArray(d,c)&&b.trigger(d,e)})},e.prototype._registerDropdownEvents=function(){var a=this;this.dropdown.on("*",function(b,c){a.trigger(b,c)})},e.prototype._registerResultsEvents=function(){var a=this;this.results.on("*",function(b,c){a.trigger(b,c)})},e.prototype._registerEvents=function(){var a=this;this.on("open",function(){a.$container.addClass("select2-container--open")}),this.on("close",function(){a.$container.removeClass("select2-container--open")}),this.on("enable",function(){a.$container.removeClass("select2-container--disabled")}),this.on("disable",function(){a.$container.addClass("select2-container--disabled")}),this.on("blur",function(){a.$container.removeClass("select2-container--focus")}),this.on("query",function(b){a.isOpen()||a.trigger("open",{}),this.dataAdapter.query(b,function(c){a.trigger("results:all",{data:c,query:b})})}),this.on("query:append",function(b){this.dataAdapter.query(b,function(c){a.trigger("results:append",{data:c,query:b})})}),this.on("keypress",function(b){var c=b.which;a.isOpen()?c===d.ESC||c===d.TAB||c===d.UP&&b.altKey?(a.close(),b.preventDefault()):c===d.ENTER?(a.trigger("results:select",{}),b.preventDefault()):c===d.SPACE&&b.ctrlKey?(a.trigger("results:toggle",{}),b.preventDefault()):c===d.UP?(a.trigger("results:previous",{}),b.preventDefault()):c===d.DOWN&&(a.trigger("results:next",{}),b.preventDefault()):(c===d.ENTER||c===d.SPACE||c===d.DOWN&&b.altKey)&&(a.open(),b.preventDefault())})},e.prototype._syncAttributes=function(){this.options.set("disabled",this.$element.prop("disabled")),this.options.get("disabled")?(this.isOpen()&&this.close(),this.trigger("disable",{})):this.trigger("enable",{})},e.prototype.trigger=function(a,b){var c=e.__super__.trigger,d={open:"opening",close:"closing",select:"selecting",unselect:"unselecting"};if(void 0===b&&(b={}),a in d){var f=d[a],g={prevented:!1,name:a,args:b};if(c.call(this,f,g),g.prevented)return void(b.prevented=!0)}c.call(this,a,b)},e.prototype.toggleDropdown=function(){this.options.get("disabled")||(this.isOpen()?this.close():this.open())},e.prototype.open=function(){this.isOpen()||this.trigger("query",{})},e.prototype.close=function(){this.isOpen()&&this.trigger("close",{})},e.prototype.isOpen=function(){return this.$container.hasClass("select2-container--open")},e.prototype.hasFocus=function(){return this.$container.hasClass("select2-container--focus")},e.prototype.focus=function(a){this.hasFocus()||(this.$container.addClass("select2-container--focus"),this.trigger("focus",{}))},e.prototype.enable=function(a){this.options.get("debug")&&window.console&&console.warn&&console.warn('Select2: The `select2("enable")` method has been deprecated and will be removed in later Select2 versions. Use $element.prop("disabled") instead.'),(null==a||0===a.length)&&(a=[!0]);var b=!a[0];this.$element.prop("disabled",b)},e.prototype.data=function(){this.options.get("debug")&&arguments.length>0&&window.console&&console.warn&&console.warn('Select2: Data can no longer be set using `select2("data")`. You should consider setting the value instead using `$element.val()`.');var a=[];return this.dataAdapter.current(function(b){a=b}),a},e.prototype.val=function(b){if(this.options.get("debug")&&window.console&&console.warn&&console.warn('Select2: The `select2("val")` method has been deprecated and will be removed in later Select2 versions. Use $element.val() instead.'),null==b||0===b.length)return this.$element.val();var c=b[0];a.isArray(c)&&(c=a.map(c,function(a){return a.toString()})),this.$element.val(c).trigger("change")},e.prototype.destroy=function(){this.$container.remove(),this.$element[0].detachEvent&&this.$element[0].detachEvent("onpropertychange",this._sync),null!=this._observer?(this._observer.disconnect(),this._observer=null):this.$element[0].removeEventListener&&this.$element[0].removeEventListener("DOMAttrModified",this._sync,!1),this._sync=null,this.$element.off(".select2"),this.$element.attr("tabindex",this.$element.data("old-tabindex")),this.$element.removeClass("select2-hidden-accessible"),this.$element.attr("aria-hidden","false"),this.$element.removeData("select2"),this.dataAdapter.destroy(),this.selection.destroy(),this.dropdown.destroy(),this.results.destroy(),this.dataAdapter=null,this.selection=null,this.dropdown=null,this.results=null},e.prototype.render=function(){var b=a('<span class="select2 select2-container"><span class="selection"></span><span class="dropdown-wrapper" aria-hidden="true"></span></span>');return b.attr("dir",this.options.get("dir")),this.$container=b,this.$container.addClass("select2-container--"+this.options.get("theme")),b.data("element",this.$element),b},e}),b.define("select2/compat/utils",["jquery"],function(a){function b(b,c,d){var e,f,g=[];e=a.trim(b.attr("class")),e&&(e=""+e,a(e.split(/\s+/)).each(function(){0===this.indexOf("select2-")&&g.push(this)})),e=a.trim(c.attr("class")),e&&(e=""+e,a(e.split(/\s+/)).each(function(){0!==this.indexOf("select2-")&&(f=d(this),null!=f&&g.push(f))})),b.attr("class",g.join(" "))}return{syncCssClasses:b}}),b.define("select2/compat/containerCss",["jquery","./utils"],function(a,b){function c(a){return null}function d(){}return d.prototype.render=function(d){var e=d.call(this),f=this.options.get("containerCssClass")||"";a.isFunction(f)&&(f=f(this.$element));var g=this.options.get("adaptContainerCssClass");if(g=g||c,-1!==f.indexOf(":all:")){f=f.replace(":all:","");var h=g;g=function(a){var b=h(a);return null!=b?b+" "+a:a}}var i=this.options.get("containerCss")||{};return a.isFunction(i)&&(i=i(this.$element)),b.syncCssClasses(e,this.$element,g),e.css(i),e.addClass(f),e},d}),b.define("select2/compat/dropdownCss",["jquery","./utils"],function(a,b){function c(a){return null}function d(){}return d.prototype.render=function(d){var e=d.call(this),f=this.options.get("dropdownCssClass")||"";a.isFunction(f)&&(f=f(this.$element));var g=this.options.get("adaptDropdownCssClass");if(g=g||c,-1!==f.indexOf(":all:")){f=f.replace(":all:","");var h=g;g=function(a){var b=h(a);return null!=b?b+" "+a:a;
}}var i=this.options.get("dropdownCss")||{};return a.isFunction(i)&&(i=i(this.$element)),b.syncCssClasses(e,this.$element,g),e.css(i),e.addClass(f),e},d}),b.define("select2/compat/initSelection",["jquery"],function(a){function b(a,b,c){c.get("debug")&&window.console&&console.warn&&console.warn("Select2: The `initSelection` option has been deprecated in favor of a custom data adapter that overrides the `current` method. This method is now called multiple times instead of a single time when the instance is initialized. Support will be removed for the `initSelection` option in future versions of Select2"),this.initSelection=c.get("initSelection"),this._isInitialized=!1,a.call(this,b,c)}return b.prototype.current=function(b,c){var d=this;return this._isInitialized?void b.call(this,c):void this.initSelection.call(null,this.$element,function(b){d._isInitialized=!0,a.isArray(b)||(b=[b]),c(b)})},b}),b.define("select2/compat/inputData",["jquery"],function(a){function b(a,b,c){this._currentData=[],this._valueSeparator=c.get("valueSeparator")||",","hidden"===b.prop("type")&&c.get("debug")&&console&&console.warn&&console.warn("Select2: Using a hidden input with Select2 is no longer supported and may stop working in the future. It is recommended to use a `<select>` element instead."),a.call(this,b,c)}return b.prototype.current=function(b,c){function d(b,c){var e=[];return b.selected||-1!==a.inArray(b.id,c)?(b.selected=!0,e.push(b)):b.selected=!1,b.children&&e.push.apply(e,d(b.children,c)),e}for(var e=[],f=0;f<this._currentData.length;f++){var g=this._currentData[f];e.push.apply(e,d(g,this.$element.val().split(this._valueSeparator)))}c(e)},b.prototype.select=function(b,c){if(this.options.get("multiple")){var d=this.$element.val();d+=this._valueSeparator+c.id,this.$element.val(d),this.$element.trigger("change")}else this.current(function(b){a.map(b,function(a){a.selected=!1})}),this.$element.val(c.id),this.$element.trigger("change")},b.prototype.unselect=function(a,b){var c=this;b.selected=!1,this.current(function(a){for(var d=[],e=0;e<a.length;e++){var f=a[e];b.id!=f.id&&d.push(f.id)}c.$element.val(d.join(c._valueSeparator)),c.$element.trigger("change")})},b.prototype.query=function(a,b,c){for(var d=[],e=0;e<this._currentData.length;e++){var f=this._currentData[e],g=this.matches(b,f);null!==g&&d.push(g)}c({results:d})},b.prototype.addOptions=function(b,c){var d=a.map(c,function(b){return a.data(b[0],"data")});this._currentData.push.apply(this._currentData,d)},b}),b.define("select2/compat/matcher",["jquery"],function(a){function b(b){function c(c,d){var e=a.extend(!0,{},d);if(null==c.term||""===a.trim(c.term))return e;if(d.children){for(var f=d.children.length-1;f>=0;f--){var g=d.children[f],h=b(c.term,g.text,g);h||e.children.splice(f,1)}if(e.children.length>0)return e}return b(c.term,d.text,d)?e:null}return c}return b}),b.define("select2/compat/query",[],function(){function a(a,b,c){c.get("debug")&&window.console&&console.warn&&console.warn("Select2: The `query` option has been deprecated in favor of a custom data adapter that overrides the `query` method. Support will be removed for the `query` option in future versions of Select2."),a.call(this,b,c)}return a.prototype.query=function(a,b,c){b.callback=c;var d=this.options.get("query");d.call(null,b)},a}),b.define("select2/dropdown/attachContainer",[],function(){function a(a,b,c){a.call(this,b,c)}return a.prototype.position=function(a,b,c){var d=c.find(".dropdown-wrapper");d.append(b),b.addClass("select2-dropdown--below"),c.addClass("select2-container--below")},a}),b.define("select2/dropdown/stopPropagation",[],function(){function a(){}return a.prototype.bind=function(a,b,c){a.call(this,b,c);var d=["blur","change","click","dblclick","focus","focusin","focusout","input","keydown","keyup","keypress","mousedown","mouseenter","mouseleave","mousemove","mouseover","mouseup","search","touchend","touchstart"];this.$dropdown.on(d.join(" "),function(a){a.stopPropagation()})},a}),b.define("select2/selection/stopPropagation",[],function(){function a(){}return a.prototype.bind=function(a,b,c){a.call(this,b,c);var d=["blur","change","click","dblclick","focus","focusin","focusout","input","keydown","keyup","keypress","mousedown","mouseenter","mouseleave","mousemove","mouseover","mouseup","search","touchend","touchstart"];this.$selection.on(d.join(" "),function(a){a.stopPropagation()})},a}),function(c){"function"==typeof b.define&&b.define.amd?b.define("jquery-mousewheel",["jquery"],c):"object"==typeof exports?module.exports=c:c(a)}(function(a){function b(b){var g=b||window.event,h=i.call(arguments,1),j=0,l=0,m=0,n=0,o=0,p=0;if(b=a.event.fix(g),b.type="mousewheel","detail"in g&&(m=-1*g.detail),"wheelDelta"in g&&(m=g.wheelDelta),"wheelDeltaY"in g&&(m=g.wheelDeltaY),"wheelDeltaX"in g&&(l=-1*g.wheelDeltaX),"axis"in g&&g.axis===g.HORIZONTAL_AXIS&&(l=-1*m,m=0),j=0===m?l:m,"deltaY"in g&&(m=-1*g.deltaY,j=m),"deltaX"in g&&(l=g.deltaX,0===m&&(j=-1*l)),0!==m||0!==l){if(1===g.deltaMode){var q=a.data(this,"mousewheel-line-height");j*=q,m*=q,l*=q}else if(2===g.deltaMode){var r=a.data(this,"mousewheel-page-height");j*=r,m*=r,l*=r}if(n=Math.max(Math.abs(m),Math.abs(l)),(!f||f>n)&&(f=n,d(g,n)&&(f/=40)),d(g,n)&&(j/=40,l/=40,m/=40),j=Math[j>=1?"floor":"ceil"](j/f),l=Math[l>=1?"floor":"ceil"](l/f),m=Math[m>=1?"floor":"ceil"](m/f),k.settings.normalizeOffset&&this.getBoundingClientRect){var s=this.getBoundingClientRect();o=b.clientX-s.left,p=b.clientY-s.top}return b.deltaX=l,b.deltaY=m,b.deltaFactor=f,b.offsetX=o,b.offsetY=p,b.deltaMode=0,h.unshift(b,j,l,m),e&&clearTimeout(e),e=setTimeout(c,200),(a.event.dispatch||a.event.handle).apply(this,h)}}function c(){f=null}function d(a,b){return k.settings.adjustOldDeltas&&"mousewheel"===a.type&&b%120===0}var e,f,g=["wheel","mousewheel","DOMMouseScroll","MozMousePixelScroll"],h="onwheel"in document||document.documentMode>=9?["wheel"]:["mousewheel","DomMouseScroll","MozMousePixelScroll"],i=Array.prototype.slice;if(a.event.fixHooks)for(var j=g.length;j;)a.event.fixHooks[g[--j]]=a.event.mouseHooks;var k=a.event.special.mousewheel={version:"3.1.12",setup:function(){if(this.addEventListener)for(var c=h.length;c;)this.addEventListener(h[--c],b,!1);else this.onmousewheel=b;a.data(this,"mousewheel-line-height",k.getLineHeight(this)),a.data(this,"mousewheel-page-height",k.getPageHeight(this))},teardown:function(){if(this.removeEventListener)for(var c=h.length;c;)this.removeEventListener(h[--c],b,!1);else this.onmousewheel=null;a.removeData(this,"mousewheel-line-height"),a.removeData(this,"mousewheel-page-height")},getLineHeight:function(b){var c=a(b),d=c["offsetParent"in a.fn?"offsetParent":"parent"]();return d.length||(d=a("body")),parseInt(d.css("fontSize"),10)||parseInt(c.css("fontSize"),10)||16},getPageHeight:function(b){return a(b).height()},settings:{adjustOldDeltas:!0,normalizeOffset:!0}};a.fn.extend({mousewheel:function(a){return a?this.bind("mousewheel",a):this.trigger("mousewheel")},unmousewheel:function(a){return this.unbind("mousewheel",a)}})}),b.define("jquery.select2",["jquery","jquery-mousewheel","./select2/core","./select2/defaults"],function(a,b,c,d){if(null==a.fn.select2){var e=["open","close","destroy"];a.fn.select2=function(b){if(b=b||{},"object"==typeof b)return this.each(function(){var d=a.extend(!0,{},b);new c(a(this),d)}),this;if("string"==typeof b){var d;return this.each(function(){var c=a(this).data("select2");null==c&&window.console&&console.error&&console.error("The select2('"+b+"') method was called on an element that is not using Select2.");var e=Array.prototype.slice.call(arguments,1);d=c[b].apply(c,e)}),a.inArray(b,e)>-1?this:d}throw new Error("Invalid arguments for Select2: "+b)}}return null==a.fn.select2.defaults&&(a.fn.select2.defaults=d),c}),{define:b.define,require:b.require}}(),c=b.require("jquery.select2");return a.fn.select2.amd=b,c});


/**
 * @name		jQuery Countdown Extend Method
 * @author		Fahid Mohammad
 * @version 	1.0
 * @date		07-11-2014
 */

 
 var flyinCountDown = { 
  timeStamp:null,
  displayElm:null, 
  countDownElm:null, 
  timeLeft:null,
  init:function(args){
    var that = this;
    that.displayElm = args.displayElm;
    that.countDownElm = args.countDownElm;
    if($('#'+that.countDownElm).length>0){
      //Set defaults
      that.timeLeft =  $('#'+that.countDownElm).val();
      var ts = new Date();
      var sec = ts.getSeconds();
      that.timeStamp = ts.setSeconds(sec + parseInt(that.timeLeft)); 
      //load Count Down Module
      that.loadCountDown();
    }
  },
  loadCountDown:function(){
    var that = this;
	countDown.displayItem = $('#'+that.displayElm);
	countDown.startTimer(that.timeLeft, $('#'+that.displayElm),function(){
  	//alert('completed!');
	showSesssionExpiryPopup();
  });
  },  
  destroyCountDown:function(){
	countDown.stopTimer();
  }
};
$(function(){ 
	flyinCountDown.init({countDownElm:'_countDown-Value',displayElm:'countdown'});
});
 
 /*********************************************
 * Hijri - Gregorian Date Picker             *
 *                                           *
 * Design by Rajesh *
 *********************************************/

function Calendar(isHijriMode, firstDayOfWeek, isAutoHide, isAutoSelectedDate, selectedHijriDate, selectedDate, year, month, date) {
	var selHijriDateString = selectedHijriDate.getFullDateString();
	var selectedDateInHijri = selectedHijriDate.getDate()
	if (typeof HijriDate === 'undefined') throw new Error('HijriDate() class is required!');
	isHijriMode = !!isHijriMode;
	firstDayOfWeek = (firstDayOfWeek === undefined) ? 1 : ~~firstDayOfWeek;
	isAutoHide = (isAutoHide === undefined) ? true : !!isAutoHide;
	isAutoSelectedDate = !!isAutoSelectedDate;
	
	var self = this,
		thisDate = isHijriMode ? new HijriDate() : new Date(),
		selectedDate = isHijriMode ? new HijriDate() : new Date(),
		currentYear = thisDate.getFullYear(),
		currentMonth = thisDate.getMonth(),
		currentDate = thisDate.getDate(),
		currentDateString = thisDate.getFullDateString();
		isHidden = true,
		isSettingsHidden = true,
		isExtraButtonsVisible = false,
		isDisableCallback = false,
		displayStyle = 'block',
		hasEventListeners = !!window.addEventListener,
		calendarElement = document.createElement('div'),
		prevMonthElement = document.createElement('div'),
		monthElement = document.createElement('select'),
		nextMonthElement = document.createElement('div'),
		dec100YearElement = document.createElement('div'),
		dec10YearElement = document.createElement('div'),
		prevYearElement = document.createElement('div'),
		yearElement = document.createElement('input'),
		nextYearElement = document.createElement('div'),
		inc10YearElement = document.createElement('div'),
		inc100YearElement = document.createElement('div'),
		showSettingsElement = document.createElement('div'),
		settingsRowElement = document.createElement('div'),
		changeDateModeElement = document.createElement('div'),
		changeFirstDayOfWeekElement = document.createElement('div'),
		changeAutoHideElement = document.createElement('div'),
		changeAutoSelectedDateElement = document.createElement('div'),
		changeExtraButtonsVisibilityElement = document.createElement('div'),
		hideSettingsElement = document.createElement('div'),
		hideCalendarElement = document.createElement('div'),
		weekdayRowElement = document.createElement('div'),
		dateGridElement = document.createElement('div'),
	
	setCalendarDisplay = function() {
		calendarElement.style.display = isHidden ? 'none' : displayStyle;
	},
	
	setShowSettingsAppearance = function() {
		settingsRowElement.style.display = isSettingsHidden ? 'none' : '';
		showSettingsElement.title = (isSettingsHidden ? 'Show' : 'Hide') + ' menu settings bar';
		Calendar.markElement(showSettingsElement, !isSettingsHidden);
	},
	
	setDateModeAppearance = function() {
		changeDateModeElement.title = 'Change to ' + (isHijriMode ? 'Gregorian' : 'Hijri') + ' Calendar';
		Calendar.markElement(changeDateModeElement, isHijriMode);
	},
	
	setFirstDayOfWeekAppearance = function() {
		changeFirstDayOfWeekElement.title = 'Set ' + thisDate.getDayName(firstDayOfWeek ^ 1) + ' as first day of week';
		Calendar.markElement(changeFirstDayOfWeekElement, !!firstDayOfWeek);
	},
	
	setAutoHideAppearance = function() {
		changeAutoHideElement.title = (isAutoHide ? 'Disable' : 'Enable') + ' auto hide calendar on select date';
		Calendar.markElement(changeAutoHideElement, isAutoHide);
		if (isAutoHide && isAutoSelectedDate) {
			isAutoSelectedDate = false;
			setAutoSelectedDateAppearance();
		}
		Calendar.disableElement(changeAutoSelectedDateElement, isAutoHide);
	},
	
	setAutoSelectedDateAppearance = function() {
		changeAutoSelectedDateElement.title = (isAutoSelectedDate ? 'Disable' : 'Enable') + ' auto selected date on change at year or month values';
		Calendar.markElement(changeAutoSelectedDateElement, isAutoSelectedDate);
	},
	
	setExtraButtonsVisibilityAppearance = function() {
		changeExtraButtonsVisibilityElement.title = (isExtraButtonsVisible ? 'Hide' : 'Show') + ' extra buttons to adjust year value';
		Calendar.markElement(changeExtraButtonsVisibilityElement, isExtraButtonsVisible);
		Calendar.revealElement(dec100YearElement, isExtraButtonsVisible);
		Calendar.revealElement(dec10YearElement, isExtraButtonsVisible);
		Calendar.revealElement(inc10YearElement, isExtraButtonsVisible);
		Calendar.revealElement(inc100YearElement, isExtraButtonsVisible);
	},
	
	setDateParams = function(setYear, setMonth, setDate) {
		setYear = Calendar.parseInt(setYear, 1);
		setMonth = Calendar.parseInt(setMonth, 0);
		setDate = Calendar.parseInt(setDate, 1);
		selectedDate.setFullYear(setYear);
		selectedDate.setMonth(setMonth);
		selectedDate.setDate(setDate);
		thisDate.setTime(selectedDate.getTime());
		thisDate.setDate(1);
	},
	
	createCalendar =  function() {
		var header = document.createElement('div');
		calendarElement.classList.add('calendar');
		header.classList.add('header-row');
		prevMonthElement.classList.add('header-button');
		prevMonthElement.classList.add('prev');
		monthElement.classList.add('month-field');
		nextMonthElement.classList.add('header-button');
		nextMonthElement.classList.add('next');
		dec100YearElement.classList.add('header-button');
		dec10YearElement.classList.add('header-button');
		prevYearElement.classList.add('header-button');
		prevYearElement.classList.add('prev');
		yearElement.classList.add('year-field');
		yearElement.setAttribute('type', 'text');
		nextYearElement.classList.add('header-button');
		nextYearElement.classList.add('next');
		inc10YearElement.classList.add('header-button');
		inc100YearElement.classList.add('header-button');
		showSettingsElement.classList.add('header-button');
		settingsRowElement.classList.add('setting-row');
		changeDateModeElement.classList.add('setting-button');
		changeFirstDayOfWeekElement.classList.add('setting-button');
		changeAutoHideElement.classList.add('setting-button');
		changeAutoSelectedDateElement.classList.add('setting-button');
		changeExtraButtonsVisibilityElement.classList.add('setting-button');
		hideSettingsElement.classList.add('setting-button');
		hideCalendarElement.classList.add('setting-button');
		weekdayRowElement.classList.add('weekday-row');
		dateGridElement.classList.add('date-grid');
		prevMonthElement.innerHTML = '-';
		prevMonthElement.title = 'Decrement month value by 1';
		nextMonthElement.innerHTML = '+';
		nextMonthElement.title = 'Increment month value by 1';
		dec100YearElement.innerHTML = 'Â«';
		dec100YearElement.title = 'Decrement year value by 100';
		dec10YearElement.innerHTML = 'â€¹';
		dec10YearElement.title = 'Decrement year value by 10';
		prevYearElement.innerHTML = '-';
		prevYearElement.title = 'Decrement year value by 1';
		nextYearElement.innerHTML = '+';
		nextYearElement.title = 'Increment year value by 1';
		inc10YearElement.innerHTML = 'â€º';
		inc10YearElement.title = 'Increment year value by 10';
		inc100YearElement.innerHTML = 'Â»';
		inc100YearElement.title = 'Increment year value by 100';
		showSettingsElement.innerHTML = '\u2699';
		changeDateModeElement.innerHTML = '\u262a';
		changeFirstDayOfWeekElement.innerHTML = '\u2693';
		changeAutoHideElement.innerHTML = '\u2690';
		changeAutoSelectedDateElement.innerHTML = '\u26cf';
		changeExtraButtonsVisibilityElement.innerHTML = 'Â«Â»';
		hideSettingsElement.innerHTML = '\u2714';
		hideSettingsElement.title = 'Hide menu settings bar';
		hideCalendarElement.innerHTML = '\u2715';
		hideCalendarElement.title = 'Hide calendar';
		setShowSettingsAppearance();
		setDateModeAppearance();
		setFirstDayOfWeekAppearance();
		setAutoSelectedDateAppearance();
		setAutoHideAppearance();
		setExtraButtonsVisibilityAppearance();
		setCalendarDisplay();
		addEvent(prevMonthElement, 'click', onDecrementMonth);
		addEvent(monthElement, 'change', onChangeMonth);
		addEvent(nextMonthElement, 'click', onIncrementMonth);
		addEvent(dec100YearElement, 'click', onDecrement100Year);
		addEvent(dec10YearElement, 'click', onDecrement10Year);
		addEvent(prevYearElement, 'click', onDecrementYear);
		addEvent(yearElement, 'change', onChangeYear);
		addEvent(nextYearElement, 'click', onIncrementYear);
		addEvent(inc10YearElement, 'click', onIncrement10Year);
		addEvent(inc100YearElement, 'click', onIncrement100Year);
		addEvent(showSettingsElement, 'click', onChangeSettingsShow);
		addEvent(changeDateModeElement, 'click', onChangeDateMode);
		addEvent(changeFirstDayOfWeekElement, 'click', onChangeFirstDayOfWeek);
		addEvent(changeAutoHideElement, 'click', onChangeAutoHide);
		addEvent(changeAutoSelectedDateElement, 'click', onChangeAutoSelectedDate);
		addEvent(changeExtraButtonsVisibilityElement, 'click', onChangeExtraButtonsVisibility),
		addEvent(hideSettingsElement, 'click', onChangeSettingsShow);
		addEvent(hideCalendarElement, 'click', onHideCalendar);
		for (var i = 0; i < 12; i++) {
			var opt = document.createElement('option');
			opt.value = i;
			opt.text = thisDate.getMonthName(i);
			monthElement.appendChild(opt);
		}
		header.appendChild(prevMonthElement);
		header.appendChild(monthElement);
		header.appendChild(nextMonthElement);
		header.appendChild(dec100YearElement);
		header.appendChild(dec10YearElement);
		header.appendChild(prevYearElement);
		header.appendChild(yearElement);
		header.appendChild(nextYearElement);
		header.appendChild(inc10YearElement);
		header.appendChild(inc100YearElement);
		header.appendChild(showSettingsElement);
		settingsRowElement.appendChild(changeDateModeElement);
		settingsRowElement.appendChild(changeFirstDayOfWeekElement);
		settingsRowElement.appendChild(changeAutoHideElement);
		settingsRowElement.appendChild(changeAutoSelectedDateElement);
		settingsRowElement.appendChild(changeExtraButtonsVisibilityElement);
		settingsRowElement.appendChild(hideSettingsElement);
		settingsRowElement.appendChild(hideCalendarElement);
		createWeekdayRow();
		calendarElement.appendChild(header);
		calendarElement.appendChild(settingsRowElement);
		calendarElement.appendChild(weekdayRowElement);
		calendarElement.appendChild(dateGridElement);
		createDateGrid();
	},
	
	changeCalendarMode = function() {
		for (var i = 0; i < 12; i++) monthElement.options[i].text = thisDate.getMonthName(i);
		recreateWeekdayRow();
	},
	
	recreateWeekdayRow = function() {
		while (weekdayRowElement.firstChild) weekdayRowElement.removeChild(weekdayRowElement.firstChild);
		createWeekdayRow();
		recreateDateGrid();
	},
	
	createWeekdayRow = function() {
		for (var i = 0; i < 7; i++) {
			var day = document.createElement('div'),
				wd = (i + firstDayOfWeek) % 7,
				cl = wd === 5 ? 'friday-date' : wd === 0 ? 'sunday-date' : 'normal-date';
			day.innerHTML = thisDate.getDayShortName(wd);
			day.classList.add(cl);
			weekdayRowElement.appendChild(day);
		}
	},
	
	recreateDateGrid = function() {
		while (dateGridElement.firstChild) dateGridElement.removeChild(dateGridElement.firstChild);
		createDateGrid();
		scrollToFix();
	},
	
	createDateGrid = function() {
		monthElement.selectedIndex = thisDate.getMonth();
		yearElement.value = thisDate.getFullYear();
		var cdim = thisDate.getDaysInMonth();
		thisDate.setMonth(thisDate.getMonth() - 1);
		var pdim = thisDate.getDaysInMonth();
		thisDate.setMonth(thisDate.getMonth() + 1);
		var fdim = thisDate.getDay(), pxd = fdim - firstDayOfWeek;
		if (pxd < 0) pxd += 7;
		var nxd = (pxd + cdim) % 7;
		if (nxd > 0) nxd = 7 - nxd;
		for (var i = pdim - pxd + 1; i <= pdim; i++) {
			var de = document.createElement('div');
			de.classList.add('excluded-date');
			de.innerHTML = i;
			dateGridElement.appendChild(de);
		}
		var wd, sd;
		
		for (var i = 1; i <= cdim; i++) {
			var de = document.createElement('div');
			de.innerHTML = i;
			wd = (fdim + i - 1) % 7;
			if((selectedDate.getMonth() === selectedHijriDate.getMonth()) && (selectedDate.getFullYear() === selectedHijriDate.getFullYear())){
				if(i>selectedHijriDate.getDate()){
					de.classList.add('normal-date');
					addEvent(de, 'click', onChangeDate);
				}else{
					de.classList.add('excluded-date');
				}
			}else if((selectedDate.getMonth() === selectedHijriDate.getMonth()) && (selectedDate.getFullYear() > selectedHijriDate.getFullYear())){
					de.classList.add('normal-date');
					addEvent(de, 'click', onChangeDate);
			}
			else if(selectedHijriDate.getMonth() === selectedDate.getMonth())de.classList.add('excluded-date');
			//else if((selectedDate.getMonth() < selectedHijriDate.getMonth()) && ((selectedDate.getFullYear() === selectedHijriDate.getFullYear()) || (selectedDate.getFullYear() < selectedHijriDate.getFullYear())))de.classList.add('excluded-date');
			else if(selectedHijriDate.getTime()>selectedDate.getTime())de.classList.add('excluded-date');
			if((selectedHijriDate.getMonth() != selectedDate.getMonth()) && (selectedHijriDate.getTime()<selectedDate.getTime()) && (selectedDate.getFullYear() >= selectedHijriDate.getFullYear())){
				de.classList.add('normal-date');
				addEvent(de, 'click', onChangeDate);
			} 
			if (wd === 5) de.classList.add('friday-date');
			if (wd === 0) de.classList.add('sunday-date');
			if (thisDate.getFullYear() === currentYear && thisDate.getMonth() === currentMonth && i === currentDate ) {
				de.classList.add('normal-date');
				de.classList.add('current-date');
				de.classList.remove('excluded-date');
				addEvent(de, 'click', onChangeDate);
			}
			
			if (thisDate.getFullYear() === selectedDate.getFullYear() && thisDate.getMonth() === selectedDate.getMonth() && i === selectedDate.getDate() && selHijriDateString === selectedDate.getFullDateString()) {
				de.classList.add('selected-date');
				addEvent(de, 'click', onChangeDate);
			}
			sd = (i - 1) * 864e5 + thisDate.getTime(); 
			if (265860e5 <= sd && sd < 266724e5) de.classList.add('specialz-date');
			//addEvent(de, 'click', onChangeDate);
			dateGridElement.appendChild(de);
		}
		for (var i = 1; i <= nxd; i++) {
			var de = document.createElement('div');
			de.classList.add('excluded-date');
			de.innerHTML = i;
			dateGridElement.appendChild(de);
		}
	},
	
	scrollToFix = function() {
		var dw = document.body.offsetWidth,
			vw = window.innerWidth,
			vh = window.innerHeight,
			rect = calendarElement.getBoundingClientRect(),
			hsSpc = dw > vw ? 20 : 0,
			scrollX = rect.left < 0 ? rect.left : 0,
			scrollY = rect.bottom - rect.top > vh ? rect.top : rect.bottom > vh - hsSpc ? rect.bottom - vh + hsSpc : 0;
		window.scrollBy(scrollX, scrollY);
	},
	
	updateCalendar = function() {
		if (isAutoSelectedDate) {
			var dim = thisDate.getDaysInMonth(),
				dt = selectedDate.getDate();
			selectedDate.setTime(thisDate.getTime());
			selectedDate.setDate(dt > dim ? dim : dt);
			recreateDateGrid();
			if (typeof self.callback === 'function' && !isDisableCallback) self.callback();
		}
		else recreateDateGrid();
	},
	
	hideCalendar = function() {
		self.hide();
		if (typeof self.onHide === 'function') self.onHide();
	},
	
	addEvent = function(elm, evt, callback) {
		if (hasEventListeners) elm.addEventListener(evt, callback);
		else elm.attachEvent('on' + evt, callback);
	},
		
	onChangeDate = function(evt) {
		evt = evt || window.event;
		var target = evt.target || evt.srcElement;
		var prevElm = dateGridElement.getElementsByClassName('selected-date')[0];
		if (target !== prevElm) {
			if (!!prevElm) prevElm.classList.remove('selected-date');
			target.classList.add('selected-date');
			selectedDate.setTime(thisDate.getTime());
			selectedDate.setDate(parseInt(target.innerHTML));
		}
		hideCalendar();
		if (typeof self.callback === 'function' && !isDisableCallback) self.callback();
		return returnEvent(evt);
	},
	
	onDecrementMonth = function(evt) {
		evt = evt || window.event;
		thisDate.setMonth(thisDate.getMonth() - 1);
		updateCalendar();
		return returnEvent(evt);
	},
	
	onChangeMonth = function() {
		thisDate.setMonth(parseInt(monthElement.value));
		updateCalendar();
	},
	
	onIncrementMonth = function(evt) {
		evt = evt || window.event;
		thisDate.setMonth(thisDate.getMonth() + 1);
		updateCalendar();
		return returnEvent(evt);
	},
	
	onDecrement100Year = function(evt) {
		evt = evt || window.event;
		thisDate.setFullYear(thisDate.getFullYear() - 100);
		updateCalendar();
		return returnEvent(evt);
	},
	
	onDecrement10Year = function(evt) {
		evt = evt || window.event;
		thisDate.setFullYear(thisDate.getFullYear() - 10);
		updateCalendar();
		return returnEvent(evt);
	},
	
	onDecrementYear = function(evt) {
		evt = evt || window.event;
		thisDate.setFullYear(thisDate.getFullYear() - 1);
		updateCalendar();
		return returnEvent(evt);
	},
	
	onChangeYear = function() {
		var y = parseInt(yearElement.value);
		if (isNaN(y)) {
			yearElement.value = thisDate.getFullYear();
			return;
		}
		if (y != thisDate.getFullYear()) {
			thisDate.setFullYear(y);
			updateCalendar();
		}
	},
	
	onIncrementYear = function(evt) {
		evt = evt || window.event;
		thisDate.setFullYear(thisDate.getFullYear() + 1);
		updateCalendar();
		return returnEvent(evt);
	},
	
	onIncrement10Year = function(evt) {
		evt = evt || window.event;
		thisDate.setFullYear(thisDate.getFullYear() + 10);
		updateCalendar();
		return returnEvent(evt);
	},
	
	onIncrement100Year = function(evt) {
		evt = evt || window.event;
		thisDate.setFullYear(thisDate.getFullYear() + 100);
		updateCalendar();
		return returnEvent(evt);
	},
	
	onChangeSettingsShow = function(evt) {
		evt = evt || window.event;
		isSettingsHidden = !isSettingsHidden;
		setShowSettingsAppearance();
		scrollToFix();
		return returnEvent(evt);
	},
	
	onChangeDateMode = function(evt) {
		evt = evt || window.event;
		self.changeDateMode();
		return returnEvent(evt);
	},
	
	onChangeFirstDayOfWeek = function(evt) {
		evt = evt || window.event;
		self.changeFirstDayOfWeek();
		return returnEvent(evt);
	},
	
	onChangeAutoHide = function(evt) {
		evt = evt || window.event;
		self.changeAutoHide();
		return returnEvent(evt);
	},
	
	onChangeAutoSelectedDate = function(evt) {
		evt = evt || window.event;
		self.changeAutoSelectedDate();
		return returnEvent(evt);
	},
	
	onChangeExtraButtonsVisibility = function(evt) {
		evt = evt || window.event;
		isExtraButtonsVisible = !isExtraButtonsVisible;
		setExtraButtonsVisibilityAppearance();
		return returnEvent(evt);
	},
	
	onHideCalendar = function(evt) {
		evt = evt || window.event;
		hideCalendar();
		return returnEvent(evt);
	},
	
	returnEvent = function(evt) {
		if (evt.stopPropagation) evt.stopPropagation();
		if (evt.preventDefault) evt.preventDefault();
		else {
			evt.returnValue = false;
			return false;
		}
	};
	
	this.setDate = function(setYear, setMonth, setDate) {
		setDateParams(setYear, setMonth, setDate);
		recreateDateGrid();
	};
	
	this.setTime = function(time) {
		selectedDate.setTime(time);
		thisDate.setTime(time);
		thisDate.setDate(1);
		recreateDateGrid();
	};
	
	this.changeDateMode = function() {
		isHijriMode = !isHijriMode;
		thisDate = isHijriMode ? new HijriDate() : new Date();
		currentYear = thisDate.getFullYear();
		currentMonth = thisDate.getMonth();
		currentDate = thisDate.getDate();
		thisDate.setTime(selectedDate.getTime());
		selectedDate = isHijriMode ? new HijriDate(thisDate.getTime()) : new Date(thisDate.getTime());
		thisDate.setDate(1);
		changeCalendarMode();
		setDateModeAppearance();
		setFirstDayOfWeekAppearance();
		if (typeof this.callback === 'function' && !isDisableCallback) this.callback();
	};
	
	this.changeFirstDayOfWeek = function() {
		firstDayOfWeek ^= 1;
		recreateWeekdayRow();
		setFirstDayOfWeekAppearance();
	};
	
	this.changeAutoHide = function() {
		isAutoHide = !isAutoHide;
		setAutoHideAppearance();
	};
	
	this.changeAutoSelectedDate = function() {
		if (isAutoHide) return;
		isAutoSelectedDate = !isAutoSelectedDate;
		setAutoSelectedDateAppearance();
	};
	
	this.getDate = function() {
		return selectedDate;
	};
	
	this.getTime = function() {
		return selectedDate.getTime();
	};
	
	this.isHijriMode = function() {
		return isHijriMode;
	};
	
	this.firstDayOfWeek = function() {
		return firstDayOfWeek;
	};
	
	this.isAutoHide = function() {
		return isAutoHide;
	};
	
	this.isAutoSelectedDate = function() {
		return isAutoSelectedDate;
	};
	
	this.isHidden = function() {
		return isHidden;
	};
	
	this.callback;
	
	this.onHide;
	
	this.disableCallback = function(state) {
		isDisableCallback = !!state;
	};
	
	this.getElement = function() {
		return calendarElement;
	};
	
	this.setDisplayStyle = function(style) {
		displayStyle = style;
		setCalendarDisplay();
	};
	
	this.show = function() {
		if (isHidden) {
			isHidden = false;
			setCalendarDisplay();
			scrollToFix();
		}
	};
	
	this.hide = function() {
		if (!isHidden) {
			if (!isSettingsHidden) {
				isSettingsHidden = true;
				setShowSettingsAppearance();
			}
			isHidden = true;
			setCalendarDisplay();
		}
	};
	
	this.destroy = function() {
		selectedDate = null;
		thisDate = null;
		calendarElement.remove();
		self = null;
	};
	
	if (year !== undefined) setDateParams(year, month, date);
	else {
		thisDate.setTime(selectedDate.getTime());
		thisDate.setDate(1);
	}
	createCalendar();
}

Calendar.parseInt = function(num, def) {
	var res = parseInt(num);
	return isNaN(res) ? def : res;
};

Calendar.markElement = function(target, mode) {
	Calendar.addOrRemoveClass(target, mode, 'active');
};

Calendar.disableElement = function(target, mode) {
	Calendar.addOrRemoveClass(target, mode, 'disabled');
};

Calendar.revealElement = function(target, mode) {
	target.style.visibility = mode ? 'visible' : 'hidden';
};

Calendar.addOrRemoveClass = function(target, addFlag, className) {
	if (addFlag) target.classList.add(className);
	else target.classList.remove(className);
};



 function HijriDate(year, month, date, hour, minute, second, millisecond) {
	var gregDate = new Date(),
		time,
		day,
		timezoneOffset = gregDate.getTimezoneOffset() * 6e4;
	
	if (year === undefined) {
		time = gregDate.getTime() - timezoneOffset;
		updateDate();
	}
	else if (month === undefined) {
		time = HijriDate.parseInt(year, 0) - timezoneOffset;
		updateDate();
	}
	else {
		year = HijriDate.parseInt(year, 1);
		month = HijriDate.parseInt(month, 0);
		date = HijriDate.parseInt(date, 1);
		hour = HijriDate.parseInt(hour, 0);
		minute = HijriDate.parseInt(minute, 0);
		second = HijriDate.parseInt(second, 0);
		millisecond = HijriDate.parseInt(millisecond, 0);
		updateTime();
	}
	
    this.toString = function() {
		return this.getFullDateString();
	};
	
	this.valueOf = function() {
		return time;
	};
	
	this.getDateString = function() {
		return	this.getDayName() + ', ' +
				date + ' ' +
				this.getMonthName() + ' ' +
				this.getFullYearString();
	};
	
	this.getTimeString = function() {
		return	HijriDate.toDigit(hour, 2) + ':' +
				HijriDate.toDigit(minute, 2) + ':' +
				HijriDate.toDigit(second, 2) + '.' +
				HijriDate.toDigit(millisecond, 3);
	};
	
	this.getFullDateString = function() {
		return this.getDateString() + ' ' + this.getTimeString();
	};
	
	this.getTime = function() {
		return time + timezoneOffset;
	};
	
	this.getFullYear = function() {
		return year;
	};
	
	this.getFullYearString = function() {
		return (year > 0) ? HijriDate.toDigit(year, 4) + " H" : HijriDate.toDigit(Math.abs(year - 1), 4) + " BH";
	};
	
	this.getMonth = function() {
		return month;
	};
	
	this.getMonthName = function(mon) {
		return HijriDate.monthNames[(mon === undefined) ? month : parseInt(mon)];
	};
	
	this.getMonthShortName = function(mon) {
		return HijriDate.monthShortNames[(mon === undefined) ? month : parseInt(mon)];
	};
	
	this.getDate = function() {
		return date;
	};
	
	this.getHours = function() {
		return hour;
	};
	
	this.getMinutes = function() {
		return minute;
	};
	
	this.getSeconds = function() {
		return second;
	};
	
	this.getMilliseconds = function() {
		return millisecond;
	};
	
	this.getDay = function() {
		return day;
	};
	
	this.getDayName = function(dy) {
		return HijriDate.weekdayNames[(dy === undefined) ? day : parseInt(dy)];
	};
	
	this.getDayShortName = function(dy) {
		return HijriDate.weekdayShortNames[(dy === undefined) ? day : parseInt(dy)];
	};
	
	this.getDaysInMonth = function() {
		return HijriDate.daysInMonth((year - 1) * 12 + month);
	};
	
	this.getJavaWeekday = function() {
		return this.getGregorianDate().getJavaWeekday();
	};
	
	this.getJavaWeekdayName = function(dy) {
		return this.getGregorianDate().getJavaWeekdayName(dy);
	};
	
	this.getGregorianDate = function() {
		gregDate.setTime(time + timezoneOffset);
		return gregDate;
	};
	
	this.setTime = function(tm) {
		time = parseInt(tm) - timezoneOffset;
		updateDate();
	};
	
	this.setFullYear = function(yr) {
		year = parseInt(yr);
		updateTime();
	};
	
	this.setMonth = function(mon) {
		month = parseInt(mon);
		updateTime();
	};
	
	this.setDate = function(dt) {
		date = parseInt(dt);
		updateTime();
	};
	
	this.setHours = function(hr) {
		hour = parseInt(hr);
		updateTime();
	};
	
	this.setMinutes = function(min) {
		minute = parseInt(min);
		updateTime();
	};
	
	this.setSeconds = function(sec) {
		second = parseInt(sec);
		updateTime();
	};
	
	this.setMilliseconds = function(ms) {
		millisecond = parseInt(ms);
		updateTime();
	};
	
	function updateDate() {
		var tm = time - HijriDate.constInterval,
			range;
		month = parseInt(parseInt((tm / 864e5)) / HijriDate.moonCycle);
		month = (tm >= 0) ? month : --month;
		date = HijriDate.daysCount(month) * 864e5;
		tm = (tm >= 0) ? tm - date : date + tm;
		millisecond = tm % 1e3;
		tm = parseInt(tm / 1e3);
		second = tm % 60;
		tm = parseInt(tm / 60);
		minute  = tm % 60;
		tm = parseInt(tm / 60);
		hour = tm % 24;
		tm = parseInt(tm / 24);
		date = tm;
		range = HijriDate.daysInMonth(month);
		if (date >= range) {
			month++;
			date -= range;
		}
		date++;
		year = Math.floor(month / 12) + 1;
		month = (month >= 0) ? month % 12 : (month % 12 === 0) ? 0 : 12 + month % 12;
		day = Math.floor(time / 864e5);
		day = (day + 4) % 7;
		day = (day < 0) ? day + 7 : day;
	}
	
	function updateTime() {
		var months = (year - 1) * 12 + month;
		time = (months >= 0) ? HijriDate.daysCount(months) : -HijriDate.daysCount(months);
		time += date;
		time *= 864e5;
		time += hour * 36e5 + minute * 6e4 + second * 1e3 + millisecond - 864e5;
		time += HijriDate.constInterval;
		updateDate();
	}
}

HijriDate.moonCycle = 29.5305882;

HijriDate.constInterval = -42521608800000; // -42521587200000;
	// value of time interval in milliseconds
	// from July 18, 622AD 06:00 PM to January 1, 1970AD, 00:00 AM

HijriDate.monthNames = ["Muharram", "Safar", "Rabi' al-Awwal", "Rabi' al-Thani", "Jumada al-Ula", "Jumada al-Alkhirah",
					   "Rajab", "Shaâ€™ban", "Ramadhan", "Shawwal", "Thul-Qiâ€™dah", "Thul-Hijjah"];
if ($('html').hasClass('arabic')) {
HijriDate.monthNames = ["\u0645\u062D\u0631\u0645", "\u0635\u0641\u0631", "\u0631\u0628\u064A\u0639 \u0627\u0644\u0623\u0648\u0644", "\u0631\u0628\u064A\u0639 \u0627\u0644\u062B\u0627\u0646\u064A", "\u062C\u0645\u0627\u062F\u0649 \u0627\u0644\u0623\u0648\u0644\u0649", "\u062C\u0645\u0627\u062F\u0649 \u0627\u0644\u0622\u062E\u0631\u0629",
					   "\u0631\u062C\u0628", "\u0634\u0639\u0628\u0627\u0646", "\u0631\u0645\u0636\u0627\u0646", "\u0634\u0648\u0627\u0644", "\u0630\u0648 \u0627\u0644\u0642\u0639\u062F\u0629", "\u0630\u0648 \u0627\u0644\u062D\u062C\u0629"];
}
HijriDate.monthShortNames = ['Muh', 'Saf', 'RAw', 'RAk', 'JAw', 'JAk', 'Raj', 'Sha', 'Ram', 'Sya', 'DhQ', 'DhH'];

HijriDate.weekdayNames = ["Ahad", "Ithnin", "Thulatha", "Arba'a", "Khams", "Jumu'ah", "Sabt"];

HijriDate.weekdayShortNames = ['Ahd', 'Ith', 'Thu', 'Arb', 'Kha', 'Jum', 'Sab'];
					   
HijriDate.toDigit = function(num, digit) {
	var ns = num.toString();
	if (ns.length > digit) return ns;
	return ('00000000' + ns).slice(-digit);
}

HijriDate.daysInMonth = function(month) {
	return (month >= 0) ? HijriDate.daysCount(month + 1) - HijriDate.daysCount(month) : HijriDate.daysCount(month) - HijriDate.daysCount(month + 1);
}

HijriDate.daysCount = function(month) {
	if (month >= 0) return parseInt(month * HijriDate.moonCycle);
	var times = (parseInt(-month / 30601) + 1) * 30601;
	return parseInt(times * HijriDate.moonCycle) - parseInt((times + month) * HijriDate.moonCycle);
}

HijriDate.parseInt = function(num, def) {
	var res = parseInt(num);
	return isNaN(res) ? def : res;
}

Date.monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];

Date.monthShortNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];

Date.weekdayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday' ];

Date.weekdayShortNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];

Date.javaWeekdayNames = ['Legi', 'Pahing', 'Pon', 'Wage', 'Kliwon'];

Date.prototype.getHijriDate = function() {
	return new HijriDate(this.getTime());
};

Date.prototype.getDaysInMonth = function() {
	var y = this.getFullYear(),
		isLeapYear = (y % 100 !== 0) && (y % 4 === 0) || (y % 400 === 0),
		daysInMonth = [31, isLeapYear ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
	return daysInMonth[this.getMonth()];
};

Date.prototype.getMonthName = function(month) {
	return Date.monthNames[(month === undefined) ? this.getMonth() : parseInt(month)];
};

Date.prototype.getMonthShortName = function(month) {
	return Date.monthShortNames[(month === undefined) ? this.getMonth() : parseInt(month)];
};

Date.prototype.getDayName = function(day) {
	return Date.weekdayNames[(day === undefined) ? this.getDay() : parseInt(day)];
};

Date.prototype.getDayShortName = function(day) {
	return Date.weekdayShortNames[(day === undefined) ? this.getDay() : parseInt(day)];
};

Date.prototype.getJavaWeekday = function() {
	var day = (this.getTime() - this.getTimezoneOffset() * 6e4) / 864e5;
	day = Math.floor(day);
	day = (day + 3) % 5;
	return (day < 0) ? day + 5 : day;
};

Date.prototype.getJavaWeekdayName = function(day) {
	return Date.javaWeekdayNames[(day === undefined) ? this.getJavaWeekday() : parseInt(day)];
};

Date.prototype.getFullYearString = function() {
	var y = this.getFullYear();
	return (y > 0) ? HijriDate.toDigit(y, 4) + " AD" : HijriDate.toDigit(Math.abs(y - 1), 4) + " BC";
};

Date.prototype.getDateString = function() {
	return	this.getDayName() + ', ' +
			this.getMonthName() + ' ' +
			this.getDate() + ', ' +
			this.getFullYearString();
};

Date.prototype.getTimeString = function() {
	return	HijriDate.toDigit(this.getHours(), 2) + ':' +
			HijriDate.toDigit(this.getMinutes(), 2) + ':' +
			HijriDate.toDigit(this.getSeconds(), 2) + '.' +
			HijriDate.toDigit(this.getMilliseconds(), 3);
};

Date.prototype.getFullDateString = function() {
	return this.getDateString() + ' ' + this.getTimeString();
};


/**
 * JS Console Fallback fix for non supported browser
 */
 !function(){for(var e,n=function(){},o=["assert","clear","count","debug","dir","dirxml","error","exception","group","groupCollapsed","groupEnd","info","log","markTimeline","profile","profileEnd","table","time","timeEnd","timeline","timelineEnd","timeStamp","trace","warn"],i=o.length,r=window.console=window.console||{};i--;)e=o[i],r[e]||(r[e]=n)}();
/*!
 * https://github.com/es-shims/es5-shim
 * @license es5-shim Copyright 2009-2015 by contributors, MIT License
 * see https://github.com/es-shims/es5-shim/blob/v4.5.7/LICENSE
 */
(function(t,r){"use strict";if(typeof define==="function"&&define.amd){define(r)}else if(typeof exports==="object"){module.exports=r()}else{t.returnExports=r()}})(this,function(){var t=Array;var r=t.prototype;var e=Object;var n=e.prototype;var i=Function;var a=i.prototype;var o=String;var f=o.prototype;var u=Number;var l=u.prototype;var s=r.slice;var c=r.splice;var v=r.push;var h=r.unshift;var p=r.concat;var y=r.join;var d=a.call;var g=a.apply;var w=Math.max;var b=Math.min;var T=n.toString;var m=typeof Symbol==="function"&&typeof Symbol.toStringTag==="symbol";var D;var x=Function.prototype.toString,S=/^\s*class /,O=function isES6ClassFn(t){try{var r=x.call(t);var e=r.replace(/\/\/.*\n/g,"");var n=e.replace(/\/\*[.\s\S]*\*\//g,"");var i=n.replace(/\n/gm," ").replace(/ {2}/g," ");return S.test(i)}catch(a){return false}},E=function tryFunctionObject(t){try{if(O(t)){return false}x.call(t);return true}catch(r){return false}},j="[object Function]",I="[object GeneratorFunction]",D=function isCallable(t){if(!t){return false}if(typeof t!=="function"&&typeof t!=="object"){return false}if(m){return E(t)}if(O(t)){return false}var r=T.call(t);return r===j||r===I};var M;var U=RegExp.prototype.exec,F=function tryRegexExec(t){try{U.call(t);return true}catch(r){return false}},N="[object RegExp]";M=function isRegex(t){if(typeof t!=="object"){return false}return m?F(t):T.call(t)===N};var C;var k=String.prototype.valueOf,R=function tryStringObject(t){try{k.call(t);return true}catch(r){return false}},A="[object String]";C=function isString(t){if(typeof t==="string"){return true}if(typeof t!=="object"){return false}return m?R(t):T.call(t)===A};var P=e.defineProperty&&function(){try{var t={};e.defineProperty(t,"x",{enumerable:false,value:t});for(var r in t){return false}return t.x===t}catch(n){return false}}();var $=function(t){var r;if(P){r=function(t,r,n,i){if(!i&&r in t){return}e.defineProperty(t,r,{configurable:true,enumerable:false,writable:true,value:n})}}else{r=function(t,r,e,n){if(!n&&r in t){return}t[r]=e}}return function defineProperties(e,n,i){for(var a in n){if(t.call(n,a)){r(e,a,n[a],i)}}}}(n.hasOwnProperty);var J=function isPrimitive(t){var r=typeof t;return t===null||r!=="object"&&r!=="function"};var Y=u.isNaN||function(t){return t!==t};var Z={ToInteger:function ToInteger(t){var r=+t;if(Y(r)){r=0}else if(r!==0&&r!==1/0&&r!==-(1/0)){r=(r>0||-1)*Math.floor(Math.abs(r))}return r},ToPrimitive:function ToPrimitive(t){var r,e,n;if(J(t)){return t}e=t.valueOf;if(D(e)){r=e.call(t);if(J(r)){return r}}n=t.toString;if(D(n)){r=n.call(t);if(J(r)){return r}}throw new TypeError},ToObject:function(t){if(t==null){throw new TypeError("can't convert "+t+" to object")}return e(t)},ToUint32:function ToUint32(t){return t>>>0}};var z=function Empty(){};$(a,{bind:function bind(t){var r=this;if(!D(r)){throw new TypeError("Function.prototype.bind called on incompatible "+r)}var n=s.call(arguments,1);var a;var o=function(){if(this instanceof a){var i=g.call(r,this,p.call(n,s.call(arguments)));if(e(i)===i){return i}return this}else{return g.call(r,t,p.call(n,s.call(arguments)))}};var f=w(0,r.length-n.length);var u=[];for(var l=0;l<f;l++){v.call(u,"$"+l)}a=i("binder","return function ("+y.call(u,",")+"){ return binder.apply(this, arguments); }")(o);if(r.prototype){z.prototype=r.prototype;a.prototype=new z;z.prototype=null}return a}});var G=d.bind(n.hasOwnProperty);var B=d.bind(n.toString);var H=d.bind(s);var W=g.bind(s);var L=d.bind(f.slice);var X=d.bind(f.split);var q=d.bind(f.indexOf);var K=d.bind(v);var Q=d.bind(n.propertyIsEnumerable);var V=d.bind(r.sort);var _=t.isArray||function isArray(t){return B(t)==="[object Array]"};var tt=[].unshift(0)!==1;$(r,{unshift:function(){h.apply(this,arguments);return this.length}},tt);$(t,{isArray:_});var rt=e("a");var et=rt[0]!=="a"||!(0 in rt);var nt=function properlyBoxed(t){var r=true;var e=true;var n=false;if(t){try{t.call("foo",function(t,e,n){if(typeof n!=="object"){r=false}});t.call([1],function(){"use strict";e=typeof this==="string"},"x")}catch(i){n=true}}return!!t&&!n&&r&&e};$(r,{forEach:function forEach(t){var r=Z.ToObject(this);var e=et&&C(this)?X(this,""):r;var n=-1;var i=Z.ToUint32(e.length);var a;if(arguments.length>1){a=arguments[1]}if(!D(t)){throw new TypeError("Array.prototype.forEach callback must be a function")}while(++n<i){if(n in e){if(typeof a==="undefined"){t(e[n],n,r)}else{t.call(a,e[n],n,r)}}}}},!nt(r.forEach));$(r,{map:function map(r){var e=Z.ToObject(this);var n=et&&C(this)?X(this,""):e;var i=Z.ToUint32(n.length);var a=t(i);var o;if(arguments.length>1){o=arguments[1]}if(!D(r)){throw new TypeError("Array.prototype.map callback must be a function")}for(var f=0;f<i;f++){if(f in n){if(typeof o==="undefined"){a[f]=r(n[f],f,e)}else{a[f]=r.call(o,n[f],f,e)}}}return a}},!nt(r.map));$(r,{filter:function filter(t){var r=Z.ToObject(this);var e=et&&C(this)?X(this,""):r;var n=Z.ToUint32(e.length);var i=[];var a;var o;if(arguments.length>1){o=arguments[1]}if(!D(t)){throw new TypeError("Array.prototype.filter callback must be a function")}for(var f=0;f<n;f++){if(f in e){a=e[f];if(typeof o==="undefined"?t(a,f,r):t.call(o,a,f,r)){K(i,a)}}}return i}},!nt(r.filter));$(r,{every:function every(t){var r=Z.ToObject(this);var e=et&&C(this)?X(this,""):r;var n=Z.ToUint32(e.length);var i;if(arguments.length>1){i=arguments[1]}if(!D(t)){throw new TypeError("Array.prototype.every callback must be a function")}for(var a=0;a<n;a++){if(a in e&&!(typeof i==="undefined"?t(e[a],a,r):t.call(i,e[a],a,r))){return false}}return true}},!nt(r.every));$(r,{some:function some(t){var r=Z.ToObject(this);var e=et&&C(this)?X(this,""):r;var n=Z.ToUint32(e.length);var i;if(arguments.length>1){i=arguments[1]}if(!D(t)){throw new TypeError("Array.prototype.some callback must be a function")}for(var a=0;a<n;a++){if(a in e&&(typeof i==="undefined"?t(e[a],a,r):t.call(i,e[a],a,r))){return true}}return false}},!nt(r.some));var it=false;if(r.reduce){it=typeof r.reduce.call("es5",function(t,r,e,n){return n})==="object"}$(r,{reduce:function reduce(t){var r=Z.ToObject(this);var e=et&&C(this)?X(this,""):r;var n=Z.ToUint32(e.length);if(!D(t)){throw new TypeError("Array.prototype.reduce callback must be a function")}if(n===0&&arguments.length===1){throw new TypeError("reduce of empty array with no initial value")}var i=0;var a;if(arguments.length>=2){a=arguments[1]}else{do{if(i in e){a=e[i++];break}if(++i>=n){throw new TypeError("reduce of empty array with no initial value")}}while(true)}for(;i<n;i++){if(i in e){a=t(a,e[i],i,r)}}return a}},!it);var at=false;if(r.reduceRight){at=typeof r.reduceRight.call("es5",function(t,r,e,n){return n})==="object"}$(r,{reduceRight:function reduceRight(t){var r=Z.ToObject(this);var e=et&&C(this)?X(this,""):r;var n=Z.ToUint32(e.length);if(!D(t)){throw new TypeError("Array.prototype.reduceRight callback must be a function")}if(n===0&&arguments.length===1){throw new TypeError("reduceRight of empty array with no initial value")}var i;var a=n-1;if(arguments.length>=2){i=arguments[1]}else{do{if(a in e){i=e[a--];break}if(--a<0){throw new TypeError("reduceRight of empty array with no initial value")}}while(true)}if(a<0){return i}do{if(a in e){i=t(i,e[a],a,r)}}while(a--);return i}},!at);var ot=r.indexOf&&[0,1].indexOf(1,2)!==-1;$(r,{indexOf:function indexOf(t){var r=et&&C(this)?X(this,""):Z.ToObject(this);var e=Z.ToUint32(r.length);if(e===0){return-1}var n=0;if(arguments.length>1){n=Z.ToInteger(arguments[1])}n=n>=0?n:w(0,e+n);for(;n<e;n++){if(n in r&&r[n]===t){return n}}return-1}},ot);var ft=r.lastIndexOf&&[0,1].lastIndexOf(0,-3)!==-1;$(r,{lastIndexOf:function lastIndexOf(t){var r=et&&C(this)?X(this,""):Z.ToObject(this);var e=Z.ToUint32(r.length);if(e===0){return-1}var n=e-1;if(arguments.length>1){n=b(n,Z.ToInteger(arguments[1]))}n=n>=0?n:e-Math.abs(n);for(;n>=0;n--){if(n in r&&t===r[n]){return n}}return-1}},ft);var ut=function(){var t=[1,2];var r=t.splice();return t.length===2&&_(r)&&r.length===0}();$(r,{splice:function splice(t,r){if(arguments.length===0){return[]}else{return c.apply(this,arguments)}}},!ut);var lt=function(){var t={};r.splice.call(t,0,0,1);return t.length===1}();$(r,{splice:function splice(t,r){if(arguments.length===0){return[]}var e=arguments;this.length=w(Z.ToInteger(this.length),0);if(arguments.length>0&&typeof r!=="number"){e=H(arguments);if(e.length<2){K(e,this.length-t)}else{e[1]=Z.ToInteger(r)}}return c.apply(this,e)}},!lt);var st=function(){var r=new t(1e5);r[8]="x";r.splice(1,1);return r.indexOf("x")===7}();var ct=function(){var t=256;var r=[];r[t]="a";r.splice(t+1,0,"b");return r[t]==="a"}();$(r,{splice:function splice(t,r){var e=Z.ToObject(this);var n=[];var i=Z.ToUint32(e.length);var a=Z.ToInteger(t);var f=a<0?w(i+a,0):b(a,i);var u=b(w(Z.ToInteger(r),0),i-f);var l=0;var s;while(l<u){s=o(f+l);if(G(e,s)){n[l]=e[s]}l+=1}var c=H(arguments,2);var v=c.length;var h;if(v<u){l=f;var p=i-u;while(l<p){s=o(l+u);h=o(l+v);if(G(e,s)){e[h]=e[s]}else{delete e[h]}l+=1}l=i;var y=i-u+v;while(l>y){delete e[l-1];l-=1}}else if(v>u){l=i-u;while(l>f){s=o(l+u-1);h=o(l+v-1);if(G(e,s)){e[h]=e[s]}else{delete e[h]}l-=1}}l=f;for(var d=0;d<c.length;++d){e[l]=c[d];l+=1}e.length=i-u+v;return n}},!st||!ct);var vt=r.join;var ht;try{ht=Array.prototype.join.call("123",",")!=="1,2,3"}catch(pt){ht=true}if(ht){$(r,{join:function join(t){var r=typeof t==="undefined"?",":t;return vt.call(C(this)?X(this,""):this,r)}},ht)}var yt=[1,2].join(undefined)!=="1,2";if(yt){$(r,{join:function join(t){var r=typeof t==="undefined"?",":t;return vt.call(this,r)}},yt)}var dt=function push(t){var r=Z.ToObject(this);var e=Z.ToUint32(r.length);var n=0;while(n<arguments.length){r[e+n]=arguments[n];n+=1}r.length=e+n;return e+n};var gt=function(){var t={};var r=Array.prototype.push.call(t,undefined);return r!==1||t.length!==1||typeof t[0]!=="undefined"||!G(t,0)}();$(r,{push:function push(t){if(_(this)){return v.apply(this,arguments)}return dt.apply(this,arguments)}},gt);var wt=function(){var t=[];var r=t.push(undefined);return r!==1||t.length!==1||typeof t[0]!=="undefined"||!G(t,0)}();$(r,{push:dt},wt);$(r,{slice:function(t,r){var e=C(this)?X(this,""):this;return W(e,arguments)}},et);var bt=function(){try{[1,2].sort(null);[1,2].sort({});return true}catch(t){}return false}();var Tt=function(){try{[1,2].sort(/a/);return false}catch(t){}return true}();var mt=function(){try{[1,2].sort(undefined);return true}catch(t){}return false}();$(r,{sort:function sort(t){if(typeof t==="undefined"){return V(this)}if(!D(t)){throw new TypeError("Array.prototype.sort callback must be a function")}return V(this,t)}},bt||!mt||!Tt);var Dt=!{toString:null}.propertyIsEnumerable("toString");var xt=function(){}.propertyIsEnumerable("prototype");var St=!G("x","0");var Ot=function(t){var r=t.constructor;return r&&r.prototype===t};var Et={$window:true,$console:true,$parent:true,$self:true,$frame:true,$frames:true,$frameElement:true,$webkitIndexedDB:true,$webkitStorageInfo:true,$external:true};var jt=function(){if(typeof window==="undefined"){return false}for(var t in window){try{if(!Et["$"+t]&&G(window,t)&&window[t]!==null&&typeof window[t]==="object"){Ot(window[t])}}catch(r){return true}}return false}();var It=function(t){if(typeof window==="undefined"||!jt){return Ot(t)}try{return Ot(t)}catch(r){return false}};var Mt=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"];var Ut=Mt.length;var Ft=function isArguments(t){return B(t)==="[object Arguments]"};var Nt=function isArguments(t){return t!==null&&typeof t==="object"&&typeof t.length==="number"&&t.length>=0&&!_(t)&&D(t.callee)};var Ct=Ft(arguments)?Ft:Nt;$(e,{keys:function keys(t){var r=D(t);var e=Ct(t);var n=t!==null&&typeof t==="object";var i=n&&C(t);if(!n&&!r&&!e){throw new TypeError("Object.keys called on a non-object")}var a=[];var f=xt&&r;if(i&&St||e){for(var u=0;u<t.length;++u){K(a,o(u))}}if(!e){for(var l in t){if(!(f&&l==="prototype")&&G(t,l)){K(a,o(l))}}}if(Dt){var s=It(t);for(var c=0;c<Ut;c++){var v=Mt[c];if(!(s&&v==="constructor")&&G(t,v)){K(a,v)}}}return a}});var kt=e.keys&&function(){return e.keys(arguments).length===2}(1,2);var Rt=e.keys&&function(){var t=e.keys(arguments);return arguments.length!==1||t.length!==1||t[0]!==1}(1);var At=e.keys;$(e,{keys:function keys(t){if(Ct(t)){return At(H(t))}else{return At(t)}}},!kt||Rt);var Pt=new Date(-0xc782b5b342b24).getUTCMonth()!==0;var $t=new Date(-0x55d318d56a724);var Jt=new Date(14496624e5);var Yt=$t.toUTCString()!=="Mon, 01 Jan -45875 11:59:59 GMT";var Zt;var zt;var Gt=$t.getTimezoneOffset();if(Gt<-720){Zt=$t.toDateString()!=="Tue Jan 02 -45875";zt=!/^Thu Dec 10 2015 \d\d:\d\d:\d\d GMT[-\+]\d\d\d\d(?: |$)/.test(Jt.toString())}else{Zt=$t.toDateString()!=="Mon Jan 01 -45875";zt=!/^Wed Dec 09 2015 \d\d:\d\d:\d\d GMT[-\+]\d\d\d\d(?: |$)/.test(Jt.toString())}var Bt=d.bind(Date.prototype.getFullYear);var Ht=d.bind(Date.prototype.getMonth);var Wt=d.bind(Date.prototype.getDate);var Lt=d.bind(Date.prototype.getUTCFullYear);var Xt=d.bind(Date.prototype.getUTCMonth);var qt=d.bind(Date.prototype.getUTCDate);var Kt=d.bind(Date.prototype.getUTCDay);var Qt=d.bind(Date.prototype.getUTCHours);var Vt=d.bind(Date.prototype.getUTCMinutes);var _t=d.bind(Date.prototype.getUTCSeconds);var tr=d.bind(Date.prototype.getUTCMilliseconds);var rr=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"];var er=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];var nr=function daysInMonth(t,r){return Wt(new Date(r,t,0))};$(Date.prototype,{getFullYear:function getFullYear(){if(!this||!(this instanceof Date)){throw new TypeError("this is not a Date object.")}var t=Bt(this);if(t<0&&Ht(this)>11){return t+1}return t},getMonth:function getMonth(){if(!this||!(this instanceof Date)){throw new TypeError("this is not a Date object.")}var t=Bt(this);var r=Ht(this);if(t<0&&r>11){return 0}return r},getDate:function getDate(){if(!this||!(this instanceof Date)){throw new TypeError("this is not a Date object.")}var t=Bt(this);var r=Ht(this);var e=Wt(this);if(t<0&&r>11){if(r===12){return e}var n=nr(0,t+1);return n-e+1}return e},getUTCFullYear:function getUTCFullYear(){if(!this||!(this instanceof Date)){throw new TypeError("this is not a Date object.")}var t=Lt(this);if(t<0&&Xt(this)>11){return t+1}return t},getUTCMonth:function getUTCMonth(){if(!this||!(this instanceof Date)){throw new TypeError("this is not a Date object.")}var t=Lt(this);var r=Xt(this);if(t<0&&r>11){return 0}return r},getUTCDate:function getUTCDate(){if(!this||!(this instanceof Date)){throw new TypeError("this is not a Date object.")}var t=Lt(this);var r=Xt(this);var e=qt(this);if(t<0&&r>11){if(r===12){return e}var n=nr(0,t+1);return n-e+1}return e}},Pt);$(Date.prototype,{toUTCString:function toUTCString(){if(!this||!(this instanceof Date)){throw new TypeError("this is not a Date object.")}var t=Kt(this);var r=qt(this);var e=Xt(this);var n=Lt(this);var i=Qt(this);var a=Vt(this);var o=_t(this);return rr[t]+", "+(r<10?"0"+r:r)+" "+er[e]+" "+n+" "+(i<10?"0"+i:i)+":"+(a<10?"0"+a:a)+":"+(o<10?"0"+o:o)+" GMT"}},Pt||Yt);$(Date.prototype,{toDateString:function toDateString(){if(!this||!(this instanceof Date)){throw new TypeError("this is not a Date object.")}var t=this.getDay();var r=this.getDate();var e=this.getMonth();var n=this.getFullYear();return rr[t]+" "+er[e]+" "+(r<10?"0"+r:r)+" "+n}},Pt||Zt);if(Pt||zt){Date.prototype.toString=function toString(){if(!this||!(this instanceof Date)){throw new TypeError("this is not a Date object.")}var t=this.getDay();var r=this.getDate();var e=this.getMonth();var n=this.getFullYear();var i=this.getHours();var a=this.getMinutes();var o=this.getSeconds();var f=this.getTimezoneOffset();var u=Math.floor(Math.abs(f)/60);var l=Math.floor(Math.abs(f)%60);return rr[t]+" "+er[e]+" "+(r<10?"0"+r:r)+" "+n+" "+(i<10?"0"+i:i)+":"+(a<10?"0"+a:a)+":"+(o<10?"0"+o:o)+" GMT"+(f>0?"-":"+")+(u<10?"0"+u:u)+(l<10?"0"+l:l)};if(P){e.defineProperty(Date.prototype,"toString",{configurable:true,enumerable:false,writable:true})}}var ir=-621987552e5;var ar="-000001";var or=Date.prototype.toISOString&&new Date(ir).toISOString().indexOf(ar)===-1;var fr=Date.prototype.toISOString&&new Date(-1).toISOString()!=="1969-12-31T23:59:59.999Z";var ur=d.bind(Date.prototype.getTime);$(Date.prototype,{toISOString:function toISOString(){if(!isFinite(this)||!isFinite(ur(this))){throw new RangeError("Date.prototype.toISOString called on non-finite value.")}var t=Lt(this);var r=Xt(this);t+=Math.floor(r/12);r=(r%12+12)%12;var e=[r+1,qt(this),Qt(this),Vt(this),_t(this)];t=(t<0?"-":t>9999?"+":"")+L("00000"+Math.abs(t),0<=t&&t<=9999?-4:-6);for(var n=0;n<e.length;++n){e[n]=L("00"+e[n],-2)}return t+"-"+H(e,0,2).join("-")+"T"+H(e,2).join(":")+"."+L("000"+tr(this),-3)+"Z"}},or||fr);var lr=function(){try{return Date.prototype.toJSON&&new Date(NaN).toJSON()===null&&new Date(ir).toJSON().indexOf(ar)!==-1&&Date.prototype.toJSON.call({toISOString:function(){return true}})}catch(t){return false}}();if(!lr){Date.prototype.toJSON=function toJSON(t){var r=e(this);var n=Z.ToPrimitive(r);if(typeof n==="number"&&!isFinite(n)){return null}var i=r.toISOString;if(!D(i)){throw new TypeError("toISOString property is not callable")}return i.call(r)}}var sr=Date.parse("+033658-09-27T01:46:40.000Z")===1e15;var cr=!isNaN(Date.parse("2012-04-04T24:00:00.500Z"))||!isNaN(Date.parse("2012-11-31T23:59:59.000Z"))||!isNaN(Date.parse("2012-12-31T23:59:60.000Z"));var vr=isNaN(Date.parse("2000-01-01T00:00:00.000Z"));if(vr||cr||!sr){var hr=Math.pow(2,31)-1;var pr=Y(new Date(1970,0,1,0,0,0,hr+1).getTime());Date=function(t){var r=function Date(e,n,i,a,f,u,l){var s=arguments.length;var c;if(this instanceof t){var v=u;var h=l;if(pr&&s>=7&&l>hr){var p=Math.floor(l/hr)*hr;var y=Math.floor(p/1e3);v+=y;h-=y*1e3}c=s===1&&o(e)===e?new t(r.parse(e)):s>=7?new t(e,n,i,a,f,v,h):s>=6?new t(e,n,i,a,f,v):s>=5?new t(e,n,i,a,f):s>=4?new t(e,n,i,a):s>=3?new t(e,n,i):s>=2?new t(e,n):s>=1?new t(e instanceof t?+e:e):new t}else{c=t.apply(this,arguments)}if(!J(c)){$(c,{constructor:r},true)}return c};var e=new RegExp("^"+"(\\d{4}|[+-]\\d{6})"+"(?:-(\\d{2})"+"(?:-(\\d{2})"+"(?:"+"T(\\d{2})"+":(\\d{2})"+"(?:"+":(\\d{2})"+"(?:(\\.\\d{1,}))?"+")?"+"("+"Z|"+"(?:"+"([-+])"+"(\\d{2})"+":(\\d{2})"+")"+")?)?)?)?"+"$");var n=[0,31,59,90,120,151,181,212,243,273,304,334,365];var i=function dayFromMonth(t,r){var e=r>1?1:0;return n[r]+Math.floor((t-1969+e)/4)-Math.floor((t-1901+e)/100)+Math.floor((t-1601+e)/400)+365*(t-1970)};var a=function toUTC(r){var e=0;var n=r;if(pr&&n>hr){var i=Math.floor(n/hr)*hr;var a=Math.floor(i/1e3);e+=a;n-=a*1e3}return u(new t(1970,0,1,0,0,e,n))};for(var f in t){if(G(t,f)){r[f]=t[f]}}$(r,{now:t.now,UTC:t.UTC},true);r.prototype=t.prototype;$(r.prototype,{constructor:r},true);var l=function parse(r){var n=e.exec(r);if(n){var o=u(n[1]),f=u(n[2]||1)-1,l=u(n[3]||1)-1,s=u(n[4]||0),c=u(n[5]||0),v=u(n[6]||0),h=Math.floor(u(n[7]||0)*1e3),p=Boolean(n[4]&&!n[8]),y=n[9]==="-"?1:-1,d=u(n[10]||0),g=u(n[11]||0),w;var b=c>0||v>0||h>0;if(s<(b?24:25)&&c<60&&v<60&&h<1e3&&f>-1&&f<12&&d<24&&g<60&&l>-1&&l<i(o,f+1)-i(o,f)){w=((i(o,f)+l)*24+s+d*y)*60;w=((w+c+g*y)*60+v)*1e3+h;if(p){w=a(w)}if(-864e13<=w&&w<=864e13){return w}}return NaN}return t.parse.apply(this,arguments)};$(r,{parse:l});return r}(Date)}if(!Date.now){Date.now=function now(){return(new Date).getTime()}}var yr=l.toFixed&&(8e-5.toFixed(3)!=="0.000"||.9.toFixed(0)!=="1"||1.255.toFixed(2)!=="1.25"||0xde0b6b3a7640080.toFixed(0)!=="1000000000000000128");var dr={base:1e7,size:6,data:[0,0,0,0,0,0],multiply:function multiply(t,r){var e=-1;var n=r;while(++e<dr.size){n+=t*dr.data[e];dr.data[e]=n%dr.base;n=Math.floor(n/dr.base)}},divide:function divide(t){var r=dr.size;var e=0;while(--r>=0){e+=dr.data[r];dr.data[r]=Math.floor(e/t);e=e%t*dr.base}},numToString:function numToString(){var t=dr.size;var r="";while(--t>=0){if(r!==""||t===0||dr.data[t]!==0){var e=o(dr.data[t]);if(r===""){r=e}else{r+=L("0000000",0,7-e.length)+e}}}return r},pow:function pow(t,r,e){return r===0?e:r%2===1?pow(t,r-1,e*t):pow(t*t,r/2,e)},log:function log(t){var r=0;var e=t;while(e>=4096){r+=12;e/=4096}while(e>=2){r+=1;e/=2}return r}};var gr=function toFixed(t){var r,e,n,i,a,f,l,s;r=u(t);r=Y(r)?0:Math.floor(r);if(r<0||r>20){throw new RangeError("Number.toFixed called with invalid number of decimals")}e=u(this);if(Y(e)){return"NaN"}if(e<=-1e21||e>=1e21){return o(e)}n="";if(e<0){n="-";e=-e}i="0";if(e>1e-21){a=dr.log(e*dr.pow(2,69,1))-69;f=a<0?e*dr.pow(2,-a,1):e/dr.pow(2,a,1);f*=4503599627370496;a=52-a;if(a>0){dr.multiply(0,f);l=r;while(l>=7){dr.multiply(1e7,0);l-=7}dr.multiply(dr.pow(10,l,1),0);l=a-1;while(l>=23){dr.divide(1<<23);l-=23}dr.divide(1<<l);dr.multiply(1,1);dr.divide(2);i=dr.numToString()}else{dr.multiply(0,f);dr.multiply(1<<-a,0);i=dr.numToString()+L("0.00000000000000000000",2,2+r)}}if(r>0){s=i.length;if(s<=r){i=n+L("0.0000000000000000000",0,r-s+2)+i}else{i=n+L(i,0,s-r)+"."+L(i,s-r)}}else{i=n+i}return i};$(l,{toFixed:gr},yr);var wr=function(){try{return 1..toPrecision(undefined)==="1"}catch(t){return true}}();var br=l.toPrecision;$(l,{toPrecision:function toPrecision(t){return typeof t==="undefined"?br.call(this):br.call(this,t)}},wr);if("ab".split(/(?:ab)*/).length!==2||".".split(/(.?)(.?)/).length!==4||"tesst".split(/(s)*/)[1]==="t"||"test".split(/(?:)/,-1).length!==4||"".split(/.?/).length||".".split(/()()/).length>1){(function(){var t=typeof/()??/.exec("")[1]==="undefined";var r=Math.pow(2,32)-1;f.split=function(e,n){var i=String(this);if(typeof e==="undefined"&&n===0){return[]}if(!M(e)){return X(this,e,n)}var a=[];var o=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),f=0,u,l,s,c;var h=new RegExp(e.source,o+"g");if(!t){u=new RegExp("^"+h.source+"$(?!\\s)",o)}var p=typeof n==="undefined"?r:Z.ToUint32(n);l=h.exec(i);while(l){s=l.index+l[0].length;if(s>f){K(a,L(i,f,l.index));if(!t&&l.length>1){l[0].replace(u,function(){for(var t=1;t<arguments.length-2;t++){if(typeof arguments[t]==="undefined"){l[t]=void 0}}})}if(l.length>1&&l.index<i.length){v.apply(a,H(l,1))}c=l[0].length;f=s;if(a.length>=p){break}}if(h.lastIndex===l.index){h.lastIndex++}l=h.exec(i)}if(f===i.length){if(c||!h.test("")){K(a,"")}}else{K(a,L(i,f))}return a.length>p?H(a,0,p):a}})()}else if("0".split(void 0,0).length){f.split=function split(t,r){if(typeof t==="undefined"&&r===0){return[]}return X(this,t,r)}}var Tr=f.replace;var mr=function(){var t=[];"x".replace(/x(.)?/g,function(r,e){K(t,e)});return t.length===1&&typeof t[0]==="undefined"}();if(!mr){f.replace=function replace(t,r){var e=D(r);var n=M(t)&&/\)[*?]/.test(t.source);if(!e||!n){return Tr.call(this,t,r)}else{var i=function(e){var n=arguments.length;var i=t.lastIndex;t.lastIndex=0;var a=t.exec(e)||[];t.lastIndex=i;K(a,arguments[n-2],arguments[n-1]);return r.apply(this,a)};return Tr.call(this,t,i)}}}var Dr=f.substr;var xr="".substr&&"0b".substr(-1)!=="b";$(f,{substr:function substr(t,r){var e=t;if(t<0){e=w(this.length+t,0)}return Dr.call(this,e,r)}},xr);var Sr="	\n\x0B\f\r \xa0\u1680\u180e\u2000\u2001\u2002\u2003"+"\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028"+"\u2029\ufeff";var Or="\u200b";var Er="["+Sr+"]";var jr=new RegExp("^"+Er+Er+"*");var Ir=new RegExp(Er+Er+"*$");var Mr=f.trim&&(Sr.trim()||!Or.trim());$(f,{trim:function trim(){if(typeof this==="undefined"||this===null){throw new TypeError("can't convert "+this+" to object")}return o(this).replace(jr,"").replace(Ir,"")}},Mr);var Ur=d.bind(String.prototype.trim);var Fr=f.lastIndexOf&&"abc\u3042\u3044".lastIndexOf("\u3042\u3044",2)!==-1;$(f,{lastIndexOf:function lastIndexOf(t){if(typeof this==="undefined"||this===null){throw new TypeError("can't convert "+this+" to object")}var r=o(this);var e=o(t);var n=arguments.length>1?u(arguments[1]):NaN;var i=Y(n)?Infinity:Z.ToInteger(n);var a=b(w(i,0),r.length);var f=e.length;var l=a+f;while(l>0){l=w(0,l-f);var s=q(L(r,l,a+f),e);if(s!==-1){return l+s}}return-1}},Fr);var Nr=f.lastIndexOf;$(f,{lastIndexOf:function lastIndexOf(t){return Nr.apply(this,arguments)}},f.lastIndexOf.length!==1);if(parseInt(Sr+"08")!==8||parseInt(Sr+"0x16")!==22){parseInt=function(t){var r=/^[\-+]?0[xX]/;return function parseInt(e,n){var i=Ur(e);var a=u(n)||(r.test(i)?16:10);return t(i,a)}}(parseInt)}if(1/parseFloat("-0")!==-Infinity){parseFloat=function(t){return function parseFloat(r){var e=Ur(r);var n=t(e);return n===0&&L(e,0,1)==="-"?-0:n}}(parseFloat)}if(String(new RangeError("test"))!=="RangeError: test"){var Cr=function toString(){if(typeof this==="undefined"||this===null){throw new TypeError("can't convert "+this+" to object")}var t=this.name;if(typeof t==="undefined"){t="Error"}else if(typeof t!=="string"){t=o(t)}var r=this.message;if(typeof r==="undefined"){r=""}else if(typeof r!=="string"){r=o(r)}if(!t){return r}if(!r){return t}return t+": "+r};Error.prototype.toString=Cr}if(P){var kr=function(t,r){if(Q(t,r)){var e=Object.getOwnPropertyDescriptor(t,r);e.enumerable=false;Object.defineProperty(t,r,e)}};kr(Error.prototype,"message");if(Error.prototype.message!==""){Error.prototype.message=""}kr(Error.prototype,"name")}if(String(/a/gim)!=="/a/gim"){var Rr=function toString(){var t="/"+this.source+"/";if(this.global){t+="g"}if(this.ignoreCase){t+="i"}if(this.multiline){t+="m"}return t};RegExp.prototype.toString=Rr}});
//# sourceMappingURL=es5-shim.map



/*!
 * jQuery Custom Select Plugin - Master Source
 * 2014-02-06
 *
 * http://www.blissmedia.com.au/
 *
 * Copyright 2013 Bliss Media
 * Released under the MIT license:
 *   http://www.opensource.org/licenses/mit-license.php
 */

;(function($) {
  $.fn.customselect = function(method, value) {

    // Default Options
    var $options  = {
      "csclass":      "cSel",  // Class to match
      "search":       true,             // Is searchable?
      "numitems":     4,                // Number of results per page
      "searchblank":  false,            // Search blank value options?
      "showblank":    true,             // Show blank value options?
      "searchvalue":  false,            // Search option values?
      "hoveropen":    false,            // Open the select on hover?
      "emptytext":    "",               // Change empty option text to a set value
      "showdisabled": false,            // Show disabled options
      "mobilecheck":  function() {      // Mobile check function / boolean
        return navigator.platform && navigator.userAgent.match(/(android|iphone|ipad|blackberry)/i);
      }
    };

    // Check for Additional Options
    if(method && typeof method == "object") {
      $.extend($options, method);
    }

    // Mobile check
    var $is_mobile = typeof $options.mobilecheck == "function" ? $options.mobilecheck.call() : $options.mobilecheck;

    // Select validation
    var items = $is_mobile ? $(this).filter("select") : $(this).filter("select:not([multiple])");

    // Customselect control
    items.each(function() {

      // Original Select
      var $select   = $(this);

      // Preset Options
      if($select.data("cs-options")) {
        $.extend($options, $select.data("cs-options"));
      }

      // Custom Select Container
      var $this     = $select.parents($options.selector+":first");

      var methods   = {
        init: function() {
          // Initital Setup
          var setup = {
            init: function() {
              // Create Elements + Events
              setup.container();
              setup.value();
              setup.subcontainer();
            },

            container: function() {
              $this = $("<div/>").addClass($options.csclass);
              if($is_mobile) {
                $this.addClass($options.csclass + "-mobile");
                $select.css("opacity", 0);
              }

              // Selector Container
              $select.before($this);
              $select.appendTo($this);
              $select.off("change", setup._onchange).change(setup._onchange);

              // Standard Events
              var hover_timeout = null;
              $this.hover(function() {
                if(hover_timeout) clearTimeout(hover_timeout);
                $this.addClass($options.csclass+"-hover");
              }, function() {
                if($options.hoveropen) hover_timeout = setTimeout(methods.close, 750);
                $this.removeClass($options.csclass+"-hover");
              });

              $(document).mouseup(function() {
                if(!$this.is($options.selector+"-hover")) methods.close();
                else $this.find("input").focus();
              });
            },

            value: function() {
              var value = $("<a href='#'><span class='_cdd'/></a>").appendTo($this);
              $select.appendTo($this);

              value.click(function(e) { e.preventDefault(); })
                    .focus(function() { $this.addClass($options.csclass+"-focus"); })
                    .blur(function() { $this.removeClass($options.csclass+"-focus"); });

              var txt   = $select.find("option:selected").text();
              value.find("span").html(txt.length > 0 ? txt : $options.emptytext);

              if($options.hoveropen) {
                value.mouseover(methods.open);
              }
              else {
                value.click(methods.toggle);
              }
            },

            subcontainer: function() {
              // Container
              var subcont = $("<div/>").appendTo($this);
              // Input Box
			  var input   = $("<input type='input' placeholder='"+i18n.t('typeHere')+"' />").appendTo(subcont);
              input.keyup(function(e) {
                if($.inArray(e.which, [13,38,40])<0) {
                  if($options.search) {
                    methods.search($(this).val());
                  }
                  else {
                    methods.searchmove($(this).val());
                    $(this).val("");
                  }
                }
              }).keydown(function(e) {
                switch(e.which) {
                  case 13: // Enter
                    val       = $this.find("ul li.active.option-hover").data("value");
                    disabled  = $this.find("ul li.active.option-hover").is(".option-disabled");
                    methods.select(val, disabled);
                  break;
                  case 38: // Up
                    methods.selectUp();
                  break;
                  case 40: // Down
                    methods.selectDown();
                  break;
                  case 27: // Esc
                    methods.close();
                  break;
                  default:
                    return true;
                  break;
                }

                e.preventDefault();
                return false;
              }).blur(function() { $(this).val(""); });
              if(!$options.search) {
                input.addClass($options.csclass+"-hidden-input");
              }

              // Scrolling Container
              var scroll  = $("<div/>").appendTo(subcont);

              // Selectable Items
              var select  = $("<ul/>").appendTo(scroll);
			  console.log(select);
              $select.find("option").each(function(i) {
                var val       = $(this).attr("value");
				var tcVal	  = $(this).attr("data-topCntry");
                var txt       = $(this).text();
                var disabled  = $(this).is(":disabled");
				if((val == 'Top Countries') && ($options.showdisabled || !disabled)){
					$("<li/>", {
                    'class':      'active'
                                    + ' option-disabled',
                    'data-value': val,
					
                    'text':       txt.length > 0 ? txt : $options.emptytext
                  }).appendTo(select);
				}
				if((val == 'Other Countries') && ($options.showdisabled || !disabled)){
					$("<li/>", {
                    'class':      'active'
                                    + ' option-disabled',
                    'data-value': val,
					
                    'text':       txt.length > 0 ? txt : $options.emptytext
                  }).appendTo(select);
				}
				if((val != 'Other Countries' && val != 'Top Countries')){
                if(($options.showblank || val.length > 0) && ($options.showdisabled || !disabled)){
                  $("<li/>", {
                    'class':      'active'
                                    + (i==0 ? ' option-hover' : '')
                                    + ($(this).is(":disabled") ? ' option-disabled' : ''),
                    'data-value': val,
					'data-topCntry': tcVal,
					'data-cName' : txt.length > 0 ? txt : $options.emptytext,
                    'text':       txt.length > 0 ? txt : $options.emptytext
                  }).appendTo(select);
                }
			  }
              });
              var options = select.find("li");
              select.find("li").click(function() {
                methods.select($(this).data("value"), $(this).is(".option-disabled"));
              });

              $this.find("div div").css({
                "overflow-y": options.length > $options.numitems ? "scroll" : "visible"
              });

              $("<li/>", {
                'class':  'no-results',
                'text':   'No Results'
              }).appendTo(select);
            },

            // Catch select change event and apply to customselect
            _onchange: function() {
              $select.val($(this).val());
              methods.select($(this).val());
            }
          };

          if($select.is("select"+$options.selector) && !$select.data("cs-options")) {
            setup.init();
          }
        },

        // Open/Close Select Box
        toggle: function() {
          if($this.is($options.selector+"-open")) {
            methods.close();
          }
          else {
            methods.open();
          }
        },

        // Open Select Box
        open: function() {
          if(!$is_mobile) {
            $this.addClass($options.csclass+"-open");
            $this.find("input").focus();
            $this.find("ul li.no-results").hide();
            methods._selectMove($select.get(0).selectedIndex)
          }
        },

        // Close Select Box
        close: function() {
          $this.removeClass($options.csclass+"-open");
          $this.find("input").val("").blur();
          $this.find("ul li").not(".no-results").addClass("active");

          var options = $this.find("ul li").not(".no-results");
          $this.find("div div").css({
            "overflow-y": options.length > $options.numitems ? "scroll" : "visible"
          });
        },

        // Search Options
        search: function(value) {
          value = $.trim(value.toLowerCase());

          var noresults = $this.find("ul li.no-results").hide();

          // Search for Match
          var options = $this.find("ul li").not(".no-results");
          options.each(function() {
            var text = ($(this).text()+"").toLowerCase();
            var val  = ($(this).data("value")+"").toLowerCase();
            var add  = false;

            if($options.searchblank || val.length > 0) {
              if($options.searchvalue && val.indexOf(value) >= 0) {
                add = true;
              }
              else if(text.indexOf(value) >= 0) {
                add = true;
              }
            }
            else if(value.length == 0) {
              add = true;
            }

            add ? $(this).addClass("active") : $(this).removeClass("active");
          });
          options = options.filter(".active").filter(":visible");

          // Set Scroll
          $this.find("div div").css({
            "overflow-y": options.length > $options.numitems ? "scroll" : "visible"
          });

          if(options.length > 0) {
            // Select First Result
            methods._selectMove(0);
          }
          else {
            // No Results
            noresults.show();
          }
        },

        searchmove: function(value) {
          var index = [];
          $select.find("option").each(function(i) {
            if($(this).text().toLowerCase().indexOf(value.toLowerCase()) == 0) {
              index.push(i);
            }
          });

          if(index.length > 0) {
            methods._selectMove(index[0]);
          }
        },

        // Select Option
        select: function(value, disabled) {
          if(!disabled) {
            if($select.val() != value) {
              $select.val(value).change();
            }
            var txt = $select.find("option:selected").text();
			console.log(txt);
            $this.find("a span").text(txt.length > 0 ? txt : $options.emptytext);
            methods.close();
          }
        },

        // Move Selection Up
        selectUp: function() {
          var options   = $this.find("ul li.active").not(".no-results");
          var selected  = options.index(options.filter(".option-hover"));

          var moveTo = selected - 1;
          moveTo = moveTo < 0 ? options.length - 1 : moveTo;

          methods._selectMove(moveTo);
        },

        // Move Selection Down
        selectDown: function() {
          var options   = $this.find("ul li.active").not(".no-results");
          var selected  = options.index(options.filter(".option-hover"));

          var moveTo = selected + 1;
          moveTo = moveTo > options.length - 1 ? 0 : moveTo;

          methods._selectMove(moveTo);
        },

        // Destroy customselect instance
        destroy: function() {
          if($select.data("cs-options")) {
            $select.removeData("cs-options").insertAfter($this);
            $this.remove();
          }
        },

        // Move Selection to Index
        _selectMove: function(index) {
          var options   = $this.find("ul li.active");
          options.removeClass("option-hover").eq(index).addClass("option-hover");

          var scroll = $this.find("div div");
          if(scroll.css("overflow-y") == "scroll") {
            scroll.scrollTop(0);

            var selected = options.eq(index);
            offset = selected.offset().top + selected.outerHeight() - scroll.offset().top - scroll.height();

            if(offset > 0) {
              scroll.scrollTop(offset);
            }
          }
        }
      };

      var call_method = method;

      // Check for Additional Options
      if(call_method && typeof call_method == "object") {
        call_method = "init";
        value       = null;
      }

      $options.selector = "."+$options.csclass;

      // Load Requested Method
      call_method = call_method ? call_method : "init";
      if(typeof methods[call_method] == "function") {
        methods[call_method].call(this, value);
      }

      if(call_method != "destroy") {
        $select.data("cs-options", $options);
      }
    });

    return this;
  };
})(jQuery);


/*var userTrackerModule = {
  buildClickEvent:function(){
    var elm = $('[data-tracker]').map(function(k,v){
      var OCElm = $(v).attr('onclick');
      if(OCElm !== undefined && OCElm.lastIndexOf(';')===-1){
    	  OCElm = OCElm.trim()+";";
      }
      var tracker = $(v).attr('data-tracker');
      var FOCElm;
      if(tracker.indexOf('_')===0){
    	  //console.log("tracker.length::::"+tracker.length);
    	  tracker = tracker.substring(1,tracker.length);
    	  FOCElm = 'saveGuestTrack("'+tracker+'");'+((OCElm === undefined)?"":OCElm);    	  
      }
      else FOCElm = ((OCElm === undefined)?"":OCElm)+ 'saveGuestTrack("'+tracker+'");';
      $(v).attr('onclick',FOCElm);
    });
  },
  init:function(){
    this.buildClickEvent();
  }
};
userTrackerModule.init();*/


/**
 *@description Flyin offer Widget Module
 *@author Fahid Mohammad
 */
 var offerWidgetFlyin = {
	 init:function(){
		 var _self = this;
		$(document).ready(function(){
			_self.getOffers();
		}); 
	 },
	 getOffers:function(){
		var reqData = {
			apikey:'6imBu6eTCP56XK5793Nrdhtu7Tgoq1t1',
			uri:window.location.href
		}
		$.post('/api/generic/getOffers',reqData,function(response){	
			console.log("offers===== data::",response);
			if(response.status !="Error" && response.data.length>0){
				var bannerHTML = [];
				waitForElement('.alhAdblock',function(){
					var container = $('.alhAdblock');
					container.empty();
					var index = 1;
					response.data.map(function(v){
						if(v.displayOffer.indexOf(response.page)!==-1 && index<=2){
							if(response.page == "homepage")
								bannerHTML.push('<div class="item"><div class="fAd"><a href="/offers/'+v.url+'"><img src="'+v.offerBannerImg+'"></a></div></div>');
							else{
								bannerHTML.push('<div class="fAd"><a href="/offers/'+v.url+'"><img src="'+v.offerBannerImg+'"></a></div>')
							}
						}
						index++;
					});
					if(bannerHTML.length>1){
						container.append(bannerHTML.join(' ').replace(/class="fAd"/g,'class="hAd"'));
					}else{
						container.append(bannerHTML.join(' '));
					}
					
				});
				waitForElement('.dp-opt.tDeals',function(){
					var dealContainer = $('.dp-opt.tDeals').find('ul.tDealsList');
					var dCount = $('.dp-opt.tDeals').find('span.dCount');
					var dCountNumber = $('.dp-opt.tDeals .dInfo span');
					//dCountNumber.text(response.data.length);
					//var fElm = '<li>'+dealContainer.find('li')[0].innerHTML+'</li>';
					dealContainer.empty();
					var count=0;
					//dealContainer.append(fElm);
					//dCount.text(response.data.length);
					response.data.map(function(v){
						for(var i in v.displayOffer){											
							if(response.page==v.displayOffer[i]){
						dealContainer.append('<li><a href="/offers/'+v.url+'">'+v.name+'</a></li>');	
						count++;
							}						
						}
					});	
					dCountNumber.text(count);
					dCount.text(count);
					$('.dp-opt.tDeals').show();
					$('li.tDeals').css('display','inline-block');
				});
			}
		});
	 }
 }
 
offerWidgetFlyin.init();
 function inputConsole(data){
	 data =data.replace('REPORTSTATUS=','')+'|'+new Date();
	  if($('#inputConsole').length>0){
	    $('#inputConsole').val(data);
	   }else{
	    $('body').append('<input type="hidden" name="inputConsole" id="inputConsole" value="'+data+'" />');
	   }
	 }

/*
 * JavaScript Templates 1.0.0
 * https://github.com/fahidmohammad/hudge
 *
 * Copyright 2015, Fahid Mohammad
 * http://fahidmohammad.in
 *
 * Licensed under the MIT license:
 * http://www.opensource.org/licenses/MIT
 *
 */

(function ($) {
    "use strict";
    var tmpl = function (str, data) {
        var f = !/[^\w\-\.:]/.test(str) ? tmpl.cache[str] = tmpl.cache[str] ||
                tmpl(tmpl.load(str)) :
                    new Function(
                        tmpl.arg + ',tmpl',
                        "var _e=tmpl.encode" + tmpl.helper + ",_s='" +
                            str.replace(tmpl.regexp, tmpl.func) +
                            "';return _s;"
                    );
        return data ? f(data, tmpl) : function (data) {
            return f(data, tmpl);
        };
    };
    tmpl.cache = {};
    tmpl.load = function (id) {
        return document.getElementById(id).innerHTML;
    };
    tmpl.regexp = /([\s'\\])(?!(?:[^{]|\{(?!%))*%\})|(?:\{%(=|#)([\s\S]+?)%\})|(\{%)|(%\})/g;
    tmpl.func = function (s, p1, p2, p3, p4, p5) {
        if (p1) { // whitespace, quote and backspace in HTML context
            return {
                "\n": "\\n",
                "\r": "\\r",
                "\t": "\\t",
                " " : " "
            }[p1] || "\\" + p1;
        }
        if (p2) { // interpolation: {%=prop%}, or unescaped: {%#prop%}
            if (p2 === "=") {
                return "'+_e(" + p3 + ")+'";
            }
            return "'+(" + p3 + "==null?'':" + p3 + ")+'";
        }
        if (p4) { // evaluation start tag: {%
            return "';";
        }
        if (p5) { // evaluation end tag: %}
            return "_s+='";
        }
    };
    tmpl.encReg = /[<>&"'\x00]/g;
    tmpl.encMap = {
        "<"   : "&lt;",
        ">"   : "&gt;",
        "&"   : "&amp;",
        "\""  : "&quot;",
        "'"   : "&#39;"
    };
    tmpl.encode = function (s) {
        /*jshint eqnull:true */
        return (s == null ? "" : "" + s).replace(
            tmpl.encReg,
            function (c) {
                return tmpl.encMap[c] || "";
            }
        );
    };
    tmpl.arg = "o";
    tmpl.helper = ",print=function(s,e){_s+=e?(s==null?'':s):_e(s);}" +
        ",include=function(s,d){_s+=tmpl(s,d);}";
    if (typeof define === "function" && define.amd) {
        define(function () {
            return tmpl;
        });
    } else {
        $.tmpl = tmpl;
    }
}(this));

/**
 * This jQuery plugin displays pagination links inside the selected elements.
 *
 * @author Gabriel Birke (birke *at* d-scribe *dot* de)
 * @version 1.2
 * @param {int} maxentries Number of entries to paginate
 * @param {Object} opts Several options (see README for documentation)
 * @return {Object} jQuery Object
 */
$.fn.pagination = function(maxentries, opts,dataObject){
	opts = $.extend({
		items_per_page:10,
		num_display_entries:10,
		current_page:0,
		num_edge_entries:0,
		link_to:"#",
		prev_text:"Prev",
		next_text:"Next",
		ellipse_text:"...",
		prev_show_always:true,
		next_show_always:true,
		callback:function(){return false;}
	},opts||{});
	
	return this.each(function() {
		/**
		 * Calculate the maximum number of pages
		 */
		function numPages() {
			return Math.ceil(maxentries/opts.items_per_page);
		}		
		/**
		 * Calculate start and end point of pagination links depending on 
		 * current_page and num_display_entries.
		 * @return {Array}
		 */
		function getInterval()  {
			var ne_half = Math.ceil(opts.num_display_entries/2);
			var np = numPages();
			var upper_limit = np-opts.num_display_entries;
			var start = current_page>ne_half?Math.max(Math.min(current_page-ne_half, upper_limit), 0):0;
			var end = current_page>ne_half?Math.min(current_page+ne_half, np):Math.min(opts.num_display_entries, np);
			return [start,end];
		}		
		/**
		 * This is the event handling function for the pagination links. 
		 * @param {int} page_id The new page number
		 */
		function pageSelected(page_id, evt){
			current_page = page_id;
			drawLinks();
			var continuePropagation = opts.callback(page_id,dataObject);
			if (!continuePropagation) {
				if (evt.stopPropagation) {
					evt.stopPropagation();
				}
				else {
					evt.cancelBubble = true;
				}
			}
			return continuePropagation;
		}
		
		/**
		 * This function inserts the pagination links into the container element
		 */
		function drawLinks() {
			panel.empty();
			var interval = getInterval();
			var np = numPages();
			//remove pagination if the page number is equal to 1
			if(np!=1){
				// This helper function returns a handler function that calls pageSelected with the right page_id
				var getClickHandler = function(page_id) {
					return function(evt){ return pageSelected(page_id,dataObject); }
				}
				// Helper function for generating a single link (or a span tag if it's the current page)
				var appendItem = function(page_id, appendopts){
					page_id = page_id<0?0:(page_id<np?page_id:np-1); // Normalize page id to sane value
					appendopts = $.extend({text:page_id+1, classes:""}, appendopts||{});
					if(page_id == current_page){
						var lnk = $("<a class='active'>"+(appendopts.text)+"</a>");
					}
					else
					{
						var lnk = $("<a>"+(appendopts.text)+"</a>")
							.bind("click", getClickHandler(page_id))
							.attr('href', opts.link_to.replace(/__id__/,page_id));
					}
					if(appendopts.classes){lnk.addClass(appendopts.classes);}
					panel.append(lnk);
				}
				// Generate "Previous"-Link
				if(opts.prev_text && (current_page > 0 || opts.prev_show_always)){
					appendItem(current_page-1,{text:opts.prev_text, classes:"prev"});
				}
				// Generate starting points
				if (interval[0] > 0 && opts.num_edge_entries > 0)
				{
					var end = Math.min(opts.num_edge_entries, interval[0]);
					for(var i=0; i<end; i++) {
						appendItem(i);
					}
					if(opts.num_edge_entries < interval[0] && opts.ellipse_text)
					{
						$("<a>"+opts.ellipse_text+"</a>").appendTo(panel);
					}
				}
				// Generate interval links
				for(var i=interval[0]; i<interval[1]; i++) {
					appendItem(i);
				}
				// Generate ending points
				if (interval[1] < np && opts.num_edge_entries > 0)
				{
					if(np-opts.num_edge_entries > interval[1]&& opts.ellipse_text)
					{
						$("<a>"+opts.ellipse_text+"</a>").appendTo(panel);
					}
					var begin = Math.max(np-opts.num_edge_entries, interval[1]);
					for(var i=begin; i<np; i++) {
						appendItem(i);
					}
					
				}
				// Generate "Next"-Link
				if(opts.next_text && (current_page < np-1 || opts.next_show_always)){
					appendItem(current_page+1,{text:opts.next_text, classes:"next"});
				}
			}
		}		
		// Extract current_page from options
		var current_page = opts.current_page;
		// Create a sane value for maxentries and items_per_page
		maxentries = (!maxentries || maxentries < 0)?1:maxentries;
		opts.items_per_page = (!opts.items_per_page || opts.items_per_page < 0)?1:opts.items_per_page;
		// Store DOM element for easy access from all inner functions
		var panel = $(this);
		// Attach control functions to the DOM element 
		this.selectPage = function(page_id){ pageSelected(page_id);}
		this.prevPage = function(){ 
			if (current_page > 0) {
				pageSelected(current_page - 1);
				return true;
			}
			else {
				return false;
			}
		}
		this.nextPage = function(){ 
			if(current_page < numPages()-1) {
				pageSelected(current_page+1);
				return true;
			}
			else {
				return false;
			}
		}
		// When all initialisation is done, draw the links
		drawLinks();
        // call callback function
        opts.callback(current_page,dataObject);
	});
};



/**
 *@description Qitaf Loyality Module 
 *@author Fahid Mohammad
 *@date 14-May-2016
 *@email fahid@flyin.com
 */
(function() {   
  this.QitafService = {
    mobileElm:null,
    genOtpBtn:null,
    amount:null,
    pin:null,
    redeemPointBtn:null,
    reGenerateOTP:null,
    earnGenOtpBtn:null,
    earnMobileNum:null,
    earnMessage:null,
    pid:null,
    product:null,
    optPhone:null,
    optEPhone:null,
    optForm:null,
    messageContainer:null,
    redeemContainer:null,
    successClass:null,
    errorClass:null,
    reversalPointBtn:null,
    init:function(config){
      this.elementBinding(config);
    },
    initReversal:function(config)
    {
    	this.elementBindingReversal(config);
    },
    elementBinding:function(args){
      /**
     *Common Element/Data
     */
      //Set production id element
    	//console.log('args');console.log(args);
    	//console.log(document.getElementById(args.product));
      this.pid = document.getElementById(args.pid);
      this.product = document.getElementById(args.product);
      this.messageContainer = document.getElementById(args.messageContainer);
      this.redeemContainer = document.getElementById(args.redeemContainer);
      this.successClass = args.successClass;
      this.errorClass = args.errorClass;
      /**
     *Generate OTP Element
     */
      //Set mobile number element
      this.mobileElm = document.getElementById(args.mobileElm);
      //Set generate opt button element
      this.genOtpBtn = document.getElementById(args.genOtpBtn);
      //Set generate opt container element
      this.optPhone = document.getElementsByClassName(args.optPhone);
      /**
     *Redeem Element
     */
      //Set amount element
      this.amount = document.getElementById(args.amount);
      //Set pin element
      this.pin = document.getElementById(args.pin);     
      //Set redeem button element
      this.redeemPointBtn = document.getElementById(args.redeemPointBtn);
      //Set reGenerate OTP button element
      this.reGenerateOTP = document.getElementById(args.reGenerateOTP);   
      //Set Earn Generate OTP button element
      this.earnGenOtpBtn = document.getElementById(args.earnGenOtpBtn); 
      //Set Earn mobile number element
      this.earnMobileNum = document.getElementById(args.earnMobileNum); 
	  //Set Earn messages element
      this.earnMessage = document.getElementById(args.earnMessage);	 
        //Set Earn Phone element
      this.optEPhone = document.getElementsByClassName(args.optEPhone);
      //Set redeem container element
      this.optForm = document.getElementsByClassName(args.optForm);

      //Bind click action event.
      this.eventBinding();
    },
    elementBindingReversal:function(args)
    {
    	this.pid = document.getElementById(args.pid);
    	this.reversePointBtn = document.getElementById(args.reversePointBtn);
    	this.eventBinding();
    },
    getMobileNumber:function(){
      return this.mobileElm.value || null;
    },
    getEarnMobileNumber:function(){
        return this.earnMobileNum.value || null;
    },
    getAmount:function(){
      return this.amount.value || null;
    },
    getPin:function(){
      return this.pin.value || null;
    },
    getProductId:function(){
    	
    			return this.pid.getAttribute('data-pid') || null;
    	
    },
    getProduct:function(){
    	
		return this.product.getAttribute('data-product') || null;

    },
	validateQitafPhoneNumber:function(_mobileNo){
	 //var _mobileNo = $('#QITAF_MOBILE_NO');	 
	 if(_mobileNo=="" || _mobileNo==null){
		 growl_alert(i18n.t('errMobNum'));
		 $('.qitafBtn').removeClass('LoadBtn');
		 $('.qitafPhNo').focus();
		 return false;
	 }
	 var len = _mobileNo.length;
	 if(_mobileNo!="" && len<9){
		 growl_alert(i18n.t('validmobile'));
		 $('.qitafBtn').removeClass('LoadBtn');
		 $('.qitafPhNo').focus();
		 return false;
	 }
	 var fchar=_mobileNo.charAt(0);
	 var schar=_mobileNo.charAt(0) + _mobileNo.charAt(1);
	 if((_mobileNo!="") && ((len==9 && fchar != 5)||(len==10 && schar != 05))){
		 growl_alert(i18n.t('validmobile'));
		 $('.qitafBtn').removeClass('LoadBtn');
		 $('.qitafPhNo').focus();
		 return false;
	 }
	return true;      
    },
    generateOTP:function(){
	    var $t = this, data =  {MOBILE_NO:this.getMobileNumber(),pid:this.getProductId()};		
      $($t.messageContainer).removeClass($t.errorClass+ +$t.successClass);
		var qitafFire = $t.validateQitafPhoneNumber(this.getMobileNumber());
      //Send request for generating otp
	  if(qitafFire){
		  $('.alert_custom').hide();
		  $('#QITAF_GRNOTP_BTN').addClass('LoadBtn');
		  $('#QITAF_GRNOTP_BTN').attr('disabled',true);
		  $.post('/qitaf/generateOTP',data,function(res){
			$($t.messageContainer).show();
			if(res.status=='SUCCESS') {
			  $($t.optPhone).hide();
			  $($t.optForm).show(function(){
				  $('.qitafBtn').closest('.resTabPanel').css({'height':$('.qitafBtn').parents('.tarData').height()+50})
				  
			  });
			 
			}else{
				$('#QITAF_GRNOTP_BTN').removeClass('LoadBtn');
				$('#QITAF_GRNOTP_BTN').attr('disabled',false);
			  if(res.responseText && res.responseText!==''){
			  	if(res.responseText=='QitafNot Found Or Available'){
					$($t.messageContainer).text(i18n.t('qitafNotFound')).addClass($t.errorClass);
				}else {
					$($t.messageContainer).text(res.responseText).addClass($t.errorClass);
				}				
			  }else{				
				$($t.messageContainer).text(i18n.t('qitafSerNotAvb')).addClass($t.errorClass);
			  }
			  setTimeout(function(){
			$('.qitafBtn').closest('.resTabPanel').css({'height':$('.qitafBtn').parents('.tarData').height()+50})
		},200);
			}
		  });
	  }
	  
    },
    earnGenerateOTP:function(){
        var $t = this, data =  {MOBILE_NO:this.getEarnMobileNumber(),pid:this.getProductId(),type:'earn'};
        $($t.messageContainer).removeClass($t.errorClass+ +$t.successClass);
  		var qitafFire = $t.validateQitafPhoneNumber(this.getEarnMobileNumber());
        //Send request for generating otp
  	  if(qitafFire){
  		  $('.alert_custom').hide();
  		  $('#QITAF_EARN_GRNOTP_BTN').addClass('LoadBtn');
  		  $('#QITAF_EARN_GRNOTP_BTN').attr('disabled',true);
  		  $.post('/qitaf/generateOTP',data,function(res){
  			$($t.messageContainer).show();
  			if(res.status=='SUCCESS') {
  			  $($t.optEPhone).hide();
  			  $($t.earnMessage).text(i18n.t('earnqitafsucmsg')).addClass($t.successClass);
  			}else{
  				$('#QITAF_EARN_GRNOTP_BTN').removeClass('LoadBtn');
  				$('#QITAF_EARN_GRNOTP_BTN').attr('disabled',false);
  			  if(res.responseText && res.responseText!==''){
  				$($t.earnMessage).text(res.responseText).addClass($t.errorClass);
  			  }else{				
  				$($t.earnMessage).text('Unable to process, please try later').addClass($t.errorClass);
  			  }
  			}
  		  });
  	  }
    },    
	validateOTP:function(){
	//console.log('entered');
	var _optAmount = $('#QITAF_AMOUNT_TO_BE_REDEEM');
	var _otpString = $('#QITAF_PIN_NO');	
	if(_optAmount.val()==""){
		 growl_alert(i18n.t('enterAmount'));
		 $('#QITAF_REDEEM_POINT_BTN').removeClass('LoadBtn');
         $('#QITAF_AMOUNT_TO_BE_REDEEM').focus();
         return false;
	 }
	 if(_otpString.val()==""){
		 growl_alert(i18n.t('enterPwdRcvdBySms'));
		 $('#QITAF_AMOUNT_TO_BE_REDEEM').removeClass('LoadBtn');
         $('#QITAF_PIN_NO').focus();
         return false;
	 }
	return true;
    },
    redeemPoints:function(){
      var $t = this, data =  {AMOUNT_TO_BE_REDEEM:this.getAmount(),PIN_NO:this.getPin(),pid:this.getProductId()};
      $($t.messageContainer).removeClass($t.errorClass+ +$t.successClass);
      if($t.validateOTP()){
    	  $('#QITAF_REDEEM_POINT_BTN').addClass('LoadBtn');
    	  $('#QITAF_REDEEM_POINT_BTN').attr('disabled',true);
	      //Send request for generating otp
	      $.post('/qitaf/redeemPoints',data,function(res){
	        $($t.messageContainer).show();
	        if(res.status=='SUCCESS') {
	        	//console.log('redeemAmt'+res.redeemAmt);
	        	//console.log('totalPrice'+res.totalPrice);
	          $('.bnplSection').hide();	
	          $($t.optForm).hide();
	          $($t.messageContainer).hide();
	          $($t.redeemContainer).text(i18n.t('qitsfRdmSucs')).addClass($t.successClass);
	          
	          var product = $t.getProduct();
	          if(product === 'FLIGHT')
        	  {
	        	  if(res.totalAmountPaidByQitaf)
	        	  {
	        		  dontRefreshPopup();
	        		  loadFlightConfirmationPage({pid:res.responseData.paymentObj.pid,uuid:res.responseData.uuid});
	        	  }
	        	  else
	        	  {
	        		  flightSerVar.loadQitaftripSummary(res);
	        	  }
        	  }
	          else if(product === 'HOTEL'){
	        	  
	        	  if(res.totalAmountPaidByQitaf)
	        	  {
	        		  dontRefreshPopup();
	        		  loadHotelConfirmationPage(res.responseData.paymentObj.pid);
	        	  }
	        	  else
	        	  {

	        		  hotelTemplateVar.loadQitafHoteltripSummary(res);
	        	  }
	          }
	          else if(product === 'FPH'){
	        	  if(res.totalAmountPaidByQitaf)
	        	  {
	        		  dontRefreshPopup();
	        		  loadPackageConfirmationPage({pid:res.responseData.paymentObj.pid,uuid:res.responseData.uuid});
	        	  }
	        	  else
	        	  {
	        		  fphService.loadQitafFPHtripSummary(res);
	        	  }
	          }
	          else if(product === 'CAR'){
	        	  
	        	  if(res.totalAmountPaidByQitaf)
	        	  {
	        		  dontRefreshPopup();
	        		  loadCarsConfirmation(res.responseData.paymentObj.pid);
	        	  }
	        	  else
	        	  {
	        		  carsVar.loadQitafCarstripSummary(res);
	        	  }
	          }
	          else if(product === 'TRANSFER'){
	        	  
	        	  if(res.totalAmountPaidByQitaf)
	        	  {
	        		  dontRefreshPopup();
	        		  loadTransferConfirmationPage(res.responseData.paymentObj.pid,res.responseData.echotoken,res.responseData.loggerId);
	        	  }
	        	  else
	        	  {
	        		  transferService.loadQitafTransfertripSummary(res);
	        	  }
	          }
	          else if(product === 'CPP'){
	        	  if(res.totalAmountPaidByQitaf)
	        	  {
	        		  dontRefreshPopup();
	        		  location.href = '/pages/hotel/hotelConfirmation?SavedItenaryId=' + res.responseData.paymentObj.SavedItenaryId + '&pid=' + res.responseData.paymentObj.pid;
	        	  }
	        	  else
	        	  {
	        	  	
	        	  	 hotelTemplateVar.loadBnplQitaf(res.responseData);
	        		  $('#paymeBtn').val('PAY '+ res.responseData.paymentObj.currency + ' ' + res.responseData.qitafObj.updatedTotalPrice); 
	        	  }
	          }
			  
			}else{
	        	$('#QITAF_REDEEM_POINT_BTN').removeClass('LoadBtn');
	        	$('#QITAF_REDEEM_POINT_BTN').attr('disabled',false);
	          if(res.responseText && res.responseText!==''){

	          		if(i18n.options.lng == "ar"){

		          		if(res.responseText==='Invalid Pin'){
		          			$($t.redeemContainer).text(i18n.t('invalidPinMsg')).addClass($t.errorClass);
		          		}
		          		else if(res.responseText==='PIN already Used'){
		          			$($t.redeemContainer).text(i18n.t('pinAlreadyUsed')).addClass($t.errorClass);
		          		}
		          		else if(res.responseText==='Insufficient balance'){
		          			$($t.redeemContainer).text(i18n.t('insufBal')).addClass($t.errorClass);
		          		}
		          		else{

		          			 $($t.redeemContainer).text(i18n.t('amountNotValid')).addClass($t.errorClass);
		          		}
		          	}
	        	  else{
	        		  $($t.redeemContainer).text(res.responseText).addClass($t.errorClass);  
	        	  }
	          }
	          else{
	            $($t.redeemContainer).text(i18n.t('qitafSerNotAvb')).addClass($t.errorClass);
	          }


	        }
	      });
      }
    },
    reversePoints:function(){
        var $t = this, data =  {pid:this.getProductId()};
      
  		 
  		  $('.reverseBtn').addClass('LoadBtn');
  		  $('.reverseBtn').attr('disabled',true);
  		  $.post('/qitaf/reversePoints',data,function(res){
  			  
  			 if(res.status==='SUCCESS') {
  				$('.reverseBtn').hide();
  				growl_alert(i18n.t('qitafRvrsSucs'));
  				$('.alert_custom').addClass('alert-success');  				 
  			 }
  			 else{
  				growl_alert('Your qitaf reversal failed, Please try again');
  			 }
  			
  			
  		  });
  	  
      },
    eventBinding:function(){
      var $t = this;
      $t.addEvent(this.genOtpBtn, 'click', function () {
        $t.generateOTP();
      });
      $t.addEvent(this.redeemPointBtn, 'click', function () {
        $t.redeemPoints();
      });
      $t.addEvent(this.reGenerateOTP, 'click', function () {
          $t.generateOTP();
      });
      $t.addEvent(this.earnGenOtpBtn, 'click', function () {
          $t.earnGenerateOTP();
      });      
      $t.addEvent(this.reversePointBtn, 'click', function () {
          $t.reversePoints();
      });
    },
    addEvent:function(el, eventType, handler) {
      if (el && el.addEventListener) { // DOM Level 2 browsers
        el.addEventListener(eventType, handler, false);
      } else if (el && el.attachEvent) { // IE <= 8
        el.attachEvent('on' + eventType, handler);
      } else if(el) { // ancient browsers
        el['on' + eventType] = handler;
      }
    },
    /**
	*@description Load template Content
	*@param HTML Selector [dynamicTemplate(Dynamic template to Loaded)]
	*@param String [templateID (Template ID)]
	*@param data Array/Object [data(Json Data)]
	*@param HTML Selector [toUpdate(Template to update)]
	*@return 
	*/
	loadTemplate:function(templateID,data,toUpdate,callback){
		var result;
		//Load the template
		var template = tmpl($(this.dynamicTemplate).filter('#'+templateID).html(),data);
		var r = /\\u([\d\w]{4})/gi;
		template = template.replace(r, function (match, grp) {
		    return String.fromCharCode(parseInt(grp, 16)); } );
		template = unescape(template);
		//Select result container
		if(typeof toUpdate==='object'){			
			result = toUpdate;
		}else{			
			result = $('#'+toUpdate);
		}
		//Empty the result container
		result.empty();
		//Load data to the result container
		result.append(template);
		_langGlobal.langInit();
		
		if(typeof callback==='function')
			return callback();
		
	}
  }
}());
/*
 * filter.js
 * 2.1.0 (2015-09-27)
 *
 * Released under the MIT license
 * http://opensource.org/licenses/MIT
 *
 * Copyright 2011-2015 Jiren Patel[jirenpatel@gmail.com]
 *
 * Dependency:
 *  jQuery(v1.9 >=)
 */
 
 /*
 * JsonQuery
 * 0.0.2 (2015-08-06)
 *
 * Released under the MIT license
 * http://opensource.org/licenses/MIT
 *
 * Copyright 2011-2015 Jiren Patel[jirenpatel@gmail.com]
 *
 */
 
 (function(window) {

  'use strict';

  var JsonQuery = function(records, opts){
    return new _JsonQuery(records, opts || {});
  };

  window.JsonQuery = JsonQuery;

  JsonQuery.VERSION = '0.0.2'

  JsonQuery.Config = {
    id: 'id',
    latitude: 'latitude',
    longitude: 'longitude',
    date_regx: /^\d{4}-\d{2}-\d{2}$/ 
  }

 JsonQuery.blankClone = function(jq, records){
   return new _JsonQuery(records, {
     getterFns: jq.getterFns,
     schema: jq.schema,
     id: jq.id,
     latitude: jq.latitude, 
     longitude: jq.longitude
   })
 }

  var Config = JsonQuery.Config;

  var each = function(objs, callback, context){
    if (objs.length === +objs.length) {
      for (var i = 0, l = objs.length; i < l; i++) {
        callback.call(context, objs[i], i);
      }
    }else{
      for (var key in objs) {
        if (hasOwnProperty.call(objs, key)) {
          callback.call(context, objs[key], key);
        }
      }
    }
  };
  
  var eachWithBreak = function(objs, callback, context){
    for (var i = 0, l = objs.length; i < l; i++) {
      if(callback.call(context, objs[i], i) === false){
        return;
      }
    }
  };
  

  var _JsonQuery = function(records, opts){
    this.records = records || [];
    this.getterFns = opts.getterFns || {};
    this.lat = opts.latitude || Config.latitude;
    this.lng = opts.longitude || Config.longitude;
    this.id  = opts.id;
  
    if(opts.schema){
      this.schema = opts.schema;
    }
  
    if(this.records.length && !this.schema){
      initSchema(this, records[0], opts.schema);
    }
  };
  
  var JQ = _JsonQuery.prototype;
  
  var initSchema = function(context, record, hasSchema){
    context.schema = {};
  
    if(!context.id){
      context.id = record._id ? '_id' : Config.id;
    }
  
    if(!hasSchema){
      buildSchema.call(context, record);
      buildPropGetters.call(context, record);
    }
  };
  
  var getDataType = function(val){
    if(val == null){
      return 'String';
    }
  
    /*
     * @info Fix for IE 10 & 11
     * @bug Invalid calling object
     */
    var type = Object.prototype.toString.call(val).slice(8, -1);
  
    if(type == 'String' && val.match(Config.date_regx)){
      return 'Date';
    }
  
    return type;
  };
  
  var parseValue = function(type, value){
    if(!value && value != 0){
      return value;
    }
  
    if(type == 'String'){
      return String(value);
    }else if(type == 'Number'){
      return Number(value)
    }else if(type == 'Boolean'){
      return (value == 'true' || value == true || value == '1') ? true : false;
    }else if(type == 'Date'){
      return new Date(value)
    }else{
      return value
    }
  }
  
  var buildSchema = function(obj, parentField){
    var field, dataType, fullPath, fieldValue;
  
    for(field in obj){
      fieldValue = obj[field];
      dataType = getDataType(fieldValue);
  
      fullPath = parentField ? (parentField + '.' + field) : field;
      this.schema[fullPath] = dataType;
  
      if(dataType == 'Object'){
        buildSchema.call(this, fieldValue, fullPath);
      }else if(dataType == 'Array'){
  
        if(['Object', 'Array'].indexOf(getDataType(fieldValue[0])) > -1){
          buildSchema.call(this, obj[field][0], fullPath);
        }else{
          this.schema[fullPath] = getDataType(fieldValue[0]);
        }
      }
    }
  };
  
  var parseDate = function(dates){
    if(dates.constructor.name == 'Array'){
      return dates.map(function(d){  return (d ? new Date(d) : null ) });
    }
    return (dates ? new Date(dates) : null);
  };
  
  var buildPropGetters = function(record){
    var selector, type, val;
  
    for(selector in this.schema){
      type = this.schema[selector];
  
      try{
        if(!this.getterFns[selector]){
          this.getterFns[selector] = buildGetPropFn.call(this, selector, type);
        }
  
        //Remap if it is array
        val = this.getterFns[selector](record);
        if(getDataType(val) == 'Array'){
          this.schema[selector] = 'Array';
        }
      }catch(err){
        //console.log("Error while generating getter function for selector : " + selector + " NOTE: Define manually");
      }
    }
  };
  
  var countArrHierarchy = function(schema, nestedPath){
    var lastArr = 0,
        arrCount = 0,
        path,
        pathLength = nestedPath.length - 1;
  
    for(var i = nestedPath.length - 1; i >= 0; i--){
      path = nestedPath.slice(0, i + 1).join('.');
  
      if(schema[path] == 'Array' && i < pathLength){
        lastArr = i;
        arrCount = arrCount + 1;
      }
    }
    return (arrCount > 1 ? (lastArr  + 1) : -1);
  };
  
  var buildGetPropFn = function(field, type){
    var accessPath = '',
        nestedPath = field.split('.'),
        path,
        lastArr = countArrHierarchy(this.schema, nestedPath),
        prefix,
        accessFnBody;
  
    for(var i = nestedPath.length - 1; i >= 0; i--){
      path = nestedPath.slice(0, i + 1).join('.');
      prefix = "['" + nestedPath[i] +"']";
  
      if(this.schema[path] == 'Array'){
        if(lastArr == i){
          accessPath = prefix + (accessPath.length ? ".every(function(r" + i +"){  objs.push(r" + i + accessPath + ")})" : '');
        }else{
          accessPath = prefix + (accessPath.length ? ".map(function(r" + i +"){  return r" + i + accessPath + "})" : '');
        }
      }else{
        accessPath = prefix + accessPath;
      }
    }
  
    if(lastArr > -1){
      accessFnBody = 'var objs = []; obj' + accessPath + ';' + (this.schema['path'] == 'Date' ?  'return parseDate(objs)'  :  'return objs;');
    }else{
      accessFnBody = 'return ' + (this.schema['path'] == 'Date' ? 'parseDate(obj'+ accessPath +');' : 'obj'+ accessPath +';') ;
    }
  
    return new Function('obj', accessFnBody);
  };
  
  JQ.operators = {
    eq: function(v1, v2){ return v1 == v2},
    ne: function(v1, v2){ return v1 != v2},
    lt: function(v1, v2){ return v1 < v2},
    lte: function(v1, v2){ return v1 <= v2},
    gt: function(v1, v2){ return v1 > v2},
    gte: function(v1, v2){ return v1 >= v2},
    in: function(v1, v2){ return v2.indexOf(v1) > -1},
    ni: function(v1, v2){ return v2.indexOf(v1) == -1},
    li: function(v, regx) { return regx.test(v)},
    bt: function(v1, v2){ return (v1 >= v2[0] && v1 <= v2[1])}
  };
  
  JQ.addOperator = function(name, fn){
    this.operators[name] = fn;
  };
  
  // rVal = Record Value
  // cVal = Condition Value
  var arrayMatcher = function(rVal, cVal, cFn){
     var i = 0, l = rVal.length;
  
     for(i; i < l; i++){
       if(cFn(rVal[i], cVal)) return true;
     }
  };
  
  JQ.addCondition = function(name, func){
    this.operators[name] = func;
  };
  
  JQ.getCriteria = function(criteria){
    var fieldCondition = criteria.split('.$');
  
    return {
      field: fieldCondition[0],
      operator: fieldCondition[1] || 'eq'
    };
  };
  
  JQ.setGetterFn = function(field, fn){
    this.getterFns[field] = fn;
  };
  
  JQ.addRecords = function(records){
    if(!records || !records.length){
      return false;
    }
  
    if(getDataType(records) == 'Array'){
      this.records = this.records.concat(records);
    }else{
      this.records.push(records);
    }
  
    if(!this.schema){
      initSchema(this, records[0]);
    }
  
    return true;
  };
  
  JQ._findAll = function(records, qField, cVal, cOpt){
    var result = [],
        cFn,
        rVal,
        qFn = this.getterFns[qField], arrayCFn;
    if(cOpt == 'li' && typeof cVal == 'string'){
      cVal = new RegExp(cVal);
    }
  
    cFn = this.operators[cOpt];
  
    if(this.schema[qField] == 'Array'){
      arrayCFn = cFn;
      cFn = arrayMatcher;
    }
  
    each(records, function(v){
      rVal = qFn(v);
  
      if(cFn(rVal, cVal, arrayCFn)) {
        result.push(v);
      }
    });
  
    return result;
  };
  
  JQ.find = function(field, value){
    var result, qFn;
  
    if(!value){
      value = field;
      field = this.id;
    }
  
    qFn = this.getterFns[field];
  
    eachWithBreak(this.records, function(r){
      if(qFn(r) == value){
        result = r;
        return false;
      }
    });
  
    return result;
  };
  
  each(['where', 'or', 'groupBy', 'select', 'pluck', 'limit', 'offset', 'order', 'uniq', 'near'], function(c){
    JQ[c] = function(query){
      var q = new Query(this, this.records);
      q[c].apply(q, arguments);
      return q;
    };
  });
  
  each(['update_all', 'destroy_all'], function(c){
    JQ[c] = function(query){
      var q = new Query(this, this.records);
      return q[c].apply(q, arguments);
    };
  });
  
  each(['count', 'first', 'last', 'all'], function(c){
    Object.defineProperty(JQ, c, {
      get: function(){
        return (new Query(this, this.records))[c];
      }
    });
  });
  
  var compareObj = function(obj1, obj2, fields){
    for(var i = 0, l = fields.length; i < l; i++){
      if(this.getterFns[fields[i]](obj1) !== this.getterFns[fields[i]](obj2)){
        return false;
      }
    }
  
    return true;
  };
  
  var execWhere = function(query, records){
    var q, criteria, result;
  
    for(q in query){
      criteria = this.jQ.getCriteria(q);
      result = this.jQ._findAll(result || records, criteria.field, query[q], criteria.operator);
    }
  
   return result;
  };
  
  var execGroupBy = function(field, records){
    var fn = this.jQ.getterFns[field], v, result = {}, i = 0, l = records.length;
  
    each(records, function(r){
      v = fn(r);
      (result[v] || (result[v] = [])).push(r);
    });
  
    return result;
  };
  
  var execOrder = function(orders, records){
    var fn,
        direction,
        _records = records.slice(0);
  
    for(var i = 0, l = orders.length; i < l; i++){
      fn = this.jQ.getterFns[orders[i].field],
        direction = orders[i].direction == 'asc' ? 1 : -1;
  
      _records.sort(function(r1,r2){
        var a = fn(r1), b = fn(r2);
  
        return (a < b ? -1 : a > b ? 1 : 0)*direction;
      })
    }
  
    return _records;
  };
  
  var execSelect = function(fields, records){
    var self = this, result = [], getFn;
  
    each(fields, function(f){
      getFn = self.jQ.getterFns[f];
  
      each(records, function(r, i){
        (result[i] || (result[i] = {}))[f] = getFn(r);
      });
    });
  
    return result;
  };
  
  var execPluck = function(field, records){
    var getFn = this.jQ.getterFns[field], result = [];
  
    each(records, function(r){
      result.push(getFn(r));
    });
  
    return result;
  };
  
  var execUniq = function(fields, records){
    var result = [], self = this;
  
    if(getDataType(records[0]) != 'Object'){
      each(records, function(r){
        if(result.indexOf(r) == -1){
          result.push(r);
        }
      });
  
      return result;
    }
  
    result.push(records[0]);
  
    each(records, function(r){
      var present = false;
  
      for(var i = 0, l = result.length; i < l; i++){
        if(compareObj.call(self.jQ, result[i], r, fields)){
          present = true;
        }
      }
  
      if(!present){
        result.push(r);
      }
    });
  
    return result;
  };
  
  

  var Query = function(jQ, records){
    this.jQ = jQ;
    this.records = records;
    this.criteria = {};
    return this;
  };
  
  var Q = Query.prototype;
  
  Q.each = function(callback, context){
    each(this.exec() || [], callback, context)
  };
  
  Q.exec = Q.toArray = function(callback){
    var result, c;
  
    if(this.criteria['all']){
      result = this.records;
    }
    console.log('(this.criteria',this.criteria);
    if(this.criteria['where']){
      result = execWhere.call(this, this.criteria['where'], result || this.records);
    }
  
    if(this.criteria['or']){
      result = result.concat(execWhere.call(this, this.criteria['or'], this.records));
      result = execUniq.call(this, [this.jQ.id], result);
    }
  
    if(this.criteria['order']){
      result = execOrder.call(this, this.criteria['order'], result || this.records);
    }
  
    if(this.criteria['near']){
      result = execNear.call(this, this.criteria['near'], result || this.records);
    }
  
    if(this.criteria['uniq']){
      result = execUniq.call(this, this.criteria['uniq'], result || this.records);
    }
  
    if(this.criteria['select']){
      result = execSelect.call(this, this.criteria['select'], result || this.records);
    }
  
    if(this.criteria['pluck']){
      result = execPluck.call(this, this.criteria['pluck'], result || this.records);
    }
  
    if(this.criteria['limit']){
      result = (result || this.records).slice(this.criteria['offset'] || 0, (this.criteria['offset'] || 0) + this.criteria['limit']);
    }
  
    if(this.criteria['group_by']){
      result = execGroupBy.call(this, this.criteria['group_by'], result || this.records);
    }
  
    if(!result){
      result = this.records;
    }
  
    if(callback){
      each(result, callback);
    }
  
    if(this.jQ.onResult){
      this.jQ.onResult(result, this.criteria);
    }
  
    return result;
  }
  
  var addToCriteria = function(type, query){
    var c;
  
    if(!this.criteria[type]){
      this.criteria[type] = {};
    }
  
    for(c in query){
      this.criteria[type][c] = query[c];
    }
  
    return this;
  };
  
  Q.where = function(query){
    return addToCriteria.call(this, 'where', query);
  };
  
  Q.or = function(query){
    return addToCriteria.call(this, 'or', query);
  };
  
  Q.groupBy = function(field){
    this.criteria['group_by'] = field;
    return this;
  };
  
  Q.select = function(){
    this.criteria['select'] = arguments;
    return this;
  };
  
  Q.pluck = function(field){
    this.criteria['pluck'] = field;
    return this;
  };
  
  Q.limit = function(l){
    this.criteria['limit'] = l;
    return this;
  };
  
  Q.offset = function(o){
    this.criteria['offset'] = o;
    return this;
  };
  
  Q.order = function(criteria){
    var field;
    this.criteria['order'] = this.criteria['order'] || [];
  
    for(field in criteria){
      this.criteria['order'].push({field: field, direction: criteria[field].toLowerCase()});
    }
  
    return this;
  };
  
  Q.uniq = function(){
    this.criteria['uniq'] = (arguments.length > 0 ? arguments : true);
    return this;
  };
  
  Object.defineProperty(Q, 'count', {
    get: function(){
      this.criteria['count'] = true;
      var r = this.exec();
  
      if(getDataType(r) == 'Array'){
        return this.exec().length;
      }else{
        return Object.keys(r).length;
      }
    }
  });
  
  Object.defineProperty(Q, 'all', {
    get: function(){
      this.criteria['all'] = true;
      return this.exec();
    }
  });
  
  Object.defineProperty(Q, 'first', {
    get: function(){
      this.criteria['first'] = true;
      return this.exec()[0];
    }
  });
  
  Object.defineProperty(Q, 'last', {
    get: function(){
      this.criteria['last'] = true;
      var r = this.exec();
      return r[r.length - 1];
    }
  });
  
  //Geocoding
  var GEO = {
    redius: 6371,
    toRad: function(v){
      return v * Math.PI / 180;
    }
  };
  
  var calculateDistance = function(lat1, lat2, lng1, lng2){
    var dLat = GEO.toRad(lat2 - lat1),
        dLon = GEO.toRad(lng2 - lng1),
        lat1 = GEO.toRad(lat1),
        lat2 = GEO.toRad(lat2);
  
    var a = Math.sin(dLat/2) * Math.sin(dLat/2) +
      Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2);
  
    return (2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a))) * GEO.redius;
  };
  
  var execNear = function(opts, records){
    var result = [],
        self = this,
        unit_c = opts.unit == 'mile' ? 0.6214 : 1,
        latFn = self.jQ.getterFns[self.jQ.lat],
        lngFn = self.jQ.getterFns[self.jQ.lng];
  
    each(records, function(r){
      r._distance = calculateDistance(latFn(r), opts.lat, lngFn(r), opts.lng) * unit_c;
  
      if(r._distance <= opts.distance){
        result.push(r);
      }
    });
  
    result.sort(function(a, b){
      return (a._distance < b._distance ? -1 : a._distance > b._distance ? 1 : 0);
    })
  
    return result;
  };
  
  Q.near = function(lat, lng, distance, unit){
    this.criteria['near'] = {lat: lat, lng: lng, distance: distance, unit: (unit || 'km')};
    return this;
  };
  
  //Helpers
  Q.map = Q.collect = function(fn){
    var result = [], out;
  
    this.exec(function(r){
      if(out = fn(r)){
        result.push(out);
      }
    })
    return result;
  };
  
  Q.sum = function(field){
    var result = 0,
        group,
        getFn = this.jQ.getterFns[field];
  
    if(this.criteria['group_by']){
      group = true;
      result = {};
    }
  
    this.exec(function(r, i){
      if(group){
        result[i] = 0;
  
        each(r, function(e){
          result[i] = result[i] + (getFn(e) || 0);
        })
      }else{
        result = result + (getFn(r) || 0);
      }
    });
  
    return result;
  };
  
  Q.toJQ = function(){
    var q = JsonQuery(this.all, {schema: true});
    q.schema = this.jQ.schema;
    q.getterFns = this.jQ.getterFns;
  
    return q;
  };
  
  Q.destroy_all = Q.destroy = function(){
    var marked_records = this.all;
  
    each(marked_records, function(r, i){
      r._destroy_ = true;
    });
  
    this.records = this.jQ.records = this.records.filter(function(r){
      return !r._destroy_; 
    });
  
    return marked_records;
  };
  
  Q.update_all = Q.update = function(attrs){
    if(!attrs){
      return false;
    }
  
    var updated_count = 0;
  
    each(this.all, function(r){
      each(attrs, function(value, key){
        r[key] = value;
      });
      updated_count = updated_count + 1;
    });
    
    return updated_count;
  };
  

  //In IE 8 indexOf method not define.
  if (!Array.prototype.indexOf) {
    Array.prototype.indexOf = function(obj, start) {
      for (var i = (start || 0), j = this.length; i < j; i++) {
        if (this[i] === obj) { return i; }
      }
      return -1;
    }
  }
  
  if(!Object.defineProperty){
    Object.defineProperty = function(obj, name, opts){
      obj[name] = opts.get
    }
  }
  
  


})(this);

;(function($, window, document) {

  "use strict";

  
  //View Template
  // Ref: Underscopre.js
  //JavaScript micro-templating, similar to John Resig's implementation.
  var templateSettings = {
    evaluate    : /<%([\s\S]+?)%>/g,
    interpolate : /<%=([\s\S]+?)%>/g,
    escape      : /<%-([\s\S]+?)%>/g
  };
  
  var escapeStr = function(string) {
    return (''+string).replace(/&/g,  '&amp;')
                      .replace(/</g,  '&lt;')
                      .replace(/>/g,  '&gt;')
                      .replace(/"/g,  '&quot;')
                      .replace(/'/g,  '&#x27;')
                      .replace(/\//g, '&#x2F;');
  };
  
  function templateBuilder(str, data) {
    var c  = templateSettings;
    var tmpl = 'var __p=[],print=function(){__p.push.apply(__p,arguments);};' +
      'with(obj||{}){__p.push(\'' +
      str.replace(/\\/g, '\\\\')
         .replace(/'/g, "\\'")
         .replace(c.escape, function(match, code) {
           return "',escapeStr(" + code.replace(/\\'/g, "'") + "),'";
         })
         .replace(c.interpolate, function(match, code) {
           return "'," + code.replace(/\\'/g, "'") + ",'";
         })
         .replace(c.evaluate || null, function(match, code) {
           return "');" + code.replace(/\\'/g, "'")
                              .replace(/[\r\n\t]/g, ' ') + ";__p.push('";
         })
         .replace(/\r/g, '\\r')
         .replace(/\n/g, '\\n')
         .replace(/\t/g, '\\t')
         + "');}return __p.join('');";
  
    var func = new Function('obj', tmpl);
    return data ? func(data) : function(data) { return func(data) };
  };
  

  function each (objs, callback, context){
    for (var i = 0, l = objs.length; i < l; i++) {
      callback.call(context, objs[i], i);
    }
  }
  

  var FJS = function(records, container, options) {
    var self = this;
  
    this.opts = options || {};
    this.callbacks = this.opts.callbacks || {};
    this.$container = $(container);
    this.view = this.opts.view || renderRecord;
   // this.templateFn = templateBuilder($(this.opts.template).html());
    this.templateFn = templateBuilder('<div>HEllo</div>');
    this.criterias = [];
    this._index = 1;
    this.appendToContainer = this.opts.appendToContainer || appendToContainer;
    this.has_pagination = !!this.opts.pagination;
    this.search_text = '';
    this.anyFilterSelected = false;
  
    $.each(this.opts.criterias || [], function(){
      self.addCriteria(this);
    });
  
    this.Model = JsonQuery();
    this.Model.getterFns['_fid'] = function(r){ return r['_fid'];};
    this.addRecords(records, false);
  
    if(this.has_pagination){
      this.initPagination();
    }
  };
  
  var F = FJS.prototype;
  
  Object.defineProperty(F, 'records', {
    get: function(){ return this.Model.records; }
  });
  
  Object.defineProperty(F, 'recordsCount', {
    get: function(){ return this.Model.records.length; }
  });
  
  F.templateBuilder = templateBuilder;
  
  //Callback
  F.execCallback = function(){
    var name = arguments[0];
  
    if(this.callbacks[name]) {
      this.callbacks[name].apply(this, Array.prototype.slice.call(arguments, 1));
    }
  };
  
  F.addCallback = function(name, fns){
    if(name && fns){
      this.callbacks[name] = fns;
    }
  };
  
  //Add Data
  F.addRecords = function(records, applyFilter){
    var has_scheme = !!this.Model.schema;
  
    this.execCallback('beforeAddRecords', records);
  
    if(this.Model.addRecords(records)){
      if(!this.has_scheme){
        this.initSearch(this.opts.search);
      }
  
      this.render(records);
      if(applyFilter !== false){
        this.filter();
      }
    }
  
    this.execCallback('afterAddRecords', records);
  };
  
  F.removeRecords = function(criteria){
    var ids;
  
    if($.isPlainObject(criteria)){
      ids = this.Model.where(criteria).pluck('_fid').all;
    }else if($.isArray(criteria)){
      ids = this.Model.where({'id.$in': criteria}).pluck('_fid').all;
    }
  
    if(!ids){
      return false;
    }
  
    var records = this.Model.records, 
        removedCount = 0,
        idsLength = ids.length,
        fid;
  
    for(var i = records.length - 1; i > -1; i--){
      fid = records[i]._fid
  
      if(ids.indexOf(fid) > -1){
        records.splice(i, 1);
        removedCount ++;
  
        $('#fjs_' + fid).remove();
      } 
  
      if(removedCount == idsLength){
        break;
      }
    }
  
    this.execCallback('afterRemove');
  
    return true;
  };
  
  var renderRecord = function(record, index){
    return this.templateFn(record);
  };
  
  F.render = function(records){
    var self = this, 
        ele, 
        cbName;
  
    if(!records.length){return; }
  
    this.execCallback('beforeRender', records);
    cbName = 'beforeRecordRender';
  
    $.each(records, function(i){
      self.execCallback(cbName, this);
      this._fid = (self._index++);
    
      if(!self.has_pagination){ 
        self.renderItem(this, i);
      }
    });
  };
  
  F.renderItem = function(record, i){
    if(!record){
      return;
    }
  
    var ele = this.view(record, i);
  
    if(typeof ele == 'string'){
      ele = $($.trim(ele));
    }
  
    ele.attr('id', 'fjs_' + record._fid).addClass('fjs_item');
  
    this.appendToContainer(ele, record);
  };
  
  var appendToContainer = function(html_ele, record){
    this.$container.append(html_ele);
  };
  
  var setDefaultCriteriaOpts = function(criteria){
    var ele = criteria.$ele,
        eleType = criteria.$ele.attr('type');
  
    if(!criteria.selector){
      if (ele.get(0).tagName == 'INPUT'){
        criteria.selector = (eleType == 'checkbox' || eleType == 'radio') ? ':checked' : ':input';
      }else if (ele.get(0).tagName == 'SELECT'){
        criteria.selector = 'select';
      }
    }
  
    if (!criteria.event){
      criteria.event = (eleType == 'checkbox' || eleType == 'radio') ? 'click' : 'change';
    }
  
    return criteria;
  };
  
  F.addCriteria = function(criterias){
    var self = this;
  
    if(!criterias){ return false; }
  
    if($.isArray(criterias)){
      $.each(criterias, function(){
        addFilterCriteria.call(self, this);
      });
    }else{
      addFilterCriteria.call(self, criterias);
    }
  
    return true;
  };
  
  // Add Filter criteria
  // criteria: { ele: '#name', event: 'check', field: 'name', type: 'range' }
  var addFilterCriteria = function(criteria){
    if(!criteria || !criteria.field || !criteria.ele){
      return false;
    }
  
    criteria.$ele = $(criteria.ele);
  
    if(!criteria.$ele.length){
      return false;
    }
  
    criteria = setDefaultCriteriaOpts(criteria);
    this.bindEvent(criteria.ele, criteria.event);
  
    criteria._q = criteria.field + (criteria.type == 'range' ? '.$bt' : '')
    criteria.active = true;
  
    this.criterias.push(criteria);
  
    return true;
  };
  
  F.removeCriteria = function(field){
    var self = this, criteria, index;
  
    $.each(self.criterias, function(i){
      if(this.field == field){
        index = i;
      }
    });
  
    if(index != null){
      criteria = this.criterias.splice(index, 1)[0];
      $('body').off(criteria.event, criteria.ele)
    }
  };
  
  var changeCriteriaStatus = function(names, active){
    var self = this;
  
    if(!names){ return; }
  
    if(!$.isArray(names)){
      names = [names]
    }
  
    $.each(names, function(){
      var name = this;
  
      $.each(self.criterias, function(){
        if(this.field == name){
          this.active = active;
        }
      })
    });
  };
  
  F.deactivateCriteria = function(names){
    changeCriteriaStatus.call(self, names, false);
  };
  
  F.activateCriteria = function(names){
    changeCriteriaStatus.call(this, names, true);
  };
  
  F.getSelectedValues = function(criteria, context){
    var vals = [];
  
    criteria.$ele.filter(criteria.selector).each(function() {
      vals.push($(this).val());
    });
  
    if($.isArray(vals[0])){
      vals = [].concat.apply([], vals);
    }
  
    if(criteria.all && vals.indexOf(criteria.all) > -1){
      return;
    }
  
    if(criteria.type == 'range'){
      //vals = vals[0].split(criteria.delimiter || '-');
      if((vals[0]).indexOf(';')>0){
        vals = vals[0].split(';');
      }else{
        vals = vals[0].split('-');
      }
       console.log('vals111',vals);
    }
  
    vals = this.parseValues(criteria.field, vals);
  
    return context.execCallback('onFilterSelect', {criteria: criteria, values: vals}) || vals;
  };
  
  F.lastResult = function(){
    return (this.last_result || this.records);
  };
  
  F.filter = function(){
    var query = {}, 
        vals, _q,
        count = 0,
        self = this,
        criteria;
  
    $.each(this.criterias, function(){
      if(this.active){
        vals = self.getSelectedValues(this, self);
  
        if(vals && vals.length){
          _q = ($.isArray(vals) && !this.type) ? (this._q + '.$in') : this._q;
          query[_q] = vals ;
          count = count + 1;
        }
      }
    });
  
    this.anyFilterSelected = count > 0;
    criteria = count ? this.Model.where(query) : this.Model;
    this.execCallback('shortResult', criteria);
    this.last_result = criteria.all;
  
    if(this.searchFilter(this.last_result)){
      return query;
    }
  
    this.show(this.last_result);
    this.renderPagination(this.last_result.length);
    this.execCallback('afterFilter', this.last_result, JsonQuery.blankClone(this.Model, this.last_result));
  
    return query;
  };
  
  F.show = function(result, type){
    var i = 0, l = result.length;
  
    if(this.has_pagination){
  
      i = this.page.perPage *(this.page.currentPage - 1);
      l = i + this.page.perPage;
  
      this.$container.html("");
  
      for(i; i < l; i++){
        this.renderItem(result[i], i);
      }
  
      return;
    }
  
    $('.fjs_item').hide();
  
    for(i; i < l; i++){
      $('#fjs_' + result[i]._fid).show();
    }
    
  };
  
  F.filterTimer = function(timeout){
    var self = this;
  
    if (this.filterTimeoutId) {
      clearTimeout(this.filterTimeoutId);
    }
  
    this.filterTimeoutId = setTimeout(function() {
      self.filter();
    }, timeout);
  };
  
  F.bindEvent = function(ele, eventName){
    var self = this;
  
    $(document).on(eventName, ele, function(e){
      self.filterTimer(self.opts.timeout || 35);
    });
  
  };
  F.unbindEvents = function(data){
	var self = this;
	self.criterias = [];
	self.Model.records = [];
	self.Model.records = data;
  };
  
  F.initSearch = function(opts){
    if(!opts || !opts.ele){
      return;
    }
  
    if(!opts.start_length){
      this.opts.search.start_length = 2
    }
  
    this.$search_ele = $(this.opts.search.ele);
  
    if(this.$search_ele.length){
      this.has_search = true;
      this.searchFn = this.buildSearchFn(opts.fields);
      this.bindEvent(opts.ele, 'keyup');
    }
  };
  
  F.buildSearchFn = function(fields){
     var self = this, getterFns = [];
  
     if(fields){
       $.each(fields, function(){
         getterFns.push(self.Model.getterFns[this]);
       })
     }else{
       $.each(self.Model.getterFns, function(i, fn){
         getterFns.push(fn);
       });
     }
  
     return function(text, record){
       text = text.toLocaleUpperCase();
  
       for(var i = 0, l = getterFns.length; i < l; i++){
  
         if((getterFns[i](record) + '').toLocaleUpperCase().indexOf(text) > -1){
           return true;
         }
  
       }
       return false;
     }
  };
  
  F.lastSearchResult = function(){
    if (this.search_text.length > this.opts.search.start_length){
      return this.search_result;
    }else{
      return this.lastResult();
    }
  }
  
  F.searchFilter = function(records) {
    if(!this.has_search){
      return;
    }
  
    var result;
    this.search_text =  $.trim(this.$search_ele.val());
  
    if (this.search_text.length < this.opts.search.start_length){
      return false;
    }
  
    result = this.search(this.search_text, records || this.lastResult());
  
    this.search_result = result;
    this.show(result);
    this.renderPagination(result.length)
    this.execCallback('afterFilter', result, JsonQuery.blankClone(this.Model, result));
  
    return true;
  };
  
  F.search = function(text, records){
    text = text.toLocaleUpperCase();
  
    var result = [];
  
    for(var i = 0, l = records.length; i < l; i++){
      if(this.searchFn(text, records[i])){
        result.push(records[i]);
      }
    }
  
    return result;
  };
  
  //Streaming
  F.setStreaming = function(opts){
    if(!opts) {return;}
  
    this.opts.streaming = opts;
  
    if(opts.data_url){
      opts.stream_after = (opts.stream_after || 2)*1000;
      opts.batch_size = opts.batch_size || false;
      this.streamData(opts.stream_after);
    }
  
  };
  
  var fetchData = function(){
    var self = this,
        params = this.opts.params || {},
        opts = this.opts.streaming;
  
    params.offset = this.recordsCount;
  
    if (opts.batch_size) {
      params.limit = opts.batch_size;
    }
  
    if (this.has_search){
      params['q'] = $.trim(this.$search_ele.val());
    }
  
    $.getJSON(opts.data_url, params).done(function(records){
      if (params.limit != null && (!records || !records.length)){
        self.stopStreaming();
      }else{
        self.setStreamInterval();
        self.addRecords(records);
      }
  
    }).fail(function(e){
        self.stopStreaming();
    });
  };
  
  F.setStreamInterval = function(){
    var self = this;
  
    if(self.opts.streaming.stop == true){ return; }
  
    self.streamingTimer = setTimeout(function(){
      fetchData.call(self);
    }, self.opts.streaming.stream_after);
  };
  
  F.stopStreaming = function(){
    this.opts.streaming.stop = true;
  
    if (this.streamingTimer){
      clearTimeout(this.streamingTimer);
    }
  };
  
  F.resumeStreaming = function(){
    this.opts.streaming.stop = false;
    this.streamData(this.opts.streaming.stream_after);
  };
  
  F.streamData = function(time){
    this.setStreamInterval();
  
    if(!this.opts.streaming.batch_size){
      this.stopStreaming();
    }
  };
  
  F.clear = function(){
    if(this.opts.streaming){
      this.stopStreaming();
    }
  
    $.each(this.criterias, function(){
      $(document).off(this.event, this.ele);
    })
  
    if(this.opts.search){
      $(document).off('keyup', this.opts.search.ele);
    }
  
    if (this.filterTimeoutId) {
      clearTimeout(this.filterTimeoutId);
    }
  }
  
  F.initPagination = function(){
    var self = this,
        opts = this.opts.pagination;
  
    if(!opts.perPage){
      opts.perPage = {}
    }
  
    if(!opts.perPage.values){
      opts.perPage.values = [10, 20, 30];
    }
  
    this.page = { currentPage: 1, perPage: opts.perPage.values };
  
    this.paginator = new Paginator(this.lastResult().length, this.opts.pagination, function(currentPage, perPage){
      self.page = { currentPage: currentPage, perPage: perPage }
  
      if(self.has_search){
        self.show(self.lastSearchResult())
      }else{
        self.show(self.lastResult())
      }
    })
  
    this.filter();
  };
  
  F.renderPagination = function(totalCount){
    if(this.has_pagination){
      this.paginator.setRecordCount(totalCount);
    }
  };
  
  F.parseValues = function(field, values){
    var type = this.Model.schema[field];
  
    if(type == 'Number'){
      return $.map(values, function(v){ return Number(v) }); 
    }else if(type == 'Boolean'){
      return $.map(values, function(v){ return (v == 'true' || v == true) }); 
    }else{
      return values;
    }
  };
  

  var Paginator = function(recordsCount, opts, onPagination) {
    var paginationView;
  
    this.recordsCount = recordsCount;;
    this.opts = opts;
    this.$container = $(this.opts.container);
  
    if(this.opts.paginationView){
      paginationView = $(this.opts.paginationView).html();
    } else {
      paginationView = views.pagination;
    }
  
    this.paginationTmpl = templateBuilder(paginationView);
  
    this.currentPage = 1;
    this.onPagination = onPagination;
    this.initPerPage();
    this.render();
    this.bindEvents();
  };
  
  var P = Paginator.prototype;
  
  P.bindEvents = function(){
    var self = this;
  
    $(this.opts.container).on('click', '[data-page]', function(e){
      self.setCurrentPage($(this).data('page'));
      e.preventDefault();
    });
  };
  
  P.totalPages = function(){
    return Math.ceil(this.recordsCount/this.perPageCount);
  };
  
  P.setCurrentPage = function(page){
    page = this.toPage(page)
    this.prevCurrentPage = this.currentPage;
    this.currentPage = page;
    this.paginate(page);
  };
  
  P.setRecordCount = function(total){
    this.recordsCount = total;
    this.setCurrentPage(this.currentPage);
  }
  
  P.toPage = function(page){
    if(page == 'first'){
      return 1;
    }
  
    if(page == 'last'){
      return this.totalPages();
    }
  
    if(page == 'next'){
      var next_page = this.currentPage + 1;
      return (next_page > this.totalPages() ? this.currentPage : next_page);
    }
  
    if(page == 'prev'){
      var prev_page = this.currentPage - 1;
      return (prev_page <= 0 ? this.currentPage : prev_page);
    }
    
    return parseInt(page);
  };
  
  P.paginate = function(page){
    this.render();
    this.onPagination(this.currentPage, this.perPageCount);
  };
  
  P.render = function(){
    var pages  = this.getPages();
  
    if(this.currentPage > pages.totalPages){
      this.currentPage = pages.totalPages;
    }
  
    if(this.currentPage == 0){
      this.currentPage = 1;
    }
  
    pages.currentPage = this.currentPage;
    this.$container.html(this.paginationTmpl(pages))
  };
  
  function makePageArray(start, end){
    var i = start, pages = [];
  
    for(i; i <= end; i++){
      pages.push(i);
    }
    
    return pages;
  }
  
  P.getPages = function () {
    var total = this.totalPages();
      
    if(!this.opts.visiblePages){
      return { totalPages: total, pages: makePageArray(0, total), self: this };
    }
  
    var half = Math.floor(this.opts.visiblePages / 2);
    var start = this.currentPage - half + 1 - this.opts.visiblePages % 2;
    var end = this.currentPage + half;
  
    // handle boundary case
    if (start <= 0) {
      start = 1;
      end = this.opts.visiblePages;
    }
  
    if (end > total) {
      start = total - this.opts.visiblePages;
  
      if(start <= 0){
        start = 1;
      }
  
      end = total; 
    }
  
    return { currentPage: this.currentPage, totalPages: total, pages: makePageArray(start, end), self: this };
  },
  
  P.initPerPage = function(){
    var opts = this.opts.perPage,
        template,
        html,
        ele,
        event_type,
        self = this;
  
    this.perPageCount = opts.values[0];
  
    template = opts.perPageView ? $(opts.perPageView).html() : views.per_page;
    html = templateBuilder(template)({ values: opts.values });
    $(opts.container).html(html);
  
    ele = $(opts.container).find('[data-perpage]')
    event_type = ele.get(0).tagName == 'SELECT' ? 'change' : 'click';
  
    $(opts.container).on(event_type, '[data-perpage]', function(e){
      var value = parseInt($(this).val() || $(this).data('value'));
      self.setPerPage(value)
      e.preventDefault();
    });
  };
  
  P.setPerPage = function(value){
    this.perPageCount = value;
    this.setCurrentPage(this.currentPage);
  }
  

  $.fn.filterjs = function(records, options) {
    var $this = $(this);
  
    if (!$this.data('fjs')){
      $this.data('fjs', FilterJS(records, $this, options));
    }
  };
  
  


  var list = [];
  var views = [];
  var FilterJS = function(records, container, options) {
    var fjs = new FJS(records, container, options);
    list.push(fjs);

    return fjs;
  };

  FilterJS.list = list;
  FilterJS.templateBuilder = templateBuilder;

  window.FilterJS = FilterJS;

  views['pagination'] = '<nav>  <ul class="pagination">    <% if(currentPage > 1) { %>      <li> <a href="#" data-page="first" aria-label="First"><span aria-hidden="true">First</span></a> </li>      <li><a href="#" data-page="prev" aria-label="Previous"><span aria-hidden="true">&larr; Previous</span></a></li>    <% } %>    <% for(var i = 0, l = pages.length; i < l; i++ ){ %>      <li class="<%= pages[i] == currentPage ? \'active\' : \'\' %>">        <a href="#" data-page="<%= pages[i] %>"><%= pages[i] %></a>      </li>    <% } %>    <% if( currentPage < totalPages ) { %>      <li><a href="#" data-page="next" aria-label="Next"><span aria-hidden="true">Next &rarr;</span></a></li>      <li><a href="#" data-page="last" aria-label="Last"><span aria-hidden="true">Last</span></a></li>    <% } %>  </ul></nav>'; 
  views['per_page'] = '<select size="1" name="per_page" data-perpage="true" class="per-page">  <% for(var i = 0; i < values.length; i++ ){ %>    <option value="<%= values[i] %>"><%= values[i] %></option>  <% } %></select>'; 

  /*
   * Find html tag and parse options for filter
   */
  function getElementWithOptions(name, hasMany){
    var attr  = "fjs-"+ name;
    var $eles = $("[" + attr + "]");
    var options = []; 
  
    if(!$eles.length){
      return;
    }
  
    $.each($eles, function(){
      var $ele = $(this);
      var option = { ele: $ele };
      var optionStr = $ele.attr(attr);
  
      options.push(option);
  
      if(!optionStr){
        return options;
      }
  
      $.each(optionStr.split(','), function(i, opt){
        var kv = opt.split("=");
        option[kv[0]] = kv[1];
      })
    })
  
    return hasMany ? options : options[0];
  };
  
  FilterJS.auto = function(records, callbacks){
    var options = {};
    var container = getElementWithOptions("items");
    var fjs,
        search, 
        template,
        criterias;
    
    if(!container || !container.template){
      return;
    }
  
    options.template = container.template
    search = getElementWithOptions("search");
    
    if(search){
      if(search.fields){
        search.fields = search.fields.split(',');
      }
      options.search = search;
    }
  
    if(callbacks){
      options.callbacks = callbacks;
    }
  
    fjs = FilterJS(records, container.ele, options) 
  
    criterias = getElementWithOptions("criteria", true);
  
    if(criterias){
      fjs.addCriteria(criterias);
    }
  
    return fjs
  };
  
  


})( jQuery, window , document );

//validate Loyality Details
$('body').on('click','._ltyInfo',function(){
	var loyaltyInputElm = $('#TP').find('.apply');
	var minimumLytpnts = parseInt($('#minimumLytPnts').val());
	var maximumLytPnts = parseInt($('#maximumLytPnts').val());
	if($('#ltyPnts').val()==''){
		growl_alert(i18n.t("enter_loyality"));
		$('#ltyPnts').focus();
		return;
	}
	if (!/^[0-9]+$/.test($('#ltyPnts').val())){
		growl_alert(i18n.t("enter_valid_loyality"));
		$('#ltyPnts').focus();
		return;
	}
	if(parseInt($('#ltyPnts').val())<minimumLytpnts){
		growl_alert(i18n.t("enter_valid_loyality"));
		$('#ltyPnts').focus();
		return;
	}
	if(parseInt($('#ltyPnts').val())>maximumLytPnts){
		growl_alert(i18n.t("enter_valid_loyality"));
		$('#ltyPnts').focus();
		return;
	}

	if(parseInt($('#ltyPnts').val()) > parseInt($('#avlblLtyPts').val())){
		growl_alert(i18n.t("enter_valid_loyality"));
		$('#ltyPnts').focus();
		return;
	}
	$("._ltyInfo").prop('disabled', true);
	var ltyPnts = $('#ltyPnts').val();
	if($('#ltyPnts').val()!=''){
		var product = '';
		if($(this).attr('data-pName') == 'F'){
			product = 'Flight';
		}else if($(this).attr('data-pName') == 'H'){
			product = 'Hotel';
		}else if($(this).attr('data-pName') == 'bnpl'){
			product = 'Hotel';
		}else{
			product = 'FPH';
		}
	 	var data = {
	 		reqPoints: ltyPnts,
	 		userid: $(this).attr('data-userid'),
	 		product: product,
	 		bookingCode: $(this).attr('data-bid'),
	 		bookingAmount: $(this).attr('data-bamt')
	 	};
	 	console.log('{data:data}');
	 	console.log(data);
	 	var pid = cmnGetURLQueryStr('pid');
	  $.post('/loyalty/validateLtyPoints',{data:data,pid:pid},function(res){

	  	console.log('/loyalty/validateLtyPoints');
	  	console.log(res);
	  	var status =  false;
		if(res != "" && res !== null){
			status = true;
			if(res.response.status == "FAIL"){
				status = false;
			}
		}
		if(status){
			loyaltyPnts(ltyPnts);
			var resObj = {};
	     	resObj.response = res.response;

			if(res.resObj.paymentObj.product == "F"){
				resObj.priceDetails =  res.resObj.flightItineraries.jsonFlightPrice;
			}if(res.resObj.paymentObj.product == "H"){
				resObj.priceDetails =  res.resObj.paymentObj;
			}if(res.resObj.paymentObj.product == "bnpl"){
				resObj.priceDetails =  res.resObj.paymentObj;
			}if(res.resObj.paymentObj.product == 'FPH'){
				var priceData = {
				 sarAmt : res.resObj.sarPrice,
				 uc:res.resObj.price.uc
				};
				console.log('priceData---',priceData);
				resObj.priceDetails = priceData;
			}if(res.resObj.paymentObj.product == 'TRANSFER'){
				resObj.priceDetails =  res.resObj.paymentObj;
			}

			var bnpl =  false;
			if(res.resObj && res.resObj.returnObj && res.resObj.paymentObj.product == "H"){
				if(res.resObj.returnObj.bnpl && res.resObj.returnObj.bnpl!=null){
					bnpl = true;
				}else{
					bnpl = false;
				}
			}

			var req ={
				loyaltyResData:resObj,
				pid:pid,
				product : res.resObj.paymentObj.product,
				paymentObj:  res.resObj.paymentObj,
				bnpl : bnpl
			}

			$.post('/loyalty/saveloyaltydetails',{req:req},function(res){
				 var loyaltyInfo  = JSON.parse(res.result.data);
				 
				 var totalAmountPaidByCouponAndQitaf = false;
				 var flyinRewardDiscount = loyaltyInfo.loyaltydetails.redemptionAmount;          
				 var couponDiscount = 0;
				 var qitafDiscount = 0;

				if(loyaltyInfo.qitafObj && loyaltyInfo.qitafObj.qitafSuccess)
				{
					qitafDiscount=loyaltyInfo.qitafObj.redeemAmount;
				}
				if(loyaltyInfo.coupondetails){
					couponDiscount = loyaltyInfo.coupondetails.deductSarAmount;
				}
				var totalDiscount = parseFloat(flyinRewardDiscount) + parseFloat(couponDiscount) + parseFloat(qitafDiscount);
				if((parseFloat(totalDiscount)===parseFloat(loyaltyInfo.paymentObj.sarAmount)) 
						|| (parseFloat(totalDiscount)>parseFloat(loyaltyInfo.paymentObj.sarAmount)))
				{
					$.post('/loyalty/persistLoyaltydetails',{pid:loyaltyInfo.paymentObj.pid},function(res){
						if(res.status==='error'){
							location.href="/flight/error";
						}
					});

					if(res.result.product == "FLIGHT"){
						  dontRefreshPopup();
						  loadFlightConfirmationPage({pid:loyaltyInfo.paymentObj.pid,uuid:loyaltyInfo.uuid});
					 }else if(res.result.product == "HOTEL"){
						  dontRefreshPopup();
						  loadHotelConfirmationPage(loyaltyInfo.paymentObj.pid);
					 }else if(res.result.product == "FPH"){
					 	dontRefreshPopup();
					 	loadPackageConfirmationPage(loyaltyInfo.paymentObj.pid, loyaltyInfo.echotoken);
					 }

				}else{
					if(res.result.product == "FLIGHT"){
						flightSerVar.loadFlightLoyaltyData(res.result.data);
					}else if(res.result.product == "HOTEL"){
						hotelTemplateVar.loadHotelLoyaltyData(res.result.data);
					}else if(res.result.product == "FPH"){
						fphService.updateLoyaltyDetails(res.result.data);
					}else if(res.result.product == "TRANSFERS"){
						transferService.loadTransferLoyaltyData(res.result.data);
					}
					$('#TP').find('._lylttotpnts').text(loyaltyInfo.userLoyaltyRedmInfo.loyaltyUserInfo.totalPoints);
					$('.tp-points').append('<div class="applyed lyltapplied"><ul> <li><span class="cpnCode"><em></em>'+i18n.t("flyinRwrdBurn")+' '+loyaltyInfo.loyaltydetails.redemptionPoints+' '+i18n.t("poiNts")+'</span> </li> <li><span class="grn">'
					+i18n.t('discountAppliedFor')+' '+loyaltyInfo.loyaltydetails.redemptionUCAmount+' '+i18n.t(loyaltyInfo.paymentObj.uc)+'</span></li> <li class="rmv removelylt"><a href="javascript:void(0);"><em></em><span>'+i18n.t('remove')+'</span></a></li> </ul></div>');
					//$('.invalidcpn').hide();
					//$('.cpnapplied').show();
					loyaltyInputElm.hide();

					//INSTALLMENT PAYMENT SECTION 
					var totalSarAmount = parseFloat(req.paymentObj.sarAmount - loyaltyInfo.loyaltydetails.redemptionAmount).toFixed(2);
					if(totalSarAmount < 1000){
					$('._installments').hide();
					}else{
					if(req.paymentObj.showInstallment){
					$('._installments').show();
					}else{
					$('._installments').hide(); 
					}
					}

					setTimeout(function(){	
					//fltReviewSummery();

					},200);

					//BNPL SECTION 
					$('.bnplSection').hide();
					
				}
			});
		}else{
			//BNPL SECTION
			if(typeof req != 'undefined'){
				if(req.qitafObj){
					if(req.qitafObj.qitafSuccess)
					{
						$('.bnplSection').hide();
					}
				}else{
					if(req.paymentObj.product == 'bnpl' && req.paymentObj.product == 'ma'){
						$('.bnplSection').hide();
					}else{
						if(req.paymentObj.product == 'H' && req.bnpl){
							$('.bnplSection').show();
						}
					}
				}
			}
			$("._ltyInfo").prop('disabled', false);
		}
	  	/*if(&& res.status == "SUCCESS"){
		  	$('._dispLtyAmt').text(res.redemptionAmount);
		  	$('._dispLtyBlk').show();
	  	}*/
	  });
	}
});

//validate Coupon Details
$('body').on('click','._couponInfo',function(){
	$("#couponCode").removeClass("error");
	$('.invalidcpn, .emptycpn').hide();
  var couponCode = $('#couponCode').val();
  var couponInputElm = $('#AC').find('.apply');
  var pid = cmnGetURLQueryStr('pid');
  $("#cpnApplied").val(couponCode);
  
  if(couponCode!=''){
  $.post('/coupons/validatecoupon',{couponCode:couponCode,pid:pid},function(res){
	   var status =  false;
	   if(res.response !== null){
		  status = true;
		  var cpnRes = JSON.parse(res.response);
		  if(!cpnRes.status ||cpnRes.status == "failure"){
			  status = false;
		  }
	   }
	  if(status){
		  var resObj = {};
	      resObj.response = res.response;
	 
		  resObj.email = res.resObj.paymentObj.emailId;	  
		  if(res.resObj.paymentObj.product == "F"){
			 resObj.priceDetails =  res.resObj.flightItineraries.jsonFlightPrice;
		  }if(res.resObj.paymentObj.product == "H"){
			 resObj.priceDetails =  res.resObj.paymentObj;
		  }if(res.resObj.paymentObj.product == "bnpl"){
			 resObj.priceDetails =  res.resObj.paymentObj;
		  }if(res.resObj.paymentObj.product == 'FPH'){
			 var priceData = {
				 sarAmt : res.resObj.sarPrice,
				 uc:res.resObj.price.uc
			 };
			 console.log('priceData---',priceData);
			 resObj.priceDetails = priceData;
		  }if(res.resObj.paymentObj.product == 'TRANSFER'){
		  	resObj.priceDetails =  res.resObj.paymentObj;
		  }
		  
		  var bnpl =  false;
	      if(res.resObj && res.resObj.returnObj && res.resObj.paymentObj.product == "H"){
			  if(res.resObj.returnObj.bnpl && res.resObj.returnObj.bnpl!=null){
				  bnpl = true;
			  }else{
				  bnpl = false;
			  }
		  }
		  
		   var req ={
						couponResData:resObj,
						pid:pid,
						product : res.resObj.paymentObj.product,
						paymentObj:  res.resObj.paymentObj,
						bnpl : bnpl
	                }
	  
		   
		   
			 	
			   $.post('/coupons/savecoupondetails',{req:req},function(res){
				 var cpnInfo  = JSON.parse(res.result.data);
				 
				 var totalAmountPaidByCouponAndQitaf = false;            
				 var couponDiscount = cpnInfo.coupondetails.deductSarAmount;
				 var qitafDiscount = 0;
				 
				if(cpnInfo.qitafObj && cpnInfo.qitafObj.qitafSuccess)
				{
					qitafDiscount=cpnInfo.qitafObj.redeemAmount;
				}	                    
				var totalDiscount = parseFloat(couponDiscount) + parseFloat(qitafDiscount);
				if((parseFloat(totalDiscount)===parseFloat(cpnInfo.paymentObj.sarAmount)) 
						|| (parseFloat(totalDiscount)>parseFloat(cpnInfo.paymentObj.sarAmount)))
				{
					$.post('/coupons/persistCoupondetails',{pid:cpnInfo.paymentObj.pid},function(res){
						if(res.status==='error'){
							location.href="/flight/error";
						}
					});

					if(res.result.product == "FLIGHT"){
						  dontRefreshPopup();
						  loadFlightConfirmationPage({pid:cpnInfo.paymentObj.pid,uuid:cpnInfo.uuid});
					 }else if(res.result.product == "HOTEL"){
						  dontRefreshPopup();
						  loadHotelConfirmationPage(cpnInfo.paymentObj.pid);
					 }else if(res.result.product == "FPH"){
					 	dontRefreshPopup();
					 	loadPackageConfirmationPage(cpnInfo.paymentObj.pid, cpnInfo.echotoken);
					 }else if(res.result.product == "TRANSFERS"){
					 	dontRefreshPopup();
							var pid = $('#TTDP').attr('data-pid');
							var echoToken = $('#TTDP').attr('data-et');
							var nd = false;
							var transNextDate='';
							var arrTransFTime = parseInt($('#arrTransFTime').val());
							var depTransFTime = parseInt($('#depTransFTime').val());
							var transDate = $('#transRevDate').val().split('T')[0];

							if(depTransFTime<arrTransFTime){
							nd=true;
							var nextDate = new Date(transDate);
							var numberOfDaysToAdd = 1;
							nextDate.setDate(nextDate.getDate() + numberOfDaysToAdd);
							transNextDate = moment(nextDate).format('YYYY-MM-DD');
							}
							var aal=$('#arrAirline').val();
							var afi=$('#arrFlightno').val();

							if(typeof $('#arrTransFTime').val() != 'undefined'){
							var adt=(parseInt($('#arrTransFTime').val())>9 ? transDate+'T'+$('#arrTransFTime').val()+':00:00' : transDate+'T0'+$('#arrTransFTime').val()+':00:00');
							}

							var dal=$('#depAirline').val();
							var dfi=$('#depFilghtno').val();

							if(typeof $('#depTransFTime').val() != 'undefined'){
							var ddt=(parseInt($('#depTransFTime').val())>9 ? (nd ? transNextDate : transDate)+'T'+$('#depTransFTime').val()+':00:00' : (nd ? transNextDate : transDate)+'T0'+$('#depTransFTime').val()+':00:00');
							}

							var extns={
							"aal": aal,
							"afi": afi,
							"adt": adt,
							"dal": dal,
							"dfi": dfi,
							"ddt": ddt
							};
							async.parallel([
								function(callback){
									$.get('/transfer/updateTransferBookRequest',{echoToken:echoToken,pid:pid,extns:extns},function(res){
										if(res==null){
										}else{
											callback(res);
										}
									});
								}
							],
							function(err){
					 			loadTransferConfirmationPage(cpnInfo.paymentObj.pid, cpnInfo.echotoken, cpnInfo.loggerId);
					 		});
					 }

					 
				}
				else{
				 
				 if(res.result.product == "FLIGHT"){
					flightSerVar.loadFlightCouponData(res.result.data);
				 }else if(res.result.product == "HOTEL"){
					hotelTemplateVar.loadHotelCouponData(res.result.data);
				 }else if(res.result.product == "FPH"){
					fphService.updateCouponDetails(res.result.data);
				 }else if(res.result.product == "TRANSFERS"){
				 	transferService.loadTransferCouponData(res.result.data);
				 }
				 $('#AC').append('<div class="applyed cpnapplied"><ul> <li><span class="cpnCode"><em></em>'
				 +cpnInfo.coupondetails.couponcode+'</span></li> <li><span class="grn">'
				 +i18n.t('couponSuccess')+' <strong>'+i18n.t(cpnInfo.paymentObj.uc)+' <elm class="_priceTag">'+
				 +cpnInfo.coupondetails.deductAmount+'</elm> </strong></span></li> <li class="rmv removecpn"><a href="javascript:void(0);"><em></em><span>'+i18n.t("remove")+'</span></a></li> </ul></div>');
				 $('.invalidcpn').hide();
				 //$('.cpnapplied').show();
				 couponInputElm.hide();
				 
				//INSTALLMENT PAYMENT SECTION 
				var totalSarAmount = parseFloat(req.paymentObj.sarAmount - cpnInfo.coupondetails.deductSarAmount).toFixed(2);
				if(totalSarAmount < 1000){
					$('._installments').hide();
				}else{
					if(req.paymentObj.showInstallment){
						$('._installments').show();
					}else{
						$('._installments').hide(); 
					}
				}
				
				setTimeout(function(){	
					//	fltReviewSummery();

							},200);
							
				//BNPL SECTION 
				$('.bnplSection').hide();				
			  }
			});
		 }else{
			  $('.cpnapplied').slideUp();
			  $('.invalidcpn').slideDown();
			  
			//BNPL SECTION
			if(typeof req != 'undefined'){
				if(req.qitafObj){
					if(req.qitafObj.qitafSuccess)
					{
						$('.bnplSection').hide();
					}
				}else{
					if(req.paymentObj.product == 'bnpl' && req.paymentObj.product == 'ma'){
						$('.bnplSection').hide();
					}else{
						if(req.paymentObj.product == 'H' && req.bnpl){
							$('.bnplSection').show();
						}
					}
				}
			}
		  }
	  });
  }else{
	  $('.emptycpn').slideDown();
	 console.log('please enter the coupon code');
  }
});


/**
*@description : Appliy credit card discount function
*
*/
$('body').on('click', '._ccdApply', function(){
	var ccNumber= $(".ccNumber").val();
	var pid = cmnGetURLQueryStr('pid');
	if(ccNumber === '' || (ccNumber !== '' && ccNumber.length>6)){
		growl_alert(i18n.t("entrFrst6Digits"));
	}
	else{
		$.post('/discounts/validateCCD',{ccNumber:ccNumber,pid:pid},function(res){
			if(res.status == 'SUCCESS'){
				var response=res.response;
				 if(response.paymentObj.product == "F"){
					flightSerVar.loadFlightCCDiscountData(response);
				 }else if(response.paymentObj.product == "H" || response.paymentObj.product == "bnpl"){
					hotelTemplateVar.loadHotelCCDiscountData(response);
				 }else if(response.paymentObj.product == "FPH"){
					//fphService.updateCouponDetails(response);
				 }else if(response.paymentObj.product == "TRANSFERS"){
				 	//transferService.loadTransferCouponData(response);
				 }
				  $('._ccnotvalid').hide();
				 // $('._ccdsuccess').show();				
				  
				  $('.deductAmt').empty();
				  var credit_card_number=ccNumber.slice(0,4)+' '+ccNumber.slice(4,6);
				  $('.credit_card_number').val(credit_card_number);
				  
				  var discountAmount=response.paymentObj.uc+' '+response.ccdInfo.deductAmount;
				  //$('.deductAmt').text(discountAmount);
				 
				 $("#ccDiscList2").append('<li class="green-txt _ccdsuccess" style="display: block;"><span>'+i18n.t('congrats')+'<small>'+i18n.t('youGotDisc')+'<span class="deductAmt">'+discountAmount+'</span></small><a href="javascript:void(0);" data-toggle="modal" data-target="#ccDiscPop"><elm class="flaticon-close7"></elm></a></span></li>');
				  
				 
				 
				 
				  if(response.ccdInfo && response.ccdInfo.combinedDiscounts && response.ccdInfo.combinedDiscounts.length > 0){
					  var enableCoupon=false;
					  var enableLoyalty=false;
					  for(var i in response.ccdInfo.combinedDiscounts){
						  if(response.ccdInfo.combinedDiscounts[i] == 'coupons'){
							  enableCoupon=true;
						  }
						  else if(response.ccdInfo.combinedDiscounts[i] == 'loyalty'){
							  enableLoyalty=true;
						  }
					  }
					  if(!enableCoupon){
						  $('.removecpn').trigger("click");
						  //$('.acTab').hide();
					  }
					  if(!enableLoyalty){
						   //$('._flyinRewards').hide();
					  }
					  
				  }
				  else{
					   $('.acTab').hide();
					   $('._flyinRewards').hide();
				  }
				  $('.bnplSection').hide();
				
			}
			else{
				$('._ccnotvalid').show();
				if(response.product == "H"){
					hotelTemplateVar.loadHotelCCDiscountData(res);
				}
				
			}
		});
	}
});

/**
*@description : Validate credit card number when user applied credit card discount
* The first 6 digits of credit card number should match with discount applied credit card 
* number. If not macth show the popup
*/
 $('body').on('keyup', '.credit_card_number', function(){
	if($('._ccdsuccess').is(':visible')){
		var crediCardNumber=$(this).val().replace(/\s+/g, '').slice(0,6);
		var ccdNumber=$('.ccNumber').val();
		if(ccdNumber == undefined || ccdNumber === ''){
			ccdNumber=$('#ccdDetails').val();
		}
		
		if(crediCardNumber !== ccdNumber){
			 $('#ccDiscPop').modal({
			   show: true,
			   keyboard: false,
			   backdrop:'static'
			 });
		}
	}
	
}); 

/**
*@description : Remove Credit card discount
* 
*/
$('body').on('click', '._removeCCD', function(){
	var pid = cmnGetURLQueryStr('pid');
	$.post('/discounts/removeCCD',{pid:pid},function(res){
			if(res.status == 'SUCCESS'){
				var response=res.response;
				  $('._ccdsuccess').hide();
				  $('.deductAmt').empty();
				  $('.credit_card_number').val('');
				  $('.ccNumber').val('');
				   $('.acTab').show();
				   $('._flyinRewards').show();
				 if(response.paymentObj.product == "F"){
					flightSerVar.loadFlightCCDiscountData(response);
				 }else if(response.paymentObj.product == "H" || response.paymentObj.product === 'bnpl'){
					hotelTemplateVar.loadHotelCCDiscountData(response);
				 }else if(response.paymentObj.product == "FPH"){
					//fphService.updateCouponDetails(response);
				 }else if(response.paymentObj.product == "TRANSFERS"){
				 	//transferService.loadTransferCouponData(response);
				 }
				 
				
			}
			else{
				
			}
			
		});
});

/**
*@description : If already credit card discount applied, user should do payment with same card
* We won't allow other payment options 
*/
$( "._amxTransfer, ._sadadOnline, ._fSadadOnline, ._installiPayment, ._payAtStore, ._bTransfer" ).click(function() {
	var ccDAppliedNum=$('.ccNumber').val();
	if(ccDAppliedNum == undefined || ccDAppliedNum === ''){
	 ccDAppliedNum=$('#ccdDetails').val();
	}
	if(ccDAppliedNum && $('._ccdsuccess').is(':visible') ){
		$('#ccDiscPop').modal({
		   show: true,
		   keyboard: false,
		   backdrop:'static'
		 });
	}
});

//Remove Coupon Details
$('body').on('click', '.removecpn', function(){
	$("#cpnApplied").val("");
	console.log('coupon service layer');
	var pid = cmnGetURLQueryStr('pid');
	$('.cpnapplied').hide();
	$('.invalidcpn').hide();
	var couponInputElm = $('#AC').find('.apply');
	$.post('/coupons/removeCoupondetails',{pid:pid},function(res){
		//console.log(res);
		//console.log(JSON.stringify(res));
		//console.log("removeCoupondetails");
		if(res.response==='success'){
			couponInputElm.slideDown();
			setTimeout(function(){
				$('#AC').closest('.resTabPanel').css({'height':$('#AC').parents('.tarData').height()+50});	
			},500);
			if(res.result.product == "FLIGHT"){
				console.log("coupon service layer");
			     flightSerVar.loadFlightCouponData(res.result.data);
			 }else if(res.result.product == "HOTEL"){
				 hotelTemplateVar.loadHotelCouponData(res.result.data);
			 }else if(res.result.product == "FPH"){
				 fphService.removeCoupon(res.result.data);
			 }else if(res.result.product == "TRANSFERS"){
				 transferService.loadTransferCouponData(res.result.data);
			 }
			var responseData = JSON.parse(res.result.data);
			
			//INSTALLMENT PAYMENT SECTION 
			var totalSarAmount = responseData.paymentObj.sarAmount;
			if(totalSarAmount < 1000){
				$('._installments').hide();
			}else{
				if(responseData.paymentObj.showInstallment){
					$('._installments').show();
				}else{
					$('._installments').hide(); 
				}
			}
			
			if((responseData.qitafObj && responseData.qitafObj.qitafSuccess) || (responseData.loyaltydetails)){
				  $('.bnplSection').hide();
			}else{
				if(responseData.paymentObj.product == 'bnpl'){
					  $('.bnplSection').hide();
				  }else{
					  $('.bnplSection').show();
					  $('._bnpl').removeClass('active');
					  $('._bnpl').next('.panel-collapse').addClass('collapse');
				  }
			}
			
			setTimeout(function(){	
					//fltReviewSummery();

						},200);
						
		}
	}); 
	$('.travellerFareInfo .cupnCode').remove();
	
});
//Remove Loyalty Details
$('body').on('click', '.removelylt', function(){
	$("._ltyInfo").prop('disabled', false);
	var pid = cmnGetURLQueryStr('pid');
	$('.lyltapplied').hide();
	//$('.invalidcpn').hide();
	var loyaltyInputElm = $('#TP').find('.apply');
	$.post('/loyalty/removeLoyaltydetails',{pid:pid},function(res){
		var result = JSON.parse(res.result.data);
		$('#TP').find('._lylttotpnts').text(result.userLoyaltyRedmInfo.loyaltyUserInfo.totalPoints);
		if(res.response==='success'){
			loyaltyInputElm.slideDown();
			if(res.result.product == "FLIGHT"){
			     flightSerVar.loadFlightLoyaltyData(res.result.data);
			 }else if(res.result.product == "HOTEL"){
				 hotelTemplateVar.loadHotelLoyaltyData(res.result.data);
			 }else if(res.result.product == "FPH"){
				 fphService.removeLoyalty(res.result.data);
			 }else if(res.result.product == "TRANSFERS"){
				 transferService.loadTransferCouponData(res.result.data);
			 }
			var responseData = JSON.parse(res.result.data);
			
			//INSTALLMENT PAYMENT SECTION 
			var totalSarAmount = responseData.paymentObj.sarAmount;
			if(totalSarAmount < 1000){
				$('._installments').hide();
			}else{
				if(responseData.paymentObj.showInstallment){
					$('._installments').show();
				}else{
					$('._installments').hide(); 
				}
			}
			
			if((responseData.qitafObj && responseData.qitafObj.qitafSuccess) || (responseData.coupondetails)){
				  $('.bnplSection').hide();
			}else{
				if(responseData.paymentObj.product == 'bnpl'){
					  $('.bnplSection').hide();
				  }else{
					  $('.bnplSection').show();
					  $('._bnpl').removeClass('active');
					  $('._bnpl').next('.panel-collapse').addClass('collapse');
				  }
			}			
			setTimeout(function(){	
					//fltReviewSummery();

						},200);
						
		}
	}); 
	$('.travellerFareInfo .cupnCode').remove();
});






//Seatmap Service Layer Implementaion
var seatMapReqData = [] ; 
var seatMapFooterData = [] ;
var passengerNames = [];
var globalPid = '';
var info ={
		 fltData : '',
		 sector : ''
	 };
var seatValidation = (function () {  
  return {
    getSector:'',
    getName:'',
    getSeat:'',
    seatArray:{},
	finalData:[],
	first:true,
    validateSector:function(obj){
      var paxName = obj.paxname;
      var sector = obj.sector;
      var seat = ob.seat;
    },
    setSector:function(elm){
      this.getSector = elm;
    },
    setName:function(elm){
      this.getName = elm;
    },
    setSeat:function(elm,callback){
      this.getSeat = elm;
      return callback();
    },
    constructSeatArray:function(){
      var _self = this;
      var paxName = _self.getName.replace(/ /g,''),
          seatName = $.trim(_self.getSeat),
          sectorName = $.trim(_self.getSector);	  
	  if(paxName!==''){
		  if(_self.seatArray[paxName]){
			_self.seatArray[paxName][sectorName] = seatName;
		  }else{
			 _self.seatArray[paxName]={};
			_self.seatArray[paxName][sectorName] = seatName;
		  }
	  }
    },
    updateUI:function(thisVal){
	 //$(thisVal).removeClass('available').addClass('selected');
      var _self = this;
      var trgt = $('.checkUl').find('.checkOpn');
      trgt.map(function(v,k){
        var sector = $(k).find('[data-sector]');
        var getName = $(k).find('label').text().replace(/ /g,'');
		for(var i in _self.seatArray){
			var obj = _self.seatArray;
			if(obj[getName]!==undefined){
				sector.map(function(l,i){
					var seat = $(i).find('.seatPT');
					var loc = $(i).attr('data-sector');
					if(obj[getName][loc]!==undefined){
						seat.addClass('seatPosSTxt');
						seat.text(obj[getName][loc].split("*")[0]);
					}
				});
			}
		}
      });
    },
	getRequest:function(cb){				
		this.finalData = [];
		var seatNumber = [];
		for(var p in passengerNames){
		  var don = [];
		  var condition = true;
		  for(var sd in seatValidation.seatArray[passengerNames[p]].seat){
			var paxObj = seatValidation.seatArray[passengerNames[p]].seat[sd];
			seatNumber.push(paxObj.seatNum);
			var l= paxObj.flight+'-'+ paxObj.seatNum+'$'+paxObj.position;
			if(paxObj.seatNum!=""){
			  if(paxObj.trip==1 && condition===true){
				don.push('#'+l);
				condition=false;
			  }else  if(paxObj.trip==2 && condition===true){
				don.push('##'+l);
			  }else{
				don.push(l);
			  }
			}
		  }
		  var lo = {}
		  lo[passengerNames[p]] = don.join('|')
		  this.finalData.push(lo);
		}
		return cb(seatNumber);
	},
	init:function(){
		var _self = this;
		if(_self.first){
			var trgt = $('.checkUl').find('.checkOpn');
			trgt.map(function(v,k){
				var sector = $(k).find('[data-sector]');
				var getName = $(k).find('label').text().replace(/ /g,'');				
				if(getName!=""){
					if(passengerNames.indexOf(getName)==-1){
						passengerNames.push(getName);
					}
					_self.seatArray[getName] = {};
					_self.seatArray[getName].seat = [];
					sector.map(function(l,i){
						var conditionSector = true;
						var seat = $(i).find('.seatPosSTxt');
						var loc = $(i).attr('data-sector');
						var flight = $(i).attr('data-flight');
						var trip = $(i).attr('data-trip');						
						var position = $(i).attr('data-position');						
						var fltDetails = { 
							key:loc,
							flight:flight,
							position:position,
							trip:trip,
							seatNum:''
						}; 
						_self.seatArray[getName].seat.map(function(sv){							
							if(sv.key===loc){
								conditionSector = false;								
							}
						});
						
						if(conditionSector===true){						
						_self.seatArray[getName].seat.push(fltDetails); 
						}
						
					});					
				}
			});			
			_self.first=false;
		}
	},
	reqGenerator:function(){		
	}
  }
})();
	
function seatTest(pid,thisVal){
	globalPid = pid;
	var thisValue = $(thisVal);
	$.post('/seatmap/flightData',{pid:pid},function(res){
		if(res.status=='ERROR'){
		$('.seatLoading').hide(); 					 
		$('.seatLaoutshow').hide(function(){$('.seatsNotAvailable').show();}); 
		return;
		}
	   seatMapReqData.push(res.seatMapReq);
	   seatMapReqData.push(res.jsonSectors);
	   seatMapFooterData.push(seatMapReqData[1][0]);
	   trvlBkngInfo(res);
	   var sector = res.jsonSectors[0].depAirportCode+'-'+res.jsonSectors[0].arrAirportCode;
	   seatValidation.setSector(sector);
	   $.get('/common/themes/v2/tmpl/flight/flightConfirmation.ejs?v=nd-v0102',{},function(template){
	   flightSerVar.dynamicTemplate = template;
	   flightSerVar.loadTemplate('seatMap_drop_down',seatMapReqData[1],$('#_seatMap_drop_down'));
	   flightSerVar.loadTemplate('seatMap_flt_details',seatMapReqData[1][0],$('#_seatMap_flt_details'),function(){
		   $( ".trvlSInfo li:first label" ).trigger( "click" );
	   });
	   
	   
	   });
	    $('.seatsNotAvailable').hide();
		$('.seatLaoutshow').show();
	   $('.seatLoading').show();
	   callseatMapServiceAPI(res.seatMapReq[0],false,thisValue);	   
	});
	
	$('.seaterPop').removeAttr("style");
			$('.bgoverlayout, .seaterPop').addClass('active');
			var offsetTop = $(thisValue).offset().top; 
			$('.bgoverlayout, .seaterPop').addClass('active');
			$('.seaterPop').css('top',offsetTop+"px"); 
			var offsetPopTop = $('.seaterPop').offset().top;
			$('html, body').animate({scrollTop:offsetPopTop-2}, 500);
			setTimeout(function(){
				if($('.seatLaoutshow').is(':visible')){
					var myHi = $('.seatLaoutshow').height();
					$('.seatlayout').css('min-height',myHi);
					$('.seatBody').css('min-height',myHi);		
				}
				seatValidation.init();				
			},5000);
			 if($('.trvlRInfo').length){
		   	$('.trvlRInfo').each(function() {
			        var $this = $(this);
			        if(parseInt($this.height()) >= 260) {
			            $this.addClass('trvlRInfoHgt');
			        }
			    });
				
			}
}
 $('body').on('mouseover','.seatPop a', function(){
	var psn = $('.seatBody').width() - $(this).width();					
	$('.seatPopInfo').show();
	var seatPopInfo = $('.seatPopInfo');
	var sw = $(this).offset();
	var aa = $('.seatBody').offset();
	if($('html').attr('lang')=="ar"){
	seatPopInfo.css('left',((sw.left-aa.left)+38)+"px");
	seatPopInfo.css('top',(sw.top-aa.top)+"px"); 
	} else{
	seatPopInfo.css('left',((sw.left-aa.left)+38)+"px");
	seatPopInfo.css('top',(sw.top-aa.top)+"px"); 
	}

	var seatPopupData = $(this).attr('data-seatpopupinfo');				
	if(seatPopupData !== undefined){
		$('.seatPopHdng').html('<elm>'+i18n.t('seatmapBodyTooltipText2')+'</elm>' +'-'+seatPopupData);	
	}else{
		$('.seatPopInfo').hide();
	}
});

 $('body').on('mouseout','.seatlayout', function(){		
 $('.seatPopInfo').hide();
 });	

 
function callseatMapServiceAPI(reqData,fltChange,thisValue){
	console.log('reqData---',JSON.stringify(reqData));
	$.post('/flight/seatmapapi',{resData:reqData},function(res){		
		 var obj = null;
	    	 if(res.response !== null){
	    		 obj = JSON.parse(res.response);
	    		 if(typeof obj.seatmapRS.smapress.errors !== 'undefined'){
	    			 obj = null;
	    		 }if(obj.seatmapRS.smapress.smapres[0].fsegInfo.smapdtls[0].cc[0].layout == null){
					 obj = null;
				 }
	    	 }
				if(obj != null){
				var seatMapData = [] ;
				var rowMapData  = [];
				var totalData = [];
				var ri =obj.seatmapRS.smapress.smapres[0].fsegInfo.smapdtls[0].cc[0].ri ;
				var layout =obj.seatmapRS.smapress.smapres[0].fsegInfo.smapdtls[0].cc[0].layout ;
				var fltNumber  = parseInt(obj.seatmapRS.smapress.smapres[0].fsegInfo.fn);
				for(index in ri){
				 var row = ri[index];
				 rowMapData.push(row);
				 for(j in row.si){
					if(typeof seatMapData[j] != 'undefined'){
				     seatMapData[j].push(row.si[j]);
					}
					else {
					var seat= [];
					seat.push(row.si[j]);
					seatMapData.push(seat);
					}
				 }
				}
				
				totalData[0] = rowMapData;
				totalData[1] = layout.split("").reverse().join("");
				showSeatMapPopup(totalData,seatMapReqData,seatMapFooterData,fltChange,thisValue);			
			 }else{
				    console.log('seats not available');
					$('.seatLoading').hide(); 
					 
					$('.seatLaoutshow').hide(function(){$('.seatsNotAvailable').show();}); 
				 }	
		
	});
	
}
function showSeatMapPopup(totalData,seatMapReqData,seatMapFooterData,fltChange,thisValue){	
	$.get('/common/themes/v2/tmpl/flight/flightConfirmation.ejs?v=nd-v0102',{},function(template){
	flightSerVar.dynamicTemplate = template;
	if(!fltChange){
		flightSerVar.loadTemplate('seatMap_drop_down',seatMapReqData[1],$('#_seatMap_drop_down'));
		flightSerVar.loadTemplate('seatMap_flt_details',seatMapReqData[1][0],$('#_seatMap_flt_details'));
		info.sector = seatMapReqData[1][0];
	}
	 $('.seatLoading').hide();
	 info.fltData = totalData;	 
	flightSerVar.loadTemplate('seatMap_template',info,$('#_seatMap_template'));
	       
		  $('.seaterPop').removeAttr("style");
			$('.bgoverlayout, .seaterPop').addClass('active');
			var offsetTop = $(thisValue).offset().top; 
			$('.bgoverlayout, .seaterPop').addClass('active');
			$('.seaterPop').css('top',offsetTop+"px"); 
			var offsetPopTop = $('.seaterPop').offset().top;
			$('html, body').animate({scrollTop:offsetPopTop-2}, 500);
			
			setTimeout(function(){
				var myWid = totalData[0].length;
				$('.seatLaoutshow').css('width',(myWid*39)+39);
				$('.seatLaoutshow').css('left','0'); 
				if($('.seatLaoutshow').is(':visible')){
					var myHi = $('.seatLaoutshow').height();
					$('.seatlayout').css('min-height',myHi); 
					$('.seatBody').css('min-height',myHi+20);				
				}
				seatValidation.init();
				
				var widthTotal = $('.seatLaoutshow').width();
					if(widthTotal <600){
						$('.slideNavig').hide();
					} else {
						$('.slideNavig').show(); 
					}	
			},400);
			
			setTimeout(function(){
					var view = $(".seatLaoutshow");
						var move = "90px";
						var sliderLimitWidth = view.width()-600;
						var sliderLimit = -sliderLimitWidth;
						
						$(".selectNxt").click(function(){
							
							var currentPosition = parseInt(view.css("left"));
							if (currentPosition >= sliderLimit) view.stop(false,true).animate({left:"-="+move},{ duration: 400})

						});

						$(".selectPrv").click(function(){

							var currentPosition = parseInt(view.css("left"));
							if (currentPosition < 0) view.stop(false,true).animate({left:"+="+move},{ duration: 400})

						});

				},600);
	
	setSeatChange();
	});
}


function seatPopupInfo(data,rowNum,thisVal){
	 var psgrName='';
	 $('.trvlSBookInfo').each(function(){
	  if($(this).is(':visible')){
		psgrName = $(this).parent('li').children('label').text().replace(/ /g,'');
	}
   });	
   if(psgrName !== ""){
	var seatPopupData = {
		seatNum : rowNum+data.sn+'*'+data.abdc,
		row:rowNum
	};
	seatValidation.setSeat(seatPopupData.seatNum,function(){
		seatValidation.constructSeatArray();
		seatValidation.updateUI(thisVal);
	});
	if(seatValidation.seatArray[psgrName]){
		for(var i in seatValidation.seatArray[psgrName].seat){
			if(seatValidation.seatArray[psgrName].seat[i].key == seatValidation.getSector){
				seatValidation.seatArray[psgrName].seat[i].seatNum = seatPopupData.seatNum;
			}
		}
	}			
	setSeatChange();
	}else{
		growl_alert(i18n.t("plsSlctPasn"));
	}
}





function seatMapfltSegment(val,sectorVal,segThisVal){ 
		var sector = sectorVal.depAirportCode+'-'+sectorVal.arrAirportCode;	   
	    seatValidation.setSector(sector);		
		var segMentThis = $(segThisVal);
		
	  //$('.seatselectPopWindow').removeClass('active');
	   $('.seatsNotAvailable').hide();
	   $('.seatPopInfo').hide();
	   $('.seatLoading').show(); 
	   $('.seatLaoutshow').show();
	   $('.selectBox').text(seatMapReqData[1][val].depAirportCode+' - '+seatMapReqData[1][val].arrAirportCode+' :  '+ 
	   seatMapReqData[1][val].marAirlineCode+' '+seatMapReqData[1][val].flightNumber);
	   
	   /*seatMapFooterInfo = [];
	   seatMapFooterInfo.push(seatMapReqData[1][val]);*/
	   flightSerVar.loadTemplate('seatMap_flt_details',seatMapReqData[1][val],$('#_seatMap_flt_details'));
	   info.sector = seatMapReqData[1][val];
	   callseatMapServiceAPI(seatMapReqData[0][val],true,segMentThis);
	
}

function trvlBkngInfo(psgrDetails){
	$.get('/common/themes/v2/tmpl/flight/flightConfirmation.ejs?v=nd-v0102',{},function(template){
			flightSerVar.dynamicTemplate = template;
			flightSerVar.loadTemplate('seatMap_tavl_info',psgrDetails,$('#_seatMap_tavl_info'));
	   });
}

function setSeatChange(){
	$('.available').removeClass('selected');
	var pinfo = seatValidation.seatArray;
	for(var i in pinfo){  
	  pinfo[i].seat.map(function(v){		
		$('.available').map(function(k,el){
		  var s = $(el).attr('seatmap-unique');
		  if(s == v.key+v.seatNum){
			$(el).addClass('selected');
		  }
		});
	  });
	}
}

 function selectSeats(){
	   seatValidation.getRequest(function(sNum){
			var seatData = JSON.parse(JSON.stringify(seatValidation.finalData));
			var seatSelected = false;
			for(var i in seatData){
			var data = seatData[i];		
				for(var propName in data) {
					if(data.hasOwnProperty(propName)) {
					var propValue = data[propName];
					if(propValue){
							seatSelected = true;
					}
				}}
			}
		  if(seatSelected){
			  var status = true;
			  for(var i in sNum){
				  if(sNum[i]==""){
					  status = false;
					  break;
				  }
			  }
			  if(status){
				var psnrSeatDetails = seatValidation.seatArray;
				seatSelection();
				$.post('/seatmap/seatmapfinalRequest',{pid:globalPid,seatData:seatData,psnrSeatDetails:psnrSeatDetails},function(res){				
					location.reload();
				});
				$('.seatCntSmry .slctSeatbtn').addClass('LoadBtn');
				$('.seatCntSmry .slctSeatbtn').text(i18n.t('processingTxt'));
				$('.seatCntSmry .slctSeatbtn').removeAttr('onClick');  
			  }else{
				  $(".confirmPopUp").css("display","block").addClass("in");
				  $(".bgoverlayout").css("z-index","102");
			  }	
		  }else{
			  growl_alert(i18n.t("plsSlctSeat"));
		  }
	   });
 }

$(".seatDropdownPop").click(function(e){
 e.preventDefault();
 $(".seatselectPopWindow").slideToggle('active');
 });
 
 $(".closeLink").click(function(){
 $(".seatselectPopWindow").slideUp('active');
 $(".seatselectPopWindow").slideUp(275);
 });
 
 $('body').click( function(){
 $(".seatselectPopWindow").slideUp('active');
 $(".seatselectPopWindow").slideUp(275);

 });
  
 $('.seatselectPopWindow, .seatDropdownPop').click(function(e){
 e.stopPropagation();
 });
 
 $('body').on('click','.seaterPop .close, .bgoverlayout',function(){
	$('.bgoverlayout, .seaterPop').removeClass('active');
 });

$('body').on('click', '.trvlSInfo li label',function(){
	seatValidation.setName($(this).text());
	if(!$(this).hasClass('active')){
			$('.trvlSInfo li label').removeClass('active');
			$('.trvlSBookInfo').slideUp(275);
			$(this).addClass('active');
	        $(this).next().slideDown(275);
        } else {
			$(this).removeClass('active');
	        $(this).next().slideUp(275);
		}
});

$('body').on('click', '.confirmPopUp ._cancel',function(){
	$(".confirmPopUp").css("display","none").removeClass("in");
	$(".bgoverlayout").css("z-index","101");
});

$('body').on('click', '.confirmPopUp ._confirm',function(){
	var seatData = JSON.parse(JSON.stringify(seatValidation.finalData));
	var psnrSeatDetails = seatValidation.seatArray;				
	$.post('/seatmap/seatmapfinalRequest',{pid:globalPid,seatData:seatData,psnrSeatDetails:psnrSeatDetails},function(res){		
       	
		if(res.response=="success"){
			location.reload();
		}else{
			growl_alert(i18n.t("failed"));
			$('.seatCntSmry .slctSeatbtn').removeClass('LoadBtn');
			$('.seatCntSmry .slctSeatbtn').text(i18n.t('save'));
			$('.seatCntSmry .slctSeatbtn').removeAttr("disabled");
		}
		
	});
	$(".confirmPopUp").css("display","none").removeClass("in");
	$(".bgoverlayout").css("z-index","101");
	$('.seatCntSmry .slctSeatbtn').addClass('LoadBtn');
	$('.seatCntSmry .slctSeatbtn').text(i18n.t('processingTxt'));
	$('.seatCntSmry .slctSeatbtn').attr("disabled", "disabled");
	//$('.seatCntSmry .slctSeatbtn').removeAttr('onClick'); 
});
//Default radius stream
var radiusV = 100000;
//Zoom Level
var zLevel = 10;
//For storing visible markers for removing duplicates
var markersArray = [];
//Other Global Variables
var map,landmark_marker,hotel_marker,circle,service,centerPos,jsonObj,mapObject,sM;

//Path
var imgPath = "/common/themes/v2/";
//Hotel Marker image	
var hotel_marker_img = imgPath+'img/markers/hotel-marker.png';	
var hotel_marker_img_active = imgPath+'img/markers/hotel-marker_active.png';

var flyinMapTemplate;
/*
 *Function to JSON data and assign the global jsonObj
 *@author Fahid Mohammad
 *@date 09-09-2014
 *@include jQuery.js
 *@include google-map-api-v3 (libraries:geometry,places)
 */
$(function(){
	//Info Window
	var infowindow = new google.maps.InfoWindow();
  	/*var bbc=$('body').find('#bbcRsltId');
  	//check for BBC
    if(bbc.length>0){
    	$.get(flyinTemplatePath+"bbc-map.flyintmpl",function(dynamicTemplate) {
  		flyinMapTemplate = $(dynamicTemplate);
  	});}
    else{*/
    	$.get("/common/themes/v2/tmpl/hotel/maptmpl.ejs?v=nd-v0102",function(dynamicTemplate) {
	  		flyinMapTemplate = $(dynamicTemplate);
	  	});
    //}
    
	
});
function loadJsonData(data){
	//set hotel object
	jsonObj = data;
	//set the landmark position				
	centerPos = new google.maps.LatLng(jsonObj.MainLand.latitude,jsonObj.MainLand.longitude);
	//Load the map view
	landmarkMapView(jsonObj.MainLand);
}
/*
 *Function to initialize the map view
 *@author Fahid Mohammad
 *@date 09-09-2014
 *@include jQuery.js
 *@include google-map-api-v3 (libraries:geometry,places)
 */
function landmarkMapView(dataLandMark){
	mapOptions = {
		center: centerPos,
		zoom: zLevel,
		mapTypeId: google.maps.MapTypeId.ROADMAP,
		disableDefaultUI: false
	};
	map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);
	//Load the initial hotels markers
	setMarkers(centerPos, radiusV, map);						
	//get the current zoom level
	google.maps.event.addListener(map, 'zoom_changed', function(){
		zLevel = map.getZoom();
	});
}


/*
 *Function for Generating the hotel markers on map view
 *@author Fahid Mohammad
 *@date 09-09-2014
 *@include jQuery.js
 *@include google-map-api-v3 (libraries:geometry,places)
 */
function setMarkers(center, radius, map) {
	//Get hotel marker object			
	var d = jsonObj;
	//var LatLngList = [];
	//var bounds = new google.maps.LatLngBounds ();
	//Empty the validate marker array
	markersArray = [];					
	for(var i=0; i<jsonObj.hotel.length; i++){
		 var geoC = jsonObj.hotel[i].staticData;
			if(geoC.lat!="" && geoC.lng!=""){
				//Create Google langLat map object from JSON data
				var langLat = new google.maps.LatLng(geoC.lat,geoC.lng);
				//LatLngList.push(langLat);
				var curRad = getTotalDistance(centerPos,langLat);
				//Set hotel marker						
				if((radiusV>curRad)){
					hotel_marker = new google.maps.Marker({
						position: langLat,
						map: map,
						animation: google.maps.Animation.DROP,
						title:'',
						icon:hotel_marker_img
					});
					//Set markers collection array for validating visibility
					markersArray.push(hotel_marker);
					//Show Hotel info window onClick
					bindInfoWindow(hotel_marker, map, infowindow, jsonObj.hotel[i]);
				}
			}
		
	}
	
}

/*
 *Function for Generating the LandMarkMap markers on map view
 *@author Fahid Mohammad
 *@date 09-09-2014
 *@include jQuery.js
 *@include google-map-api-v3 (libraries:geometry,places)
 */	
function landMarkMap(center, radius, map,dataLandMark){
	circle = new google.maps.Circle({
		map: map,
		radius: radiusV, // 150 miles in metres
		fillColor: '#ddae62',
		strokeColor:'#89700d',
		strokeWeight:1,
		editable: true
	});	
	//Bind circle Radius Change Event
	circleChange(circle);
	//Set landmark marker
	landmark_marker = new google.maps.Marker({
		position: centerPos,
		map: map,
		title:'',
		icon:hotel_marker_img
	});	
	//Bind Circle to landmark marker
	circle.bindTo('center', landmark_marker, 'position');	
	//Show Hotel info window onClick
	bindInfoWindow(landmark_marker, map, infowindow, dataLandMark.landmarkname);			
}
/*
 *Function for Updating the marker on Radius Change
 *@author Fahid Mohammad
 *@date 09-09-2014
 *@include jQuery.js
 *@include google-map-api-v3 (libraries:geometry,places)
 */	
function circleChange(circleObj){
	//On Radius change event
	google.maps.event.addListener(circleObj, 'radius_changed', function(ev){
		radiusV = circleObj.getRadius();
		hideMarkers();
		setMarkers(centerPos, radiusV, map);	
	});	
}

/*
 *Function for markers click/Hover event listener
 *@author Fahid Mohammad
 *@date 10-09-2014
 *@include jQuery.js
 *@include google-map-api-v3 (libraries:geometry,places)
 */		
function bindInfoWindow(marker, map, infowindow, strDescription) {
	//Open info-window and change the selected marker icon state to active if its hotel
	google.maps.event.addListener(marker, 'click', function() {
		//set current marker reference
		currentMark = marker;	
		map.panTo(marker.position);
		//change all marker icons to the default state		
		setDefaultMarkerIcon();
		//check if the selected marker is not landmark marker
		if(marker.position.L!=centerPos){
			//change current marker icon to active state
			marker.setIcon(hotel_marker_img_active);					
			//show info-window
			jQuery('#infowindow').css('display','block');
			reloadTemplate(flyinMapTemplate, 'hotel-mapview-template-item', strDescription, 'infowindow');
			//langRender();
		}else{
			jQuery('#infowindow').css('visibility','hidden');
			jQuery('#infowindow').empty();
		}
    });
	//On close of info-window change the icons state to default
	google.maps.event.addListener(infowindow,'closeclick',function(){
		setDefaultMarkerIcon();
	});
}

//Set Default Marker Icon for hotel on Click close info window
$('body').on( 'click', 'button.mapCls',function(){
	setDefaultMarkerIcon();
});
/*
 *@info Load flyintmpl Content
 *@param HTML Selector [dynamicTemplate(Dynamic template to Loaded)]
 *@param String [templateID (Template ID)]
 *@param data Array/Object [data(Json Data)]
 *@param HTML Selector [toUpdate(Template to update)]
 *@return 
 */
function reloadTemplate(dynamicTemplate, templateID, data, toUpdate) {
	//Load the template
	var template = tmpl($(dynamicTemplate).filter('#' + templateID).html(), data);
	var r = /\\u([\d\w]{4})/gi;
	template = template.replace(r, function (match, grp) {
	    return String.fromCharCode(parseInt(grp, 16)); } );
	template = unescape(template);
	//Select result container
	var result = $('#' + toUpdate);
	setTimeout(function(){
		pricetagConvert.init();
	}, 100);
	//Empty the result container
	result.empty();
	//Load data to the result container
	result.append(template);
}

/*
 *Function for getting the distance between the centre position and a marker
 *@author Fahid Mohammad
 *@date 09-09-2014
 *@include jQuery.js
 *@include google-map-api-v3 (libraries:geometry,places)
 */	
var getTotalDistance = function(p1, p2) {
	//get total radius of earth in meters
	var earthRadius = 6378137;
	//Sub the initial position of Lat
	var dLat = radiusConvert(p2.lat() - p1.lat());
	//Sub the initial position of Long
	var dLong = radiusConvert(p2.lng() - p1.lng());
	var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +
	Math.cos(radiusConvert(p1.lat())) * Math.cos(radiusConvert(p2.lat())) *
	Math.sin(dLong / 2) * Math.sin(dLong / 2);
	var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
	var totalDistance = earthRadius * c;
	return totalDistance;
};

/*
 *Function for converting radius in meters
 *@author Fahid Mohammad
 *@date 09-09-2014
 *@include jQuery.js
 *@include google-map-api-v3 (libraries:geometry,places)
 */		
var radiusConvert = function(x) {
  return x * Math.PI / 180;
};

/*
 *Function for setting the default marker icons to all visible markers
 *@author Fahid Mohammad
 *@date 10-09-2014
 *@include jQuery.js
 *@include google-map-api-v3 (libraries:geometry,places)
 */
function setDefaultMarkerIcon() {
	if (markersArray) {
		for (i in markersArray) {
		  markersArray[i].setIcon(hotel_marker_img);
		}
	}			
}


 function resizeMap(){
	var updateTimeout = -1,
		throttleTime = 1000;
	if (updateTimeout === -1) {
		updateTimeout = setTimeout(function () {
			google.maps.event.trigger(map,'resize');
			map.setZoom(map.getZoom());
		}, throttleTime);
	}
}
$(function ($)
{
	
	var name = "selectedLanguage=";
	var ca = document.cookie.split(';'); 
	var cval = "";
	var i18next = {};
	var month;
	for(var i=0; i<ca.length; i++) {
		var c = ca[i];
		while (c.charAt(0)==' ') c = c.substring(1);
		if (c.indexOf(name) == 0) cval = c.substring(name.length,c.length);
	}
	if(cval=='en'){
		month = {
			"number": ["01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12"],
			"short": ['January','February','March','April','May','June','July','August','September','October','November','December'],
			"long": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
		}
	}else if(cval=='ar'){
		month = {
			"number": ["01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12"],
			"short":  ["ÙŠÙ†Ø§ÙŠØ±","ÙØ¨Ø±Ø§ÙŠØ±","Ù…Ø§Ø±Ø³","Ø§Ø¨Ø±ÙŠÙ„","Ù…Ø§ÙŠÙˆ","ÙŠÙˆÙ†ÙŠÙˆ","ÙŠÙˆÙ„ÙŠÙˆ","Ø£ØºØ³Ø·Ø³","Ø³Ø¨ØªÙ…Ø¨Ø±","Ø£ÙƒØªÙˆØ¨Ø±","Ù†ÙˆÙÙ…Ø¨Ø±","Ø¯ÙŠØ³Ù…Ø¨Ø±"],
			"long":  ["ÙŠÙ†Ø§ÙŠØ±","ÙØ¨Ø±Ø§ÙŠØ±","Ù…Ø§Ø±Ø³","Ø§Ø¨Ø±ÙŠÙ„","Ù…Ø§ÙŠÙˆ","ÙŠÙˆÙ†ÙŠÙˆ","ÙŠÙˆÙ„ÙŠÙˆ","Ø£ØºØ³Ø·Ø³","Ø³Ø¨ØªÙ…Ø¨Ø±","Ø£ÙƒØªÙˆØ¨Ø±","Ù†ÙˆÙÙ…Ø¨Ø±","Ø¯ÙŠØ³Ù…Ø¨Ø±"]
		}
	}
	
	
	var today = new Date(), 
	todayYear = today.getFullYear(),
    todayMonth = today.getMonth() + 1,
    todayDay = today.getDate();
    updateTheBirthDayValue = function(options, $selector, selectedYear, selectedMonth, selectedDay) {
      if ((selectedYear * selectedMonth * selectedDay) != 0) {
        if (selectedMonth<10) selectedMonth="0"+selectedMonth;
        if (selectedDay<10) selectedDay="0"+selectedDay;
        hiddenDate = selectedYear + "-" + selectedMonth + "-" + selectedDay;
		$selector.val(hiddenDate);

        if (options.callback) {
          options.callback(hiddenDate);
        }
      }
    }
    generateBirthdayPicker = function ($parent, options) 
    {
      var parentId = $parent.attr('id').replace(/-/g, '');

    	// Create the html picker skeleton
      	var $fieldset = $("<fieldset class='birthdayPicker'></fieldset>"),
        	$year = $("<select class='birthYear "+options.sizeClass+"' name='"+parentId+"_birth[year]'><span></span></select>"),
          	$month = $("<select class='birthMonth "+options.sizeClass+"' name='"+parentId+"_birth[month]'></select>"),
          	$day = $("<select class='birthDate "+options.sizeClass+"' name='"+parentId+"_birth[day]'></select>")
          	$birthday = $("<input class='birthDay' name='"+parentId+"_birthDay' type='hidden'/>");

         // Add the option placeholders if specified
      	if (options.placeholder) {           
			if(cval==='ar'){
				$("<option value='0'>Ø³Ù†Ø©</option>").appendTo($year);
				$("<option value='0'>Ø´Ù‡Ø±</option>").appendTo($month);
				$("<option value='0'>ÙŠÙˆÙ…</option>").appendTo($day);
			}else{
				$("<option value='0'>Year</option>").appendTo($year);
				$("<option value='0'>Month</option>").appendTo($month);
				$("<option value='0'>Day</option>").appendTo($day);
			}
         }

 		// Deal with the various Date Formats
      	if (options.dateFormat == "bigEndian") {
        	$fieldset.append($year).append($month).append($day);
      	} else if (options.dateFormat == "littleEndian") {
        	$fieldset.append($day).append($month).append($year);
      	} else {
        	$fieldset.append($month).append($day).append($year);
     	}
     	if($parent.hasClass('_passportExpiryDate')){
			//calculate the year to add to the select options. 
			
			var yearBegin = todayYear; 
			
			var yearEnd = todayYear + parseInt(options.maxAge);
			
			for (var i = yearBegin; i <= yearEnd; i++) { 
				$("<option></option>").attr("value", i).text(i).appendTo($year); 
			}
			
		}else if($parent.hasClass('_iqamaExpiryDate')){
			
			var yearBegin = todayYear; 
			
			var yearEnd = todayYear + 5;
			
			for (var i = yearBegin; i <= yearEnd; i++) { 
				$("<option></option>").attr("value", i).text(i).appendTo($year); 
			}
			
			$birthday = $("<input class='birthDay' name='"+parentId+"_iqamaDay' type='hidden'/>");
			
		}else{
			
			if($parent.hasClass('_adultdob')){
				//calculate the year to add to the select options. 
				var yearBegin = todayYear - options.minAge - 12; 
				var yearEnd = todayYear - options.maxAge;
				if (options.maxYear != todayYear && options.maxYear > todayYear) {
					yearBegin = options.maxYear; 
					yearEnd = yearEnd + (options.maxYear - todayYear)
				}
				for (var i = yearBegin; i >= yearEnd; i--) { 
					$("<option></option>").attr("value", i).text(i).appendTo($year); 
				}
			}else if($parent.hasClass('_childdob')){
				//calculate the year to add to the select options. 
				var yearBegin = todayYear - options.minAge - 2; 
				var yearEnd = todayYear - options.maxAge;
				if (options.maxYear != todayYear && options.maxYear > todayYear) {
					yearBegin = options.maxYear; 
					yearEnd = yearEnd + (options.maxYear - todayYear)
				}
				for (var i = yearBegin; i >= yearEnd; i--) { 
					$("<option></option>").attr("value", i).text(i).appendTo($year); 
				}
			}else{
				var yearBegin = todayYear - options.minAge;
				var yearEnd = todayYear - options.maxAge ;
				if(todayMonth > 11){ //dec month
				 yearBegin = todayYear - options.minAge +1; //to accomodate 2017
				 yearEnd = todayYear - options.maxAge +1; //to accomodate 2017
				}
				if (options.maxYear != todayYear && options.maxYear > todayYear) {
					yearBegin = options.maxYear; 
					yearEnd = yearEnd + (options.maxYear - todayYear) ;
				}
				for (var i = yearBegin; i >= yearEnd; i--) { 
					$("<option></option>").attr("value", i).text(i).appendTo($year); 
				}
			}
		}
		
		for (var i = 0; i <= 11; i++) {
			$("<option></option>").attr('value', i + 1).text(month[options.monthFormat][i]).appendTo($month);
		}
		for (var i = 1; i <= 31; i++) {
			var number = (i < 10) ? "0"+i: i;
			$("<option></option>").attr('value', i).text(number).appendTo($day);
		}
        $fieldset.append($birthday);
        $fieldset.find('select').each(function(){
        	$(this).wrap('<div class="custom-select-v3 sm"></div>');
        });
        $parent.append($fieldset);
        // Set the default date if given
      	if (options.defaultDate) {
        	var date = new Date(options.defaultDate);
        	$year.val(date.getFullYear());
        	$month.val(date.getMonth() + 1);
        	$day.val(date.getDate());
			
          updateTheBirthDayValue(options, $birthday, date.getFullYear(), date.getMonth() + 1, date.getDate());
      	}
        $fieldset.on('change', function () 
        {
			$birthday = $(this).find('.birthDay');
        	// currently selected values
            selectedYear = parseInt($year.val(), 10),
            selectedMonth = parseInt($month.val(), 10),
            selectedDay = parseInt($day.val(), 10);
          
			if(!$parent.hasClass('_passportExpiryDate') && !$parent.hasClass('_iqamaExpiryDate')){
				//rebuild the index for the month. 
				var currentMaxMonth = $month.children(":last").val();
				if (selectedYear > todayYear) {
					if (currentMaxMonth > todayMonth) {
						while (currentMaxMonth > todayMonth) {
							$month.children(":last").remove();
							currentMaxMonth--;
						}	
					} 
				} else {
					while (currentMaxMonth < 12) {
						$("<option></option>").attr('value', parseInt(currentMaxMonth)+1).text(month[options.monthFormat][currentMaxMonth]).appendTo($month);
						currentMaxMonth++;
					}
				}
				var currentMaxDate = $day.children(":last").val(); 
				
				// number of days in currently selected year/month
				var actMaxDay = (new Date(selectedYear, selectedMonth, 0)).getDate();
				if (currentMaxDate > actMaxDay) {
					while (currentMaxDate > actMaxDay) {
						$day.children(":last").remove(); 
						currentMaxDate--;
					}
				} else if (currentMaxDate < actMaxDay ) {
					while (currentMaxDate < actMaxDay) 
					{
						var dateIndex = parseInt(currentMaxDate) + 1; 
						var number = (dateIndex < 10) ? "0"+dateIndex: dateIndex;
						$("<option></option>").attr('value', dateIndex).text(number).appendTo($day);
						currentMaxDate++;
					}
				}
            }else{
				var currentMaxDate = $day.children(":last").val(); 
				// number of days in currently selected year/month
				var actMaxDay = (new Date(selectedYear, selectedMonth, 0)).getDate();
				if (currentMaxDate > actMaxDay) {
					while (currentMaxDate > actMaxDay) {
						$day.children(":last").remove(); 
						currentMaxDate--;
					}
				} else if (currentMaxDate < actMaxDay ) {
					while (currentMaxDate < actMaxDay) 
					{
						var dateIndex = parseInt(currentMaxDate) + 1; 
						var number = (dateIndex < 10) ? "0"+dateIndex: dateIndex;
						$("<option></option>").attr('value', dateIndex).text(number).appendTo($day);
						currentMaxDate++;
					}
				}
			}
			// update the hidden date
			
            updateTheBirthDayValue(options, $birthday, selectedYear, selectedMonth, selectedDay);
        });
    }

    $.fn.birthdayPicker = function(options) 
	{
		return this.each(function () {
        	var settings = $.extend($.fn.birthdayPicker.defaults, options );
			generateBirthdayPicker($(this), settings);
		});
	};

	$.fn.birthdayPicker.defaults = {
    	"maxAge"        : 100,
      	"minAge"        : 0,
      	"maxYear"       : todayYear,
      	"dateFormat"    : "middleEndian",
      	"monthFormat"   : "number",
      	"placeholder"   : true,
      	"defaultDate"   : false,
      	"sizeClass"		: "form-control",
        'callback': false
	} 
}( jQuery ))
$(function ($){
	
	var name = "selectedLanguage=";
	var ca = document.cookie.split(';'); 
	var cval = "";
	var i18next = {};
	var month;
	for(var i=0; i<ca.length; i++) {
		var c = ca[i];
		while (c.charAt(0)==' ') c = c.substring(1);
		if (c.indexOf(name) == 0) cval = c.substring(name.length,c.length);
	}
	if(cval=='en'){
		month = {
			"number": ["01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12"],
			"short": ['Muharram','Safar','Rabi\' al-Awwal','Rabi\' al-Thani','Jumada al-Ula','Jumada al-Alkhirah','Rajab','Shaâ€™ban','Ramadhan','Shawwal','Thul-Qiâ€™dah','Thul-Hijjah'],
			"long": ["Muharram", "Safar", "Rabi\' al-Awwal", "Rabi\' al-Thani", "Jumada al-Ula", "Jumada al-Alkhirah", "Rajab", "Shaâ€™ban", "Ramadhan", "Shawwal", "Thul-Qiâ€™dah", "Thul-Hijjah"]
		}
	}else if(cval=='ar'){
		month = {
			"number": ["01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12"],
			"short":  ["Ù…Ø­Ø±Ù…","ØµÙØ±","Ø±Ø¨ÙŠØ¹ Ø§Ù„Ø£ÙˆÙ„","Ø±Ø¨ÙŠØ¹ Ø§Ù„Ø«Ø§Ù†ÙŠ","Ø¬Ù…Ø§Ø¯Ù‰ Ø§Ù„Ø£ÙˆÙ„Ù‰","Ø¬Ù…Ø§Ø¯Ù‰ Ø§Ù„Ø¢Ø®Ø±Ø©","Ø±Ø¬Ø¨","Ø´Ø¹Ø¨Ø§Ù†","Ø±Ù…Ø¶Ø§Ù†","Ø´ÙˆØ§Ù„","Ø°Ùˆ Ø§Ù„Ù‚Ø¹Ø¯Ø© ","Ø°Ùˆ Ø§Ù„Ø­Ø¬Ø© "],
			"long":  ["Ù…Ø­Ø±Ù…","ØµÙØ±","Ø±Ø¨ÙŠØ¹ Ø§Ù„Ø£ÙˆÙ„","Ø±Ø¨ÙŠØ¹ Ø§Ù„Ø«Ø§Ù†ÙŠ","Ø¬Ù…Ø§Ø¯Ù‰ Ø§Ù„Ø£ÙˆÙ„Ù‰","Ø¬Ù…Ø§Ø¯Ù‰ Ø§Ù„Ø¢Ø®Ø±Ø©","Ø±Ø¬Ø¨","Ø´Ø¹Ø¨Ø§Ù†","Ø±Ù…Ø¶Ø§Ù†","Ø´ÙˆØ§Ù„","Ø°Ùˆ Ø§Ù„Ù‚Ø¹Ø¯Ø© ","Ø°Ùˆ Ø§Ù„Ø­Ø¬Ø© "]
		}
	}
	
	 var today = new HijriDate(),
		todayYear = today.getFullYear(),
	    todayMonth = today.getMonth() + 1,
	    todayDay = today.getDate();
	  updateTheHijriDayValue = function(options, $selector, selectedYear, selectedMonth, selectedDay) {
   /*    if ((selectedYear * selectedMonth * selectedDay) != 0) {
        if (selectedMonth<10) selectedMonth="0"+selectedMonth;
        if (selectedDay<10) selectedDay="0"+selectedDay;
        hiddenDate = selectedYear + "-" + selectedMonth + "-" + selectedDay;
		$selector.val(hiddenDate);

        if (options.callback) {
          options.callback(hiddenDate);
        }
      } */
	  
	  hiddenDate = setGregorianDateForHijri(selectedDay, selectedMonth, selectedYear);
		
		$selector.val(hiddenDate);

        if (options.callback) {
          options.callback(hiddenDate);
        }
    }
	 
	 generateHijridayPicker = function ($parent, options)
	 {
		 
		 var parentId = $parent.attr('id').replace(/-/g, '');
		 
		// Create the html picker skeleton
	      	var $fieldset = $("<fieldset class='hijridayPicker'></fieldset>"),
	        	$year = $("<select class='hijriYear "+options.sizeClass+"' name='"+parentId+"_hijri[year]'><span></span></select>"),
	          	$month = $("<select class='hijriMonth "+options.sizeClass+"' name='"+parentId+"_hijri[month]'></select>"),
	          	$day = $("<select class='hijriDate "+options.sizeClass+"' name='"+parentId+"_hijri[day]'></select>")
	          	$hijriday = $("<input class='hijriDay' name='"+parentId+"_hijriDay' type='hidden'/>");

	         // Add the option placeholders if specified
	      	if (options.placeholder) {           
				if(cval==='ar'){
					$("<option value='0'>Ø³Ù†Ø©</option>").appendTo($year);
					$("<option value='0'>Ø´Ù‡Ø±</option>").appendTo($month);
					$("<option value='0'>ÙŠÙˆÙ…</option>").appendTo($day);
				}else{
					$("<option value='0'>Year</option>").appendTo($year);
					$("<option value='0'>Month</option>").appendTo($month);
					$("<option value='0'>Day</option>").appendTo($day);
				}
	         }
	      	
	     // Deal with the various Date Formats
	      	if (options.dateFormat == "bigEndian") {
	        	$fieldset.append($year).append($month).append($day);
	      	} else if (options.dateFormat == "littleEndian") {
	        	$fieldset.append($day).append($month).append($year);
	      	} else {
	        	$fieldset.append($month).append($day).append($year);
	     	}
			
			if($parent.hasClass('_iqamaExpiryDate')){
			//calculate the year to add to the select options. 
			
			var yearBegin = todayYear; 
			
			var yearEnd = todayYear + 5;
			
			for (var i = yearBegin; i <= yearEnd; i++) { 
				$("<option></option>").attr("value", i).text(i).appendTo($year); 
			}
			
		}
	      	
	      	for (var i = 0; i <= 11; i++) {
				$("<option></option>").attr('value', i + 1).text(month[options.monthFormat][i]).appendTo($month);
			}
			for (var i = 1; i <= 30; i++) {
				var number = (i < 10) ? "0"+i: i;
				$("<option></option>").attr('value', i).text(number).appendTo($day);
			}
			
			$fieldset.append($hijriday);
			$fieldset.find('select').each(function(){
				$(this).wrap('<div class="custom-select-v3 sm"></div>');
			});
	        $parent.append($fieldset);
	        
	        
	        $fieldset.on('change', function () 
	        {
	        	$hijriday = $(this).find('.hijriDay');
	        	
	        	selectedYear = parseInt($year.val(), 10),
	            selectedMonth = parseInt($month.val(), 10),
	            selectedDay = parseInt($day.val(), 10);
				
				updateTheHijriDayValue(options, $hijriday, selectedYear, selectedMonth, selectedDay);
	        });
	 }
	 
	 
	 setGregorianDateForHijri = function(selectedDay, selectedMonth, selectedYear){
		var hijriDate = new HijriDate();
		var currentDate = new HijriDate();
		var setYear = Calendar.parseInt(selectedYear, 1);
		var setMonth = Calendar.parseInt(selectedMonth, 0);
		var setDate = Calendar.parseInt(selectedDay, 1);
		var returnDate = "";
		hijriDate.setFullYear(setYear);
		hijriDate.setMonth(setMonth - 1);
		hijriDate.setDate(setDate);
		hijriDate.setTime(hijriDate.getTime());
		
		dd = hijriDate.getGregorianDate().getDate();
		mm = hijriDate.getGregorianDate().getMonth() + 1;
		yyyy = hijriDate.getGregorianDate().getFullYear();
		returnDate = mm+'/'+dd+'/'+yyyy;
		
		
		  if(hijriDate.getTime() <= currentDate.getTime()){
			 return "";
		 }
		return returnDate; 
		}
	 
	    $.fn.hijriDayPicker = function(options) 
		{
			
			return this.each(function () {
	        	var settings = $.extend($.fn.hijriDayPicker.defaults, options );
				generateHijridayPicker($(this), settings);
			});
		};

		$.fn.hijriDayPicker.defaults = {
	    	"maxAge"        : 100,
	      	"minAge"        : 0,
	      	"maxYear"       : todayYear,
	      	"dateFormat"    : "middleEndian",
	      	"monthFormat"   : "number",
	      	"placeholder"   : true,
	      	"defaultDate"   : false,
	      	"sizeClass"		: "form-control",
	        'callback': false
		} 
	
	

}(jQuery))


$(document).ready(function(){
	viewHotelMap();

	/**
	 * Cookie setting for hotel search 
	 */
		if(typeof Cookies.get('HOTEL_SEARCH_COOKIE')!='undefined'){
			var data = Cookies.get('HOTEL_SEARCH_COOKIE');
			if($('#hotelsearchKey')!='undefined'){
				if(data==='undefined'){
					$('#countrycityhotel').val('');
					$('#hotelsearchKey').val('');
				}else{
					var hcookieData = JSON.parse(data);
					$('#countrycityhotel').val('');
					if(hcookieData.destInput != undefined){
						$('#hotelsearchKey').val((hcookieData.destInput).replace(/\"/g, ""));					
						var mdata=(hcookieData.destInput).replace(/\"/g, "");					
						if(mdata.split('>>')[0]==='Airport'){
							$('#countrycityhotel').val(mdata.split('>>')[1]+', '+mdata.split('>>')[3]);
							$('#countrycityhotel').attr("title",mdata.split('>>')[1]+', '+mdata.split('>>')[3]);
						}else if(mdata.split('>>')[0]==='City'){
							$('#countrycityhotel').val(mdata.split('>>')[2]+', '+mdata.split('>>')[3]+', '+mdata.split('>>')[4]);
							$('#countrycityhotel').attr("title",mdata.split('>>')[2]+', '+mdata.split('>>')[3]+', '+mdata.split('>>')[4]);
						}else if(mdata.split('>>')[0]==='Hotel'){
							$('#countrycityhotel').val(mdata.split('>>')[4]+', '+mdata.split('>>')[6]+', '+mdata.split('>>')[8]);
							$('#countrycityhotel').attr("title",mdata.split('>>')[4]+', '+mdata.split('>>')[6]+', '+mdata.split('>>')[8]);
						}
					}
					var hcurDate = new Date();
					var hinputDate = new Date(hcookieData.checkIn);
					if(hinputDate.setHours(0,0,0,0) < hcurDate.setHours(0,0,0,0)){
						$(".nights-count").val("00");
					}else{
						$(".nights-count").val(hcookieData.nightCnt);
					}
				}
			}
		}else{
			$('#countrycityhotel').val('');
			$('#hotelsearchKey').val('');
		}
		
		//Lead pax info in traveller detials page show/hide
		toggleLeadPaxInfo();
		
		/**
		 * @description pre populate selected guest in the fileds
		 */
		$('._addHTravellerInfo').change(function(){
			var flagCssPath = "";
			var title = $(this).find(':selected').attr('data-title');
			var fname = $(this).find(':selected').attr('data-fname');
			var lname = $(this).find(':selected').attr('data-lname');
			var email = $(this).find(':selected').attr('data-email');
			var mobile =$(this).find(':selected').attr('data-mobile');
			var mobileAreaCountryCode =$(this).find(':selected').attr('data-mobileareacountrycode');
			var mobileAreaCode =$(this).find(':selected').attr('data-mobileareacode');
			var nationalityAttr =$(this).find(':selected').attr('data-nationality');
			/* var cName = $('#countries_title').find('img').attr('class').split(' ');
			console.log(cName.length);
			if(mobileAreaCountryCode!=undefined && mobileAreaCountryCode!=''){
				for(var i=0;i<cName.length;i++){
					console.log('cls::'+cName[i]);
					if(cName[i].length==2){
						console.log('true cls::'+cName[i]+'----'+mobileAreaCountryCode.toLowerCase());
						$('[id=countries_title]').find('img').removeClass(cName[i]);
						$('[id=countries_title]').find('img').addClass(mobileAreaCountryCode.toLowerCase());
					}
				}
			}else{
				
			} */
			$(this).parents('.guestDetails').find('._txtTitle').val(title);
			$(this).parents('.guestDetails').find('._firstName').val(fname);
			$(this).parents('.guestDetails').find('._lastName').val(lname);
			$(this).parents('.guestDetails').find('._email').val(email);
			if(mobile!='' && mobile!='undefined' && mobile.split('-').length>1){
				$(this).parents('.guestDetails').find('._phone-number').val(mobile.split('-')[1]);
			}
			else{
				$(this).parents('.guestDetails').find('._phone-number').val(mobile);
			}
			if(mobileAreaCode.charAt(0) == "+"){
				$(this).parents('.guestDetails').find('._phone-number-code').val(mobileAreaCode);
			}
			else{
				$(this).parents('.guestDetails').find('._phone-number-code').val("+"+mobileAreaCode);
			}
			if(mobileAreaCountryCode!=""){
				flagCssPath = mobileAreaCountryCode+" fnone cc-flag fnone";
				$(this).parents('.guestDetails').find('.ddTitleText img').attr("class",flagCssPath.toLowerCase());
			}
			else{
				flagCssPath = "sa fnone cc-flag fnone";
				$(this).parents('.guestDetails').find('.ddTitleText img').attr("class",flagCssPath.toLowerCase());
				$(this).parents('.guestDetails').find('._phone-number-code').val("+966");
			}
			
			if(nationalityAttr!=""){
				$(this).parents('.guestDetails').find('._nationality').parents('.custom-select-v3').find('a span').text('');
				var natName = $(this).parents('.guestDetails').find('._nationality').parents('.custom-select-v3').find('ul li[data-value="'+nationalityAttr+'"]').attr('data-cname');
				$(this).parents('.guestDetails').find('._nationality').parents('.custom-select-v3').find('a span').text(natName);
				$(this).parents('.guestDetails').find('._issuingCountry').parents('.custom-select-v3').find('a span').text(natName);
				var nationality = $(this).parents('.guestDetails').find('._nationality').parents('.custom-select-v3').find('._nationality option[value="'+nationalityAttr+'"]');
				var issuingCountry = $(this).parents('.guestDetails').find('._issuingCountry').parents('.custom-select-v3').find('._issuingCountry option[value="'+nationalityAttr+'"]');
				nationality.prop('selected','selected');
				issuingCountry.prop('selected','selected');
			}
			
			hotelSelTrav({
				"title":title,
				"first_name":fname,
				"last_name":lname,
				"email":email,
				"phone":mobile 
			});
		});
	if(typeof $('.couponOfcode').text() == 'undefined' || $('.couponOfcode').text()==null || $('.couponOfcode').text() == ''){
		$('.couponOfcode').hide();
	}else{
		$('.couponOfcode').hide();
	}
});

//Cookie traveler and class widget generate 
function travllerAndClassWidgetH(){
	if(typeof Cookies.get('HOTEL_SEARCH_COOKIE')!='undefined'){
		var data = Cookies.get('HOTEL_SEARCH_COOKIE');
		var hcookieData = JSON.parse(data);
		//console.log("Hotel Cookie:  "+JSON.stringify(hcookieData));
		
		$(".noOfRoomsSel._sub").val(hcookieData.roomCnt);
		for(i=1; i<parseInt(hcookieData.roomCnt);i++){
			$(".noOfRoomsSel._sub").trigger("change");
		}
		
		hcookieData.roomCnt = hcookieData.roomCnt || "1";
		hcookieData.elmAdult = hcookieData.elmAdult || "2";
		hcookieData.elmChild = hcookieData.elmChild || "";
		hcookieData.elmChildAge = hcookieData.elmChildAge || "";
		
		var adltCnt = (hcookieData.elmAdult).split(",");
		var chdCnt = (hcookieData.elmChild).split(",");
		var chdAgeCnt = (hcookieData.elmChildAge).split("|");
		
		$(".roomsWidget ._htlroomcontainer").each(function(key){
			$(this).find(".adultSelected").val(adltCnt[key]);
			
			$(this).find(".childSelected").val(chdCnt[key]);
			$(this).find(".childSelected").trigger("change");
			
			chldAge = chdAgeCnt[key].split(",");
			for(i=0; i<chldAge.length;i++){
				$(this).find(".childAge select").eq(i).val(chldAge[i]);
			}
		});
		
		$("#hotelRooms").val(hcookieData.roomCnt);
		$("#hiddena").val(hcookieData.elmAdult);
		$("#hiddenc").val(hcookieData.elmChild);
		$("#hiddenca").val(hcookieData.elmChildAge);
		$("#hiddenca").attr("data-val",hcookieData.elmChildAge);
		
		setTimeout(function(){
			$("#hotelSec-cont #changesearch-options").hide();
		},500);
	}
}

/*
*Hotel Results Refresh Rendering
*/
var PAGEID = $('input[name=_PAGE_ID]');
if(PAGEID.val()=="HOTELRESULT_PAGE"){
	getHotelRoute(window.location.href);
}


 $('body').on('click','.nbhClsbtn', function(){
	var target =  $(this).parents('section.item').find('.nearByhotels');
	target.parents('.nearHotel').hide();
 });
 
 function unicodeConverter(data) {
	 var d='';
	 if(typeof data!='undefined' && data!=null){
		var datas =data;
		//console.log(datas);
		
		var r = /\\u([\d\w]{4})/gi;
		datas = datas.replace(r, function (match, grp) {
			  return String.fromCharCode(parseInt(grp, 16)); } );
		
		 d = unescape(datas);
	 }
		//console.log("after unescape :",d);
		return d;
	}
 
/**
 *For Price Slider
 */
var $range, slider;

var httimer=0;
var hModifyDP = true;
var hotelTemplateVar = (function() {
		'user strict';
		
		return {
			/**
			*Global Variables
			*/
			uuid: '',
			topLandMarkList: [],
			baseData: [],
			isActive:false,
			sc:[],
			HSRCObj: [],
			filterData: [],
			baseObj: [],
			hashmap: [],
			setSelectedCurrency:'',
			//set orginal base object [clone]
			dynamicTemplate:'',
			univData:'',
			starRatingFilterData: {},
			HSRL: {},
			setcriteria:{},
			districtFilterList:{},
			priceSort: '',
			ratingSort: '',
			filterUIArry:[],
			priceMin: 0,
		  	priceMax: 0,
		  	uiValue: [],
		  	selectedHD: false,
		  	hotDeal:false,
		  	curConversion: true,
		  	HSSKEY: '',
		  	HOTELNAMESEARCHRESILT: [],
		  	HUNCObj: [],
		  	eventBindingFlagH: false,
		  	SHSO: [],
		  	landMarkObjHolder: [],
		  	topLandMarkData: [],
		  	priceFilterMin: 0,
		  	priceFilterMax: 0,
		  	cityLat:'',
		  	cityLng:'',
		  	resetFilterswithMS:  false,
			landMarkFtlr: false,
			loyaltyEarnPoints:{},
		
		/**
		*@description Load template Content
		*@param HTML Selector [dynamicTemplate(Dynamic template to Loaded)]
		*@param String [templateID (Template ID)]
		*@param data Array/Object [data(Json Data)]
		*@param HTML Selector [toUpdate(Template to update)]
		*@return 
		*/
		loadTemplate:function(templateID,data,toUpdate,callback){
			var result;
			//Load the template
			var template = tmpl($(this.dynamicTemplate).filter('#'+templateID).html(),data);
			var r = /\\u([\d\w]{4})/gi;
			template = template.replace(r, function (match, grp) {
			    return String.fromCharCode(parseInt(grp, 16)); } );
			template = unescape(template);
			//Select result container
			if(typeof toUpdate==='object'){			
				result = toUpdate;
			}else{			
				result = $('#'+toUpdate);
			}
			//Empty the result container
			result.empty();
			//Load data to the result container
			result.append(template);
			_langGlobal.langInit();
			//userTrackerModule.init();;
			
			//tooltip for hotel result page top features
			$('.tt').tooltip();
			pricetagConvert.init();
			//below script for img lazy load
			var bLazy = new Blazy({
				breakpoints: [{ 
				src: '../img/destinations/call-icon.jpg'
			}]
			  , success: function(element){
				setTimeout(function(){
				var parent = element.parentNode;
				parent.className = parent.className.replace(/\bloading\b/,'');
				}, 200);
				}
		   });
		    if(typeof callback == 'function')
			   return callback();
		   
		},
		loadFilter:function(){
			var $t = this;
			//Hotel Star Rating Object
			$t.getHotDeal();
  			var HSRO = $t.getStarRatingList();
  			var DLO = $t.getDistrictList();
  			this.starRatingFilterData = {
				//Hotel Start Rating List
				HSRL:this.HSRCObj,
			};
  			this.districtFilterList = DLO;
  		},
  		getHotDeal:function(){
  			this.HUNCObj = [];
  			var array = this.filterData,item;
			for(var i in array){
	  			item = array[i];
	  			this.HUNCObj.push({name:item.staticData.hotelName,price:item.up.p,rating:item.staticData.starRating});
	  			if(item.hotDeal){
	  				this.hotDeal = true;	
	  			}
	  		}
		},
  		getDistrictList:function(){
			var hotelData = this.filterData;
			var maps = this.hashmap;
			//Hotel District List Object
			var HDLO = [],count = 0;
			for(var i in hotelData){
				if(typeof hotelData[i].staticData.distId !== "undefined" && hotelData[i].staticData.distId!=null){
					HDLO.push(maps.district[hotelData[i].staticData.distId]);
				}else{
					count = count+1;
					HDLO.push('');
				}
			}
			HDLO = this.hgroupArrayCount(HDLO);
			return HDLO; 
		},
		hgroupArrayCount:function(array) {
			result = {};
		  	for (key in array) {
		  		if (result[array[key]]) {
		  			result[array[key]]++;
		  		} else {
		  			result[array[key]] = 1;
		  		}
		  	}
		  	return result;
		},
		getSelectedCurrency:function(opt){
			if(opt==false){
				if(this.setSelectedCurrency=="SAR"){
					this.setSelectedCurrency = "SAR";
				}else{
					this.setSelectedCurrency = currencySymbols(this.setSelectedCurrency);				
				}
			}
			return this.setSelectedCurrency;
		},
		getStarRatingList:function(){
			var hotelData = this.filterData;
			this.HSRCObj = [];
			//Hotel Star Rating Object
			var HSRO = [];
			for(var i in hotelData){
				HSRO.push([hotelData[i].staticData.starRating,Math.ceil(hotelData[i].up.p)]);
			}
			hotelTemplateVar.ratingFilteringProcessor(HSRO);
	  		return HSRO;
		},
		ratingFilteringProcessor:function(objData){
			var ratings = [];
		  	var star1 = [],
		  		star2 = [],
		  		star3 = [],
		  		star4 = [],
		  		star5 = [];
				unrated = [];
		  	for (var i = 0; i < objData.length; i++) {
		  		var f = objData[i][0];
		  		var totalFare = objData[i][1];
		  		switch (f) {
		  		case "1":
		  			star1.push(totalFare);
		  			break;
		  		case "2":
		  			star2.push(totalFare);
		  			break;
		  		case "3":
		  			star3.push(totalFare);
		  			break;
		  		case "4":
		  			star4.push(totalFare);
		  			break;
		  		case "5":
		  			star5.push(totalFare);
		  			break;
		  		case "0":
		  			unrated.push(totalFare);
		  			break;
		  		}
		  	}
		  	stars = [{
		  		'0': unrated
		  	}, {
		  		'1': star1
		  	}, {
		  		'2': star2
		  	}, {
		  		'3': star3
		  	}, {
		  		'4': star4
		  	}, {
		  		'5': star5
		  	}];
		  	this.starList(stars.reverse());
		},
		starList:function(array){
			for (var i = 0; i < array.length; i++) {
		  		for (var v in array[i]) {
		  			var _SOC = {
		  				lowPrice: "",
		  				keyCode: '',
		  				totalCount: 0
		  			};
		  			this.HSRCObj.push({key:'currency',value:this.getSelectedCurrency()});
		  			if (typeof array[i][v] !== 'undefined') {
		  				var gs = this.getStars(array[i][v]);
		  				_SOC.lowPrice = gs[0];
		  				_SOC.totalCount = gs[1];
		  				switch (v) {
		  				case "1":
		  					_SOC.keyCode = 1;
		  					break;
		  				case "2":
		  					_SOC.keyCode = 2;
		  					break;
		  				case "3":
		  					_SOC.keyCode = 3;
		  					break;
		  				case "4":
		  					_SOC.keyCode = 4;
		  					break;
		  				case "5":
		  					_SOC.keyCode = 5;
		  					break;
		  				case "0":
		  					_SOC.keyCode = 0;
		  					break;
		  				}
		  				this.HSRCObj.push(_SOC);
		  			}
		  		}
		  	}
		},
		getStars:function(array) {
		  	var outPut = [];
		  	if (typeof array !== 'undefined' && array.length > 0) {
		  		outPut = array.sort(function (a, b) {
		  			return a - b;
		  		});
		  	}
		  	return [outPut[0], outPut.length];
		},
		/**
		*@description Method to process the final execution taking the base object
		*@params Boolean
		*@return Boolean
		*/
		render: function(priceRender,callback) {
			hotelTemplateVar.SHSO = [];
			var $t = this;
			//get the base object which we got from the search response
			console.log(JSON.parse(this.baseData));
			$t.filterData = this.baseObj;
			/*
			 *initialize global scope for the filters
			 */
			var $starRating = [];
			var $minMaxPrice = [];
			var $accTypes = [];
			var $areaList = [];
			var $hotelChains = [];
			var $hotDeal = [];
			async.series([
				function(callback){
					//Airline name filter
					$starRating = $t.getFilteredstarRating();
					//hotDeal filter
					$accTypes = $t.getFilteredAccTypes();
					//District filter
					$areaList = $t.getFilteredDistricts();
					//Hotel CHains filter
					$hotelChains = $t.getFilteredHotelChains();
					//Min/Max Price filter
					//$minMaxPrice = $t.getFilteredPrice();
					$minMaxPrice.push($t.priceFilterMin);
					$minMaxPrice.push($t.priceFilterMax);
					//Hot Deal
					$hotDeal = $t.getFilteredHotDeal();
					$t.landmarksData();
					return callback();
				},
				function(callback){
					if(hotelTemplateVar.HSSKEY!==""){
						$t.filterByHotel(hotelTemplateVar.HSSKEY);	  
					}
					if($starRating.length>0){
						$t.filterByStarRatings($starRating);
					}
					if($t.landMarkObjHolder.length>0){
						$t.sortByDistance('asc');
				  	}
					if($accTypes.length>0){
						$t.filterByAccType($accTypes);
					}
					if($areaList.length>0){
						$t.filterByArea($areaList);
					}
					if($hotelChains.length>0){
						$t.filterByHotelChain($hotelChains);
					}
					if($t.priceSort != "") {
						$t.sortByPrice($t.priceSort);
				  	}
					if($t.ratingSort != "") {
						$t.sortByRating($t.ratingSort);
				  	}
					if($t.selectedHD){
						$t.filterByHotDeal($t.selectedHD);
						$t.selectedHD = false;
					}
					//removing condition bcz of after currency change price filter is not working
					//if($t.curConversion){
						if($minMaxPrice!=""){
							$t.filterByPrice($minMaxPrice);
						}
					//}
					return callback();
				}
				],function(){			
						
					
					//console.log(renderedData);
					if(priceRender){
						$t.resetPriceSlider($t.filterData);
					}
					$t.HUIFilterSelected();
					
					if(hotelTemplateVar.SHSO.length>0){
						var data = {
							SHSO: hotelTemplateVar.SHSO,
							maps: hotelTemplateVar.hashmap,
							nRms: hotelTemplateVar.sc.nRms,
							lang: hotelTemplateVar.lang,
							sc:hotelTemplateVar.sc,
							loyaltyEarnPoints:hotelTemplateVar.loyaltyEarnPoints
						}

						hotelTemplateVar.loadTemplate('hotel-SHSO-view', data , $('#_apx-list-view'));
						$('#_apx-list-view').show();
						$('.allHotels').attr('style','display:block');
						if($t.filterData.length===0){
							$('.allHotels').attr('style','display:none');
						}
					}else if(hotelTemplateVar.SHSO.length===0){
						$('#_apx-list-view').hide();	
						$('.allHotels').attr('style','display:none');
					}
					hpaginationOptInit = cmnPaginationConfig(hpageselectCallback);
					$("#pagination").pagination($t.filterData.length,hpaginationOptInit, $t.filterData);
					if($('#list-view').is(':visible')){
						$('#list-view').show();
						$('#map-view').hide();
					}else{
						$('#list-view').hide();
						$('#map-view').show();
						$('#hotels-tabs-nav li a.map').trigger('click');
					}
					if(hotelTemplateVar.SHSO.length>0){
						$('#hotelCount').text($t.filterData.length+1);
					}else{
						$('#hotelCount').text($t.filterData.length);
					}
					var renderedData = JSON.parse(JSON.stringify($t.filterData));
					if(typeof callback==='function') return callback(renderedData);
				});
		},
		//Sort by Distance
		sortByDistance: function (option){
			var array = this.filterData;
	  		if (option == "asc") {
	  			array.sort(function (a, b) {
	  				return a.staticData.distanceLandMark.distance - b.staticData.distanceLandMark.distance;
	  			});
	  			this.filterData = array;
	  		} else if (option == "desc") {
	  			array.sort(function (a, b) {
	  				return b.staticData.distanceLandMark.distance - a.staticData.distanceLandMark.distance;
	  			});
	  			this.filterData = array;
	  		}
	  	},
		landmarksData: function(){
			var obj = hotelTemplateVar.filterData;
	    	for(var i=0; i<obj.length; i++){
	    		var latLon = latLonToDistance(hotelTemplateVar.setcriteria.lat,hotelTemplateVar.setcriteria.long,obj[i].staticData.lat,obj[i].staticData.lng);
				//Calculate Distance based on Initial lat lon point 
				if(hotelTemplateVar.setcriteria.lat!="" && hotelTemplateVar.setcriteria.long!="" && obj[i].staticData.lat!="" && obj[i].staticData.lng!=""){
					obj[i].staticData.distanceCity = latLon;
				}else{
					obj[i].staticData.distanceCity = null;
				}
				
				if(hotelTemplateVar.landMarkObjHolder.length>0 && obj[i].staticData.lat!="" && obj[i].staticData.lng!=""){
					var latLonLandMark = latLonToDistance(hotelTemplateVar.landMarkObjHolder[0][1],hotelTemplateVar.landMarkObjHolder[0][2],obj[i].staticData.lat,obj[i].staticData.lng);
					var data = {
							distance:latLonLandMark,
							landmarkName:hotelTemplateVar.landMarkObjHolder[0][0]
					}
					obj[i].staticData.distanceLandMark = data;					
				}else{
					var data = {
							distance:null,
							landmarkName:''
					}
					obj[i].staticData.distanceLandMark = data;
				}

				//top landmark distance calculation
				if(hotelTemplateVar.topLandMarkList.length>0){
					var topLandMarks=[];
					for(indx=0;indx<hotelTemplateVar.topLandMarkList.length;indx++){
						var topLandMark=hotelTemplateVar.topLandMarkList[indx];
						var distance = latLonToDistance(topLandMark.lat,topLandMark.lng,obj[i].staticData.lat,obj[i].staticData.lng);
						var topLandMark = {
							distance:distance,
							landmark:topLandMark
						}	
						topLandMarks.push(topLandMark);
				}
				obj[i].topLandMarks=topLandMarks;
				}
			}
	    },
		//Filter by Hotel
	  	filterByHotel: function (key){
	  		var i, j, item, array = this.filterData,
	  			reArray = [],
	  			holder;
	  		for (var i in array){
	  			item = array[i];
	  			holder = item.staticData.hotelName;				
	  			if(holder.toLowerCase().indexOf(key.toLowerCase())!=0){
					reArray.push(item);  				
	  			}else if(holder.toLowerCase().indexOf(key.toLowerCase())==0){		
	  				this.SHSO = [];
	  				item.uuid = hotelTemplateVar.uuid;
	  				item.noOfnights = getDataFromUrl('nights');
	  				this.SHSO.push(item);									
				}
	  		}
	  		this.filterData = reArray;
	  	},
		//Filter By Deals
		filterByHotDeal: function (value){
			var  array = this.filterData,reArray = [];
			for(var i in array){
	  			item = array[i];
	  			if(item.hotDeal){
	  				reArray.push(item);  	
	  			}
	  		}
			this.filterData = reArray;
		},
		getFilteredHotDeal:function(){
			$(this.filterSelector.hotDeal).each(function(){
				if($(this).is(':checked')){
					hotelTemplateVar.selectedHD = true;
				}
			});
		},
		HUIFilterSelected:function(){
			 if(hotelTemplateVar.priceFilterMin!=0 && hotelTemplateVar.priceFilterMax!=0){
				 var offsetPopTop = $('#_bodyContainer').offset().top;
				 $('html, body').animate({scrollTop:offsetPopTop}, 500);
				  removeValueFromArr('priceSlider','price',hotelTemplateVar.uiValue);
				  if(lang =='en')
				  {
				  	 hotelTemplateVar.uiValue.push({
	                  source:'priceSlider',
	                  value:'price',
	                  id:'',
					  display:"<span class='filtPrice'><span>"+i18n.t(this.getSelectedCurrency())+"</span> "+this.priceFilterMin+" - <span>"+i18n.t(this.getSelectedCurrency())+"</span> "+this.priceFilterMax + "</span>"
	              });
				  }else{

				  	 hotelTemplateVar.uiValue.push({
	                  source:'priceSlider',
	                  value:'price',
	                  id:'',
					  display:"<span class='filtPrice'>"+this.priceFilterMin+ "<span>" +i18n.t(this.getSelectedCurrency())+"</span> "+" - "+this.priceFilterMax+"<span>"+i18n.t(this.getSelectedCurrency())+"</span>"
	              });
				  }

				 
			  }else{
				  removeValueFromArr('priceSlider','price',hotelTemplateVar.uiValue);
			  }
			  if(hotelTemplateVar.landMarkObjHolder.length>0){
				  removeValueFromArr('landMarkSort','landmark',hotelTemplateVar.uiValue);
				  hotelTemplateVar.uiValue.push({
	                  source:'landMarkSort',
	                  value:'landmark',
	                  id:'',
	                  display:hotelTemplateVar.landMarkObjHolder[0][0]
	              });
			  }else{
				  removeValueFromArr('landMarkSort','landmark',hotelTemplateVar.uiValue);
			  }
			  $('input[type="checkbox"]').each(function(){
		    	  var source = $(this).attr('name');
		          var value = $(this).val();
		          var id = $(this).attr('id');
	        	  var displayVal = "";
	        	  if(source=="district" || source=="star" || source=="accommodation_type" || source=="hotel_deal" || source=="facility-type" || source=="hotel-chain"){
		              if($(this).is(':checked')){
		            	  var offsetPopTop = $('#_bodyContainer').offset().top;
		            	  $('html, body').animate({scrollTop:offsetPopTop}, 500);
		            	  if(isFilterInArray(source,value,hotelTemplateVar.uiValue)==true){
		                	  if(source=="star"){
		                		  displayVal = hotelTemplateVar.starLangRender(value);
		                	  }else{
		                		  displayVal = value;
		                	  }
		                	  if(source=="district" && $.trim(value)==""){
		                		  displayVal = id;
		                	  }
		                	  if(source=="hotel-chain"){
		                		  displayVal = $(this).parents('li').find('label').attr('title');
		                	  }
		                      hotelTemplateVar.uiValue.push({
		                          source:source,
		                          value:value,
		                          id:id,
		                          display:displayVal
		                      });
		                  }
		              }else{
		            	  removeValueFromArr(source,value,hotelTemplateVar.uiValue);
		              }
		          }        
		      }); 
			  generateFilterUI(hotelTemplateVar.uiValue);
		},
		starLangRender:function(value){
			  var language_data = "";
			  if(value!=""){
				  switch(value){
				  case '0':
					  language_data = i18n.t("unrated");
					  break;
				  case '1':
					  language_data = '1 '+i18n.t("star");
					  break;
				  case '2':
					  language_data = '2 '+i18n.t("star");
					  break;
				  case '3':
					  language_data = '3 '+i18n.t("star");
					  break;
				  case '4':
					  language_data = '4 '+i18n.t("star");
					  break;
				  case '5':
					  language_data = '5 '+i18n.t("star");
					  break;
				  }
			  }
			  return language_data;
		},
		//Sort by Rating
	  	sortByRating: function (option) {
	  		var array = this.filterData;
	  		if (option == "asc") {
	  			array.sort(function (a, b) {
	  				return a.staticData.starRating - b.staticData.starRating;
	  			});
	  			this.filterData = array;
	  		} else if (option == "desc") {
	  			array.sort(function (a, b) {
	  				return b.staticData.starRating - a.staticData.starRating;
	  			});
	  			this.filterData = array;
	  		}
	  	},	
		//Sort by price
		sortByPrice: function (option) {
			var array = this.filterData;
			if (option == "asc") {
				array.sort(function (a, b) {
					return a.up.p - b.up.p;
				});
				this.filterData = array;
			} else if (option == "desc") {
				array.sort(function (a, b) {
				return b.up.p - a.up.p;
			});
				this.filterData = array;
			}
		},
		//Filer By Hotel CHain
		filterByHotelChain: function (value){
			var i, j,item,array = this.filterData,reArray = [],holder,maps = this.hashmap;	
			for(i = 0, j = array.length; i<j; i++){
				item = array[i];
				holder =  item.staticData.hotelChainId;
				if(typeof holder !== "undefined" && this.histhere(value,holder)==true){
					reArray.push(item);
				}
			}
			this.filterData = reArray;
		},
		histhere: function(array,element) {
			var arr=array;
			var elem=element;
			var isthere=false;
			if(array.length>0){
				for(var i=0;i<arr.length;i++){
					if(arr[i]==elem){
						isthere=true ;
						return isthere;
					}
				}
			}
			
			return isthere;
	    },
		getFilteredHotelChains:function(){
			var hotelChains = [];
			$(this.filterSelector.hotelChains).each(function(){
				if($(this).is(':checked')){
					hotelChains.push($.trim($(this).val()));
				}
			});
			return hotelChains;
		},
		//Filter by Area
	  	filterByArea: function (value) {
	  		var i, j, item, array = this.filterData,maps = this.hashmap,reArray = [],holder;
	  		for (i = 0, j = array.length; i < j; i++) {
	  			item = array[i];
	  			if(item.staticData.distId!==null){
	  				holder = unicodeConverter(maps.district[item.staticData.distId]);
	  				
		  			if (typeof holder !== "undefined" && cmnFindexofSearch(holder, value) == true) {
		  				reArray.push(item);
		  			}
	  			}else if(item.staticData.distId==null){
	  				reArray.push(item);
	  			}
	  		}
	  		this.filterData = reArray;
	  	},
		getFilteredDistricts:function(){
			var areaList = [];
			$(this.filterSelector.area).each(function(){
				if($(this).is(':checked')){
					areaList.push($.trim($(this).val()));
				}
			});
			return areaList;
		},
		//Filter By Accommodation Types
		filterByAccType: function (value){
			var i, j,item,array = this.filterData,reArray = [],holder,holder1 = [];	
			for(i = 0, j = array.length; i<j; i++){
				item = array[i];
				holder =  item.staticData.hotelType;
				for(var k in holder){
					holder1.push(holder[k])
				}
				if(typeof holder !== "undefined" && cmnIndexofSearchArr(holder1,value)==true){
					reArray.push(item);
				}
				holder1 = [];
			}
			this.filterData = reArray;
		},
		getFilteredAccTypes: function(){
			var accTypes = [];
			$(this.filterSelector.accTypes).each(function(){
				if($(this).is(':checked')){
					accTypes.push($.trim($(this).val()));
				}
			});
			return accTypes;
		},
		/**
		*@description Price Filter Function
		*@params Array (Price Filter Criteria [960,1250])
		*@return null
		*/
		filterByPrice: function(value) {
			var min = value[0];
			var max = value[1];
			var i, item, array = this.filterData,
			reArray = [],
			holder;
			for (i in array) {
				item = array[i];
				holder = parseInt(array[i].up.p);
				if (min != 0 && max != 0) {
					if (typeof holder !== "undefined" && cmnBetweenSearch(holder, min, max) === true) {
						reArray.push(item);
					}
				} else {
					reArray.push(item);
				}
			}
			this.filterData = reArray;
		},
		getFilteredPrice:function(){
			var s = $(this.filterSelector.priceFilter).val();
			var minMaxArr = s.split(';') || [];
			var priceMin = parseInt(minMaxArr[0]) || 0;
			var priceMax = parseInt(minMaxArr[1]) || 0;		
			return [priceMin,priceMax];
		},
		//Filter By Star Ratings
		filterByStarRatings: function (value){
			var i, j, item, array = this.filterData,
	  			reArray = [],
	  			holder;
	  		for (i = 0, j = array.length; i < j; i++) {
	  			item = array[i];
	  			holder = item.staticData.starRating;
	  			if (typeof holder !== "undefined" && cmnFindexofSearch(holder, value) == true){
	  				reArray.push(item);
	  			}
	  		}
	  		this.filterData = reArray;
	  	},
		getFilteredstarRating: function(){
			var starRating = [];
			$(this.filterSelector.starRatings).each(function(){
				if($(this).is(':checked')){
					starRating.push($.trim($(this).val()));
				}
			});
			return starRating;
		},
		setData: function(res) {
			var obj = JSON.parse(JSON.stringify(res));
			
			this.baseData = obj;
			this.cExR = JSON.parse(obj).cEXRate;
			this.sc=JSON.parse(obj).searchCriteria;
			this.filterData = JSON.parse(obj).searchRS;
			this.baseObj = JSON.parse(obj).searchRS;
			this.hashmap = JSON.parse(obj).maps;
			this.uuid = JSON.parse(obj).uuid;
			this.lang = JSON.parse(obj).language;
			this.cccNumber = JSON.parse(obj).cccNumber;
			this.domainName = JSON.parse(obj).domainName;
			this.topLandMarkList = JSON.parse(obj).topLandMarkList;
			var r = JSON.parse(res);
			this.isActive = true;
			this.loyaltyEarnPoints=JSON.parse(obj).loyaltyEarnPoints;
			if(r.searchRS){
				this.setSelectedCurrency = r.searchRS[0].up.uc;
			}else{
				this.setSelectedCurrency = 'SAR';
			}
		},
		filterSelector:{
			area: "#_area_filter_template li input[type=checkbox]",
			starRatings: "#_starRating_template li input[type=checkbox]",
			sortPrice: "#_sortPrice",
			sortStarRating: "#_sortRating",
			accTypes: "#_accType_filter_template li input[type=checkbox]",
			hotDeal: "#_hotDeal_filter_template li input[type=checkbox]",
			hotelChains: "#_hotelChain_filter_template li input[type=checkbox]",
			hotelFilter: "._hotelFilter",
			priceFilter: "#_price_fliterh",
			priceFilterSection: "#_flight-price-filter-section",
			sortSelect: "#_sortSelect",
		},
		init:function(){
			var $t = this;
			$('#hotels-tabs-nav li a.map').click(function(){
				 //$('#infowindow').css({'visibility':'hidden'});
				   setTimeout(function(){
				   //Load Map-View
					   for(var i in hotelTemplateVar.filterData){
						   hotelTemplateVar.filterData[i].uuid = $t.uuid;
						   hotelTemplateVar.filterData[i].noOfNights = $t.sc.nights;
						   hotelTemplateVar.filterData[i].nRms = hotelTemplateVar.sc.nRms;
					   }
					   mapViewJsonStructure(hotelTemplateVar.filterData);	   
				   },1000);

				   $('#list-view').hide();
				   $('#_apx-list-view').hide();
				   $('#map-view').show();
				   $('.allHotels').attr('style','display:none');
				   $('#pagination').hide();
			});
			$('#hotels-tabs-nav li a.list').click(function(){
				 $('#map-view').hide();
				 $('#list-view').show();
				 $('#_apx-list-view').show();
				 $('.allHotels').attr('style','display:none');
				 $('#pagination').show();
				 $t.render();
			});

			/**
			*Sort by Star Rating
			*/
			$('body').on('change',$t.filterSelector.starRatings,function(){
				$t.hresetPriceSliderOnLoad();
				setTimeout(function(){
					$t.render(true);				
				},80);
			});
			/**
			 *Filter by Price
			 */					
			$('body').on('change',this.filterSelector.priceFilter,function(){
				$this = $(this);
				window.clearTimeout(httimer);
				httimer = window.setTimeout(function(){
					var priceStr;
					async.parallel([
						function(callback){
							priceStr = $t.getFilteredPrice();
							return callback();
						},
						function(callback){
							$t.setPriceMinMax(priceStr);
							return callback();
						}
					],
					function(err){
						$t.render();
						hotelPriceChange({"left_range":$t.priceFilterMin,"right_range":$t.priceFilterMax})
						//$t.findFLKey($this);
					});
				},700);				
			});
			/**
			 *Filter by Price
			 */					
			$('body').on('change',this.filterSelector.hotDeal,function(){
				$t.hresetPriceSliderOnLoad();
				$t.render(true);
			});
			/**
			 *Filter by Accomidation Types
			 */					
			$('body').on('change',this.filterSelector.accTypes,function(){
				$t.hresetPriceSliderOnLoad();
				$t.render(true);
			});
			/**
			 *Filter by Districts
			 */					
			$('body').on('change',this.filterSelector.area,function(){
				$t.hresetPriceSliderOnLoad();
				$t.render(true);
			});
			/**
			 *Filter by Districts
			 */					
			$('body').on('change',this.filterSelector.hotelChains,function(){
				$t.hresetPriceSliderOnLoad();
				$t.render(true);
			});
			/**
			 * this is for filtering by price and star-- New for Hoopla
			 */
		    $('body').on('change',this.filterSelector.sortSelect,function () {
		    	$t.priceSort= "";
		    	$t.ratingSort= "";
		    	var type = $(this).find(':selected').attr('data-type');
		    	var val  = $(this).val();
		    	switch(type){
			    	case '_sortPrice':
			    		$t.priceSort = val;
			    		break;
			    	case '_sortRating':
			    		$t.ratingSort = val;
			    		break;
			    	default:
			    		$t.priceSort= "";
			    		$t.ratingSort= "";
			    		hotelTemplateVar.resetFilterswithMS = true;
		    	}
		    	$t.render();
		    });
		   
		    if(this.eventBindingFlagH===false){
				$t.initFilterRemove();
			}
		    
		  //Filter hotel by name
		    var htimer = null;
		    $('body').on('keyup',this.filterSelector.hotelFilter,function(event){
		  	  var psElm = $(this).parents('.searchByHotel').find('._filter_hotel_template');
		  	  if(event.which == 46 || event.which == 8){
		  		$('.youHaveFiltered ul li').each(function(){
		  			if($(this).attr('data-source')=="hotelnamefilter"){
		  				removeValueFromArr('hotelnamefilter',hotelTemplateVar.HSSKEY,this.uiValue);
		  			}
		  		});
		  	  }
		  	  if(event.which !== 40 && event.which !== 38 && event.which !== 13){
		  		  var $this = $(this);
		  		  clearTimeout(htimer); 
		  		  htimer = setTimeout(function(){
		  			var searchKey = $.trim($this.val());
		  			if(searchKey!="" && searchKey.length>2){
		  				hotelTemplateVar.HSSKEY = $this.val();
		  				psElm.slideDown();
		  			}else{
		  				hotelTemplateVar.HSSKEY = "";
		  				psElm.slideUp();
		  			}	
		  			$t.hotelListSearch();
		  		}, 1000);
		  	  }
		    });
		    $('body').on('click','._filter_hotel_template ul li a',function(){
			   	 var psElm = $(this).parents('.searchByHotel').find('._filter_hotel_template');
			   	  $('.youHaveFiltered ul li').each(function(){
			   			if($(this).attr('data-source')=="hotelnamefilter"){
			   				removeValueFromArr('hotelnamefilter','',hotelTemplateVar.uiValue);
			   			}
			   	  });
			   	  hotelTemplateVar.HSSKEY = $(this).text();
			   	  hotelFltrByHtlName({"hotel_name":$(this).text()})
			   	  $($t.filterSelector.hotelFilter).val(hotelTemplateVar.HSSKEY);
			   	  /*if(!$(filterSelector.resetHotelFilter).is(':visible')){
			   		  $(filterSelector.resetHotelFilter).slideDown();
			   	  }*/
			   	  psElm.slideUp();	  	  
			   	  hotelTemplateVar.uiValue.push({
			             source:'hotelnamefilter',
			             value:hotelTemplateVar.HSSKEY,
			             id:'nameHotel',
			             display:hotelTemplateVar.HSSKEY
			         });
			   	  generateFilterUI(hotelTemplateVar.uiValue);
			   	  $t.hotelListSearch();
			   	  $t.render();
			   	  return false;
		     });
		    /**
			 *Reset Filter Action
			 */
			$('body').on('click touchstart','.yhfReset',function(){
				var offsetPopTop = $('#_bodyContainer').offset().top;
				$('html, body').animate({scrollTop:offsetPopTop}, 500);
				
				hotelTemplateVar.priceFilterMin = 0;
				hotelTemplateVar.priceFilterMax = 0;
				async.series([
					function(callback){
						//reset price slider
						$t.hresetPriceSliderOnLoad();
						return callback();						
					},
					function(callback){						
						//Reset Stops Filter
						$($t.filterSelector.starRatings).each(function(){
							$(this).attr('checked', false); 
						});
						//Reset airline filter
						$($t.filterSelector.priceFilter).each(function(){
							$(this).attr('checked', false); 
						});		
						//Reset Stop Over Airport filter
						$($t.filterSelector.hotDeal).each(function(){
							$(this).attr('checked', false); 
						});	
						//Reset Near by airport filter
						$($t.filterSelector.accTypes).each(function(){
							$(this).attr('checked', false); 
						});	
						//Reset Event Departure filter
						$($t.filterSelector.area).each(function(){
							$(this).attr('checked', false); 
						});			
						//Reset Event Arrival filter
						$($t.filterSelector.hotelChains).each(function(){
							$(this).attr('checked', false); 
						});			
						$('.youHaveFiltered ul li').each(function(){
							if($(this).attr('data-source')=="hotelnamefilter"){
								removeValueFromArr('hotelnamefilter','',hotelTemplateVar.uiValue);
							}
						});
						//Remove hotel name filter
						hotelTemplateVar.HSSKEY = "";
						hotelTemplateVar.landMarkObjHolder = [];
						return callback();
						
					},
					function(callback){		
						//Trigger the UI Filter Module
						$t.HUIFilterSelected();										
						//Reset sort dropdown				
						$t.resetSorts();
						return callback();
					},
					function(callback){		
						//Re-render the result view
						$t.SHSO=[];$t.HSSKEY = "";$('._hotelFilter').val('');
						$t.render(true);				
						return callback();
						
					}
				],function(err){					
					//$t.renderBasetemplate();
				});
				return false;
			});
			/***
			 * reloads the distances after selecting the landmark
			 */
			$('body').on('click','a._landMarkAnchor',function(e){	
				$(".distanceDropdown").slideUp(),$t.landMarkObjHolder=[];var lat=$(this).attr("data-lat"),lon=$(this).attr("data-lon"),landMarkName=$(this).text();
				$t.landMarkObjHolder.push([landMarkName,lat,lon]);
				$t.HUIFilterSelected();
				$t.landmarksData();
				hotelTemplateVar.landMarkFtlr = true;
				$t.render();
			});
			setTimeout(function(){
				$t.resetPriceSlider($t.filterData);
			},80);
			$t.render();
		},
		initFilterRemove:function(){
			$('body').on('click','._TabFilterRemove',function(){
				var offsetPopTop = $('#_bodyContainer').offset().top;
				$('html, body').animate({scrollTop:offsetPopTop}, 500);
				
				  var elm = $(this).parents('li');
				  var id = elm.attr('data-id');
				  var source = elm.attr('data-source');
				  if(source=="district"){
					  $('#_area_filter_template').find('#'+id).trigger('click');
				  }else if(source=="star"){
					  $('#_starRating_template li').find('#'+id).trigger('click');	  
				   }else if(source=="accommodation_type"){
					  $('#_accType_filter_template').find('#'+id).trigger('click');	  
				   }
				   /*else if(source=="facility-type"){
					   $('#_filter_hotel_facilities').find('#'+id).trigger('click');	  
				   }*/
				   else if(source=="hotel-chain"){
					   $('#_hotelChain_filter_template').find('#'+id).trigger('click');	  
				   }else if(source=="hotelnamefilter"){
					   $('._hotelFilter').val('');
					   hotelTemplateVar.SHSO=[];
					   removeValueFromArr('hotelnamefilter',hotelTemplateVar.HSSKEY,hotelTemplateVar.uiValue);
					   hotelTemplateVar.HSSKEY = "";
					   hotelTemplateVar.HUIFilterSelected();
				   }else if(source=="priceSlider"){
					   hotelTemplateVar.priceFilterMin = 0;
					   hotelTemplateVar.priceFilterMax = 0;
					   hotelTemplateVar.HUIFilterSelected();
					   $("#_price_fliterh").val(0+":"+0);
					  // hotelTemplateVar.hresetPriceSliderOnLoad();
					  
				   }else if(source=="landMarkSort"){
					  hotelTemplateVar.landMarkObjHolder = [];
					  hotelTemplateVar.HUIFilterSelected();	
				   }else if(source=="hotel_deal"){
					   $('#_hotDeal_filter_template').find('#'+id).trigger('click');	  
				   }
				   hotelTemplateVar.render(true);
				   hotelTemplateVar.resetPriceSlider(hotelTemplateVar.filterData);
			});
			hotelTemplateVar.eventBindingFlagH = true;
		},
		resetSorts: function(){
			$('#_sortSelect').val('Recommended');
		},
		hotelListSearch:function(){
			  var elm = $('._filter_hotel_template'),
				castObject = [];
			  hotelTemplateVar.HOTELNAMESEARCHRESILT = [];
			  if(hotelTemplateVar.HSSKEY!==""){
				  var i, j, item, array = this.HUNCObj,reArray = [],holder;
				var filter = new RegExp($.trim(hotelTemplateVar.HSSKEY),"i");
				for (var i in array){
					item = array[i];
					holder = item.name;
					if (holder.match(filter)){
						reArray.push(item);				
					}
				}
				this.HOTELNAMESEARCHRESILT = reArray; 
			  }	
			  elm.each(function(){
				  if($(this).is(':visible')){
					 if(hotelTemplateVar.HOTELNAMESEARCHRESILT.length==0){
						 //$(this).slideUp();
					 } 
					 castObject = $(this);
				  }
			  });
			  hotelTemplateVar.loadTemplate('filter_hotel_template',hotelTemplateVar.HOTELNAMESEARCHRESILT,castObject);
		},
		hresetPriceSliderOnLoad:function(){
			/*hotelTemplateVar.priceFilterMin = 0;
			hotelTemplateVar.priceFilterMax = 0;*/
			var priceList = hotelTemplateVar.hgetNONFPriceList();
			var min = 0;
			var max = 0;
			if(priceList.length>0){
				min = priceList[0];
				max = priceList[priceList.length -1];
			}
			$(this.filterSelector.priceFilter).val(min+';'+max);
			this.hreRenderPrice(priceList);
		},
		hgetNONFPriceList: function () { //produce [lowest_price,lowest_price...]
            var priceUniqArr = [];
            var hotelData = hotelTemplateVar.baseObj;
			for(var i in hotelData){
				if(nn(hotelData[i].up.p, priceUniqArr) == false) {
					priceUniqArr.push(hotelData[i].up.p);
				}
			}
			priceUniqArr.sort(function(a, b) {
				return a - b;
			});
            return priceUniqArr;
        },
		hreRenderPrice:function(data){
			var currencyIcon = hotelTemplateVar.getSelectedCurrency();
			if(currencyIcon=="SAR"){
				currencyIcon = 'SAR';
			}else{
				currencyIcon = currencySymbols(currencyIcon);				
			}
			if(data.length==0 || data.length==1){
				$(this.filterSelector.priceFilterSection).slideUp();		
			}else{		
				$(this.filterSelector.priceFilterSection).slideDown();
			}
			if(slider){
				slider.destroy();
				$(this.filterSelector.priceFilter).val(data[0]+":"+data[data.length -1]);
			}
			$range =  $(this.filterSelector.priceFilter).ionRangeSlider({
				values: data,
				type: 'double',
				prefix: "<span>"+currencyIcon+"</span> ",
				onFinish: function (obj){
					priceMin = obj.from_value;
					priceMax = obj.to_value;
				}
			});
			slider = $range.data("ionRangeSlider");
		},
		setPriceMinMax:function(value){
			hotelTemplateVar.priceFilterMin = value[0];
			hotelTemplateVar.priceFilterMax = value[1];
		},
		resetPriceSlider:function(data){
			var priceUniqArr = [];
			var hotelData = data;
			var currencyIcon = this.getSelectedCurrency();
			if(currencyIcon=="SAR"){
				currencyIcon = 'SAR';
			}else{
				currencyIcon = currencySymbols(currencyIcon);				
			}
			for(var i in hotelData){
				if(nn(hotelData[i].up.p, priceUniqArr) == false) {
					priceUniqArr.push(parseInt(hotelData[i].up.p));
				}
			}
			priceUniqArr.sort(function (a, b) {
				return a - b;
			});
			if(priceUniqArr.length==0 || priceUniqArr.length==1){
				$('#_price-filter-section').slideUp();		
			}else{		
				$('#_price-filter-section').slideDown();
			}
			if(slider){
				slider.destroy();
				$("#_price_fliterh").val(priceUniqArr[0]+":"+priceUniqArr[priceUniqArr.length -1]);
			}
			$range =  $("#_price_fliterh").ionRangeSlider({
				values: priceUniqArr,
				type: 'double',
				prefix: "<span>"+i18n.t(currencyIcon)+"</span> ",
				onFinish: function (obj) {
					priceMin = obj.from_value;
					priceMax = obj.to_value;
				}
			});
			slider = $range.data("ionRangeSlider");
		},
		//currency conversion
		ccm: function(cur){
			var baseObj = this.baseObj;
			var currency = this.cExR[cur];
			var ccobj = {};
			var cx = this.cExR;
			for(var j in cx){
				ccobj[j] = parseFloat(cx[j])/parseFloat(currency);
				
			}
			var $t = this;
			async.series([
	    		function(callback){
	    			for(var i in baseObj){
						baseObj[i].up.uc = cur;
						baseObj[i].up.p = (parseFloat(baseObj[i].p)*parseFloat(ccobj[baseObj[i].cur])).toFixed(2);
                        baseObj[i].up.wdp = (parseFloat(baseObj[i].wdp)*parseFloat(ccobj[baseObj[i].cur])).toFixed(2);
					}
	    			return callback();
	    		},
	    		function(callback){
	    			$t.filterData = baseObj;
	    			$t.baseObj = baseObj;
	    			$t.setSelectedCurrency = cur;
	    			$t.curConversion = false;
	    			return callback();
	    		},
	    		function(callback){
	    			$t.starRatingFilterData = {};
	    			$t.districtFilterList = {};
	    			$t.loadFilter();
	    			return callback();
	    		}
	    	],function(err){
				hotelTemplateVar.univData.HSRL = hotelTemplateVar.starRatingFilterData;
				hotelTemplateVar.univData.districtFilterList = hotelTemplateVar.districtFilterList;
				hotelTemplateVar.univData.hotDeal = hotelTemplateVar.hotDeal;
				$t.loadTemplate('hotel-filter-view',hotelTemplateVar.univData,$('.filterSec'));
				$t.resetPriceSlider($t.filterData);
				$t.render();
				$('.yhfReset').trigger('click');
			});
		},
		loadQitafHoteltripSummary : function(args)
		{    

			$.get('/common/themes/v2/tmpl/hotel/hotelReviewTerms.ejs?v=nd-v0102', {}, function(reviewTermTemplate) {
                loadTemplate('hotel-trip-summary', {responseData: args.responseData}, $('#hotelTripSummary'), reviewTermTemplate);    
                $('#paymeBtn').val('PAY '+ args.responseData.OBIRS.BookingInfoRS.hotel.rc.up.uc+ ' ' + args.responseData.qitafObj.updatedTotalPrice);
                var responseData =args.responseData;
                
                	var rc2 = i18n.t("pay")+' '+i18n.t(responseData.PBIRS.BookingInfoRS.hotel.rc.up.uc)+' ';
                	var amt = responseData.PBIRS.BookingInfoRS.hotel.rc.up.p;
                	var couponDiscount = (responseData.coupondetails && responseData.coupondetails.deductAmount) ? parseFloat(responseData.coupondetails.deductAmount) : 0;
                	var qitafDiscount = (responseData.qitafObj && responseData.qitafObj.qitafSuccess) ? parseFloat(responseData.qitafObj.convertedRedeemAmt) : 0;
                	var loyaltyDiscount = (responseData.loyaltydetails && responseData.loyaltydetails.redemptionUCAmount) ?parseFloat(responseData.loyaltydetails.redemptionAmount) : 0;
                	var totalDiscount = couponDiscount + qitafDiscount + loyaltyDiscount;
                	amt = (parseFloat(amt - totalDiscount)).toFixed(2);
					$('.completeBooking').val(rc2+amt);	
					if(responseData.paymentObj.domainName=='Global'){
						var couponDiscountSAR = (responseData.coupondetails && responseData.coupondetails.deductSarAmount) ? responseData.coupondetails.deductSarAmount : 0; 
						var qitafDiscountSAR =  (responseData.qitafObj && responseData.qitafObj.qitafSuccess) ? responseData.qitafObj.redeemAmount : 0;
						var loyaltyDiscountSAR = (responseData.loyaltydetails && responseData.loyaltydetails.redemptionAmount) ?parseFloat(responseData.loyaltydetails.redemptionAmount) : 0;
						var totalDiscountSAR = parseFloat(couponDiscountSAR) + parseFloat(qitafDiscountSAR) + parseFloat(loyaltyDiscountSAR);
						$('._sarAmt').text((parseFloat(responseData.paymentObj.sarAmount - totalDiscountSAR).toFixed(2)));
					}else if(responseData.paymentObj.domainName!='Global'){
						var couponDiscountSAR = (responseData.coupondetails && responseData.coupondetails.deductSarAmount) ? responseData.coupondetails.deductSarAmount : 0; 
						var qitafDiscountSAR =  (responseData.qitafObj && responseData.qitafObj.qitafSuccess) ? responseData.qitafObj.redeemAmount : 0;
						var loyaltyDiscountSAR = (responseData.loyaltydetails && responseData.loyaltydetails.redemptionAmount) ?parseFloat(responseData.loyaltydetails.redemptionAmount) : 0;
						var totalDiscountSAR = parseFloat(couponDiscountSAR) + parseFloat(qitafDiscountSAR) + parseFloat(loyaltyDiscountSAR);
						$('._egpAmt').text((parseFloat(responseData.paymentObj.sarAmount - totalDiscountSAR).toFixed(2)));
					}
					
				    fltSmryTraDrpDwn(); 
				    htlReviewSummery()
				if(responseData.coupondetails && responseData.coupondetails !== null){   
					$('.totalSec li:first-child').after('<li><span class="pull-left">'+
					 i18n.t('couponDiscount')+ '</span><span class="pull-right green-txt">'+i18n.t(responseData.PBIRS.BookingInfoRS.hotel.rc.up.uc)+'  <elm class="_priceTag">'+responseData.coupondetails.deductAmount+'</elm></span></li>');
				}
				if(responseData.loyaltydetails && responseData.loyaltydetails !== null){
					$('.totalSec li:first-child').after('<li><span class="pull-left">'+
					 i18n.t('flyinRewardsRedeemed')+ '</span><span class="pull-right green-txt">'+i18n.t(responseData.paymentObj.uc)+'  <elm class="_priceTag">'+responseData.loyaltydetails.redemptionUCAmount+'</elm></span></li>');	
				}
				pricetagConvert.init();
				$("#qitafVal").val("true");
			});			
		},
		loadBnplQitaf : function(data){
		var responseData = data;
			if(responseData.paymentObj.product == 'bnpl'){

					var bookingdata = {};
					bookingdata = responseData;   

					var coupondetails;
					var loyaltydetails;
					if(bookingdata.coupondetails != undefined){
					coupondetails = bookingdata.coupondetails;
					}
					if(bookingdata.loyaltydetails != undefined){
					loyaltydetails = bookingdata.loyaltydetails;
					}
					var responseData= {
					paymentObj:bookingdata.paymentObj,
					qitafObj:bookingdata.qitafObj,
					coupondetails:coupondetails,
					loyaltydetails:loyaltydetails,       
					product : 'H',
					hotelDetails:bookingdata.entityDetails.hotelDetails
					}; 

				$.get('/common/themes/v2/tmpl/hotel/hotelReviewTerms.ejs?v=nd-v0102', {}, function(reviewTermTemplate) { 
					$('.redeemPoints .nav li a').click(function (e) {
						e.preventDefault()
						$(this).tab('show')
					});
					loadTemplate('hotel-bnpl-trip-summary', {responseData: responseData}, $('#hotelBnplTripSummary'), reviewTermTemplate);
					var rc2 = i18n.t("pay")+' '+i18n.t(responseData.paymentObj.currency)+' ';
				 
				  var amt = responseData.paymentObj.up;

				  var couponDiscount = 0, loyaltyDiscount = 0, qitafDiscount = 0;
				  if(responseData.coupondetails && responseData.coupondetails !== null){
					  var couponDiscount = parseFloat(responseData.coupondetails.deductAmount);
                      
					  if(typeof responseData.loyaltydetails !='undefined' && responseData.loyaltydetails !== null){
							loyaltyDiscount = (responseData.loyaltydetails && responseData.loyaltydetails.redemptionUCAmount) ? parseFloat(responseData.loyaltydetails.redemptionUCAmount) : 0;
						}
					   qitafDiscount = (responseData.qitafObj && responseData.qitafObj.qitafSuccess) ? parseFloat(responseData.qitafObj.convertedRedeemAmt) : 0;
					  var totalDiscount = couponDiscount + qitafDiscount + loyaltyDiscount;	                
					  amt = (parseFloat(amt - totalDiscount)).toFixed(2);
					  $('#paymeBtn').val(rc2+amt);
				  }else{
				  	 	if(typeof responseData.loyaltydetails !='undefined' && responseData.loyaltydetails !== null){
							loyaltyDiscount = (responseData.loyaltydetails && responseData.loyaltydetails.redemptionUCAmount) ? parseFloat(responseData.loyaltydetails.redemptionUCAmount) : 0;
						}
					  qitafDiscount = (responseData.qitafObj && responseData.qitafObj.qitafSuccess) ? parseFloat(responseData.qitafObj.convertedRedeemAmt) : 0;var ccDiscount=(responseData.ccdInfo)?parseFloat(responseData.ccdInfo.deductAmount): 0;					  	                
					  var totalDiscount = couponDiscount + qitafDiscount + loyaltyDiscount + ccDiscount;	  
					  amt = (parseFloat(amt - totalDiscount)).toFixed(2);
					  $('#paymeBtn').val(rc2+amt);
				  }		

					if(responseData.paymentObj.domainName=='Global'){
						var couponDiscountSAR = (responseData.coupondetails && responseData.coupondetails.deductSarAmount) ? responseData.coupondetails.deductSarAmount : 0;

						var qitafDiscountSAR =  (responseData.qitafObj && responseData.qitafObj.qitafSuccess) ? responseData.qitafObj.redeemAmount : 0;

						var loyaltyDiscountSAR = (responseData.loyaltydetails && responseData.loyaltydetails.redemptionAmount) ?parseFloat(responseData.loyaltydetails.redemptionAmount) : 0;
						
						var ccDiscountSAR=(responseData.ccdInfo && responseData.ccdInfo.deductSarAmount) ? parseFloat(responseData.ccdInfo.deductSarAmount) : 0;

						var totalDiscountSAR = parseFloat(couponDiscountSAR) + parseFloat(qitafDiscountSAR) + parseFloat(loyaltyDiscountSAR) +parseFloat(ccDiscountSAR);

						$('._sarAmt').text((parseFloat(responseData.paymentObj.sarAmount - totalDiscountSAR).toFixed(2)));
						var sarLyltBkngAmt = (parseFloat(responseData.paymentObj.sarAmount) - parseFloat(totalDiscountSAR)).toFixed(2);
						var lytObj = $('._ltyInfo');
						$(lytObj).attr('data-bamt',sarLyltBkngAmt);	
					}else if(responseData.paymentObj.domainName!='Global'){
						var couponDiscountSAR = (responseData.coupondetails && responseData.coupondetails.deductSarAmount) ? responseData.coupondetails.deductSarAmount : 0; 
						var qitafDiscountSAR =  (responseData.qitafObj && responseData.qitafObj.qitafSuccess) ? responseData.qitafObj.redeemAmount : 0;
						var loyaltyDiscountSAR = (responseData.loyaltydetails && responseData.loyaltydetails.redemptionAmount) ?parseFloat(responseData.loyaltydetails.redemptionAmount) : 0;
						var ccDiscountSAR=(responseData.ccdInfo && responseData.ccdInfo.deductSarAmount) ? parseFloat(responseData.ccdInfo.deductSarAmount) : 0;
						
						var totalDiscountSAR = parseFloat(couponDiscountSAR) + parseFloat(qitafDiscountSAR) + parseFloat(loyaltyDiscountSAR) +parseFloat(ccDiscountSAR);
						
						var sarLyltBkngAmt = (parseFloat(responseData.paymentObj.sarAmount) - parseFloat(totalDiscountSAR)).toFixed(2);
						var lytObj = $('._ltyInfo');
						$(lytObj).attr('data-bamt',sarLyltBkngAmt);	
						$('._egpAmt').text((parseFloat(responseData.paymentObj.sarAmount - totalDiscountSAR).toFixed(2)));
					}
				   fltSmryTraDrpDwn();
				   htlReviewSummery();
					var currEgp = "";
					if(responseData.paymentObj.uc == "EGP"){
						currEgp = "_egpCur";
					}
					if(responseData.coupondetails && responseData.coupondetails !== null){
						$('.totalSec li:first-child').after('<li><span class="pull-left">'+
					 i18n.t('couponDiscount')+ '</span><span class="pull-right green-txt '+currEgp+'">'+i18n.t(responseData.paymentObj.uc)+'  <elm class="_priceTag">'+couponDiscountSAR+'</elm></span></li>');

					     
					}

					if(responseData.loyaltydetails && responseData.loyaltydetails !== null){
						$('.totalSec li:first-child').after('<li><span class="pull-left">'+
					 i18n.t('flyinRewardsRedeemed')+ '</span><span class="pull-right green-txt '+currEgp+'">'+i18n.t(responseData.paymentObj.uc)+'  <elm class="_priceTag">'+responseData.loyaltydetails.redemptionUCAmount+'</elm></span></li>');	
					}

                    /*if(responseData.qitafObj && responseData.qitafObj !== null){
						$('.totalSec li:first-child').after('<li><span class="pull-left">'+
					 i18n.t('Redeemed amount')+ '</span><span class="pull-right green-txt '+currEgp+'">'+i18n.t(responseData.paymentObj.uc)+'  <elm class="_priceTag">'+responseData.qitafObj.redeemAmount+'</elm></span></li>');	
					}*/
					
					 if(responseData.ccdInfo ){
						$('.totalSec li:first-child').after('<li><span class="pull-left">'+
					 i18n.t('Redeemed amount')+ '</span><span class="pull-right green-txt '+currEgp+'">'+i18n.t(responseData.paymentObj.uc)+'  <elm class="_priceTag">'+responseData.ccdInfo.deductAmount+'</elm></span></li>');	
					}


/*
                 	$('.totalSec li:last-child').after('<li><span class="pull-left">'+
					 i18n.t('totalPayableAmount333')+ '</span><span class="pull-right green-txt '+currEgp+'">'+i18n.t(responseData.paymentObj.uc)+'  <elm class="_priceTag">'+amt+'</elm></span></li>');
					pricetagConvert.init();
*/

				 /* if((typeof responseData.coupondetails !== 'undefined' && responseData.coupondetails !== null) && (typeof responseData.loyaltydetails !='undefined' && responseData.loyaltydetails !== null)){
					  amt = (parseFloat(amt - (parseFloat(responseData.coupondetails.deductAmount) + parseFloat(responseData.loyaltydetails.redemptionUCAmount)))).toFixed(2);
					  $('#paymeBtn').val(rc2+amt);
				  }else if(typeof responseData.coupondetails !== 'undefined' && responseData.coupondetails !== null){
					  amt = (parseFloat(amt - responseData.coupondetails.deductAmount)).toFixed(2);
					  sarAmt = (parseFloat(responseData.paymentObj.sarAmount - responseData.coupondetails.deductSarAmount)).toFixed(2);
					  $('#paymeBtn').val(rc2+amt);
					 	
					var lytObj = $('._ltyInfo');
						$(lytObj).attr('data-bamt',sarAmt);	
				  }else if(typeof responseData.loyaltydetails !== 'undefined' && responseData.loyaltydetails !== null){
					  amt = (parseFloat(amt - responseData.loyaltydetails.redemptionUCAmount)).toFixed(2);
					  $('#paymeBtn').val(rc2+amt);
				  }else{
					  $('#paymeBtn').val(rc2+amt);
				  }*/ 		
				});
				  
			}

		},
		loadHotelCouponData : function(data)
		{
			var responseData = JSON.parse(data);
			//var responseData = {};
			var templateID = '', templateUpdateId='', payBtn= '';
			if(responseData.paymentObj.product == 'bnpl'){

					var bookingdata = {};
					bookingdata = responseData;   

					var coupondetails;
					var loyaltydetails;
					if(bookingdata.coupondetails != undefined){
					coupondetails = bookingdata.coupondetails;
					}
					if(bookingdata.loyaltydetails != undefined){
					loyaltydetails = bookingdata.loyaltydetails;
					}
					responseData= {
					paymentObj:bookingdata.paymentObj,
					qitafObj:bookingdata.qitafObj,
					coupondetails:coupondetails,
					loyaltydetails:loyaltydetails,       
					product : 'H',
					hotelDetails:bookingdata.entityDetails.hotelDetails,
					ccdInfo:bookingdata.ccdInfo
					}; 
				templateID = 'hotel-bnpl-trip-summary';
				templateUpdateId = '#hotelBnplTripSummary';
				payBtn = '#paymeBtn';
			}else{
				//responseData = JSON.parse(data);
				templateID = 'hotel-trip-summary';
				templateUpdateId = '#hotelTripSummary';
				payBtn = '.completeBooking';
			}
			$.get('/common/themes/v2/tmpl/hotel/hotelReviewTerms.ejs?v=nd-v0102', {}, function(reviewTermTemplate) { 
				$('.redeemPoints .nav li a').click(function (e) {
					e.preventDefault()
					$(this).tab('show')
				});
					
				loadTemplate(templateID, {responseData: responseData}, $(templateUpdateId), reviewTermTemplate);
				
				var rc2 = i18n.t("pay")+' '+i18n.t(responseData.paymentObj.currency)+' ';
				var amt = responseData.paymentObj.up;
				var couponDiscount = 0, loyaltyDiscount = 0, qitafDiscount = 0 , ccDiscount=0;
				if(responseData.coupondetails && responseData.coupondetails !== null){
					var couponDiscount = parseFloat(responseData.coupondetails.deductAmount);
					if(typeof responseData.loyaltydetails !='undefined' && responseData.loyaltydetails !== null){
						loyaltyDiscount = (responseData.loyaltydetails && responseData.loyaltydetails.redemptionUCAmount) ? parseFloat(responseData.loyaltydetails.redemptionUCAmount) : 0;
					}
					qitafDiscount = (responseData.qitafObj && responseData.qitafObj.qitafSuccess) ? parseFloat(responseData.qitafObj.convertedRedeemAmt) : 0;
					var ccDiscount=(responseData.ccdInfo && responseData.ccdInfo.deductAmount) ? parseFloat(responseData.ccdInfo.deductAmount) : 0;
					var totalDiscount = couponDiscount + qitafDiscount + loyaltyDiscount + ccDiscount;	                
					amt = (parseFloat(amt - totalDiscount)).toFixed(2);
					$(payBtn).val(rc2+amt);
				}else{
					if(typeof responseData.loyaltydetails !='undefined' && responseData.loyaltydetails !== null){
						loyaltyDiscount = (responseData.loyaltydetails && responseData.loyaltydetails.redemptionUCAmount) ? parseFloat(responseData.loyaltydetails.redemptionUCAmount) : 0;
					}
					qitafDiscount = (responseData.qitafObj && responseData.qitafObj.qitafSuccess) ? parseFloat(responseData.qitafObj.convertedRedeemAmt) : 0; 

					var ccDiscount=(responseData.ccdInfo && responseData.ccdInfo.deductAmount) ? parseFloat(responseData.ccdInfo.deductAmount) : 0;					  	                
					var totalDiscount = couponDiscount + qitafDiscount + loyaltyDiscount + ccDiscount;	  
					amt = (parseFloat(amt - totalDiscount)).toFixed(2);
					$(payBtn).val(rc2+amt);
				}		

				if(responseData.paymentObj.domainName=='Global'){
					var couponDiscountSAR = (responseData.coupondetails && responseData.coupondetails.deductSarAmount) ? responseData.coupondetails.deductSarAmount : 0;
					var qitafDiscountSAR =  (responseData.qitafObj && responseData.qitafObj.qitafSuccess) ? responseData.qitafObj.redeemAmount : 0;
					var loyaltyDiscountSAR = (responseData.loyaltydetails && responseData.loyaltydetails.redemptionAmount) ?parseFloat(responseData.loyaltydetails.redemptionAmount) : 0;
					var ccDiscountSAR=(responseData.ccdInfo && responseData.ccdInfo.deductSarAmount) ? parseFloat(responseData.ccdInfo.deductSarAmount) : 0;
					var totalDiscountSAR = parseFloat(couponDiscountSAR) + parseFloat(qitafDiscountSAR) + parseFloat(loyaltyDiscountSAR) +parseFloat(ccDiscountSAR);
					$('._sarAmt').text((parseFloat(responseData.paymentObj.sarAmount - totalDiscountSAR).toFixed(2)));
					var sarLyltBkngAmt = (parseFloat(responseData.paymentObj.sarAmount) - parseFloat(totalDiscountSAR)).toFixed(2);
					var lytObj = $('._ltyInfo');
					$(lytObj).attr('data-bamt',sarLyltBkngAmt);	
				}else if(responseData.paymentObj.domainName!='Global'){
					var couponDiscountSAR = (responseData.coupondetails && responseData.coupondetails.deductSarAmount) ? responseData.coupondetails.deductSarAmount : 0; 
					var qitafDiscountSAR =  (responseData.qitafObj && responseData.qitafObj.qitafSuccess) ? responseData.qitafObj.redeemAmount : 0;
					var loyaltyDiscountSAR = (responseData.loyaltydetails && responseData.loyaltydetails.redemptionAmount) ?parseFloat(responseData.loyaltydetails.redemptionAmount) : 0;
					var ccDiscountSAR=(responseData.ccdInfo && responseData.ccdInfo.deductSarAmount) ? parseFloat(responseData.ccdInfo.deductSarAmount) : 0;
					var totalDiscountSAR = parseFloat(couponDiscountSAR) + parseFloat(qitafDiscountSAR) + parseFloat(loyaltyDiscountSAR) +parseFloat(ccDiscountSAR);
					var sarLyltBkngAmt = (parseFloat(responseData.paymentObj.sarAmount) - parseFloat(totalDiscountSAR)).toFixed(2);
					var lytObj = $('._ltyInfo');
					$(lytObj).attr('data-bamt',sarLyltBkngAmt);	
					$('._egpAmt').text((parseFloat(responseData.paymentObj.sarAmount - totalDiscountSAR).toFixed(2)));
				}
				   
				fltSmryTraDrpDwn();
				htlReviewSummery();
				var currEgp = "";
				if(responseData.paymentObj.uc == "EGP"){
					currEgp = "_egpCur";
				}
					
				if(responseData.coupondetails && responseData.coupondetails !== null){
					$('.totalSec li:first-child').after('<li><span class="pull-left">'+
					 i18n.t('couponDiscount')+ '</span><span class="pull-right green-txt '+currEgp+'">'+i18n.t(responseData.paymentObj.uc)+'  <elm class="_priceTag">'+responseData.coupondetails.deductAmount+'</elm></span></li>');
				}

				if(responseData.loyaltydetails && responseData.loyaltydetails !== null){
					$('.totalSec li:first-child').after('<li><span class="pull-left">'+
				 i18n.t('flyinRewardsRedeemed')+ '</span><span class="pull-right green-txt '+currEgp+'">'+i18n.t(responseData.paymentObj.uc)+'  <elm class="_priceTag">'+responseData.loyaltydetails.redemptionUCAmount+'</elm></span></li>');	
				}

               /* if(responseData.qitafObj && responseData.qitafObj !== null){
					$('.totalSec li:first-child').after('<li><span class="pull-left">'+
				 i18n.t('Redeemed amount')+ '</span><span class="pull-right green-txt '+currEgp+'">'+i18n.t(responseData.paymentObj.uc)+'  <elm class="_priceTag">'+responseData.qitafObj.redeemAmount+'</elm></span></li>');	
				}*/
				/*if((responseData.qitafObj && responseData.qitafObj !== null) || (responseData.loyaltydetails && responseData.loyaltydetails !== null) || (responseData.coupondetails && responseData.coupondetails !== null) || (responseData.ccdInfo)){
					$('.totalSec li:last-child').after('<li><span class="pull-left">'+
					i18n.t('totalPayableAmount444')+ '</span><span class="pull-right green-txt '+currEgp+'">'+i18n.t(responseData.paymentObj.uc)+'  <elm class="_priceTag">'+amt+'</elm></span></li>');
				}*/
				if(typeof responseData.ccdInfo !='undefined' && responseData.ccdInfo !== null){
					$('.totalSec li:first-child').after('<li><span class="pull-left">'+
					i18n.t('creditCardDisc')+ '</span><span class="pull-right green-txt '+currEgp+'">'+i18n.t(responseData.paymentObj.uc)+'  <elm class="_priceTag">'+ccDiscount+'</elm></span></li>');
				}
				
				pricetagConvert.init();
		
				});
	    },			
		loadHotelLoyaltyData : function(data)
		{
			var responseData = JSON.parse(data);
			//var responseData = {};
			var templateID = '', templateUpdateId='', payBtn= '';
			if(responseData.paymentObj.product == 'bnpl'){
				var bookingdata = {};
				bookingdata = JSON.parse(data);   

				var coupondetails, loyaltydetails;

				if(bookingdata.coupondetails != undefined){
					coupondetails = bookingdata.coupondetails;
				}
				if(bookingdata.loyaltydetails != undefined){
					loyaltydetails = bookingdata.loyaltydetails;
				}

				responseData= {
					paymentObj:bookingdata.paymentObj,
					qitafObj:bookingdata.qitafObj,
					coupondetails:coupondetails,
					loyaltydetails:loyaltydetails,       
					product : 'H',
					hotelDetails:bookingdata.entityDetails.hotelDetails
				};

				templateID = 'hotel-bnpl-trip-summary';
				templateUpdateId = '#hotelBnplTripSummary';
				payBtn = '#paymeBtn';
			}else{
				//responseData = JSON.parse(data);
				templateID = 'hotel-trip-summary';
				templateUpdateId = '#hotelTripSummary';
				payBtn = '.completeBooking';
			}

			$.get('/common/themes/v2/tmpl/hotel/hotelReviewTerms.ejs?v=nd-v0102', {}, function(reviewTermTemplate) { 
				$('.redeemPoints .nav li a').click(function (e) {
					e.preventDefault()
					$(this).tab('show')
				});

				loadTemplate(templateID, {responseData: responseData}, $(templateUpdateId), reviewTermTemplate);
				
				var rc2 = i18n.t("pay")+' '+i18n.t(responseData.paymentObj.uc)+' ';
				var amt = responseData.paymentObj.up;
				
				var couponDiscount = 0, loyaltyDiscount = 0, qitafDiscount = 0 ;
				if(responseData.loyaltydetails && responseData.loyaltydetails !== null){
					var loyaltyDiscount = parseFloat(responseData.loyaltydetails.redemptionUCAmount);
					if(typeof responseData.coupondetails !='undefined' && responseData.coupondetails !== null){
						couponDiscount = (responseData.coupondetails && responseData.coupondetails.deductAmount) ? parseFloat(responseData.coupondetails.deductAmount) : 0;
					}

					qitafDiscount = (responseData.qitafObj && responseData.qitafObj.qitafSuccess) ? parseFloat(responseData.qitafObj.convertedRedeemAmt) : 0;
					var ccDiscount=(responseData.ccdInfo && responseData.ccdInfo.deductAmount) ? parseFloat(responseData.ccdInfo.deductAmount) : 0;
					var totalDiscount = loyaltyDiscount + couponDiscount + qitafDiscount + ccDiscount;	                
					amt = (parseFloat(amt - totalDiscount)).toFixed(2);
					$(payBtn).val(rc2+amt);
				}else{
					if(typeof responseData.coupondetails !='undefined' && responseData.coupondetails !== null){
						couponDiscount = (responseData.coupondetails && responseData.coupondetails.deductAmount) ? parseFloat(responseData.coupondetails.deductAmount) : 0;
					}

					qitafDiscount = (responseData.qitafObj && responseData.qitafObj.qitafSuccess) ? parseFloat(responseData.qitafObj.convertedRedeemAmt) : 0;
					var ccDiscount=(responseData.ccdInfo && responseData.ccdInfo.deductAmount) ? parseFloat(responseData.ccdInfo.deductAmount) : 0;
					var totalDiscount = loyaltyDiscount + couponDiscount + qitafDiscount + ccDiscount;	
					amt = (parseFloat(amt - totalDiscount)).toFixed(2);
					$(payBtn).val(rc2+amt);
				}		

				if(responseData.paymentObj.domainName=='Global'){
					var couponDiscountSAR = (responseData.coupondetails && responseData.coupondetails.deductSarAmount) ? responseData.coupondetails.deductSarAmount : 0; 
					var qitafDiscountSAR =  (responseData.qitafObj && responseData.qitafObj.qitafSuccess) ? responseData.qitafObj.redeemAmount : 0;
					var loyaltyDiscountSAR = (responseData.loyaltydetails && responseData.loyaltydetails.redemptionAmount) ?parseFloat(responseData.loyaltydetails.redemptionAmount) : 0;
					var ccDiscountSAR=(responseData.ccdInfo && responseData.ccdInfo.deductSarAmount) ? parseFloat(responseData.ccdInfo.deductSarAmount) : 0;
					var totalDiscountSAR = parseFloat(couponDiscountSAR) + parseFloat(qitafDiscountSAR) + parseFloat(loyaltyDiscountSAR) + parseFloat(ccDiscountSAR);
					$('._sarAmt').text((parseFloat(responseData.paymentObj.sarAmount - totalDiscountSAR).toFixed(2)));
				}else if(responseData.paymentObj.domainName!='Global'){
					var couponDiscountSAR = (responseData.coupondetails && responseData.coupondetails.deductSarAmount) ? responseData.coupondetails.deductSarAmount : 0; 
					var qitafDiscountSAR =  (responseData.qitafObj && responseData.qitafObj.qitafSuccess) ? responseData.qitafObj.redeemAmount : 0;
					var loyaltyDiscountSAR = (responseData.loyaltydetails && responseData.loyaltydetails.redemptionAmount) ?parseFloat(responseData.loyaltydetails.redemptionAmount) : 0;
					var ccDiscountSAR=(responseData.ccdInfo && responseData.ccdInfo.deductSarAmount) ? parseFloat(responseData.ccdInfo.deductSarAmount) : 0;
					
					var totalDiscountSAR = parseFloat(couponDiscountSAR) + parseFloat(qitafDiscountSAR)+ parseFloat(loyaltyDiscountSAR) + parseFloat(ccDiscountSAR);
					$('._egpAmt').text((parseFloat(responseData.paymentObj.sarAmount - totalDiscountSAR).toFixed(2)));
				}

				fltSmryTraDrpDwn();
				htlReviewSummery();

				console.log("=====responseData=====",responseData);
				var currEgp = "";
				if(responseData.paymentObj.uc == "EGP"){
					currEgp = "_egpCur";
				}

				if(typeof responseData.loyaltydetails !='undefined' && responseData.loyaltydetails !== null){
				$('.totalSec li:first-child').after('<li><span class="pull-left">'+
				 i18n.t('flyinRewardsRedeemed')+ '</span><span class="pull-right green-txt '+currEgp+'">'+i18n.t(responseData.paymentObj.uc)+'  <elm class="_priceTag">'+responseData.loyaltydetails.redemptionUCAmount+'</elm></span></li>');	
				}

				/*if(responseData.qitafObj && responseData.qitafObj !== null){
					$('.totalSec li:first-child').after('<li><span class="pull-left">'+
				 i18n.t('Redeemed amount')+ '</span><span class="pull-right green-txt '+currEgp+'">'+i18n.t(responseData.paymentObj.uc)+'  <elm class="_priceTag">'+responseData.qitafObj.redeemAmount+'</elm></span></li>');	
				}*/

				if(typeof responseData.coupondetails !='undefined' && responseData.coupondetails !== null){
					$('.totalSec li:first-child').after('<li><span class="pull-left">'+
				 i18n.t('couponDiscount')+ '</span><span class="pull-right green-txt '+currEgp+'">'+i18n.t(responseData.paymentObj.uc)+'  <elm class="_priceTag">'+responseData.coupondetails.deductAmount+'</elm></span></li>');
					
				}

				if(typeof responseData.ccdInfo !='undefined' && responseData.ccdInfo !== null){
					$('.totalSec li:first-child').after('<li><span class="pull-left">'+
				 i18n.t('creditCardDisc')+ '</span><span class="pull-right green-txt '+currEgp+'">'+i18n.t(birs.BookingInfoRS.hotel.rc.up.uc)+'  <elm class="_priceTag">'+ccDiscount+'</elm></span></li>');
				}
				
				/*$('.totalSec li:last-child').after('<li><span class="pull-left">'+
				 i18n.t('totalPayableAmount222')+ '</span><span class="pull-right green-txt '+currEgp+'">'+i18n.t(responseData.paymentObj.uc)+'  <elm class="_priceTag">'+amt+'</elm></span></li>');*/
				
				pricetagConvert.init();

			});		
			
	    },
		loadHotelCCDiscountData:function(data){
			if(data.status == 'ERROR'){
				
			}
			else{
				var responseData ;
				if(data.paymentObj.product === 'bnpl'){
				    responseData= {
						paymentObj:data.paymentObj,
						qitafObj:data.qitafObj,
						coupondetails:data.coupondetails,
						loyaltydetails:data.loyaltydetails,       
						product : 'H',
						hotelDetails:data.entityDetails.hotelDetails,
						ccdInfo:data.ccdInfo
					}; 
				}
				else{
					responseData = data;
				}

			$.get('/common/themes/v2/tmpl/hotel/hotelReviewTerms.ejs?v=nd-v0102', {}, function(reviewTermTemplate) {
				  var data = {
				    	     responseData:responseData
				  }
				  var paymentObj=responseData.paymentObj;
				 if(responseData.paymentObj.product === 'bnpl'){
					  loadTemplate('hotel-bnpl-trip-summary', {responseData: responseData}, $('#hotelBnplTripSummary'), reviewTermTemplate);
				 }
				 else{
				     loadTemplate('hotel-trip-summary', {responseData: responseData}, $('#hotelTripSummary'), reviewTermTemplate); 
				 }
				 
				  var rc2 = i18n.t("pay")+' '+i18n.t(paymentObj.uc)+' ';
				  var amt = parseFloat(paymentObj.up);
				  var couponDiscount = 0, loyaltyDiscount = 0, qitafDiscount = 0,ccDiscount=0;
				  
				  loyaltyDiscount=(responseData.loyaltydetails && responseData.loyaltydetails.redemptionUCAmount) ? parseFloat(responseData.loyaltydetails.redemptionUCAmount) : 0;
				  
				  couponDiscount=(responseData.coupondetails && responseData.coupondetails.deductAmount) ? parseFloat(responseData.coupondetails.deductAmount) : 0;
				  
				 qitafDiscount = (responseData.qitafObj && responseData.qitafObj.qitafSuccess) ? parseFloat(responseData.qitafObj.convertedRedeemAmt) : 0;
				 
				  ccDiscount=(responseData.ccdInfo) ? parseFloat(responseData.ccdInfo.deductAmount).toFixed(2) : 0;
				  
				 var totalDiscount = parseFloat(loyaltyDiscount) + parseFloat(couponDiscount) + parseFloat(qitafDiscount) +parseFloat(ccDiscount);	 
				
				 amt = (parseFloat(amt - totalDiscount)).toFixed(2);
				 if(responseData.paymentObj.product === 'bnpl'){
					  $('#paymeBtn').val(rc2+amt);
				 }
				 else{
				    $('.completeBooking').val(rc2+amt); 
				 }
				
				var couponDiscountSAR = (responseData.coupondetails && responseData.coupondetails.deductSarAmount) ? responseData.coupondetails.deductSarAmount : 0; 
				var qitafDiscountSAR =  (responseData.qitafObj && responseData.qitafObj.qitafSuccess) ? responseData.qitafObj.redeemAmount : 0;
				var loyaltyDiscountSAR = (responseData.loyaltydetails && responseData.loyaltydetails.redemptionAmount) ?parseFloat(responseData.loyaltydetails.redemptionAmount) : 0;
				
				var ccDiscountSAR = (responseData.ccdInfo && responseData.ccdInfo.deductSarAmount) ?parseFloat(responseData.ccdInfo.deductSarAmount) : 0;
				
				var totalDiscountSAR = parseFloat(couponDiscountSAR) + parseFloat(qitafDiscountSAR) + parseFloat(loyaltyDiscountSAR)+parseFloat(ccDiscountSAR);
						
				if(responseData.paymentObj.domainName=='Global'){
					$('._sarAmt').text((parseFloat(responseData.paymentObj.sarAmount - totalDiscountSAR).toFixed(2)));
				}else if(responseData.paymentObj.domainName!='Global'){
						$('._egpAmt').text((parseFloat(responseData.paymentObj.sarAmount - totalDiscountSAR).toFixed(2)));
				}
				fltSmryTraDrpDwn();
				htlReviewSummery();
				var currEgp = "";
				if(paymentObj.uc == "EGP"){
					currEgp = "_egpCur";
				}
				if(responseData.loyaltydetails &&  responseData.loyaltydetails.redemptionUCAmount){
					$('.tistlPointsSmry li:first-child').after('<li><span class="pull-left">'+
				 i18n.t('flyinRewardsRedeemed')+ '</span><span class="pull-right green-txt '+currEgp+'">'+i18n.t(paymentObj.uc)+'  <elm class="_priceTag">'+responseData.loyaltydetails.redemptionUCAmount+'</elm></span></li>');
				$('.totalSec li:first-child').after('<li><span class="pull-left">'+
				 i18n.t('flyinRewardsRedeemed')+ '</span><span class="pull-right green-txt '+currEgp+'">'+i18n.t(paymentObj.uc)+'  <elm class="_priceTag">'+responseData.loyaltydetails.redemptionUCAmount+'</elm></span></li>');	
				}
				if(typeof responseData.coupondetails !='undefined' && responseData.coupondetails !== null){
					$('.totalSec li:first-child').after('<li><span class="pull-left">'+
				 i18n.t('couponDiscount')+ '</span><span class="pull-right green-txt '+currEgp+'">'+i18n.t(paymentObj.uc)+'  <elm class="_priceTag">'+responseData.coupondetails.deductAmount+'</elm></span></li>');
				}
				if(typeof responseData.ccdInfo !='undefined' && responseData.ccdInfo !== null){
					$('.totalSec li:first-child').after('<li><span class="pull-left">'+
				 i18n.t('creditCardDisc')+ '</span><span class="pull-right green-txt '+currEgp+'">'+i18n.t(paymentObj.uc)+'  <elm class="_priceTag">'+ccDiscount+'</elm></span></li>');
				}
				/*  if(responseData.paymentObj.product === 'bnpl'){
				  $('.totalSec li:last-child').after('<li><span class="pull-left">'+
				  i18n.t('totalPayableAmount')+ '</span><span class="pull-right green-txt '+currEgp+'">'+i18n.t(paymentObj.uc)+'  <elm class="_priceTag">'+amt+'</elm></span></li>'); 
				 } */
				
				pricetagConvert.init();
				
			});
		  }
		 }
		}
	}());
var hpaginationOptInit;
//Pagination Function
function hpageselectCallback(page_index, filterData){
	//Item per page
	var items_per_page = 30;
	var max_elem = Math.min((page_index+1) * items_per_page, filterData.length);
	//Index Starting number
	var start = page_index*items_per_page;
	//Index ending number
	var end = max_elem;
	if((!hotelTemplateVar.landMarkFtlr) && (hotelTemplateVar.resetFilterswithMS || $('#_sortSelect').val()=='Recommended')){
		filterData.sort(function(a, b){
			return a.staticData.rank - b.staticData.rank;
		});
	}
	var result = filterData.slice(start,end);
	
	var data = {
			searchRS:result,
			sc:hotelTemplateVar.sc,
			maps:hotelTemplateVar.hashmap,
			uuid:hotelTemplateVar.uuid,
			city:hotelTemplateVar.setcriteria.cityName,
			country:hotelTemplateVar.setcriteria.countryName,
			cityTax:hotelTemplateVar.univData.cityTax,
			language:hotelTemplateVar.univData.language,
			showMsgFlg:hotelTemplateVar.univData.showMsgFlg,
			cccNumber:hotelTemplateVar.univData.cccNumber,
			domainName:hotelTemplateVar.univData.domainName,
			loyaltyEarnPoints:hotelTemplateVar.univData.loyaltyEarnPoints
			//landMarkData:response.landMarkData
		};
	if(filterData.length==0){
			$('.hNoFilteredResults').attr('style','display:block');
			if(hotelTemplateVar.SHSO.length>0){
				$('.hNoFilteredResults').attr('style','display:none');
			}
	}else{
			$('.hNoFilteredResults').attr('style','display:none');
	}
	hotelTemplateVar.univData=data;
	hotelTemplateVar.loadTemplate('hotel-results-view',data,$('#list-view'));
	if(hotelTemplateVar.resetFilterswithMS){
		if($('.yhfReset').is(':visible')){$('.youHaveFiltered').hide();
			setTimeout(function(){
				$('.yhfReset').trigger('click');
			},100);
		}
	}
	//$.loadingPageAnimation();
	$('.loading_popup_flight').remove();
	$('body').css('overflow','');
	hotelTemplateVar.resetFilterswithMS = false;
	hotelTemplateVar.landMarkFtlr = false;
	if($('#_mapViewShowHide').hasClass('active')){
		$("#pagination").hide();  		
  	}
	return false;
}

function mapViewJsonStructure(data){
	var m = {
		"MainLand": {
			"landmarkname": hotelTemplateVar.setcriteria.cityName,
			"latitude": hotelTemplateVar.setcriteria.lat,
			"longitude": hotelTemplateVar.setcriteria.long,
			"status": hotelTemplateVar.setcriteria.hotelSearchType
		},
		hotel:data
	};
	loadJsonData(m);
}


function executeHotelSearchRequest(t){
	var countrycityhotel = $('#countrycityhotel');
	var hotelsearchKey = $('#hotelsearchKey').val();
	var checkin = $("._datepicker.fdphoF");
	var checkout=$("._datepicker.fdphoT");
	var date1 = new Date($("#fdphoFHidden").val());
	var date2 = new Date($("#fdphoTHidden").val());
	var timeDiff = Math.abs(date2.getTime() - date1.getTime());
	var checkInDate=moment(date1).format('YYYY-MM-DD');
	var checkOutDate=moment(date2).format('YYYY-MM-DD');
	var hotelRooms=$('#hotelRooms').val();  
	var hiddena=$('#hiddena').val();  
	var hiddenc=$('#hiddenc').val();  
	var hiddenca=$('#hiddenca').val();
	 //doesnt allow guests more than 9		
	 console.log(countrycityhotel.val());
	var acnt=0;var ccnt=0;
	for(var i=0;i<$('#hiddena').val().split(',').length;i++){
		acnt=acnt+parseInt($('#hiddena').val().split(',')[i])
		}
	for(var i=0;i<$('#hiddenc').val().split(',').length;i++){
		ccnt=ccnt+parseInt($('#hiddenc').val().split(',')[i])
	}
	var tcnt=acnt+ccnt;
	if(tcnt>9){
	  growl_alert(i18n.t("errMorePax"));
	  condition = false;
	  return false;
	}//end
	
	var nights = Math.ceil(timeDiff / (1000 * 3600 * 24)); 
	if(nights>30){
		growl_alert(i18n.t("errbkngperiod"));
		condition = false;
		return false;
	}
	
	var searchType=$('#hotelsearchKey').val().split('>>')[0]
	
	if(countrycityhotel.val()==""){
		countrycityhotel.addClass('error');
		growl_alert(i18n.t("errDestination"));	
		countrycityhotel.focus();
		return false;
	}else{
		countrycityhotel.removeClass('error');
	}
	
	if(hotelsearchKey==""){
		countrycityhotel.addClass('error');
		growl_alert(i18n.t("errDestination"));	
		countrycityhotel.focus();
		return false;
	}else{
		countrycityhotel.removeClass('error');
	}
	if(checkin.val()=="" || checkin.val()=="Invalid date"){
		checkin.addClass('error');
		growl_alert(i18n.t("errCheckIn"));
		//checkin.focus();
		condition = false;
		return false;
	}else{
		checkin.removeClass('error');
	}
	if(checkout.val()==""){
		checkout.addClass('error');
		growl_alert(i18n.t("errCheckOut"));
		//checkout.focus();
		condition = false;
		return false;
	}else{
		checkout.removeClass('error');
	}
	if(checkin.val()===checkout.val()) {
		checkin.addClass('error');
		checkout.addClass('error');
		growl_alert(i18n.t("errSameDates"));
		condition = false;
		return false;
	}
	
	btnLoadingAnimation($('#homeHoSearch'));
	setTimeout(function(){
			$("#homeHoSearch").attr("disabled", "disabled");
	},200);
	$(".hotelHomeS #homeHoSearch").val(i18n.t('processingTxt'));
	var opt={
			hotelSearchType:searchType,
			checkInDate:checkInDate,
			checkOutDate:checkOutDate,
			nights:nights,
			noOfRooms:hotelRooms||1,
			noOfAdults:hiddena || 1,
			noOfChildren:hiddenc|| 0,
			childrenAges:hiddenca, 
			provinceName:"",
			criteria:null,
			predictiveId:"",
			starType:"",
			checkBreakfastSelected:false,
			resultsViewType:"List",
			language:'en_GB',
			hotelClass:null,
			searchFrom:"Predictive"
	};
	 if("City"===searchType){
		opt.cityId=$('#hotelsearchKey').val().split('>>')[1]
		//opt.cityName=$('#hotelsearchKey').val().split('>>')[2]
		//opt.provinceName = $('#hotelsearchKey').val().split('>>')[3]
		//opt.countryName=$('#hotelsearchKey').val().split('>>')[4]
		opt.predictiveId=$('#hotelsearchKey').val().split('>>')[1]
		opt.lat=$('#hotelsearchKey').val().split('>>')[5]
		opt.long=$('#hotelsearchKey').val().split('>>')[6]
	}
	else if("Hotel"===searchType){
		opt.hotelId=$('#hotelsearchKey').val().split('>>')[1]
		opt.hotelName=$('#hotelsearchKey').val().split('>>')[4]
		opt.cityId=$('#hotelsearchKey').val().split('>>')[5]
		//opt.cityName=$('#hotelsearchKey').val().split('>>')[6]
		//opt.provinceName = $('#hotelsearchKey').val().split('>>')[7]
		//opt.countryName=$('#hotelsearchKey').val().split('>>')[8]
		opt.predictiveId=$('#hotelsearchKey').val().split('>>')[1]
		opt.uniqueId=opt.hotelId
	}else if("Airport"===searchType){
		opt.cityId=$('#hotelsearchKey').val().split('>>')[2]
		//opt.cityName=$('#hotelsearchKey').val().split('>>')[3]
		//opt.countryName=$('#hotelsearchKey').val().split('>>')[4]
		opt.hotelSearchType='City'
	}
	 var provinceName = "";
		if("City"===searchType){
			provinceName = $("#countrycityhotel").val();
		}
		var adtcnt = 0;
		var spltAdtCnt = (hiddena).split(",");
		for(i=0; i < spltAdtCnt.length ;i++){
			adtcnt +=parseInt(spltAdtCnt[i]);
		}
		var chldcnt = 0;
		var spltChldCnt = (hiddenc).split(",");
		for(i=0; i < spltChldCnt.length ;i++){
			chldcnt +=parseInt(spltChldCnt[i]);
		}
		var chldAge="";
		var spltChldAge = (hiddenca).split("|");
		for(i=0; i < spltChldAge.length ;i++){
			var ages = spltChldAge[i].split(",");
			for(j=0; j < ages.length; j++){
				if(ages[j] != "0"){
					chldAge += ages[j]+",";
				}
			}
		}
		hotelSearch({
			"destination_name":provinceName,
			"hotel_name":opt.hotelName || "",
			"checkin_date":new Date(checkInDate).toString(),
			"checkout_date":new Date(checkOutDate).toString(),
			"no_of_nights":nights.toString(),
			"no_of_rooms":hotelRooms.toString()|| "1",
			"traveller_adult":adtcnt.toString(),
			"traveller_child":chldcnt.toString() || "",
			"traveller_child_age":chldAge.toString() || ""
		});
		
	/**
	*Urls always should be in english
	*/
	 
	$.post('/locationDataById',{cityId:opt.cityId},function(res){
		var data=JSON.parse(res.response[0]);
		console.log(data);
		opt.cityName=data.cityName.en;
		opt.provinceName = data.provinceData.en;
		opt.countryName=data.countryData.en;
		opt.countryId=data.countryData.countryId;
	    generateHotelURL(opt); 
		
	});
		
	
	
	
}

function validateHotelCA(elm){
	var date1 = $('._datepicker.cafdphoF');
	var date2 = $('._datepicker.cafdphoT');	
	var hkeyTotalGHiddenAlter = $('#hkeyTotalGHiddenAlter');
	if(date1.val()==""){
		//scrollTopValidation();
		date1.addClass('validate_error');
		growl_alert(i18n.t('errCheckIn'));
		return false;
	}else{
		date1.removeClass('validate_error');
	}
	if(date2.val()==""){
		//scrollTopValidation();
		date2.addClass('validate_error');
		growl_alert(i18n.t('errCheckOut'));
		return false;
	}else{
		date2.removeClass('validate_error');
	}
	if(date1.val()===date2.val()){
	console.log('dfjljfasdlhasdfkjhkj');
		//scrollTopValidation();
		date1.addClass('error');
		date2.addClass('error');
		growl_alert(i18n.t('errSameDates'));
		return false;
	}
    if(hkeyTotalGHiddenAlter.val()>9){
		scrollTopValidation();
		growl_alert(hkeyTotalGHiddenAlter.attr('data-err'));	
		return false;
	}
	//btnLoadingAnimation($('#checkAvailability'));
	setTimeout(function(){
			$("#checkAvailability").attr("disabled", "disabled");
	},200);
	
	var checkin = new Date($('#hcaFHidden1').val());
	var checkout = new Date( $('#hcaTHidden1').val());
	var timeDiff = Math.abs(checkout.getTime() - checkin.getTime());
	var checkInDate=moment(checkin).format('YYYY-MM-DD');
	var checkOutDate=moment(checkout).format('YYYY-MM-DD');
	if(typeof $('#hotelRooms').attr('data-val') != "undefined"){
	var hotelRooms=$('#hotelRooms').attr('data-val');
	}else{
		var hotelRooms= 1;
	}
	if(typeof $('#hiddena').attr('data-val') != "undefined"){
	var hiddena=$('#hiddena').attr('data-val');
	}else{
		var hiddena= 1;
	}
	if(typeof $('#hiddenc').attr('data-val') != "undefined"){
	var hiddenc=$('#hiddenc').attr('data-val');
	}else{
		var hiddenc=0;
	}
	var hiddenca=$('#hiddenca').attr('data-val');
	
	 //doesnt allow guests more than 9		
	var acnt=0;var ccnt=0;
	console.log("hiddena :"+$('#hiddena').attr('data-val'));
	if(typeof $('#hiddena').attr('data-val') != "undefined"){
	for(var i=0;i<$('#hiddena').attr('data-val').split(',').length;i++){
		acnt=acnt+parseInt($('#hiddena').attr('data-val').split(',')[i])
		}
	}else{
		acnt=1;
	}
	if(typeof $('#hiddenc').attr('data-val') != "undefined"){
	for(var i=0;i<$('#hiddenc').attr('data-val').split(',').length;i++){
		ccnt=ccnt+parseInt($('#hiddenc').attr('data-val').split(',')[i])
	}
	}else{
		ccnt=0;
	}
	var tcnt=acnt+ccnt;
	if(tcnt>9){
	  growl_alert(i18n.t('errMorePax'));
	  condition = false;
	  l.stop();
	  return false;
	}//end
	var nights = Math.ceil(timeDiff / (1000 * 3600 * 24)); 
	if(nights>30){
		scrollTopValidation();
		date1.addClass('validate_error');
		date2.addClass('validate_error');
		growl_alert(i18n.t('errbkngperiod'));
		return false;
	}
	console.log("hiddena :",hiddena);
	var searchType='Hotel';
	var me = "";
	var opt={
			hotelSearchType:searchType,
			checkInDate:checkInDate,
			checkOutDate:checkOutDate,
			nights:nights,
			noOfRooms:hotelRooms,
			noOfAdults:hiddena,
			noOfChildren:hiddenc,
			childrenAges:hiddenca,
			provinceName:"",
			criteria:null,
			predictiveId:"",
			starType:"",
			checkBreakfastSelected:false,
			resultsViewType:"List",
			language:'en_GB',
			hotelClass:null,
			me:me,
			searchFrom:'LandingPage'
	};
	if("Hotel"===searchType){
		opt.hotelId=$('._apxUniHtlId').attr('data-uid');
		opt.uniqueId=$('._apxUniHtlId').attr('data-uid');
		
	}
	console.log("opt :",opt);
	btnLoadingAnimation($(elm));
	$(elm).attr("disabled", "disabled");
	$(elm).text(i18n.t("processingText"));
	$.post('/countryIdByHotelId',{uniqueId:opt.uniqueId},function(res){
		console.log(res);
		opt.countryId=res;
	   generateHotelURL(opt);
		
	});
	
	//return true;
}

//Hotel stay restriction
function hotelRestriction(date1, date2){
	var dateFirst = date1.val().split('/');
	var dateSecond = date2.val().split('/');
	var month1 = dateFirst[1]-1;
	var month2 = dateSecond[1]-1;
	var firstDate = new Date(dateFirst[2], month1, dateFirst[0]);
	var secondDate = new Date(dateSecond[2], month2, dateSecond[0]);
	var timeDiff = Math.abs(secondDate.getTime() - firstDate.getTime());
	var daysDiff = Math.ceil(timeDiff / (1000 * 3600 * 24));
	return daysDiff;
}


function executeHotelPOPSearchRequest(t){
	var countrycityhotel = $('#countrycityhotelPOP');
	var hotelsearchKey = $('#hotelsearchKeyPOP').val();
	var checkin = $("#fdphoFHiddenPOP").val();
	var checkout=$("#fdphoTHiddenPOP").val();
	var date1 = new Date($("#fdphoFHiddenPOP").val());
	var date2 = new Date($("#fdphoTHiddenPOP").val());
	var timeDiff = Math.abs(date2.getTime() - date1.getTime());
	var checkInDate=moment(date1).format('YYYY-MM-DD');
	var checkOutDate=moment(date2).format('YYYY-MM-DD');
	var hotelRooms=$('#hotelRoomsPOP').val();  
	var hiddena=$('#hiddenaPOP').val();  
	var hiddenc=$('#hiddencPOP').val();  
	var hiddenca=$('#hiddencaPOP').val();
	var adult=$('.roomsWidgetTop .adultSelected').val();		
	var hkeyTotalGHiddenAlter = $('#hkeyTotalGHiddenAlterPOP');
	 //doesnt allow guests more than 9		
	var acnt=0;var ccnt=0;
	for(var i=0;i<$('#hiddenaPOP').val().split(',').length;i++){
		acnt=acnt+parseInt($('#hiddenaPOP').val().split(',')[i])
		}
		
	for(var i=0;i<$('#hiddencPOP').val().split(',').length;i++){
		ccnt=ccnt+parseInt($('#hiddencPOP').val().split(',')[i])
	}
	if(hkeyTotalGHiddenAlter.val()>9){		
		growl_alert(i18n.t("errMorePax"));	
		return false;
	}
	var tcnt=acnt+ccnt;
	if(tcnt>9){
		growl_alert(i18n.t("errMorePax"));	 
		return false;
	}//end
	
	var nights = Math.ceil(timeDiff / (1000 * 3600 * 24)); 
	if(nights>30){
		growl_alert(i18n.t("errbkngperiod"));
		condition = false;
		return false;
	}
	
	var searchType=$('#hotelsearchKeyPOP').val().split('>>')[0]
	
	if(countrycityhotel.val()==""){
		countrycityhotel.addClass('error');
		growl_alert(i18n.t("errDestination"));	
		countrycityhotel.focus();
		return false;
	}else{
		countrycityhotel.removeClass('error');
	}
	if(hotelsearchKey==""){
		growl_alert(i18n.t("errDestination"));
		
		condition = false;
		return false;
	}
	if(checkin=="" || checkin=="Invalid date"){
		growl_alert(i18n.t("errCheckIn"));
		if($('.cityPage').length){
			$('._datepicker.fdphoFPOP._citypopup').addClass('error');
		}else{
		$('._datepicker.fdphoFPOP._hotelpopup').addClass('error');
		}
		condition = false;
		return false;
	}else{
		$('._datepicker.fdphoFPOP').removeClass('error');
	}
	if(checkout==""){
		growl_alert(i18n.t("errCheckOut"));
		$('._datepicker.fdphoTPOP').addClass('error');
		condition = false;
		return false;
	}else{
		$('._datepicker.fdphoTPOP').removeClass('error');
	}
	if(checkin===checkout) {

		growl_alert(i18n.t("errSameDates"));
		condition = false;
		return false;
	}
	
	btnLoadingAnimation($('.hotelPU'));
	setTimeout(function(){
		$(".hotelPU").attr("disabled", "disabled"); 
	},200);
	$(".hotelPU").val(i18n.t('processingTxt'));
	   var opt={
			hotelSearchType:searchType,
			checkInDate:checkInDate,
			checkOutDate:checkOutDate,
			nights:nights,
			noOfRooms:hotelRooms,
			noOfAdults:hiddena,
			noOfChildren:hiddenc,
			childrenAges:hiddenca,
			provinceName:"",
			criteria:null,
			predictiveId:"",
			starType:"",
			checkBreakfastSelected:false,
			resultsViewType:"List",
			language:'en_GB',
			hotelClass:null,
			searchFrom:"Predictive"
	};
	if("City"===searchType){
		opt.cityId=$('#hotelsearchKeyPOP').val().split('>>')[1]
		//opt.cityName=$('#hotelsearchKeyPOP').val().split('>>')[2]
		//opt.countryName=$('#hotelsearchKeyPOP').val().split('>>')[4]
		opt.predictiveId=$('#hotelsearchKeyPOP').val().split('>>')[1]
		opt.lat=$('#hotelsearchKeyPOP').val().split('>>')[5]
		opt.long=$('#hotelsearchKeyPOP').val().split('>>')[6]
	}
	else if("Hotel"===searchType){
		opt.hotelId=$('#hotelsearchKeyPOP').val().split('>>')[1]
		opt.hotelName=$('#hotelsearchKeyPOP').val().split('>>')[4]
		opt.cityId=$('#hotelsearchKeyPOP').val().split('>>')[5]
		//opt.cityName=$('#hotelsearchKeyPOP').val().split('>>')[6]
		//opt.countryName=$('#hotelsearchKeyPOP').val().split('>>')[8]
		opt.predictiveId=$('#hotelsearchKeyPOP').val().split('>>')[1]
		opt.uniqueId=opt.hotelId
		
	}else if("Airport"===searchType){
		opt.cityId=$('#hotelsearchKeyPOP').val().split('>>')[2]
		//opt.cityName=$('#hotelsearchKeyPOP').val().split('>>')[3]
		//opt.countryName=$('#hotelsearchKeyPOP').val().split('>>')[4]
		opt.hotelSearchType='City'
	} 
	/**
	*Urls always should be in english
	*/
	$.post('/locationDataById',{cityId:opt.cityId},function(res){
		var data=JSON.parse(res.response[0]);
		opt.cityName=data.cityName.en
		opt.provinceName = data.provinceData.en
		opt.countryName=data.countryData.en
		opt.countryId=data.countryData.countryId;
	    generateHotelURL(opt); 
		
	});
	$('.bgoverlay, .popupLand').removeClass('active');  
}

/**
 * @description change browser url 
 * fire the search request and get the response
 * and redirect to hotel results page
 * @param url
 * @param arg
 */
function hotelResultsRender(url){

	if(!$('.country').is(':visible')){
		$('.country').show();
	}

	$('#_bodyContainer').empty();
	hotelTemplateVar.uiValue = [];
	hotelTemplateVar.SHSO = [];
	hotelTemplateVar.HSSKEY = '';
	hotelTemplateVar.hotDeal = false;
	hotelTemplateVar.HOTELNAMESEARCHRESILT = [];
	$('.alert_custom').hide();// to remove the growl_alert if any.
	$('body').removeClass('homePage');
	$('body').addClass('resultPage');
	
	var loadingImage=cmnGetParFrmURL('loadingImage',url);
	var searchFrom=cmnGetParFrmURL('searchFrom',url);
	var searchType=cmnGetParFrmURL('hotelSearchType',url);
	if((loadingImage != undefined && loadingImage ==='ReviewPage') || (searchFrom != undefined && searchFrom ==='LandingPage')){
		//$.loadingPageAnimation('show');
	}
	else{
		_langGlobal.langRender(function(){
			var language='';
			if(i18n.options.lng == "en"){
				language="en_GB";
			}
			else{
				language="ar-sa";
			}
			var acnt=0;var ccnt=0;
			for(var i=0;i<cmnGetParFrmURL('noOfAdults',url).split('%2C').length;i++){
				acnt=acnt+parseInt(cmnGetParFrmURL('noOfAdults',url).split('%2C')[i]);
			}
				
			for(var i=0;i<cmnGetParFrmURL('noOfChildren',url).split('%2C').length;i++){
				ccnt=ccnt+parseInt(cmnGetParFrmURL('noOfChildren',url).split('%2C')[i]);
			}
			var totalGuest=acnt+ccnt;
			var guestCnt = (totalGuest>1)? totalGuest +' '+i18n.t("guests"):totalGuest +' '+i18n.t("guest");
			var arNames = {
		              months		  : ["ÙŠÙ†Ø§ÙŠØ±","ÙØ¨Ø±Ø§ÙŠØ±","Ù…Ø§Ø±Ø³","Ø§Ø¨Ø±ÙŠÙ„","Ù…Ø§ÙŠÙˆ","ÙŠÙˆÙ†ÙŠÙˆ","ÙŠÙˆÙ„ÙŠÙˆ","Ø£ØºØ³Ø·Ø³","Ø³Ø¨ØªÙ…Ø¨Ø±","Ø£ÙƒØªÙˆØ¨Ø±","Ù†ÙˆÙÙ…Ø¨Ø±","Ø¯ÙŠØ³Ù…Ø¨Ø±"],
	         weekdaysShort : ["Ø§Ù„Ø£Ø­Ø¯","Ø§Ù„Ø§Ø«Ù†ÙŠÙ†","Ø§Ù„Ø«Ù„Ø§Ø«Ø§Ø¡","Ø§Ù„Ø£Ø±Ø¨Ø¹Ø§Ø¡","Ø§Ù„Ø®Ù…ÙŠØ³","Ø§Ù„Ø¬Ù…Ø¹Ø©","Ø§Ù„Ø³Ø¨Øª"]
		     };
			var cin=cmnGetParFrmURL('checkInDate',url);
			var cout=cmnGetParFrmURL('checkOutDate',url);
			var d1='';
			var d2='';
			var lang=i18n.options.lng;
			if(i18n.options.lng == "en"){
				 d1 = moment(cin).format('ddd, DD MMM YYYY');
				 d2 = moment(cout).format('ddd, DD MMM YYYY');
			}else if(i18n.options.lng =='ar'){
				 d1 =  arNames.weekdaysShort[moment(cin).weekday()] +', '+moment(cin).format('DD')+' '+arNames.months[moment(cin).format('M')-1]+' '+moment(cin).format('YYYY');
				 d2 = arNames.weekdaysShort[moment(cout).weekday()]+', '+moment(cout).format('DD')+' '+arNames.months[moment(cout).format('M')-1]+' '+moment(cout).format('YYYY');
			}
			var cityId=[];
			cityId.push(cmnGetParFrmURL('cityId',url));
			$.post('/cityNameByCityId',{cityIds:cityId},function(res){

				var city=res.response[cmnGetParFrmURL('cityId',url)];
				loadCnt = {
						loadStr : unicodeConverter(city[lang]) + ' - ' +d1+' - '+d2+' - '+guestCnt
				}
				$.loadingPageAnimation('show', "hotel",loadCnt);
			});
		});
	}
		$.get(url+"&arg=newSearch&isoView=true",{v:Math.random()},function(res){
			//userTrackerModule.init();;
			//console.log(res);
	//$.get("/common/themes/v2/tmpl/hotel/hjson.json",{},function(res){
		if(res !==null && res.status ==="SUCCESS"){

			// Google Analytics Page View trigger.
				 /* dataLayer.push({
					  'event':'VirtualPageview',
					  'virtualPageURL':'/hotel/searchHotels',
					  'virtualPageTitle':'Hotel Results'
				}); */
		
			//console.log('REPORTSTATUS=HotelSearchResponse');
			

			hotelTemplateVar.resetFilterswithMS = true;
			dynamicJsCssLoading('landing'+(i18n.options.lng == "en" ?"":'-'+i18n.options.lng)+'.css','/common/themes/v2/css/results'+(i18n.options.lng == "en"?"":'-'+i18n.options.lng)+'.css','css');
			dynamicJsCssLoading('alHilal'+(i18n.options.lng == "en" ?"":'-'+i18n.options.lng)+'.css','/common/themes/v2/css/results'+(i18n.options.lng == "en"?"":'-'+i18n.options.lng)+'.css','css');
			dynamicJsCssLoading('bbcStyle'+(i18n.options.lng == "en" ?"":'-'+i18n.options.lng)+'.css','','css');
			dynamicJsCssLoading('tistahel'+(i18n.options.lng == "en" ?"":'-'+i18n.options.lng)+'.css','/common/themes/v2/css/results'+(i18n.options.lng == "en"?"":'-'+i18n.options.lng)+'.css','css');
			if( res.data.searchInfo != undefined && res.data.searchInfo.searchType==='Hotel'){
		  			window.location.href=res.data.reviewPageUrl+'&pId='+res.data.productId;                                      
		  			$.loadingPageAnimation();
			}
			else{
				if(searchType==='Hotel'){
					window.history.pushState({url:url,EVENT:'HOTEL_RESULT'}, 'Hotel Search...', url);
				}
				console.log('res%%%%%');
				hotelTemplateVar.setData(res.data);
				hotelTemplateVar.setcriteria = res.criteria;
				var city=res.criteria.cityName;
				var country=res.criteria.countryName;
				var showMsgFlg=res.showMsgFlg;
				var obj = JSON.parse(JSON.stringify(res.data));
				var response=JSON.parse(obj);
				inputConsole('HotelSearchResponse-'+response.uuid);
				var data = {
						searchRS:response.searchRS,
						sc:response.searchCriteria,
						maps:response.maps,
						uuid:response.uuid,
						city:city,
						country:country,
						landMarkData:response.landMarkData,
						cityTax:response.cityTax,
						language:response.language,
						showMsgFlg:showMsgFlg,
						noResultsFound: false,
						modifySearchData:response.modifySearchData,
						cccNumber:res.cccNumber,
						domainName:res.domainName,
						loyaltyEarnPoints:response.loyaltyEarnPoints
					}
				hotelTemplateVar.univData=data;
				if(showMsgFlg){
					if(response.cityGeoData!=''){
						res.criteria.lat = response.cityGeoData.lat;
						res.criteria.long = response.cityGeoData.long;
						hotelTemplateVar.cityLat = response.cityGeoData.lat;
						hotelTemplateVar.cityLng = response.cityGeoData.long;
					}
				}
				$.get('/hotel/resultStatic',{},function(template){
					document.getElementById("_bodyContainer").innerHTML = template;
					//router.navigate(url);
					document.close();
					$.get('/common/themes/v2/tmpl/hotel/hotelResults.ejs?v=nd-v0102',{v:Math.random()},function(template){
						hotelTemplateVar.dynamicTemplate = template;						
						
						hotelTemplateVar.loadFilter();
						hotelTemplateVar.init();
						hotelTemplateVar.univData.HSRL = hotelTemplateVar.starRatingFilterData;
						hotelTemplateVar.univData.districtFilterList = hotelTemplateVar.districtFilterList;
						hotelTemplateVar.univData.hotDeal = hotelTemplateVar.hotDeal;
						
						loadTemplate('hotel-filter-view',hotelTemplateVar.univData,$('.filterSec'),template);
						loadTemplate('hotel-modify-view',hotelTemplateVar.univData,$('.modifySearch'),template);
						loadTemplate('hotel-results-view',hotelTemplateVar.univData,$('#list-view'),template);
						//Static text
						$('.hotelResultSort').show();
						$('._staticLoadTxt').show();
						/**
						 * If currency changes in review page after updating curenncy header in results page 
						 */
						$('.currencyDropdown ul').each(function(){
							var target = $(this).find('li');
							target.each(function(){
								if($(this).hasClass('active')){
									currency = $(this).find('a').attr('data-cur');
								}
							});
						});
						if(hotelTemplateVar.setSelectedCurrency!==currency){
							$('.currencyDropdown ul').each(function(){
								var target = $(this).find('li');
								target.each(function(){
									if($(this).hasClass('active')){
										$(this).removeClass('active');
									}
								});
								target.each(function(){
									if($(this).find('a').attr('data-cur')===hotelTemplateVar.setSelectedCurrency){
										$(this).addClass('active');
										var text = currencySymbols($(this).find('a').attr('data-cur')) +' - '+$(this).find('strong').text();
										$('.curChange').text(text);
									}
								});
							});
						}
						loadTemplate('distanceDropdown',hotelTemplateVar.univData,$('#_distanceDropdown'),template);	
						autoCompleteHotel('#countrycityhotel','','search-ul','hotelsearchKey');
						if(showMsgFlg){
							 $('.hotelNotAvl').show();
						}
						$('.tnlHome,.tnlFlight,.tnlHotel,.tnlFPH,.tnlCars').removeClass('active');
						setTimeout(function(){
							ULlessMore(['_accType_filter_template','_area_filter_template','_hotelChain_filter_template']);
						}, 50);
					});
				});
				
			}
		}
		else if(res !==null && (res.status==="ERROR" || res.status==='FAIL')){
			inputConsole('HotelSearchResponseError');
			if(searchType==='Hotel'){
					window.history.pushState({url:url,EVENT:'HOTEL_RESULT'}, 'Hotel Search...', url);
			}
			if(res.response != undefined && (res.response === null || res.response.code==='ETIMEDOUT')){
				growl_alert(i18n.t("noHotelsFound"));
				//$.loadingPageAnimation();
			}
			else{
				inputConsole('HotelSearchResponseError-'+res.response.echoToken);
				//$.loadingPageAnimation();
				dynamicJsCssLoading('landing'+(i18n.options.lng == "en" ?"":'-'+i18n.options.lng)+'.css','/common/themes/v2/css/results'+(i18n.options.lng == "en"?"":'-'+i18n.options.lng)+'.css','css');
			dynamicJsCssLoading('alHilal'+(i18n.options.lng == "en" ?"":'-'+i18n.options.lng)+'.css','/common/themes/v2/css/results'+(i18n.options.lng == "en"?"":'-'+i18n.options.lng)+'.css','css');
			dynamicJsCssLoading('bbcStyle'+(i18n.options.lng == "en" ?"":'-'+i18n.options.lng)+'.css','','css');
			dynamicJsCssLoading('tistahel'+(i18n.options.lng == "en" ?"":'-'+i18n.options.lng)+'.css','/common/themes/v2/css/results'+(i18n.options.lng == "en"?"":'-'+i18n.options.lng)+'.css','css');
				$.loadingPageAnimation();
				$.get('/hotel/resultStatic',{},function(template){
				    $('#_bodyContainer').empty();
				    document.getElementById("_bodyContainer").innerHTML = template;
				    document.close();
				    $('.resultBlock').hide();
				    console.log($('.hNoFilteredResults'));
				    $('._noResultsFound').attr('style','display:block');
				    $.get('/common/themes/v2/tmpl/hotel/hotelResults.ejs?v=nd-v0102',function(template){
				         hotelTemplateVar.dynamicTemplate = template;      
				         var data ={
						    sc:res.response.sc,
							modifySearchData:res.response.modifySearchData,
						    noResultsFound: true
					     }
				         loadTemplate('hotel-modify-view',data,$('.modifySearch'),template);
				         autoCompleteHotel('#countrycityhotel','','search-ul','hotelsearchKey');
				         _langGlobal.langInit();
				    });
				});
		 }
	  }
	  else{
		  if(searchType==='Hotel'){
					window.history.pushState({url:url,EVENT:'HOTEL_RESULT'}, 'Hotel Search...', url);
		  }
		growl_alert(i18n.t("noHotelsFound"));
		$.loadingPageAnimation();
	  }
		hModifyDP = true;
		//initDatePickerComponent();
		//$.loadingPageAnimation();
	});
	
}

/**
 * generate hotel search url
 * @param opt
 */
function generateHotelURL(opt) {
	var result = "";
	/**
	    * Window.location.origin Fix for IE
	    * @site http://tosbourn.com/a-fix-for-window-location-origin-in-internet-explorer/
	    */
	if (!window.location.origin) {
		window.location.origin = window.location.protocol + "//" + window.location.hostname + (window.location.port ? ':' + window.location.port: '');
	}
	var base_url = window.location.origin;
	var result = 'hotel/searchHotels?'+$.param(opt);
	if(opt.hotelSearchType==='Hotel' || opt.searchFrom === 'LandingPage' || opt.loadingImage==='ReviewPage'){
		var res = '/hotel/searchHotels?'+$.param(opt);
		hotelResultsRender(res);
	}
	else{
		pushHotelUrl(result);
	}
}

/**
 * @description change browser url 
 * fire the search request and get the response
 * and redirect to hotel results page
 * @param url
 * @param arg
 */
function pushHotelUrl(url,arg){
	// Set Search Cookies(predective search key)
	var key = 'HOTEL_SEARCH_COOKIE';
	
	if(($('#hotelsearchKey').val()!='undefined')){
		var hcookieData = {
				destInput:$('#hotelsearchKey').val(),
				checkIn:$("#fdphoFHidden").val(),
				checkOut:$("#fdphoTHidden").val(),
				nightCnt:$(".nights-count").val(),
				roomCnt:$("#hotelRooms").val(),
				elmAdult:$("#hiddena").val(),
				elmChild:$("#hiddenc").val(),
				elmChildAge:$("#hiddenca").val()
			}
		Cookies.set(key, JSON.stringify(hcookieData), { expires: 7 });
	}	
	var u = window.location.origin+'/'+url;
	getHotelRoute(u);
}

function getHotelRoute(u){
	if(typeof router!=="undefined"){
		router.navigate(u, true);
	}
}

/**
 * Show directions from hotel confirmation page
 */
$('body').on('click','a.show-map',function(e){
	var xHotel=$(this).attr('data-hName');
	var xCity=$(this).attr('data-hCity');
	var xCountry=$(this).attr('data-hCountry');
	var url= 'https://www.google.co.in/maps/dir/'+xHotel+','+xCity+','+xCountry+'/'+xCity+','+xCity+','+xCountry+'?hl=en';
	if($('html').hasClass('arabic')){
		url= 'https://www.google.co.in/maps/dir/'+xHotel+','+xCity+','+xCountry+'/'+xCity+','+xCity+','+xCountry+'?hl=ar';						
	}
	window.open(url,'_blank')
	
});
/**
 * Near by hotels Functionality Start
 */

$('body').on('click','.map-wrap a.near-hotels',function(e){
 var $this = $(this);
 var nHotel = $this.parents('section.hotel-info').find('.nearHotel');
 var css = nHotel.attr('style');
 if(typeof css!=='undefined' && css==='display: block;'){
  nHotel.attr("style",'display: none;');
 }
 else{
  var html = '<span class="flaticon-delete30 close nbhClsbtn"></span><p id="nearTxt">'+i18n.t("nearByHotels")+'</p><div class="owl-carousel nearByhotels"></div>';
  nHotel.empty();
  nHotel.append(html);
  var target = $this.parents('section.item').find('.nearByhotels');
  $('.nearHotel').each(function(){
   $(this).attr("style",'display: none;'); 
  });
  $('.nearByhotels').empty();
  setTimeout(function(){
   var SHSOData = hotelTemplateVar.SHSO;
   getClosestHotel(hotelTemplateVar.univData.searchRS, SHSOData,$this.attr('data-uid'),$this.attr('data-uuid'),target,hotelTemplateVar.univData.sc,hotelTemplateVar.univData.language);
   target.parents('.nearHotel').attr("style",'display: block;');
   target.owlCarousel({
    items : 2,
    itemsDesktop: [1199, 2],
    itemsTablet: [866, 2],
    itemsMobile: [767, 1],
    itemsTabletSmall: [639, 1],
    lazyLoad: true,
    navigation: true,
    pagination: false,
    autoPlay: false,
    stopOnHover:false,
    responsive:true,
    rewindNav:false,
    scrollPerPage:true,
    mouseDrag:false
   });
  },500);
 }
 return false;
});
  
function getClosestHotel(newSubData,SHSOData,uid,uuid,target,searchCriteria,language){
	
	   var baseObj = [];
	   if(SHSOData.length > 0){
		   for(var i=0; i<SHSOData.length; i++){
			   newSubData.push(SHSOData[i]);
		   }
	   }
	   for(var i=0; i<newSubData.length; i++){
		    if(newSubData[i].uid==uid){
		     baseObj.push(newSubData[i]);
		    }    
	   }
	   
	   for(var i=0; i<newSubData.length; i++){
	     newSubData[i].staticData.nearest	= {};  
	newSubData[i].uuid=uuid;
	    if(baseObj.length>0 && baseObj[0].staticData.lat!="" && baseObj[0].staticData.lng!=""){
	     var latLonLandMark = latLonToDistance(baseObj[0].staticData.lat,baseObj[0].staticData.lng,newSubData[i].staticData.lat,newSubData[i].staticData.lng);
	     var data = {
	       distance:latLonLandMark,
	       hotelName:baseObj[0].staticData.hotelName
	     }
		 
	     newSubData[i].staticData.nearest = data;   
	 
	    }else{
	     var data = {
	       distance:null
	     }
	     //newObjCurrency[i].geo.distanceLandMark = data;
	    }  
	   }
	    
	   newSubData.sort(function(a, b){
	    return a.staticData.nearest.distance - b.staticData.nearest.distance;
	   });
	   newSubData.sc = searchCriteria;
	   newSubData.language = language;
	  
	   hotelTemplateVar.loadTemplate('nearByHotelsId', newSubData, target); 
	 
	  }
  
  /***
   * @returns the distance between two points
   */
  function latLonToDistance(t,a,s,i){var n=3958.7558657440545,o=toRadius(s-t),h=toRadius(i-a),M=Math.sin(o/2)*Math.sin(o/2)+Math.cos(toRadius(t))*Math.cos(toRadius(s))*Math.sin(h/2)*Math.sin(h/2),u=2*Math.atan2(Math.sqrt(M),Math.sqrt(1-M)),r=n*u;return(1.609344*r).toFixed(1)}function toRadius(t){return t*Math.PI/180}
  
  
function setChildrenAges(string){
	var str="";
	console.log(string);
	var arr1=string.split('%7C')
	for(var i=0;i<arr1.length;i++){
		console.log(arr1[i]);
		var arr2=arr1[i].split('%2C');
		var p1=[];
		for(var j=0;j<arr2.length;j++){
			if(arr2[j]!='0'){
				p1.push(arr2[j]);
			}
		}
		str=str+'['+p1.toString()+']'+':'
	}
	return str.slice(0, -1);
}
/**
* Generate Review Page URL
*/
function generateReviewPageUrl(reqUrl,selectedHotel,callback){
	console.log(reqUrl);
	var language=cmnGetParFrmURL('language',reqUrl);
	var	na=cmnGetParFrmURL('noOfAdults',reqUrl).split("%2C");
	var noOfAdults='';
	for(var i in na){
		if(noOfAdults===''){
		  noOfAdults=na[i];
		}
		else{
			noOfAdults=noOfAdults+","+na[i];
		}
	}
	
	var	nc=cmnGetParFrmURL('noOfChildren',reqUrl).split("%2C");
	var noOfChildren='';
	for(var i in nc){
		if(noOfChildren===''){
		  noOfChildren=nc[i];
		}
		else{
			noOfChildren=noOfChildren+","+nc[i];
		}
	}

	var url='',
		language = cmnGetParFrmURL('language',reqUrl);
		checkInDate=cmnGetParFrmURL('checkInDate',reqUrl),
		checkOutDate = cmnGetParFrmURL('checkOutDate',reqUrl),
		noOfRooms=cmnGetParFrmURL('noOfRooms',reqUrl),
		noOfAdults=noOfAdults,
		noOfChildren=noOfChildren,
		childrenAges=setChildrenAges(cmnGetParFrmURL('childrenAges',reqUrl)),
		uniqueId=selectedHotel.htlUniqueId,
		hotelId=selectedHotel.htlUniqueId,
		me='',
		language=language.split("_")[0];
		$.post('/hotelNameById',{uniqueId:selectedHotel.htlUniqueId},function(res){
			var hotelComKey=res.split("|");
			
			var url='',
			cityName = hotelComKey[1],
			countryName =hotelComKey[0],
			hotelName = hotelComKey[2];
			pId=randomString(12);
			
			
			
			url = "/hotelresults/"+countryName+"/"+cityName+"/"+hotelName+"."+language+"?"
			+"checkInDate="+checkInDate
			+"&checkOutDate="+checkOutDate
			+"&noOfRooms="+noOfRooms
			+"&language="+language
			+"&noOfAdults="+noOfAdults
			+"&noOfChildren="+noOfChildren
			+"&childrenAges="+childrenAges
			+"&uniqueId="+uniqueId
			+"&hotelId="+hotelId
			+"&me="+me
			+"&pId="+pId
			+"&uuid="+selectedHotel.echoToken;
			
			 callback(url);  
		});
	
   
}

/*function randomString(length){
	return Math.floor(Math.pow(10, length-1) + Math.random() * 9 * Math.pow(10, length-1));
}*/

function randomString(m) {
	var m = m || 12; s = '', r = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
	for (var i=0; i < m; i++) { s += r.charAt(Math.floor(Math.random()*r.length)); }
	return s;
};
  
  /**
   * @author Madhavi
   * @description onclick book now button in results page
   * @param uuid
   * @param uid
   * @return redirect to hotels review page
   */
$('body').on('click','._bookNow',function(){
	//open popup immidiatly to avoide popup-blocker
	var popup = window.open('', '_blank');
	var $t = $(this);
	//if(typeof $t.attr('disabled')==='undefined'){ 
		/*if($t.hasClass('morePhotos')){
			var target = $t.parents('section.hotel-info').find('.priceInfo');
			btnLoadingAnimation(target.find('._bookNow'));
			target.find('._bookNow').attr("disabled", "disabled");
			target.find('._bookNow').text(i18n.t("processingText"));
		}else if($t.hasClass('_NBHNonClick')){
			var target = $t.parents('.owl-item').find('.book');
			btnLoadingAnimation(target.find('._bookNow'));
			target.find('._bookNow').attr("disabled", "disabled");
			target.find('._bookNow').text(i18n.t("processingText"));
		}else{
			btnLoadingAnimation($t);
			$t.attr("disabled", "disabled");
			$t.text(i18n.t("processingText"));
		}*/
		var uid = $t.attr('data-uid');
	  	var uuid = $t.attr('data-uuid');
	  	var hotelName = $t.attr('data-hname');
	  	var selectedHotel={
	  			'echoToken':uuid,
	  			'htlUniqueId':uid,
	  			'nearByHotel':false,
	  			'hotelName':hotelName
	  			
	  	}
	  	
	  	var checkInDate=getDataFromUrl('checkInDate');
		var checkOutDate=getDataFromUrl('checkOutDate');
		var rooms = getDataFromUrl('noOfRooms');
		var adtcnt = 0;
		var spltAdtCnt = $("#hiddena").attr("data-val").split(",");
		for(i=0; i < spltAdtCnt.length ;i++){
			adtcnt +=parseInt(spltAdtCnt[i]);
		}
		var chldcnt = 0;
		var spltChldCnt = $("#hiddenc").attr("data-val").split(",");
		for(i=0; i < spltChldCnt.length ;i++){
			chldcnt +=parseInt(spltChldCnt[i]);
		}
		var chldAge="";
		var spltChldAge = $("#hiddenca").attr("data-val").split("|");
		for(i=0; i < spltChldAge.length ;i++){
			var ages = spltChldAge[i].split(",");
			for(j=0; j < ages.length; j++){
				if(ages[j] != "0"){
					chldAge += ages[j]+",";
				}
			}
		}
	  	hotelBook({
  			"hotel_name":hotelName,
  			"checkIn_date":(checkInDate!="")?new Date(checkInDate).toString():"",
  			"checkOut_date":(checkOutDate!="")?new Date(checkOutDate).toString():"",
  			"no_of_rooms":rooms,
  			"language":lang,
  			"no_of_adults":adtcnt,
  			"no_of_children":chldcnt,
  			"children_ages":chldAge
	  	});
		 var redirectReview = function(callback) {
			 var url=generateReviewPageUrl(window.location.href,selectedHotel,callback);
			
			// callback(url);
		 };
		 redirectReview(function(url) {
			//set the url to the opened popup
			popup.location.href = url;

			if (!popup){
				growl_alert(i18n.t('allowpopups'));
			} 
		 });
		
	  	/*$.post('/hotel/selectHotel',selectedHotel,function(res){
	  		if($t.hasClass('morePhotos')){
	  			var target = $t.parents('section.hotel-info').find('.priceInfo');
				target.find('._bookNow').removeAttr("disabled");
				target.find('._bookNow').removeClass('LoadBtn');
				target.find('._bookNow').text(i18n.t("bookNow"));
	  		}else if($t.hasClass('_NBHNonClick')){
				var target = $t.parents('.owl-item').find('.book');
				target.find('._bookNow').removeAttr("disabled");
				target.find('._bookNow').removeClass('LoadBtn');
				target.find('._bookNow').text(i18n.t("bookNow"));
			}else{
	  			$t.removeAttr("disabled");
		  		$t.removeClass('LoadBtn');
				$t.text(i18n.t("bookNow"));
	  		}
	  		
	  		if(res!== null && res.status ==='SUCCESS'){
	  			//window.location.href=res.data.reviewPageUrl+'&pId='+res.data.productId;  
	  			var popup= window.open(res.data.reviewPageUrl+'&pId='+res.data.productId );
	  			if (popup) {
	  			  popup.onload = function () {
	  			    console.log(popup.innerHeight > 0 ? 'open' : 'blocked');
	  			  }
	  			} else {
	  				growl_alert(i18n.t('allowpopups'));
	  			}
	  		}else{
	  			if(res!== null && res.status ==='FAIL'&&typeof res.message !=='undefined' && res.message==='Session Expired'){
	  				hotelResultsRender(window.location.href);
	  			}
	  			else{
	  				growl_alert(i18n.t('selectedhotelnoavailable'));
	  			}
	  			
	  		}  		
		 });*/
	 //}
});	
 
 /**
  * @author madhavi
  * @description Redirect from review page to traveller details page
  * Fire booking info request for price
  * Redirect to traveller details page
  * @param productId
  * @param echoToken
  * @param uid
  */
function proceedToTravellerPage(productId,echoToken,uid,defRoomFlag,roomId,arNo,elm){
	var bookNowObj = JSON.parse($(elm).siblings(".bookNowData").val());
	bookRoom(bookNowObj);
	//$.loadingPageAnimation('show');
	$('.alert_custom').hide();
	console.log($(elm));
	var target = $('.row.roomType').find('.rvSecCol');
	btnLoadingAnimation($(elm));
	setTimeout(function(){
		$(elm).attr("disabled", "disabled");
		target.each(function(){
			$(this).find('.processingHotelMainBtn').attr("disabled", "disabled"); 
		});
	},200);
	 $(elm).val(i18n.t('processingText'));
	  var selectedHotel={
			  productId:productId,
			  echoToken:echoToken,
			  uid:uid
	  }
	 selectedHotel={
				  pId:productId,
				  rId:roomId,
				  arNo:arNo,
				  echoToken:echoToken
	 }
	 $.post('/hotel/bookOtherRoom',selectedHotel,function(res){
			  console.log(res);
			  if(res !== null && res.status==='SUCCESS'){
				  inputConsole('BookInfoResponse-'+res.data.uuid);
				  location.href = '/hotel/hotelGuestDetails?pid='+res.data.productId+'&hid='+uid+'&retryP=false';
			  }
			  else{
				   inputConsole('BookInfoResponseError-'+res.echoToken);
				  var drcnt= 1;
				  if(res !== null && res.status==='ERROR' && typeof res.message !=='undefined' && res.message ==="Session Expired"){
					  location.href="/hotels";
					  return;
				  }else if(res.rcnt != '1'){
					   if(drcnt != res.rcnt){
					   growl_alert(i18n.t('selectedroomntavailtxt'));
					   }else{
					   growl_alert(i18n.t('allselectedroomsntavailtxt'));  
					   }
					   target.each(function(){
						if(typeof $(this).find('.processingHotelMainBtn').attr('data-rmav')!="undefined" && $(this).find('.processingHotelMainBtn').attr("data-rmav")==='true'){
							drcnt = drcnt+1;
						}else{ 
						     $(this).find('.processingHotelMainBtn').removeAttr("disabled");
						}
					   });
									 $(elm).attr("disabled", "disabled");
					                 $(elm).attr("data-rmav", "true");
					  }else{
						   growl_alert(i18n.t('selectedoneroomntavailtxt'));
						   target.each(function(){
							$(this).find('.processingHotelMainBtn').removeAttr("disabled");
						   });
										  $(elm).attr("disabled", "disabled");
						   $(elm).attr("data-rmav", "true");
					 }
					//location.href="/hotel/error"; return;
			  }
			  $(elm).removeClass('LoadBtn');
			  $(elm).val(i18n.t('bookNow'));
			  //$.loadingPageAnimation();
	 });
}

/**
 * @description Continue to payment page from guest details page
 * @param pid
 */
function continueToPayment(pid,elm,hotelContPayData){
	hotelContPay(hotelContPayData);
	//$.loadingPageAnimation('show');
	//console.log($(elm));
	var guestInfoData={};
	
	var validated = hTravelDetValidations(this);
	
	//console.log('cont');
	var qitafElm = $('.redeemPoints');	
	var paymentElm = $('.payment');
	var reviewBkngElm = $('.review-terms');
	var sessionExpirePopup = $('#sessionExpired');
	var alhilalMatchData={};
	console.log('nnnnnnnn',$(this).find('._nationality').val());
	if(validated==true){

		$('.alert_custom').hide();
		btnLoadingAnimation($(elm));
		$(elm).attr("disabled", "disabled");
		$(elm).text('processing');

		var count = 0;
		var fname='',lname='',title='';
		var supChecked='';
		var checkBox = $('#sameLeadPax').is(':checked');
		$('.guestDetails').each(function(){ 
			var $t = $(this);
			var suppliments=[];
			guestInfoData[count] = {};
			
			if(!$(this).find('._apxMGuestDet').hasClass('_extraGuest')){
				console.log('if')
				title = $t.find('._txtTitle').val();
				fname = $t.find('._firstName').val();
				lname = $t.find('._lastName').val();
				$t.find('.suppliments li input').each(function(){
					if($(this).is(':checked')){
						console.log($(this));
						suppliments.push($.trim($(this).val()));
					}
				});
				console.log("supp array "+suppliments);
				guestInfoData[count].suppliments=suppliments;
				guestInfoData[count].firstName = $.trim(((fname).replace(/-/g,"")).replace(/\s\s+/g,' '));
				guestInfoData[count].lastName = $.trim(((lname).replace(/-/g,"")).replace(/\s\s+/g,' '));
				guestInfoData[count].title = $t.find('._txtTitle').val();
				
				if($t.find('._email')!='undefined'){
					guestInfoData[count].email = $t.find('._email').val();
					var mobl = $t.find('#phoneCountryCode').val()+'-'+$t.find('._phone-number').val();
					guestInfoData[count].mobile = mobl.replace(/\+/g, "");
					/* guestInfoData[count].nationality =  $t.find('._nationality').val();
				    guestInfoData[count].issuingCountry =  $t.find('._issuingCountry').val(); */
				}else{
					guestInfoData[count].email = '';
					guestInfoData[count].mobile = '';
					/* guestInfoData[count].nationality =  '';
				    guestInfoData[count].issuingCountry =  ''; */
				}
			}else if(!checkBox){
				title = $t.find('._txtTitle').val();
				fname = $t.find('._firstName').val();
				lname = $t.find('._lastName').val();
				guestInfoData[count].firstName = $.trim(((fname).replace(/-/g,"")).replace(/\s\s+/g,' '));
				guestInfoData[count].lastName = $.trim(((lname).replace(/-/g,"")).replace(/\s\s+/g,' '));
				guestInfoData[count].title = $t.find('._txtTitle').val();

				
				if($t.find('._email')!='undefined'){
					guestInfoData[count].email = $t.find('._email').val();
					mobl = $t.find('#phoneCountryCode').val()+'-'+$t.find('._phone-number').val();
					guestInfoData[count].mobile = mobl.replace(/\+/g, "");
					/* guestInfoData[count].nationality = $t.find('._nationality').val();
				    guestInfoData[count].issuingCountry =  $t.find('._issuingCountry').val(); */
					

				}else{
					guestInfoData[count].email = '';
					guestInfoData[count].mobile = '';
					/* guestInfoData[count].nationality =  '';
				    guestInfoData[count].issuingCountry =  ''; */
				}
				$t.find('.suppliments li input').each(function(){
					if($(this).is(':checked')){
						console.log($(this));
						suppliments.push($.trim($(this).val()));
					}
				});

				guestInfoData[count].suppliments=suppliments;
			}else{
				guestInfoData[count].firstName = $.trim(((fname).replace(/-/g,"")).replace(/\s\s+/g,' '));
				guestInfoData[count].lastName = $.trim(((lname).replace(/-/g,"")).replace(/\s\s+/g,' '));
				guestInfoData[count].title = title;
				guestInfoData[count].email = '';
				guestInfoData[count].mobile = '';

				/* guestInfoData[count].nationality =  '';
				guestInfoData[count].issuingCountry =  ''; */

			}
			count++;
		});
		
		

		var sadad= $('.panel-heading._sadad');
		var payfort=$('.panel-heading._payfort');
		var checkout=$('.panel-heading._checkout');
		var installment=$('.panel-heading._installments');
		var payAtStore=$('.panel-heading._payAtStore');
		var showpayatstore = '';
		var showBT=false;
		var alhilalMatchDiv=$('.alHilalMtkt');
		if($('.alHilalMtkt .tktradio input[type=radio]:checked').attr('data-tktType')){
			var selectedTicket=JSON.parse($('.alHilalMtkt .tktradio input[type=radio]:checked').attr('data-tktType'));
			var selectedMatch=JSON.parse($('.alHilalMtkt .tktradio input[type=radio]:checked').attr('data-match'));
			var noOfTickets;
			$('._matchdropdwn').each(function(){
				if($(this).val()!=''){
					noOfTickets=$(this).val();
				}
			});
			
			
			console.log('noOfTickets===================',noOfTickets);
			selectedTicket.noOfTktSelect=noOfTickets;
			delete selectedTicket.noOfTktAvailable;
			selectedTicket.totalPrice=selectedTicket.userPrice*noOfTickets;
		}
		
		var data={
			guestInfoData:guestInfoData,
			productId:pid,
			sameLeadPax:checkBox,
			selectedTicket:selectedTicket,
			selectedMatch:selectedMatch,
			noOfTickets:noOfTickets
		}
		 $.post('/hotel/continueBooking',{data:data}, function(res){
			//console.log('aftrn continu',res.PBIRS);
			if(res !== null && res.returnObj && res.returnObj.status=='SUCCESS'){
				console.log(res);
				console.log('PersistBookingInfoResponse-'+res.uuid);
				 inputConsole(res.PBIRS.BookingInfoRS.source.referenceID+'-PersistBookingInfoResponse-'+res.uuid);

				 

				var alhilalTktPrice=0;
				var totalPrice=parseFloat(res.PBIRS.BookingInfoRS.hotel.rc.up.p);
				   if(res.selectedTicket){
					    alhilalTktPrice=parseFloat(res.selectedTicket.totalPrice);
						totalPrice=totalPrice+alhilalTktPrice;
				   }
				   console.log('totalPrice',totalPrice);
					//var rc2 = i18n.t("pay")+' '+i18n.t(res.PBIRS.BookingInfoRS.hotel.rc.up.uc)+' //'+res.PBIRS.BookingInfoRS.hotel.rc.up.p;
					if(lang == 'en')
					{
						var rc2 = i18n.t("pay")+' '+i18n.t(res.PBIRS.BookingInfoRS.hotel.rc.up.uc)+' '+totalPrice;

					} else {
						var rc2 = i18n.t("pay")+' '+totalPrice+' '+i18n.t(res.PBIRS.BookingInfoRS.hotel.rc.up.uc);
					}
					
					console.log('rc2',rc2);
					$('#htravellerDetailsStep').removeClass('active');
					$('#htravellerDetailsStep').addClass('done');
					$('#hpaymentStep').addClass('active');
					//window.location = res.data;
					if(res.returnObj.pChanged == true){
						$(elm).removeClass('LoadBtn');
						$(elm).attr("disabled","disabled");
						$(elm).val(i18n.t("continueToPayment"));					
					}else{
						$.get('/common/themes/v2/tmpl/hotel/hotelReviewTerms.ejs?v=nd-v0102',{},function(reviewTearmTemplate){				
							loadTemplate('hotel-review-terms-view',{responseData:res},reviewBkngElm,reviewTearmTemplate);
							reviewBkngElm.show();
						});

						$.get('/common/themes/v2/tmpl/hotel/hotelPayment.ejs?v='+Math.random(),{},function(template){				
							loadTemplate('redeem-points', {responseData:res}, $('#redeem-points'), template);
							loadTemplate('payment',{responseData:res},$('#payment'),template);
							loadTemplate('myWallet',{responseData:res},$('#myWallet'),template);
						    cardYear();
				 		
						resTabPanel();
						initPaymentPanel();
						hideMore();
						saveCardInfo();
						if(res.paymentObj.showPayfort){	
						$.get('/payment/generateShasign',{pid:pid},function(shaResposne){							
							$('._payfort').find('#signature').val(shaResposne.shaSign);
							$('._payfort').find('#service_command').val(shaResposne.service_command);
							$('._payfort').find('#merchant_identifier').val(shaResposne.merchant_identifier);
							$('._payfort').find('#access_code').val(shaResposne.access_code);
							$('._payfort').find('#merchant_reference').val(shaResposne.merchant_reference);
							$('._payfort').find('#language').val(shaResposne.language);
							$('._payfort').find('#return_url').val(shaResposne.return_url);	
							$('._payfort').find('#paymentForm').attr('action',shaResposne.action_url);							
						});
						}
						else if(res.paymentObj.showCheckout){						
							loadCheckoutKit(res.paymentObj);
						}
												
				 		$('.continueToPayment').hide();
				 		$('.completeBooking').val('');
						$('.completeBooking').val(rc2);
						$('.completeBooking, .sarOnly').show();

						var configuration = {
					        mobileElm: 'QITAF_MOBILE_NO',
					        genOtpBtn: 'QITAF_GRNOTP_BTN',
					        pid: 'HTDP',
					        product: 'HTDP',
					        amount: 'QITAF_AMOUNT_TO_BE_REDEEM',
					        pin: 'QITAF_PIN_NO',
					        redeemPointBtn: 'QITAF_REDEEM_POINT_BTN',
					        reGenerateOTP: 'QITAF_RE_GENERATE_OTP_BTN',
					        earnGenOtpBtn: 'QITAF_EARN_GRNOTP_BTN',
					        earnMobileNum: 'QITAF_EARN_MOBILE_NO',
					        earnMessage: 'earnMessage',
					        optForm: 'optForm',
					        optPhone: 'optPhone',
					        optEPhone: 'optEPhone',
					        messageContainer: 'errorMessage',
					        redeemContainer: 'redeemMessage',
					        successClass: 'validate_success_message',
					        errorClass: 'validate_error_message',
					    };
					    QitafService.init(configuration);
 

						if(res.returnObj.bnpl){
				    		$('.completeBooking, .bankTransferBtn, .sarOnly').hide();
				    		$('.bnplBtn').show();
							$('#redeem-points').hide();
						}
						var lytObj = $('._ltyInfo');
						$(lytObj).attr('data-bamt',res.paymentObj.sarAmount);	
						if(res.paymentObj.domainName=='Global'){
						var couponDiscountSAR = (res.coupondetails && res.coupondetails.deductSarAmount) ? res.coupondetails.deductSarAmount : 0; 
						var qitafDiscountSAR =  (res.qitafObj && res.qitafObj.qitafSuccess) ? res.qitafObj.redeemAmount : 0;
						var totalDiscountSAR = parseFloat(couponDiscountSAR) + parseFloat(qitafDiscountSAR);
						$('._sarAmt').text((parseFloat(res.paymentObj.sarAmount - totalDiscountSAR).toFixed(2)));
						}else if(res.paymentObj.domainName!='Global'){
						var couponDiscountSAR = (res.coupondetails && res.coupondetails.deductSarAmount) ? res.coupondetails.deductSarAmount : 0; 
						var qitafDiscountSAR =  (res.qitafObj && res.qitafObj.qitafSuccess) ? res.qitafObj.redeemAmount : 0;
						var totalDiscountSAR = parseFloat(couponDiscountSAR) + parseFloat(qitafDiscountSAR);
						$('._egpAmt').text((parseFloat(res.paymentObj.sarAmount - totalDiscountSAR).toFixed(2)));
						}
						});

						/*$.loadingPageAnimation();
						$('.continueToPayment').hide();
						$('.completeBooking').val('');
						$('.completeBooking').val(rc2);
						if(res.returnObj.bnpl){
							$('.completeBooking').hide();
							$('.redeemPoints').hide();
							showpayatstore  = true;
							$('.bnplBtn ').show();
							$('.sarOnly ').hide();
							$('.bnplSection').show();
							$('._bankTransferSection').show();
							showBT=true;
						}else{
							$('.completeBooking').show();
							console.log($('.completeBooking'));
							$('.completeBooking').val('');
							console.log('rasds',rc2);
							$('.completeBooking').val(rc2);
							$('.bnplBtn ').hide();
							$('.sarOnly ').show();
							$('.bnplSection').hide();
							$('._bankTransferSection').hide();
							showpayatstore  = false;
							$('.panel-heading._payment').addClass('active');
							$('.panel-heading._payment').next().removeClass('collapse');
						}

						paymentConfigureHotel(sadad,payfort,checkout,installment,payAtStore,res.paymentObj,showpayatstore,showBT);
					
						if(res.paymentObj.domainName=='Global'){
							var couponDiscountSAR = (res.coupondetails && res.coupondetails.deductSarAmount) ? res.coupondetails.deductSarAmount : 0; 
							var qitafDiscountSAR =  (res.qitafObj && res.qitafObj.qitafSuccess) ? res.qitafObj.redeemAmount : 0;
							var totalDiscountSAR = parseFloat(couponDiscountSAR) + parseFloat(qitafDiscountSAR);
							$('._sarAmt').text((parseFloat(res.paymentObj.sarAmount - totalDiscountSAR).toFixed(2)));
						}else if(res.paymentObj.domainName!='Global'){
							var couponDiscountSAR = (res.coupondetails && res.coupondetails.deductSarAmount) ? res.coupondetails.deductSarAmount : 0; 
							var qitafDiscountSAR =  (res.qitafObj && res.qitafObj.qitafSuccess) ? res.qitafObj.redeemAmount : 0;
							var totalDiscountSAR = parseFloat(couponDiscountSAR) + parseFloat(qitafDiscountSAR);
							$('._egpAmt').text((parseFloat(res.paymentObj.sarAmount - totalDiscountSAR).toFixed(2)));
						}	
						//Hide Installment Section 
						if(res.returnObj.sarAmount < 1000){
							$('.install').hide();
						}
						$('._ltyInfo').attr('data-bid',res.paymentObj.flyinCode);
						
						
						if(res.paymentObj.savedPayfortCardDetails && res.paymentObj.savedPayfortCardDetails.length>0){							
							$.get('/common/themes/v2/tmpl/hotel/quickPayPaymentBlock.ejs?v=nd-v0102',{},function(quickPayTemplate){				
								loadTemplate('quickPay',{responseData:res},$('#quickPayContainer'),quickPayTemplate);
								
							
								setTimeout(function(){
									$('._quickPayCont').show();
									if(res.returnObj.bnpl){										
										$('._quickPayCont .panel-heading').removeClass('active');
										$('._quickPayCont .panel-heading').next().addClass('collapse');
									}									
									else{										
										if(res.paymentObj.showPayfort)
										{
											payfort.removeClass('active');
											payfort.next().addClass('collapse');
											payfort.parent('.panel').removeClass('first');
										}
										else{
											checkout.removeClass('active');
											checkout.next().addClass('collapse');
											checkout.parent('.panel').removeClass('first');
										}
										$('._paymentBody').hide();
										$('.buttons').find('#paymeBtn').attr('onclick',"payMeHotel('QUICKPAY',this)");
									}
									hideMore();
									//console.log('imhere');
								},500);
								
							});					
						}
						else if(res.paymentObj.showCheckout){
							setTimeout(function(){
							$('.buttons').find('#paymeBtn').attr('onclick',"payMeHotel('CHECKOUT',this)");
							},500);
						}
						
						if(res.paymentObj.userLoggedIn){							
							setTimeout(function(){			
								$('._saveCardHideShow li:gt(1)').hide();				
								$('.saveCradCheck').show();
								saveCardInfo();
							},500);
						}
						else{
							setTimeout(function(){							
								$('.saveCradCheck').hide();								
							},500);
						}
						
						paymentElm.show();
						qitafElm.show();
						if(res.couponData && res.couponData.status == 'success' && res.couponData.data &&  res.couponData.data[0]){
							$('#couponCode').val(res.couponData.data[0].code);
							$('.couponOfcode').text(res.couponData.data[0].des);							
						}						
						if(typeof $('.couponOfcode').text() == 'undefined' || $('.couponOfcode').text()==null || $('.couponOfcode').text().trim() == ''){
							$('.couponOfcode').hide();
						}else{
							$('.couponOfcode').show();
						}
						setTimeout(function(){	
						if(!$('.redeemPoints ul li').is(':visible')){
							qitafElm.hide(); 
						} 
						},200);
						offerWidgetFlyin.init();
						var offsetPopTop;
						if(res.paymentObj.showQitaf){
							$('.qiTab').show();
							// qitafElm.slideDown();
							 offsetPopTop = $(qitafElm).offset().top;
						}else{
							$('.qiTab, #QP').hide();
							// //qitafElm.hide();
							 offsetPopTop = $(paymentElm).offset().top;
						}
						
						if(res.returnObj.bnpl){
							$('.redeemPoints').hide();
						}
						
						if(res.paymentObj.showPayfort){	
						$.get('/payment/generateShasign',{pid:pid},function(shaResposne){
							console.log('shaResposne ',shaResposne);
							$('.payment').find('#signature').val(shaResposne.shaSign);
							$('.payment').find('#service_command').val(shaResposne.service_command);
							$('.payment').find('#merchant_identifier').val(shaResposne.merchant_identifier);
							$('.payment').find('#access_code').val(shaResposne.access_code);
							$('.payment').find('#merchant_reference').val(shaResposne.merchant_reference);
							$('.payment').find('#language').val(shaResposne.language);
							$('.payment').find('#return_url').val(shaResposne.return_url);	
							$('.payment').find('#paymentForm').attr('action',shaResposne.action_url);							
						});
						}
						else if(res.paymentObj.showCheckout){						
							
							var dataCheckout= {PID:pid};						
			
							$.post('/payment/checkout/getToken',dataCheckout,function(tokenObj){
								if(tokenObj.status==='ERROR'){
								//disable checkout paymentgateway																	
								}else{
									//enable payment gateway load the checkout kit									
									
									window.CKOConfig = {
									debugMode: tokenObj.environment.debug,
									publicKey: tokenObj.environment.key,
									paymentToken: tokenObj.transaction.transaction_token,
									customerEmail: tokenObj.transaction.email,
									ready: function (event) {										
									CheckoutKit.monitorForm('#checkout-form', CheckoutKit.CardFormModes.CARD_CHARGE);
									},
									cardCharged: function (event) {									
										window.location.href = event.data.redirectUrl;
									},
									cardTokenisationFailed: function (event) {
            							window.location.href = tokenObj.environment.error_url+"&reason=cardTokenisationFailed"
							        },
							        paymentTokenExpired: function (event) {
							            window.location.href = tokenObj.environment.error_url+"&reason=paymentTokenExpired"
							        },
							        apiError: function (event) {
							            window.location.href = tokenObj.environment.error_url+"&reason=apiError"
							        }
									};
									var fileRef=document.createElement('script');
									fileRef.setAttribute("type","text/javascript");
									fileRef.setAttribute("src", "https://sandbox.checkout.com/js/checkoutkit.js");
									fileRef.setAttribute("async", "async");
									document.getElementsByTagName("head")[0].appendChild(fileRef);									
								}
							});

						}
						$('html, body').animate({scrollTop:offsetPopTop}, 500);

						$("[id=fnameId]").attr('disabled','');
						$("[id=lnameId]").attr('disabled','');
						$("[id=emailId]").attr('disabled','');
						$("[id=mobileNumberId]").attr('disabled','');
						$(".select-traveller-dp-pop").attr('disabled','disabled');
						$("[id=sameLeadPax]").attr('disabled','');
						$("._txtTitle").attr('disabled','disabled');
						$("._nationality, ._issuingCountry").siblings("a").css({"cursor": "not-allowed", "pointer-events": "none"});

						$("[id=suppliments]").hide();

						$('.freqnumber').each(function(){
							$(this).find('a').addClass('disableClick');
							$(this).removeClass('active');

						});


						$(".thanksMsg").css("display","none");*/
					}
			}
			else{
				 inputConsole('PersistBookingInfoResponseError-'+res.echoToken);
				if(res !== null && res.status==="ERROR" && typeof res.message !=='undefined' && res.message==="Session Expired"){
					location.href="/hotels"; return;
					//sessionExpirePopup.show();
				}
				else{
					var resp=JSON.parse(res.response);
					var errorCode=(resp.statusCode?resp.statusCode:resp.BookingInfoRS.err.cod);
					if(res.response && (resp.statusCode || (resp.BookingInfoRS.err && resp.BookingInfoRS.err.cod))){
						location.href="/hotel/error"+"?code="+errorCode; 
					}
					else{
					   location.href="/hotel/error"; return;
					}
				}
			}
		}); 
	}
	//$.loadingPageAnimation();
	//hideMore();
}



 

//function for changing the booking status after click on payment button
var bookingStatusChange = function(data){
	//console.log('bookingStatusChange');
	 $.post('/payment/bookingStatusChange',data,function(res){
		 
	 });
	
}


/**
 *@Info Payment Module
*/
 function payMeHotel(args){	 
	var pnlHdng = $(".payment .panel-heading");
	hotelTemplateVar.payPrice = $('#paymeBtn').val();
	var chkActvH = false;
	
	/*for(var i=0; i<pnlHdng.length; i++){
		if($(pnlHdng[i]).is(':visible') && $(pnlHdng[i]).hasClass("active")){
			chkActvH = true;
			break;
		}
	}*/

	var target = $('._payMode');
	target.each(function(){
		if($(this).hasClass('active')){
			console.log($(this));
			chkActvH = true;
		}
	});
	
	if(chkActvH){
		noRefreshAction();
		var pid = $('#HTDP').attr('data-pid');
		var bnpl = $('#HTDP').attr('data-bnpl');
		var bkngFired = $('#HTDP').attr('data-bkngFired');

		var condition2=validateCardInfo();	;

		if(args=="INSTALLMENTS"  || args=="PAYATSTORE" ){
			/*If credit card discount applied then we should not allow user to select other payment gateway options, should pay with only same credit card. */
			if($('._ccdsuccess').is(':visible')){
				var ccDAppliedNum=$('.ccNumber').val();
				if(ccDAppliedNum == undefined || ccDAppliedNum === ''){
				 ccDAppliedNum=$('#ccdDetails').val();
				}
				if(ccDAppliedNum){
					growl_alert(i18n.t("cmpltPaySmeDisc"));
					condition2 = false;
				}
			}
			else{
			   condition2 = true;
			}
		}
		if(condition2==true){
			if(bnpl== "true" && bkngFired === ''){
		      bookingStatusChange({pid:pid});
			}
		}
		if(args==='QUICKPAY'){
			var condition2 = true;
			var cvv;
		    var unique_id;
			var radio = $('._saveCardHideShow').find('input[type=radio]');
			 radio.each(function(){
			   if($(this).is(':checked')){
				 unique_id = $(this).attr('id');
				 cvvObj =  $(this).closest('li').find('#QUICKPAY_CARD_CVV');
				 cvv =  $(this).closest('li').find('#QUICKPAY_CARD_CVV').val();
			   }
			});
			if((cvv.length < 3)||(!_Nonly(cvv))||(cvv.length > 3)){  
					growl_alert(i18n.t("enterCVV"));
					cvvObj.addClass('error');
					cvvObj.focus();
					cvvObj.val("");
					condition2=false;
			}
		}
		if (args === 'SADAD') {
			    condition2 = validateSadadOLP(args);
		}
		if (args === 'FORT-SADAD') {
			    condition2 = validateSadadOLP(args);
		}
		
		if(condition2 == true){
		     btnLoadingAnimation($('#paymeBtn'));
		     dontRefreshPopup();
		  /**
		  * Outside cancellation Policy(Fire Book request first,after booking success fire 
		  * payment)
		  */
		  if(bnpl== "true"){
			
			  $.post('/hotel/completeBooking',{pid:pid},function(res){
					$("script[src='/common/themes/v2/js/jlibs/pageRefresh.js']").remove();
					 if(res !== null && res.status=='SUCCESS'){
						paymentService(args,cvv,unique_id,bkngFired);
					}
					else if(res.response.caFlag && res.response.caFlag == 'true' ){
						location.href="/hotel/error";
					}	
					//Booking Failed first time, no availability(Fire unique hotel request for other rooms)
					else if( res.response.PBR && res.response.PBR.BookingRS.err&& res.response.PBR.BookingRS.err.cod && res.response.PBR.BookingRS.err.cod === '1001'){  
						 $.post('/hotel/checkRoomAvailability', {pid:pid}, function(response) {
							
							 response.reviewPageUrl=res.data.reviewPageUrl;
							  if(response.status== "ERROR"){
								   location.href=res.data.reviewPageUrl+'&pId='+pid;
							  }
							  else{
								
								  $.get('/common/themes/v2/tmpl/hotel/otherAvailableRooms.ejs?v=nd-v2812d',{},function(availableRoomsTemplate){
									  hotelTemplateVar.dynamicTemplate = availableRoomsTemplate;
										hotelTemplateVar.loadTemplate('other-available-rooms-view',{responseData:response,args:args}, $('#otherrooms'),function(){
											$('#otherroomsPop').show();
											$('#otherrooms').modal({
											 show: true,
											 keyboard: false,
											 backdrop:'static'
										  });
										});
									
									});
								 
								}
					    });
					}
					//Second time booking failed
					 else{
						location.href="/hotel/error";
					} 
					$.loadingPageAnimation();
	           });
		 }
		 //Inside cancellation Policy(fire booking info for availability check)
		 else{
			 $.post('/hotel/bookingInfo', {pid:pid,caFlag:false}, function(res) {
				
				if(res.status && res.status=="SUCCESS"){
					if(bkngFired === ''){
				      bookingStatusChange({pid:pid});
					}
					  //Check Price change
					 if(res.data.caPriceChanged){
						 var data={
							 oldprice:res.data.caOldPrice,
							 newPrice:res.data.CABIRS.BookingInfoRS.hotel.rc.up.p,
							 cur:res.data.CABIRS.BookingInfoRS.hotel.rc.up.uc,
							 hname:res.data.hotelInfo.basicInfo.name,
							 args:args,
							 reviewPageUrl:res.data.reviewPageUrl,
							 paymentUrl:'/hotel/hotelGuestDetails?pid='+pid+'&hid='+res.data.hotelInfo.basicInfo.uniqueId+'&retryP=false'
						 }
						  $.get('/common/themes/v2/tmpl/hotel/otherAvailableRooms.ejs?v=nd-v2812d',{},function(availableRoomsTemplate){
									  hotelTemplateVar.dynamicTemplate = availableRoomsTemplate;
										hotelTemplateVar.loadTemplate('price-change-pop',{responseData:data}, $('#priceChangeAlert'),function(){
											$('#priceChangeHighAlert').show();
											$('#priceChangeAlert').modal({
											 show: true,
											 keyboard: false,
											 backdrop:'static'
										  });
										});
									
							});

					 }
					 else{
				        paymentService(args,cvv,unique_id,bkngFired);
					 }
				 } 
				 else if(res.caFlag && res.caFlag == 'true'){
					 location.href="/hotel/error";
				 }
				 //Booking info Failed because of availabilty gone(Fire unique hotel request for other rooms)
				else if(res.status === 'ERROR'){
					var resp=res.err.response;
					if(typeof res.err.response ==='string'){
						 resp=JSON.parse(res.err.response);
					}
					
					if(resp.BookingInfoRS && resp.BookingInfoRS.err&& resp.BookingInfoRS.err.cod && resp.BookingInfoRS.err.cod === '1001'){					
					  $.post('/hotel/checkRoomAvailability', {pid:pid}, function(response) {
						  if(response.status== "ERROR" ){
							   location.href=res.data.reviewPageUrl+'&pId='+pid;
						  }
						  else{
							  $.get('/common/themes/v2/tmpl/hotel/otherAvailableRooms.ejs?v=nd-v2812d',{},function(availableRoomsTemplate){
								  hotelTemplateVar.dynamicTemplate = availableRoomsTemplate;
									hotelTemplateVar.loadTemplate('other-available-rooms-view',{responseData:response,args:args}, $('#otherrooms'),function(){
										$('#otherroomsPop').show();
										$('#otherrooms').modal({
										 show: true,
										 keyboard: false,
										 backdrop:'static'
									  });
									});
								
								});
						    }
					    });
					  }
					  else{
						  location.href="/hotel/error";
					  }
				     }
					 else{
						location.href="/hotel/error";
					}  	
			   });
		    }
		}
			 
		 
	}
	else{
		growl_alert(i18n.t("slctPymntOptn"));
	}
 }
 
 function paymentService(args,cvv,unique_id,bkngFired){
	 if($('#priceChangeAlert').is(':visible')){
         $('#priceChangeAlert').hide();
     }
	 var pid = $('#HTDP').attr('data-pid');
	 var condition2=true;	
	 
	 if(args==='QUICKPAY'){

		if(condition2){
		 btnLoadingAnimation($('#paymeBtn'));
		 dontRefreshPopup();
		 
		 var device_fingerprint = $('#device_fingerprint').val();
		 var data = {
					cvv:cvv,
					pid:pid,
					unique_id:unique_id,
					device_fingerprint:device_fingerprint
		 }
		$.post('/payment/payfort/quickPay', data, function(res) {

			if(res.status==='success')
			 {
				if(res.check_3ds)
				{
					location.href = res.url;
				}
				else{
					if(res.bnpl)
					{
						location.href = "/pages/hotel/hotelConfirmation?SavedItenaryId="+res.savedItenaryId+'&pid='+res.pid;
					}
					else if(res.product === 'mfc' || res.product === 'ma'){
						location.href = res.rurl;
					}
					else{
						loadHotelConfirmationPage(res.pid);
					}
				}
			 }
			 else{
				location.href = '/payment/payfortRetry?pid='+res.pid;
			 }	
			
		});	
	}
 }
	 
	 if(args==='PAYFORT'){
		 if(condition2==true){
		 btnLoadingAnimation($('#paymeBtn'));
		 dontRefreshPopup();
		 
		 var device_fingerprint = $('#device_fingerprint').val();
		 var data = {
					device_fingerprint:device_fingerprint,
					pid:pid,
			}
			$.post('/payment/payfort/saveDeviceFingerPrint', data, function(res) {
				$('#paymentForm').submit();
			});	 
		
	  } 
	 }
	 
	 if(args==='CHECKOUT'){
		 if(condition2==true){
		 btnLoadingAnimation($('#paymeBtn'));
		 dontRefreshPopup();
		 $('#checkout-form').submit();
	  } 
	 }

     if(args==='AMEX'){
		 if(condition2==true){
		 btnLoadingAnimation($('#paymeBtn'));
		 dontRefreshPopup();
		 $('#amex-form').submit();
	  } 
	 }

    if (args === 'SADAD') {
		 if(bkngFired === ''){
			 bookingStatusChange({pid:pid});
		 }
			 btnLoadingAnimation($('#paymeBtn'));
			 dontRefreshPopup();
			 var OLP_ID = $('#SADAD_OLP_ID');        
			 var data = {
				 OLP_ID: OLP_ID.val() || '',
				 PID: pid,
			 }
			 $.post('/payment/sadad', data, function(res) {
				 
				if(res.status === "SUCCESS"){
					 location.href=res.ibURL;
				}
				else if(res.status === "FAILED"){		
					$('#paymeBtn').removeClass('LoadBtn');					
					$('#paymeBtn').val(hotelTemplateVar.payPrice);
					$('#sadadErrorMessage').text(res.errorMessage).addClass('validate_error_message');
					$('#dontRefreshPopup').modal('hide');
					var offsetPopTop = $('.payment.opcPayment').offset().top;
					$('html, body').animate({scrollTop:offsetPopTop}, 500);
				 }
				else{
					location.href = '/common/error';
				}
							
			 });
	  }
	  if (args === 'FORT-SADAD') {		
			btnLoadingAnimation($('#paymeBtn'));
			var sadad_olp = $('#sadad_olp').val();
			console.log('olpId-------->',sadad_olp);
			var data = {
					sadad_olp:sadad_olp,
				    pid:pid,
			}
			$.post('/payment/fortSadad/generateFortSadadDetails',data, function(sadadResposne) {						                
               
                $('._fort-sadad').find('#signature').val(sadadResposne.shaSign);
                $('._fort-sadad').find('#command').val(sadadResposne.command);
                $('._fort-sadad').find('#merchant_identifier').val(sadadResposne.merchant_identifier);
                $('._fort-sadad').find('#access_code').val(sadadResposne.access_code);
                $('._fort-sadad').find('#merchant_reference').val(sadadResposne.merchant_reference);
                $('._fort-sadad').find('#amount').val(sadadResposne.amount);
                $('._fort-sadad').find('#currency').val(sadadResposne.currency);
                $('._fort-sadad').find('#language').val(sadadResposne.language);
                $('._fort-sadad').find('#customer_email').val(sadadResposne.customer_email);
                $('._fort-sadad').find('#payment_option').val(sadadResposne.payment_option);
                $('._fort-sadad').find('#order_description').val(sadadResposne.order_description);
                $('._fort-sadad').find('#customer_ip').val(sadadResposne.customer_ip);
                $('._fort-sadad').find('#eci').val(sadadResposne.eci);
                $('._fort-sadad').find('#customer_name').val(sadadResposne.customer_name);             
				$('._fort-sadad').find('#merchant_extra').val(sadadResposne.merchant_extra);
                $('._fort-sadad').find('#return_url').val(sadadResposne.return_url);
                $('._fort-sadad').find('#fortSadadForm').attr('action', sadadResposne.action_url);

				$('#fortSadadForm').submit();
            });
	  }
	 if(args === 'INSTALLMENTS'){
		 btnLoadingAnimation($('#paymeBtn'));
		 dontRefreshPopup();		 
		 var data= {pid:pid	}
		 $.post('/payment/installments',data,function(res){
			 if(res.status==='SUCCESS')
			 {
				 location.href=res.redirectURL;
			 }
			 else{
				 location.href = '/common/error';
			 }			 
		 });
	 }
	 
	 if(args === 'PAYATSTORE'){
		 btnLoadingAnimation($('#paymeBtn'));
		 var data ={pid:pid}
		 if(bkngFired === ''){
			 bookingStatusChange({pid:pid});
		 }
		 $.post('/payment/payAtStore',data,function(res){
			 if(res.status=='ERROR'){
				 location.href='/payment/retry?pid='+pid;
			 }else{
				 var lang = 'en'; 
					//Set Params to the service
					payAtStoreService.pid = data.pid;
					payAtStoreService.lang = lang;
					payAtStoreService.voucher_number =res.voucherNumber;
					payAtStoreService.request_id = res.requestID;
					payAtStoreService.orderID=res.orderID;
					payAtStoreService.url=res.URL;
					//Initialized the PayAtStore Server
					payAtStoreService.loadFrame();
			 }
		 });
	 }
	 
 }
 
 /**
 *When we click on book now in other available rooms popup
 *Fire booking info, check the lfc, if inside make the payment
 * outside fire book request first then make the payment
 */
 function completePayment(productId,echoToken,uid,roomId,arNo,args,elm){
   $('.alert_custom').hide();
   var target = $('.row.roomType').find('.rvSecCol');
	btnLoadingAnimation($(elm));
	setTimeout(function(){
		$(elm).attr("disabled", "disabled");
		target.each(function(){
			$(this).find('.processingHotelMainBtn').attr("disabled", "disabled"); 
		});
	},200);
	 $(elm).val(i18n.t('processingText'));
	 
	 var selectedHotel={
				  pid:productId,
				  rId:roomId,
				  arNo:arNo,
				  echoToken:echoToken,
				  uid:uid
	 }
	  $.post('/hotel/bookingInfo', {pid:productId,selectedHotel:selectedHotel,caFlag:true}, function(res) {
		  if(res.status && res.status==='ERROR'){
			  notie.alert(3, i18n.t("selectedroomntavailtxt") , 3);
		  }
		  else{
			//Price change check
		   if(res.data.caPriceChanged){
			
					 var data={
						 oldprice:res.data.caOldPrice,
						 newPrice:res.data.CABIRS.BookingInfoRS.hotel.rc.up.p,
						 cur:res.data.CABIRS.BookingInfoRS.hotel.rc.up.uc,
						 hname:res.data.hotelInfo.basicInfo.name,
						 args:args,
						 reviewPageUrl:res.data.reviewPageUrl,
						 paymentUrl:'/hotel/hotelGuestDetails?pid='+productId+'&hid='+uid+'&retryP=false'
					 }
					  $.get('/common/themes/v2/tmpl/hotel/otherAvailableRooms.ejs?v=nd-v2812d',{},function(availableRoomsTemplate){
								  hotelTemplateVar.dynamicTemplate = availableRoomsTemplate;
									hotelTemplateVar.loadTemplate('price-change-pop',{responseData:data}, $('#priceChangeAlert'),function(){
										$('#priceChangeHighAlert').show();
										$('#priceChangeAlert').modal({
										 show: true,
										 keyboard: false,
										 backdrop:'static'
									  });
									});
								
						});
					
					 
			}
			else{

				if(res.data.lfc){
					 location.href = '/hotel/hotelGuestDetails?pid='+productId+'&hid='+uid+'&retryP=false';
				}
				else{

					 $.post('/hotel/reprebook', {pid:productId,caFlag:true}, function(res) {
						  location.href = '/hotel/hotelGuestDetails?pid='+productId+'&hid='+uid+'&retryP=false';
					 });
				}
			 //Having free cancellation date
			  /* if(res.data.calfc && res.data.calfc == true){
				   $.post('/hotel/completeBooking',{pid:productId},function(res){
					   if(res !== null && res.status=='SUCCESS'){
						   if(undefined!=res.data.PBR.BookingRS.st && res.data.PBR.BookingRS.st==='SUCCESS' ){
						        paymentService(args);
						   }
						   else{
							   location.href="/hotel/error";
						   }
					   }
				   });
			  }
			  else{
			     paymentService(args);
			  } */
			 
			}
		  }
	  });
 }
 

 
 var payAtStoreService = {
			status:false,
			count:0,
			loadFrame:function(){
				//console.log(payAtStoreService.url);
				if(this.status===false){
					ifrm = document.createElement("IFRAME"); 
					ifrm.setAttribute("src", payAtStoreService.url); 
					ifrm.setAttribute("name", 'voucher_frame'); 
					ifrm.setAttribute("id", 'voucher_frame'); 
					ifrm.setAttribute("width", '860px'); 
					ifrm.setAttribute("height", '758px'); 
					ifrm.setAttribute("frameborder", '0'); 
					ifrm.setAttribute("marginwidth", '0'); 
					ifrm.setAttribute("marginheight", '0'); 
					ifrm.setAttribute("vspace", '0'); 
					ifrm.setAttribute("hspace", '0'); 
					ifrm.setAttribute("allowtransparency", 'true');
					ifrm.setAttribute("scrolling", 'no');
					//var scripts = document.getElementsByTagName("script");
					var scriptRef = document.getElementById('ad54');
					//console.log(ifrm);
					//console.log(scriptRef);
					scriptRef.parentNode.insertBefore(ifrm, scriptRef.nextSibling);	
					this.init();
					$('.pContainer,.redeemPoints,.cp-btn,.review-terms').hide();  
				}
			},
			init:function(){ 
				var that = this;
				 $('#voucher_frame').on('load', function(){
					 	that.count++;
					 	if(that.count==2){
					 		checkHotelOrderStatus(payAtStoreService);
					 	}
				    });
				this.status = true;
			}
		};
 
 function checkHotelOrderStatus(args){
	 var bnpl = false;
	 var payAtStore = true;
	 var data ={orderID:args.orderID}
	 $.post('/payment/payAtStore/checkOrderStatus',data,function(res){
		    if(res !== null && res.orderStatus=='Pending')
			{
				$.post('/hotel/completeBooking',{pid:args.pid,bnpl:bnpl,payAtStore:payAtStore},function(response){
				    if(response !== null && response.status=='SUCCESS')
					{
						//;
					}else{
						    if(response !== null && response.status=='ERROR' && typeof response.message !=='undefined' && response.message==='Session Expired'){
							    location.href="/hotel"; return;
						     }
							else{
							    location.href="/hotel/error"; return;
							}
				    }
				});
			}
			else{
			    location.href="/hotel/error"; return;
			}
		}); 
 } 
 
/**
 * Redirect to confirmation page after payment success
 */
function loadHotelConfirmationPage(pid){
	var bnpl = false;
	$.post('/hotel/completeBooking',{pid:pid,bnpl:bnpl},function(res){
		$("script[src='/common/themes/v2/js/jlibs/pageRefresh.js']").remove();
		if(res !== null && res.status=='SUCCESS'){

		  location.href = '/hotel/confirmation?pid='+pid;
		}
		else{

			if(res !== null && res.status=='ERROR' && typeof res.message !=='undefined' && res.message==='Session Expired'){
				location.href="/hotels"; return;
			}
			else{
				if(res.response.paymentObj && res.response.paymentObj.paymentStatus && res.response.paymentObj.paymentStatus === "Success"){
					location.href = '/hotel/confirmation?pid='+pid;
				}
			    else if(res.response && res.response.BookingRS && res.response.BookingRS.err){
				   console.log(res.response.BookingRS.err.cod);
					location.href="/hotel/error"+"?code="+res.response.BookingRS.err.cod; 
				}else if(res.response && res.response.statusCode){
						location.href="/hotel/error"+"?code="+res.response.statusCode; 
				}else{
				//error page
				   location.href="/hotel/error"; return;
				}
			}
		}
	});
}

/**
 * Show cancellation policy on mouse over in review page
 */
$('body').on('mouseover','._canPolicy',function(){
	var tooltip = $(this).find('.tooltipCustomCont');
	var nonRefundable = $(this).find('.nonRefundableCont');
	var payLaterTooltip=  $(this).find('.tooltipCustomCont');
	var condition = $(this).attr('data-fired') || 'false';
	var roomId=$(this).attr('data-rid');
	var pid=$(this).attr('data-pid');
	var uid=$(this).attr('data-uid');
	var echoToken=$(this).attr('data-uuid');
	var index=$(this).attr('data-index');
	var totalPrice=$(this).attr('data-totalPrice');
	var cur=$(this).attr('data-cur');
	var nights=$(this).attr('data-nights');
	
	var data={
		roomId:roomId,
		pid:pid,
		uid:uid,
		echoToken:echoToken,
		index:index
	}
	var $t = $(this);
	if(condition==="false"){
		var html = '';
		var nonRefundtext= '';
		$.post('/hotel/cancellationPolicy',{data:data},function(res){
			if(res !==null && res.status==="SUCCESS"){				
				console.log(res.data);
				var lfc=res.data.lfc;
				if(typeof lfc !== "undefined" && lfc.d !==null){
					var lfcDate=lfc.d; 
					var lfct=lfc.hou+":"+lfc.min;
					if(lang=="en"){
						html+=i18n.t("freeCancelPolicyCondition") +' <strong>'+''+moment(lfcDate,'YYYY-MM-DDTHH:mm:ss').format('DD/MM/YYYY')+'</strong>'+ ' <strong>'+lfct+'. '+'</strong>';
					}
					else{
						html+=i18n.t("freeCancelPolicyCondition")+'  <strong>'+''+moment(lfcDate,'YYYY-MM-DD').format('YYYY/MM/DD') +'</strong>'+' '+'<strong>'+lfct+'. '+'</strong>';
					}
					
					
					
				}
				
				if(typeof res.data.nrf !=="undefined" && res.data.nrf !== null){
					html+= i18n.t("thisNonrefundable");
					nonRefundtext+= i18n.t("nonRefundable");
				}
				else{
					var cp = res.data.cp;

					for(var i in cp){
						var startDate = cp[i].ps.d;
						var startTime=cp[i].ps.hou+':'+cp[i].ps.min;
				
						var endDate = cp[i].pe.d;
						var endTime=cp[i].pe.hou+':'+cp[i].pe.min;
						if(cp[i].crg.ty==="Percentage"){
						
						 
						html+='<span class="clearAfter"></span><span class="htltoolprc"><elm>'+i18n.t(cur)+'</elm> <em class="_priceTag">'+parseFloat(totalPrice*cp[i].crg.val/100).toFixed(2)+'</em>  </span>';
						}
						else{
							var perNightPirce=totalPrice/nights;
							var nightsValue=i18n.t(cur)+' '+cp[i].crg.val*perNightPirce;
							if(cp[i].crg.val > 1){
								html+=nightsValue+' ';
							}
							else{
								html+=nightsValue+' ';
							}
							
						}
						if(lang=="en"){
						html+= ' ' + i18n.t("cancellationFrom") +' <strong>'+moment(startDate,'YYYY-MM-DDTHH:mm:ss').format('DD/MM/YYYY')+' '+moment(startTime,'HH:mm').format('HH:mm')+'</strong>  '+i18n.t("cancellationTo") +' <strong>'+ moment(endDate,'YYYY-MM-DDTHH:mm:ss').format('DD/MM/YYYY')+' '+moment(endTime,'HH:mm').format('HH:mm')+'. '+'</strong>' ;
						}
						else{

							html+= ' ' + i18n.t("cancellationFrom") +' <strong>'+moment(startDate,'YYYY-MM-DDTHH:mm:ss').format('YYYY/MM/DD')+' '+moment(startTime,'HH:mm').format('HH:mm')+'</strong>  '+i18n.t("cancellationTo") +' <strong>'+moment(endDate,'YYYY-MM-DDTHH:mm:ss').format('YYYY/MM/DD')+' '+ moment(endTime,'HH:mm').format('HH:mm') +'. '+'</strong>' ;
						}
					}
				}
				tooltip.empty().append(html);
				nonRefundable.empty().append(nonRefundtext);
				$t.attr('data-fired','true');
			}
			else{
				html+=i18n.t("cancelPolicyError");
				//nonRefundtext+=i18n.t("nonRefundable");
				tooltip.empty().append(html);
				//nonRefundable.empty().append(nonRefundtext);
				$t.attr('data-fired','false');
			}

		});
	}	
	
});

  
//@p
/*
 * Hotel Traveller Details Page Validations
 */
function hTravelDetValidations(h){
	var condition = true;
	$('._validateHotel').each(function(e){
		if($(this).is(':visible')){
			var $this = $(this);
			if($this.hasClass('_txtTitle') && condition==true){
				var len = $this.val().length;
				var message = $this.attr('data-err');
				if($this.val() == ""){
					return condition = cmnTrvlrVal($this , message);
				}
				else
					$this.removeClass('error');
			}
			if(($this.hasClass('_firstName') || $this.hasClass('_fnameEdit')) && condition==true){
				var message = $this.attr('data-err');
				if($this.val()==""){
					return condition = cmnTrvlrVal($this,message);
					//$.loadingPageAnimation();
				}else if(_Aval($this.val())){								
					return condition = cmnTrvlrVal($this,i18n.t("namesinenglish"));
				}else if((!_fnval($this.val()))||($this.val().length<=2)){								
					return condition = cmnTrvlrVal($this,i18n.t("validfirstname"));
				}else{
					var firstNam = $this.val();
					var splChar = "-";
					var firstName = firstNam.replace(/ +/g, "");
					if(firstName.length <= 0){
						return condition = cmnTrvlrVal($this,i18n.t("validfirstname"));
						
					}
					for(var i=0;i<firstName.length;i++){
						if((firstName[0] == "-" || firstName[firstName.length-1] == "-") || (typeof firstName[i] !== "undefined") && (typeof firstName[i+1] !== "undefined") && ((splChar == firstName[i]) && (splChar == firstName[i+1]))){
							return condition = cmnTrvlrVal($this,i18n.t("validfirstname"));
						}
					}
				}
			}/* first name ended */
			/*if($this.hasClass('_middleName') && condition==true){
				var message = $this.attr('data-err');
				if(($this.val()!="")&&($this.length>0)){
					if(_Aval($this.val())){								
						notie.alert(3, message, 3);
						l.stop();
						$this.addClass('error');
						$this.focus();
						condition = false;
						return false;
					}
					else if(!_mnval($this.val())){
						notie.alert(3, message, 3);
						l.stop();
						$this.focus();
						$this.addClass('error');
						condition = false;
						return false;
					}
					var splChar = "-";
					var middleName = $this.val().replace(/ +/g, "");
					for(var i=0;i<middleName.length;i++){
						if((middleName[0] == "-" || middleName[middleName.length-1] == "-") || (typeof middleName[i] !== "undefined") && (typeof middleName[i+1] !== "undefined") && ((splChar == middleName[i]) && (splChar == middleName[i+1])) ){
							notie.alert(3, message, 3);
							l.stop();
							$this.addClass('error');
							$this.focus();
							condition = false;
							return false;
						}
				    }
				}
			} mname ended*/
			if(($this.hasClass('_lastName') || $this.hasClass('_lnameEdit')) && condition==true){
				var message = $this.attr('data-err');
				if($this.val()==""){
					return condition = cmnTrvlrVal($this , message);
				}else if(_Aval($this.val())){								
					return condition = cmnTrvlrVal($this , i18n.t("namesinenglish"));
				}else if((!_lnval($this.val()))||($this.val().length<=1)){
					return condition = cmnTrvlrVal($this , i18n.t("validlastname"));
				}else{
					var lastNam = $this.val();
					var splChar = "-";
					var lastName = lastNam.replace(/ +/g, "");
					if(lastName.length <= 0){
						return condition = cmnTrvlrVal($this , i18n.t("validlastname"));						
					}
					for(var i=0;i<lastName.length;i++){
						if((lastName[0] == "-" || lastName[lastName.length-1] == "-") || (typeof lastName[i] !== "undefined") && (typeof lastName[i+1] !== "undefined") && ((splChar == lastName[i]) && (splChar == lastName[i+1]))){
							return condition = cmnTrvlrVal($this , i18n.t("validlastname"));
						}
					}
				}
			}/* lname ended*/
			if($this.hasClass('_phoneNumber') && condition==true){
				var len = $this.val().length;
				var message = $this.attr('data-err');
				if($this.val()==""){
					return condition = cmnTrvlrVal($this , message);
				}else if(($this.val()!="" && len<=7)||(!_Nonly($this.val()))){
					return condition = cmnTrvlrVal($this , i18n.t("validmobile"));
				}
			}/* pno ended */
			if($this.hasClass('_emailAddress') && condition==true){
				var message = $this.attr('data-err');
				if($this.val()==''){
					return condition = cmnTrvlrVal($this , message);
				}else if(!_evl($this.val())){
					return condition = cmnTrvlrVal($this , i18n.t("pleaseentervalidemail"));
				}
			} /* email ended*/
			
			/*if($this.find("select").hasClass('_nationality') && condition==true){
				if($this.find("select").val()==""){
					return condition = cmnTrvlrVal($this.find("select") , i18n.t("errNationality"));
				}
				else{
					$this.find('.cSel').removeClass('error');
				}
			}  
			if($this.find("select").hasClass('_issuingCountry') && condition==true ){
				if($this.find("select").val()==""){
					return condition = cmnTrvlrVal($this.find("select") , i18n.t("resCountryErr"));
				}
				else{
					$this.find('.cSel').removeClass('error');
				}
			} */
			
			
		}
		
	});
	if(hvalidateDuplicateNames()===false){
		condition = false;
		return false;
	}
	return condition;
}

$('body').on('blur','._firstName, ._lastName',function() {
	var $hInpTar = $(this);
	validateFirstNameLastName($hInpTar);
	
});

function validateFirstNameLastName(hInputTarget){
	var fnameArr = [],lnameArr = [],nameArr = [], condition = true;
	if(hInputTarget.hasClass("_firstName") || hInputTarget.hasClass("_lastName")){
		var fname  = $('.brdRound.travllerDetails').find('input._firstName');	
		var lname  = $('.brdRound.travllerDetails').find('input._lastName');
	}
	else if(hInputTarget.hasClass("_fnameEdit") || hInputTarget.hasClass("_lnameEdit")){
		var fname  = $('.hTravllrDtl').find('input._fnameEdit');	
		var lname  = $('.hTravllrDtl').find('input._lnameEdit');
	}
    if(typeof fname != "undefined" && fname.length>0){
	        for(var i=0; i<fname.length; i++){
	        	fnameArr.push(fname[i]);
	        	lnameArr.push(lname[i]);
	        }
	}    
	if(typeof fnameArr != "undefined" && fnameArr.length>0){
	        for(var i=0; i<fnameArr.length; i++){
	        	if($(fnameArr[i]).val()!='' && $(lnameArr[i]).val()!='' && $(fnameArr[i]).val()==$(lnameArr[i]).val()){
	        		//$(fnameArr[i]).val('');
	        		//$(lnameArr[i]).val('');
	        		$(fnameArr[i]).addClass('error');
	        		$(lnameArr[i]).addClass('error');
	        		growl_alert(i18n.t("firstNameNotSame"));
	        		condition = false;
	        	}
	        	var txt1 = $(fnameArr[i]).val(), txt2 = $(lnameArr[i]).val();
	            var fullName = $.trim(txt1+txt2).replace(/ /g,'').toLowerCase() || '';    
	            var fullNameArr = [$(fnameArr[i]),$(lnameArr[i])];	
	            nameArr.push([fullName,fullNameArr]);
	        }
	 }
	return condition;
}

/**
 * Method to validate duplicate combined names for each traveller/guest Details Page
 * @returns {Boolean}
 */
function hvalidateDuplicateNames(){
		var fnameArr = [],lnameArr = [],nameArr = [];
		var fname  = $('.travllerDetails').find('input._firstName');
		var lname  =  $('.travllerDetails').find('input._lastName');
		 if(typeof fname != "undefined" && fname.length>0){
		        for(var i=0; i<fname.length; i++){
		        	fnameArr.push(fname[i]);
		        	lnameArr.push(lname[i]);
		        }
		    }    
		if(typeof fnameArr != "undefined" && fnameArr.length>0){
		        for(var i=0; i<fnameArr.length; i++){
		        	if($(fnameArr[i]).val()!='' && $(lnameArr[i]).val()!=''){
		        		if($(fnameArr[i]).val()==$(lnameArr[i]).val()){
		        			//$(fnameArr[i]).val('');
			        		$(lnameArr[i]).val('');
			        		$(fnameArr[i]).addClass('error');
			        		$(lnameArr[i]).addClass('error');
			        		growl_alert(i18n.t("firstNameNotSame"));
			        		return false;
		        		}
		        		else{
		        			$(fnameArr[i]).removeClass('error');
			        		$(lnameArr[i]).removeClass('error');
		        		}
		        	}
		        	var txt1 = $(fnameArr[i]).val(), txt2 = $(lnameArr[i]).val();
		            var fullName = $.trim(txt1+txt2).replace(/ /g,'').toLowerCase() || '';    
		            var fullNameArr = [$(fnameArr[i]),$(lnameArr[i])];	
		            nameArr.push([fullName,fullNameArr]);
		        }
		 }
		 var dupNames = hfind_duplicates(nameArr);  
		 if(dupNames.length==0){
				for(var j=0; j<nameArr.length; j++){
					if((nameArr[j][1][0].val()!= 'undefined' && nameArr[j][1][0].val()!='' && nameArr[j][1][0].val().length>2) && (nameArr[j][1][1].val()!= 'undefined' && nameArr[j][1][1].val()!='' && nameArr[j][1][1].val().length>2)){
						nameArr[j][1][0].removeClass('error');
						nameArr[j][1][1].removeClass('error');
					}
				}
				return true;
		 }
		 else{
			 for(var i=0; i<dupNames.length; i++){
					for(var j=0; j<nameArr.length; j++){
						if(nameArr[j][0]==dupNames[i] && nameArr[j][0]!="" && dupNames[i]!=""){
							nameArr[j][1][0].addClass('error');
							nameArr[j][1][1].addClass('error');
						}
					}
			 }
			 growl_alert(i18n.t("errduplicatenames"));
			 return false;
		 }
}

$('body').on('click','._checkAvailability',function(){
	var checkin = $("#hcaFHidden1").val();
	var checkout=$("#hcaTHidden1").val();
	var date1 = new Date($("#hcaFHidden1").val());
	var date2 = new Date($("#hcaTHidden1").val());
	var timeDiff = Math.abs(date2.getTime() - date1.getTime());
	var checkInDate=moment(date1).format('YYYY-MM-DD');
	var checkOutDate=moment(date2).format('YYYY-MM-DD');
	var hotelRooms=$('#hotelRooms').attr('data-val');
	var hiddena=$('#hiddena').attr('data-val');
	var hiddenc=$('#hiddenc').attr('data-val');
	var hiddenca=$('#hiddenca').attr('data-val');
	 //doesnt allow guests more than 9		
	var acnt=0;var ccnt=0;
	for(var i=0;i<$('#hiddena').attr('data-val').split(',').length;i++){
		acnt=acnt+parseInt($('#hiddena').attr('data-val').split(',')[i])
		}
	for(var i=0;i<$('#hiddenc').attr('data-val').split(',').length;i++){
		ccnt=ccnt+parseInt($('#hiddenc').attr('data-val').split(',')[i])
	}
	var tcnt=acnt+ccnt;
	if(tcnt>9){
	  growl_alert(i18n.t('errMorePax'));
	  condition = false;
	  l.stop();
	  return false;
	}//end
	var nights = Math.ceil(timeDiff / (1000 * 3600 * 24)); 
	if(nights>30){
		growl_alert(i18n.t('errbkngperiod'));
		condition = false;
		return false;
	}
	var searchType='Hotel'
	/*if(hotelsearchKey==""){
		//notie.alert(3, i18n.t("errDestination"), 3);
		alert('Please select destination');
		condition = false;
		//l.stop();
		return false;
	}*/
	if(checkin==""){
		growl_alert(i18n.t('errCheckIn'));
		condition = false;
		return false;
	}
	if(checkout==""){
		growl_alert(i18n.t('errCheckOut'));
		condition = false;
		return false;
	}
	if(checkin===checkout) {
	$("._datepicker.cafdphoF").addClass("error");
	$("._datepicker.cafdphoT").addClass("error");
		growl_alert(i18n.t('errSameDates'));	
		condition = false;
		return false;
	}
	var me = "1";
	var buttonType=$(this).attr('data-buttonType');
	if(buttonType != "undefined" && buttonType != "nearByHotel"){
	var me = getDataFromUrl('me');  
    }
	var opt={
			hotelSearchType:searchType,
			checkInDate:checkInDate,
			checkOutDate:checkOutDate,
			nights:nights,
			noOfRooms:hotelRooms,
			noOfAdults:hiddena,
			noOfChildren:hiddenc,
			childrenAges:hiddenca,
			provinceName:"",
			criteria:null,
			predictiveId:"",
			starType:"",
			checkBreakfastSelected:false,
			resultsViewType:"List",
			language:'en_GB',
			hotelClass:null,
			me:me,
			loadingImage:'ReviewPage',
			searchFrom:'ReviewPage'
	};
	if("Hotel"===searchType){
		opt.hotelId=$(this).attr('data-uid');
		opt.uniqueId=opt.hotelId
		
	}
	var pId=$(this).attr('data-pId');
	
	if(pId != "undefined"){
		opt.pId=pId;  
    }
	var uuid=$(this).attr('data-uuid');
	
	if(uuid != "undefined"){
		opt.uuid=uuid;  
    }
	
	var adtcnt = 0;
	var spltAdtCnt = hiddena.split(",");
	for(i=0; i < spltAdtCnt.length ;i++){
		adtcnt +=parseInt(spltAdtCnt[i]);
	}
	var chldcnt = 0;
	var spltChldCnt = hiddenc.split(",");
	for(i=0; i < spltChldCnt.length ;i++){
		chldcnt +=parseInt(spltChldCnt[i]);
	}
	var chldAge="";
	var spltChldAge = hiddenca.split("|");
	for(i=0; i < spltChldAge.length ;i++){
		var ages = spltChldAge[i].split(",");
		for(j=0; j < ages.length; j++){
			if(ages[j] != "0"){
				chldAge += ages[j]+",";
			}
		}
	}
	
	updateSearch({
		"hotel_name":$("#hiddenHotelName").val(),
		"checkIn_date":($("#hcaFHidden1").val()!="")?new Date($("#hcaFHidden1").val()).toString():"",
		"checkOut_date":($("#hcaTHidden1").val()!="")?new Date($("#hcaTHidden1").val()).toString():"",
		"no_of_rooms":hotelRooms,
		"language":lang,
		"no_of_adults":adtcnt.toString(),
		"no_of_children":chldcnt.toString(),
		"children_ages":chldAge
	});
	
	btnLoadingAnimation($(this));
	$(this).attr("disabled", "disabled");
	$(this).text(i18n.t("processingText"));
	generateHotelURL(opt);
});
 
function hfind_duplicates(arr) {
	var len=arr.length,
	out=[],
	counts={};
	for (var i=0;i<len;i++) {
		var item = arr[i][0];
		counts[item] = counts[item] >= 1 ? counts[item] + 1 : 1;
	}
	for (var item in counts) {
		if(item!="" && counts[item] > 1)
		out.push(item);
	}
	return out;
}
//Review page map view generation	
var markers = [], marker = [];
function reviewpagemapView(){
	var hname= $('#mapInfo').val();
	var hgeo= JSON.parse($('#mapInfo').attr('data-hgeo'));
	var cname= $('#mapInfo').attr('data-cname');
	var attractions= JSON.parse($('#mapInfo').attr('data-attraction'));
	var nearByHotels= JSON.parse($('#mapInfo').attr('data-nearByHotels'));
	

	var hotelName = hname+ ','+ cname;
 	marker.push(hotelName);
 	marker.push(hgeo.latitude);
 	marker.push(hgeo.longitude);
 	marker.push(true);
 	markers.push(marker);
 	
 	for(i=0;i<attractions.length&&i<5;i++) {
		marker = [];
		marker.push(unicodeConverter(attractions[i].landmarkName));
		marker.push(attractions[i].lat);
		marker.push(attractions[i].lng);
		markers.push(marker);
	}
 	
 	if(typeof nearByHotels.hotel != 'undefined' && nearByHotels.hotel.length > 0){
 		for(i=0;i<nearByHotels.hotel.length&&i<6;i++) {
			marker = [];
			marker.push(unicodeConverter(nearByHotels.hotel[i].staticData.hotelName));
			marker.push(nearByHotels.hotel[i].staticData.latitude);
			marker.push(nearByHotels.hotel[i].staticData.longitude);
			marker.push(false);
			markers.push(marker);
		}
	}else if(typeof nearByHotels.staticHotel != 'undefined' && nearByHotels.staticHotel.length > 0){
		for(i=0;i<nearByHotels.staticHotel.length&&i<6;i++) {
			marker = [];
			marker.push(unicodeConverter(nearByHotels.staticHotel[i].staticData.hotelName));
			marker.push(nearByHotels.staticHotel[i].staticData.latitude);
			marker.push(nearByHotels.staticHotel[i].staticData.longitude);
			marker.push(false);
			markers.push(marker);
		}
	}
 	var id = document.getElementById("review_map");
	google.maps.event.addDomListener(window,'load', initialize(id));
	
}

function bnplSection(){
	  var lfc= $('#bnplLfc').val();
	  console.log('lfc===============',lfc);
	  var bnplButton= $('#bnplButton').val();
	  var hCrossSell= $('#hCrossSell').val();
	  var bankTransferDomain =  $('#bankTransferDomain').val();
	  if(bnplButton=='false')
	  {
		 return;
	  } 
	  else
	  {
 

	     /* if(lfc=='true'){
			$('.completeBooking').hide();
			$('.bnplBtn ').show();
			$('.sarOnly ').hide();
			$('.bnplSection').show();
			$('._bankTransferSection').show();
			$('._payAtStore').show();
			$('._quickPayCont .panel-heading').removeClass('active');
			$('._quickPayCont .panel-heading').next().addClass('collapse');
			
		  } else {
			$('.completeBooking').show();
			$('.bnplBtn ').hide();
			$('.sarOnly ').show();
			$('.bnplSection').hide();
			$('._bankTransferSection').hide();
			$('._payAtStore').hide();
			$('.pContainer > .panel:first-child .panel-heading').addClass('active');
			$('.panel-heading._payment').next().removeClass('collapse');
			if($('._quickPayCont').is(':visible'))
			{
				$('#paymeBtn').attr("onclick","payMeHotel('QUICKPAY',this)");
			}
		  } */ 
		 /*  if(hCrossSell=='true'){
			$('._bankTransferSection').hide();
		  } */
	  }
	  
	  var coupondetails = $('#coupondetails').val();  
	var qitafObj = $('#qitafObj').val();
	var loyaltydetails = $('#loyaltydetails').val();
	var ccdDetails= $('#ccdDetails').val();
	console.log('ffffffffffffffff',ccdDetails);
	
	if(qitafObj === undefined && coupondetails === undefined && loyaltydetails === undefined && ccdDetails == undefined && lfc=='true'){
		$('.bnplSection').show();
	}else{
		$('.completeBooking').show();
		$('.sarOnly ').show();
		$('.bnplBtn ').hide();
	}
	
	if(qitafObj !== undefined || coupondetails !== undefined || loyaltydetails !== undefined || ccdDetails !== undefined){
		$('.bnplSection').hide();
		$('.resTabPanel.paymentSection > li:first-child').addClass('active'); 
		$('#redeem-points').show(); 
	} 

	
}
//Review page map view generation	
function initialize(id) {
	var map;
	var bounds = new google.maps.LatLngBounds();
	var mapOptions = {
		mapTypeId : google.maps.MapTypeId.ROADMAP
	};
	// Display a map on the page
	map = new google.maps.Map(id, mapOptions);
	var info = [];
	for (y in markers) {
		info.push(markers[y][0]);
	}
	//Path
	var imgPath = "/common/themes/v2/";
	//Hotel Marker image	
	var landmark_icon_png = imgPath+'img/markers/landmark-icon.png';
	var hotel_marker_img = imgPath+'img/markers/hotel-marker.png';
	var nearbyhotel_marker_img = imgPath+'/img/markers/nearby-icon.png';
	// Display multiple markers on a map
	var infoWindow = new google.maps.InfoWindow(), marker, i;
	for (i in markers) {
		var position = new google.maps.LatLng(
				markers[i][1], markers[i][2]);
		bounds.extend(position);
		if(typeof markers[i][3]!=='undefined'){
			if(markers[i][3]){
				marker = new google.maps.Marker({
					position : position,
					map : map,
					title : markers[i][0],
					icon : hotel_marker_img
				});
			}else{
				marker = new google.maps.Marker({
					position : position,
					map : map,
					title : markers[i][0],
					icon : nearbyhotel_marker_img
				});
			}
			
		}else{
			marker = new google.maps.Marker({
				position : position,
				map : map,
				title : markers[i][0],
				icon : landmark_icon_png
			});
		}
		
		// Allow each marker to have an info window    
		google.maps.event.addListener(marker,'click',(function(marker, i) {
			return function() {
				infoWindow.setContent(info[i]);
				infoWindow.open(map,marker);
			}
		})(marker, i));
		
		map.fitBounds(bounds);
	}
}

/**
 *@info Traveller details same as lead click action
 *@page /hotel/hotelGuestDetails?pid=
 */
$('body').on('click','#sameLeadPax',function(){
	toggleLeadPaxInfo();
	$('#sameLeadPax').addClass('active');
});
function toggleLeadPaxInfo(){
	var leadPaxCB = $('#sameLeadPax').is(':checked');
	var leadPaxElm = $('._extraGuest');	
	if(leadPaxCB===true){
		leadPaxElm.hide();
		$('.hideS').show();
	}else{
		leadPaxElm.show();
		$('.hideS').hide();
	}
}

/**
 * @description Send voucher on click
 */
$('body').on('click','._sendvoucher',function(){
	var email=$('._guestEmail').val();
	var bkngRef=$(this).attr('data-bookingRef');
	if(email===''){
		growl_alert(i18n.t("errEmail"));
		$('._guestEmail').addClass('error');
		return false;
	}
	else{
		if(email!==''){
			if(!_evl(email)){
				growl_alert(i18n.t("errEmaiAdd"));
				$('._guestEmail').addClass('error');
				return false;
			}
		}
		$('._guestEmail').removeClass('error');
		if(email !=='' && bkngRef !==null){
			var data={
					email:email,
					bkngRef:bkngRef,
					prdType:'Hotel',
					srvcType:'email_voucher'
			}
			$.post('/hotel/sendVoucher',{data:data},function(res){
				if(res!==null && res.status==="SUCCESS"){
					growl_alert(i18n.t("bookingInfoSendtoEmailSuccesfully"));
					$('.alert_custom').addClass('alert-success');
					//notie.alert(1,'Voucher sent successfully',1);
				} 
				else{
					growl_alert(i18n.t('emailsendingfailed'));
				}
				
				setTimeout(function(){		
						//$('.hideS').hide();
						$('#eMailtoGuest').modal('hide');
						
					},2500);
			});
		}
		
	}
});

function getDataFromUrl(key){
	   var vars = [], hash;
	   var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
	   for(var i = 0; i < hashes.length; i++){
	    hash = hashes[i].split('=');
	    vars.push(hash[0]);
	    vars[hash[0]] = hash[1];
	   }
	   return vars[key];
	}



function viewHotelMap() {
	$('body').on('click','.results-show-map', function(event) {
		console.log('Start');
		google.maps.visualRefresh = false;
		event.preventDefault();
		event.stopPropagation();
		var target = $(this).attr('id');
		var Lat = $(this).attr('data-lat');
		var Lng = $(this).attr('data-lng');
		var Hname = $(this).attr('data-hname');
		var Hadd = $(this).attr('data-hadd');
		var Hstar = $(this).attr('data-hstar');
		var myLatlng = new google.maps.LatLng(Lat, Lng);
		var mapOptions = {
			center: myLatlng,
			zoom: 15,
			disableDefaultUI: false,
			zoomControl: true,
			scaleControl: true,
			scrollwheel: true,
			mapTypeControl: true,
			mapTypeControlOptions: {
		    	style: google.maps.MapTypeControlStyle.DROPDOWN_MENU
		  	},
		  	scaleControl: true,
		  	scaleControlOptions: {
		        position: google.maps.ControlPosition.BOTTOM_LEFT
		    }
	
		};
		$('#'+target).parents('._hotelInfo').find('div.hotelMap').show();
		$('#'+target).parents('._hotelInfo').find('a.custom-map-close').show();
		var mapTarget = $('#'+target).parents('._hotelInfo').find('div.hotelMap').attr('id');
		var map = new google.maps.Map(document.getElementById(mapTarget),
			mapOptions);
		var marker = new google.maps.Marker({
			position: myLatlng,
			map: map,
			icon: '/common/themes/v2/img/markers/hotel-marker.png'
		});
		var contentString ='<div class="googleMapInfoWindow">'+
				    	    '<h2 class="gmHeading">'+Hname+'</h2>'+
				    	    '<div class="gmContent">'+
				    	    '<p>'+Hadd+'</p>'+
							'<div class="stars star'+Hstar+'"></div>'+
				    	    '</div>'+
				    	    '</div>';

		var infowindow = new google.maps.InfoWindow({
			content: contentString
		});
        google.maps.event.addListener(marker, 'click'
        		, function() {
		  infowindow.open(map,marker);
		});
		console.log('End');
	});
	

	$('body').on('click', '.custom-map-close', function(event) {
		event.preventDefault();
		$(this).parents('._hotelInfo').find('div.hotelMap').hide();
		$(this).parents('._hotelInfo').find('a.custom-map-close').hide();
	});
		
};
//Hotel modify search.@p start
$('body').on('click','.selectRoomsOptions.hotelRoom',function(event){ 
	event.preventDefault();
	$(this).toggleClass('active');
	$('#changesearch-options').slideToggle("fast");
});
/**
 * Modify search loading
 */
$('body').on('click','.modifyHotelSearch',function(){
	if(typeof getDataFromUrl('lat')!=='undefined'){
		var hotelLat=getDataFromUrl('lat');
	}else if(hotelTemplateVar.cityLat!==''){
		var hotelLat=hotelTemplateVar.cityLat;
	}
	if(typeof getDataFromUrl('long')!=='undefined'){
		var hotelLong=getDataFromUrl('long');
	}else if(hotelTemplateVar.cityLng!==''){
		var hotelLong=hotelTemplateVar.cityLng;
	}
	var hotelCityId=getDataFromUrl('cityId');
	var checkInDate=getDataFromUrl('checkInDate');
	var checkOutDate=getDataFromUrl('checkOutDate');
	var hiddenStirngSplit=$('#countrycityhotel').attr('data-val').split(',');
	var hiddenString="City>>"+hotelCityId+'>>'+$.trim(hiddenStirngSplit[0])+'>>' +$.trim(hiddenStirngSplit[1])+ '>>'+$.trim(hiddenStirngSplit[2])+'>>'+hotelLat+'>>'+hotelLong ;
	var displayString=$('#countrycityhotel').attr('data-val');
	$('#countrycityhotel').val(displayString);
	$('#countrycityhotel').attr("title",displayString);
	$('#hotelsearchKey').val(hiddenString);
	var noOfnites=getDataFromUrl('nights');
	$('.nights-count').val(noOfnites);
	autoPopulateNewRoomWidget();
	$('.optWidget').hide();
	$('.mfdphoF').val(moment(checkInDate).format('DD/MM/YYYY'));
	$('#hmdphoF').val(moment(checkInDate).format('YYYY/MM/DD'));
	$('.mfdphoT').val(moment(checkOutDate).format('DD/MM/YYYY'));
	$('#hmdphoT').val(moment(checkOutDate).format('YYYY/MM/DD'));
	if($(this).hasClass('active')){
		if(hModifyDP){
			initDatePickerComponentaa();
		}
		hModifyDP = false;
	}
});	


//Hotel modify search.@p end
function validateHotelModifySearch(){
	$('.youHaveFiltered').hide();
	var countrycityhotel = $('#countrycityhotel');
	var hotelsearchKey = $('#hotelsearchKey');
	var hkeyHiddenAlter = $('#hkeyHiddenAlter');
	var hkeyTotalGHiddenAlter = $('#hkeyTotalGHiddenAlter');
	var checkin = $("._datepicker.mfdphoF");
	var checkout=$("._datepicker.mfdphoT");
	var date1 = $('#hmdphoF');
	var date2 = $('#hmdphoT');
	
	if(countrycityhotel.val()==""){
		scrollTopValidation();
		countrycityhotel.addClass('error');
		growl_alert(i18n.t("errDestination"));	
		countrycityhotel.focus();
		return false;
	}else{
		countrycityhotel.removeClass('error');
	}
	if(hotelsearchKey.val()==""){
		scrollTopValidation();
		growl_alert(i18n.t("errDestination"));	
		return false;		
	}
	if(hkeyTotalGHiddenAlter.val()>9){
		scrollTopValidation();
		growl_alert(i18n.t("errMorePax"));	
		return false;
	}
	if(date1.val()===date2.val()){
		checkin.addClass('error');
		checkout.addClass('error');
		scrollTopValidation();
		growl_alert(i18n.t('errSameDates'));
		checkout.focus();
		return false;
	}
	var searchType=$('#hotelsearchKey').val().split('>>')[0];
	var date1D = new Date($("#hmdphoF").val());
	var date2D = new Date($("#hmdphoT").val());
	var timeDiff = Math.abs(date2D.getTime() - date1D.getTime());
	var nights = Math.ceil(timeDiff / (1000 * 3600 * 24)); 
	if(nights>30){
		growl_alert(i18n.t('errbkngperiod'));
		condition = false;
		return false;
	}
	var hotelRooms = $('#hotelRooms').attr('data-val');
	var adults = $("#hiddena").attr('data-val');
	var children = $("#hiddenc").attr('data-val');
	var age = $( "#hiddenca").attr('data-val');
	btnLoadingAnimation($('.modiHotelS'));
	setTimeout(function(){
			$(".modiHotelS").attr("disabled", "disabled");
	},200);
	
	 var opt={
			hotelSearchType:searchType,
			checkInDate:date1.val().replace(/\//g,'-'),
			checkOutDate:date2.val().replace(/\//g,'-'),
			nights:nights,
			noOfRooms:hotelRooms||1,
			noOfAdults:adults || 1,
			noOfChildren:children|| 0,
			childrenAges:age, 
			provinceName:"",
			criteria:null,
			predictiveId:"",
			starType:"",
			checkBreakfastSelected:false,
			resultsViewType:"List",
			language:'en_GB',
			hotelClass:null,
			searchFrom:"Predictive"
	};
	
	if("City"===searchType){
		opt.cityId=$('#hotelsearchKey').val().split('>>')[1]
		//opt.cityName=$('#hotelsearchKey').val().split('>>')[2]
		//opt.provinceName = $('#hotelsearchKey').val().split('>>')[3]
		//opt.countryName=$('#hotelsearchKey').val().split('>>')[4]
		opt.predictiveId=$('#hotelsearchKey').val().split('>>')[1]
		opt.lat=$('#hotelsearchKey').val().split('>>')[5]
		opt.long=$('#hotelsearchKey').val().split('>>')[6]
	}
	else if("Hotel"===searchType){
		opt.hotelId=$('#hotelsearchKey').val().split('>>')[1]
		opt.hotelName=$('#hotelsearchKey').val().split('>>')[4]
		opt.cityId=$('#hotelsearchKey').val().split('>>')[5]
		//opt.cityName=$('#hotelsearchKey').val().split('>>')[6]
		//opt.provinceName = $('#hotelsearchKey').val().split('>>')[7]
		//opt.countryName=$('#hotelsearchKey').val().split('>>')[8]
		opt.predictiveId=$('#hotelsearchKey').val().split('>>')[1]
		opt.uniqueId=opt.hotelId
	}else if("Airport"===searchType){
		opt.cityId=$('#hotelsearchKey').val().split('>>')[2]
		//opt.cityName=$('#hotelsearchKey').val().split('>>')[3]
		//opt.countryName=$('#hotelsearchKey').val().split('>>')[4]
		opt.hotelSearchType='City'
	}
	var provinceName = "";
	if("City"===searchType){
		provinceName = $("#countrycityhotel").val();
	}
	var adtcnt = 0;
	var spltAdtCnt = (adults).split(",");
	for(i=0; i < spltAdtCnt.length ;i++){
		adtcnt +=parseInt(spltAdtCnt[i]);
	}
	var chldcnt = 0;
	var spltChldCnt = (children).split(",");
	for(i=0; i < spltChldCnt.length ;i++){
		chldcnt +=parseInt(spltChldCnt[i]);
	}
	var chldAge="";
	var spltChldAge = (age).split("|");
	for(i=0; i < spltChldAge.length ;i++){
		var ages = spltChldAge[i].split(",");
		for(j=0; j < ages.length; j++){
			if(ages[j] != "0"){
				chldAge += ages[j]+",";
			}
		}
	}
	hotelSearch({
		"destination_name":provinceName,
		"hotel_name":opt.hotelName || "",
		"checkin_date":new Date(date1.val()).toString(),
		"checkout_date":new Date(date2.val()).toString(),
		"no_of_nights":nights,
		"no_of_rooms":hotelRooms||1,
		"traveller_adult":adtcnt || "",
		"traveller_child":chldcnt || "",
		"traveller_child_age":chldAge || ""
	});
	/**
	*Urls always should be in english
	*/
	$.post('/locationDataById',{cityId:opt.cityId},function(res){
		var data=JSON.parse(res.response[0]);
		opt.cityName=data.cityName.en
		opt.provinceName = data.provinceData.en
		opt.countryName=data.countryData.en
		opt.countryId=data.countryData.countryId
	    generateHotelURL(opt); 
		
	});
	
}
$('body').on('change','.mfdphoF,.mfdphoT',function(){
	if($('.mfdphoF').val()!="" && $('.mfdphoT').val()!=""){
		var dateFirst = $('.mfdphoF').val().split('/');
		var dateSecond = $('.mfdphoT').val().split('/');
		var month1 = dateFirst[1]-1;
		var month2 = dateSecond[1]-1;
		var firstDate = new Date(dateFirst[2], month1, dateFirst[0]);
		var secondDate = new Date(dateSecond[2], month2, dateSecond[0]);
		var timeDiff = Math.abs(secondDate.getTime() - firstDate.getTime());
		var daysDiff = Math.ceil(timeDiff / (1000 * 3600 * 24));
		$('.nights-count').val(daysDiff);
	}
});

//Add new traveller button in guest details page
$('.add-traveller-btn-pop').click(function(){
	var fname_source =$(this).parents('.guestDetails').find('._firstName');
	var lname_source = $(this).parents('.guestDetails').find('._lastName');
	var email_source = $(this).parents('.guestDetails').find('._email');
	var phone_source = $(this).parents('.guestDetails').find('._phone-number');
	
	fname_source.val('');
	lname_source.val('');
	email_source.val('');
	phone_source.val('');
	fname_source.focus();		
	return false;
});

/**
 * Redirect to bnpl payment pending confirmation page after book request success
 */
function loadBnplConfirmationPage(pid){
	noRefreshAction();	
	var bnpl = true;
	//$.loadingPageAnimation('show');
	dontRefreshPopupForBnpl();
	btnLoadingAnimation($('.bnplBtn'));
	$.post('/hotel/completeBooking',{pid:pid,bnpl:bnpl},function(res){
		$("script[src='/common/themes/v2/js/jlibs/pageRefresh.js']").remove();
		if(res !== null && res.status=='SUCCESS'){
		  location.href = '/hotel/confirmation?pid='+pid;
		}
		else{
			location.href="/hotel/error"; return;
		}
		$.loadingPageAnimation();
	});
}




/**
*Don't refresh popup for payment
*/





/*$('body').on('change','._supUpdate',function(){
	  var $t = $(this);
	  var priceToAdd = parseFloat($(this).attr('data-price'));
	  var priceToUpdate = $(this).attr('data-roomid');
	  var trgt = $('label.'+priceToUpdate);
	  var actualSelectedRoomPrice = parseFloat(trgt.attr('data-price'));
	  var currentSelectedRoomPrice = parseFloat(trgt.text());
      console.log(currentSelectedRoomPrice);
	  var updatedPrice = "";
	  var checkBox = $('#sameLeadPax').is(':checked');
	  console.log(checkBox);
	  if(checkBox){
		  $('.roomFare li label').each(function(){
			  var selectedRoomPrice = parseFloat($(this).text());
              console.log(selectedRoomPrice);
			  var updatedRoomPrice ="";
			  if($t.is(':checked')===true){
			 updatedRoomPrice = (selectedRoomPrice + priceToAdd);
			  }else{
			   updatedRoomPrice = (selectedRoomPrice - priceToAdd);  
			  }
			  $(this).text(updatedRoomPrice.toFixed(2));
			  updateTotalPrice();
			});
	  }
	  else{
	  if($t.is(':checked')===true){
	    updatedPrice = (currentSelectedRoomPrice + priceToAdd);
	  }else{
	    updatedPrice = (currentSelectedRoomPrice - priceToAdd);
	  }
	  trgt.text(updatedPrice.toFixed(2));
	  updateTotalPrice();
    }
	 
	});

	function updateTotalPrice(){
	  var priceToUpdate = $('#totlaPrice');    
	  var actualPrice = parseFloat(priceToUpdate.attr('data-price'));
	  console.log(actualPrice);
	  $('._supUpdate').each(function(){
	    var priceToAdd = parseFloat($(this).attr('data-price'));
	     if($(this).is(':checked')===true){
	       actualPrice += priceToAdd;
	     }
	  });
	  priceToUpdate.text(actualPrice.toFixed(2));  
	}*/

$('body').on('change','._supUpdate',function(){
	  suplimentPriceUpdate.updateSuplimentItems();
	});

$('body').on('change','._sameAsLead, #sameLeadPax',function(){
	  suplimentPriceUpdate.updateSuplimentItems();
	});


var suplimentPriceUpdate = {
		 isLeadPax:function(){
			    var leadPaxElm =  $('#sameLeadPax'),
			        isLeadPax = false;
			    if(leadPaxElm.is(':checked')){ isLeadPax = true;console.log("IS Lead Pax"+isLeadPax); return isLeadPax;  };
			  },
			  getRoomCount:function(){
			  return $('._suplimentRoomLevel').length;
		 },
		 updateSuplimentItems: function(){
			 var $t = this,
		        isLeadPax = $t.isLeadPax(),
		        _suplimentElm  =  $('.suppliments');
		    if(isLeadPax){
		      _suplimentElm = $(_suplimentElm[0]);
		    }
		    _suplimentElm.map(function(_, el1) {
				 var  ITU = []; //Item to update
			      var  roomElm = null; //Item to update
			      $(el1).find('._supUpdate').map(function(k, el) {
			    	  var that = $(el),
			            SRID = that.attr('data-roomid'), //Selected room id
			            RM= $('[data-rid="'+SRID+'"').find('._suplimentRoomLevel'), //room DOM to update
			            isChacked=false; //boolean for validated checkbox checked  
			    	  
			    	  //check if checkbox is checked
			          if(that.is(':checked')){ isChacked = true; };
			          if(isLeadPax){
			              RM = $('._suplimentRoomLevel');
			            }
			          if(isChacked){
			            ITU.push([el,RM]);
			          }
			          roomElm = RM;
			      });
			      
			      roomElm.empty();
			      if(ITU.length>0){
			        $t.updatePriceElm(ITU);
			      }
  		 });
			  $t.getTotalDiff();
		 },
		 updatePriceElm:function(elm){
			    elm.map(function(obj,key){
			      var that = $(obj[0]),
			          RE = $(obj[1]), //room container DOM element
			          SIN = that.attr('data-name'), //selected item name
			          SIP = that.attr('data-price'); //selected item price
			          UCUR = that.attr('data-ucur');
			    $html = '<li>'+'<ul class="adOn">'+'<li>'+SIN+'</li>'+'</ul>'+'<span class="pull-right"><label>'+UCUR+ '</label> <elm class="_priceTag">'+SIP+'</elm></span> </li>';
			  
			 //         $html = '<li><span>'+SIN+'</span>  <span>'+SIP+'</span> </li>';
			          RE.append($html);
			    });
				
				pricetagConvert.init();
			  },
			  getTotalDiff:function(){
				    var price = 0,
				        totalPriceElm = $('._totalPrice'), //total price DOM element
				        TP = parseFloat(totalPriceElm.attr('data-price')); //total price
					
				    if(this.isLeadPax()){
						if($('._supUpdate').first().is(':checked')){
						    price+=parseFloat($('._supUpdate').first().attr('data-price'));
						}
				        price = price*this.getRoomCount();
				    }
					else{
						var d = $('._supUpdate').map(function(_,el){
						  if($(el).is(':checked')){
							price+= parseFloat($(el).attr('data-price'));
							return el;
						  }
						});
					}
					totalP=(TP+price).toFixed(2);
				    totalPriceElm.text(totalP);
				  }
		
}

function selectMatchRadio(el){
	$('._matchdropdwn').each(function(){
		$(this).val('');
	});
	$('.htleco').hide();
	$('.htlEco').hide();
	var priceToUpdate=$('#totlaPrice');
	var actualPrice = parseFloat(priceToUpdate.attr('data-price'));
	priceToUpdate.text(actualPrice.toFixed(2));  
	var tktupdate=$('._alhilalTktPrice');
	tktupdate.empty();
}
function selectMatch(el){
	var $t = $(el);
	if($t.attr('data-tktType')){
		var tkt=$t.attr('data-tktType');
		var match=$t.attr('data-match');
		var selectedTkt=JSON.parse(tkt);
		$('._matchdropdwn').each(function(){
			if($(this).val()!=''){
				noOftkts=$(this).val();
				var priceToUpdate=$('#totlaPrice');
				var actualPrice = parseFloat(priceToUpdate.attr('data-price'));
				var priceToAdd = parseFloat(selectedTkt.userPrice)*noOftkts;
				actualPrice += priceToAdd;
				priceToUpdate.text(actualPrice.toFixed(2));
				var tktupdate=$('._tktInfo');
				tktupdate.empty();
				var html = '<div class="htleco clearfix _alhilalTktPrice"><span class="pull-left" style="display : block">'+ selectedTkt.tktType +'('+noOftkts+')</span>'+
				 '<span class="pull-right price"><label>'+selectedTkt.userCurrency +'</label>'+
				 '<label class="_priceTag">'+
				 '<elm>'+priceToAdd +'</elm>'+
				 '</label></span></div>';
				$html1='<span>'+ selectedTkt.tktType +'-'+noOftkts+'</span>';
				var tktSection=$('._logoFootBall');
				tktSection.empty();
				tktSection.append('<div class="htlEco" style="display : block">'+$html1+'</div>');
				tktupdate.append(html);
			}else{
				$(this).val('');
			}
		});
	}
	else{
		var priceToUpdate=$('#totlaPrice');
		var actualPrice = parseFloat(priceToUpdate.attr('data-price'));
		priceToUpdate.text(actualPrice.toFixed(2));  
		var tktupdate=$('._alhilalTktPrice');
		tktupdate.empty();
	}
}


/**
* Print Confirmation popup
*/
function printConfirmationPopup(url) {
	$.post('/hotel/printConfirmation',{url:url},function(res){
		console.log(res);
		if(res !== null && res.status=='SUCCESS'){
			newwindow=window.open(url,'name','height=570,width=800,scrollbars=1');
			if (window.focus) {newwindow.focus()}
				return false;
		}
		else{
			location.href="/hotels";
		}
	});
	
	

}



/**
*Price had changed popup reivew to travel
*/
function priceChangedPopupForReviewBtn(){
	console.log("pc:");
	 $('#priceChangedId').modal({
	 show: true,
	 keyboard: false,
	 backdrop:'static'
	 });
	}

$('body').on('click','.editUserHotel', function(){	
	
	$('._fnameEdit').val($(this).attr('data-fname'));
	$('._lnameEdit').val($(this).attr('data-lname'));
	$('._idEdit').val($(this).attr('data-id'));
});

$('body').on('click', '._trAdReview', function() {	
	var uid = $(this).attr('data-uid'),
	 cin = $(this).attr('data-cin'),
	 cout = $(this).attr('data-cout'),
	 nights = $(this).attr('data-nights'),
	 nrms = $(this).attr('data-nRms'),
	 price = $(this).attr('data-price'),
	 cur = $(this).attr('data-cur'),
	 cnt=$(this).attr('data-cnt'),
	 lang=$(this).attr('data-language'),
	 hname=$(this).attr('data-hname'),
	 uuid=$(this).attr('data-uuid'),
     reviews=$(this).attr('data-reviews'),
	 $this=$(this);	 
	
	console.log(lang);
	
	var trgt = $('#tripAdvsrPop'),taBreakdown = trgt.find('.taBreakdown'),scrlr=trgt.find('.scrlr'),chin=trgt.find('.itinerarySummary .inline li .cin '),
	chout=trgt.find('.itinerarySummary .inline li .cout '),
	dur=trgt.find('.itinerarySummary .inline li .nights '),
    pass =trgt.find('.itinerarySummary .inline li .pass '),
	gLabel =trgt.find('.itinerarySummary .inline li ._gLabel'),
	pr=trgt.find('.itinerarySummary .inline li .INR '),
	modalHeader=trgt.find('.modalHeader  h2');
	   chin.empty();
       chin.append(cin);
	   chout.empty();
       chout.append(cout);
	   dur.empty();
	   var roomCnt = (Number(nrms) > 1) ? i18n.t("rooms") : i18n.t("room");
	   var nghtCnt = (Number(nights) > 1 ) ? i18n.t("night_plural") : i18n.t("night");
	   var gstCnt = (Number(cnt) > 1) ? i18n.t("adult_plural") : i18n.t("adult");
	   var guestCnt =	(Number(cnt)==1 || Number(cnt)>=11) ? i18n.t("guest"): i18n.t("guest_plural");
	   gLabel.empty();
	   gLabel.append(guestCnt);
       dur.append(nrms+" "+ roomCnt +" , "+ nights+" "+nghtCnt);
	   pass.empty();
	   pass.append(cnt+" "+gstCnt);
	   pr.empty();
	   if(cur !== '' && price!== ''){
	   		if(lang =='en'){
	      		pr.append(i18n.t(cur)+' '+price);
	      	}
	       else{
	      		pr.append(price+' '+i18n.t(cur));
	   	   	}
	   	 }
	   modalHeader.empty();
       modalHeader.append(hname);
	$.post('/hotel/tripAdRating', {uid:uid,lang:lang}, function(res) {
	  var html = [];
	  res.response.data.staticInfo.subratings.map(function(v){
		if(html.length===0){
		  html.push('<li> <span class="taRating t'+res.response.data.staticInfo.rating.replace('.','')+'" title=""></span> <span><strong>'+i18n.t("overallRating")+'</strong> <small> ('+i18n.t("basedOn11")+' '+reviews+' '+i18n.t("review11")+') </small> </span> </li>');
		}
		html.push('<li> <span class="taRating t'+v.value.replace('.','')+'" title=""></span> <span>'+v.localized_name+'</span> </li>');             
	  });
	  taBreakdown.empty().append(html.join(''));
	  
	  var revHtml=[];
	  res.response.data.review.map(function(r){
	     revHtml.push('<div class="hReview tripMed"><div class="fRight"><span class="" title=""><img src="'+r.rating_image_url+'"/></span> </div><h5>'+r.title+'</h5><p> <small>by <strong>'+r.user+'</strong> on '+r.published_date+'</small> </p><p class="truncateReviewText"> '+r.review+' </p></div>');
	  });
	   scrlr.empty().append(revHtml.join(''));
	   if ( $('#tripAdvsrPop').is(":visible") == true) { 
	      $('#bookNowBtn').attr('data-uid',uid);
	      $('#bookNowBtn').attr('data-uuid',uuid);
		  $('#bookNowBtn').attr('data-hname',hname);
	   }
	   
	   if(uuid == undefined){
		  
		$('#bookNowBtn').hide();
	   }
	   if($this.hasClass('_fph')){
	   		$('#bookNowBtn').removeClass('_bookNow').addClass('_apxBooknow');	   		
	   		var target = $this.parents('.fph-info').find('._apxBooknow');
	   		 $('#bookNowBtn').attr('data-echotoken',target.attr('data-echotoken'));
	   		 $('#bookNowBtn').attr('data-hotelId',target.attr('data-hotelId'));
	   		 $('#bookNowBtn').attr('data-price',target.attr('data-price'));
	   		 $('#bookNowBtn').attr('data-index',target.attr('data-index'));
	   		 $('#bookNowBtn').attr('data-outbound',target.attr('data-outbound'));
	   		 $('#bookNowBtn').attr('data-inbound',target.attr('data-inbound'));
			 $('#bookNowBtn').show();
	   }   
	  
	});	
});
$('body').on('click', '._saveChangesHotel', function() {
	var editValidate = editTravellerDet();
	
	if(editValidate == true){
		$('.alert_custom').hide();
	    var pid = $('#HTDP').attr('data-pid');
	    var fName = $('._fnameEdit');
	    var lName = $('._lnameEdit');
	    //var mName = $('._mnameEdit');
	    var id = $('._idEdit');
	    var data = {
	        fName: $.trim(((fName.val()).replace(/-/g,"")).replace(/\s\s+/g,' ')) || '',
		    lName: $.trim(((lName.val()).replace(/-/g,"")).replace(/\s\s+/g,' ')) || '',
		   // mName: $.trim(((mName.val()).replace(/-/g,"")).replace(/\s\s+/g,' ')) || '',
	        id: id.val() || '',
	        pid: pid,
	        product: 'H',
	    }
	    $.post('/save/travellerdetails', data, function(res) {
	        $('.modal').modal('hide');
	        $(".modal-backdrop").toggleClass("modal-backdrop fade out");
			$('body').css('padding',0);
	        setTimeout(function() {
	            $.get('/common/themes/v2/tmpl/hotel/hotelReviewTerms.ejs?v=nd-v0102', {}, function(reviewTearmTemplate) {
	                loadTemplate('hotel-review-terms-view', {
	                    responseData: res
	                }, $('.review-terms'), reviewTearmTemplate);
	                $('.review-terms').show();
	            });
	        }, 200);
	    });
	}
});
function editTravellerDet(){
	var condition = true;
	var $fnameEdit = $("._fnameEdit");
	var $lnameEdit = $("._lnameEdit");
	if(condition == true){
		if($fnameEdit.val()==""){
			return condition = cmnTrvlrVal($fnameEdit , i18n.t("errFirstName"));
		}else if(_Aval($fnameEdit.val())){								
			return condition = cmnTrvlrVal($fnameEdit , i18n.t("namesinenglish"));
		}else if((!_fnval($fnameEdit.val()))||($fnameEdit.val().length<=2)){								
			return condition = cmnTrvlrVal($fnameEdit , i18n.t("validfirstname"));
		}else{
			var firstNam = $fnameEdit.val();
			var splChar = "-";
			var firstName = firstNam.replace(/ +/g, "");
			if(firstName.length <= 0){
				return condition = cmnTrvlrVal($fnameEdit , i18n.t("validfirstname"));
				
			}
			for(var i=0;i<firstName.length;i++){
				if((firstName[0] == "-" || firstName[firstName.length-1] == "-") || (typeof firstName[i] !== "undefined") && (typeof firstName[i+1] !== "undefined") && ((splChar == firstName[i]) && (splChar == firstName[i+1]))){
					return condition = cmnTrvlrVal($fnameEdit , i18n.t("validfirstname"));
				}
			}
		}/* first name ended */
	
		if($lnameEdit.val()==""){
			return condition = cmnTrvlrVal($lnameEdit , i18n.t("errLastName"));
		}else if(_Aval($lnameEdit.val())){
			return condition = cmnTrvlrVal($lnameEdit , i18n.t("namesinenglish"));
		}else if((!_lnval($lnameEdit.val()))||($lnameEdit.val().length<=1)){					
			return condition = cmnTrvlrVal($lnameEdit , i18n.t("validlastname"));
		}else{
			var lastNam = $lnameEdit.val();
			var splChar = "-";
			var lastName = lastNam.replace(/ +/g, "");
			if(lastName.length <= 0){
				return condition = cmnTrvlrVal($lnameEdit , i18n.t("validlastname"));
			}
			for(var i=0;i<lastName.length;i++){
				if((lastName[0] == "-" || lastName[lastName.length-1] == "-") || (typeof lastName[i] !== "undefined") && (typeof lastName[i+1] !== "undefined") && ((splChar == lastName[i]) && (splChar == lastName[i+1]))){
					return condition = cmnTrvlrVal($lnameEdit , i18n.t("validlastname"));
				}
			}
		}/* lname ended*/
		if(validateFirstNameLastName($(".editYourDetails ._fnameEdit"))===false){
			condition = false;
			return condition;
		}
		return condition;
	}
}

function paymentConfigureHotel(sadad,payfort,checkout,installment,payAtStore,paymentObj,showpayatstore,showBT){
	
	if(paymentObj.showPayfort){
		payfort.show();
		$('._payfortBody').show();
	}else{
		payfort.hide();
		payfort.removeClass('active');
	}

	if(paymentObj.showCheckout){
		checkout.show();
		$('._checkoutBody').show();
	}else{
		checkout.hide();
		checkout.removeClass('active');
	}

	if(paymentObj.showSadad){
		sadad.show();
	}else{
		sadad.hide();
	}
	
	if(paymentObj.showInstallment){
		installment.show();
	}else{
		installment.hide();
	}
	
	if(paymentObj.showPayAtStore && showpayatstore){
		payAtStore.show();
	}else{
		payAtStore.hide();
	}

    if(paymentObj.showBankTransfer){
		if(showBT){
			$('._bankTransferSection').show();
		}else{
			$('._bankTransferSection').hide();
		}
     }else{
        $('._bankTransferSection').hide();
     }
 }

$(document).ready(function(){
	
	setTimeout(function(){
		if($('.flightTravel ._quickPayCont').is(':visible'))			
		//if($('.fph ._quickPayCont .panel-heading').hasClass('active'))
		{
				console.log('flight results pge');
			$('#paymeBtn').attr("onclick","payMeFlight('QUICKPAY',this)");
		}
	},500);
	
	$('#roundTripButton').button('reset');
	autoFill();
	$('body').on('click', '.showDetails', function (e) {
		console.log('clicked me');
		e.stopPropagation();
		clearFareDetails();
		
		$(this).parents('li.legResult').find('.fltDetails').show();
		var $t = $(this);
		
		return false;
	});
						

	$('body').on('click', '.gallary li', function () {

	$(this).parents('.amntsGrdBx').next().slideToggle('slow');
	});
	
	$('body').on('click', '._faredtlscls', function () {
	clearFareDetails();
	});
	$(document).click(function () {
        $(".flightResults .fltDetails").hide();
    });
	$('body').on('click', '.fltDetails', function(e){
        e.stopPropagation(); 
    });
	function clearFareDetails(){
		
		$(".fltDetails").hide();
		$('.expandContent').hide(10).removeClass('open');
		$('.fareRulesLink ').removeClass('active');
	}

	/*
	*Flight Results Refresh Rendering
	*/
	var PAGEID = $('input[name=_PAGE_ID]');
	if(PAGEID.val()=="FLIGHTRESULT_PAGE"){
		flightSearchOnLoad();
	}
		
	//getCountryList();
	
	initTravelerDynamo();
	
	var dCookie = Cookies.get('flightSearchCookie') || ''
	var checkHomeSearch = $('body.homePage');
	if(dCookie!="" && checkHomeSearch.length>0){
		var cookieData = JSON.parse(dCookie);
		$('#roundFrom').val(cookieData.fromInput);
		$('#roundTo').val(cookieData.toInput);
		$('#roundFrom').attr("title",cookieData.fromInput);
		$('#roundTo').attr("title",cookieData.toInput);
		
		$('#roundFromId').val(cookieData.fromIATA);
		$('#toRoundID').val(cookieData.toIATA);
		$('#roundFrom').attr('data-iata',cookieData.fromIATA);
		$('#roundTo').attr('data-iata',cookieData.toIATA);
		$('#roundTo').attr('data-cityid',cookieData.arrCityId);
		
		$('#onewayFrom').val(cookieData.fromInput);
		$('#onewayTo').val(cookieData.toInput);
		$('#onewayFrom').attr("title",cookieData.fromInput);
		$('#onewayTo').attr("title",cookieData.toInput);
		$('#fromID').val(cookieData.fromIATA);
		$('#toID').val(cookieData.toIATA);
		$('#onewayFrom').attr('data-iata',cookieData.fromIATA);
		$('#onewayTo').attr('data-iata',cookieData.toIATA);
		$('#onewayTo').attr('data-cityid',cookieData.arrCityId);
		
		$('#multicityFrom1').val(cookieData.fromInput);
		$('#multicityTo1').val(cookieData.toInput);
		$('#multicityFrom1').attr("title",cookieData.fromInput);
		$('#multicityTo1').attr("title",cookieData.toInput);
		$('#multiFromId1').val(cookieData.fromIATA);
		$('#multiToID1').val(cookieData.toIATA);
		$('#multicityFrom1').attr('data-iata',cookieData.fromIATA);
		$('#multicityTo1').attr('data-iata',cookieData.toIATA);
		if(cookieData.nonStopFlight){
			$('#nonStopRoundTripFlights, #nonStopOneWayFlights, #nonStopMultiCityFlights').prop('checked', true);
		}
		
		if(cookieData.tripType === "oneWay"){
			$('#flightsOneway').trigger('click');
		}
		if(cookieData.tripType === "roundTrip"){
			$('#flightsRoundtrip').trigger('click');
		}
		if(cookieData.tripType === "multyCity"){
			$('#flightsMulticity').trigger('click');
		}
		
		if(typeof cookieData.fromInput2 != "undefined" && cookieData.fromInput2 !=''){
			$('#multicityFrom2').val(cookieData.fromInput2);
			$('#multicityTo2').val(cookieData.toInput2);
			$('#multicityFrom2').attr("title",cookieData.fromInput2);
			$('#multicityTo2').attr("title",cookieData.toInput2);
			$('#multiFromId2').val(cookieData.fromIATA2);
			$('#multiToID2').val(cookieData.toIATA2);
			$('#multicityFrom2').attr('data-iata',cookieData.fromIATA2);
			$('#multicityTo2').attr('data-iata',cookieData.toIATA2);
		}
		if((typeof cookieData.fromInput2 != "undefined" && cookieData.fromInput2 !='')&&(typeof cookieData.fromInput3 != "undefined" && cookieData.fromInput3 !='')){
			$('#multicityFrom3').val(cookieData.fromInput3);
			$('#multicityTo3').val(cookieData.toInput3);
			$('#multicityFrom3').attr("title",cookieData.fromInput3);
			$('#multicityTo3').attr("title",cookieData.toInput3);
			$('#multiFromId3').val(cookieData.fromIATA3);
			$('#multiToID3').val(cookieData.toIATA3);
			$('#multicityFrom3').attr('data-iata',cookieData.fromIATA3);
			$('#multicityTo3').attr('data-iata',cookieData.toIATA3);
		}
		if((typeof cookieData.fromInput3 != "undefined" && cookieData.fromInput3 !='')&&(typeof cookieData.fromInput4 != "undefined" && cookieData.fromInput4 !='')){
			$('#multicityFrom4').val(cookieData.fromInput4);
			$('#multicityTo4').val(cookieData.toInput4);
			$('#multicityFrom4').attr("title",cookieData.fromInput4);
			$('#multicityTo4').attr("title",cookieData.toInput4);
			$('#multiFromId4').val(cookieData.fromIATA4);
			$('#multiToID4').val(cookieData.toIATA4);
			$('#multicityFrom4').attr('data-iata',cookieData.fromIATA4);
			$('#multicityTo4').attr('data-iata',cookieData.toIATA4);
		}
		if((typeof cookieData.fromInput4 != "undefined" && cookieData.fromInput4 !='')&&(typeof cookieData.fromInput5 != "undefined" && cookieData.fromInput5 !='')){
			$('#multicityFrom5').val(cookieData.fromInput5);
			$('#multicityTo5').val(cookieData.toInput5);
			$('#multicityFrom5').attr("title",cookieData.fromInput5);
			$('#multicityTo5').attr("title",cookieData.toInput5);
			$('#multiFromId5').val(cookieData.fromIATA5);
			$('#multiToID5').val(cookieData.toIATA5);
			$('#multicityFrom5').attr('data-iata',cookieData.fromIATA5);
			$('#multicityTo5').attr('data-iata',cookieData.toIATA5);
		}
		if((typeof cookieData.fromInput5 != "undefined" && cookieData.fromInput5 !='')&&(typeof cookieData.fromInput6 != "undefined" && cookieData.fromInput6 !='')){
			$('#multicityFrom6').val(cookieData.fromInput6);
			$('#multicityTo6').val(cookieData.toInput6);
			$('#multicityFrom6').attr("title",cookieData.fromInput6);
			$('#multicityTo6').attr("title",cookieData.toInput6);
			$('#multiFromId6').val(cookieData.fromIATA6);
			$('#multiToID6').val(cookieData.toIATA6);
			$('#multicityFrom6').attr('data-iata',cookieData.fromIATA6);
			$('#multicityTo6').attr('data-iata',cookieData.toIATA6);
		}
		
		var curDate = new Date();
		var depDate = new Date(cookieData.fromtwoway);
		if(depDate.setHours(0,0,0,0) < curDate.setHours(0,0,0,0)){
			$(".mchdateF2, .mchdateF3, .mchdateF4, .mchdateF5, .mchdateF6").val("");
			$(".mchdateF2Hidden, .mchdateF3Hidden, .mchdateF4Hidden, .mchdateF5Hidden, .mchdateF6Hidden").val("");
		}
	}
	
	$('._txtOnwardExtraBaggage').each(function(){
		$(this).find('option').eq(0).prop('selected', true);
	});
	$('._txtReturnExtraBaggage').each(function(){
		$(this).find('option').eq(0).prop('selected', true);
	});
	var gccList = $('#gccCountryList').val() || "";
	var gccArr = gccList.split('|');
	var tarN = $('._userPassportInfo .nationalidBody').find('._nationality');
	var tarI = $(' ._userPassportInfo .nationalidBody').find('._issuingCountry');
	tarN.find('option').each(function(){
		if($(this)[0].value!="" && gccArr.indexOf($(this)[0].value)==-1){
			$(this).remove();
		}
	});
	tarI.find('option').each(function(){
		if($(this)[0].value!="" && gccArr.indexOf($(this)[0].value)==-1){
			$(this).remove();
		}
	});
	$('[id=countryNames]').customselect();

	if(typeof $('.couponOfcode').text() == 'undefined' || $('.couponOfcode').text()==null || $('.couponOfcode').text() == ''){
		$('.couponOfcode').hide();
	}else{
		$('.couponOfcode').hide();
	}
	
	$('body').on('click','.qitafLinks a',function(){
		if(!$(this).hasClass("active")){
		$(this).addClass("active").siblings().removeClass("active");
		$($(this).attr("data-target")).siblings().slideUp(500);
		$($(this).attr("data-target")).slideDown(500);
			
		}
	 	
	});
		
	$('body').on('click','.flightResults .scrollup',function(){
		flightScrollUp();
	});
	
});

// Cookie traveler and class widget generate 
function travllerAndClassWidgetF(){
	var dCookie = Cookies.get('flightSearchCookie') || ''
	var checkHomeSearch = $('body.homePage');
	if(dCookie!="" && checkHomeSearch.length>0){
		var cookieData = JSON.parse(dCookie);
		//console.log(JSON.stringify(cookieData));
		cookieData.elmAdult = cookieData.elmAdult || "1";
		cookieData.elmChild = cookieData.elmChild || "";
		cookieData.elmInfant = cookieData.elmInfant || "";
		if(typeof cookieData.classType != 'undefined' && cookieData.classType != "" && cookieData.classType !== null){
  			 cookieData.classType = i18n.t((cookieData.classType).toLowerCase());
  		}else{
   			cookieData.classType = i18n.t('economy');
 		 }
		
		var trvCount = parseInt(cookieData.elmAdult)+parseInt(cookieData.elmChild)+parseInt(cookieData.elmInfant);
		
		$('.travellersDropdown.flt').each(function(){
			if(cookieData.classType != "" &&  !isNaN(trvCount)){
				$(this).find('#_totStr, #_totStr2, #_totStr3').val(trvCount+' ' + i18n.t('travellers')+' , '+cookieData.classType);
			}else{
				$(this).find('#_totStr, #_totStr2, #_totStr3').val(1+' ' + i18n.t('traveller')+' , '+cookieData.classType);
			}
			$(this).find('#classType, #classType2, #classType3').val(cookieData.classType);
			$(this).find('.elmAdult, .elmAdult2, .elmAdult3').val(cookieData.elmAdult);
			$(this).find('.elmChild, .elmChild2, .elmChild3').val(cookieData.elmChild);
			$(this).find('.elmInfant, .elmInfant2, .elmInfant3').val(cookieData.elmInfant);
		});
	}
}

//On change datepicker value change date of all trip
$('body').on('focus, blur','.fromtwoway, .fromoneway, .mchdateF1',function(e){
	$(".fromtwoway, .fromoneway, .mchdateF1").val($(this).val());
	$("#rThdateFHidden, #hdateFHidden, #mchdateF1Hidden").val($(this).siblings("input").val());
	/*if(!$(this).hasClass("fromtwoway")){
		$('._datepicker.totwoway , #rThdateTHidden').val("");
	}*/
});





/**
 *For Price Slider
 */
var $range, slider;
/**
 *For Loading String
 */
var loadCnt = {};
var timer=0;
/**
 * Flight service layer global variable
 */

/**
 * seatmap seatrequest array data
 */
var seatMapRequestInfo = [] ; 

/**
 * seatmap footerinfo array data
 */
var seatMapFooterInfo = [] ; 

var travellersSeatsData = [];
/**
 * seatmap response details
 */
var seatMapResponseInfo = {} ;

var fareRuleViewedInfo = {} ;

var selectedSeats = [];

var baggageSec = {};

var ffp  = [];
var allianceAirlinesMap = {} ;

var paginationOptInit;
//Pagination Function

var flightSerVar = (function() {
	'user strict';
	return {
		/**
		*Global Variables
		*/
		//set orginal base object [clone]
		baseObj: [],
		isActive:false,
		dynamicTemplate:'',
		uuid: '',
		baseData: [],
		cExR: [],
		nonStopFlights: 'false',
		filterData: [],
		filterUIArry:[],
		hashmap: [],
		wegoData: [],
		wegoRslts: false,
		headerInfo: '',
		setSelectedCurrency:'',
		dynamicFilterdata: {},
		fareRes: {},
		priceFilterMin: 0,
		currencyChange: false,
		topairline:'',
		changeFlight:false,
		curChaLdngRlts: false,
	  	priceFilterMax: 0,
		iataCodes: [],
		cityNames: [],
	  	resultsError: true,
	  	checkInit: false,
	  	validateMS: false,
		eventBindingFlag:false,
		changeYourFlight:false,
		NBAreset: [],
		resultsPageURL: '',
		fareComboResponse:false,
		fbfRenderFlag:false,
		fareComboData:{},
		payPrice:'',
		resetNoResults:false,
		getSelectedCurrency:function(){
			if(this.setSelectedCurrency=="SAR"){
				this.setSelectedCurrency = 'SAR';
			}else{
				this.setSelectedCurrency = this.setSelectedCurrency;				
			}
			return this.setSelectedCurrency;
		},
		renderFBF:false,
		fareComboSelected:false,
		selectedALTickets:{},
		modifiedTotalPrice:0,
		
		/**
		*@description Set the base object data across category
		*@params Array (Response Object)
		*@return null
		*/
		setData: function(res) {
			var obj = JSON.parse(JSON.stringify(res));
			this.baseData = obj;
			this.filterData = obj.searchRes;
			this.cExR = obj.cExeR;
			this.hashmap = obj.maps;
			this.headerInfo = obj.resultsHeader;
			this.uuid = obj.uuid;
			if(this.setSelectedCurrency!=='' && this.setSelectedCurrency!==obj.ISOCurrency){
				this.setSelectedCurrency = this.setSelectedCurrency;
			}else{
				this.setSelectedCurrency = obj.ISOCurrency;
			}
			this.baseObj = obj.searchRes;
			this.isActive = true;
			ffp = obj.alliances;
			fareRuleViewedInfo = {},
			baggageSec = {}
		},
		resetSorts:function(elm){//Reset Sort dropdown
			var elmID = '';
			if(typeof elm!="undefined"){
				elmID = elm.attr('id');
			}
			try {
				var elmArr = [
				$(this.filterSelector.sortPrice),
				$(this.filterSelector.sortDuration),
				$(this.filterSelector.sortArrivalTime),
				$(this.filterSelector.sortDepartureTime)];
				for(i in elmArr){
					if(elmArr[i].attr('id')!=elmID){
						elmArr[i][0].selectedIndex = 0;
					}
				}
			}catch(err) {
			}
		},
		/**
		* Variables for filter and sorting
		*/
		filterSelector:{
			airline: "#airlineName-filter-list li input[type=checkbox]",
			stops: "#stops-filter-list ul li input[type=checkbox]",
			stopOverAirports: "#_stopOverAirport-filter-list li input[type=checkbox]",
			returnStopOverAirports: "#_returnStopOverAirport-filter-list li input[type=checkbox]",
			nearByAirport: "#_nearByAirport-filter-list li input[type=checkbox]",
			eventDeparture: "#_depature_time_filter li input[type=checkbox]",
			eventArrival: "#_arrival_time_filter li input[type=checkbox]",
			returnTripEventDeparture: "#_returnTrip_depature_time_filter li input[type=checkbox]",
			returnTripEventArrival: "#_returnTrip_arrival_time_filter li input[type=checkbox]",
			sortPrice: "#_sortPrice",
			sortDuration: "#_sortDuration",
			sortTime: "#_sortTime",
			priceFilter: "#_price_fliter",
			priceFilterSection: "#_flight-price-filter-section",
			clearFilter: "#_clearFilter",
			radioSelct: '.selectRadio input[type=radio]',
			showLegInfo: '._showLegInfo',
			airlineGrid: '#flightAirlineGrid .item a',
			sortDepartureTime: "#_sortDepartureTime",
			sortArrivalTime: "#_sortArrivalTime",
			allianceImg: '#ffp-tab  img',
			ffpAlliance: '#ffp-tab li'
		},
		init:function(){
			var $t = this;
			$t.checkInit = true;
			/**
			*Sort by Price
			*/
			$('body').on('change',$t.filterSelector.sortPrice,function(){
				$('.dynamic_results_loader').show();
				$t.resetSorts($(this));
				$t.render();
			});
			/**
			*Sort by Duration
			*/
			$('body').on('change',$t.filterSelector.sortDuration,function(){
				$('.dynamic_results_loader').show();
				$t.resetSorts($(this));
				$t.render();
			});
			/**
			 *Sort by Departure time
			 */		
			$('body').on('change',this.filterSelector.sortArrivalTime,function(){
				$('.dynamic_results_loader').show();
				$t.resetSorts($(this));
				$t.render();
			});
			
			/**
			 *Sort by Arrival time
			 */			
			$('body').on('change',this.filterSelector.sortDepartureTime,function(){
				$('.dynamic_results_loader').show();
				$t.resetSorts($(this));
				$t.render();
			});
			/**
			 *Filter by Airline name
			 */			
			$('body').on('change',this.filterSelector.airline,function(){
				$('.dynamic_results_loader').show();
				$t.resetPriceSliderOnLoad();
				setTimeout(function(){
					$t.render(true);				
				},80);
				$t.findFLKey($(this));
			});
			
			//Alliance 
			$('body').on('click',this.filterSelector.ffpAlliance,function(){
				$('.dynamic_results_loader').show();
			if($(this).hasClass('active')){
			 $(this).removeClass('active');
			}
			else {
			$(this).addClass('active');

			}
				$t.resetPriceSliderOnLoad();
				setTimeout(function(){
					$t.render(true);
				},80);
				//$t.findFLKey($('#ffp-tab'));
			});
			
			/**
			 *Filter by Stops
			 */			
			$('body').on('change',this.filterSelector.stops,function(){
				$('.dynamic_results_loader').show();
				$t.resetPriceSliderOnLoad();
				setTimeout(function(){
					$t.render(true);
				},80);
				$t.findFLKey($(this));
			});
			/**
			 *Filter by Airport Stopover
			 */			
			$('body').on('change',this.filterSelector.stopOverAirports+','+this.filterSelector.returnStopOverAirports,function(){
				$('.dynamic_results_loader').show();
				$t.resetPriceSliderOnLoad();
				setTimeout(function(){
					$t.render(true);
				},80);
				$t.findFLKey($(this));
			});
			/**
			 *Filter Near by Airport
			 */			
			$('body').on('change',this.filterSelector.nearByAirport,function(){
				$('.dynamic_results_loader').show();
				$t.resetPriceSliderOnLoad();
				async.series([
				function(callback){
					$t.render(true);
					return callback();
				},function(callback){
					$t.loadFilter();
					return callback();
				}]
				,function(err){	
					reloadFilters($t.dynamicFilterdata);
				});
			});		
			/**
			 *Filter by Departure Time
			 */			
			$('body').on('change',this.filterSelector.eventDeparture+','+this.filterSelector.returnTripEventDeparture,function(){
				$('.dynamic_results_loader').show();
				$t.resetPriceSliderOnLoad();
				setTimeout(function(){
					$t.render(true);
				},80);
				$t.findFLKey($(this));
			});
			
			/**
			 *Filter by Arrival Time
			 */			
			$('body').on('change',this.filterSelector.eventArrival+','+this.filterSelector.returnTripEventArrival,function(){
				$('.dynamic_results_loader').show();
				$t.resetPriceSliderOnLoad();
				setTimeout(function(){
					$t.render(true);
				},80);
				$t.findFLKey($(this));
			});
			/**
			 *Filter by Price
			 */					
			$('body').on('change',this.filterSelector.priceFilter,function(){
				var $this = $(this);
				window.clearTimeout(timer);
				timer = window.setTimeout(function(){
				var priceStr;
					async.parallel([
						function(callback){
							priceStr = $t.getFilteredPrice();
							return callback();
						},
						function(callback){
							$t.setPriceMinMax(priceStr);
							return callback();
						}
					],
					function(err){
						$t.render();
						$t.findFLKey($this);
						flightPriceChange({"left_range":$t.priceFilterMin,"right_range":$t.priceFilterMax});
					});
				},700);				
			});
			/**
			 *Change trip radio selection
			 */
			$('body').on('click',this.filterSelector.radioSelct,function(){
				var $this = $(this);
				$t.dyanamicRadioSelection($this);				
			});
			
			/**
			 *Reset Filter Action
			 */
			$('body').on('click touchstart','.yhfReset',function(){
				var offsetPopTop = $('#_bodyContainer').offset().top;
		        $('html, body').animate({scrollTop:offsetPopTop}, 500);
				$('.dynamic_results_loader').show();
				$('.youHaveFiltered').hide();
				async.series([
					function(callback){
						//reset price slider
						$t.resetPriceSliderOnLoad();						
						return callback();						
					},
					function(callback){						
						//Reset Stops Filter
						$($t.filterSelector.stops).each(function(){
							$(this).attr('checked', false); 
						});
						//Reset airline filter
						$($t.filterSelector.airline).each(function(){
							$(this).attr('checked', false); 
						});		
						//Reset Stop Over Airport filter
						$($t.filterSelector.stopOverAirports).each(function(){
							$(this).attr('checked', false); 
						});	
						//Reset Return Stop Over Airport filter
						$($t.filterSelector.returnStopOverAirports).each(function(){
							$(this).attr('checked', false); 
						});	
						//Reset Near by airport filter
						$($t.filterSelector.nearByAirport).each(function(){
							if($(this).is(':checked')){
								$t.NBAreset.push($(this).val());
							}
							$(this).attr('checked', false); 
						});	
						//Reset Event Departure filter
						$($t.filterSelector.eventDeparture).each(function(){
							$(this).attr('checked', false); 
						});
						//Reset Event Return Departure filter
						$($t.filterSelector.returnTripEventDeparture).each(function(){
							$(this).attr('checked', false); 
						});
						//Reset Event Return Arrival filter
						$($t.filterSelector.returnTripEventArrival).each(function(){
							$(this).attr('checked', false); 
						});
						//Reset Event Arrival filter
						$($t.filterSelector.eventArrival).each(function(){
							$(this).attr('checked', false); 
						});	
						//Reset ffp alliance
                        $($t.filterSelector.ffpAlliance	).each(function(){	
						    $(this).removeClass('active'); 
						});
						return callback();
						
					},
					function(callback){		
						//Trigger the UI Filter Module
						$t.UIFilterSelected();										
						//Reset sort dropdown				
						$t.resetSorts();			
						return callback();
						
					},
					function(callback){		
						//Re-render the result view
						$t.render(true);
						return callback();
					},
					function(callback){		
						if($t.NBAreset.length>0){
							$t.loadFilter();
						}
						return callback();
					}
				],function(err){
					if($t.NBAreset.length>0){					
						reloadFilters($t.dynamicFilterdata);
					}
				});
				return false;
			});
			if(this.eventBindingFlag===false){
				$t.initAirlineGrid();
			}
			if(this.fbfRenderFlag===false){
				$t.FBFReq();
			}
  // executed on tab change for FlightByFlights round trip
			$('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
				$('.dynamic_results_loader').show();
			  var target = $(e.target).attr("href") ;// activated tab
		  
		   if(target=='#fbf'){
					 flightComboSerVar.isActive=true;
					 flightSerVar.isActive=false;
					 
					 // curr change happened in bestOffers
					  if(flightSerVar.renderFBFOffers==true){
						  	  flightComboSerVar.ccm(flightSerVar.setSelectedCurrency);
					  } 
					 
					 
				   $('#filterFF').show(); 
				   $('#filterBO').hide();	
                   $('#pagination').hide();
				   
				if($('.selected-pan').hasClass('colorAnimation'))
				$('.selected-pan').removeClass('colorAnimation');
				   
				  setTimeout(function(){
				   $('.filter-slider').slideUp();
				   $('.selected-pan').addClass('colorAnimation');
				  }, 1500);		
				  				   
				   if(!(flightComboSerVar && flightComboSerVar.checkInit)){				  
						flightSerVar.initialRenderFareCombo();		  
					}
				  
				  }
				  else{
					  flightSerVar.isActive=true;
					 flightComboSerVar.isActive=false;
					 
					  // curr change happened in FF
					  if(flightComboSerVar.renderBestOffers==true){
						  	  flightSerVar.ccm(flightComboSerVar.setSelectedCurrency);
					  }					  
					 
				   $('#filterBO').show();
				   $('#filterFF').hide();	
                   $('#pagination').show();
				   setTimeout(function(){
					$('.filter-slider').slideDown();
				   }, 1500);	
				   flightSerVar.updateFilghtCount();
				  }
				  
			 
			  //alert(target);
			});
			
			$('body').on('click', '._bkBtn', function(e) {
				//console.log('_bkBtn clkd');
				var elm = $(this);
				$('.alert_custom').hide();
				if(typeof $(elm).attr('disabled')==='undefined'){ 
					if(checkEmpty(elm)==true){
						
						var urlQueryData = getJsonFromUrl(window.location.href);
						var tripType = "RoundTrip";
						var dep="",arr="",depdate="",arrdate="";
						
						if(urlQueryData.tripType == "2"){
							dep = urlQueryData.dep;
							arr = urlQueryData.arr;
							depdate = new Date(urlQueryData.depdate).toString();
							arrdate = new Date(urlQueryData.arrdate).toString();
						}else if(urlQueryData.tripType == "1"){
							tripType = "OneWay";
							dep = urlQueryData.dep;
							arr = urlQueryData.arr;
							depdate = new Date(urlQueryData.depdate).toString();
						}else if(urlQueryData.tripType == "3"){
							tripType = "MultiCity";
							dep = urlQueryData.dep1;
							arr = urlQueryData.arr1;
							depdate = new Date(urlQueryData.arrdate1).toString();
							if(urlQueryData.dep2!=""){
								dep += ","+urlQueryData.dep2;
								arr += ","+urlQueryData.arr2;
								depdate += ","+new Date(urlQueryData.arrdate2).toString();
								if(urlQueryData.dep3!=""){
									dep += ","+urlQueryData.dep3;
									arr += ","+urlQueryData.arr3;
									depdate += ","+new Date(urlQueryData.arrdate3).toString();
									if(urlQueryData.dep4!=""){
										dep += ","+urlQueryData.dep4;
										arr += ","+urlQueryData.arr4;
										depdate += ","+new Date(urlQueryData.arrdate4).toString();
										if(urlQueryData.dep5!=""){
											dep += ","+urlQueryData.dep5;
											arr += ","+urlQueryData.arr5;
											depdate += ","+new Date(urlQueryData.arrdate5).toString();
											if(urlQueryData.dep6!=""){
												dep += ","+urlQueryData.dep6;
												arr += ","+urlQueryData.arr6;
												depdate += ","+new Date(urlQueryData.depdate6).toString();
											}
										}
									}
								}
							}
						}
						flightBook({
							"trip_type":tripType,
						    "leaving_from":dep,
						    "going_to":arr,
						    "departing_date":depdate,
						    "returning_date":arrdate,
						    "traveller_adult":urlQueryData.adt,
						    "traveller_child":urlQueryData.chd,
						    "traveller_infant":urlQueryData.inf,
						    "class":(urlQueryData.cbn!="") ? (urlQueryData.cbn).toUpperCase() : "",
						    "refund_status":"",
						    "stops":""
						});
						$('.flightResultContainer').find('.loadingBookNow').each(function(){
							//console.log($(this));
							$(this).attr("disabled", true);
						});
						btnLoadingAnimation($(elm));
						setTimeout(function(){
							$(elm).attr("disabled", "disabled");
						},200);
						$(elm).text(i18n.t("processingText"));
						flightSerVar.generateBooknow(elm);
						//console.log('flightObj');console.log(flightObj);
						//WEGO Book now functon
						/*if($(elm).attr('data-wego')){
							bookNow(flightObj,elm,true);
						}else{
							bookNow(flightObj,elm,false);
						}*/
					}else{
						growl_alert(i18n.t("pleaseSelectFlight"));								
						hideLoading2(elm);
						return false;
					}
				}
				//return false;
			});
			
			setTimeout(function(){
				$t.resetPriceSlider($t.filterData);
			},80);
			$t.render();
		},
		FBFReq: function(){
			// on click of FF/ BO button new design
				/**
				 *Remove Filtered UI Element list
				 */
			$('body').on('click','#_bestOffersSec,#_FFSec',function(){
				var str = flightSerVar.resultsPageURL.split('?')[1];
				var target = $(this).attr('id');
				if(target=='_FFSec'){
					flightFareComb("FF");
				if(flightComboSerVar.isActive){
					return;
				}
				if(str!='' && flightSerVar.fareComboData.fareComboResponse){
							var res = flightSerVar.fareComboData;
							flightSerVar.fareComboResultsRender(res);
					}else{
						var fbfLoadCont = $('._apxTripHeader').html();
						var headerPop= "";
						if(i18n.options.lng == "ar"){
							headerPop = "<span>"+unicodeConverter(flightSerVar.headerInfo.tripinfoHeader[1].departing[lang])+"</span> ("+flightSerVar.headerInfo.tripinfoHeader[1].departingIata[0]+")";
							headerPop += " - <span>"+unicodeConverter(flightSerVar.headerInfo.tripinfoHeader[1].arrival[lang])+"</span> ("+flightSerVar.headerInfo.tripinfoHeader[1].arrivalIata[0]+")";
						}
						else{
							headerPop = "<span>"+flightSerVar.headerInfo.tripinfoHeader[1].departing[lang]+"</span> ("+flightSerVar.headerInfo.tripinfoHeader[1].departingIata[0]+")";
							headerPop += " - <span>"+flightSerVar.headerInfo.tripinfoHeader[1].arrival[lang]+"</span> ("+flightSerVar.headerInfo.tripinfoHeader[1].arrivalIata[0]+")";
						}
						$('.fbfLoad .fromToDest').html('<elm>'+headerPop+'</elm>');
						$('.fbfLoad .fromToDest small').hide();
						$('.fbfLoad').fadeIn(); 
						var el = $(".fromToDest"); 
						el.html(el.html().replace(/\(Bombay\)/, "Bombay"));
						el.html(el.html().replace(/\(Ø¨ÙˆÙ…Ø¨Ø§ÙŠ\)/, "Ø¨ÙˆÙ…Ø¨Ø§ÙŠ"));
						$.get('/flight/fareResult?'+str+"&isoView=true",{v:Math.random()},function(res){
							//console.log('FareCombosearch res');console.log(JSON.stringify(res));
							if(res.status==="SUCCESS"){
								inputConsole('REPORTSTATUS=FareComboSearchResponse-'+res.fareComboResponse.uuid);
								flightSerVar.fareComboResultsRender(res);
								$('.fbfLoad .fInfo').fadeOut();
								$('.fbfLoad .fcFail').fadeOut();
								$('.fbfLoad .fcSuccess').fadeIn();
								setTimeout(function(){
									$('.fbfLoad').fadeOut();
								},3000) ;
							}else{
								inputConsole('REPORTSTATUS=FareComboSearchResponseError-'+res.message.SearchRQ.searchRQ.source.echoToken);
								$('#_FFSec').hide();
								flightComboSerVar.isActive=false;
								flightSerVar.isActive=true; 
								// highlight BO btn
								$('#_bestOffersSec').removeClass('btn-default');
								$('#_FFSec').addClass('btn-default');
								
								setTimeout(function(){
									$('.primary-content').removeClass('fResultSec');
									$('.flightWegoContainer').show();
								}, 2000);
								
								// curr change happened in FF
								if(flightComboSerVar.renderBestOffers==true){
									flightSerVar.ccm(flightComboSerVar.setSelectedCurrency);
								}else{
									flightSerVar.loadFilter();
									$t.resetPriceSlider($t.filterData); 
									flightSerVar.loadTemplate('flight-filter-view',flightSerVar.dynamicFilterdata,$('#filterBO'));
									flightSerVar.render(true);
									flightSerVar.dynamicFilterdata.AirlineNameWP = flightSerVar.dynamicFilterdata.AirlineNameWP.sort(function(a,b){
										return a[1][0]-b[1][0];
									});
									//airline grid
								   flightSerVar.loadTemplate('filter_airlineIcons_template',flightSerVar.dynamicFilterdata.AirlineNameWP,$('#_filter_airlineIcons_template'));
									loadAirlineGridwithOwl();
								}
								setTimeout(function(){
									$('.comboSteps').hide(500);
									ULlessMore(['airlineName-filter-list','_stopOverAirport-filter-list','_returnStopOverAirport-filter-list']);
								}, 2000);
								loadTemplate('flight-sort-fareCombo',{onwFF:true},$('#flightResultsSortingPanel'),flightComboSerVar.dynamicTemplate);
								_langGlobal.langInit();
								pricetagConvert.init(); // divide decimal point
								$('.fbfLoad .fInfo').fadeOut();
								$('.fbfLoad .fcSuccess').fadeOut();	
								$('.fbfLoad .fcFail').fadeIn();
								setTimeout(function(){
									$('.fbfLoad').fadeOut();
								},3000) ;							
							}
							
						});
					}	
				}else if(target=='_bestOffersSec'){
					flightFareComb("BestOffers");
					flightComboSerVar.isActive=false;
					flightSerVar.isActive=true;
					 
					// highlight BO btn
					$('#_bestOffersSec').removeClass('btn-default');
					$('#_FFSec').addClass('btn-default');
					
					setTimeout(function(){
						$('.primary-content').removeClass('fResultSec');
						$('.flightWegoContainer').show();
					}, 2000);
					
					 // curr change happened in FF
					if(flightComboSerVar.renderBestOffers==true){
						flightSerVar.ccm(flightComboSerVar.setSelectedCurrency);
					}else{
						flightSerVar.loadFilter();
						$t.resetPriceSlider($t.filterData); 
						flightSerVar.loadTemplate('flight-filter-view',flightSerVar.dynamicFilterdata,$('#filterBO'));
						flightSerVar.render(true);
						flightSerVar.dynamicFilterdata.AirlineNameWP = flightSerVar.dynamicFilterdata.AirlineNameWP.sort(function(a,b){
							return a[1][0]-b[1][0];
						});
						//airline grid
					   flightSerVar.loadTemplate('filter_airlineIcons_template',flightSerVar.dynamicFilterdata.AirlineNameWP,$('#_filter_airlineIcons_template'));
						loadAirlineGridwithOwl();
					}
					setTimeout(function(){
						$('.comboSteps').hide(500);
						ULlessMore(['airlineName-filter-list','_stopOverAirport-filter-list','_returnStopOverAirport-filter-list']);
					}, 2000);
					loadTemplate('flight-sort-fareCombo',{},$('#flightResultsSortingPanel'),flightComboSerVar.dynamicTemplate);
					_langGlobal.langInit();
					pricetagConvert.init(); // divide decimal point	
				}
			});
			this.fbfRenderFlag = true;
		},
		fareComboResultsRender:function(res){
			flightSerVar.fareComboData = res;
			flightComboSerVar.setData(res.fareComboResponse);
			flightSerVar.fareComboResponse = true;
			
			flightComboSerVar.isActive=true;
			flightSerVar.isActive=false;
			$('#_FFSec').removeClass('btn-default');
			$('#_bestOffersSec').addClass('btn-default');
			setTimeout(function(){
				 $('.primary-content').addClass('fResultSec');
				 $('.flightWegoContainer').hide();
			}, 2000);
			 
		// curr change happened in bestOffers
		  if(flightSerVar.renderFBFOffers==true){
			   flightComboSerVar.ccm(flightComboSerVar.setSelectedCurrency);
			   if(!flightComboSerVar.checkInit)					
				flightComboSerVar.init();
				
			   setTimeout(function(){
					$('.comboSteps').show(500);
						ULlessMore(['airlineName-filter-list_FFR','_stopOverAirport-filter-list_FFR']);
					}, 2000);
				_langGlobal.langInit();
				pricetagConvert.init(); // divide decimal point	

		  }else
		  {
			  
			  if(!flightComboSerVar.onwFlightSelected){   //maintaining state when switched b/n FF & BO tabs
					//destro countdown timer set while loading ansari results
					flyinCountDown.destroyCountDown();
				
					flightSerVar.initialRenderFareCombo();
						
					loadTemplate('flight-sort-fareCombo',{onwFF:true},$('#flightResultsSortingPanel'),flightComboSerVar.dynamicTemplate);
					
					flightComboSerVar.updateFilghtCount();
				}else{   //case where onw flt selected & then BestOffers bn clkd
					
					flightComboSerVar.loadRetFilter();
					
					loadTemplate('flight-sort-fareCombo',{retFF:true},$('#flightResultsSortingPanel'),flightComboSerVar.dynamicTemplate);
					// load return flights
					flightComboSerVar.returnRender(false,function(renderedData,returnTrips){
					var retTrips = JSON.parse(JSON.stringify(returnTrips));
					
					paginationOptInitFF = cmnPaginationConfig(flightComboSerVar.pageselectCallback);
					$("#pagination").pagination(returnTrips.length, paginationOptInitFF,retTrips );	
						
					/*flightComboSerVar.loadFilter();
					flightComboSerVar.updateFilghtCount();*/
					
					
					loadTemplate('flight-returnFilter-fareCombo',flightComboSerVar.dynamicFilterdata,$('#filterBO'),flightComboSerVar.dynamicTemplate);
					
					flightComboSerVar.resetReturnPriceSlider(flightComboSerVar.returnFilterData);
					
					setTimeout(function(){
						$('.comboSteps').show(500);
							ULlessMore(['airlineName-filter-list_FFR','_stopOverAirport-filter-list_FFR']);
						}, 2000);
							_langGlobal.langInit();
							pricetagConvert.init(); // divide decimal point	
					
					}); 
					
					flightComboSerVar.dynamicFilterdata.returnAirlineNameWP = flightComboSerVar.dynamicFilterdata.returnAirlineNameWP.sort(function(a,b){
					return a[1][0]-b[1][0];
					});
					loadTemplate('filter_airlineIcons_template',flightComboSerVar.dynamicFilterdata.returnAirlineNameWP,$('#_filter_airlineIcons_template'),flightComboSerVar.dynamicTemplate);
					loadAirlineGridwithOwl();

					
				  
					
					
				}
			  
		  }
		},
		initAirlineGrid:function(){
				/**
				 *Airline Grid Icon filter
				 */
				 $t = this;
				$('body').on('click',this.filterSelector.airlineGrid,function(){
					$('.dynamic_results_loader').show();
					var $this = $(this);
					var gridItems = $($t.filterSelector.airlineGrid);
					gridItems.each(function(){
						var item = $(this).parents('.item');
						item.removeClass('active');
					});
					var target;
					if(!flightComboSerVar.isActive){
					target = $($t.filterSelector.airline);	
					}
					 
				 else{			
					 if(!flightComboSerVar.selectedFlightCombination.onwardTrip){
						target = $(flightComboSerVar.filterSelector.onwardAirline);	 
					 }  // onw flt not selected 
					  
					 else{
						target = $(flightComboSerVar.filterSelector.returnAirline); 
					 }
					 

					  
				 }
				 target.each(function(){
						if($(this).attr('attr-airlinecode')==$this.attr('id')){
							if(!$(this).is(':checked')){
								$(this).prop('checked',true);
								$this.parents('.item').addClass('active');
							}else{
								$this.parents('.item').removeClass('active');
								$(this).prop('checked',false);		 
							}
						}else{
							$(this).prop('checked',false);
						} 
					});
					if(!flightComboSerVar.isActive){
					$t.resetPriceSliderOnLoad();
					setTimeout(function(){
						$t.render(true);
					},80);
					$t.findFLKey($this);
					return false;
				}else{
					
					
					if(!flightComboSerVar.selectedFlightCombination.onwardTrip){  // onw flt not selected 
					 
					flightComboSerVar.resetOnwardPriceSliderOnLoad();
					setTimeout(function(){
						flightComboSerVar.onwardRender(true);
					},80);
					//flightComboSerVar.findFLKey($this);
					return false;
					 
					 }else{
					 
					flightComboSerVar.resetReturnPriceSliderOnLoad();
					setTimeout(function(){
						flightComboSerVar.returnRender(true);
					},80);
					//flightComboSerVar.findFLKey($this);
					return false;	
						 
					 }
				}
				});
				
				/**
				 *Remove Filtered UI Element list
				 */
				$('body').on('click touchstart','._TabFilterRemove',function(){
					var offsetPopTop = $('#_bodyContainer').offset().top;
			        $('html, body').animate({scrollTop:offsetPopTop}, 500);
					$('.dynamic_results_loader').show();
					var elm = $(this).parents('li');
					var id = elm.attr('data-id');
					var source = elm.attr('data-source');
					if(source=="stopsFilter"){
						var target =  $($t.filterSelector.stops).parents('li').find('#'+id);
						var isDisabled = target.prop('disabled');
						if(isDisabled){
							target.prop('checked',false);
							elm.remove();
						}else{
							target.trigger('click');
						}
					}else if(source=="airlineFilter"){
						var target =  $($t.filterSelector.airline).parents('li').find('#'+id);
						var isDisabled = target.prop('disabled');
						if(isDisabled){
							target.prop('checked',false);
							elm.remove();
						}else{
							target.trigger('click');
						}
					}else if(source=="airportStopOverFilter"){
						var target =  $($t.filterSelector.stopOverAirports).parents('li').find('#'+id);
						var isDisabled = target.prop('disabled');
						if(isDisabled){
							target.prop('checked',false);
							elm.remove();
						}else{
							target.trigger('click');
						}
					}else if(source=="returnAirportStopOverFilter"){
						var target =  $($t.filterSelector.returnStopOverAirports).parents('li').find('#'+id);
						var isDisabled = target.prop('disabled');
						if(isDisabled){
							target.prop('checked',false);
							elm.remove();
						}else{
							target.trigger('click');
						}
					}else if(source=="nearByAirportFilter"){
						var target =  $($t.filterSelector.nearByAirport).parents('li').find('#'+id);
						var isDisabled = target.prop('disabled');
						if(isDisabled){
						target.prop('checked',false);
							elm.remove();
						}else{
							target.trigger('click');
						}			  
					}else if(source=="airportDepartureTimeFilter"){
						var target = $($t.filterSelector.eventDeparture).parents('li').find('#'+id);
						var isDisabled = target.prop('disabled');
						if(isDisabled){
							target.prop('checked',false);
							elm.remove();
						}else{
							target.trigger('click');
						}				  
					}else if(source=="airportArrivalTimeFilter"){
						var target = $($t.filterSelector.eventArrival).parents('li').find('#'+id);
						var isDisabled = target.prop('disabled');
						if(isDisabled){
							target.prop('checked',false);
							elm.remove();
						}else{
							target.trigger('click');
						}		  
					}else if(source=="returnAirportDepartureTimeFilter"){
						var target = $($t.filterSelector.returnTripEventDeparture).parents('li').find('#'+id);
						var isDisabled = target.prop('disabled');
						if(isDisabled){
							target.prop('checked',false);
							elm.remove();
						}else{
							target.trigger('click');
						}				  
					}else if(source=="returnAirportArrivalTimeFilter"){
						var target = $($t.filterSelector.returnTripEventArrival).parents('li').find('#'+id);
						var isDisabled = target.prop('disabled');
						if(isDisabled){
							target.prop('checked',false);
							elm.remove();
						}else{
							target.trigger('click');
						}		  
					}else if(source=="priceSlider"){
						elm.remove();
						setTimeout(function(){		
							$t.resetPriceSliderOnLoad();				
							$t.render();	
						},80);				
					}else if(source=="ffpAllianceFilter"){
						//var target = $($t.filterSelector.ffpAlliance+"[attr-alliance='_blank']");
						var target = $('#'+id);
						target.trigger('click');
					}
				});
				
				
				this.eventBindingFlag = true;
		
		},
		UIFilterSelected:function(){
			if(flightSerVar.priceFilterMin!=0 && flightSerVar.priceFilterMax!=0){
				var offsetPopTop = $('#_bodyContainer').offset().top;
		        $('html, body').animate({scrollTop:offsetPopTop}, 500);
				removeValueFromArr('priceSlider','price',flightSerVar.filterUIArry);
				flightSerVar.filterUIArry.push({
                  source:'priceSlider',
                  value:'price',
                  id:'',
                  display:"<span class='filtPrice'><span>"+this.getSelectedCurrency()+"</span> "+flightSerVar.priceFilterMin+" - <span>"+this.getSelectedCurrency()+"</span> "+flightSerVar.priceFilterMax + "</span>"
              });			  
			}else{
				removeValueFromArr('priceSlider','price',flightSerVar.filterUIArry);
			}
			$('input[type="checkbox"]').each(function(){
				var source = $(this).attr('name');
				var value = $(this).val();
				var id = $(this).attr('id');
				var displayVal = "";
				if(source=="airlineFilter" || source=="airportStopOverFilter" || source=="returnAirportStopOverFilter" || source=="airportDepartureTimeFilter" || source=="returnAirportArrivalTimeFilter" || source=="returnAirportDepartureTimeFilter" || source=="airportArrivalTimeFilter" || source=="stopsFilter" || source=="nearByAirportFilter" || source=="ffpAllianceFilter"){
					if($(this).is(':checked')){
						var offsetPopTop = $('#_bodyContainer').offset().top;
				        $('html, body').animate({scrollTop:offsetPopTop}, 500);
				        
						if(isFilterInArray(source,value,flightSerVar.filterUIArry)==true){
							if(source=="stopsFilter"){
								displayVal = cmnStopsLangRender(value);
							}else if(source=="airportDepartureTimeFilter"){
								displayVal = cmnArrivalEventLangRender(value, i18n.t("departure"));
							}else if(source=="returnAirportDepartureTimeFilter"){
								displayVal = cmnArrivalEventLangRender(value, i18n.t("return"));
							}else if(source=="airportArrivalTimeFilter"){
								displayVal = cmnArrivalEventLangRender(value, i18n.t("arrival"));
							}else if(source=="returnAirportArrivalTimeFilter"){
								displayVal = cmnArrivalEventLangRender(value, i18n.t("return"));
							}else if(source=="airlineFilter"){
								displayVal = $(this).attr('data-aName');
							}else if(source=="airportStopOverFilter"){
								displayVal = $(this).attr('data-aname');
							}else if(source=="returnAirportStopOverFilter"){
								displayVal = $(this).attr('data-aname');
							}else if(source=="nearByAirportFilter"){
								displayVal = $(this).attr('data-aname');
							}else{
								displayVal = value;
							}
							flightSerVar.filterUIArry.push({
								source:source,
								value:value,
								id:id,
								display:displayVal
							});
						}
					}else{
						
						removeValueFromArr(source,value,flightSerVar.filterUIArry);
					}
				}
			});
			
			var s = $(this.filterSelector.ffpAlliance);
			s.each(function(){
				var $this = $(this);
				var source = $this.attr('name');
				var value = $this.attr('data-AliName');
				var id = $this.attr('id');
				var displayVal = $this.attr('data-AliName');
				if($this.hasClass('active')){
						if(isFilterInArray(source,value,flightSerVar.filterUIArry)==true){
						flightSerVar.filterUIArry.push({
								source:source,
								value:value,
								id:id,
								display:displayVal
							});
						}
			   }
			else if(isFilterInArray(source,value,flightSerVar.filterUIArry)==false){
				removeValueFromArr(source,value,flightSerVar.filterUIArry);
				}
			
			});
			
			generateFilterUI(flightSerVar.filterUIArry,'filtersApplied');
		},	
		dyanamicRadioSelection:function(elm){
			async.series([
				function(callback){
					//$('.fltResults._slm').each(function(){
					$('.fltResults').each(function(){
						var $trgt = $(this).find('li');
						$trgt.removeClass('active');
						$(this).parents('.custom-flight-flow').removeClass('sel');
					});
					return callback();
				},
				function(callback){
					var $target = elm.parents('.custom-flight-flow').find('.row').find('.fltResultsGrid');
					$target.each(function(){
						var opt = true;
						var $elmRadio = $(this).find('input[type=radio]');
						$elmRadio.each(function(){
							if($(this).is(':checked')==true){
								$(this).parents('li').addClass('active');
								$(this).parents('.custom-flight-flow').addClass('sel');
								opt=false;
							}
						});				
						if(opt==true){
							$($elmRadio[0]).prop('checked',true);
							$($elmRadio[0]).parents('li').addClass('active');
							$(this).parents('.custom-flight-flow').addClass('sel');
						}
					});
					return callback();
				},
				function(callback){	
					var $target = elm.parents('.item.primary-item').find('.row').find('.fltResultsGrid');
					$target.each(function(){
						var $elmRadio = $(this).find('input[type=radio]');
						$elmRadio.each(function(){
							if($(this).is(':checked')==true){
								
								$(this).parents('li').addClass('active');
								$(this).parents('.custom-flight-flow').addClass('sel');
								opt=false;
							}
						});				
						
					});
					return callback();
				}/*,
				function(callback){	
					flightSerVar.generateBooknow(elm);
					return callback();
				}*/
			]);			
		},
		resetPriceSliderOnLoad:function(){
			flightSerVar.priceFilterMin = 0;
			flightSerVar.priceFilterMax = 0;
			var priceList = flightSerVar.getNONFPriceList();
			var min = 0;
			var max = 0;
			if(priceList.length>0){
				min = priceList[0];
				max = priceList[priceList.length -1];
			}
			$(this.filterSelector.priceFilter).val(min+';'+max);
			this.reRenderPrice(priceList);
		},
		getNONFPriceList: function () { //produce [lowest_price,lowest_price...]
            var pList = [];
			var priceData = flightSerVar.baseObj;
			for (i in priceData) {
				var priceObj = priceData[i].jsonFlightPrice;
				if (typeof priceObj !== 'undefined') {
					var totalFare = priceObj.up.totalFare;
					pList.push(parseInt(totalFare));
				}
			}
			if (pList.length > 0){
				for (var i = 0; i < pList.length; i++) {
					if (nn(pList[i], pList) == false) {
						pList.push(pList[i]);
					}
				}
			}
			pList.sort(function(a, b) {
				return a - b;
			});
            return pList;
        },
		generateBooknow:function(elm){
			
			var $target = elm.parents('.item.primary-item').find('.row').find('.fltResultsGrid');
			var $uuid = elm.parents('.item.primary-item').attr('data-uuid');
			var $objID = elm.parents('.item.primary-item').attr('data-objectindex');	
			var $booknowBtn = elm.parents('.item.primary-item').find('.priceGrid').find('._bkBtn');
			var $baggageBtn = elm.parents('.item.primary-item').find('.flightFootItemList').find('._bgdetails');
			var $fareRuleBtn = elm.parents('.item.primary-item').find('.fareRulesLink');
			var tripBookNow = {};
			var tripTimeError = false;
			var tripBooknowObjectIndex = {},tripLegsIndex = '';
			
			async.series([
				function(callback){						
					
					$target.each(function(){
						var $elmRadio = $(this).find('input[type=radio]');
						//console.log('$elmRadio.length');console.log($elmRadio.length);
						if($elmRadio.length ==1){							
							$elmRadio.attr('checked', 'checked');
						}
						$elmRadio.each(function(){
							if($(this).is(':checked')==true){
								if(tripLegsIndex!==''){
									tripLegsIndex = tripLegsIndex+'|'+$(this).attr('data-index');
								}else{
									tripLegsIndex = $(this).attr('data-index');
								}
							}
						});	
					});
					tripBooknowObjectIndex.indexID = $objID;
					//tripBooknowObjectIndex.legIndex = tripLegsIndex;
					tripBooknowObjectIndex.uniqueId = flightSerVar.uuid;
					tripBooknowObjectIndex.fareRuleExists = $fareRuleBtn.length?true:false;
					
					if(tripBooknowObjectIndex.indexID in fareRuleViewedInfo ){
					tripBooknowObjectIndex.fInfo = fareRuleViewedInfo[tripBooknowObjectIndex.indexID] ;
					
					}
				
					
					return callback();
				},
				function(callback){
					var t1,t2;					
					$target.each(function(i){
						var $elmRadio = $(this).find('input[type=radio]');
						$elmRadio.each(function(){
							if($(this).is(':checked')==true){
								if(i==0){
									t1 = $(this).attr('data-date');
								}else if(i==1){
									t2 = $(this).attr('data-date');								
								}
							}
						});	
					});
					var d1 = new Date(moment(t1));
					var d2 = new Date(moment(t2));
					if(typeof t2!="undefined"){
						var timeDiff2 = d2.getTime() - d1.getTime();
						timeDiff2 = timeDiff2 / (1000 * 3600);					
						//console.log('timeDiff2');	console.log(timeDiff2);					
						if(timeDiff2<2){
							tripTimeError=true;
							//$booknowBtn.attr('onclick',"tripError(this);");
						}
					}
					return callback();
				}
			],function(){
				 if(tripTimeError){
					 tripError(elm);
				 }else{
					 tripBooknowObjectIndex.legIndex = tripLegsIndex;
					 
					 tripBookNow = tripBooknowObjectIndex;
					if(!$booknowBtn.hasClass('wego')){
						//$booknowBtn.attr('onclick',"bookNowAll("+JSON.stringify(tripBookNow)+",this)");
						$baggageBtn.attr('data-objectindex',JSON.stringify(tripBookNow));
					}else{
						
						tripBookNow.affliateName = $booknowBtn.attr('data-aName');
						tripBookNow.utm_content = $booknowBtn.attr('data-utmc');
						//$booknowBtn.attr('onclick',"bookNowAll("+JSON.stringify(tripBookNow)+",this)");
						$baggageBtn.attr('data-objectindex',JSON.stringify(tripBookNow));
					}
					 
					 
					//WEGO Book now functon
						if($(elm).attr('data-wego')){
							bookNow(tripBookNow,elm,true);
						}else{
							bookNow(tripBookNow,elm,false);
						}
					//return flightObj;
			     }
			});
		},
		filterByAirlineName:function(value){//Filter by Airline Name
			var i, j,item,array = JSON.parse(JSON.stringify(this.filterData)),reArray = [],holder,maps = this.hashmap;	
			for(i = 0, j = array.length; i<j; i++){
				var dPoint = false;
				item = array[i];
				for(e = 0; e<item.trips[0].length; e++){
					holder = item.trips[0][e].jsonSector[0].marAirlineCode;
					if(typeof holder !== "undefined" && cmnFindexofSearch(holder,value)==true){
						dPoint = true;
					}else{
						item.trips[0].splice(e, 1);
						e--;
					}
					var after = item.trips[0].length;
				}
				if(dPoint==true){
					reArray.push(item);
				}

			}
			this.filterData = reArray;
		},
		filterByAllianceName:function(value){//Filter by Alliance Name

			
			var selectedAllainces = value ; 
			var airlinesUnderAlliance = [];
			
		    if(jQuery.isEmptyObject(allianceAirlinesMap)){	
		    	
				for(i in ffp.en){
				//ffp.en[i].airlineCode;
				var airlinesSupported = [] ;
				for(j in ffp.en[i].ffpPrgms){
				airlinesSupported.push(ffp.en[i].ffpPrgms[j]);
				}
				allianceAirlinesMap[ffp.en[i].airlineCode] = airlinesSupported;
				}
			}
		   
			for(i in selectedAllainces){

				for(airline in allianceAirlinesMap[selectedAllainces[i]]){

					airlinesUnderAlliance.push(allianceAirlinesMap[selectedAllainces[i]][airline]);

				}
			}

			

			var i, j,item,array = this.filterData,reArray = [],holder;	
			for(i = 0, j = array.length; i<j; i++){
				var dPoint = false;
				item = array[i];
				for(e = 0; e<item.trips[0].length; e++){
					holder =  item.trips[0][e].jsonSector[0].marAirlineCode;
					if(typeof holder !== "undefined" && cmnFindexofSearch(holder,airlinesUnderAlliance)==true){
						dPoint = true;
					}else{
						item.trips[0].splice(e, 1);
						e--;
					}
				   var after = item.trips[0].length;
				}
				if(dPoint==true){
					reArray.push(item);
				}
				
			}
			
			this.filterData = reArray;
	        },
		
		/**
		*@description Method to process the final execution taking the base object
		*@params Boolean
		*@return Boolean
		*/
		render: function(priceRender,callback) {
			var $t = this;
			/**
			 * Remove record when fair res fails time
			 */
			if(priceRender !=="removeRecord"){
				//get the base object which we got from the search response
				var base = JSON.stringify($t.baseData.searchRes);
				//Set the base object to flightSerVar to process the filtration request.
				$t.filterData = JSON.parse(base);
			}
			var onwardFlights = [];
			for(var p=0; p<$t.filterData.length; p++){
		    	for(var q=0; q<$t.filterData[p].trips.length; q++){
		    		$t.filterData[p].trips[q].sort(function (a, b) {	
		    			var a1 = formatDate(a.jsonSector[0].depDateAndTime,'mins');
		    			var b1 = formatDate(b.jsonSector[0].depDateAndTime,'mins');
		    			return a1 - b1;
		    		});	        	
		    	}
				if(cmnGetURLQueryStr('tripType')==1 || cmnGetURLQueryStr('tripType')==3){
					if($t.filterData[p].affiliateTotal || $t.filterData[p].PriceItinfoRoundaffiliate){
						$t.wegoData = JSON.parse(JSON.stringify($t.filterData[p]));
						$t.wegoRslts = true;
					}
				}else if(cmnGetURLQueryStr('tripType')==2){
					var tar = $t.filterData[p].trips;
					var onward = false, ret = false;
					if($t.filterData[p].PriceItinfaffiliateTotal){
						onwardFlights.push($t.filterData[p]);
					}
				}
			}
			if(onwardFlights.length>0){
				for(var i=0; i<onwardFlights.length; i++){
					for(var j=0; j<onwardFlights[i].trips[0].length; j++){
						if(onwardFlights[i].trips[0][j].affliateBoolean){
							for(var k=0; k<onwardFlights[i].trips[1].length; k++){
								if(onwardFlights[i].trips[1][k].affliateBoolean){
									$t.wegoData = JSON.parse(JSON.stringify(onwardFlights[i]));
									$t.wegoRslts = true;
								}
							}
						}
					}
				}
			}
			/*
			 *initialize global scope for the filters
			 */
			var $airlinename = [];
			var $ffpname = [];
			var $stops = [];
			var $airportStopover = [];
			var $nearByAirport = [];
			var $airlineDepartureEvent = [];
			var $airlineArrivalEvent = [];
			var $ReturnTripAirlineDepartureEvent = [];
			var $ReturnTripAirlineArrivalEvent = [];
			var $sortPrice = '';
			var $sortDuration = '';
			var $sortArrival = '';
			var $sortDeparture = '';
			var $minMaxPrice = [];
		
			
			async.series([
				function(callback){
					//Airline name filter
					$airlinename = $t.getFilteredAirlineName();
					// FFP  alliance filter
					$ffpAllianceName = $t.getFilteredAllianceName();
					//Stops filter
					$stops = $t.getFilteredStops();
					//Airport Stopover filter
					$airportStopover = $t.getFilteredAirportStopOver();
					//Return Airport Stopover filter
					$returnAirportStopover = $t.getFilteredReturnAirportStopOver();
					//Near By Airport filter
					$nearByAirport = $t.getFilteredNearby();
					//Departure Event filter
					$airlineDepartureEvent = $t.getFilteredDepartureEvent();
					//Arrival Event filter
					$airlineArrivalEvent = $t.getFilteredArrivalEvent();
					//ReturnTrip Departure Event filter
					$ReturnTripAirlineDepartureEvent = $t.getFilteredReturnTripDepartureEvent();
					//ReturnTrip Arrival Event filter
					$ReturnTripAirlineArrivalEvent = $t.getFilteredReturnTripArrivalEvent();
					//Sort by price
					$sortPrice = $t.getPriceSortVal();
					//Sort by Duration
					$sortDuration = $t.getDurationSortVal();
					//Sort by Arrival Time
					$sortArrival = $t.getArrivalSortVal();
					//Sort by Departure Time
					$sortDeparture = $t.getDepartureSortVal();
					//Min/Max Price filter
					$minMaxPrice = $t.getFilteredPrice();
					$t.sortByPrice('asc');
					return callback();
				},
				function(callback){
					if($t.getArrivalCodeFromURL()!=""){
						$nearByAirport.push($t.getArrivalCodeFromURL());
					}
					if($airlinename.length>0){
						$t.filterByAirlineName($airlinename);
					}
					if($ffpAllianceName.length>0){
						$t.filterByAllianceName($ffpAllianceName);
					}
					if($stops.length>0){
						$t.filterByStopOver($stops);
					}
					if($airportStopover.length>0){
						$t.filterByAirportStopOver($airportStopover);
					}
					if($returnAirportStopover.length>0){
						$t.filterByAirportReturnStopOver($returnAirportStopover);
					}
					if($nearByAirport.length>0){
						$t.filterNearByAirport($nearByAirport);
					}
					if($airlineDepartureEvent.length>0){
						$t.filterByDepartureEvent($airlineDepartureEvent);
					}
					if($airlineArrivalEvent.length>0){
						$t.filterByArrivalEvent($airlineArrivalEvent);
					}
					if($ReturnTripAirlineDepartureEvent.length>0){
						$t.filterByReturnTripDepartureEvent($ReturnTripAirlineDepartureEvent);
					}
					if($ReturnTripAirlineArrivalEvent.length>0){
						$t.filterByReturnTripArrivalEvent($ReturnTripAirlineArrivalEvent);
					}
					if($sortPrice!=""){
						$t.sortByPrice($sortPrice);
					}
					if($sortDuration!=""){
						$t.sortByDuration($sortDuration);
					}
					if($sortArrival!=""){	
						$t.sortByArrival($sortArrival);
					}			
					if($sortDeparture!=""){	
						$t.sortByDeparture($sortDeparture);
					}
					if($minMaxPrice!=""){
						$t.filterByPrice($minMaxPrice);
					}
					return callback();
				}
				],function(){			
						
					var renderedData = JSON.parse(JSON.stringify($t.filterData));
					if(typeof callback==='function') return callback(renderedData);
					if(priceRender){
						$t.resetPriceSlider($t.filterData);
					}
					if($t.wegoRslts){
						var data = {
							maps: flightSerVar.hashmap,
							headerInfo: flightSerVar.headerInfo,
							uuid: flightSerVar.uuid,
							searchRes: $t.wegoData,
							tripType: cmnGetURLQueryStr('tripType'),
							lang: i18n.options.lng
						}
						$t.loadTemplate('flight_result_wego', data, $('.flightWegoContainer'));
					}
					$t.filterLogic();
					$t.UIFilterSelected();
					$t.updateFilghtCount();
					paginationOptInit = cmnPaginationConfig(flightSerVar.pageselectCallback);
					$("#pagination").pagination($t.filterData.length, paginationOptInit, $t.filterData);	
				});
		},
		getFLKey:[],
		findFLKey:function(elm){
			this.getFLKey = elm;
		},
		filterLogic:function(){
			var CNBA = false;
			var $t = this;
			var key = $t.getFLKey;
			var //getPriceList,
				airlineNameWithPrice,
				stopOverAirport,
				filterbyEventDeparture,
				filterbyEventArrival,
				stopsList;
				
			async.parallel([
				function(callback){					
					//Get Airline name with price for filter element
					airlineNameWithPrice = $t.getAirlineList($t.functionNBASource());
					return callback();
				},
				function(callback){
					//Get stopover airport name
					stopOverAirport = $t.getStopOverAirportFL();
					return callback();
				},
				function(callback){					
					//Get Filter by event departure & arrival object
					var FBE = $t.getDAEventFL($t.filterData);
					filterbyEventDeparture = FBE[0];
					filterbyEventArrival = FBE[1];
					return callback();
				},
				function(callback){					
					stopsList = $t.getStopsList();
					return callback();
				},
				function(callback){					
					//Airline name with price for Scroll Grid
					airlineNameForGrid = JSON.parse(JSON.stringify(airlineNameWithPrice));	
					return callback();
				}				
			],function(err){				
				//Airline name filter
				$airlinename = $t.getFilteredAirlineName();
				//Stops filter
				$stops = $t.getFilteredStops();
				//Airport Stopover filter
				$airportStopover = $t.getFilteredAirportStopOver();
				//Departure Event filter
				$airlineDepartureEvent = $t.getFilteredDepartureEvent();
				//Arrival Event filter
				$airlineArrivalEvent = $t.getFilteredArrivalEvent();
				//check price slider key
				var $priceFL = false;
				if(key.length>0){
					if(key.attr('name')=='stopsFilter'){
						$t.getFlightAirlineFL(airlineNameWithPrice,false);
						$t.getStopOverFL(stopOverAirport,false);
						$t.getEventDepartureFL(filterbyEventDeparture,false);
						$t.getEventArrivalFL(filterbyEventArrival,false);
						$priceFL = false;
					}
					if(key.attr('name')=='airlineFilter' || key.attr('name')=='airLineGridFilter'){
						$t.getStopsFL(stopsList,false);
						$t.getStopOverFL(stopOverAirport,false);
						$t.getEventDepartureFL(filterbyEventDeparture,false);
						$t.getEventArrivalFL(filterbyEventArrival,false);
						$priceFL = false;
					}
					if(key.attr('name')=='airportStopOverFilter'){
						$t.getStopsFL(stopsList,false);
						$t.getFlightAirlineFL(airlineNameWithPrice,false);
						$t.getEventDepartureFL(filterbyEventDeparture,false);
						$t.getEventArrivalFL(filterbyEventArrival,false);
						$priceFL = false;
					}
					if(key.attr('name')=='airportDepartureTimeFilter'){
						$t.getStopsFL(stopsList,false);
						$t.getFlightAirlineFL(airlineNameWithPrice,false);
						$t.getStopOverFL(stopOverAirport,false);
						$t.getEventArrivalFL(filterbyEventArrival,false);
						$priceFL = false;
					}
					if(key.attr('name')=='airportArrivalTimeFilter'){
						$t.getStopsFL(stopsList,false);
						$t.getFlightAirlineFL(airlineNameWithPrice,false);
						$t.getStopOverFL(stopOverAirport,false);
						$t.getEventDepartureFL(filterbyEventDeparture,false);
						$priceFL = false;
					}
					if(key.attr('name')=='flightPriceFilerElm'){
						$t.getStopsFL(stopsList,false);
						$t.getFlightAirlineFL(airlineNameWithPrice,false);
						$t.getStopOverFL(stopOverAirport,false);
						$t.getEventDepartureFL(filterbyEventDeparture,false);
						$t.getEventArrivalFL(filterbyEventArrival,false);
						$priceFL = true;
					}
					if($airlinename.length==0 && $stops.length==0 && $airportStopover.length==0 && $airlineDepartureEvent.length==0 && $airlineArrivalEvent.length==0){
						if($priceFL==false){
							$t.getStopsFL([],true);
							$t.getStopOverFL([],true);
							$t.getFlightAirlineFL([],true);
							$t.getEventDepartureFL([],true);
							$t.getEventArrivalFL([],true);						
						}
					}
				}
			});
			
		},
		getStopOverAirportFL:function(){
			var dataArray = this.filterData;
			var dummySO = [];			
			var stopOverAirport = []; 
			var getNearByAirport = this.functionNBASource();
			var value = [];
			var maps = this.hashmap;
			if(getNearByAirport.length>0){
				value = getNearByAirport;
			}
            if(dataArray.length > 0){
				for(i in dataArray){
					var trip1 = dataArray[i].trips[0] || [];
					for(var e=0; e<trip1.length; e++){
						for(var f=0; f<trip1[e].jsonSector.length -1; f++){
							//$.trim(maps.airportName[sector.arrAirportCode][lang]);
							var stopOverAName = $.trim(maps.airportName[trip1[e].jsonSector[f].arrAirportCode][lang]);
							var stopOverACode = $.trim(trip1[e].jsonSector[f].arrAirportCode);
							if(value.length>0){
								if(cmnFindexofSearch(trip1[e].arrivalAirportCode,value)==true){
									if(nn(maps.airportName[trip1[e].jsonSector[f].arrAirportCode][lang], dummySO)===false){
										dummySO.push(maps.airportName[trip1[e].jsonSector[f].arrAirportCode][lang]);
										stopOverAirport.push([stopOverAName, stopOverACode]);
									}
								}
							}else{
								if(nn(maps.airportName[trip1[e].jsonSector[f].arrAirportCode][lang], dummySO)===false){
									dummySO.push(maps.airportName[trip1[e].jsonSector[f].arrAirportCode][lang]);
									stopOverAirport.push([stopOverAName, stopOverACode]);
								}
							}							
							if(typeof trip1[e].stopOverAirportName!="undefined" && typeof trip1[e].stopOverAirportCode!="undefined"){
								trip1[e].stopOverAirportName.push(stopOverAName);
								trip1[e].stopOverAirportName.push(stopOverACode);
							}else{
								trip1[e].stopOverAirportName =  [];
								trip1[e].stopOverAirportCode =  [];
								trip1[e].stopOverAirportName.push(stopOverAName);
								trip1[e].stopOverAirportCode.push(stopOverACode);
							}
						}
					} 
					
				}
            }
			return stopOverAirport;
        },
        getDAEventFL:function(object){
			var FBEDepartureObjArray = [], FBED = [];
			var FBEArrivalObjArray = [], FBEA = [];			
			if (object.length > 0) {
				for (i in object) {
					var baseFromSec = object[i].trips[0];
					for(var e=0; e<baseFromSec.length; e++){
						var departureLeg = baseFromSec[e].jsonSector[0];
						var arrivalLeg = baseFromSec[e].jsonSector[baseFromSec[e].jsonSector.length -1];
						var departureEventTime = formatDate(departureLeg.depDateAndTime,'events');
						var arrivalEventTime = formatDate(arrivalLeg.arrDateAndTime,'events');
						//Set Departure Time
						if(nn(departureEventTime,FBEDepartureObjArray)===false){
							FBED[departureEventTime] = [cmnDAEventLocalization(departureEventTime)];
							FBEDepartureObjArray.push(departureEventTime);
						}
						//Set Arrival Time
						if(nn(arrivalEventTime,FBEArrivalObjArray)===false){
							FBEA[arrivalEventTime] = [cmnDAEventLocalization(arrivalEventTime)];
							FBEArrivalObjArray.push(arrivalEventTime);
						}
					}
				}
			}
			return [FBEDepartureObjArray,FBEArrivalObjArray];
        },
        getStopsFL:function(stopsList,reset,callback){
			var subD = [];
			var target = $('#stops-filter-list input[type=checkbox]');
			for(var i in stopsList){
				var keyCodeObject = stopsList[i].keyVal || '';
				if(keyCodeObject!=""){
					subD.push(keyCodeObject);					
				}
			}
			target.each(function(){
				$(this).prop('disabled',false);
			});
			if(reset===false){
				target.each(function(){
					var t = $(this);
					var a = subD.indexOf(parseInt(t.val())); 
					if(a<0){
						t.prop('disabled',true);
					}
				});
			}
			if(typeof callback!="undefined"){
				return callback();
			}
		},
		getStopOverFL:function(stopOverAirport,reset,callback){
			var subD = [];
			var target = $('#_stopOverAirport-filter-list input[type=checkbox]');
			for(var i in stopOverAirport){
				var keyCodeObject = stopOverAirport[i][1];	
				subD.push(keyCodeObject);
			}
			target.each(function(){
				$(this).prop('disabled',false);
			});
			if(reset===false){
				target.each(function(){
					var t = $(this);
					var a = subD.indexOf(t.val());
					if(a<0){
						t.prop('disabled',true);
					}
				});
			}
			if(typeof callback!="undefined"){
				return callback();
			}
		},
		getEventDepartureFL:function(filterbyEventDeparture,reset,callback){
			var subD = [];
			var target = $('#_depature_time_filter input[type=checkbox]');
			for(var i in filterbyEventDeparture){
				var keyCodeObject = filterbyEventDeparture[i];	
				subD.push(keyCodeObject);
			}
			target.each(function(){
				$(this).prop('disabled',false);
			});
			if(reset===false){
				target.each(function(){
					var t = $(this);
					var a = subD.indexOf(t.val()); 
					if(a<0){
						t.prop('disabled',true);
					}
				});
			}
			if(typeof callback!="undefined"){
				return callback();
			}
		},
		getEventArrivalFL:function(filterbyEventArrival,reset,callback){
			var subD = [];
			var target = $('#_arrival_time_filter input[type=checkbox]');
			for(var i in filterbyEventArrival){
				var keyCodeObject = filterbyEventArrival[i];	
				subD.push(keyCodeObject);
			}
			target.each(function(){
				$(this).prop('disabled',false);
			});
			if(reset===false){
				target.each(function(){
					var t = $(this);
					var a = subD.indexOf(t.val()); 
					if(a<0){
						t.prop('disabled',true);
					}
				});
			}
			if(typeof callback!="undefined"){
				return callback();
			}
		},
		getFlightAirlineFL:function(airlineNameWithPrice,reset,callback){
			var subD = [];
			var target = $('#airlineName-filter-list input[type=checkbox]');
			for(var i in airlineNameWithPrice){
				var keyCodeObject = '_aTag-'+airlineNameWithPrice[i][1][1];	
				subD.push(keyCodeObject);
			}
			target.each(function(){
				$(this).prop('disabled',false);
			});
			if(reset===false){
				target.each(function(){
					var t = $(this);
					var a = subD.indexOf(t.attr('attr-airlinecode'));
					if(a<0){
						t.prop('disabled',true);
					}
				});
			}
			if(typeof callback!="undefined"){
				return callback();
			}
		},
		/**
		*@description Price Filter Function
		*@params Array (Price Filter Criteria [960,1250])
		*@return null
		*/
		filterByPrice: function(value){
			var min = value[0];
			var max = value[1];
			var i, item, array = this.filterData,
			reArray = [],
			holder;
			for (i in array) {
				item = array[i];
				holder = parseInt(array[i].jsonFlightPrice.up.totalFare);
				if (min != 0 && max != 0) {
					if (typeof holder !== "undefined" && cmnBetweenSearch(holder, min, max) === true) {
						reArray.push(item);
					}
				} else {
					reArray.push(item);
				}
			}
			this.filterData = reArray;
		},
		updateFilghtCount:function(){
			var count = this.getRecordCount();
			/*var elm = $('#flightResultsSortingPanel');
			elm.find('#_nofRecordFlight').html(count);*/
			$('#_nofRecordFlight').html(count);
		},
		getRecordCount:function(){
			var d = this.filterData;
			var record = 0;
			for(var i in d){
				record = record + parseInt(d[i].trips[0].length);
			}
			return record;
		},
		sortByDeparture:function(option){
			var array = this.filterData;
			for(i in array){
				for(j in array[i].trips[0]){
					array[i].trips[0][j].departureMins = formatDate(array[i].trips[0][j].jsonSector[0].depDateAndTime,'mins');
					array[i].trips[0][j].arrivalMins = formatDate(array[i].trips[0][j].jsonSector[array[i].trips[0][j].jsonSector.length -1].arrDateAndTime,'mins');
					if(typeof array[i].trips[0]!="undefined"){
						array[i].trips[0].sort(function(a,b){
							a.departureMins - b.departureMins;
						});
					}
				}
			}
			if (option == "asc" || option == "") {
				array.sort(function (a, b) {
					return a.trips[0][0].departureMins - b.trips[0][0].departureMins;
				});
				this.filterData = array;
			}else if (option == "desc") {
				array.sort(function (a, b) {
					return b.trips[0][0].departureMins - a.trips[0][0].departureMins;
				});
				this.filterData = array;
			}
		},
		sortByArrival:function(option){
			var array = this.filterData;
			for(i in array){
				for(j in array[i].trips[0]){
					array[i].trips[0][j].departureMins = formatDate(array[i].trips[0][j].jsonSector[0].depDateAndTime,'mins');
					array[i].trips[0][j].arrivalMins = formatDate(array[i].trips[0][j].jsonSector[array[i].trips[0][j].jsonSector.length -1].arrDateAndTime,'mins');
					if(typeof array[i].trips[0]!="undefined"){
						array[i].trips[0].sort(function(a,b){
							a.arrivalMins - b.arrivalMins;
						});
					}
				}
			}
			if (option == "asc") {
				array.sort(function (a, b) {
					return a.trips[0][0].arrivalMins - b.trips[0][0].arrivalMins;
				});
				this.filterData = array;
			}else if (option == "desc") {
				array.sort(function (a, b) {
					return b.trips[0][0].arrivalMins - a.trips[0][0].arrivalMins;
				});
				this.filterData = array;
			}	
		},
		getFilteredPrice:function(){
			var s = $(this.filterSelector.priceFilter).val();
			if(typeof s!=='undefined'){
				var minMaxArr = s.split(';') || [];
				var priceMin = parseInt(minMaxArr[0]) || 0;
				var priceMax = parseInt(minMaxArr[1]) || 0;			
				return [priceMin,priceMax];
			}else{
				return [0,0];
			}
		},
		setPriceMinMax:function(value){
			flightSerVar.priceFilterMin = value[0];
			flightSerVar.priceFilterMax = value[1];
		},
		getArrivalSortVal:function(){
			var s = $(this.filterSelector.sortArrivalTime);
			return s.val();
		},
		getDepartureSortVal:function(){
			var s = $(this.filterSelector.sortDepartureTime);
			return s.val();
		},
		/**
		*@description Sort By Duration
		*@params String asc|desc
		*@return null
		*/
		sortByDuration: function(option) {
			var array = this.filterData;
            if (option == "asc") {
                array.sort(function (a, b) {
                     return a.trips[0][0].totalDurationMinutes - b.trips[0][0].totalDurationMinutes;
                });
                this.filterData = array;
            }else if (option == "desc") {
                array.sort(function (a, b) {
                           return b.trips[0][0].totalDurationMinutes - a.trips[0][0].totalDurationMinutes;
                
                });
                this.filterData = array;
            }
		},
		getDurationSortVal:function(){
			var s = $(this.filterSelector.sortDuration);
			return s.val();
		},
		/**
		*@description Sort By Price
		*@params String asc|desc
		*@return null
		*/
		sortByPrice: function(option) {
			var array = this.filterData;
			array.sort(function(a, b) {
				if (option == "asc") {
					return a.jsonFlightPrice.up.totalFare - b.jsonFlightPrice.up.totalFare;
				} else if (option == "desc") {
					return b.jsonFlightPrice.up.totalFare - a.jsonFlightPrice.up.totalFare;
				}
			});
			this.filterData = array;
		},
		getPriceSortVal:function(){
			var s = $(this.filterSelector.sortPrice);
			return s.val();
		},
		getFilteredDepartureEvent:function(){
			var s = $(this.filterSelector.eventDeparture);
			var departureEvent = [];
			s.each(function(){
				var $this = $(this);
				var $selVal = $.trim($this.val());
				if($this.is(':checked')){
					departureEvent.push($selVal);
				}
			});
			return departureEvent;
		},	
		getFilteredArrivalEvent:function(){
			var s = $(this.filterSelector.eventArrival);
			var arrivalEvent = [];
			s.each(function(){
				var $this = $(this);
				var $selVal = $.trim($this.val());
				if($this.is(':checked')){
					arrivalEvent.push($selVal);
				}
			});
			return arrivalEvent;
		},
		getFilteredReturnTripDepartureEvent:function(){
			var s = $(this.filterSelector.returnTripEventDeparture);
			var departureEvent = [];
			s.each(function(){
				var $this = $(this);
				var $selVal = $.trim($this.val());
				if($this.is(':checked')){
					departureEvent.push($selVal);
				}
			});
			return departureEvent;
		}
		,	
		getFilteredReturnTripArrivalEvent:function(){
			var s = $(this.filterSelector.returnTripEventArrival);
			var arrivalEvent = [];
			s.each(function(){
				var $this = $(this);
				var $selVal = $.trim($this.val());
				if($this.is(':checked')){
					arrivalEvent.push($selVal);
				}
			});
			return arrivalEvent;
		},
		filterByDepartureEvent:function(value){
			var i, j,item,array = this.filterData,reArray = [],holder;	
			for(i = 0, j = array.length; i<j; i++){
				var dPoint = false;
                item = JSON.parse(JSON.stringify(array[i]));
                for(e = 0; e<item.trips[0].length; e++){
                    holder =  item.trips[0][e].departureEvent;
                    if(typeof holder !== "undefined" && cmnFindexofSearch(holder,value)==true){
						dPoint = true;
                    }else{
						item.trips[0].splice(e, 1);
						e--;
					}
                }
				if(dPoint==true){
                    reArray.push(item);
                }
            }
			this.filterData = reArray;
		},
		filterByArrivalEvent:function(value){
			var i, j,item,array = this.filterData,reArray = [],holder;	
			for(i = 0, j = array.length; i<j; i++){
				var dPoint = false;
                item = array[i]
                for(e = 0; e<item.trips[0].length; e++){
                    holder =  item.trips[0][e].arrivalEvent;
                    if(typeof holder !== "undefined" && cmnFindexofSearch(holder,value)==true){
						dPoint = true;
                    }else{
						item.trips[0].splice(e, 1);
						e--;
					}
                }
				if(dPoint==true){
                    reArray.push(item);
                }
            }
			this.filterData = reArray;
		},
		filterByReturnTripDepartureEvent:function(value){
			var i, j,item,array = this.filterData,reArray = [],holder;	
			for(i = 0, j = array.length; i<j; i++){
				var dPoint = false;
                item = JSON.parse(JSON.stringify(array[i]));
                for(e = 0; e<item.trips[1].length; e++){
                    holder =  item.trips[1][e].departureEvent;
                    if(typeof holder !== "undefined" && cmnFindexofSearch(holder,value)==true){
						dPoint = true;
                    }else{
						item.trips[1].splice(e, 1);
						e--;
					}
                }
				if(dPoint==true){
                    reArray.push(item);
                }
            }
			this.filterData = reArray;
		},
		filterByReturnTripArrivalEvent:function(value){
			var i, j,item,array = this.filterData,reArray = [],holder;	
			for(i = 0, j = array.length; i<j; i++){
				var dPoint = false;
                item = array[i]
                for(e = 0; e<item.trips[1].length; e++){
                    holder =  item.trips[1][e].arrivalEvent;
                    if(typeof holder !== "undefined" && cmnFindexofSearch(holder,value)==true){
						dPoint = true;
                    }else{
						item.trips[1].splice(e, 1);
						e--;
					}
                }
				if(dPoint==true){
                    reArray.push(item);
                }
            }
			this.filterData = reArray;
		},
		filterNearByAirport:function(value){//Filter by Near by airport
			var dataArray = JSON.parse(JSON.stringify(this.filterData)), reArray = [];
			for(var i in dataArray){
				var dPoint = false;
				for(var l = 0; l<dataArray[i].trips[0].length; l++){
					var airlineCodeException = dataArray[i].trips[0][l].jsonSector[0].marAirlineCode;   
					var checkAirlineCode = this.getAirlineException();
					if((cmnFindexofSearch(dataArray[i].trips[0][l].arrivalAirportCode,value)==true || nn(airlineCodeException,checkAirlineCode)==true)){
						var dPoint = true;
					}else{
						dataArray[i].trips[0].splice(l,1);
						l--;
					}
				}    
				if(dPoint==true){
					reArray.push(dataArray[i]);
				}
			}
			this.filterData = reArray;
		},
		filterByAirportStopOver:function(value){
			var dataArray = this.filterData, reArray = [];
			for(var i in dataArray){
				var dPoint = false;
				for(var l = 0;l<dataArray[i].trips[0].length;l++){
					var stopOver = dataArray[i].trips[0][l].stopOverAirport;
					if(cmnIndexofSearchArr(value,stopOver)==true){
						var dPoint = true;
					}else{
						dataArray[i].trips[0].splice(l,1);
						l--;
					}
				}   
				if(dPoint==true){
					reArray.push(dataArray[i]);
				}
			}
			this.filterData = reArray;
		},
		filterByAirportReturnStopOver:function(value){
			var dataArray = this.filterData, reArray = [];
			for(var i in dataArray){
				var dPoint = false;
				for(var l = 0;l<dataArray[i].trips[1].length;l++){
					var stopOver = dataArray[i].trips[1][l].stopOverAirport;
					if(cmnIndexofSearchArr(value,stopOver)==true){
						var dPoint = true;
					}else{
						dataArray[i].trips[1].splice(l,1);
						l--;
					}
				}   
				if(dPoint==true){
					reArray.push(dataArray[i]);
				}
			}
			this.filterData = reArray;
		},
		getFilteredAirportStopOver:function(){
			var s = $(this.filterSelector.stopOverAirports);
			var airportStopOver = [];
			s.each(function(){
				var $this = $(this);
				var $selVal = $.trim($this.val());
				if($this.is(':checked')){
					airportStopOver.push($selVal);
				}
			});
			return airportStopOver;
		},
		getFilteredReturnAirportStopOver:function(){
			var s = $(this.filterSelector.returnStopOverAirports);
			var airportStopOver = [];
			s.each(function(){
				var $this = $(this);
				var $selVal = $.trim($this.val());
				if($this.is(':checked')){
					airportStopOver.push($selVal);
				}
			});
			return airportStopOver;
		},		
		getFilteredStops:function(){
			var s = $(this.filterSelector.stops);
			var stops = [];
			s.each(function(){
				var $this = $(this);
				var $selVal = $.trim($this.val());
				if($this.is(':checked')){
					stops.push($selVal);
				}
			});
			return stops;
		},
		filterByStopOver:function(value){//Filter by Stop Over
			var i, j,item,array = this.filterData,reArray = [],holder;	
			for(i = 0, j = array.length; i<j; i++){
				var dPoint = false;
				var dPoint1 = false;
				var dPoint2 = false;
				item = array[i];
				for(e = 0; e<item.trips[0].length; e++){
					holder =  item.trips[0][e].jsonSector.length;
					if(typeof holder !== "undefined" && cmnFindexofSearch(holder,value)==true){
						dPoint = true;
					}else{
						item.trips[0].splice(e, 1);
						e--;
					}
				}
				if(typeof item.trips[1]!=="undefined"){
					for(f = 0; f<item.trips[1].length; f++){
						holder = item.trips[1][f].jsonSector.length;
						if(typeof holder !== "undefined" && cmnFindexofSearch(holder,value)==true){
							dPoint1 = true;
						}else{
							item.trips[1].splice(f, 1);
							f--;
						}
					}
				}
				if(typeof item.trips[2]!=="undefined"){
					for(g = 0; g<item.trips[2].length; g++){
                    holder = item.trips[2][g].jsonSector.length;
                    if(typeof holder !== "undefined" && cmnFindexofSearch(holder,value)==true){
                        dPoint2 = true;
                    }else{
                        item.trips[2].splice(g, 1);
							g--;
						}
					}
					
				}
				
				
				var tripType = cmnGetURLQueryStr('tripType');
				if(typeof tripType !== 'undefined' && tripType == 1){
					if(dPoint==true){
						reArray.push(item);
					}
				}else if(typeof tripType !== 'undefined' && tripType == 2){
					if(dPoint==true  && dPoint1==true){
						reArray.push(item);
					}
				}else if(typeof tripType !== 'undefined' && tripType == 3){
						var departureDetail1 = cmnGetURLQueryStr('dep1');
						var departureDetail2 = cmnGetURLQueryStr('dep2');
						var departureDetail3 = cmnGetURLQueryStr('dep3');						
						if(departureDetail2 == '' && departureDetail3 == ''){
						if(dPoint==true){
							reArray.push(item);
						}
						}else if(departureDetail3 == ''){
							if(dPoint==true  && dPoint1==true){
							reArray.push(item);
						}
						}else{
							if(dPoint==true  && dPoint1==true && dPoint2==true){
							reArray.push(item);
						}
						}
					}		
			}
			this.filterData = reArray;
		},
		getFilteredAirlineName:function(){
			var s = $(this.filterSelector.airline);
			var gridItems = $(this.filterSelector.airlineGrid);
			gridItems.each(function(){
				var item = $(this).parents('.item');
				item.removeClass('active');
			});
			var filterByAirlineName = [];
			s.each(function(){
				var $this = $(this);
				var $selVal = $.trim($this.val());
				if($this.is(':checked')){					
					gridItems.each(function(){
						if($(this).attr('id')==$this.attr('attr-airlinecode')){
							$(this).parents('.item').addClass('active');
						}
					});
					filterByAirlineName.push($selVal);
				}
			});
			return filterByAirlineName;
		},
		getFilteredAllianceName:function(){
			var s = $(this.filterSelector.ffpAlliance);
			var filteredAllianceName = [];
			s.each(function(){
				var $this = $(this);
				if($this.hasClass('active')){		
				var $selVal = $this.attr('attr-alliance');
					filteredAllianceName.push($selVal);
				}
			});
			return filteredAllianceName;
		},
		/**
		*@description Load template Content
		*@param HTML Selector [dynamicTemplate(Dynamic template to Loaded)]
		*@param String [templateID (Template ID)]
		*@param data Array/Object [data(Json Data)]
		*@param HTML Selector [toUpdate(Template to update)]
		*@return 
		*/
		loadTemplate:function(templateID,data,toUpdate,callback){
			var result;
			//Load the template
			var template = tmpl($(this.dynamicTemplate).filter('#'+templateID).html(),data);
			var r = /\\u([\d\w]{4})/gi;
			template = template.replace(r, function (match, grp) {
			    return String.fromCharCode(parseInt(grp, 16)); } );
			template = unescape(template);
			//Select result container
			if(typeof toUpdate==='object'){			
				result = toUpdate;
			}else{			
				result = $('#'+toUpdate);
			}
			//Empty the result container
			result.empty();
			//Load data to the result container
			result.append(template);
			_langGlobal.langInit();
			//userTrackerModule.init();;
			if(typeof callback==='function')
				return callback();
			
		},
		resetPriceSlider:function(getFilterData){
			var priceList = flightSerVar.getPriceList();
			this.reRenderPrice(priceList);
		},
		reRenderPrice:function(data){
			var currencyIcon = flightSerVar.getSelectedCurrency();
			if(currencyIcon=="SAR"){
				currencyIcon = i18n.t('SAR');
			}else{
				currencyIcon = currencySymbols(currencyIcon);				
			}
			if(data.length==0 || data.length==1){
				//$(this.filterSelector.priceFilterSection).slideUp();
				$(this.filterSelector.priceFilterSection).hide();
			}else{		
				$(this.filterSelector.priceFilterSection).slideDown();
			}
			if(slider){
				slider.destroy();
				$(this.filterSelector.priceFilter).val(data[0]+":"+data[data.length -1]);
			}
			$range =  $(this.filterSelector.priceFilter).ionRangeSlider({
				values: data,
				type: 'double',
				prefix: "<span>"+currencyIcon+"</span> ",
				onFinish: function (obj){
					priceMin = obj.from_value;
					priceMax = obj.to_value;
				}
			});
			slider = $range.data("ionRangeSlider");
		},
		loadFilter:function(){
			var $t = this;
			var stopsList = $t.getStopsList();
			var NBA = $t.getNearByAirport();
			var stopOverAirports = $t.getStopOverAirport();
			var DAE = $t.getDAEvent();
			var AirlineNameWP = $t.airlineNameWithPrice();
			var priceList = $t.getPriceList();

			var data = {
				stopsList:stopsList,
				NBA:NBA,
				stopOverAirportlist:stopOverAirports.stopOverAirportList,
				stopOverReturnAirportlist:stopOverAirports.stopOverReturnAirportList,
				filterbyEventDeparture:DAE[0],
				filterbyEventArrival:DAE[1],
				filterbyReturnEventDeparture:DAE[2],
				filterbyReturnEventArrival:DAE[3],
				AirlineNameWP:AirlineNameWP
			};
			
			flightSerVar.dynamicFilterdata = data;
		},
		genAirlineJunk: function(value){
		   var dataArray = JSON.parse(JSON.stringify(this.baseObj)), reArray = [];
		   var airlineName = [];
		   var maps = this.hashmap;
		   for(var i in dataArray){
				var fromSec = dataArray[i].trips[0];
				var priceObj = dataArray[i].jsonFlightPrice;
				var totalFare = priceObj.up.totalFare;
				for(var l in dataArray[i].trips[0]){ 
					var airlineCodeException = dataArray[i].trips[0][l].jsonSector[0].marAirlineCode;var checkAirlineCode = this.getAirlineException();
					if(value !== "" && value.length>0){
						if(cmnFindexofSearch(dataArray[i].trips[0][l].arrivalAirportCode,value)==true  || nn(airlineCodeException,checkAirlineCode)==true){
							var arrivalAirportCode = dataArray[i].trips[0][l].jsonSector[dataArray[i].trips[0][l].jsonSector.length -1].arrivalAirportCode;
							var segments = dataArray[i].trips[0][l].jsonSector[0];
							var aname = maps.airlineName[segments.marAirlineCode][lang];
							var aCode = segments.marAirlineCode;
							airlineName.push([aname, totalFare, aCode]);
						}
					}else{
						var arrivalAirportCode = dataArray[i].trips[0][l].jsonSector[dataArray[i].trips[0][l].jsonSector.length -1].arrivalAirportCode;
						var segments = dataArray[i].trips[0][l].jsonSector[0];
						var aname = maps.airlineName[segments.marAirlineCode][lang];
						var aCode = segments.marAirlineCode;
						airlineName.push([aname, totalFare, aCode]);
					}
				}
		   }
		   return airlineName;
        },
        getAirlineException:function(){
			//return ['G9'];
			return [];
		},		
		getAirlineList: function(value){ //produce [Airline_name,lowest_price]...
			  var array = this.genAirlineJunk(value);
	            var map = {};
	            var aCode = {};
	            var airlineNamesWithPrice = [];
	            for (var i = 0; i < array.length; i++) {
	                if (array[i][0] in map) {
	                    map[array[i][0]].push([array[i][1],array[i][2]]);
	                } else {
	                    map[array[i][0]] = [[array[i][1],array[i][2]]];
	                }
	            }
	            for (var key in map) {
	                var priceArr = map[key];
	                var getLowest = priceArr.sort(function (a, b) {
	                    return a[0] - b[0];
	                });
	                airlineNamesWithPrice.push([key,getLowest[0],i18n.t(currencySymbols(flightSerVar.setSelectedCurrency))]);
	            }
				airlineNamesWithPrice.sort(function(a,b){
					 var upA = a[0].toUpperCase();
					 var upB = b[0].toUpperCase();
					 return (upA < upB) ? -1 : (upA > upB) ? 1 : 0;	
				});
				return airlineNamesWithPrice;
	    },
		getPriceList: function(){ //produce [lowest_price,lowest_price...]
			var pList = [];
			var priceData = JSON.parse(JSON.stringify(this.filterData));
			for (i in priceData) {
				var priceObj = priceData[i].jsonFlightPrice;
				if (typeof priceObj !== 'undefined') {
					var totalFare = priceObj.up.totalFare;
					pList.push(parseInt(totalFare));
				}
			}
			if (pList.length > 0){
				for (var i = 0; i < pList.length; i++) {
					if (nn(pList[i], pList) == false) {
						pList.push(pList[i]);
					}
				}
			}
			pList.sort(function(a, b) {
				return a - b;
			});
			return pList;
		},
		airlineNameWithPrice: function(){
	    	var airlineNameWithPrice = flightSerVar.getAirlineList(flightSerVar.functionNBASource());
	    	return airlineNameWithPrice;
	    },
		getStopOverAirport:function(){
			/**
			 * Stop Over Final Array List
			 */
			var stopOverAirportList = [];
			var stopOverReturnAirportList = [];
			
			var stopOverAirports={stopOverAirportList:[],stopOverReturnAirportList:[]};
			/**
			 *Stop Over Airport Collection List Dummy
			 */
			var SACLD = [];
			
			var returnSACLD = [];
			/**
			 * Base Flight Response Object
			 */
			var baseFlightData = this.baseData.searchRes;
			/**
			 *Data map object
			 */
			
			var maps = this.hashmap;
			for(var i in baseFlightData){
				var trip = baseFlightData[i].trips[0];			
				var returnTrip = baseFlightData[i].trips[1] || [] ;			
				for(var e in trip){
					var segments = trip[e].jsonSector;
						for(var l=0; l<segments.length-1; l++){
							var sector = segments[l];
							var stopOverAName = $.trim(maps.airportName[sector.arrAirportCode][lang]);
							var stopOverACode = $.trim(sector.arrAirportCode);
							if(nn(stopOverACode,SACLD)==false){
								SACLD.push(stopOverACode);
								stopOverAirportList.push([stopOverAName,stopOverACode]);
							}
						}
				}
				for(var e in returnTrip){
					var segments = returnTrip[e].jsonSector;
						for(var l=0; l<segments.length-1; l++){
							var sector = segments[l];
							var stopOverAName = $.trim(maps.airportName[sector.arrAirportCode][lang]);
							var stopOverACode = $.trim(sector.arrAirportCode);
							if(nn(stopOverACode,returnSACLD)==false){
								returnSACLD.push(stopOverACode);
								stopOverReturnAirportList.push([stopOverAName,stopOverACode]);
							}
						}
				}
			}
			stopOverAirports.stopOverAirportList = stopOverAirportList;
			stopOverAirports.stopOverReturnAirportList = stopOverReturnAirportList;
			return stopOverAirports;
		},
		getFFPList:function(){
	         var airLineMap = {};		 
	         var ffpMap = {};	
			 // get Airline list
			 var airlineList = 	this.getAirlineList(this.functionNBASource());
			for( i in airlineList){
				airLineMap[airlineList[i][1][1]] = airlineList[i][1][1] ;
			}
			if($('html').hasClass('arabic')) {
				for(ffPrgmArr in ffp.ar){
					if(ffp.ar[ffPrgmArr].airlineCode in airLineMap){
						for(ffPrgm in ffp.ar[ffPrgmArr].ffpPrgms){
							if(ffPrgm in ffpMap){
								ffpMap[ffp.ar[ffPrgmArr].ffpPrgms[ffPrgm]] = ffpMap[ffp.ar[ffPrgmArr].ffpPrgms[ffPrgm]] + ',' +ffp.ar[ffPrgmArr].airlineCode  ;	
							}
							else {
								ffpMap[ffp.ar[ffPrgmArr].ffpPrgms[ffPrgm]] = ffp.ar[ffPrgmArr].airlineCode;				 
							}
						}
					}
				}
			}
			else{
				for(ffPrgmArr in ffp.en){
					if(ffp.en[ffPrgmArr].airlineCode in airLineMap){
						for(ffPrgm in ffp.en[ffPrgmArr].ffpPrgms){
							if(ffPrgm in ffpMap){
								ffpMap[ffp.en[ffPrgmArr].ffpPrgms[ffPrgm]] = ffpMap[ffp.en[ffPrgmArr].ffpPrgms[ffPrgm]] + ',' +ffp.en[ffPrgmArr].airlineCode  ;	
							}
							else {
								ffpMap[ffp.en[ffPrgmArr].ffpPrgms[ffPrgm]] = ffp.en[ffPrgmArr].airlineCode;	
							}
						}
					}
				}
			}
			return ffpMap;
	    },
		getDAEvent:function(){
			var object = this.filterData;
			var FBEDepartureObjArray = [], FBED = [];
			var FBEArrivalObjArray = [], FBEA = [];
			var returnFBEDepartureObjArray = [], returnFBED = [];
			var returnFBEArrivalObjArray = [], returnFBEA = [];
			if (object.length > 0) {
				for (i in object) {
					var baseFromSec = object[i].trips[0];
					var returnBaseFromSec = object[i].trips[1] || [];
					for(var e=0; e<baseFromSec.length; e++){
						var departureLeg = baseFromSec[e].jsonSector[0];
						var arrivalLeg = baseFromSec[e].jsonSector[baseFromSec[e].jsonSector.length -1];
						var departureEventTime = formatDate(departureLeg.depDateAndTime,'events');
						var arrivalEventTime = formatDate(arrivalLeg.arrDateAndTime,'events');
						//Set Departure Time
						if(nn(departureEventTime,FBEDepartureObjArray)===false){
							FBED[departureEventTime] = [cmnDAEventLocalization(departureEventTime)];
							FBEDepartureObjArray.push(departureEventTime);
						}
						//Set Arrival Time
						if(nn(departureEventTime,FBEArrivalObjArray)===false){
							FBEA[arrivalEventTime] = [cmnDAEventLocalization(arrivalEventTime)];
							FBEArrivalObjArray.push(arrivalEventTime);
						}
						//Set the values to the base sector
						baseFromSec[e].departureEvent = departureEventTime;
						baseFromSec[e].arrivalEvent = arrivalEventTime;
						
						//Set Total Duration
						var baseOnwardObj = baseFromSec[e];
						var dDT = formatDate(baseOnwardObj.jsonSector[0].depDateAndTime,'mins');
						var aDT = formatDate(baseOnwardObj.jsonSector[baseOnwardObj.jsonSector.length -1].arrDateAndTime,'mins');
						baseOnwardObj.departureMins = dDT;
						baseOnwardObj.arrivalMins = aDT;
					}
					for(var e=0; e<returnBaseFromSec.length; e++){
						var departureLeg = returnBaseFromSec[e].jsonSector[0];
						var arrivalLeg = returnBaseFromSec[e].jsonSector[returnBaseFromSec[e].jsonSector.length -1];
						var departureEventTime = formatDate(departureLeg.depDateAndTime,'events');
						var arrivalEventTime = formatDate(arrivalLeg.arrDateAndTime,'events');
						//Set Departure Time
						if(nn(departureEventTime,returnFBEDepartureObjArray)===false){
							returnFBED[departureEventTime] = [cmnDAEventLocalization(departureEventTime)];
							returnFBEDepartureObjArray.push(departureEventTime);
						}
						//Set Arrival Time
						if(nn(departureEventTime,returnFBEArrivalObjArray)===false){
							returnFBEA[arrivalEventTime] = [cmnDAEventLocalization(arrivalEventTime)];
							returnFBEArrivalObjArray.push(arrivalEventTime);
						}
						//Set the values to the base sector
						returnBaseFromSec[e].departureEvent = departureEventTime;
						returnBaseFromSec[e].arrivalEvent = arrivalEventTime;
						
						//Set Total Duration
						var baseOnwardObj = returnBaseFromSec[e];
						var dDT = formatDate(baseOnwardObj.jsonSector[0].depDateAndTime,'mins');
						var aDT = formatDate(baseOnwardObj.jsonSector[baseOnwardObj.jsonSector.length -1].arrDateAndTime,'mins');
						baseOnwardObj.departureMins = dDT;
						baseOnwardObj.arrivalMins = aDT;
					}
				}
			}
			return [FBED,FBEA,returnFBED,returnFBEA];
        },
		getNearByAirport:function(){
			var nearByAirport = [],pricelist = [];
			var nearByAirportDummy = [];
			var urlNearbyIataCondition = true;
			var baseObj = this.baseObj;
			var maps = this.hashmap;
			var nbAirportFromURL = this.getArrivalCodeFromURL();
			if(baseObj.length > 0) {
				for (i in baseObj) {					
					var baseFromSec = baseObj[i].trips[0];
					for(var e=0; e<baseFromSec.length; e++){
						var NBAAirportName = maps.airportName[baseFromSec[e].jsonSector[baseFromSec[e].jsonSector.length -1].arrAirportCode][lang];
						var NBAAirportCode = baseFromSec[e].jsonSector[baseFromSec[e].jsonSector.length -1].arrAirportCode;
						baseFromSec[e].arrivalAirportCode = NBAAirportCode;
						if(nbAirportFromURL==NBAAirportCode){
							urlNearbyIataCondition = false;
						}
						if(nbAirportFromURL!=NBAAirportCode){
							if(nn(NBAAirportCode,nearByAirportDummy)==false){
								nearByAirportDummy.push(NBAAirportCode);
								nearByAirport.push([NBAAirportName,NBAAirportCode]);
							}
						}
					}     
				}
			}
			/**
			* Near by airport Price implementation
			*/
			for(var a in nearByAirport){
				if(baseObj.length > 0){
					for (i in baseObj) {					
						var baseFromSec = baseObj[i].trips[0];
						for(var e=0; e<baseFromSec.length; e++){
							var NBAAirportCode = baseFromSec[e].jsonSector[baseFromSec[e].jsonSector.length -1].arrAirportCode;
							if(baseFromSec[e].arrivalAirportCode===nearByAirport[a][1]){
								if(nbAirportFromURL!=NBAAirportCode){
									pricelist.push([baseFromSec[e].arrivalAirportCode,Math.ceil(baseObj[i].jsonFlightPrice.up.totalFare)]);
								}
							}
						}
					}
				}
			} 
			var map = {};
			var nbapricelist = [];
			for (var i = 0; i < pricelist.length; i++) {
				if (pricelist[i][0] in map) {
					map[pricelist[i][0]].push(pricelist[i][1]);
				} else {
					map[pricelist[i][0]] = [pricelist[i][1]];
				}
			}
			for (var key in map) {
				var priceArr = map[key];
				var getLowest = priceArr.sort(function (a, b) {
					return a[0] - b[0];
				});
				getLowest.sort(function (a, b) {
					return a - b;
				});
				nbapricelist.push([key,getLowest[0],i18n.t(currencySymbols(flightSerVar.setSelectedCurrency))]);
			}
			var cur = i18n.t(currencySymbols(flightSerVar.getSelectedCurrency()));
			for(var a in nearByAirport){
				for(var b in nbapricelist){
					if(nbapricelist[b][0]===nearByAirport[a][1]){
						nearByAirport[a].push(nbapricelist[b][1],cur);
					}
				}
			} 
			if(urlNearbyIataCondition==false){
				this.urlNearbyIata = nbAirportFromURL;
			}
			return nearByAirport;
		},
		getStopsList:function(){
			var stopList = [];
			var countStops = 0;
			var nonStopFlightCount = 0,oneStopFlightCount=0,twoStopFlightCount=0,threeStopFlightCount=0,fourStopFlightCount=0,fiveStopFlightCount=0;
			var nonStop = [], oneStop = [], twoStop = [], threeStop = [], fourStop = [], fiveStop = [], stopObj = {};
			var baseObject = this.filterData;
			var nonStopKey = i18n.t("nonStop");
			var oneStopKey = i18n.t("oneStopKey");
			var twoStopKey = i18n.t("twoStopKey");
			var threeStopKey = i18n.t("threeStopKey");
			var fourStopKey = i18n.t("fourStopKey");
			var fiveStopKey = i18n.t("fiveStopKey");
			async.parallel([
				function(callback){					
					for (var i = 0; i < baseObject.length; i++) {
						for (var j = 0; j < baseObject[i].trips[0].length; j++){
							var f = baseObject[i].trips[0][j].jsonSector;
							var totalFare = baseObject[i].jsonFlightPrice.up.totalFare;
							if (f.length == 1) {
								nonStopFlightCount = nonStopFlightCount+1;
								nonStop.push(totalFare);
							}
							if (f.length == 2) {
								oneStopFlightCount = oneStopFlightCount+1;
								oneStop.push(totalFare);
							}
							if (f.length == 3) {
								twoStopFlightCount = twoStopFlightCount+1;
								twoStop.push(totalFare);
							}
							if (f.length == 4) {
								threeStopFlightCount = threeStopFlightCount+1;
								threeStop.push(totalFare);
							}
							if (f.length == 5) {
								fourStopFlightCount = fourStopFlightCount+1;
								fourStop.push(totalFare);
							}
							if (f.length == 6) {
								fiveStopFlightCount = fiveStopFlightCount+1;
								fiveStop.push(totalFare);
							}
						}
					}
					stopObj[nonStopKey] = nonStop;
					stopObj[oneStopKey] = oneStop;
					stopObj[twoStopKey] = twoStop;
					stopObj[threeStopKey] = threeStop;
					stopObj[fourStopKey] = fourStop;
					stopObj[fiveStopKey] = fiveStop;
					return callback();
				},
				function(callback){
					for (var v in stopObj) {
						var _SOC = {
							key: "",
							lowPrice: "",
							keyVal: 0
						};
						stopList.push({key:'currency',value:flightSerVar.getSelectedCurrency()});
						if (typeof stopObj[v] !== 'undefined' && stopObj[v].length > 0) {
							_SOC.key = v;
							_SOC.lowPrice = flightSerVar.getStops(stopObj[v]);
							switch (v) {
							case nonStopKey:
								_SOC.keyVal = 1;
								_SOC.flightsCount = nonStopFlightCount;
							break;
							case oneStopKey:
								_SOC.keyVal = 2;
								_SOC.flightsCount = oneStopFlightCount;
							break;
							case twoStopKey:
								_SOC.keyVal = 3;
								_SOC.flightsCount = twoStopFlightCount;
							break;
							case threeStopKey:
								_SOC.keyVal = 4;
								_SOC.flightsCount = threeStopFlightCount;
							break;
							case fourStopKey:
								_SOC.keyVal = 5;
								_SOC.flightsCount = fourStopFlightCount;
							break;
							case fiveStopKey:
								_SOC.keyVal = 6;
								_SOC.flightsCount = fiveStopFlightCount;
							break;
							}
							if(_SOC.keyVal !== 'undefined' && _SOC.keyVal > 0){
								countStops++;
							}
							stopList.push(_SOC);
						}  
					}
					return callback();
				}
			]);
			return stopList;
		},
		getStops: function(array){
			var outPut = [];
			if (typeof array !== 'undefined' && array.length > 0) {
				outPut = array.sort(function(a, b) {
					return a - b;
				});
			}
			return outPut[0];
		},
		getArrivalCodeFromURL:function(){
			var NBIATA = flightSerVar.getArrStr();
			var i, j,item,array = this.filterData,holder, condition=false;
			for(i = 0, j = array.length; i<j; i++){
				var dPoint = false;
				item = array[i];
					holder =  item.trips[0][item.trips[0].length -1].arrivalAirportCode;
					if(typeof holder !== "undefined" && holder===NBIATA){
						condition = true;
					}
			}
			if(condition==true){
				return flightSerVar.getArrStr();
			}else{
				return '';
			}
		},
		/**
		* Method to get URL query string 
		* @param Query Key
		* @returns
		*/
		getArrStr: function(){
			var arr = cmnGetURLQueryStr('arr')||cmnGetURLQueryStr('arr1');
			return arr;
		},
		/**
		* Method to get URL query string 
		* @param Query Key
		* @returns
		*/
		getDepStr: function(){
			var dep = cmnGetURLQueryStr('dep')||cmnGetURLQueryStr('dep1');
			return dep;
		},
		functionNBASource:function(){
			var NBA = this.urlNearbyIata;
			var GFNA = this.getFilteredNearby();
			var arrCodeFromURL = this.getArrStr();
			var RES = [];
			if(GFNA.length>0){
				RES = GFNA;
			}
			if(typeof NBA !== 'undefined' && NBA!="" && NBA == arrCodeFromURL){
				RES.push(NBA);
			}
			return RES;
		},
		getFilteredNearby:function(){
			var nearby = [];
			var s = $(this.filterSelector.nearByAirport);
			s.each(function(){
				var $this = $(this);
				var $selVal = $.trim($this.val());
				if($this.is(':checked')){
					nearby.push($selVal);
				}
			});
			return nearby;
		},
		baseObjCurChanges:function(cur){
			var baseObj = this.baseObj;
			var currency = this.cExR[cur];
			var ccobj = {};
			var cx = this.cExR;
			for(var j in cx){
				ccobj[j] = parseFloat(cx[j])/parseFloat(currency);
			}
			var $t = this;
			async.series([
        		function(callback){
        			for(var i in baseObj){
        				baseObj[i].jsonFlightPrice.up.uc = cur;
        				baseObj[i].jsonFlightPrice.up.totalFare = (parseFloat(baseObj[i].jsonFlightPrice.totalFare)*parseFloat(ccobj[baseObj[i].jsonFlightPrice.ic])).toFixed(2);
        				baseObj[i].jsonFlightPrice.up.baseFare = (parseFloat(baseObj[i].jsonFlightPrice.baseFare)*parseFloat(ccobj[baseObj[i].jsonFlightPrice.ic])).toFixed(2);
        				baseObj[i].jsonFlightPrice.up.taxes = (parseFloat(baseObj[i].jsonFlightPrice.taxes)*parseFloat(ccobj[baseObj[i].jsonFlightPrice.ic])).toFixed(2);
        			}
        			return callback();
        		},
        		function(callback){
        			$t.baseObj = baseObj;
        			return callback();
        		}
        		],function(err){					
			});
		},
		ccm:function(cur){
			var baseObj = this.baseObj;
			var currency = this.cExR[cur];
			var ccobj = {};
			var cx = this.cExR;
			for(var j in cx){
				ccobj[j] = parseFloat(cx[j])/parseFloat(currency);
			}
			var $t = this;
			async.series([
        		function(callback){
        			for(var i in baseObj){
        				baseObj[i].jsonFlightPrice.up.uc = cur;
        				baseObj[i].jsonFlightPrice.up.totalFare = (parseFloat(baseObj[i].jsonFlightPrice.totalFare)*parseFloat(ccobj[baseObj[i].jsonFlightPrice.ic])).toFixed(2);
        				baseObj[i].jsonFlightPrice.up.baseFare = (parseFloat(baseObj[i].jsonFlightPrice.baseFare)*parseFloat(ccobj[baseObj[i].jsonFlightPrice.ic])).toFixed(2);
        				baseObj[i].jsonFlightPrice.up.taxes = (parseFloat(baseObj[i].jsonFlightPrice.taxes)*parseFloat(ccobj[baseObj[i].jsonFlightPrice.ic])).toFixed(2);
        			}
        			return callback();
        		},
        		function(callback){
        			$t.filterData = baseObj;
        			$t.setSelectedCurrency = cur;
        			return callback();
        		},
        		function(callback){
        			$t.loadFilter();
        			return callback();
        		}
        		],function(err){					
				$t.resetPriceSlider($t.filterData);
				$t.currencyChange = true;
				$t.render(true);
				if(cmnGetURLQueryStr('tripType')==2){
					$t.dynamicFilterdata.roundTrp = true;
				}
				$t.loadTemplate('flight-filter-view',$t.dynamicFilterdata,$('#filterBO'));
				$t.dynamicFilterdata.AirlineNameWP = $t.dynamicFilterdata.AirlineNameWP.sort(function(a,b){
					return a[1][0]-b[1][0];
				});
				if($t.resultsError){
					$t.loadTemplate('filter_airlineIcons_template',$t.dynamicFilterdata.AirlineNameWP,$('#_filter_airlineIcons_template'));
					loadAirlineGridwithOwl();
				}
				setTimeout(function(){
					ULlessMore(['airlineName-filter-list','_stopOverAirport-filter-list','_returnStopOverAirport-filter-list']);
				}, 2000);
				if(i18n.options.lng =='ar'){
					var blueTxt = $('#_nearByAirport-filter-list span.blue-txt');
					if(blueTxt.width() > 60) {
						$('#_nearByAirport-filter-list span.ar-name').addClass('smWdth');
						$('#airlineName-filter-list span.ar-name').addClass('smWdth');
					}
				}	
						
			});
		},
		removeRecord: function(index){
			var data = flightSerVar.baseObj;
			for(var i in data){
				if(data[i].index==index){
					if(typeof data[i].trips[1]!=='undefined' && typeof data[i].trips[2]!=='undefined' && typeof data[i].trips[3]!=='undefined' && typeof data[i].trips[4]!=='undefined' && typeof data[i].trips[5]!=='undefined'){
						if(data[i].trips[0].length==1 && data[i].trips[1].length==1  && data[i].trips[2].length==1 && data[i].trips[3].length==1 && data[i].trips[4].length==1 && data[i].trips[5].length==1){
							data.splice(i,1);
						}
					}else if(typeof data[i].trips[1]!=='undefined' && typeof data[i].trips[2]!=='undefined' && typeof data[i].trips[3]!=='undefined' && typeof data[i].trips[4]!=='undefined'){
						if(data[i].trips[0].length==1 && data[i].trips[1].length==1  && data[i].trips[2].length==1 && data[i].trips[3].length==1 && data[i].trips[4].length==1){
							data.splice(i,1);
						}
					}else if(typeof data[i].trips[1]!=='undefined' && typeof data[i].trips[2]!=='undefined'  && typeof data[i].trips[3]!=='undefined'){
						if(data[i].trips[0].length==1 && data[i].trips[1].length==1  && data[i].trips[2].length==1 && data[i].trips[3].length==1){
							data.splice(i,1);
						}
					}else if(typeof data[i].trips[1]!=='undefined' && typeof data[i].trips[2]!=='undefined'){
						if(data[i].trips[0].length==1 && data[i].trips[1].length==1  && data[i].trips[2].length==1){
							data.splice(i,1);
						}
					}else if(typeof data[i].trips[1]!=='undefined'){
						if(data[i].trips[0].length==1 && data[i].trips[1].length==1){
							data.splice(i,1);
						}
					}else if(data[i].trips[0].length==1){
						data.splice(i,1);
					}
				}
			}
			flightSerVar.filterData = data;
			flightSerVar.render('removeRecord');
		},
		updatePriceGrid: function(){
			var target = $('.priceGrid');
			target.each(function(){
				$(this).find('.mobileBooknow').removeAttr('style');
				if($('.fphPricePrt').length){
					var containerHeight = $(this).parents('.item.primary-item').innerHeight();
					var fphPricePrt = $(this).find('.fphPricePrt').height();
					if(containerHeight>370){
						$(this).find('.mobileBooknow').css({
							'padding-top': (containerHeight) / 2 - fphPricePrt+70,
							'height': containerHeight
						});
					} else {
						$(this).find('.mobileBooknow').css({
							'padding-top': 20,
							'height': 300
						});
					}
				
				} else {
					var containerHeight = $(this).parents('.item.primary-item').innerHeight();
					$(this).find('.mobileBooknow').css({       
						'padding-top':(containerHeight)/2 -60,
						'height':containerHeight
					});
				}
				
				
				
			});
		},
		initialRenderFareCombo:function(res,comboRes){
			if(comboRes){
						loadTemplate('flight-modify-view',{},$('.modifyBlock'),flightComboSerVar.dynamicTemplate);
						modifyPageContent(res,true);
						initDatePickerComponent();
						initPredictiveSearchComponent();
						autoFill(); 
				}
			flightComboSerVar.onwardRender(false,function(renderedData,onwardTrips){
					var onwTrips = JSON.parse(JSON.stringify(onwardTrips));
					paginationOptInitFF = cmnPaginationConfig(flightComboSerVar.pageselectCallback);
					$("#pagination").pagination(onwardTrips.length, paginationOptInitFF,onwTrips );
					if(!flightComboSerVar.checkInit)					
					flightComboSerVar.init();	
					//flightComboSerVar.initFCData();
					flightComboSerVar.loadOnwFilter();
					flightComboSerVar.updateFilghtCount();
					flightComboSerVar.filterUIArry = [];  // clear filter data if any
					flightComboSerVar.generateComboFilterUI([]); //clear selected filters UI
					loadTemplate('flight-OnwFilter-fareCombo',flightComboSerVar.dynamicFilterdata,$('#filterBO'),flightComboSerVar.dynamicTemplate);
					flightComboSerVar.resetOnwardPriceSlider(flightComboSerVar.onwardFilterData);
					flightComboSerVar.dynamicFilterdata.onwardAirlineNameWP = flightComboSerVar.dynamicFilterdata.onwardAirlineNameWP.sort(function(a,b){
					return a[1][0]-b[1][0];
					});
					loadTemplate('filter_airlineIcons_template',flightComboSerVar.dynamicFilterdata.onwardAirlineNameWP,$('#_filter_airlineIcons_template'),flightComboSerVar.dynamicTemplate);
					loadAirlineGridwithOwl();
					setTimeout(function(){
						$('.comboSteps').show(500);
							ULlessMore(['airlineName-filter-list_FF','_stopOverAirport-filter-list_FF']);
					}, 2000);
					loadTemplate('flight-sort-fareCombo',{onwFF:true},$('#flightResultsSortingPanel'),flightComboSerVar.dynamicTemplate);
					
					_langGlobal.langInit();
					pricetagConvert.init(); // divide decimal point	
					if(flightSerVar.topairline!==''){						
						$('#airlineName-filter-list_FF  li').each(function(){
							if($(this).find('input').val()==flightSerVar.topairline){								
								$(this).find('input[type=checkbox]').trigger('click');
							}
							});
					}
					if(flightSerVar.nonStopFlights=='true'){
						$('#nonStopRoundTripFlights').trigger('click');
						$('#nonStopOneWayFlights').trigger('click');
						$('#nonStopMultiCityFlights').trigger('click');
						$('#stops-filter-list_FF ul li').each(function(){
							if($(this).find('input').val()=='1'){
								$(this).find('input[type=checkbox]').trigger('click');
							}
						});
					}
					flyinCountDown.init({countDownElm:'_countDown-Value',displayElm:'countdown'});
				});
		},
	 loadQitaftripSummary : function(args)
		{
			 $.get('/common/themes/v2/tmpl/flight/flightReview.ejs?v='+Math.random(),{},function(template){
				  flightSerVar.dynamicTemplate = template;	
				  var data = {
				    	     responseData:args.responseData
				  }
				   	var tripSummary = 'trip-summary';
					 if(data.responseData.fareComboSelected){
					  tripSummary = 'fareCombo-tripSummary';					  
				     }
				  loadTemplate(tripSummary,data,$('#tripSummaryDetails'),template);	
				  loadTemplate('review-terms', data, $('#review-terms'), template);
				  $('._dynamicPayBtn').hide();
				   var pmntGatwyBlk = $('.opcPayment').find('.panel');
				  $(pmntGatwyBlk).each(function(){
				  	if($(this).is(':visible') && $(this).find('.panel-heading').hasClass('active')){
				  	 var datagateway = $(this).find('.active').attr('data-gateway');	
				  	
				  $('.buttons').find('#paymeBtn').attr('onclick','payMeFlight('+datagateway+',this)');
				  }
				  });
				  var responseData = args.responseData;
				  if(!responseData.fareComboSelected && responseData.coupondetails && responseData.coupondetails !== null){
					 $('.totalSec li:first-child').after('<li><span class="pull-left">'+
					 i18n.t('couponDiscount')+ '</span><span class="pull-right green-txt">'+i18n.t(responseData.flightItineraries.jsonFlightPrice.up.uc)+'  <elm class="_priceTag">'+responseData.coupondetails.deductAmount+'</elm></span></li>');
				  }
				  if(!responseData.fareComboSelected && typeof responseData.loyaltydetails != 'undefined' && responseData.loyaltydetails !== null){
				 $('.totalSec li:first-child').after('<li class="flyinRRedeem"><span class="pull-left">'+
				 i18n.t('flyinRewardsRedeemed')+ '</span><span class="pull-right green-txt">'+i18n.t(responseData.flightItineraries.jsonFlightPrice.up.uc)+' <elm class="_priceTag">'+responseData.loyaltydetails.redemptionUCAmount+'</elm></span></li>');
				}
				if(responseData.fareComboSelected && responseData.qitafObj && responseData.qitafObj.qitafSuccess){
					$('.totalSec li:first-child').after('<li class="redeemQitaf"><span class="pull-left">'+
					i18n.t('redeemedAmount')+'</span><span class="pull-right price totalFare green-txt" >'+i18n.t('SAR')+'<elm class="_priceTag">'+responseData.qitafObj.redeemAmount+'</elm></span></li>');
				}  
				  $("#qitafVal").val("true");
				  pricetagConvert.init();
			});
		},
		
		loadFlightCouponData : function(data)
		{
			var responseData = JSON.parse(data);
			var totalDeductedAmt = 0;
			 $.get('/common/themes/v2/tmpl/flight/flightReview.ejs?v='+Math.random(),{},function(template){
			 	  $('.flyinRRedeem').remove();
				  $('.cpnDisc').remove();
				  $('.totalPrice.htlFltTotPrice').remove();
				  flightSerVar.dynamicTemplate = template;	
				  $('.redeemPoints .nav li a').click(function (e) {
					  e.preventDefault()
					  $(this).tab('show')
					});
					 
				  var data = {
				    	     responseData:responseData
				  };
				     var tripSummary = 'trip-summary';
					 var className = '.totalSec';
					 var lyltclassName = '.tistlPointsSmry';
					 if(data.responseData.fareComboSelected){
					  tripSummary = 'fareCombo-tripSummary';					  
				     }
				  loadTemplate(tripSummary,data,$('#tripSummaryDetails'),template);				  
				  loadTemplate('review-terms', data, $('#review-terms'), template);	
				  $('._dynamicPayBtn').hide();
				  var pmntGatwyBlk = $('.opcPayment').find('.panel');
				  $(pmntGatwyBlk).each(function(){
				  	if($(this).is(':visible') && $(this).find('.panel-heading').hasClass('active')){
				  	 var datagateway = $(this).find('.active').attr('data-gateway');					  	 
				  	if(datagateway=="'BANKTRANSFER'")
				  	{
				  		$('.buttons').find('#paymeBtn').hide();
				  		$('.bankTransferBtn').show();
				  	}
				  	else{
				  		$('.buttons').find('#paymeBtn').attr('onclick','payMeFlight('+datagateway+',this)');
				  	}
				  }
				  });
				 
				  //Flight Summary Travellers info 				  
				  fltSmryTraDrpDwn();
				if(typeof responseData.coupondetails != 'undefined' && responseData.coupondetails !== null){
				totalDeductedAmt = parseFloat(totalDeductedAmt) +  parseFloat(responseData.coupondetails.deductSarAmount);
				 $(className+' li:first-child').after('<li class="cpnDisc"><span class="pull-left">'+
				 i18n.t('couponDiscount')+ '</span><span class="pull-right green-txt '+(responseData.flightItineraries.jsonFlightPrice.up.uc == "EGP" ? '_egpCur': '')+'">'+i18n.t(responseData.flightItineraries.jsonFlightPrice.up.uc)+' <elm class="_priceTag">'+responseData.coupondetails.deductAmount+'</elm></span></li>');
				}
				if(typeof responseData.loyaltydetails != 'undefined' && responseData.loyaltydetails !== null){
					//totalDeductedAmt = parseFloat(totalDeductedAmt) + parseFloat(responseData.loyaltydetails.redemptionAmount);
				 $(className+' li:first-child').after('<li class="flyinRRedeem"><span class="pull-left">'+
				 i18n.t('flyinRewardsRedeemed')+ '</span><span class="pull-right green-txt'+(responseData.flightItineraries.jsonFlightPrice.up.uc == "EGP" ? '_egpCur': '')+'">'+i18n.t(responseData.flightItineraries.jsonFlightPrice.up.uc)+' <elm class="_priceTag">'+responseData.loyaltydetails.redemptionUCAmount+'</elm></span></li>');
				}

				if(data.responseData.fareComboSelected && ((typeof responseData.coupondetails != 'undefined' && responseData.coupondetails !== null) || (typeof responseData.loyaltydetails != 'undefined' && responseData.loyaltydetails !== null))){					
					var couponDiscount = (responseData.coupondetails && responseData.coupondetails.deductAmount) ? responseData.coupondetails.deductAmount : 0;
					var qitafDiscount =  (responseData.qitafObj && responseData.qitafObj.qitafSuccess) ? responseData.qitafObj.convertedRedeemAmt : 0;
					var loyaltyDiscount =  (responseData.loyaltydetails && responseData.loyaltydetails.redemptionUCAmount) ? responseData.loyaltydetails.redemptionUCAmount : 0;
					var totalDiscount = parseFloat(couponDiscount) + parseFloat(qitafDiscount) + parseFloat(loyaltyDiscount); 
					$(className+' li:last-child').after('<li class="totalPrice htlFltTotPrice"><span class="pull-left">'+
				 	i18n.t('totalPayableAmount')+ '</span><span class="pull-right price totalFare" >'+i18n.t(responseData.flightItineraries.jsonFlightPrice.up.uc)+' <elm class="_priceTag">'+(parseFloat(responseData.flightItineraries.jsonFlightPrice.up.totalFare - totalDiscount)).toFixed(2)+'</elm></span></li>');
				}
				var sarLyltBkngAmt = (parseFloat(responseData.paymentObj.sarAmount) - parseFloat(totalDeductedAmt)).toFixed(2);
				var lytObj = $('._ltyInfo');
				$(lytObj).attr('data-bamt',sarLyltBkngAmt);			
				/*if(responseData.loyaltydetails !== null){
					$(lyltclassName+' li:first-child').after('<li class="green-txt"><span class="pull-left">'+
					i18n.t('flyinRewardsRedeemed')+ '</span><span class="pull-right">'+i18n.t(responseData.flightItineraries.jsonFlightPrice.up.uc)+' <strong class="_priceTag">'+responseData.loyaltydetails.redemptionUCAmount+'</strong></span></li>');
				}*/
				pricetagConvert.init(); 
				
			});
		},
		loadFlightLoyaltyData : function(data)
		{
			var responseData = JSON.parse(data);
			 $.get('/common/themes/v2/tmpl/flight/flightReview.ejs?v='+Math.random(),{},function(template){
			 	  $('.flyinRRedeem').remove();
				  $('.cpnDisc').remove();
				  $('.totalPrice.htlFltTotPrice').remove();
				  flightSerVar.dynamicTemplate = template;	
				  $('.redeemPoints .nav li a').click(function (e) {
					  e.preventDefault()
					  $(this).tab('show')
					});
					 
				  var data = {
				    	     responseData:responseData
				  };
				     var tripSummary = 'trip-summary';
					 var lyltclassName = '.tistlPointsSmry';
					 var cpnclassName = '.totalSec';
					 if(data.responseData.fareComboSelected){
					  tripSummary = 'fareCombo-tripSummary';					  
				     }
				  loadTemplate(tripSummary,data,$('#tripSummaryDetails'),template);				  
				  loadTemplate('review-terms', data, $('#review-terms'), template);	
				  $('._dynamicPayBtn').hide();
				   var pmntGatwyBlk = $('.opcPayment').find('.panel');
				  $(pmntGatwyBlk).each(function(){
				  	if($(this).is(':visible') && $(this).find('.panel-heading').hasClass('active')){
				  	 var datagateway = $(this).find('.active').attr('data-gateway');	
				  	
				  $('.buttons').find('#paymeBtn').attr('onclick','payMeFlight('+datagateway+',this)');
				  }
				  });
				  //Flight Summary Travellers info 				  
				  fltSmryTraDrpDwn();
				/*if(responseData.loyaltydetails !== null){
				 $(lyltclassName+' li:first-child').after('<li class="green-txt"><span class="pull-left">'+
				 i18n.t('flyinRewardsRedeemed')+ '</span><span class="pull-right">'+i18n.t(responseData.flightItineraries.jsonFlightPrice.up.uc)+' <strong class="_priceTag">'+responseData.loyaltydetails.redemptionUCAmount+'</strong></span></li>');
				}*/
				if(typeof responseData.loyaltydetails != 'undefined' && responseData.loyaltydetails !== null){
				 $(cpnclassName+' li:first-child').after('<li class="flyinRRedeem"><span class="pull-left">'+
				 i18n.t('flyinRewardsRedeemed')+ '</span><span class="pull-right green-txt">'+i18n.t(responseData.flightItineraries.jsonFlightPrice.up.uc)+' <elm class="_priceTag">'+responseData.loyaltydetails.redemptionUCAmount+'</elm></span></li>');
				}
				if(data.responseData.fareComboSelected &&((typeof responseData.loyaltydetails != 'undefined' && responseData.loyaltydetails !== null) || (typeof responseData.coupondetails != 'undefined' && responseData.coupondetails !== null) ||(responseData.qitafObj && responseData.qitafObj.qitafSuccess))){
					var couponDiscount = (responseData.coupondetails && responseData.coupondetails.deductAmount) ? responseData.coupondetails.deductAmount : 0;
					var qitafDiscount =  (responseData.qitafObj && responseData.qitafObj.qitafSuccess) ? responseData.qitafObj.convertedRedeemAmt : 0;
					var loyaltyDiscount =  (responseData.loyaltydetails && responseData.loyaltydetails.redemptionUCAmount) ? responseData.loyaltydetails.redemptionUCAmount : 0;
					var totalDiscount = parseFloat(couponDiscount) + parseFloat(qitafDiscount) + parseFloat(loyaltyDiscount); 
					$(cpnclassName+' li:last-child').after('<li class="totalPrice htlFltTotPrice"><span class="pull-left">'+
				 	i18n.t('totalPayableAmount')+ '</span><span class="pull-right price totalFare" >'+i18n.t(responseData.flightItineraries.jsonFlightPrice.up.uc)+' <elm class="_priceTag">'+(parseFloat(responseData.flightItineraries.jsonFlightPrice.up.totalFare - totalDiscount)).toFixed(2)+'</elm></span></li>');
				}	
				if(typeof responseData.coupondetails != 'undefined' && responseData.coupondetails !== null){
				 $(cpnclassName+' li:first-child').after('<li class="cpnDisc"><span class="pull-left">'+
				 i18n.t('couponDiscount')+ '</span><span class="pull-right green-txt '+(responseData.flightItineraries.jsonFlightPrice.up.uc == "EGP" ? '_egpCur': '')+'">'+i18n.t(responseData.flightItineraries.jsonFlightPrice.up.uc)+' <elm class="_priceTag">'+responseData.coupondetails.deductAmount+'</elm></span></li>');

				}
 				
				pricetagConvert.init(); 
				
			});
		},
		loadFlightCCDiscountData : function(data)
		{
			var responseData = data;
			var totalDeductedAmt = 0;
			 $.get('/common/themes/v2/tmpl/flight/flightReview.ejs?v='+Math.random(),{},function(template){
			 	 // $('.flyinRRedeem').remove();
				 // $('.cpnDisc').remove();
				//  $('.totalPrice.htlFltTotPrice').remove();
				  flightSerVar.dynamicTemplate = template;	
				  $('.redeemPoints .nav li a').click(function (e) {
					  e.preventDefault()
					  $(this).tab('show')
					});
					 
				  var data = {
				    	     responseData:responseData
				  };
				     var tripSummary = 'trip-summary';
					 var className = '.totalSec';
					 if(data.responseData.fareComboSelected){
					  tripSummary = 'fareCombo-tripSummary';					  
				     }
				  loadTemplate(tripSummary,data,$('#tripSummaryDetails'),template);				  
				  loadTemplate('review-terms', data, $('#review-terms'), template);	
				  $('._dynamicPayBtn').hide();
				  var pmntGatwyBlk = $('.opcPayment').find('.panel');
				  $(pmntGatwyBlk).each(function(){
				  	if($(this).is(':visible') && $(this).find('.panel-heading').hasClass('active')){
				  	 var datagateway = $(this).find('.active').attr('data-gateway');					  	 
				  	if(datagateway=="'BANKTRANSFER'")
				  	{
				  		$('.buttons').find('#paymeBtn').hide();
				  		$('.bankTransferBtn').show();
				  	}
				  	else{
				  		$('.buttons').find('#paymeBtn').attr('onclick','payMeFlight('+datagateway+',this)');
				  	}
				  }
				  });
				  var ccDiscount=(responseData.ccdInfo) ? parseFloat(responseData.ccdInfo.deductAmount).toFixed(2) : 0;
				  //Flight Summary Travellers info 				  
				  fltSmryTraDrpDwn();
				if(typeof responseData.coupondetails != 'undefined' && responseData.coupondetails !== null){
				totalDeductedAmt = parseFloat(totalDeductedAmt) +  parseFloat(responseData.coupondetails.deductSarAmount);
				 $(className+' li:first-child').after('<li class="cpnDisc"><span class="pull-left">'+
				 i18n.t('couponDiscount')+ '</span><span class="pull-right green-txt '+(responseData.flightItineraries.jsonFlightPrice.up.uc == "EGP" ? '_egpCur': '')+'">'+i18n.t(responseData.flightItineraries.jsonFlightPrice.up.uc)+' <elm class="_priceTag">'+responseData.coupondetails.deductAmount+'</elm></span></li>');
				}
				if(typeof responseData.loyaltydetails != 'undefined' && responseData.loyaltydetails !== null){
					//totalDeductedAmt = parseFloat(totalDeductedAmt) + parseFloat(responseData.loyaltydetails.redemptionAmount);
				 $(className+' li:first-child').after('<li class="flyinRRedeem"><span class="pull-left">'+
				 i18n.t('flyinRewardsRedeemed')+ '</span><span class="pull-right green-txt'+(responseData.flightItineraries.jsonFlightPrice.up.uc == "EGP" ? '_egpCur': '')+'">'+i18n.t(responseData.flightItineraries.jsonFlightPrice.up.uc)+' <elm class="_priceTag">'+responseData.loyaltydetails.redemptionUCAmount+'</elm></span></li>');
				}
				if(typeof responseData.ccdInfo !='undefined' && responseData.ccdInfo !== null){
					 $(className+' li:first-child').after('<li class="flyinRRedeem"><span class="pull-left">'+
				 i18n.t('creditCardDisc')+ '</span><span class="pull-right green-txt'+(responseData.flightItineraries.jsonFlightPrice.up.uc == "EGP" ? '_egpCur': '')+'">'+i18n.t(responseData.flightItineraries.jsonFlightPrice.up.uc)+' <elm class="_priceTag">'+ccDiscount+'</elm></span></li>');
				}

				if(data.responseData.fareComboSelected && ((typeof responseData.coupondetails != 'undefined' && responseData.coupondetails !== null) || (typeof responseData.loyaltydetails != 'undefined' && responseData.loyaltydetails !== null) || (responseData.ccdInfo !== undefined && responseData.ccdInfo !== null))){					
					var couponDiscount = (responseData.coupondetails && responseData.coupondetails.deductAmount) ? responseData.coupondetails.deductAmount : 0;
					var qitafDiscount =  (responseData.qitafObj && responseData.qitafObj.qitafSuccess) ? responseData.qitafObj.convertedRedeemAmt : 0;
					var loyaltyDiscount =  (responseData.loyaltydetails && responseData.loyaltydetails.redemptionUCAmount) ? responseData.loyaltydetails.redemptionUCAmount : 0;
					var totalDiscount = parseFloat(couponDiscount) + parseFloat(qitafDiscount) + parseFloat(loyaltyDiscount) +parseFloat(ccDiscount); 
					$(className+' li:last-child').after('<li class="totalPrice htlFltTotPrice"><span class="pull-left">'+
				 	i18n.t('totalPayableAmount')+ '</span><span class="pull-right price totalFare" >'+i18n.t(responseData.flightItineraries.jsonFlightPrice.up.uc)+' <elm class="_priceTag">'+(parseFloat(responseData.flightItineraries.jsonFlightPrice.up.totalFare - totalDiscount)).toFixed(2)+'</elm></span></li>');
				}
				var sarLyltBkngAmt = (parseFloat(responseData.paymentObj.sarAmount) - parseFloat(totalDeductedAmt)).toFixed(2);
				var lytObj = $('._ltyInfo');
				$(lytObj).attr('data-bamt',sarLyltBkngAmt);			
				/*if(responseData.loyaltydetails !== null){
					$(lyltclassName+' li:first-child').after('<li class="green-txt"><span class="pull-left">'+
					i18n.t('flyinRewardsRedeemed')+ '</span><span class="pull-right">'+i18n.t(responseData.flightItineraries.jsonFlightPrice.up.uc)+' <strong class="_priceTag">'+responseData.loyaltydetails.redemptionUCAmount+'</strong></span></li>');
				}*/
				pricetagConvert.init(); 
				
			});
		},
		pageselectCallback : function(page_index, filterData){
			//Item per page
			var items_per_page = 30;
			var max_elem = Math.min((page_index+1) * items_per_page, filterData.length);
			//Index Starting number
			var start = page_index*items_per_page;
			//Index ending number
			var end = max_elem;
			//final result after indexing
			if(filterData.length==0){
				//$('.fNoFilteredResults').attr('style','display:block');				
				$('body').addClass('resetFltrLdr');
				$('.filter_loader').show();
				flightSerVar.resetNoResults = true;
				//$('.resetFilterTxt').show();
				$('.yhfReset').trigger('click');
			}else if((filterData.length>0) && flightSerVar.resetNoResults){
				if($('body').hasClass('resetFltrLdr'))
					$('body').removeClass('resetFltrLdr');
				$('.filter_loader').hide();
				$('.resetFilterTxt').show();
				flightSerVar.resetNoResults = false;
			}else{
				//$('.fNoFilteredResults').attr('style','display:none');
				if($('body').hasClass('resetFltrLdr'))
					$('body').removeClass('resetFltrLdr');
				$('.filter_loader').hide();
				$('.resetFilterTxt').hide();
			}
			var result = filterData.slice(start,end);
			var data = {
				maps: flightSerVar.hashmap,
				headerInfo: flightSerVar.headerInfo,
				uuid: flightSerVar.uuid,
				searchRes: result,
				tripType: cmnGetURLQueryStr('tripType'),
				lang: i18n.options.lng
			};	
			//console.log(data);
			flightSerVar.loadTemplate('flight-results-view',data,$('.flightResultContainer'),
					function(){	
				ULTriplessMoreForLegs(['_flight_trip1','_flight_trip2','_flight_trip3'],function(){
					setTimeout(function(){ 
						var target = $('.priceGrid');
						target.each(function(){
							var containerHeight = $(this).parents('.item.primary-item').innerHeight();
							$(this).find('.mobileBooknow').css({       
								'padding-top':(containerHeight)/2 -60,
								'height':containerHeight
							});
						});
					 },80);
				}); 
				//$.loadingPageAnimation();
				$('.loading_popup_flight').remove();
				$('body').css('overflow','');
				$('.tt').tooltip();
				pricetagConvert.init();
				flyinCountDown.init({countDownElm:'_countDown-Value',displayElm:'countdown'});
			});
			if(flightSerVar.wegoRslts){
				$('h2.allFlights').show();
				flightSerVar.wegoRslts = false;
			}
			if(flightSerVar.currencyChange){
				$('.yhfReset').trigger('click');
				flightSerVar.currencyChange = false;
			}
			$('.dynamic_results_loader').hide();
			if(flightSerVar.validateMS){
				$('.youHaveFiltered').hide();
			}
			flightSerVar.validateMS = false;
			//flightSerVar.langRender();	
			 //flightSerVar.preSelectRadio();  
			setTimeout(function(){			
				//for selecting the radio input when clicking on li element.
				$('.fltResultsGridBrd').each(function(){
					$(this).find('li').on('click',function(){
						 $(this).find('input:radio').prop('checked', true);
						flightSerVar.dyanamicRadioSelection($(this));
					});
				});
			},100);
			$(".flightResultContainer .fltResults .flightTo .plus1Date.tooltipCustom").mouseenter(function() {
				  $(this).parent().addClass('toolTipOverlap')
			   }).mouseleave(function () {
				   $(this).parent().removeClass('toolTipOverlap')
			 });
			return false;
	}
	}
}());


/**
 * For dynamic showmore and showless for results
 */
$('body').on('click', '._showHideLessMore', function(e) {
	e.preventDefault();
	var $this = $(this);
	var curUl = $this.parents('.fltResultsGridBrd').find('ul');
	if($this.hasClass('showMore')) {
		$this.text(i18n.t('showLesLabel'));
		$this.removeClass('showMore');
		$this.addClass('showLess');
		curUl.children().show();
		flightShowMore("Show");
	}else{
		curUl.children().hide().slice(0,3).show();
		$this.text(i18n.t('showMoreLabel'));
		$this.removeClass('showLess');
		$this.addClass('showMore');
		flightShowMore("Hide");
	}
	flightSerVar.updatePriceGrid();
});  

/**
 * Method to truncate HTML List to a limited number of reocrd by adding a Less/More view option for results
 * @param classArray
 * @param callback
 * @returns
 */
 function ULTriplessMoreForLegs(classArray,callback){
	for(var i in classArray){
		$('.'+classArray[i]).each(function(){
			var $this = $(this);
			var getSize = $this.children().size();
			if(getSize > 3){
				$this.children().hide().slice(0,3).show();
				var $showFilterObj = $this.parent('.showFilters').find('a._showHideLessMore');
				if($showFilterObj.length == 0){
				$this.after('<span class="moreOpt"><a href="javascript:void(0);" class="_showHideLessMore showMore">'+i18n.t("showMoreLabel")+'</a></span>');
				}
			}
		});
	}
	return callback();
}



/**
*@description Flight Results Refresh Rendering
*/	
function flightSearchOnLoad(){
	var url = window.location.href;
	furlPush(url);
}


/**
 * RoundTrip validations for Home page
 */
function validateRoundTrip(terms, aCode, elm){
	//Modify Search scenario 
	if($(elm).length){
		flightSerVar.validateMS = true;
	}
	var aCode = aCode;
	var roundFrom = $('#roundFrom');
	var roundTo = $('#roundTo');
	var dupCodeMsg = $('#dupCodeMsg'); 
	var roundFromId = $('#roundFromId');
	var toRoundID = $('#toRoundID');
	var classType =$('#rondtrpClass, #modifySearchClassType');// not required
	var isDirectFlight= false;
	var isChecked = $('#nonStopRoundTripFlights, #modifyNonStopOneWayFlights');
	if(isChecked.prop('checked')){
		isDirectFlight= true;
	}
	var datef = $('#rThdateFHidden, #rThdateFM');
	var datet = $('#rThdateTHidden, #rThdateTM');
	var date1 = $('._datepicker.fromtwoway, ._datepicker.mmfromtwoway');
	var date2 = $('._datepicker.totwoway, ._datepicker.mmtotwoway');	
	if(roundFromId.attr('value')=="" || typeof roundFromId.attr('value') == "undefined"){		
		//scrollTopValidation();
		return cmnSrchVal(roundFrom , roundFrom.attr('data-err'));
	}else{
		roundFrom.removeClass('error');
	}
	if(toRoundID.attr('value')=="" || typeof toRoundID.attr('value')=="undefined"){		
		//scrollTopValidation();
		return cmnSrchVal(roundTo , roundTo.attr('data-err'));
	}else{
		roundTo.removeClass('error');
	}
	if(roundFromId.attr('value')!="" && toRoundID.attr('value')!=""){
		if(roundFromId.attr('value') == toRoundID.attr('value')){
			//scrollTopValidation();
			roundFrom.addClass('error');
			return cmnSrchVal(roundTo , i18n.t('fromToDestNotSame'));
		}
		else{
			roundFrom.removeClass('error');
			roundTo.removeClass('error');
		}
	}
	if(date1.val()=="" || date1.val()=="Invalid date" ){
		//scrollTopValidation();
		return cmnSrchVal(date1 , i18n.t('requiredDepDatemessage'));
	}else{
		date1.removeClass('error');
	} 
	if(date2.val()==""){
		//scrollTopValidation();
		return cmnSrchVal(date2 , i18n.t('requiredReturnDatemessage'));
	}else{
		date2.removeClass('error');
	}
	if(datef.val()!="" && datet.val()!="" && new Date(datef.val()) > new Date(datet.val())){
		return cmnSrchVal(date2, i18n.t("reqValReturnDatemsg"));
	}else{
		date2.removeClass('error');
	}
	btnLoadingAnimation($('#roundTripButton'));
	btnLoadingAnimation($('.modiRTButton'));
	btnLoadingAnimation($('.airlineTop'));
	setTimeout(function(){
		$("#roundTripButton").attr("disabled", "disabled");
		$(".modiRTButton").attr("disabled", "disabled"); 
		$(".airlineTop").attr("disabled", "disabled");
	},200);
	$("#roundTripButton").val(i18n.t('processingTxt'));
	$(".airlineTop").val(i18n.t('processingTxt'));
	 var cbnv;
	if($("#classType").val()=="Business"){
		cbnv="b";
	} else {
		if($("#classType").val()=="First"){
				cbnv="f";
		}
	}
	var opt = {
		tripType:2,
		dep:roundFromId.val(),
		arr:toRoundID.val(),
		depdate:moment(datef.val()).format('YYYY-MM-DD'),
		arrdate:moment(datet.val()).format('YYYY-MM-DD'),
		adt:$('.elmAdult').val() || 1,
		chd:$('.elmChild').val() || 0,
		inf:$('.elmInfant').val() || 0,
		cbn:cbnv || 'e',
		airlineType:aCode || '',
		isDirectFlights:isDirectFlight,
		cityId:roundTo.attr('data-cityid')
		//selectedCurrency:selectedCurrency
	};
	flightSearch({
		"trip_type":"RoundTrip",
	    "leaving_from":roundFromId.val(),
	    "going_to":toRoundID.val(),
	    "departing_date":new Date(datef.val()).toString(),
	    "returning_date":new Date(datet.val()).toString(),
	    "traveller_adult":$('.elmAdult').val() || "1",
	    "traveller_child":$('.elmChild').val() || "0",
	    "traveller_infant":$('.elmInfant').val() || "0",
	    "class":(cbnv == undefined) ? "E" : cbnv.toUpperCase()
	},elm);
	
	if ($('#nonStopRoundTripFlights').is(':checked')) {
		var nStopRndTrpFlight = true;
	}
	else{
		var nStopRndTrpFlight = false;
	}
	
	var adltCnt = $('#flightsRoundtrip-tab .elmAdult');
	var chldCnt = $('#flightsRoundtrip-tab .elmChild');
	var infntCnt = $('#flightsRoundtrip-tab .elmInfant');
	var clsTpy = $('#flightsRoundtrip-tab #classType');
	var trcClsStrng = $('#flightsRoundtrip-tab #_totStr');
	
	var cookieData = {
			fromInput:roundFrom.val(),
			toInput:roundTo.val(),
			fromIATA:roundFromId.val(),
			toIATA:toRoundID.val(),
			arrCityId:roundTo.attr('data-cityid'),
			fromtwoway:moment(datef.val()).format('YYYY-MM-DD'),
			totwoway:moment(datet.val()).format('YYYY-MM-DD'),
			elmAdult:adltCnt.val(),
			elmChild:chldCnt.val(),
			elmInfant:infntCnt.val(),
			classType:clsTpy.val(),
			//travAndClass: trcClsStrng.val(),
			nonStopFlight:nStopRndTrpFlight,
			tripType:"roundTrip"
		}
	Cookies.set('flightSearchCookie',JSON.stringify(cookieData),{expires: 60,path:'/'});	
	if(terms===true){
		setTimeout(function(){
			$('.alert-warning').remove();
			getSearchURL(opt);   
		},1000);
		return false;
	}else{
		return true;
	}  
}

function validateFlightPOP(terms){
	if($('#selectedFSOPOP').val()=='flightsOnewayPOP'){
		validateOneWayPOP(terms);
	}
	if($('#selectedFSOPOP').val()=='flightsRoundtripPOP'){
		validateRoundTripPOP(terms);
	}
}

/**
 * RoundTrip validations for Home page
 */	 
function validateRoundTripPOP(terms){
	var roundFrom = $('#roundFromPOP');
	var roundTo = $('#roundToPOP');
	var dupCodeMsg = $('#dupCodeMsg'); 
	var roundFromId = $('#roundFromIdPOP');
	var toRoundID = $('#toRoundIDPOP');
	var adult =$('#roundTripAdults, #adults');
	var child =$('#roundTripChildren, #children');
	var infant =$('#roundTripInfants, #infants');
	var classType =$('#rondtrpClass, #modifySearchClassType');// not required
	 
	var selctionDropdown = {};
	if($('body').hasClass('home') && (typeof $('#dataObjectPOP').val() != "undefined")){
		selctionDropdown = JSON.parse($('#dataObjectPOP').val());
		adult.val(selctionDropdown.noOfadults);
		child.val(selctionDropdown.noOfChildren);
		infant.val(selctionDropdown.noOfInfant);
	}
	var date1 = $('#rThdateFHiddenpop, .mmfromtwoway');
	var date2 = $('#rThdateTHiddenpop, .mmtotwoway');
	 
	 
	if(roundFromId.attr('value')==""){
		return cmnSrchVal(roundFrom , roundFrom.attr('data-err'));
		
	}else{
		roundFrom.removeClass('error');
	}
	if(toRoundID.attr('value')==""){
		return cmnSrchVal(roundTo , roundTo.attr('data-err'));
	}else{
		roundTo.removeClass('error');
	}
	if(roundFromId.attr('value')!="" && toRoundID.attr('value')!=""){
		if(roundFromId.attr('value')==toRoundID.attr('value')){
			roundFrom.addClass('error');
			return cmnSrchVal(roundTo , dupCodeMsg.attr('data-err'));
		}
		else{
			roundFrom.removeClass('error');
			roundTo.removeClass('error');
		}
	}
	if(date1.val()==""){
		return cmnSrchVal($('._datepicker.fromtwowayPOP') , i18n.t('requiredDepDatemessage'));
	}else{
		$('._datepicker.fromtwowayPOP').removeClass('error');
	} 
	if(date2.val()==""){
		return cmnSrchVal($('._datepicker.totwowayPOP') , i18n.t('requiredReturnDatemessage'));
	}else{
		$('._datepicker.totwowayPOP').removeClass('error');
	}
	var totalPass = parseInt(adult.val())+parseInt(child.val())+parseInt(infant.val());
	if(totalPass>9){  
		growl_alert(i18n.t('errMorePax'));
		return false;
	}
	//Check if total infant is greater than number of adult
	if(infant.val()>adult.val()){
		infant.val(0);
		growl_alert(i18n.t('infantsNotMorethanAdults'));
		return false;
	} 
	btnLoadingAnimation($('#roundTripButtonPOP'));
	setTimeout(function(){
		$("#roundTripButtonPOP").attr("disabled", "disabled");
	},200);
	$("#roundTripButtonPOP").val(i18n.t('processingTxt'));
	
	var cbnv;
	if($("#classTypePOP").val()=="Business"){
		cbnv="b";
	} else {
		if($("#classTypePOP").val()=="First"){
				cbnv="f";
		}
	}
	var opt = {
		tripType:2,
		dep:roundFromId.val(),
		arr:toRoundID.val(),
		depdate:moment(date1.val()).format('YYYY-MM-DD'),
		arrdate:moment(date2.val()).format('YYYY-MM-DD'),
		adt:$('.elmAdultPOP').val() || 1,
		chd:$('.elmChildPOP').val() || 0,
		inf:$('.elmInfantPOP').val() || 0,
		cbn:selctionDropdown.class || cbnv || 'e'		
		//selectedCurrency:selectedCurrency
	};
	var cookieData = {
			fromInput:roundFrom.val(),
			toInput:roundTo.val(),
			fromIATA:roundFromId.val(),
			toIATA:toRoundID.val(),
			fromtwoway:moment(date1.val()).format('YYYY-MM-DD'),
			totwoway:moment(date2.val()).format('YYYY-MM-DD'),
			elmAdult:$('.elmAdultPOP').val(),
			elmChild:$('.elmChildPOP').val(),
			elmInfant:$('.elmInfantPOP').val(),
			classType:$("#classTypePOP").val(),
			//travAndClass: $("#_totStrPOP").val(),
			nonStopFlight:false,
			tripType:"roundTrip"
			
		}
	Cookies.set('flightSearchCookie',JSON.stringify(cookieData),{expires: 60,path:'/'});
	if(terms===true){
		setTimeout(function(){
			getSearchURL(opt); 
			$('.bgoverlay, .popupLand').removeClass('active');			
		},1000);
		return false;
	}else{
		return true;
	} 
}


/*
 * one way start
 */
 function validateOneWayPOP(terms){
	var onewayFrom = $('#roundFromPOP');	
	var onewayTo = $('#roundToPOP');	
	var dupCodeMsg = $('#dupCodeMsg');
	var fromID = $('#roundFromIdPOP');	
	var toID = $('#toRoundIDPOP');	
	var adult =$('#onewayAdults, #adults');	
	var child =$('#onewayChildren, #children');	
	var infant =$('#onewayInfants, #infants');	
	var classType =$('#oneWayClassId, #modifySearchClassType');	
	var selctionDropdown = {};
	if($('body').hasClass('home') && typeof $('#dataObjectPOP').val() != "undefined"){
		selctionDropdown = JSON.parse($('#dataObjectPOP').val());
		adult.val(selctionDropdown.noOfadults);
		child.val(selctionDropdown.noOfChildren);
		infant.val(selctionDropdown.noOfInfant);
	}
	var date1 = $('#rThdateFHiddenpop, .fromtwowayPOP');	
	var isDirectFlight= false,isFlexiableDate=false;
	var isChecked = $('#nonStopOneWayFlights, #flexiNonStopFlights, #modifyNonStopOneWayFlights');
	var isFlexiDate = $('#flexiCalOneWayFlights, #flexiModifyTripFlights');
	var selectedCurrency = $('.currencyDropdown').find('ul li.active a').prop('class');
	if(isChecked.prop('checked')){
		isDirectFlight= true;
	}
	if(isFlexiDate.prop('checked')){
		isFlexiableDate = true;
	}
	if(fromID.attr('value')==""){
		return cmnSrchVal(onewayFrom , i18n.t('requiredDeparturemessage'));
	}else{
		onewayFrom.removeClass('error');
	}	
	if(toID.attr('value')==""){
		return cmnSrchVal(onewayTo , i18n.t('requiredArrivalmessage'));
	}else{
		onewayTo.removeClass('error');
	}
	if(fromID.attr('value')!="" && toID.attr('value')!=""){
		if(fromID.attr('value')==toID.attr('value')){
			onewayFrom.addClass('error');
			return cmnSrchVal(onewayTo , i18n.t('fromToDestNotSame'));
		}
		else{
			onewayFrom.removeClass('error');
			onewayTo.removeClass('error');
		}
	}	
	//Datepicker Validation
	if(date1.val()==""){
		return cmnSrchVal(date1 , i18n.t('requiredDepDatemessage'));
	}else{
		date1.removeClass('error');
	}
	if(fromID.val()=="" || toID.val()==""){
		selectPredictiveOnOpen();
	}
	
	//for mobiles
	var totalPass = parseInt(adult.val())+parseInt(child.val())+parseInt(infant.val());
	var infantMoreMsg = $('#infantMoreMsg').val();
	var passengerMoreMsg = $('#passengerMoreMsg').val();
	//Check if total passenger is greater than 9
	if(totalPass>9){		
		growl_alert(i18n.t('errMorePax'));
		return false
	}
	//Check if total infant is greater than number of adult
	if(infant.val()>adult.val()){
		infant.val(0);
		growl_alert(i18n.t('infantsNotMorethanAdults'));
		return false;
	}	
	
	btnLoadingAnimation($('#roundTripButtonPOP'));
	setTimeout(function(){
		$("#roundTripButtonPOP").attr("disabled", "disabled");
	},200);
	$("#roundTripButtonPOP").val(i18n.t('processingTxt'));
	
	var cbnv;
	if($("#classTypePOP").val()=="Business"){
		cbnv="b";
	} else {
		if($("#classTypePOP").val()=="First"){
				cbnv="f";
		}
	}
	
	var opt = {
	    tripType:1,
	    dep:fromID.val(),
	    arr:toID.val(),
		adt:$('.elmAdultPOP').val() || 1,
	    chd:$('.elmChildPOP').val() || 0,
	    inf:$('.elmInfantPOP').val() || 0,
	    cbn:selctionDropdown.class || cbnv || 'e',
	    depdate:moment($("#rThdateFHiddenpop").val()).format('YYYY-MM-DD')	    
	};
	
	var cookieData = {
			fromInput:onewayFrom.val(),
			toInput:onewayTo.val(),
			fromIATA:fromID.val(),
			toIATA:toID.val(),
			fromtwoway:moment($("#rThdateFHiddenpop").val()).format('YYYY-MM-DD'),
			//totwoway:moment(date2.val()).format('YYYY-MM-DD'),
			elmAdult:$('.elmAdultPOP').val(),
			elmChild:$('.elmChildPOP').val(),
			elmInfant:$('.elmInfantPOP').val(),
			classType:$("#classTypePOP").val(),
			//travAndClass: $("#_totStrPOP").val(),
			nonStopFlight:false,
			tripType:"oneWay"
			
		};
	Cookies.set('flightSearchCookie',JSON.stringify(cookieData),{expires: 60,path:'/'});	
	if(terms===true){
		//refreshCall();
		setTimeout(function(){
			getSearchURL(opt);
			$('.bgoverlay, .popupLand').removeClass('active');		
		},1000);
		return false;
	}else{
		return true;
	} 
}
/*
 * one way start
 */
 function validateOneWay(terms, aCode,target){
		if($(target).length){
			flightSerVar.validateMS = true;
		}
		var aCode = aCode;
		var onewayFrom = $('#onewayFrom');	
		var onewayTo = $('#onewayTo');	
		var dupCodeMsg = $('#dupCodeMsg');
		var fromID = $('#fromID');	
		var toID = $('#toID');	
		var classType =$('#oneWayClassId, #modifySearchClassType');	
		var selctionDropdown = {};
		var date1 = $('._datepicker.fromoneway, ._datepicker.mmfromoneway');
		var datef = $('#hdateFHidden, #owdphoF');
		var isDirectFlight= false;
		var isChecked = $('#nonStopOneWayFlights, #modifyNonStopOneWayFlights');
		if(isChecked.prop('checked')){
			isDirectFlight= true;
		}
		
		if(fromID.attr('value')==""){
			return cmnSrchVal(onewayFrom , i18n.t('requiredDeparturemessage'));
		}else{
			onewayFrom.removeClass('error');
		}
		if(toID.attr('value')==""){
			return cmnSrchVal(onewayTo , i18n.t('requiredArrivalmessage'));
		}else{
			onewayTo.removeClass('error');
		}
		if(fromID.attr('value')!="" && toID.attr('value')!=""){
			if(fromID.attr('value')==toID.attr('value')){
				onewayFrom.addClass('error');
				return cmnSrchVal(onewayTo , i18n.t('fromToDestNotSame'));
			}
			else{
				onewayFrom.removeClass('error');
				onewayTo.removeClass('error');
			}
		}	
		
		//Datepicker Validation
		if(date1.val()=="" || date1.val()=="Invalid date"){
			return cmnSrchVal(date1 , i18n.t('requiredDepDatemessage'));
		}else{
			date1.removeClass('error');
		}
		if(fromID.val()=="" || toID.val()==""){
			selectPredictiveOnOpen();
		}	
		btnLoadingAnimation($('#oneWayButton'));
		btnLoadingAnimation($('.modiOWButton'));
		setTimeout(function(){
				$("#oneWayButton").attr("disabled", "disabled");
				$(".modiOWButton").attr("disabled", "disabled");
		},200);
		$("#oneWayButton").val(i18n.t('processingTxt'));
		var cbnv;
		if($("#classType2").val()=="Business"){
			cbnv="b";
		} else {
			if($("#classType2").val()=="First"){
					cbnv="f";
			}
		}
		var adult = $('.elmAdult2').val();
		var child = $('.elmChild2').val();
		var infant = $('.elmInfant2').val();
		if(typeof target!=='undefined'){
			var $t = $(target).parents('#flightsOneway-tab').find('.custom-traveller');
			adult = $t.find('.elmAdult').val();
			child = $t.find('.elmChild').val();
			infant = $t.find('.elmInfant').val();			
			if($t.find('#classType').find("option:selected" ).val()=='Economy'){
				cbnv = 'e';
			}else if($t.find('#classType').find("option:selected" ).val()=='Business'){
				cbnv = 'b';
			}else if($t.find('#classType').find("option:selected" ).val()=='First'){
				cbnv = 'f';
			}
			
		}
		if ($('#nonStopOneWayFlights').is(':checked')) {
			var nStopOneWayFlight = true;
		}
		else{
			var nStopOneWayFlight = false;
		}
		//flightsOneway-tab
		var opt = {
		    tripType:1,
		    dep:fromID.val(),
		    arr:toID.val(),
			adt:adult || 1,
		    chd:child || 0,
		    inf:infant || 0,
		    cbn:cbnv || 'e',
		    depdate:moment(datef.val()).format('YYYY-MM-DD'),	    
		    airlineType:aCode || '',
		    isDirectFlights:isDirectFlight,
			cityId:onewayTo.attr('data-cityid')
		};
		
		flightSearch({
			"trip_type":"OneWay",
		    "leaving_from":fromID.val(),
		    "going_to":toID.val(),
		    "departing_date":new Date(datef.val()).toString(),
		    "returning_date":"",
		    "traveller_adult":adult,
		    "traveller_child":child,
		    "traveller_infant":infant,
		    "class":(cbnv == undefined) ? "E" : cbnv.toUpperCase()
		},target);
		
		var adltCnt = $('#flightsOneway-tab .elmAdult2, #flightsOneway-tab .elmAdult');
		var chldCnt = $('#flightsOneway-tab .elmChild2, #flightsOneway-tab .elmChild');
		var infntCnt = $('#flightsOneway-tab .elmInfant2, #flightsOneway-tab .elmInfant');
		var clsTpy = $('#flightsOneway-tab #classType2, #flightsOneway-tab #classType');
		var trcClsStrng = $('#flightsOneway-tab #_totStr2, #flightsOneway-tab #_totStr');
		
		var cookieData = {
				fromInput:onewayFrom.val(),
				toInput:onewayTo.val(),
				fromIATA:fromID.val(),
				toIATA:toID.val(),
				arrCityId:onewayTo.attr('data-cityid'),
				fromtwoway:moment(datef.val()).format('YYYY-MM-DD'),
				//totwoway:moment(datef.val()).format('YYYY-MM-DD'),
				elmAdult:adltCnt.val(),
				elmChild:chldCnt.val(),
				elmInfant:infntCnt.val(),
				classType:clsTpy.val(),
				//travAndClass: trcClsStrng.val(),
				nonStopFlight:nStopOneWayFlight,
				tripType:"oneWay"
			}
		Cookies.set('flightSearchCookie',JSON.stringify(cookieData),{expires: 60,path:'/'});	
		if(terms===true){
			//refreshCall();
			setTimeout(function(){
				$('.alert-warning').remove();
				getSearchURL(opt);
				$('.bgoverlay, .popupLand').removeClass('active');		
			},1000);
			return true;
		}else{
			return false;
		}  
	}
function selectPredictiveOnOpen(){
	var predictiveElm = $('.results-list');
	predictiveElm.each(function(){
		if($(this).is(':visible')){
			var ffTarg = $(this).find('ul li');
			$(ffTarg[0]).find('a.autoRes').trigger('click');
		}
	});
}
/*
 * one way end
 */
 /*
 * multicity start
 */
function validateMultiCity(terms, aCode,target){
	if($(target).length){
		flightSerVar.validateMS = true;
	}
	var aCode = aCode;
	var multicityFrom1 = $('#multicityFrom1');
	var multicityTo1 = $('#multicityTo1');
	var multicityFrom2 = $('#multicityFrom2');
	var multicityTo2 = $('#multicityTo2');
	var multicityFrom3 = $('#multicityFrom3');
	var multicityTo3 = $('#multicityTo3');
	var multicityFrom4 = $('#multicityFrom4');
	var multicityTo4 = $('#multicityTo4');
	var multicityFrom5 = $('#multicityFrom5');
	var multicityTo5 = $('#multicityTo5');
	var multicityFrom6 = $('#multicityFrom6');
	var multicityTo6 = $('#multicityTo6');
	
	
	var date1 = $('#mchdateF1Hidden, #mchdateF1'); 
	var date2 = $('#mchdateF2Hidden, #mchdateF2');
	var date3 = $('#mchdateF3Hidden, #mchdateF3');
	var date4 = $('#mchdateF4Hidden, #mchdateF4'); 
	var date5 = $('#mchdateF5Hidden, #mchdateF5');
	var date6 = $('#mchdateF6Hidden, #mchdateF6');
		
	var dupCodeMsg = $('#dupCodeMsg');
	var multiFromId1 = $('#multiFromId1');
	var multiToID1 = $('#multiToID1');	
	var multiFromId2 = $('#multiFromId2');
	var multiToID2 = $('#multiToID2');	
	var multiFromId3 = $('#multiFromId3');
	var multiToID3 = $('#multiToID3');
	var multiFromId4 = $('#multiFromId4');
	var multiToID4 = $('#multiToID4');
	var multiFromId5 = $('#multiFromId5');
	var multiToID5 = $('#multiToID5');
	var multiFromId6 = $('#multiFromId6');
	var multiToID6 = $('#multiToID6');
	var isDirectFlight= false;
	var isChecked = $('#nonStopMultiCityFlights, #flexiNonStopFlights, #modifyNonStopOneWayFlights');
	
	if(isChecked.prop('checked')){
		isDirectFlight= true;
	}	
	
	if(typeof multiFromId1.attr('value') == "undefined" || multiFromId1.val()==""){
		//scrollTopValidation();
		return cmnSrchVal(multicityFrom1 , multicityFrom1.attr('data-err'));
	}else{
		selectPredictiveOnOpen();
		multicityFrom1.removeClass('error');		
	}
	if(typeof multiToID1.attr('value') == "undefined" || multiToID1.val()==""){
		//scrollTopValidation();
		return cmnSrchVal(multicityTo1 , multicityTo1.attr('data-err'));
	}else{
		selectPredictiveOnOpen();
		multicityTo1.removeClass('error');		
	}	
	if((typeof multiFromId1.attr('value')!=="undefined" || multiFromId1.val()!="") && (typeof multiToID1.attr('value')!=="undefined" || multiToID1.val()!="")){
		if(multiFromId1.attr('value') == multiToID1.attr('value')){
			multicityFrom1.addClass('error');
			return cmnSrchVal(multicityTo1 , i18n.t('fromToDestNotSame'));
		}
		else{
			multicityFrom1.removeClass('error');
			multicityTo1.removeClass('error');	
		}
	}
	if(date1.val()=="" || date1.val()=="Invalid date"){
		return cmnSrchVal($('._datepicker.mchdateF1, ._datepicker.mmchdateF1') , i18n.t('requiredDepDatemessage'));
	}else{
		$('._datepicker.mchdateF1, ._datepicker.mmchdateF1').removeClass('error');
	}
	
	if((typeof multiFromId2.attr('value')=="undefined" || multiFromId2.val()=="") && (typeof multiToID2.attr('value')!=="undefined" && multiToID2.val()!=="") ){
		return cmnSrchVal(multicityFrom2 , multicityFrom2.attr('data-err'));
	}else{
		selectPredictiveOnOpen();
		multicityFrom2.removeClass('error');
	}	
	if(multiFromId2.val()!=="" && (typeof multiFromId2.attr('value')=="undefined" || multiToID2.val()=="") ){
		return cmnSrchVal(multicityTo2 , multicityTo2.attr('data-err'));
	}else{
		selectPredictiveOnOpen();
		multicityTo2.removeClass('error');
	}
	if(multiFromId2.val()!="" && multiToID2.val()!=""){
		if(multicityFrom2.attr('data-iata')==multicityTo2.attr('data-iata')){
			multicityFrom2.addClass('error');
			return cmnSrchVal(multicityTo2 , i18n.t('fromToDestNotSame'));
		}
		else{
			multicityFrom2.removeClass('error');		
			multicityTo2.removeClass('error');
		}
	}
	if(multiFromId2.val()!="" && multiToID2.val()!=""){
		if(date2.val()=="" || date2.val()=="Invalid date" ){
			//scrollTopValidation();
			return cmnSrchVal($('._datepicker.mchdateF2, ._datepicker.mmchdateF2') , i18n.t('requiredDepDatemessage'));
		}else{
			$('._datepicker.mchdateF2, ._datepicker.mmchdateF2').removeClass('error');
		}
	}
	if(date1.val()!="" && date2.val()!="" && new Date(date1.val()) > new Date(date2.val())){
		return cmnSrchVal($('._datepicker.mchdateF2, ._datepicker.mmchdateF2'), i18n.t("reqValDepDatemsg"));
	}else{
		$('._datepicker.mchdateF2, ._datepicker.mmchdateF2').removeClass('error');
	}
 	if((typeof multiFromId3.attr('value')=="undefined" || multiFromId3.val()=="") && (typeof multiToID3.attr('value')!=="undefined" && multiToID3.val()!=="") ){
 		//scrollTopValidation();
		return cmnSrchVal(multicityFrom3 , multicityFrom3.attr('data-err'));
	}else{
		selectPredictiveOnOpen();
		multicityFrom3.removeClass('error');	
	}
	if(multiFromId3.val()!=="" && (typeof multiToID3.val()=="undefined" || multiToID3.val()=="") ){
		//scrollTopValidation();
		return cmnSrchVal(multicityTo3 , multicityTo3.attr('data-err'));
	}else{
		selectPredictiveOnOpen();
		multicityTo3.removeClass('error');	
	}
	if(multiFromId3.val()!="" && multiToID3.val()!=""){
		if(multicityFrom3.attr('data-iata')==multicityTo3.attr('data-iata')){
			//scrollTopValidation();
			multicityFrom3.addClass('error');
			return cmnSrchVal(multicityTo3 , i18n.t('fromToDestNotSame'));
		}
		else{
			multicityFrom3.removeClass('error');
			multicityTo3.removeClass('error');
		}
	}
	if(multiFromId3.val()!="" && multiToID3.val()!=""){
		if(date3.val()=="" ||  date3.val()=="Invalid date"){
			//scrollTopValidation();
			return cmnSrchVal($('._datepicker.mchdateF3, ._datepicker.mmchdateF3') , i18n.t('requiredDepDatemessage'));
		}else{
			$('._datepicker.mchdateF3, ._datepicker.mmchdateF3').removeClass('error');
		}
	}
	if(date2.val()!="" && date3.val()!="" && new Date(date2.val()) > new Date(date3.val())){
		return cmnSrchVal($('._datepicker.mchdateF3, ._datepicker.mmchdateF3'), i18n.t("reqValDepDatemsg"));
	}else{
		$('._datepicker.mchdateF3, ._datepicker.mmchdateF3').removeClass('error');
	}
	if(multicityFrom4.is(':visible')){
		
		if((typeof multiFromId4.attr('value')=="undefined" || multiFromId4.val()=="") && (typeof multiToID4.attr('value')!=="undefined" && multiToID4.val()!=="") ){
			//scrollTopValidation();
			return cmnSrchVal(multicityFrom4 , multicityFrom4.attr('data-err'));
		}else{
			selectPredictiveOnOpen();
			multicityFrom4.removeClass('error');	
		}
		
		if(multiFromId4.val()!=="" && multiToID4.val()=="" ){
			//scrollTopValidation();
			return cmnSrchVal(multicityTo4 , multicityTo4.attr('data-err'));
		}else{
			selectPredictiveOnOpen();
			multicityTo4.removeClass('error');	
		}
		if(multiFromId4.val()!="" && multiToID4.val()!=""){
			if(multiFromId4.val()==multiToID4.val()){
				//scrollTopValidation();
				multicityFrom4.addClass('error');
				return cmnSrchVal(multicityTo4 , i18n.t('fromToDestNotSame'));
			}
			else{
				multicityFrom4.removeClass('error');
				multicityTo4.removeClass('error');
			}
		}
		if(multiFromId4.val()!="" && multiToID4.val()!=""){
			if(date4.val()=="" || date4.val()=="Invalid date" ){
				//scrollTopValidation();
				return cmnSrchVal($('._datepicker.mchdateF4, ._datepicker.mmchdateF4') , i18n.t('requiredDepDatemessage'));
			}else{
				$('._datepicker.mchdateF4, ._datepicker.mmchdateF4').removeClass('error');
			}
		}
		if(date3.val()!="" && date4.val()!="" && new Date(date3.val()) > new Date(date4.val())){
			return cmnSrchVal($('._datepicker.mchdateF4, ._datepicker.mmchdateF4'), i18n.t("reqValDepDatemsg"));
		}else{
			$('._datepicker.mchdateF4, ._datepicker.mmchdateF4').removeClass('error');
		}
	}	
	if(multicityFrom5.is(':visible')){
		
		if((typeof multiFromId5.attr('value')=="undefined" || multiFromId5.val()=="") && (typeof multiToID5.attr('value')!=="undefined" && multiToID5.val()!=="") ){
			//scrollTopValidation();
			return cmnSrchVal(multicityFrom5 , multicityFrom5.attr('data-err'));
		}else{
			selectPredictiveOnOpen();
			multicityFrom5.removeClass('error');	
		}
		
		if(multiFromId5.val()!=="" && multiToID5.val()=="" ){
			//scrollTopValidation();
			return cmnSrchVal(multicityTo5 , multicityTo5.attr('data-err'));
		}else{
			selectPredictiveOnOpen();
			multicityTo5.removeClass('error');	
		}
		if(multiFromId5.val()!="" && multiToID5.val()!=""){
			if(multiFromId5.val()==multiToID5.val()){
				//scrollTopValidation();
				multicityFrom5.addClass('error');
				return cmnSrchVal(multicityTo5 , i18n.t('fromToDestNotSame'));
			}
			else{
				multicityFrom5.removeClass('error');
				multicityTo5.removeClass('error');
			}
		}
		if(multiFromId5.val()!="" && multiToID5.val()!=""){
			if(date5.val()=="" ||  date5.val()=="Invalid date"){
				//scrollTopValidation();
				return cmnSrchVal($('._datepicker.mchdateF5, ._datepicker.mmchdateF5') , i18n.t('requiredDepDatemessage'));
			}else{
				$('._datepicker.mchdateF5, ._datepicker.mmchdateF5').removeClass('error');
			}
		}
		if(date4.val()!="" && date5.val()!="" && new Date(date4.val()) > new Date(date5.val())){
			return cmnSrchVal($('._datepicker.mchdateF5, ._datepicker.mmchdateF5'), i18n.t("reqValDepDatemsg"));
		}else{
			$('._datepicker.mchdateF5, ._datepicker.mmchdateF5').removeClass('error');
		}
	}	
	if(multicityFrom6.is(':visible')){
		
		if((typeof multiFromId6.attr('value')=="undefined" || multiFromId6.val()=="") && (typeof multiToID6.attr('value')!=="undefined" && multiToID6.val()!=="") ){
			//scrollTopValidation();
			return cmnSrchVal(multicityFrom6 , multicityFrom6.attr('data-err'));
		}else{
			selectPredictiveOnOpen();
			multicityFrom6.removeClass('error');	
		} 
		
		if(multiFromId6.val()!=="" && multiToID6.val()=="" ){
			//scrollTopValidation();
			return cmnSrchVal(multicityTo6 , multicityTo6.attr('data-err'));
		}else{
			selectPredictiveOnOpen();
			multicityTo6.removeClass('error');	
		}
		if(multiFromId6.val()!="" && multiToID6.val()!=""){
			if(multiFromId6.val()==multiToID6.val()){
				//scrollTopValidation();
				multicityFrom6.addClass('error');
				multicityTo6.addClass('error');
				growl_alert(i18n.t('fromToDestNotSame'));
				return false;
				return cmnSrchVal(multicityTo6 , i18n.t('fromToDestNotSame'));
			}
			else{
				multicityFrom6.removeClass('error');
				multicityTo6.removeClass('error');
			}
		}
		if(multiFromId6.val()!="" && multiToID6.val()!=""){
			if(date6.val()=="" ||  date6.val()=="Invalid date"){
				//scrollTopValidation();
				return cmnSrchVal($('._datepicker.mchdateF6, ._datepicker.mmchdateF6') , i18n.t('requiredDepDatemessage'));
			}else{
				$('._datepicker.mchdateF6, ._datepicker.mmchdateF6').removeClass('error');
			}
		}
		if(date5.val()!="" && date6.val()!="" && new Date(date5.val()) > new Date(date6.val())){
			return ($('._datepicker.mchdateF6, ._datepicker.mmchdateF6'), i18n.t("reqValDepDatemsg"));
		}else{
			$('._datepicker.mchdateF6, ._datepicker.mmchdateF6').removeClass('error');
		}
	}
 
	btnLoadingAnimation($('#multicityButton'));
	btnLoadingAnimation($('.modiMCButton'));
	setTimeout(function(){
			$("#multicityButton").attr("disabled", "disabled");
			$(".modiMCButton").attr("disabled", "disabled");
	},200);
	$("#multicityButton").val(i18n.t('processingTxt'));
	var cbnv;
	if($("#classType3").val()=="Business"){
		cbnv="b";
	} else {
		if($("#classType3").val()=="First"){
				cbnv="f";
		}
	}
	var adult = $('.elmAdult3').val();
	var child = $('.elmChild3').val();
	var infant = $('.elmInfant3').val();
	if(typeof target!=='undefined'){
		var $t = $(target).parents('#flightsMulticity-tab').find('.custom-traveller');
		adult = $t.find('.elmAdult').val();
		child = $t.find('.elmChild').val();
		infant = $t.find('.elmInfant').val();
		if($t.find('#classType').find("option:selected" ).val()=='Economy'){
			cbnv = 'e';
		}else if($t.find('#classType').find("option:selected" ).val()=='Business'){
			cbnv = 'b';
		}else if($t.find('#classType').find("option:selected" ).val()=='First'){
			cbnv = 'f';
		}
	}
	
	if ($('#nonStopMultiCityFlights').is(':checked')) {
		var nStopMltCtyFlight = true;
	}
	else{
		var nStopMltCtyFlight = false;
	}
	
	var opt = {
	    tripType:3,
	    dep1:multiFromId1.val(),
	    dep2:multiFromId2.val(),
	    dep3:multiFromId3.val(),
	    dep4:multiFromId4.val(),
	    dep5:multiFromId5.val(),
	    dep6:multiFromId6.val(),
	    arr1:multiToID1.val(),
	    arr2:multiToID2.val(),
	    arr3:multiToID3.val(),
	    arr4:multiToID4.val(),
	    arr5:multiToID5.val(),
	    arr6:multiToID6.val(),
		adt: adult || 1 ,
	    chd: child || 0,
	    inf: infant || 0 ,
	    cbn: cbnv || 'e',
	    depdate1:(multiFromId1.val() != "" ? moment(date1.val()).format('YYYY-MM-DD') : ""),
	    depdate2:(multiFromId2.val() != "" ? moment(date2.val()).format('YYYY-MM-DD') : ""),
	    depdate3:(multiFromId3.val() != "" ? moment(date3.val()).format('YYYY-MM-DD') : ""),
	    depdate4:(multiFromId4.val() != "" ? moment(date4.val()).format('YYYY-MM-DD') : ""),
	    depdate5:(multiFromId5.val() != "" ? moment(date5.val()).format('YYYY-MM-DD') : ""),
	    depdate6:(multiFromId6.val() != "" ? moment(date6.val()).format('YYYY-MM-DD') : ""),
	    airlineType:aCode || '',
	    isDirectFlights:isDirectFlight,
		cityId:multicityTo1.attr('data-cityid')
	};
	
	var leaving = multiFromId1.val();
	var going = multiToID1.val();
	var departDate = new Date(date1.val()).toString();
	
	if(multiFromId2.val()!=""){
		leaving+=","+multiFromId2.val();
		going+=","+multiToID2.val();
		departDate+=","+new Date(date2.val()).toString();
		if(multiFromId3.val()!=""){
			leaving+=","+multiFromId3.val();
			going+=","+multiToID3.val();
			departDate+=","+new Date(date3.val()).toString();
			if(multiFromId4.val()!=""){
				leaving+=","+multiFromId4.val();
				going+=","+multiToID4.val();
				departDate+=","+new Date(date4.val()).toString();
				if(multiFromId5.val()!=""){
					leaving+=","+multiFromId5.val();
					going+=","+multiToID5.val();
					departDate+=","+new Date(date5.val()).toString();
					if(multiFromId6.val()!=""){
						leaving+=","+multiFromId6.val();
						going+=","+multiToID6.val();
						departDate+=","+new Date(date6.val()).toString();
					}
				}
			}
		}
	}
	flightSearch({
		"trip_type":"MultiCity",
	    "leaving_from":leaving,
	    "going_to":going,
	    "departing_date":departDate,
	    "returning_date":"",
	    "traveller_adult":adult,
	    "traveller_child":child,
	    "traveller_infant":infant,
	    "class":(cbnv == undefined) ? "E" : cbnv.toUpperCase()
	},target);
	
	var adltNo = $('#flightsMulticity-tab .elmAdult3, #flightsMulticity-tab .elmAdult');
	var chldNo = $('#flightsMulticity-tab .elmChild3, #flightsMulticity-tab .elmChild');
	var infntNo = $('#flightsMulticity-tab .elmInfant3, #flightsMulticity-tab .elmInfant');
	var clstype = $('#flightsMulticity-tab #classType3, #flightsMulticity-tab #classType');
	var trvClsStrng = $('#flightsMulticity-tab #_totStr3, #flightsMulticity-tab #_totStr');
	
	var cookieData = {
			fromInput:multicityFrom1.val(),
			toInput:multicityTo1.val(),
			fromIATA:multiFromId1.val(),
			toIATA:multiToID1.val(),
			fromtwoway:moment(date1.val()).format('YYYY-MM-DD') || '',
			
			fromInput2:multicityFrom2.val(),
			toInput2:multicityTo2.val(),
			fromIATA2:multiFromId2.val(),
			toIATA2:multiToID2.val(),
			fromtwoway2:(multicityFrom2.val() != "" ? moment(date2.val()).format('YYYY-MM-DD') : ""),
			
			fromInput3:multicityFrom3.val(),
			toInput3:multicityTo3.val(),
			fromIATA3:multiFromId3.val(),
			toIATA3:multiToID3.val(),
			fromtwoway3:(multicityFrom3.val() != "" ? moment(date3.val()).format('YYYY-MM-DD') : ""),
			
			fromInput4:multicityFrom4.val(),
			toInput4:multicityTo4.val(),
			fromIATA4:multiFromId4.val(),
			toIATA4:multiToID4.val(),
			fromtwoway4:(multicityFrom4.val() != "" ? moment(date4.val()).format('YYYY-MM-DD') : ""),
			
			fromInput5:multicityFrom5.val(),
			toInput5:multicityTo5.val(),
			fromIATA5:multiFromId5.val(),
			toIATA5:multiToID5.val(),
			fromtwoway5:(multicityFrom5.val() != "" ? moment(date5.val()).format('YYYY-MM-DD') : ""),
			
			fromInput6:multicityFrom6.val(),
			toInput6:multicityTo6.val(),
			fromIATA6:multiFromId6.val(),
			toIATA6:multiToID6.val(),
			fromtwoway6:(multicityFrom6.val() != "" ? moment(date6.val()).format('YYYY-MM-DD') : ""),
			
			elmAdult:adltNo.val(),
			elmChild:chldNo.val(),
			elmInfant:infntNo.val(),
			classType:clstype.val(),
			//travAndClass:trvClsStrng.val(),
			nonStopFlight:nStopMltCtyFlight,
			tripType:"multyCity"
		}
	Cookies.set('flightSearchCookie',JSON.stringify(cookieData),{expires: 60,path:'/'});
	
	if(terms===true){
		//refreshCall();
		setTimeout(function(){
			$('.alert-warning').remove();
			getSearchURL(opt);
			$('.bgoverlay, .popupLand').removeClass('active');		
		},1000);
		return false;
	}else{
		return true;
	}
	
}
/*
 * multicity end
 */

/*
 * URL generation
 */
function getSearchURL(opt,arg) {
	var result = "";
	
	/**
	    * Window.location.origin Fix for IE
	    * @site http://tosbourn.com/a-fix-for-window-location-origin-in-internet-explorer/
	    */
	if (!window.location.origin) {
		window.location.origin = window.location.protocol + "//" + window.location.hostname + (window.location.port ? ':' + window.location.port: '');
	}
	var base_url = window.location.origin;
	
	result = 'flight/result?'+$.param(opt);
	//Addded for change flight functionality for pnr response failure time
	if(arg){
		location.href = base_url+'/'+result;
	}else{
		furlPush(result);
	}
}

/**
*@description Flight Results Refresh Rendering
*/	
function flightSearchOnLoad(){
	furlPush(window.location.href);
}
//arg added for change flight for pnr failure condition
function furlPush(url,arg){	
	flightSerVar.resultsPageURL = url;	
	var u = window.location.origin+'/'+url;		
	if(typeof router!=="undefined"){
		router.navigate(u, true);
	}
}
/**
 * Scroll top for validations
 */
function scrollTopValidation(){
	 var targetOffset = $('.container').offset().top;
	  $('html, body').animate({scrollTop:targetOffset-3}, 500); 
} 

function getCityNames(iataCode){
	_langGlobal.langRender(function(){
		var cityTxt ='';
		var dateTxt ='';
		var departDateRO = cmnGetURLQueryStr('depdate');
		var arrivalDateRO = cmnGetURLQueryStr('arrdate');
		var ad = (cmnGetURLQueryStr('adt')>1)? cmnGetURLQueryStr('adt')+' '+i18n.t("adult_plural"):cmnGetURLQueryStr('adt')+' '+i18n.t("adult");
		var ch = (cmnGetURLQueryStr('chd')>1)? cmnGetURLQueryStr('chd')+' '+i18n.t("child_plural"):cmnGetURLQueryStr('chd')+' '+i18n.t("child");
		var inf = (cmnGetURLQueryStr('inf')>1)? cmnGetURLQueryStr('inf')+' '+i18n.t("infant_plural"):cmnGetURLQueryStr('inf')+' '+i18n.t("infant");
		var arNames = {
				 months		  : ["ÙŠÙ†Ø§ÙŠØ±","ÙØ¨Ø±Ø§ÙŠØ±","Ù…Ø§Ø±Ø³","Ø§Ø¨Ø±ÙŠÙ„","Ù…Ø§ÙŠÙˆ","ÙŠÙˆÙ†ÙŠÙˆ","ÙŠÙˆÙ„ÙŠÙˆ","Ø£ØºØ³Ø·Ø³","Ø³Ø¨ØªÙ…Ø¨Ø±","Ø£ÙƒØªÙˆØ¨Ø±","Ù†ÙˆÙÙ…Ø¨Ø±","Ø¯ÙŠØ³Ù…Ø¨Ø±"],
				 weekdaysShort : ["Ø§Ù„Ø£Ø­Ø¯","Ø§Ù„Ø§Ø«Ù†ÙŠÙ†","Ø§Ù„Ø«Ù„Ø§Ø«Ø§Ø¡","Ø§Ù„Ø£Ø±Ø¨Ø¹Ø§Ø¡","Ø§Ù„Ø®Ù…ÙŠØ³","Ø§Ù„Ø¬Ù…Ø¹Ø©","Ø§Ù„Ø³Ø¨Øª"]
		};
		$.post('/cityNameByIATACode?iataCode='+JSON.stringify(iataCode),function(res){
			for(var i in res){
				if(res[i].cityName){
					flightSerVar.cityNames.push(res[i].cityName[i18n.options.lng]);
				}
			}
			
			/**
			 *@description Setting default date if the date query is empty or undefined based on marketing requirement
			 *@author Fahid Mohammad
			 **/
			if(!cmnGetURLQueryStr('depdate')){
				departDateRO = moment().add(2, 'days').format('YYYY-MM-DD');
			}
			if(!cmnGetURLQueryStr('arrdate')){
				arrivalDateRO = moment().add(3, 'days').format('YYYY-MM-DD');
			}
			if(cmnGetURLQueryStr('tripType')==3){
				var cNames = flightSerVar.cityNames;	
				var a=1;
				for(var i=0;i<cNames.length;i++){
					cityTxt += '<label><elm>'+((i18n.options.lng == "en")?cNames[i]:unicodeConverter(cNames[i]))+'</elm>'+'<i class="flaticon-thin4"></i>'+'<elm>'+((i18n.options.lng == "en")?cNames[i+1]:unicodeConverter(cNames[i+1]))+'</elm>';
					var dep1 = arNames.weekdaysShort[moment(cmnGetURLQueryStr('depdate'+a)).weekday()] +' '+moment(cmnGetURLQueryStr('depdate'+a)).format('DD')+' '+arNames.months[moment(cmnGetURLQueryStr('depdate'+a)).format('M')-1]+' '+moment(cmnGetURLQueryStr('depdate'+a)).format('YYYY');
					var dT1 = (i18n.options.lng == "en") ? moment(cmnGetURLQueryStr('depdate'+a)).format('ddd, DD MMM YYYY') : dep1;
					cityTxt += '<span>'+dT1+'</span>'+','+'</label>'; 
					a++;
					i++;
				}
			
			}else if(cmnGetURLQueryStr('tripType')==2){
				cityTxt += '<elm>'+((i18n.options.lng == "en")?flightSerVar.cityNames[0]:unicodeConverter(flightSerVar.cityNames[0]))+'</elm>'+'<i class="flaticon-double99"></i>'+'<elm>'+((i18n.options.lng == "en")?flightSerVar.cityNames[1]:unicodeConverter(flightSerVar.cityNames[1]))+'</elm>';
				var dep1 = arNames.weekdaysShort[moment(departDateRO).weekday()] +' '+moment(departDateRO).format('DD')+' '+arNames.months[moment(departDateRO).format('M')-1]+' '+moment(departDateRO).format('YYYY');
				var arr1 = arNames.weekdaysShort[moment(arrivalDateRO).weekday()] +' '+moment(arrivalDateRO).format('DD')+' '+arNames.months[moment(arrivalDateRO).format('M')-1]+' '+moment(arrivalDateRO).format('YYYY');
				if(i18n.options.lng == "en"){
					dateTxt += moment(departDateRO).format('ddd, DD MMM YYYY')+' - '+moment(arrivalDateRO).format('ddd, DD MMM YYYY');
				}else if(i18n.options.lng =='ar'){
					dateTxt += dep1+' - '+arr1;
				}
			}else if(cmnGetURLQueryStr('tripType')==1){
				cityTxt += '<elm>'+((i18n.options.lng == "en")?flightSerVar.cityNames[0]:unicodeConverter(flightSerVar.cityNames[0]))+'</elm>'+'<i class="flaticon-thin4"></i>'+'<elm>'+((i18n.options.lng == "en")?flightSerVar.cityNames[1]:unicodeConverter(flightSerVar.cityNames[1]))+'</elm>';
				var dep1 = arNames.weekdaysShort[moment(departDateRO).weekday()] +' '+moment(departDateRO).format('DD')+' '+arNames.months[moment(departDateRO).format('M')-1]+' '+moment(departDateRO).format('YYYY');
				if(i18n.options.lng == "en"){
					dateTxt += moment(departDateRO).format('ddd, DD MMM YYYY');
				}else if(i18n.options.lng =='ar'){
					dateTxt += dep1;
				}
			}
			loadCnt = {
				loadCityTxt : cityTxt,
				loadStr : dateTxt +((cmnGetURLQueryStr('tripType')==3)?'':' | ')+((cmnGetURLQueryStr('adt')>0)?ad:'')+((cmnGetURLQueryStr('chd')>0)?', '+ch:'')+((cmnGetURLQueryStr('inf')>0)?', '+inf:'')
			};
			$.loadingPageAnimation('show',false,loadCnt);
		});
	});
}
function resultRender(url){
	if(!$('.currency').is(':visible')){
		$('.currency').show();
		$('.country').show();
		$('.lang, .language').show();
	}
	flightSerVar.curChaLdngRlts = true;
	$('#_bodyContainer').empty();
	$('.bbcFooter').hide();
	$('.alert_custom').hide();// to remove the growl_alert if any.
	$('body').removeClass('homePage');
	$('body').addClass('resultPage flightResults');
	
	flightSerVar.cityNames = [];
	flightSerVar.iataCodes = [];
	if(cmnGetURLQueryStr('tripType')==3){
		for(var i=0;i<7;i++){
			if((cmnGetURLQueryStr('dep'+i) && cmnGetURLQueryStr('arr'+i))&&(cmnGetURLQueryStr('dep'+i)!=='') &&(cmnGetURLQueryStr('arr'+i)!=='')){
				flightSerVar.iataCodes.push(cmnGetURLQueryStr('dep'+i));
				flightSerVar.iataCodes.push(cmnGetURLQueryStr('arr'+i));
			}
		}
	}else {
		flightSerVar.iataCodes.push(cmnGetURLQueryStr('dep'));
		flightSerVar.iataCodes.push(cmnGetURLQueryStr('arr'));
	}
	getCityNames(flightSerVar.iataCodes);
	
	if(cmnGetURLQueryStr('tripType')==3){
		$('.resultsLoaderCont').addClass('multicity');
	}
	if(typeof cmnGetURLQueryStr('airlineType')!=='undefined'){
		flightSerVar.topairline = cmnGetURLQueryStr('airlineType');
	}
	if(typeof cmnGetURLQueryStr('isDirectFlights')!=='undefined'){
		flightSerVar.nonStopFlights = cmnGetURLQueryStr('isDirectFlights');
	}
	
	
	//re-init fareCombo
	flightComboSerVar.checkInit = false;
	flightComboSerVar.initFCData();
	
	//$.get("/common/themes/v2/tmpl/flight/fjson.json",{},function(res){	
	$.get(url+"&isoView=true",{v:Math.random()},function(res){
		//console.log('search res');console.log(JSON.stringify(res));		
		if(res !==null && res.status ==="SUCCESS"){
			
			// Google Analytics Page View trigger.
				 /* dataLayer.push({
					  'event':'VirtualPageview',
					  'virtualPageURL':'/flight/result',
					  'virtualPageTitle':'Flight Results'
				}); */
			
			inputConsole('REPORTSTATUS=SearchResponse-'+res.response.uuid);
			var currency=cmnGetURLQueryStr('usc');
			if(currency){
				var modifiedUrl = removeParam('usc',window.location.href);
				window.history.replaceState({url:modifiedUrl,EVENT:'HOTEL_REVIEW'}, 'Hotel Review...', modifiedUrl);
			}
			var obj = res.response;
			flightSerVar.resultsError = true;
			if(obj){
				flightSerVar.setData(obj);
				if(flightSerVar.setSelectedCurrency!==obj.ISOCurrency){
					flightSerVar.baseObjCurChanges(flightSerVar.setSelectedCurrency);
				}
			}
			
			$.get('/flight/resultStatic',{v:Math.random()},function(template){
				document.getElementById("_bodyContainer").innerHTML = template;
				document.close();
				$.get('/common/themes/v2/tmpl/flight/flightResultsMain.ejs?v=nd-v0102',{v:Math.random()},function(template){
					flightSerVar.dynamicTemplate = template;	
					flightComboSerVar.dynamicTemplate = template;
					flightComboSerVar.resultTemplate = template;
					
					if(cmnGetURLQueryStr('tripType')!=2){
						$('#_bestOffersSec,#_FFSec').hide();	
					}
					//userTrackerModule.init();;
					if(res.response){
						async.series([
						function(callback){			
							var data = {
								maps:flightSerVar.hashmap,
								uuid:flightSerVar.uuid,
								headerInfo:flightSerVar.headerInfo,
							 	fareComboResponse:flightSerVar.fareComboResponse
							};
							flightSerVar.loadTemplate('flight-modify-view',data,$('.modifyBlock'),template);
							//loadSwapFunction();
							return callback();
						},function(callback){
							flightSerVar.init();
							return callback();
						},function(callback){
							flightSerVar.loadFilter();
							flightSerVar.updateFilghtCount();
							return callback();
						}],function(err){
							setTimeout(function(){
								flightSerVar.resetPriceSlider(flightSerVar.filterData);	
							},80);
													
							if(cmnGetURLQueryStr('tripType')==2){
								flightSerVar.dynamicFilterdata.roundTrp = true;
							}
						  flightSerVar.loadTemplate('flight-filter-view',flightSerVar.dynamicFilterdata,$('#filterBO'),template);
						  flightSerVar.loadTemplate('airlineName-filter-list',flightSerVar.dynamicFilterdata,$('#airlineName-filter-list'),template);
						  flightSerVar.loadTemplate('_stopOverAirport-filter-list',flightSerVar.dynamicFilterdata,$('#_stopOverAirport-filter-list'),template);
						  flightSerVar.dynamicFilterdata.AirlineNameWP = flightSerVar.dynamicFilterdata.AirlineNameWP.sort(function(a,b){
								return a[1][0]-b[1][0];
							});
							flightSerVar.loadTemplate('filter_airlineIcons_template',flightSerVar.dynamicFilterdata.AirlineNameWP,$('#_filter_airlineIcons_template'),template);
							loadAirlineGridwithOwl();
							
							if(flightSerVar.topairline!==''){						
								$('#airlineName-filter-list ul li').each(function(){
									if($(this).find('input').val()==flightSerVar.topairline){								
										$(this).find('input[type=checkbox]').trigger('click');
									}
									});
							}
							if(flightSerVar.nonStopFlights=='true'){
								$('#nonStopRoundTripFlights').trigger('click');
								$('#nonStopOneWayFlights').trigger('click');
								$('#nonStopMultiCityFlights').trigger('click');
								$('#stops-filter-list ul li').each(function(){
									if($(this).find('input').val()=='1'){
										$(this).find('input[type=checkbox]').trigger('click');
									}
								});
							}
							$('.tnlHome,.tnlFlight,.tnlHotel,.tnlFPH,.tnlCars').removeClass('active');
							setTimeout(function(){
								ULlessMore(['airlineName-filter-list','_stopOverAirport-filter-list','_returnStopOverAirport-filter-list']);
							}, 2000);
							pricetagConvert.init(); // divide decimal point	
							$('.youHaveFiltered').hide();
							if(i18n.options.lng =='ar'){
								var blueTxt = $('#_nearByAirport-filter-list span.blue-txt');
								if(blueTxt.width() > 60) {
									$('#_nearByAirport-filter-list span.ar-name').addClass('smWdth');
									$('#airlineName-filter-list span.ar-name').addClass('smWdth');
								}
							}								
						}); 
							
							modifyPageContent(res);
							initDatePickerComponent();
							initPredictiveSearchComponent();
							autoFill();
					}
				});
				
			});
		}else if(res !==null && res.status==="ERROR"){
			inputConsole('REPORTSTATUS=SearchResponseError-'+res.message.SearchRQ.searchRQ.source.echoToken);
			//window.location.href = './error';
			flightSerVar.resultsError = false;
			$.get('/flight/resultStatic',{},function(template){
				$('#_bodyContainer').empty();
				document.getElementById("_bodyContainer").innerHTML = template;
				document.close();
				//modifyPageContent(res);
				$('.resultBlock').hide();
				var data = {
				trip : cmnGetURLQueryStr('tripType'),
				fareComboResponse:flightSerVar.fareComboResponse
				};
				
				$('._noResultsFound').attr('style','display:block');
				$.get('/common/themes/v2/tmpl/flight/flightResultsMain.ejs?v=nd-v0102',{},function(template){
					flightSerVar.dynamicTemplate = template;
					flightSerVar.loadTemplate('flight-modify-view',data,$('.modifyBlock'),template);
					modifyPageContentError(res);
					initDatePickerComponent();
					initPredictiveSearchComponent();
					autoFill();
					$.loadingPageAnimation();
			    });
			});
			
		}
	}); 
	
}



function reloadFilters(dynamicFilterdata){
	flightSerVar.loadTemplate('stops-filter-list',dynamicFilterdata,$('#stops-filter-list'),flightSerVar.dynamicTemplate);
	
	
	flightSerVar.loadTemplate('airlineName-filter-list',dynamicFilterdata,$('#airlineName-filter-list'),flightSerVar.dynamicTemplate);
	flightSerVar.loadTemplate('_stopOverAirport-filter-list',dynamicFilterdata,$('#_stopOverAirport-filter-list'),flightSerVar.dynamicTemplate);
						  
	flightSerVar.dynamicFilterdata.AirlineNameWP = flightSerVar.dynamicFilterdata.AirlineNameWP.sort(function(a,b){
		return a[1][0]-b[1][0];
	});
	flightSerVar.loadTemplate('filter_airlineIcons_template',dynamicFilterdata.AirlineNameWP,$('#_filter_airlineIcons_template'),		flightSerVar.template);
	loadAirlineGridwithOwl();
}

function modifyPageContentError(res){
	var lang = $('html').attr('data-lang');
	var trvCount = 0;
	var modifyData = res.message.tripinfoHeader;
	var multiCItyData = res.message.modifyData;
	var tripType = res.message.tripType;
	var classType = res.message.SearchRQ.searchRQ.ct;
	var classTypeVal = classType;
	if(i18n.options.lng =='ar'){
	 classType = i18n.t((res.message.SearchRQ.searchRQ.ct).toLowerCase());
	}
	var guests = res.message.nop;
	var noa = cmnGetURLQueryStr('adt');
	var noc = cmnGetURLQueryStr('chd');
	var noi = cmnGetURLQueryStr('inf');
	var dates = res.message.arrDepDates.split('/');
	$('._apxClass').text(classType);
	$('._apxGuests').text(guests);
	var trvCount = parseInt(noa)+parseInt(noc)+parseInt(noi);
	$('.mtravellersDropdown').each(function(){
		if(trvCount==0 || trvCount==1){
	 		$(this).find('#_totStr').val(1+' ' + i18n.t('adult')+' , '+classType);
	    }else{
			$(this).find('#_totStr').val(trvCount+' ' + i18n.t('travellers')+' , '+classType);
		}
		$(this).find('#classType').val(classTypeVal);
		$(this).find('.elmAdult').val(noa);
		$(this).find('.elmChild').val(noc);
		$(this).find('.elmInfant').val(noi);
	});
	//round Trip
	if(tripType === 2){
		$('#roundFrom, #onewayFrom, #multicityFrom1').val(unicodeConverter(modifyData[1].departing[lang]) +", "+unicodeConverter(modifyData[1].departingAirportCountryName[lang])+", ("+modifyData[1].departingIata+") - "+unicodeConverter(modifyData[1].departingAirportName[lang]));
		$('#roundFrom, #onewayFrom, #multicityFrom1').attr("title",unicodeConverter(modifyData[1].departing[lang]) +", "+unicodeConverter(modifyData[1].departingAirportCountryName[lang])+", ("+modifyData[1].departingIata+") - "+unicodeConverter(modifyData[1].departingAirportName[lang]));
		$('#roundTo, #onewayTo, #multicityTo1').val(unicodeConverter(modifyData[1].arrival[lang]) +", "+unicodeConverter(modifyData[1].arrivalAirportCountryName[lang])+", ("+modifyData[1].arrivalIata+") - "+unicodeConverter(modifyData[1].arrivalAirportName[lang]));
		$('#roundTo, #onewayTo, #multicityTo1').attr("title",unicodeConverter(modifyData[1].arrival[lang]) +", "+unicodeConverter(modifyData[1].arrivalAirportCountryName[lang])+", ("+modifyData[1].arrivalIata+") - "+unicodeConverter(modifyData[1].arrivalAirportName[lang]));
		var tripHeader = unicodeConverter(modifyData[1].departing[lang]) +", "+unicodeConverter(modifyData[1].departingAirportCountryName[lang])+" - "+unicodeConverter(modifyData[1].arrival[lang]) +", "+unicodeConverter(modifyData[1].arrivalAirportCountryName[lang])+ ' <small>'+"("+i18n.t("roundtrip")+")"+'</small>';
		$('h3._apxTripHeader').append(tripHeader);
		$('#roundFromId, #fromID, #multiFromId1').val(modifyData[1].departingIata);
		$('#toRoundID, #toID, #multiToID1').val(modifyData[1].arrivalIata);
		$('#multicityFrom1, #roundFrom, #onewayFrom').attr('data-iata',modifyData[1].departingIata);
		$('#multicityTo1, #roundTo, #onewayTo').attr('data-iata',modifyData[1].arrivalIata);
		$('._apxDates').text(res.message.datesStr[0]+' - '+res.message.datesStr[1]);
		$('._datepicker.mmfromtwoway').val(moment(dates[0]).format('DD/MM/YYYY'));
		$('._datepicker.mmtotwoway').val(moment(dates[1]).format('DD/MM/YYYY'));
		$('#rThdateFM').val(dates[0]);
		$('#rThdateTM').val(dates[1]);	
		$('#flightsRoundtrip').trigger('click');
	}
	//one way
	if(tripType === 1){
		$('#roundFrom, #onewayFrom, #multicityFrom1').val(unicodeConverter(modifyData[1].departing[lang]) +", "+unicodeConverter(modifyData[1].departingAirportCountryName[lang])+", ("+modifyData[1].departingIata+") - "+unicodeConverter(modifyData[1].departingAirportName[lang]));
		$('#roundFrom, #onewayFrom, #multicityFrom1').attr("title",unicodeConverter(modifyData[1].departing[lang]) +", "+unicodeConverter(modifyData[1].departingAirportCountryName[lang])+", ("+modifyData[1].departingIata+") - "+unicodeConverter(modifyData[1].departingAirportName[lang]));
		$('#roundTo, #onewayTo, #multicityTo1').val(unicodeConverter(modifyData[1].arrival[lang]) +", "+unicodeConverter(modifyData[1].arrivalAirportCountryName[lang])+", ("+modifyData[1].arrivalIata+") - "+unicodeConverter(modifyData[1].arrivalAirportName[lang]));
		$('#roundTo, #onewayTo, #multicityTo1').attr("title",unicodeConverter(modifyData[1].arrival[lang]) +", "+unicodeConverter(modifyData[1].arrivalAirportCountryName[lang])+", ("+modifyData[1].arrivalIata+") - "+unicodeConverter(modifyData[1].arrivalAirportName[lang]));
		var tripHeader = unicodeConverter(modifyData[1].departing[lang]) +", "+unicodeConverter(modifyData[1].departingAirportCountryName[lang])+" - "+unicodeConverter(modifyData[1].arrival[lang]) +", "+unicodeConverter(modifyData[1].arrivalAirportCountryName[lang]) + ' <small>'+"("+i18n.t("oneway")+")"+'</small>';
		$('h3._apxTripHeader').append(tripHeader);
		$('._apxDates').text(res.message.datesStr[0]);
		$('#roundFromId, #fromID, #multiFromId1').val(modifyData[1].departingIata);
		$('#toRoundID, #toID, #multiToID1').val(modifyData[1].arrivalIata);
		$('#multicityFrom1, #roundFrom, #onewayFrom').attr('data-iata',modifyData[1].departingIata);
		$('#multicityTo1, #roundTo, #onewayTo').attr('data-iata',modifyData[1].arrivalIata);
		$('._datepicker.mmfromtwoway').val(moment(dates[0]).format('DD/MM/YYYY'));
		$('#owdphoF').val(dates[0]);
		$('#flightsOneway').trigger('click');
	}
	//multi city
	if(tripType == 3){
		$('#roundFrom, #onewayFrom, #multicityFrom1').val(unicodeConverter(multiCItyData[0].departingAirportCityName[lang]) +", "+unicodeConverter(multiCItyData[0].departingAirportCountryName[lang])+", ("+multiCItyData[0].departingIata+") - "+unicodeConverter(multiCItyData[0].departingAirportName[lang]));
		$('#roundFrom, #onewayFrom, #multicityFrom1').attr("title",unicodeConverter(multiCItyData[0].departingAirportCityName[lang]) +", "+unicodeConverter(multiCItyData[0].departingAirportCountryName[lang])+", ("+multiCItyData[0].departingIata+") - "+unicodeConverter(multiCItyData[0].departingAirportName[lang]));
		$('#roundTo, #onewayTo, #multicityTo1').val(unicodeConverter(multiCItyData[0].arrivalAirportCityName[lang]) +", "+unicodeConverter(multiCItyData[0].arrivalAirportCountryName[lang])+", ("+multiCItyData[0].arrivalIata+") - "+unicodeConverter(multiCItyData[0].arrivalAirportName[lang]));
		$('#roundTo, #onewayTo, #multicityTo1').attr("title",unicodeConverter(multiCItyData[0].arrivalAirportCityName[lang]) +", "+unicodeConverter(multiCItyData[0].arrivalAirportCountryName[lang])+", ("+multiCItyData[0].arrivalIata+") - "+unicodeConverter(multiCItyData[0].arrivalAirportName[lang]));
		var tripHeader = "";
		tripHeader = unicodeConverter(multiCItyData[0].departingAirportCityName[lang]) +" - "+unicodeConverter(multiCItyData[0].arrivalAirportCityName[lang])+" ";
		tripHeader += '<small>'+res.message.datesStr[0]+'</small>';
		if(typeof multiCItyData[1]!='undefined' && multiCItyData[1]!==''){
			$('#multicityFrom2').val(unicodeConverter(multiCItyData[1].departingAirportCityName[lang]) +", "+unicodeConverter(multiCItyData[1].departingAirportCountryName[lang])+", ("+multiCItyData[1].departingIata+") - "+unicodeConverter(multiCItyData[1].departingAirportName[lang]));
			$('#multicityTo2').val(unicodeConverter(multiCItyData[1].arrivalAirportCityName[lang]) +", "+unicodeConverter(multiCItyData[1].arrivalAirportCountryName[lang])+", ("+multiCItyData[1].arrivalIata+") - "+unicodeConverter(multiCItyData[1].arrivalAirportName[lang]));
			$('#multicityFrom2').attr("title",unicodeConverter(multiCItyData[1].departingAirportCityName[lang]) +", "+unicodeConverter(multiCItyData[1].departingAirportCountryName[lang])+", ("+multiCItyData[1].departingIata+") - "+unicodeConverter(multiCItyData[1].departingAirportName[lang]));
			$('#multicityTo2').attr("title",unicodeConverter(multiCItyData[1].arrivalAirportCityName[lang]) +", "+unicodeConverter(multiCItyData[1].arrivalAirportCountryName[lang])+", ("+multiCItyData[1].arrivalIata+") - "+unicodeConverter(multiCItyData[1].arrivalAirportName[lang]));
			$('#multiFromId2').val(multiCItyData[1].departingIata);
			$('#multiToID2').val(multiCItyData[1].arrivalIata);
			$('#multicityFrom2').attr('data-iata',multiCItyData[1].departingIata);
			$('#multicityTo2').attr('data-iata',multiCItyData[1].arrivalIata);
			tripHeader += ", "+ unicodeConverter(multiCItyData[1].departingAirportCityName[lang]) +" - "+unicodeConverter(multiCItyData[1].arrivalAirportCityName[lang])+" "+'<small>'+res.message.datesStr[1]+'</small>';
			$('._datepicker.mmchdateF2').val(moment(dates[1]).format('DD/MM/YYYY'));
			$('#mchdateF2').val(dates[1]);
		}
		if(typeof multiCItyData[2]!='undefined' && multiCItyData[2]!==''){
			$('#multicityFrom3').val(unicodeConverter(multiCItyData[2].departingAirportCityName[lang]) +", "+unicodeConverter(multiCItyData[2].departingAirportCountryName[lang])+", ("+multiCItyData[2].departingIata+") - "+unicodeConverter(multiCItyData[2].departingAirportName[lang]));
			$('#multicityTo3').val(unicodeConverter(multiCItyData[2].arrivalAirportCityName[lang]) +", "+unicodeConverter(multiCItyData[2].arrivalAirportCountryName[lang])+", ("+multiCItyData[2].arrivalIata+") - "+unicodeConverter(multiCItyData[2].arrivalAirportName[lang]));
			$('#multicityFrom3').attr("title",unicodeConverter(multiCItyData[2].departingAirportCityName[lang]) +", "+unicodeConverter(multiCItyData[2].departingAirportCountryName[lang])+", ("+multiCItyData[2].departingIata+") - "+unicodeConverter(multiCItyData[2].departingAirportName[lang]));
			$('#multicityTo3').attr("title",unicodeConverter(multiCItyData[2].arrivalAirportCityName[lang]) +", "+unicodeConverter(multiCItyData[2].arrivalAirportCountryName[lang])+", ("+multiCItyData[2].arrivalIata+") - "+unicodeConverter(multiCItyData[2].arrivalAirportName[lang]));
			$('#multiFromId3').val(multiCItyData[2].departingIata);
			$('#multiToID3').val(multiCItyData[2].arrivalIata);
			$('#multicityFrom3').attr('data-iata',multiCItyData[2].departingIata);
			$('#multicityTo3').attr('data-iata',multiCItyData[2].arrivalIata);
			tripHeader += ", "+ unicodeConverter(multiCItyData[2].departingAirportCityName[lang]) +" - "+unicodeConverter(multiCItyData[2].arrivalAirportCityName[lang])+" "+'<small>'+res.message.datesStr[2]+'</small>';
			$('._datepicker.mmchdateF3').val(moment(dates[2]).format('DD/MM/YYYY'));
			$('#mchdateF3').val(dates[2]);
		}
		if(typeof multiCItyData[3]!='undefined' && multiCItyData[3]!==''){
			$('#multicityFrom4').val(unicodeConverter(multiCItyData[3].departingAirportCityName[lang]) +", "+unicodeConverter(multiCItyData[3].departingAirportCountryName[lang])+", ("+multiCItyData[3].departingIata+") - "+unicodeConverter(multiCItyData[3].departingAirportName[lang]));
			$('#multicityTo4').val(unicodeConverter(multiCItyData[3].arrivalAirportCityName[lang]) +", "+unicodeConverter(multiCItyData[3].arrivalAirportCountryName[lang])+", ("+multiCItyData[3].arrivalIata+") - "+unicodeConverter(multiCItyData[3].arrivalAirportName[lang]));
			$('#multicityFrom4').attr("title",unicodeConverter(multiCItyData[3].departingAirportCityName[lang]) +", "+unicodeConverter(multiCItyData[3].departingAirportCountryName[lang])+", ("+multiCItyData[3].departingIata+") - "+unicodeConverter(multiCItyData[3].departingAirportName[lang]));
			$('#multicityTo4').attr("title",unicodeConverter(multiCItyData[3].arrivalAirportCityName[lang]) +", "+unicodeConverter(multiCItyData[3].arrivalAirportCountryName[lang])+", ("+multiCItyData[3].arrivalIata+") - "+unicodeConverter(multiCItyData[3].arrivalAirportName[lang]));
			$('#multiFromId4').val(multiCItyData[3].departingIata);
			$('#multiToID4').val(multiCItyData[3].arrivalIata);
			$('#multicityFrom4').attr('data-iata',multiCItyData[3].departingIata);
			$('#multicityTo4').attr('data-iata',multiCItyData[3].arrivalIata);
			tripHeader += ", "+ unicodeConverter(multiCItyData[3].departingAirportCityName[lang]) +" - "+unicodeConverter(multiCItyData[3].arrivalAirportCityName[lang])+" "+'<small>'+res.message.datesStr[3]+'</small>';
			$('._datepicker.mmchdateF4').val(moment(dates[3]).format('DD/MM/YYYY'));
			$('#mchdateF4').val(dates[3]);
		}
		if(typeof multiCItyData[4]!='undefined' && multiCItyData[4]!==''){
			$('#multicityFrom5').val(unicodeConverter(multiCItyData[4].departingAirportCityName[lang]) +", "+unicodeConverter(multiCItyData[4].departingAirportCountryName[lang])+", ("+multiCItyData[4].departingIata+") - "+unicodeConverter(multiCItyData[4].departingAirportName[lang]));
			$('#multicityTo5').val(unicodeConverter(multiCItyData[4].arrivalAirportCityName[lang]) +", "+unicodeConverter(multiCItyData[4].arrivalAirportCountryName[lang])+", ("+multiCItyData[4].arrivalIata+") - "+unicodeConverter(multiCItyData[4].arrivalAirportName[lang]));
			$('#multicityFrom5').attr("title",unicodeConverter(multiCItyData[4].departingAirportCityName[lang]) +", "+unicodeConverter(multiCItyData[4].departingAirportCountryName[lang])+", ("+multiCItyData[4].departingIata+") - "+unicodeConverter(multiCItyData[4].departingAirportName[lang]));
			$('#multicityTo5').attr("title",unicodeConverter(multiCItyData[4].arrivalAirportCityName[lang]) +", "+unicodeConverter(multiCItyData[4].arrivalAirportCountryName[lang])+", ("+multiCItyData[4].arrivalIata+") - "+unicodeConverter(multiCItyData[4].arrivalAirportName[lang]));
			$('#multiFromId5').val(multiCItyData[4].departingIata);
			$('#multiToID5').val(multiCItyData[4].arrivalIata);
			$('#multicityFrom5').attr('data-iata',multiCItyData[4].departingIata);
			$('#multicityTo5').attr('data-iata',multiCItyData[4].arrivalIata);
			tripHeader += ", "+ unicodeConverter(multiCItyData[4].departingAirportCityName[lang]) +" - "+unicodeConverter(multiCItyData[4].arrivalAirportCityName[lang])+" "+'<small>'+res.message.datesStr[4]+'</small>';
			$('._datepicker.mmchdateF5').val(moment(dates[4]).format('DD/MM/YYYY'));
			$('#mchdateF5').val(dates[4]);
		}
		if(typeof multiCItyData[5]!='undefined' && multiCItyData[5]!==''){
			$('#multicityFrom6').val(unicodeConverter(multiCItyData[5].departingAirportCityName[lang]) +", "+unicodeConverter(multiCItyData[5].departingAirportCountryName[lang])+", ("+multiCItyData[5].departingIata+") - "+unicodeConverter(multiCItyData[5].departingAirportName[lang]));
			$('#multicityTo6').val(unicodeConverter(multiCItyData[5].arrivalAirportCityName[lang]) +", "+unicodeConverter(multiCItyData[5].arrivalAirportCountryName[lang])+", ("+multiCItyData[5].arrivalIata+") - "+unicodeConverter(multiCItyData[5].arrivalAirportName[lang]));
			$('#multicityFrom6').attr("title",unicodeConverter(multiCItyData[5].departingAirportCityName[lang]) +", "+unicodeConverter(multiCItyData[5].departingAirportCountryName[lang])+", ("+multiCItyData[5].departingIata+") - "+unicodeConverter(multiCItyData[5].departingAirportName[lang]));
			$('#multicityTo6').attr("title",unicodeConverter(multiCItyData[5].arrivalAirportCityName[lang]) +", "+unicodeConverter(multiCItyData[5].arrivalAirportCountryName[lang])+", ("+multiCItyData[5].arrivalIata+") - "+unicodeConverter(multiCItyData[5].arrivalAirportName[lang]));
			$('#multiFromId6').val(multiCItyData[5].departingIata);
			$('#multiToID6').val(multiCItyData[5].arrivalIata);
			$('#multicityFrom6').attr('data-iata',multiCItyData[5].departingIata);
			$('#multicityTo6').attr('data-iata',multiCItyData[5].arrivalIata);
			tripHeader += ", "+ unicodeConverter(multiCItyData[5].departingAirportCityName[lang]) +" - "+unicodeConverter(multiCItyData[5].arrivalAirportCityName[lang])+" "+'<small>'+res.message.datesStr[5]+'</small>';
			$('._datepicker.mmchdateF6').val(moment(dates[5]).format('DD/MM/YYYY'));
			$('#mchdateF6').val(dates[5]);
		}
		$('#roundFromId, #fromID, #multiFromId1').val(multiCItyData[0].departingIata);
		$('#toRoundID, #toID, #multiToID1').val(multiCItyData[0].arrivalIata);
		$('#multicityFrom1, #roundFrom, #onewayFrom').attr('data-iata',multiCItyData[0].departingIata);
		$('#multicityTo1, #roundTo, #onewayTo').attr('data-iata',multiCItyData[0].arrivalIata);
		tripHeader += ' <small>'+"("+i18n.t("multicity")+")"+'</small>';
		$('h3._apxTripHeader').append(tripHeader);
		$('._apxdate').hide();
		$('._datepicker.mmchdateF1').val(moment(dates[0]).format('DD/MM/YYYY'));
		$('#mchdateF1').val(dates[0]);
		
		$('#flightsMulticity').trigger('click');
	}
}


//populating modify search fields
function modifyPageContent(res,fareCobmo){
	var lang = $('html').attr('data-lang');
	var trvCount = 0;
	if(fareCobmo){
		var modifyData = res.fareComboResponse.resultsHeader.modifyData;
		var tripType = res.fareComboResponse.searchCriteria.tripType;
		var classType = res.fareComboResponse.searchCriteria.classType;
		var guests = res.fareComboResponse.searchCriteria.guest;
		var noa = res.fareComboResponse.searchCriteria.noOfAdults;
		var noc = res.fareComboResponse.searchCriteria.noOfChildren;
		var noi = res.fareComboResponse.searchCriteria.noOfInfants;
		var dates = res.fareComboResponse.resultsHeader.arrDepDates.split('/');
		var datesStr = res.fareComboResponse.resultsHeader.datesStr;
	}else{
		var modifyData = res.response.resultsHeader.modifyData;
		var tripType = res.response.searchCriteria.tripType;
		var classType = res.response.searchCriteria.classType;
		var guests = res.response.searchCriteria.guest;
		var noa = res.response.searchCriteria.noOfAdults;
		var noc = res.response.searchCriteria.noOfChildren;
		var noi = res.response.searchCriteria.noOfInfants;
		var dates = res.response.resultsHeader.arrDepDates.split('/');
		var datesStr = res.response.resultsHeader.datesStr;
	}
	var classTypeVal = classType;
	if(lang=='ar'){
		if(classType==='Economy'){
			classType = i18n.t('economy');
		}else if(classType==='Business'){
			classType = i18n.t('business');
		}else if(classType==='First'){
			classType = i18n.t('first');
		}
	}
	$('._apxClass').text(classType);
	$('._apxGuests').text(guests);
	var trvCount = parseInt(noa)+parseInt(noc)+parseInt(noi);
	$('.mtravellersDropdown').each(function(){
		if(trvCount==0 || trvCount==1){
	 		$(this).find('#_totStr').val(1+' ' + i18n.t('adult')+' , '+classType);
	    }else{
			$(this).find('#_totStr').val(trvCount+' ' + i18n.t('travellers')+' , '+classType);
		}
		$(this).find('#classType').val(classTypeVal);
		$(this).find('.elmAdult').val(noa);
		$(this).find('.elmChild').val(noc);
		$(this).find('.elmInfant').val(noi);
	});
	
	if(tripType == "Round Trip"){
		$('#roundFrom, #onewayFrom, #multicityFrom1').val(unicodeConverter(modifyData[0].departingAirportCityName[lang]) +", "+unicodeConverter(modifyData[0].departingAirportCountryName[lang])+", ("+modifyData[0].departingIata+") - "+unicodeConverter(modifyData[0].departingAirportName[lang]));
		$('#roundFrom, #onewayFrom, #multicityFrom1').attr("title",unicodeConverter(modifyData[0].departingAirportCityName[lang]) +", "+unicodeConverter(modifyData[0].departingAirportCountryName[lang])+", ("+modifyData[0].departingIata+") - "+unicodeConverter(modifyData[0].departingAirportName[lang]));
		$('#roundTo,#onewayTo,#multicityTo1').attr('data-cityid',cmnGetURLQueryStr('cityId'));
		$('#roundTo, #onewayTo, #multicityTo1').val(unicodeConverter(modifyData[0].arrivalAirportCityName[lang]) +", "+unicodeConverter(modifyData[0].arrivalAirportCountryName[lang])+", ("+modifyData[0].arrivalIata+") - "+unicodeConverter(modifyData[0].arrivalAirportName[lang]));
		$('#roundTo, #onewayTo, #multicityTo1').attr("title",unicodeConverter(modifyData[0].arrivalAirportCityName[lang]) +", "+unicodeConverter(modifyData[0].arrivalAirportCountryName[lang])+", ("+modifyData[0].arrivalIata+") - "+unicodeConverter(modifyData[0].arrivalAirportName[lang]));
		var tripHeader = unicodeConverter(modifyData[0].departingAirportCityName[lang]) +", "+unicodeConverter(modifyData[0].departingAirportCountryName[lang])+" - "+unicodeConverter(modifyData[0].arrivalAirportCityName[lang]) +", "+unicodeConverter(modifyData[0].arrivalAirportCountryName[lang])+ ' <small>'+"("+i18n.t("roundtrip")+")"+'</small>';
		$('h3._apxTripHeader').append(tripHeader);
		$('#roundFromId, #fromID, #multiFromId1').val(modifyData[0].departingIata);
		$('#toRoundID, #toID, #multiToID1').val(modifyData[0].arrivalIata);
		$('#multicityFrom1, #roundFrom, #onewayFrom').attr('data-iata',modifyData[0].departingIata);
		$('#multicityTo1, #roundTo, #onewayTo').attr('data-iata',modifyData[0].arrivalIata);
		$('._apxDates').text(datesStr[0]+' - '+datesStr[1]);
		$('._datepicker.mmfromtwoway').val(moment(dates[0]).format('DD/MM/YYYY'));
		$('._datepicker.mmtotwoway').val(moment(dates[1]).format('DD/MM/YYYY'));
		$('#rThdateFM').val(dates[0]);
		$('#rThdateTM').val(dates[1]);	
		$('#flightsRoundtrip').trigger('click');
	}
	
	if(tripType == "One Way"){
		$('#onewayTo,#roundTo,#multicityTo1').attr('data-cityid',cmnGetURLQueryStr('cityId'));		
		$('#roundFrom, #onewayFrom, #multicityFrom1').val(unicodeConverter(modifyData[0].departingAirportCityName[lang]) +", "+unicodeConverter(modifyData[0].departingAirportCountryName[lang])+", ("+modifyData[0].departingIata+") - "+unicodeConverter(modifyData[0].departingAirportName[lang]));
		$('#roundFrom, #onewayFrom, #multicityFrom1').attr("title",unicodeConverter(modifyData[0].departingAirportCityName[lang]) +", "+unicodeConverter(modifyData[0].departingAirportCountryName[lang])+", ("+modifyData[0].departingIata+") - "+unicodeConverter(modifyData[0].departingAirportName[lang]));
		$('#roundTo, #onewayTo, #multicityTo1').val(unicodeConverter(modifyData[0].arrivalAirportCityName[lang]) +", "+unicodeConverter(modifyData[0].arrivalAirportCountryName[lang])+", ("+modifyData[0].arrivalIata+") - "+unicodeConverter(modifyData[0].arrivalAirportName[lang]));
		$('#roundTo, #onewayTo, #multicityTo1').attr("title",unicodeConverter(modifyData[0].arrivalAirportCityName[lang]) +", "+unicodeConverter(modifyData[0].arrivalAirportCountryName[lang])+", ("+modifyData[0].arrivalIata+") - "+unicodeConverter(modifyData[0].arrivalAirportName[lang]));
		var tripHeader = unicodeConverter(modifyData[0].departingAirportCityName[lang]) +", "+unicodeConverter(modifyData[0].departingAirportCountryName[lang])+" - "+unicodeConverter(modifyData[0].arrivalAirportCityName[lang]) +", "+unicodeConverter(modifyData[0].arrivalAirportCountryName[lang]) + ' <small>'+"("+i18n.t("oneway")+")"+'</small>';
		$('h3._apxTripHeader').append(tripHeader);
		$('._apxDates').text(datesStr[0]);
		$('#roundFromId, #fromID, #multiFromId1').val(modifyData[0].departingIata);
		$('#toRoundID, #toID, #multiToID1').val(modifyData[0].arrivalIata);
		$('#multicityFrom1, #roundFrom, #onewayFrom').attr('data-iata',modifyData[0].departingIata);
		$('#multicityTo1, #roundTo, #onewayTo').attr('data-iata',modifyData[0].arrivalIata);
		$('._datepicker.mmfromtwoway').val(moment(dates[0]).format('DD/MM/YYYY'));
		$('#owdphoF').val(dates[0]);
		$('#flightsOneway').trigger('click');
	}
	
	if(tripType == "Multy City"){
		$('#onewayTo,#roundTo,#multicityTo1').attr('data-cityid',cmnGetURLQueryStr('cityId'));	
		$('#roundFrom, #onewayFrom, #multicityFrom1').val(unicodeConverter(modifyData[0].departingAirportCityName[lang]) +", "+unicodeConverter(modifyData[0].departingAirportCountryName[lang])+", ("+modifyData[0].departingIata+") - "+unicodeConverter(modifyData[0].departingAirportName[lang]));
		$('#roundFrom, #onewayFrom, #multicityFrom1').attr("title",unicodeConverter(modifyData[0].departingAirportCityName[lang]) +", "+unicodeConverter(modifyData[0].departingAirportCountryName[lang])+", ("+modifyData[0].departingIata+") - "+unicodeConverter(modifyData[0].departingAirportName[lang]));
		$('#roundTo, #onewayTo, #multicityTo1').val(unicodeConverter(modifyData[0].arrivalAirportCityName[lang]) +", "+unicodeConverter(modifyData[0].arrivalAirportCountryName[lang])+", ("+modifyData[0].arrivalIata+") - "+unicodeConverter(modifyData[0].arrivalAirportName[lang]));
		$('#roundTo, #onewayTo, #multicityTo1').attr("title",unicodeConverter(modifyData[0].arrivalAirportCityName[lang]) +", "+unicodeConverter(modifyData[0].arrivalAirportCountryName[lang])+", ("+modifyData[0].arrivalIata+") - "+unicodeConverter(modifyData[0].arrivalAirportName[lang]));
		var tripHeader = "";
		tripHeader = unicodeConverter(modifyData[0].departingAirportCityName[lang]) +" - "+unicodeConverter(modifyData[0].arrivalAirportCityName[lang])+" ";
		if(i18n.options.lng == "en"){
				tripHeader += '<small>'+moment(dates[0]).format('ddd, DD MMM YYYY')+'</small>';
		}else if(i18n.options.lng =='ar'){
			tripHeader += ", "+ unicodeConverter(modifyData[0].departingAirportCityName[lang]) +" - "+unicodeConverter(modifyData[0].arrivalAirportCityName[lang])+" "+'<small>'+datesStr[0]+'</small>';
		}
		if(typeof modifyData[1]!='undefined' && modifyData[1]!==''){
			$('#multicityFrom2').val(unicodeConverter(modifyData[1].departingAirportCityName[lang]) +", "+unicodeConverter(modifyData[1].departingAirportCountryName[lang])+", ("+modifyData[1].departingIata+") - "+unicodeConverter(modifyData[1].departingAirportName[lang]));
			$('#multicityFrom2').attr("title",unicodeConverter(modifyData[1].departingAirportCityName[lang]) +", "+unicodeConverter(modifyData[1].departingAirportCountryName[lang])+", ("+modifyData[1].departingIata+") - "+unicodeConverter(modifyData[1].departingAirportName[lang]));
			$('#multicityTo2').val(unicodeConverter(modifyData[1].arrivalAirportCityName[lang]) +", "+unicodeConverter(modifyData[1].arrivalAirportCountryName[lang])+", ("+modifyData[1].arrivalIata+") - "+unicodeConverter(modifyData[1].arrivalAirportName[lang]));
			$('#multicityTo2').attr("title",unicodeConverter(modifyData[1].arrivalAirportCityName[lang]) +", "+unicodeConverter(modifyData[1].arrivalAirportCountryName[lang])+", ("+modifyData[1].arrivalIata+") - "+unicodeConverter(modifyData[1].arrivalAirportName[lang]));
			$('#multiFromId2').val(modifyData[1].departingIata);
			$('#multiToID2').val(modifyData[1].arrivalIata);
			$('#multicityFrom2').attr('data-iata',modifyData[1].departingIata);
			$('#multicityTo2').attr('data-iata',modifyData[1].arrivalIata);
			tripHeader += ", "+ unicodeConverter(modifyData[1].departingAirportCityName[lang]) +" - "+unicodeConverter(modifyData[1].arrivalAirportCityName[lang])+" "+'<small>'+datesStr[1]+'</small>';
			$('._datepicker.mmchdateF2').val(moment(dates[1]).format('DD/MM/YYYY'));
			$('#mchdateF2').val(dates[1]);
		}
		if(typeof modifyData[2]!='undefined' && modifyData[2]!==''){
			$('#multicityFrom3').val(unicodeConverter(modifyData[2].departingAirportCityName[lang]) +", "+unicodeConverter(modifyData[2].departingAirportCountryName[lang])+", ("+modifyData[2].departingIata+") - "+unicodeConverter(modifyData[2].departingAirportName[lang]));
			$('#multicityFrom3').attr("title",unicodeConverter(modifyData[2].departingAirportCityName[lang]) +", "+unicodeConverter(modifyData[2].departingAirportCountryName[lang])+", ("+modifyData[2].departingIata+") - "+unicodeConverter(modifyData[2].departingAirportName[lang]));
			$('#multicityTo3').val(unicodeConverter(modifyData[2].arrivalAirportCityName[lang]) +", "+unicodeConverter(modifyData[2].arrivalAirportCountryName[lang])+", ("+modifyData[2].arrivalIata+") - "+unicodeConverter(modifyData[2].arrivalAirportName[lang]));
			$('#multicityTo3').attr("title",unicodeConverter(modifyData[2].arrivalAirportCityName[lang]) +", "+unicodeConverter(modifyData[2].arrivalAirportCountryName[lang])+", ("+modifyData[2].arrivalIata+") - "+unicodeConverter(modifyData[2].arrivalAirportName[lang]));
			$('#multiFromId3').val(modifyData[2].departingIata);
			$('#multiToID3').val(modifyData[2].arrivalIata);
			$('#multicityFrom3').attr('data-iata',modifyData[2].departingIata);
			$('#multicityTo3').attr('data-iata',modifyData[2].arrivalIata);
			tripHeader += ", "+ unicodeConverter(modifyData[2].departingAirportCityName[lang]) +" - "+unicodeConverter(modifyData[2].arrivalAirportCityName[lang])+" "+'<small>'+datesStr[2]+'</small>';
			$('._datepicker.mmchdateF3').val(moment(dates[2]).format('DD/MM/YYYY'));
			$('#mchdateF3').val(dates[2]);
		}
		if(typeof modifyData[3]!='undefined' && modifyData[3]!==''){
			$('#multicityFrom4').val(unicodeConverter(modifyData[3].departingAirportCityName[lang]) +", "+unicodeConverter(modifyData[3].departingAirportCountryName[lang])+", ("+modifyData[3].departingIata+") - "+unicodeConverter(modifyData[3].departingAirportName[lang]));
			$('#multicityFrom4').attr("title",unicodeConverter(modifyData[3].departingAirportCityName[lang]) +", "+unicodeConverter(modifyData[3].departingAirportCountryName[lang])+", ("+modifyData[3].departingIata+") - "+unicodeConverter(modifyData[3].departingAirportName[lang]));
			$('#multicityTo4').val(unicodeConverter(modifyData[3].arrivalAirportCityName[lang]) +", "+unicodeConverter(modifyData[3].arrivalAirportCountryName[lang])+", ("+modifyData[3].arrivalIata+") - "+unicodeConverter(modifyData[3].arrivalAirportName[lang]));
			$('#multicityTo4').attr("title",unicodeConverter(modifyData[3].arrivalAirportCityName[lang]) +", "+unicodeConverter(modifyData[3].arrivalAirportCountryName[lang])+", ("+modifyData[3].arrivalIata+") - "+unicodeConverter(modifyData[3].arrivalAirportName[lang]));
			$('#multiFromId4').val(modifyData[3].departingIata);
			$('#multiToID4').val(modifyData[3].arrivalIata);
			$('#multicityFrom4').attr('data-iata',modifyData[3].departingIata);
			$('#multicityTo4').attr('data-iata',modifyData[3].arrivalIata);
			tripHeader += ", "+ unicodeConverter(modifyData[3].departingAirportCityName[lang]) +" - "+unicodeConverter(modifyData[3].arrivalAirportCityName[lang])+" "+'<small>'+datesStr[3]+'</small>';
			$('._datepicker.mmchdateF4').val(moment(dates[3]).format('DD/MM/YYYY'));
			$('#mchdateF4').val(dates[3]);
		}
		if(typeof modifyData[4]!='undefined' && modifyData[4]!==''){
			$('#multicityFrom5').val(unicodeConverter(modifyData[4].departingAirportCityName[lang]) +", "+unicodeConverter(modifyData[4].departingAirportCountryName[lang])+", ("+modifyData[4].departingIata+") - "+unicodeConverter(modifyData[4].departingAirportName[lang]));
			$('#multicityFrom5').attr("title",unicodeConverter(modifyData[4].departingAirportCityName[lang]) +", "+unicodeConverter(modifyData[4].departingAirportCountryName[lang])+", ("+modifyData[4].departingIata+") - "+unicodeConverter(modifyData[4].departingAirportName[lang]));
			$('#multicityTo5').val(unicodeConverter(modifyData[4].arrivalAirportCityName[lang]) +", "+unicodeConverter(modifyData[4].arrivalAirportCountryName[lang])+", ("+modifyData[4].arrivalIata+") - "+unicodeConverter(modifyData[4].arrivalAirportName[lang]));
			$('#multicityTo5').attr("title",unicodeConverter(modifyData[4].arrivalAirportCityName[lang]) +", "+unicodeConverter(modifyData[4].arrivalAirportCountryName[lang])+", ("+modifyData[4].arrivalIata+") - "+unicodeConverter(modifyData[4].arrivalAirportName[lang]));
			$('#multiFromId5').val(modifyData[4].departingIata);
			$('#multiToID5').val(modifyData[4].arrivalIata);
			$('#multicityFrom5').attr('data-iata',modifyData[4].departingIata);
			$('#multicityTo5').attr('data-iata',modifyData[4].arrivalIata);
			tripHeader += ", "+ unicodeConverter(modifyData[4].departingAirportCityName[lang]) +" - "+unicodeConverter(modifyData[4].arrivalAirportCityName[lang])+" "+'<small>'+datesStr[4]+'</small>';
			$('._datepicker.mmchdateF5').val(moment(dates[4]).format('DD/MM/YYYY'));
			$('#mchdateF5').val(dates[4]);
		}
		if(typeof modifyData[5]!='undefined' && modifyData[5]!==''){
			$('#multicityFrom6').val(unicodeConverter(modifyData[5].departingAirportCityName[lang]) +", "+unicodeConverter(modifyData[5].departingAirportCountryName[lang])+", ("+modifyData[5].departingIata+") - "+unicodeConverter(modifyData[5].departingAirportName[lang]));
			$('#multicityFrom6').attr("title",unicodeConverter(modifyData[5].departingAirportCityName[lang]) +", "+unicodeConverter(modifyData[5].departingAirportCountryName[lang])+", ("+modifyData[5].departingIata+") - "+unicodeConverter(modifyData[5].departingAirportName[lang]));
			$('#multicityTo6').val(unicodeConverter(modifyData[5].arrivalAirportCityName[lang]) +", "+unicodeConverter(modifyData[5].arrivalAirportCountryName[lang])+", ("+modifyData[5].arrivalIata+") - "+unicodeConverter(modifyData[5].arrivalAirportName[lang]));
			$('#multicityTo6').attr("title",unicodeConverter(modifyData[5].arrivalAirportCityName[lang]) +", "+unicodeConverter(modifyData[5].arrivalAirportCountryName[lang])+", ("+modifyData[5].arrivalIata+") - "+unicodeConverter(modifyData[5].arrivalAirportName[lang]));
			$('#multiFromId6').val(modifyData[5].departingIata);
			$('#multiToID6').val(modifyData[5].arrivalIata);
			$('#multicityFrom6').attr('data-iata',modifyData[5].departingIata);
			$('#multicityTo6').attr('data-iata',modifyData[5].arrivalIata);
			tripHeader += ", "+ unicodeConverter(modifyData[5].departingAirportCityName[lang]) +" - "+unicodeConverter(modifyData[5].arrivalAirportCityName[lang])+" "+'<small>'+datesStr[5]+'</small>';
			$('._datepicker.mmchdateF6').val(moment(dates[5]).format('DD/MM/YYYY'));
			$('#mchdateF6').val(dates[5]);
		}
		$('#roundFromId, #fromID, #multiFromId1').val(modifyData[0].departingIata);
		$('#toRoundID, #toID, #multiToID1').val(modifyData[0].arrivalIata);
		$('#multicityFrom1, #roundFrom, #onewayFrom').attr('data-iata',modifyData[0].departingIata);
		$('#multicityTo1, #roundTo, #onewayTo').attr('data-iata',modifyData[0].arrivalIata);
		tripHeader += ' <small>'+"("+i18n.t("multicity")+")"+'</small>';
		$('h3._apxTripHeader').append(tripHeader);
		$('._apxdate').hide();
		$('._datepicker.mmchdateF1').val(moment(dates[0]).format('DD/MM/YYYY'));
		$('#mchdateF1').val(dates[0]);
		$('#flightsMulticity').trigger('click');
	}
}


function loadAirlineGridwithOwl(){
	var owl = $("#flightAirlineGrid");      
    owl.owlCarousel({
        items : 7,
        itemsDesktop: [1199, 7],
        itemsDesktopSmall: [1025, 5],
		itemsDesktopBig: [800, 4],
        itemsTablet: [768, 4],
        itemsTabletSmall: [639, 3],
        itemsMobile: [479, 2],
        
        lazyLoad: true,
        navigation: true,
        pagination: false,
        autoPlay: false,
        stopOnHover:false,
        responsive:true,
        rewindNav:false,
        scrollPerPage:true,
        mouseDrag:true
    });
}


function hideLoading2(objId,arg1){
	var btn = $(objId);
	setTimeout(function(){			
		btn.removeClass('LoadBtn');
		/*if(arg1){
			btn.attr('onclick','tripError(this);');
		}else{			
			btn.attr('onclick','bookNowAll({},this);');
		}*/
	},100);
}

function tripError(objId){
	growl_alert(i18n.t("flight_minimum_validation"));
	//hideLoading2(objId,true);
	setTimeout(function(){	
		 $('._bkBtn').removeAttr("disabled");
		 $(objId).removeClass('LoadBtn');
		 $(objId).text(i18n.t("bookNow"));
	 },500);
	return false;
}

function bookNow(data,elm,wego){
	//$.loadingPageAnimation('show');
	var index = data.indexID;
	if(flightSerVar.baseData.fareChange){
		data.fareChange=true;
	}
	data= JSON.stringify(data);
	$.post('/flight/farereviewapi',{resData:data},function(res){		
		 if(res!== null && res.status ==='SUCCESS'){
			inputConsole('REPORTSTATUS=FareResponse-'+res.response.uuid);
			$('.alert_custom').fadeOut();   //remove error alerts if any
			flightSerVar.fareRes = res ;
			var base_url = window.location.origin;
			var result = '/flight/review?pid='+res.response.productId;
			reloadCon = true;
			router.navigate(base_url+result,true);
			$('.alert_custom').hide();
		  }else if(res.status==='Data_Invalid'){
			  location.href='/'+res.lang+'/flights';return;
		  }
		 else if(res.status==='ERROR'){
			 inputConsole('REPORTSTATUS=FareResponseError-'+res.uuid);
			 growl_alert(i18n.t("selectFlightNotAvl"));
			 flightSerVar.removeRecord(index);
			 $(elm).removeAttr("disabled");
			 $(elm).removeClass('LoadBtn');
			 $(elm).text(i18n.t("bookNow"));
			 if(wego){
				 if($('.flightWegoContainer').is(':visible')){
					  $('.flightWegoContainer').hide();
					  $('h2.allFlights').hide();
				}
			 }
		  }
		 // $.loadingPageAnimation();
	});
}

function selectFlight(){
	$('.alert_custom').show();
	$('.alert_custom .close').click(function(){
		$(this).parent().hide();
		
	});
}

function reviewRender(){
    var res = flightSerVar.fareRes;

	
				// Google Analytics Page View trigger.
				  /* dataLayer.push({
					  'event':'VirtualPageview',
					  'virtualPageURL':window.location.href.split('com')[1],
					  'virtualPageTitle':'Flight Review'
				}); */

	  if(typeof res!="undefined"){
	   //if(res.status=="ERROR"){_historyBack(); growl_alert(3, i18n.t('failSelectedFlight'), 5); return;}
	   var obj = res.response;

	   obj.pid = obj.productId;
	   var username=res.username;
	   
	   $.get('/flight/reviewStatic/'+obj.productId,{},function(template){
		  $('#_bodyContainer').empty();
		  document.getElementById("_bodyContainer").innerHTML = template;
		  document.close();
		  $.get('/common/themes/v2/tmpl/flight/flightReview.ejs?v='+Math.random(),{},function(template){
			  flightSerVar.dynamicTemplate = template;	
			      obj.lang = lang;
			      obj.currency=obj.ISOCurrency;
			      
			     var data = {
			    	     responseData:obj
			   	     }

				   loadTemplate('review-Your-Flight',data,$('#ReviewYourFlight'),template);
				   loadTemplate('provide-traveller-details',data,$('#provideTravellerDetails'),template);
				   loadTemplate('trip-summary',data,$('#tripSummaryDetails'),template);
				   loadTemplate('share_itenary',data,$('#shareItenary'),template);
				   
				   
				   //loadTemplate('seatPopupBook',data,$('#seatPopupBook'),template);
				   //if(data.responseData.flightItineraries.trips[0][0].supplierSystem === 'AMADEUS'){
					// loadTemplate('travellerSeatSelection',data,$('#travellerSeatSelection'),template);}				
					
				  /* loadTemplate('payment',data,$('#payment'),template);
				   loadTemplate('redeem-points',data,$('#redeem-points'),template);*/
				   	 //load coupon data 
					$('.redeemPoints .nav li a').click(function (e) {
					  e.preventDefault()
					  $(this).tab('show')
					});
				   initTravelerDynamo();
				   
				 
				
					/**
					 * Date of birth Initilization for traveller details page
					 */	/* [[ Flight Summary Travellers info ]]*/
					fltSmryTraDrpDwn();
					$('._dpSelector').each(function(){
						var maxAge = $(this).attr('data-maxage');
						$(this).birthdayPicker({
							maxAge: maxAge,
							monthFormat:'short',
							dateFormat:'littleEndian',
							callback:function(e){
								//console.log(e);
							},
						});	
					});

					hijriCalGen();
	
					 flyinCountDown.init({countDownElm:'_countDown-Value',displayElm:'countdown'});
					  
					// below script for flight and hotel summery section sticky effect
					fltReviewSummery();
					var gccList = "SA|AE|BH|KW|QA|OM";
					var gccArr = gccList.split('|');
					var tarN = $('._userPassportInfo .nationalidBody').find('._nationality');
					var tarI = $(' ._userPassportInfo .nationalidBody').find('._issuingCountry');
					tarN.find('option').each(function(){
						if($(this)[0].value!="" && gccArr.indexOf($(this)[0].value)==-1){
							$(this).remove();
						}
					});
					tarI.find('option').each(function(){
						if($(this)[0].value!="" && gccArr.indexOf($(this)[0].value)==-1){
							$(this).remove();
						}
					});
					$('[id=countryNames]').customselect();
					getCountryList();
					if($('#prePopulatePassengerDetails')  && $('#prePopulatePassengerDetails').val()){
						prePopulatePassengerDetails();
					}
					$('.currency').hide();
					$('.lang, .language').hide();
					$('.country').hide();
					$('.tt').tooltip();//tooltip for merchandise
					//$.loadingPageAnimation();
					//userTrackerModule.init();;
					pricetagConvert.init();
					var offsetPopTop = $('body').offset().top;
					$('html, body').animate({scrollTop:offsetPopTop}, 0);
			});
	   });
	   
	   if( false && res.response.bestOffers // best offers
	   && !res.response.fInfo  // if minifare not fired previously
		   &&  res.response.flightItineraries.trips[0][0].refundstatus != 'Non Refundable' && res.response.flightItineraries.trips[0][0].supplierSystem === 'AMADEUS'){	
			$.post('/flight/farerulereqForReview',{fareReq:res.response.fareReq,pid:res.response.productId},function(fareRuleData){
			   
			   if(fareRuleData.status=='SUCCESS'){
			   var displayHtml = '';
			   displayHtml  = displayHtml + '<h5><span class="glyph-icon flaticon-info6"></span> '+i18n.t("impInfo")+'</h5><ul><li>'+i18n.t("flightImpCancellation1") + ' ';
			    displayHtml  = displayHtml +fareRuleData.response.uc + ' ' +fareRuleData.response.cchrgs+ ' ' + i18n.t("flightImpCancellation2") + ' ';
			    displayHtml  = displayHtml +fareRuleData.response.uc + ' '+ fareRuleData.response.reischrgs + ' '+ i18n.t("flightImpCancellation3")+'</li></ul>';
				$('#fDetails').show();
				$('#fDetails').html(displayHtml);
			   }
		   });
	   }else if(false && res.response.fareCombo){
		   var onwFInfo,retFInfo;
		   async.parallel([
				function(callback){	
		   if(!res.response.onwFInfo
		   &&  res.response.flightItineraries.trips[0][0].refundstatus != 'Non Refundable' && res.response.flightItineraries.trips[0][0].supplierSystem === 'AMADEUS'){
			   $.post('/flight/farerulereqForReview',{fareReq:res.response.fareReq,pid:res.response.productId,trip:'onward'},function(fareRuleData){
			   if(fareRuleData.status=='SUCCESS'){
			   onwFInfo = fareRuleData;
			   }
				callback();   
			   });
		   }else callback();
		  },function(callback){	
		   if(!res.response.retFInfo
		   &&  res.response.flightItineraries.trips[1][0].refundstatus != 'Non Refundable' && res.response.flightItineraries.trips[1][0].supplierSystem === 'AMADEUS'){
			   $.post('/flight/farerulereqForReview',{fareReq:res.response.fareReq,pid:res.response.productId,trip:'return'},function(fareRuleData){
			   if(fareRuleData.status=='SUCCESS'){
			   retFInfo = fareRuleData;
			   }
				callback();   				   
			   });
			   
		     }else callback();
		  }	],function(){
			  
			  if(onwFInfo || retFInfo){
			   var displayHtml = '';
				displayHtml  = displayHtml + '<h5><span class="glyph-icon flaticon-info6"></span> '+i18n.t("impInfo")+'</h5>';
			  if(onwFInfo){
			   displayHtml  = displayHtml +'<ul><li>'+i18n.t("flightImpCancellation1") + ' ';
			    displayHtml  = displayHtml +onwFInfo.response.uc + ' ' +onwFInfo.response.cchrgs+ ' ' + i18n.t("flightImpCancellation2") + ' ';
			    displayHtml  = displayHtml +onwFInfo.response.uc + ' '+ onwFInfo.response.reischrgs + ' '+ i18n.t("flightImpCancellation3")+' for onward flight'+'</li></ul>';
			  }
			  if(retFInfo){
			   displayHtml  = displayHtml +'<ul><li>'+i18n.t("flightImpCancellation1") + ' ';
			    displayHtml  = displayHtml +retFInfo.response.uc + ' ' +retFInfo.response.cchrgs+ ' ' + i18n.t("flightImpCancellation2") + ' ';
			    displayHtml  = displayHtml +retFInfo.response.uc + ' '+ retFInfo.response.reischrgs + ' '+ i18n.t("flightImpCancellation3")+' for return flight'+'</li></ul>';
			  }
				$('#fareComboFDetails').show();
				$('#fareComboFDetails').html(displayHtml);
				
			  }	
			  
		  } );
	   }
	  }
}

hijriCalGen();

function confirmationRender(){

	
	var base_url = window.location.origin;
	var result = 'flight/confirmation?pid='+res.response.productId;
	reloadCon = true;
	router.navigate(result);
	
	
	  if(typeof res!="undefined"){
	   //if(res.status=="ERROR"){_historyBack(); growl_alert(3, i18n.t('failSelectedFlight'), 5); return;}
	   var obj = res.response;

	   obj.pid = obj.productId;
	   var username=res.username;
	   
	   $.get('/flight/reviewStatic/'+obj.productId,{},function(template){
		  $('#_bodyContainer').empty();
		  document.getElementById("_bodyContainer").innerHTML = template;
		  document.close();
		  $.get('/common/themes/v2/tmpl/flight/flightReview.ejs?v='+Math.random(),{},function(template){
			  flightSerVar.dynamicTemplate = template;		
			     var data = {
			    	  flightItineraries:obj.flightItineraries,
			   	      maps:obj.maps,
			   	      uuid:obj.uuid,
			   	      productId:obj.productId,
			   	      currency:obj.ISOCurrency,
			   	      username:username,
			   	      lang:lang
			   	     }

				  loadTemplate('review-Your-Flight',data,$('#ReviewYourFlight'),template);
				  loadTemplate('provide-traveller-details',data,$('#provideTravellerDetails'),template);
				  loadTemplate('trip-summary',data,$('#tripSummaryDetails'),template);
			
			});
	   });
	  }
}

$('body').on('blur','._txtFName, ._txtMName, ._txtLName',function() {
	validateDuplicateNames();
});

$('body').on('click','._saveTravellerDetails, ._saveChanges',function(){
	
	var condition = true;	
	var target = $(this);
	
	var fileRe=document.createElement('script');
	fileRe.setAttribute("type","text/javascript");	
	fileRe.setAttribute("id","deviceFingerPrintId");	
	document.getElementsByTagName("head")[0].appendChild(fileRe);
	
	var tempVar = $('#deviceFingerPrintId');
	tempVar.text('var io_bbout_element_id = "device_fingerprint";var io_install_stm = false;var io_exclude_stm = 0;var io_install_flash = false;var io_enable_rip = true;');
	var fileRef=document.createElement('script');
	fileRef.setAttribute("type","text/javascript");
	fileRef.setAttribute("src", "https://mpsnare.iesnare.com/snare.js");						
	document.getElementsByTagName("head")[0].appendChild(fileRef);
	
	$('._traDetValidator').each(function(e){
		var $this = $(this);
		if($this.hasClass('_txtTitle') && condition==true){
			if($this.val()==""){
				return condition = cmnTrvlrVal($this , i18n.t("pleaseProvideTitle"));
			}
			$this.removeClass('error');
		}
		if(($this.hasClass('_txtFName') || $this.hasClass('_fnameEdit')) && condition==true){
			if($this.val()==""){
				return condition = cmnTrvlrVal($this,i18n.t("errFirstName"));
			}else if(_Aval($this.val())){
				return condition = cmnTrvlrVal($this,i18n.t("namesinenglish"));
			}else if((!_fnval($this.val())) || ($this.val().length<=2)){								
				return condition = cmnTrvlrVal($this,i18n.t("validfirstname"));
			}else{
				var firstNam = $this.val();
				var splChar = "-";
				var firstName = firstNam.replace(/ +/g, "");
				if(firstName.length <= 0){
					return condition = cmnTrvlrVal($this,i18n.t("validfirstname"));
				}
				for(var i=0;i<firstName.length;i++){
					if((firstName[0] == "-" || firstName[firstName.length-1] == "-") || (typeof firstName[i] !== "undefined") && (typeof firstName[i+1] !== "undefined") && ((splChar == firstName[i]) && (splChar == firstName[i+1]))){
						return condition = cmnTrvlrVal($this,i18n.t("validfirstname"));
					}
				}
			}
		}
		if(($this.hasClass('_txtMName') || $this.hasClass('_mnameEdit')) && condition==true){
				if(($this.val()!="")&&($this.length>0)){
					if(_Aval($this.val())){
						return condition = cmnTrvlrVal($this,i18n.t("pleaseEntervalidMiddleName"));
					}
					else if(!_mnval($this.val())){
						return condition = cmnTrvlrVal($this,i18n.t("pleaseEntervalidMiddleName"));
					}
					var splChar = "-";
					var middleName = $this.val().replace(/ +/g, "");
					for(var i=0;i<middleName.length;i++){
						if((middleName[0] == "-" || middleName[middleName.length-1] == "-") || (typeof middleName[i] !== "undefined") && (typeof middleName[i+1] !== "undefined") && ((splChar == middleName[i]) && (splChar == middleName[i+1])) ){
							return condition = cmnTrvlrVal($this,i18n.t("pleaseEntervalidMiddleName"));
						}
				    }
				}
			}
			if(($this.hasClass('_txtLName') || $this.hasClass('_lnameEdit')) && condition==true){
				if($this.val()==""){
					return condition = cmnTrvlrVal($this,i18n.t("errLastName"));
				}else if(_Aval($this.val())){								
					return condition = cmnTrvlrVal($this,i18n.t("validlastname"));
				}else if((!_lnval($this.val()))||($this.val().length<=2)){					
					return condition = cmnTrvlrVal($this , i18n.t("validlastname"));
				}else{
					var lastNam = $this.val();
					var splChar = "-";
					var lastName = lastNam.replace(/ +/g, "");
					if(lastName.length <= 0){
						return condition = cmnTrvlrVal($this , i18n.t("validlastname"));
					}
					for(var i=0;i<lastName.length;i++){
						if((lastName[0] == "-" || lastName[lastName.length-1] == "-") || (typeof lastName[i] !== "undefined") && (typeof lastName[i+1] !== "undefined") && ((splChar == lastName[i]) && (splChar == lastName[i+1]))){
							return condition = cmnTrvlrVal($this , i18n.t("validlastname"));
						}
					}
				}
			}
			if($this.hasClass('_dob') && condition==true){
				var dobDate = $this.find('.birthDay').val();
				var message = $this.attr('data-err');
				if(dobDate=="" || $this.find('.birthDate').prop('selectedIndex')==0 || $this.find('.birthMonth').prop('selectedIndex')==0 || $this.find('.birthYear').prop('selectedIndex')==0){
					return condition = cmnTrvlrVal($this , i18n.t("errDob"));
				}else if(dobDate!=""){
					var paxType = $this.parents('.travlrDetails').attr('data-group');
					if(paxType=='Adult'){
						var dobDate = moment(dobDate,"YYYY-MM-DD");
						var maxDate = moment(moment().subtract(12,'years').calendar(), "MM/DD/YYYY h:mm:ss");	
						var days = parseInt(moment(dobDate).diff(moment(maxDate), 'days'));
						if(days>0){
							return condition = cmnTrvlrVal($this , i18n.t("validdob"));
						}
					}else if(paxType=='Infant'){
						var dobDate = moment(dobDate,"YYYY-MM-DD");
						var maxDate = moment(moment().subtract(2,'years').calendar(), "MM/DD/YYYY h:mm:ss");	
						var days = parseInt(moment(dobDate).diff(moment(maxDate), 'days'));
						var todayDate = moment().format("MM/DD/YYYY h:mm:ss");
						var daydiff = parseInt(moment(todayDate).diff(moment(dobDate), 'days'));
						if(days<0 || daydiff<=0){
							return condition = cmnTrvlrVal($this , i18n.t("validdob"));
						}
						var travelDate = $('#lastDepDate').val();
						var bdays = parseInt(moment(travelDate).diff(moment(dobDate), 'days'));
						//console.log(bdays);
						if(bdays>=731){
							//console.log("bdays :" +bdays);
							return condition = cmnTrvlrVal($this , i18n.t("validdob"));
						}
					}else if(paxType=='Child'){
						var dobDate = moment(dobDate,"YYYY-MM-DD");
						var maxDate = moment(moment().subtract(2,'years').calendar(), "MM/DD/YYYY h:mm:ss");
						var minDate = moment(moment().subtract(12,'years').calendar(), "MM/DD/YYYY h:mm:ss");
						var days = parseInt(moment(dobDate).diff(moment(maxDate), 'days'));
						var minDays = parseInt(moment(dobDate).diff(moment(minDate), 'days'));
						if(days>0 || minDays<0){
							return condition = cmnTrvlrVal($this , i18n.t("validdob"));
						}
					}
				}
				$this.find("select").removeClass('error');
			}
			if($this.hasClass('_phoneNumber') && condition==true){
				var len = $this.val().length;
				if($this.val()==""){
					return condition = cmnTrvlrVal($this, i18n.t("errMobNum"));
				}else if(($this.val()!="" && len<=7)||(!_Nonly($this.val()))){
					return condition = cmnTrvlrVal($this , i18n.t("validmobile"));
				}
			}
			if($this.hasClass('_emailAddress') && condition==true){
				if($this.val()==''){
					return condition = cmnTrvlrVal($this , i18n.t("enteruremail"));
				}else if(!_evl($this.val())){
					return condition = cmnTrvlrVal($this , i18n.t("errEmaiAdd"));
				}
			}
			if($this.hasClass('_passportId') && condition==true && ($this.is(':visible'))){
				if($this.val()=="" || $this.val().length<3 || (!_passportVal($this.val()))){				
					return condition = cmnTrvlrVal($this , i18n.t("errPassportNumber"));
				}
			}
			if($this.hasClass('_nationalId') && condition==true && ($this.is(':visible'))){
				if($this.val()=="" || $this.val().length<3 || (!_natnVal($this.val()))){
					return condition = cmnTrvlrVal($this , i18n.t("pleaseEnterAValidNationalId"));
				}
			}
			if($this.hasClass('_iqamaId') && condition==true && ($this.is(':visible'))){
				if($this.val()=="" || $this.val().length<10 || (!_natnVal($this.val()))){
					return condition = cmnTrvlrVal($this , i18n.t("pleaseEnterAValidIqamaId"));
				}
				else{
					$this.removeClass('error');
				}
			}
			if($this.hasClass('_nationality') && condition==true && ($this.parents('.custom-select-v3').is(':visible'))){
				if($this.val()==""){
					return condition = cmnTrvlrVal($this , i18n.t("errNationality"));
				}
				else{
					$this.parents('.cSel').removeClass('error');
				}
			}
			if($this.hasClass('_issuingCountry') && condition==true && ($this.parents('.custom-select-v3').is(':visible'))){
				if($this.val()==""){
					return condition = cmnTrvlrVal($this , i18n.t("selectissuedCountry"));
				}
				else{
					$this.parents('.cSel').removeClass('error');
				}
			}
			if($this.hasClass('_passportExpiryDate') && condition==true && ($this.is(':visible'))){
				var peDate = $this.find('.birthDay').val();
				var message = $this.attr('data-err');
				var paxType = $this.parents('.travlrDetails').attr('data-group');
				if(peDate=="" || $this.find('.birthDate').prop('selectedIndex')==0 || $this.find('.birthMonth').prop('selectedIndex')==0 || $this.find('.birthYear').prop('selectedIndex')==0){
					return condition = cmnTrvlrVal($this , i18n.t("errPassportExpDate"));
				}else{
					var travelDate = $('#lastDepDate').val();
					if(travelDate!=""){
						var tDate = new Date(travelDate);
					    var eDate = new Date(peDate);
					    var timeDiff = Math.abs(eDate.getTime()) - Math.abs(tDate.getTime());
					    var daysDiff = Math.ceil(timeDiff / (1000 * 3600 * 24));
					    if(daysDiff<180){
					    return condition = cmnTrvlrVal($this , i18n.t("passportValidPeriod"));
					    }
					}
					if(paxType=='Infant'){
						var bData = $this.parents('.travlrDetails').find('.birthDay').val();
						var daydiff = parseInt(moment(peDate).diff(moment(bData), 'days'));
						if(daydiff<0){
							 return condition = cmnTrvlrVal($this , i18n.t("passportValidPeriod"));
						}
					}
				}
				
				$this.removeClass('error');
			}
			if($this.hasClass('_engCalIqamaExpDate') && condition==true && ($this.is(':visible'))){
				var peDate = $this.find('.birthDay').val();
				var message = $this.attr('data-err');
				if(peDate=="" || $this.find('.birthDate').prop('selectedIndex')==0 || $this.find('.birthMonth').prop('selectedIndex')==0 || $this.find('.birthYear').prop('selectedIndex')==0){
					return condition = cmnTrvlrVal($this , i18n.t("pleaseProvideAValidIqamaIdExpiryDate"));
				}
				
				$this.removeClass('error');
			}
			
			if($this.hasClass('_hijriCalIqamaExpDate') && condition==true && ($this.is(':visible'))){
				var peDate = $this.find('.hijriDay').val();
				var message = $this.attr('data-err');
				if(peDate=="" || $this.find('.hijriDate').prop('selectedIndex')==0 || $this.find('.hijriMonth').prop('selectedIndex')==0 || $this.find('.hijriYear').prop('selectedIndex')==0){
					return condition = cmnTrvlrVal($this , i18n.t("pleaseProvideAValidIqamaIdExpiryDate"));
				}
				
				$this.removeClass('error');
			}
			if($this.hasClass('_passportIssuedDate') && condition==true && ($this.is(':visible'))){
				var peDate = $this.find('.birthDay').val();
				var message = $this.attr('data-err');
				var dob = moment($this.parents('.travlrDetails').find('._userInfo').find('._dob .birthDay').val(),'MM/DD/YYYY');
				var pid = moment(peDate,'MM/DD/YYYY');
				if(peDate=="" || $this.find('.birthDate').prop('selectedIndex')==0 || $this.find('.birthMonth').prop('selectedIndex')==0 || $this.find('.birthYear').prop('selectedIndex')==0){
					return condition = cmnTrvlrVal($this,message);
				}					
				else if(pid._i<=dob._i){						
					return condition = cmnTrvlrVal($this , i18n.t("issueDateShouldBeGreaterThanDOB"));
				}else if(pid._i>moment().format('YYYY-MM-DD')){
					return condition = cmnTrvlrVal($this , i18n.t("issueDateExceedsTodaysate"));
				}
				$this.removeClass('error');
			}
			if(validateDuplicateNames()===false){
				growl_alert(i18n.t("errduplicatenames"));	
				condition = false;
				return false;
			}
			if(validateAdultInfantString()==false){
				growl_alert(i18n.t("adultInfantNameLengthCondition"));
				condition = false;
				return false;
			}
			// Duplicate Passport number validation
			if($this.hasClass('_passportId') && condition==true && ($this.is(':visible'))){
				if(validateDuplicatePassportNamesReview("_passportId")===false){
					growl_alert(i18n.t("duplicateNumsNotAllow"));
					condition = false;
					return false;
				}
			}else if($this.hasClass('_nationalId') && condition==true && ($this.is(':visible'))){
				if(validateDuplicatePassportNamesReview("_nationalId")===false){
					growl_alert(i18n.t("duplicateNationalIdNotAllow"));
					condition = false;
					return false;
				}
			}
			else if($this.hasClass('_iqamaId') && condition==true && ($this.is(':visible'))){
				if(validateDuplicatePassportNamesReview("_iqamaId")===false){
					growl_alert(i18n.t("duplicateIqamaIdNotAllow"));
					condition = false;
					return false;
				}
			}
			
		
	});
	if(condition==true){
		$('.alert_custom').hide();
		if(target.hasClass("_saveTravellerDetails")){
			//$.loadingPageAnimation('show');
			var $target = $('.inputGrp');
			var paxInfoData = {};
			var count = 1;
			var productId = $(this).attr('data-pid');
			btnLoadingAnimation($(this));
			$(this).attr("disabled", "disabled");
			$(this).text(i18n.t("processingText"));
				$target.each(function () {
					var userObj = {};
		/*			telephoneDetails.areaCityCode=$('#phoneCountryCode').val();
					telephoneDetails.countryName=$('#phoneCountryName').val();
					telephoneDetails.phoneNumber=$('._txtPhone').val();*/
					var $userInfo = $(this).find('._userInfo');
				//	var $userDateInfo = $(this).find('._userDateInfo');
					var $userPassportInfo = $(this).find('._userPassportInfo');
					var $leadInfo = $(this).find('._leadInfo');
					var $fName = $userInfo.find('._txtFName');
					var $mName = $userInfo.find('._txtMName');
					var $lName = $userInfo.find('._txtLName');
					var $title = $userInfo.find('._txtTitle');
					var $dob = $(this).find("input[name='dob"+count+"_birthDay']");
					var $passportExp;
					var $passportIssueDate;
					var $passportNum;
					var $nationality;
					var $passportIssuedNation;
					if($userPassportInfo.find('.passportInfoBody').is(':visible')){
						$passportNum = $userPassportInfo.find('.passportInfoBody').find('._txtPNum');
						$nationality = $userPassportInfo.find('.passportInfoBody').find('._nationality');
						$passportIssuedNation = $userPassportInfo.find('.passportInfoBody').find('._issuingCountry');
						$passportExp = $(this).find("input[name='pExp"+count+"_birthDay']").val();
						$passportIssueDate = $(this).find("input[name='pIss"+count+"_birthDay']").val() || '2016-08-25';
					}else if($userPassportInfo.find('.iqamaBody').is(':visible')){
						$passportNum = $userPassportInfo.find('.iqamaBody').find('._txtINum');
						$nationality = $userPassportInfo.find('.iqamaBody').find('._nationality');
						$passportIssuedNation = $userPassportInfo.find('.iqamaBody').find('._issuingCountry');
						
						if($userPassportInfo.find('.iqamaBody').find('._hijriCal').is(':checked')){
							$passportExp = moment($(this).find("input[name='pExp"+count+"_hijriDay']").val()).format('YYYY-MM-DD');
						}else{
							$passportExp = $(this).find("input[name='pExp"+count+"_iqamaDay']").val();
						}
						$passportIssueDate = '2016-08-25';
					}else{
						$passportNum = $userPassportInfo.find('.nationalidBody').find('._txtNNum');
						$nationality = $userPassportInfo.find('.nationalidBody').find('._nationality');
						$passportIssuedNation = $userPassportInfo.find('.nationalidBody').find('._issuingCountry');
						$passportExp = '2020-08-25';
						$passportIssueDate =  '2016-08-25';
					}
					//var $passportIssueDate = $(this).find("input[name='pIssue"+count+"_birthDay']");
					var findGrp = $(this).attr('data-group');
					var $emailAddress = $leadInfo.find('._txtEmail');
					var $phone = $leadInfo.find('._txtPhone');
					var $mealPref  =  $(this).find('._txtMealPref');
					var $seatPref  =  $(this).find('._txtSeatPref');
					var $extraPref  =  $(this).find('._txtextraPref');
					var $onwardExtraBaggage  =  $(this).find('._txtOnwardExtraBaggage');
					var $returnExtraBaggage  =  $(this).find('._txtReturnExtraBaggage');
					var $ffpID  =  $(this).find('._txtFfpID');
					var $freqNumber  =  $(this).find('._freqNo');
					var $docTypeSelected = '0';
					if($(this).find('._documentType:checked').attr('data-doctype') == 'passport'){
						 $docTypeSelected = '2';
					}else if($(this).find('._documentType:checked').attr('data-doctype') == 'nationalId'){
						 $docTypeSelected = '3';
					}else if($(this).find('._documentType:checked').attr('data-doctype') == 'iqamaId'){
						 $docTypeSelected = '4';
					}
					
					
					paxInfoData[count] = {};
					paxInfoData[count].Document = {};
					paxInfoData[count].BaggageOptions = {};
					var gender = 'Male';
					if(['Mrs', 'Miss'].indexOf($title.val()) > -1){
						gender='Female'
					}
			
					if(typeof $leadInfo!="undefined" && $leadInfo.length>0){
						paxInfoData.contactinfo = {};
						paxInfoData.contactinfo.email = $emailAddress.val() ;
						paxInfoData.contactinfo.mobile = $phone.val() ;
						paxInfoData.contactinfo.countryCode = $('#phoneCountryCode').val();
					}
					
					switch (findGrp) {
					case 'Adult':
						paxInfoData[count].PaxType =  'ADT';
						break;
					case 'Child':
						paxInfoData[count].PaxType = 'CHD';
						break;
					case 'Infant':
						paxInfoData[count].PaxType = 'INF';

						break;
					default:
						paxInfoData[count].PaxType = 'ADT';
				   }
					paxInfoData[count].Title = $title.val();
					paxInfoData[count].GivenName = $.trim((($fName.val()).replace(/-/g,"")).replace(/\s\s+/g,' '));
					paxInfoData[count].middlename = $.trim((($mName.val()).replace(/-/g,"")).replace(/\s\s+/g,' '));
					paxInfoData[count].Surname = $.trim((($lName.val()).replace(/-/g,"")).replace(/\s\s+/g,' '));

					paxInfoData[count].Assistance = $extraPref.val() || '';
					paxInfoData[count].SeatType=$seatPref.val() || '';
					paxInfoData[count].MealType=$mealPref.val() || '';
					paxInfoData[count].BaggageOptions.onWard = $onwardExtraBaggage.val() || '';
					paxInfoData[count].BaggageOptions.backWard = $returnExtraBaggage.val() || '';
					paxInfoData[count].Document.ExpireDate=$passportExp ||''; 
					paxInfoData[count].Document.EffectiveDate=$passportIssueDate || '';
					paxInfoData[count].Document.DocID=$passportNum.val();
					paxInfoData[count].freqNumber=$freqNumber.val();
					
					paxInfoData[count].Document.BirthDate=$dob.val() || '';
					paxInfoData[count].Document.BirthPlace=$nationality.val() ||'';
					if($(this).find('._documentType:checked').attr('data-doctype') == 'iqamaId'){
						paxInfoData[count].Document.DocIssueLocation=$nationality.val() ||'';
					}else{
						paxInfoData[count].Document.DocIssueLocation=$passportIssuedNation.val() ||'';
					}
					paxInfoData[count].Document.DocIssueAuthority=$passportIssuedNation.val() ||'';
					paxInfoData[count].Document.Gender = gender;
					paxInfoData[count].Document.DocType = $docTypeSelected;
					
					count++;
					
				});
				paxInfoData.selectedSeats=selectedSeats;
				
				delete flightSerVar.selectedALTickets.netPrice; // deleting b4 sending book req
				paxInfoData.alTicketDetails=flightSerVar.selectedALTickets;
			
			var bookReqData = {productId:productId,requestObject:paxInfoData};
				/*if(flightSerVar.fareComboSelected){
					console.log('flightSerVar.fareComboSelected');
					bookReqData.fareComboSelected = true;
				}*/
				
				$.post('/flight/bookRequest',bookReqData,function(res){
					//console.log('book res');console.log(res);
					if(typeof res!="undefined"){
						if(res.status=="ERROR"){
							location.href="/flight/error?code="+res.errorCode; return;
						}else{
						 inputConsole('REPORTSTATUS='+res.response.paymentObj.flyinCode+'-BookResponse-'+res.response.uuid);
						}
						/*var obj = res.response;			
						window.location = obj;*/
						var data ={
								responseData:res.response
						}
						
						$.get('/common/themes/v2/tmpl/flight/flightReview.ejs?v='+Math.random(), {}, function(template) {
						    loadTemplate('review-terms', data, $('#review-terms'), template);
						    
						    pricetagConvert.init();
						    //loadTemplate('chooseSeat',data,$('#chooseSeat'),template);
						    loadTemplate('redeem-points', data, $('#redeem-points'), template);
						    loadTemplate('payment', data, $('#payment'), template);
                            loadTemplate('myWallet', data, $('#myWallet'), template);
							
						    if (res.response.paymentObj.showPayfort) {

						            $.get('/payment/generateShasign', {
						                pid: productId
						            }, function(shaResposne) {						                
						                $('._payfort').find('#signature').val(shaResposne.shaSign);
						                $('._payfort').find('#service_command').val(shaResposne.service_command);
						                $('._payfort').find('#merchant_identifier').val(shaResposne.merchant_identifier);
						                $('._payfort').find('#access_code').val(shaResposne.access_code);
						                $('._payfort').find('#merchant_reference').val(shaResposne.merchant_reference);
						                $('._payfort').find('#language').val(shaResposne.language);
						                $('._payfort').find('#return_url').val(shaResposne.return_url);
						                $('._payfort').find('#paymentForm').attr('action', shaResposne.action_url);
						            });

						    } else if (res.response.paymentObj.showCheckout) {								   
						           //enable payment gateway load the checkout kit	
								   loadCheckoutKit(res.response.paymentObj);						           
							}	
                            
						resTabPanel();
						initPaymentPanel();
						hideMore();
						saveCardInfo();

						$('._saveTravellerDetails').hide();
						$('#provideTravellerDetails,.fcSuccessAlert').hide();												
						$('#travellerDetailsStep').addClass('done');
						$('#paymentStep').addClass('active');
						$('#onwFltEdit,#rtnFltEdit').hide();	// fareCombo flow
						
					    var configuration = {
					        mobileElm: 'QITAF_MOBILE_NO',
					        genOtpBtn: 'QITAF_GRNOTP_BTN',
					        pid: 'FTDP',
					        product: 'FTDP',
					        amount: 'QITAF_AMOUNT_TO_BE_REDEEM',
					        pin: 'QITAF_PIN_NO',
					        redeemPointBtn: 'QITAF_REDEEM_POINT_BTN',
					        reGenerateOTP: 'QITAF_RE_GENERATE_OTP_BTN',
					        earnGenOtpBtn: 'QITAF_EARN_GRNOTP_BTN',
					        earnMobileNum: 'QITAF_EARN_MOBILE_NO',
					        earnMessage: 'earnMessage',
					        optForm: 'optForm',
					        optPhone: 'optPhone',
					        optEPhone: 'optEPhone',
					        messageContainer: 'errorMessage',
					        redeemContainer: 'redeemMessage',
					        successClass: 'validate_success_message',
					        errorClass: 'validate_error_message',
					    };
					    QitafService.init(configuration);
					    cardYear();
						});					
						
						
						/*var sadad= $('.panel-heading._sadad');
						var payfort=$('.panel-heading._payfort');
						var checkout=$('.panel-heading._checkout');
						var installment=$('.panel-heading._installments');
						var payAtStore=$('.panel-heading._payAtStore');
						$('._ltyInfo').attr('data-bid',res.response.paymentObj.flyinCode);
						$('._ltyInfo').attr('data-bamt',res.response.paymentObj.sarAmount);
						var lyltclassName = '.tistlPointsSmry';
						if(typeof res.response.loyaltydetails != 'undefined'){
								$(lyltclassName+' li:first-child').after('<li class="green-txt"><span class="pull-left">'+
								 i18n.t('flyinRewardsRedeemed')+ '</span><span class="pull-right">'+i18n.t(res.response.flightItineraries.jsonFlightPrice.up.uc)+' <strong class="_priceTag">'+res.response.loyaltydetails.redemptionUCAmount+'</strong></span></li>');
						}
						paymentConfigureFlight(sadad,payfort,checkout,installment,payAtStore,res.response.paymentObj);
						
						if(res.response.paymentObj.showQitaf){
							$('.qiTab').show();
						}else{
							$('.qiTab, #QP').hide();
						}
						var lytObj = $('._ltyInfo');
						$(lytObj).attr('data-pname',res.response.paymentObj.product);
						$(lytObj).attr('data-bid',res.response.paymentObj.flyinCode);
						$('.review-terms').show();
						$('._saveTravellerDetails').hide();
						$('#provideTravellerDetails,.fcSuccessAlert').hide();
						//$('#travellerSeatSelection').hide();
						$('#travellerDetailsStep').addClass('done');
						$('#paymentStep').addClass('active');
						//$('#paymentPanel').show();
						$('.payment').show();
						$('.redeemPoints').show();
						if(res.response.couponData && res.response.couponData.status == 'success' && res.response.couponData.data &&  res.response.couponData.data[0]){
							$('#couponCode').val(res.response.couponData.data[0].code);
							$('.couponOfcode').text(res.response.couponData.data[0].des);													
						}
						if(typeof $('.couponOfcode').text() == 'undefined' || $('.couponOfcode').text()==null || $('.couponOfcode').text().trim() == ''){
							$('.couponOfcode').hide();
						}else{
							$('.couponOfcode').show();
						}
						setTimeout(function(){	
						if(!$('.redeemPoints ul li').is(':visible')){
							$('.redeemPoints').hide();
					
						} 
						},200);
						$('#paymeBtn').show();
						reedemPointsVisible();
						
						if(res.response.paymentObj.savedPayfortCardDetails && res.response.paymentObj.savedPayfortCardDetails.length>0){							
							setTimeout(function(){

								if(res.response.paymentObj.showPayfort)
								{
									payfort.removeClass('active');
									payfort.next().addClass('collapse');
									payfort.parent('.panel').removeClass('first');
								}
								else{
									checkout.removeClass('active');
									checkout.next().addClass('collapse');
									checkout.parent('.panel').removeClass('first');
								}
								$('.buttons').find('#paymeBtn').attr('onclick',"payMeFlight('QUICKPAY',this)");
								hideMore();
								
							},500);
						}
						else if(res.response.paymentObj.showCheckout){
							console.log('inside checoooooooooout');
							setTimeout(function(){
							$('.buttons').find('#paymeBtn').attr('onclick',"payMeFlight('CHECKOUT',this)");
							},500);
						}
						if(res.response.paymentObj.userLoggedIn){	
							setTimeout(function(){							
								$('.saveCradCheck').show();
								$('._payment').parent().removeClass('first');
								saveCardInfo();
							},500);
						}
						else{
							setTimeout(function(){							
								$('.saveCradCheck').hide();
							},500);
						}
						
						
						
						//$('#fcProvideTravellerDetails').hide();  // fareCombo flow
						$('#onwFltEdit,#rtnFltEdit').hide();	// fareCombo flow
						
						setTimeout(function(){
							/*if(baggageSec && baggageSec.updatedPrice){
								$('#paymeBtn').val('PAY '+flightSerVar.setSelectedCurrency+' '+baggageSec.updatedPrice);
							}	
							if(parseFloat(flightSerVar.modifiedTotalPrice) > 0){
								$('#paymeBtn').val('PAY '+flightSerVar.setSelectedCurrency+' '+flightSerVar.modifiedTotalPrice);
							}							
						},500);
						//Hide Installment Section 
					    if(res.response.paymentObj.sarAmount < 1000){
							$('.install').hide();
						}
						
						
						offerWidgetFlyin.init();
						//var configuration = {mobileElm:'#MOBILE_NO'};
						//QitafService.init(configuration);
						//$.loadingPageAnimation('hide');
						var offsetPopTop = $('#paymentPanel').offset().top;
						$('html, body').animate({scrollTop:offsetPopTop}, 500);
						
							$(".anchorScroll").click(function(event){
								event.preventDefault();
								var offset = $($(this).attr('href')).offset().top-50;
								$('html, body').animate({scrollTop:offset}, 500);
							});*/
						
					}
				});
				
				var contPayObj = JSON.parse($("#contPayData").val());
				flightContPay(contPayObj);
		}
		if(target.hasClass("_saveChanges")){
			var pid = $('#FTDP').attr('data-pid');
		    var fName = $('._fnameEdit');
		    var lName = $('._lnameEdit');
		   // var mName = $('._mnameEdit');
		    var id = $('._idEdit');
		    var data = {
		        fName: $.trim(((fName.val()).replace(/-/g,"")).replace(/\s\s+/g,' ')) || '',
		        lName: $.trim(((lName.val()).replace(/-/g,"")).replace(/\s\s+/g,' ')) || '',
		       // mName: $.trim(((mName.val()).replace(/-/g,"")).replace(/\s\s+/g,' ')) || '',
		        id: id.val() || '',
		        pid: pid,
		        product: 'F',
		    }
		    $.post('/save/travellerdetails', data, function(res) {
		        var dataRes = {
		            responseData: res
		        }
		        $('.modal').modal('hide');
				$(".modal-backdrop").toggleClass("modal-backdrop fade out");
				$('body').css('padding',0);
		        setTimeout(function() {
		            $.get('/common/themes/v2/tmpl/flight/flightReview.ejs?v='+Math.random(), {}, function(template) {
		                flightSerVar.dynamicTemplate = template;
		                loadTemplate('review-terms', dataRes, $('#review-terms'), flightSerVar.dynamicTemplate);
		                $('._dynamicPayBtn').hide();
		            });
		        }, 200);
		    });
		}
		
	}  //TO load the function.
		//cardYear();
});
/**
 * Validate AdultName with Infant Name
 */
function validateAdultInfantString(){	
	var condition = true;
	var $target = $('.inputGrp');
	$target.each(function(){
		var $this = $(this);
		var check = '';
		var $group = $this.attr('data-group');
		var $nextgroup = $this.next().attr('data-group');
		var $myacgroup = $this.next().next().attr('data-group');
		if($group=='Adult' && 
				((typeof $nextgroup!='undefined' && $nextgroup!='' && $nextgroup==='Infant'))||(typeof $myacgroup!='undefined' && $myacgroup!='' && $myacgroup==='Infant')){
			var aFname = $this.find('._txtFName');
			var aLname = $this.find('._txtLName');
			if($this.next('.inputGrp').attr('data-group') === 'Infant'){
				check = $this.next('.inputGrp');
			}else if($this.next().next('.inputGrp').attr('data-group') === 'Infant'){
				check = $this.next().next('.inputGrp');
			}
			var checkAttr = check.attr('data-group');
			if(typeof checkAttr!="undefined" && checkAttr=="Infant"){
				var iFname = check.find('._txtFName');
				var finalString = $.trim(aFname.val()) + $.trim(aLname.val()) + $.trim(iFname.val());
				if(finalString.length>50){
					iFname.focus();
					condition =  false;
				}
			}
		}
	});
	return condition;
}

/**
 * Passport Number Duplication Handling
 */
$('body').on('blur','._passportId',function() {
	validateDuplicatePassportNamesReview("_passportId");
});
/**
 * National Id Duplication Handling
 */
$('body').on('blur','._nationalId',function() {
	validateDuplicatePassportNamesReview("_nationalId");
});
/**
 * Iqama Id Duplication Handling
 */
$('body').on('blur','._iqamaId',function() {
	validateDuplicatePassportNamesReview("_iqamaId");
});

/**
 * Method to validate duplicate Passport names for each traveller/guest for Review Pages
 * @returns {Boolean}
 */
function validateDuplicatePassportNamesReview(value){
	var passportNameObjectsArray = [],nameArr = [];
	if(value == "_passportId"){
		var passportNameObjects = $('.prvdTavDit').find('input._passportId');
	}else if(value == "_nationalId"){
		var passportNameObjects = $('.prvdTavDit').find('input._nationalId');
	}else{
		var passportNameObjects = $('.prvdTavDit').find('input._iqamaId');
	}
	if(typeof passportNameObjects != "undefined" && passportNameObjects.length>0){
		for(var i=0; i<passportNameObjects.length; i++){
			passportNameObjectsArray.push(passportNameObjects[i]);
			nameArr.push([$(passportNameObjects[i]).val().replace(/ /g,'').toLowerCase() ,passportNameObjects[i]]);
	    }
	}    
	var dupNames = find_duplicates(nameArr);  
	if(dupNames.length==0){
		for(var j=0; j<nameArr.length; j++){
			if($(nameArr[j][1]).val()!='undefined' && $(nameArr[j][1]).val()!=''){
				$(nameArr[j][1]).removeClass('error');
			}
		}
		return true;
	}		
	for(var i=0; i<dupNames.length; i++){
		for(var j=0; j<nameArr.length; j++){
			if(nameArr[j][0]==dupNames[i] && nameArr[j][0]!="" && dupNames[i]!=""){
				$(nameArr[j][1]).addClass('error');
			}
		}
	}
	return false;
}

/**
 * Method to validate duplicate combined names for each traveller/guest Details Page
 * @returns {Boolean}
 */
function validateDuplicateNames(){
		var fnameArr = [],mnameArr = [],lnameArr = [],nameArr = [];
		var fname  = $('.travlrDetails.inputGrp').find('input._txtFName');	
		var lname  = $('.travlrDetails.inputGrp').find('input._txtLName');
		if(typeof fname != "undefined" && fname.length>0){
		        for(var i=0; i<fname.length; i++){
		        	fnameArr.push(fname[i]);
		        	lnameArr.push(lname[i]);
		        }
		    }    
		if(typeof fnameArr != "undefined" && fnameArr.length>0){
		        for(var i=0; i<fnameArr.length; i++){
		        	/*if($(fnameArr[i]).val()!='' && $(lnameArr[i]).val()!='' && $(fnameArr[i]).val()==$(lnameArr[i]).val()){
		        		$(fnameArr[i]).val('');$(lnameArr[i]).val('');
		        		$(fnameArr[i]).addClass('error');
		        		$(lnameArr[i]).addClass('error');
		        		growl_alert(JSLang.get.firstNameCannotBeTheSameAsLastName);
		        	}*/
		        	var txt1 = $(fnameArr[i]).val(), txt2 = $(lnameArr[i]).val();
		            var fullName = $.trim(txt1+txt2).replace(/ /g,'').toLowerCase() || '';    
		            var fullNameArr = [$(fnameArr[i]),$(lnameArr[i])];	
		            nameArr.push([fullName,fullNameArr]);
		        }
		 }
		 var dupNames = find_duplicates(nameArr);  
		 if(dupNames.length==0){
				for(var j=0; j<nameArr.length; j++){
					if((nameArr[j][1][0].val()!= 'undefined' && nameArr[j][1][0].val()!='' && nameArr[j][1][0].val().length>2) && (nameArr[j][1][1].val()!= 'undefined' && nameArr[j][1][1].val()!='' && nameArr[j][1][1].val().length>2)){
						nameArr[j][1][0].removeClass('error');
						nameArr[j][1][1].removeClass('error');
					}
				}
				return true;
		 }
		 for(var i=0; i<dupNames.length; i++){
				for(var j=0; j<nameArr.length; j++){
					if(nameArr[j][0]==dupNames[i] && nameArr[j][0]!="" && dupNames[i]!=""){
						nameArr[j][1][0].addClass('error');
						nameArr[j][1][1].addClass('error');
					}
				}
		 }
		 
	return false;
}

function find_duplicates(arr) {
	var len=arr.length,
	out=[],
	counts={};
	for (var i=0;i<len;i++) {
		var item = arr[i][0];
		counts[item] = counts[item] >= 1 ? counts[item] + 1 : 1;
	}
	for (var item in counts) {
		if(item!="" && counts[item] > 1)
		out.push(item);
	}
	return out;
}
/**
 *@Info Payment Module
*/
function payMeFlight(args,elm) {
	flightSerVar.payPrice = $('#paymeBtn').val();
	var device_fingerprint = $('#device_fingerprint').val();
	//console.log('device_fingerprint ',device_fingerprint);
	
	var pnlHdng = $(".payment .panel-heading");
	var chkActv = false;
	/*for(var i=0; i<pnlHdng.length; i++){
		if($(pnlHdng[i]).is(':visible') && $(pnlHdng[i]).hasClass("active")){
			chkActv = true;
			break;
		}
	}*/
	var target = $('._payMode');
	target.each(function(){
		if($(this).hasClass('active')){
			console.log($(this));
			chkActv = true;
		}
	});
	if(chkActv){
		noRefreshAction();
	    var pid = $('#FTDP').attr('data-pid');
	    var payMode = args;
		 var data ={pid:pid,payMode:payMode};	
		 if(args != 'PAYATSTORE'){
			 var condition1 = false;
			 if(args=="PAYFORT" || args=="CHECKOUT" || args=="AMEX"){
				 var condition1 = validateCardInfo();
			 }
			 if(args=="SADAD"){
				 var condition1 = validateSadadOLP(args);
			 }
			 if(args=="FORT-SADAD"){
				 var condition1 = validateSadadOLP(args);
			 }
			 if(args=="INSTALLMENTS"){
				 condition1 = true;
			 }
			
			 if(args=="QUICKPAY"){
				 var cvv;
				 var unique_id;
				 var radio = $('._saveCardHideShow').find('input[type=radio]');
				 radio.each(function(){
				   if($(this).is(':checked')){
				     unique_id = $(this).attr('id');
				     console.log(unique_id);
				     cvvObj =  $(this).closest('li').find('#QUICKPAY_CARD_CVV');
				     cvv =  $(this).closest('li').find('#QUICKPAY_CARD_CVV').val();
				   }
				});
			 	if((cvv.length < 3)||(!_Nonly(cvv))||(cvv.length > 3)){  
		            growl_alert(i18n.t("enterCVV"));
		            cvvObj.addClass('error');
		            cvvObj.focus();
		            cvvObj.val("");
		            condition1=false;
	            }else{
	            	condition1= true;
	            }
			 }
			
			 if(condition1 == true){
				 var pay_type_card = "";
				 if(args=="PAYFORT" && $("#CARD_NO").hasClass("mastercard")){
					 pay_type_card = "Master";
				 }else if(args=="PAYFORT" && $("#CARD_NO").hasClass("visa")){
					 pay_type_card = "Visa";
				 }
				 payNow({
					 "coupon_code":$("#cpnApplied").val(),
					 "qitaf":($("#qitafVal").val() == "true") ? "true" : "false",
					 "pay_type_card":pay_type_card,
					 "pay_type":args
				 });
				 btnLoadingAnimation($('#paymeBtn'));
				 dontRefreshPopup();
				 bookingStatusChange({pid:pid});
				 $.post('/payment/getData',data,function(res){
					 
					if(res.response.fareComboSelected== true && res.response.PNR == null){ 
						 var data1 ={pid:pid,payMode:payMode};
							 $.post('/payment/payAtStorePreBookFareCombo',data1,function(res){	
								 if(res.response == null || res.response.bookRS == null){	
									 /*var base_url = window.location.origin;
									 var result = base_url+'/flight/pnrError?pid='+pid;
									 location.href = result;	*/							 
									
									//location.href="/flight/error"; 
										var templateObj = {
														pnrUrl:res.pnrUrl
												}
										flightSerVar.loadTemplate('technical_error',templateObj,$('#priceChangePopup'),function(){
													$('#priceChangePopup').modal({
														 show: true,
														 keyboard: false,
														 backdrop:'static'
														 });
												});
								    return;
								}else if(res.response.bookRS.fareChange == 'YES'){ 
										
										$.get('/common/themes/v2/tmpl/flight/flightReview.ejs?v='+Math.random(),{},function(template){
											flightSerVar.dynamicTemplate = template;
											var templateObj = {
													args:args, 
													pid:pid,
													uc:res.response.uc,
													onwrdUpdatePrice:res.response.onwrdUpdatePrice,
													onwrdPrice:res.response.onwrdPrice,
													retrnUpdatePrice:res.response.retrnUpdatePrice,
													returnPrice:res.response.returnPrice,
													pnrUrl:res.response.pnrUrl,
													trip:res.response.tripChanged
											}
											flightSerVar.loadTemplate('fareCombo_price_change',templateObj,$('#priceChangePopup'),function(){
												$('#priceChangePopup').modal({
													 show: true,
													 keyboard: false,
													 backdrop:'static'
													 });
											});
											
										});
									 
							      } 
								else if(res !== null && res.response && res.status=='SUCCESS'){
									payAfterPNRGeneration(args,pid,device_fingerprint);							
									
								}else{
									//location.href="/flight/error"; 
									var templateObj = {
													pnrUrl:res.response.pnrUrl
											}
									flightSerVar.loadTemplate('technical_error',templateObj,$('#priceChangePopup'),function(){
												$('#priceChangePopup').modal({
													 show: true,
													 keyboard: false,
													 backdrop:'static'
													 });
											});
								    return;
								}
							 });
					      
					}else if(res.response.PNR == null && res.response.fareComboSelected == false){					
					 var data1 ={pid:pid,payMode:payMode};
						 $.post('/payment/payAtStorePreBook',data1,function(res){							
							 if(res.response == null || res.response.bookRS == null){								
								 var base_url = window.location.origin;
								 var result = base_url+'/flight/pnrError?pid='+pid;
								 location.href = result;								 
								 return;
							 }else if(res.response.bookRS.fareChange && res.response.bookRS.fareChange.toLowerCase() == 'YES'.toLowerCase()){
									$.get('/common/themes/v2/tmpl/flight/flightReview.ejs?v='+Math.random(),{},function(template){
										flightSerVar.dynamicTemplate = template;
										var templateObj = {
												args:args, 
												pid:pid,
												uc:res.response.uc,
												updatedPrice:res.response.updatedPrice,
												FromPrice:res.response.FromPrice,
												pnrUrl:res.response.pnrUrl
										}
										flightSerVar.loadTemplate('price_change',templateObj,$('#priceChangePopup'),function(){										
											$('#priceChangePopup').modal({
												 show: true,
												 keyboard: false,
												 backdrop:'static'
												 });
										});
										
									});
								 
						      } 
							else if(res !== null && res.response && res.status=='SUCCESS'){
								payAfterPNRGeneration(args,pid,device_fingerprint);							
								
							}else{
								location.href="/flight/error"; 
							    return;
							}
						 });
				      }
					else {                        				
						payAfterPNRGeneration(args,pid,device_fingerprint);
                      }
				 }); 
			 }  
		 }
		 else {
			 bookingStatusChange({pid:pid});
			 payAfterPNRGeneration(args,pid,device_fingerprint);
		 }
	}
	else{
		growl_alert(i18n.t("slctPymntOptn"));
	}   
}


var payAfterPNRGeneration = function(args,pid,device_fingerprint){
	
	$('._payMe').hide();
	if(args==='QUICKPAY'){
		 
		 btnLoadingAnimation($('#paymeBtn'));
		 dontRefreshPopup();
		 var cvv;
		 var unique_id;
		 var radio = $('._saveCardHideShow').find('input[type=radio]');
		 radio.each(function(){
		   if($(this).is(':checked')){
		     unique_id = $(this).attr('id');
		     cvv =  $(this).closest('li').find('#QUICKPAY_CARD_CVV').val();
		   }
		   
		 })	 		 
		 
		 var data = {
				 	cvv:cvv,
				    pid:pid,
				    unique_id:unique_id,
				    device_fingerprint:device_fingerprint
			}
			$.post('/payment/payfort/quickPay', data, function(res) {
				if(res.status==='success')
				 {
					if(res.check_3ds)
					{
						location.href = res.url;
					}
					else{
					 	if(res.bnpl)
				 		{
					 		location.href = "/pages/hotel/hotelConfirmation?SavedItenaryId="+res.savedItenaryId+'&pid='+res.pid;
				 		}
					 	else if(res.product === 'mfc' || res.product === 'ma'){
					 		location.href = res.rurl;
					 	}
					 	else{
					 		loadFlightConfirmationPage({pid:res.pid,uuid:res.uuid});
					 	}
					}
				 }
				 else{
					location.href = '/payment/payfortRetry?pid='+res.pid;
				 }	
				
			});	
	 }
	
	if (args === 'PAYFORT') {		
			btnLoadingAnimation($('#paymeBtn'));
			
			var data = {
					device_fingerprint:device_fingerprint,
				    pid:pid,
			}
			//console.log('device_fingerprint  ===',device_fingerprint);
			$.post('/payment/payfort/saveDeviceFingerPrint', data, function(res) {
				$('#paymentForm').submit();
			});
			
			/*var CARD_NO = $('#CARD_NO');
			var CARD_HOLDER_NAME = $('#CARD_HOLDER_NAME');
			var CARD_EXPIRY_MONTH = $('#CARD_EXPIRY_MONTH');
			var CARD_EXPIRY_YEAR = $('#CARD_EXPIRY_YEAR');
			var CARD_CVV = $('#CARD_CVV');
			var data = {
			    CARD_NO: CARD_NO.val() || '',
			    CARD_HOLDER_NAME: CARD_HOLDER_NAME.val() || '',
			    CARD_EXPIRY_MONTH: CARD_EXPIRY_MONTH.val() || '',
			    CARD_EXPIRY_YEAR: CARD_EXPIRY_YEAR.val() || '',
			    CARD_CVV: CARD_CVV.val() || '',
			    PID: pid,
			}
			
			$.post('/payment/payfort', data, function(res) {
				if(res.status==='success')
				 {
				 	location.href = res.url;
				 }
				 else{
					location.href = '/common/error';
				 }
			});		*/
	}
	if (args === 'FORT-SADAD') {		
		var sadadFire = validateSadadOLP(args);
		if (sadadFire) {
			btnLoadingAnimation($('#paymeBtn'));	

			var sadad_olp = $('#sadad_olp').val();
			console.log('olpId-------->',sadad_olp);
			var data = {
					sadad_olp:sadad_olp,
				    pid:pid,
			}
			$.post('/payment/fortSadad/generateFortSadadDetails',data, function(sadadResposne) {						                
               
                $('._fort-sadad').find('#signature').val(sadadResposne.shaSign);
                $('._fort-sadad').find('#command').val(sadadResposne.command);
                $('._fort-sadad').find('#merchant_identifier').val(sadadResposne.merchant_identifier);
                $('._fort-sadad').find('#access_code').val(sadadResposne.access_code);
                $('._fort-sadad').find('#merchant_reference').val(sadadResposne.merchant_reference);
                $('._fort-sadad').find('#amount').val(sadadResposne.amount);
                $('._fort-sadad').find('#currency').val(sadadResposne.currency);
                $('._fort-sadad').find('#language').val(sadadResposne.language);
                $('._fort-sadad').find('#customer_email').val(sadadResposne.customer_email);
                $('._fort-sadad').find('#payment_option').val(sadadResposne.payment_option);
                $('._fort-sadad').find('#order_description').val(sadadResposne.order_description);
                $('._fort-sadad').find('#customer_ip').val(sadadResposne.customer_ip);
                $('._fort-sadad').find('#eci').val(sadadResposne.eci);
                $('._fort-sadad').find('#customer_name').val(sadadResposne.customer_name);             
				$('._fort-sadad').find('#merchant_extra').val(sadadResposne.merchant_extra);
                $('._fort-sadad').find('#return_url').val(sadadResposne.return_url);
                $('._fort-sadad').find('#fortSadadForm').attr('action', sadadResposne.action_url);

				$('#fortSadadForm').submit();

            });
		}
	}
	 if(args==='CHECKOUT'){		 
		 btnLoadingAnimation($('#paymeBtn'));
		 $('#checkout-form').submit();
	 }

     if(args==='AMEX'){		 
		 btnLoadingAnimation($('#paymeBtn'));
		 $('#amex-form').submit();
	 }
	
	
	if (args === 'SADAD') {		
			var OLP_ID = $('#SADAD_OLP_ID');
			var data = {
			    OLP_ID: OLP_ID.val() || '',
			    PID: pid,
			}
			$.post('/payment/sadad', data, function(res) {
				if(res.status === "SUCCESS") {
					 location.href=res.ibURL;
					 $('#paymentStep').addClass('done');
					 $('#goodToGoStep').addClass('active');
				}
				else if(res.status === "FAILED") {
					$('#paymeBtn').removeClass('LoadBtn');					
					$('#paymeBtn').val(flightSerVar.payPrice);					
					$('#sadadErrorMessage').text(res.errorMessage).addClass('validate_error_message');
					$('#dontRefreshPopup').modal('hide');
					var offsetPopTop = $('.payment.opcPayment').offset().top;
					$('html, body').animate({scrollTop:offsetPopTop}, 500);
				}
			});		
	}
        
	if(args === 'INSTALLMENTS'){		
		var data= {pid:pid	}
		$.post('/payment/installments',data,function(res){
			if(res.status==='SUCCESS')
			 {
				 location.href=res.redirectURL;
			 }
			 else{
				 location.href = '/common/error';
			 }
		});
	}
	
	 if(args === 'PAYATSTORE'){
		 btnLoadingAnimation($('#paymeBtn'));		
		 var data ={pid:pid,payMode:args};	
		 $.post('/payment/payAtStorePreBook',data,function(res){
			 if(res.response == null || res.response.bookRS == null || res.response.bookRS.ar.ttl==null || res.response.bookRS.ar.ttl==' ')
			 {
				 location.href="/flight/error"; 
				 return;
			 }
			 else if(res !== null && res.response && res.status=='SUCCESS'){
				 payAtStoreFlightService.pnr =  res.response.bookRS.ar.pnr;
				 var ttl = res.response.bookRS.ar.ttl;
				 data ={pid:pid,ttl:ttl};
				 $.post('/payment/payAtStore',data,function(res){
					 if(res.status=='ERROR'){
						  location.href="/flight/error";
						  return;
						}else{
							    var lang = 'en'; 
								//Set Params to the service
								payAtStoreFlightService.pid = data.pid;
								payAtStoreFlightService.lang = lang;
								payAtStoreFlightService.voucher_number =res.voucherNumber;
								payAtStoreFlightService.request_id = res.requestID;
								payAtStoreFlightService.orderID=res.orderID;
								payAtStoreFlightService.url=res.URL;
								//Initialized the PayAtStore Server
								payAtStoreFlightService.loadFrame();
						}
				 });
			 }
			 else if(res !== null && res.response && res.status=='PNR_EXIST'){
				 $.post('/payment/payAtStore',data,function(res){
					 if(res.status=='ERROR'){
						 location.href="/flight/error";
						 return;
					 }else{   
						    var lang = 'en'; 
							//Set Params to the service
							payAtStoreFlightService.pid = data.pid;
							payAtStoreFlightService.lang = lang;
							payAtStoreFlightService.voucher_number =res.voucherNumber;
							payAtStoreFlightService.request_id = res.requestID;
							payAtStoreFlightService.orderID=res.orderID;
							payAtStoreFlightService.url=res.URL;
							//Initialized the PayAtStore Server
							payAtStoreFlightService.loadFrame();
					 }
				 });
			 }
			 else{
				location.href="/flight/error"; 
			    return;
			 }
		 });
	 }
	 
	 if(args ==='BANKTRANSFER'){
		 if($('body').find('._bankTransfer').hasClass('active'))
		 {
			 $.post('/payment/bankTransferPayMail',data,function(res){
				     if(res.status==='ERROR'){
						 location.href="/flight/error";
						 return;
					 }
					 if(res.status==='SUCCESS'){
						 location.href= '/flight/confirmation?pid='+pid;
                         return;
					 }
			 });
		 }
	 }
} 

//function for changing the booking status after click on payment button
var bookingStatusChange = function(data){
	 $.post('/payment/bookingStatusChange',data,function(res){
		 
	 });
	
}


var payAtStoreFlightService = {
		status:false,
		count:0,
		loadFrame:function(){
			if(this.status===false){
				ifrm = document.createElement("IFRAME"); 
				ifrm.setAttribute("src", payAtStoreFlightService.url); 
				ifrm.setAttribute("name", 'voucher_frame'); 
				ifrm.setAttribute("id", 'voucher_frame'); 
				ifrm.setAttribute("width", '860px'); 
				ifrm.setAttribute("height", '758px'); 
				ifrm.setAttribute("frameborder", '0'); 
				ifrm.setAttribute("marginwidth", '0'); 
				ifrm.setAttribute("marginheight", '0'); 
				ifrm.setAttribute("vspace", '0'); 
				ifrm.setAttribute("hspace", '0'); 
				ifrm.setAttribute("allowtransparency", 'true');
				ifrm.setAttribute("scrolling", 'no');
				//var scripts = document.getElementsByTagName("script");
				var scriptRef = document.getElementById('ad54');
				console.log(ifrm);
				console.log(scriptRef);
				scriptRef.parentNode.insertBefore(ifrm, scriptRef.nextSibling);	
				this.init();
				$('.pContainer,.redeemPoints,#paymeBtn,.review-terms').hide();  
			}
		},
		init:function(){
			var that = this;
			 $('#voucher_frame').on('load', function(){
				 	that.count++;
				 	if(that.count==2){
				 		//checkFlightOrderStatus(payAtStoreFlightService);
				 	}
			    });
			this.status = true;
		}
	};

function checkFlightOrderStatus(args){
	 var data ={orderID:args.orderID}
	 $.post('/payment/payAtStore/checkOrderStatus',data,function(res){
			if(res !== null && res.orderStatus=='Pending')
			{
				 var data ={pid:args.pid,pnr:args.pnr}
				 $.post('/payment/payAtStore/persistTicketRequest',data,function(res){
					 if(res.status === "ERROR"){
						 location.href="/flight/error"; 
						 return;
					 }
				 });
			}
			else{
				 location.href="/flight/error"; 
				 return;
			}
		}); 
}

// Traveller Details page Nationality selection time update to the Issuing Country field
$('body').on('change','._nationality',function(){
	var forChecktrgt = $(this).parents('._userPassportInfo').find('._documentType:checked');
	if($(forChecktrgt).attr('data-doctype')!="iqamaId"){
		var $newIssuedNation = $(this).parents('.idContainer').find('._issuingCountry');
		var $issuedNation = $(this).parents('.idContainer').find('._issuingCountry option[value="'+$(this).val()+'"]');
		$newIssuedNation.parents('.custom-select-v3').find('a span').text('');
		$newIssuedNation.parents('.custom-select-v3').find('a span').text($newIssuedNation.parents('.custom-select-v3').find('ul li[data-value="'+$(this).val()+'"]').attr('data-cname'));
		 $issuedNation.prop('selected','selected');
	}else{
		$(this).parents('.idContainer').find('._issuingCountry').val('SA');
	}
});


function loadFlightConfirmationPage(data){
	$.post('/flight/loadConfirmation',{productId:data.pid,uuid:data.uuid},function(res){
		$("script[src='/common/themes/v2/js/jlibs/pageRefresh.js']").remove();
		if(typeof res!="undefined"){
			//console.log('res');console.log(res);
			if(res.status=="ERROR" && res.Code == "503"){
				location.href="/flight/error?code="+res.Code; return;
				}
			
			else if((res.status=="ERROR" && res.Code == "502") || res.status =="SUCCESS"){
				window.location.href= '/flight/confirmation?pid='+data.pid ;

				
			}else{
				if(res.Code){
				 location.href="/flight/error?code="+res.Code; return;
				}else{
				 location.href="/flight/error"; return;

				}
			}
			
		}else{
			location.href="/flight/error"; return;
		}
	});
}


/* SeatMap Imlementation */
function seatMapData(seatRQData,thisValue){
	$('.seatsNotAvailable').hide();
	$('.seatLoading').show(); 
	seatMapLayout(thisValue);
	var seatMapArraydata = [];
	var responseObject = [];
	var promises = [];
	seatMapRequestInfo = [];
	seatMapFooterInfo = [];
	for(var i=0;i<seatRQData.length;i++){
		var cabinClass;
		var cabinVal = seatRQData[i].cabin;
		switch (cabinVal) {
			case 'business':
			cabinClass = "Business";
			break;
			case 'firstClass':
			cabinClass = "First";
			break;
			default:
			cabinClass = "Economy";
		}		
		var seatMapReqData = 
	    { seatmapRQ:{source:
		{
			agentDutyCode:"",
			isoCurrency:"",
			echoToken:"",
			timeStamp:"2016-03-29T18:00:00",
			device:"",
			clientId:"",
			clientSecret:"",
			accessToken:""
		},
		smapreqs:{ smapreq:{ fsegInfo:
		{
			ddt:seatRQData[i].depDateAndTime,
			fn:seatRQData[i].flightNumber,
			dap:seatRQData[i].depAirportCode,
			aap:seatRQData[i].arrAirportCode,
			mal:seatRQData[i].marAirlineCode
		},
		ct:cabinClass
		}}}};
		
		promises.push(seatMapReqData);
	   }
	  seatMapRequestInfo.push(promises);
	  seatMapRequestInfo.push(seatRQData);
	  seatMapFooterInfo.push(seatMapRequestInfo[1][0]);
	  flightSerVar.loadTemplate('seat_map_header_template',seatMapRequestInfo,$('#_seat_map_header_template'));
	  flightSerVar.loadTemplate('seat_map_footer_template',seatMapFooterInfo,$('#_seat_map_footer_template'));
	  var data = promises[0];
	  callSeatAPI(data);
	}

   function seatMapfligtSegment(data,val){
	   var parseData = JSON.parse(data);
	   $('.seatselectPopWindow').removeClass('active');
	   $('.seatsNotAvailable').hide();
	   $('.seatLoading').show(); 
	   
	   $('.selectBox').text(seatMapRequestInfo[1][val].depAirportCode+' - '+seatMapRequestInfo[1][val].arrAirportCode+' :  '+ 
	   seatMapRequestInfo[1][val].marAirlineCode+' '+seatMapRequestInfo[1][val].flightNumber);
	   
	   seatMapFooterInfo = [];
	   seatMapFooterInfo.push(seatMapRequestInfo[1][val]);
	   flightSerVar.loadTemplate('seat_map_footer_template',seatMapFooterInfo,$('#_seat_map_footer_template'));
	   
	   callSeatAPI(parseData);
   }


   function callSeatAPI(data){
	   $.post('/flight/seatmapapi',{resData:data},function(res){
	    	 //console.log('service layer');
			 //console.log(JSON.stringify(res.sreqData));
	    	 var obj = null;
	    	 if(res.response !== null){
	    		 obj = JSON.parse(res.response);
	    		 if(typeof obj.seatmapRS.smapress.errors !== 'undefined'){
	    			 obj = null;
	    		 }
	    	 }
	    	   //console.log(JSON.stringify(obj));
				if(obj != null){
				var seatMapData = [] ;
				var rowMapData  = [];
				var totalData = [];
				var ri =obj.seatmapRS.smapress.smapres[0].fsegInfo.smapdtls[0].cc[0].ri ;
				var layout =obj.seatmapRS.smapress.smapres[0].fsegInfo.smapdtls[0].cc[0].layout ;
				var fltNumber  = parseInt(obj.seatmapRS.smapress.smapres[0].fsegInfo.fn);
				for(index in ri){
				 var row = ri[index];
				 rowMapData.push(row);
				 for(j in row.si){
					if(typeof seatMapData[j] != 'undefined'){
				     seatMapData[j].push(row.si[j]);
					}
					else {
					var seat= [];
					seat.push(row.si[j]);
					seatMapData.push(seat);
					}
				 }
				}
				
				totalData[0] = rowMapData;
				totalData[1] = layout;
				if(!(fltNumber in seatMapResponseInfo)){
					seatMapResponseInfo[fltNumber] = obj ;
				}
			 }else{
				    //console.log('seats not available');
					$('.seatsNotAvailable').show();
					$('.seatLaoutshow').hide();
				 }
				
			showSeatPopup(totalData,seatMapRequestInfo,seatMapFooterInfo);
		});
	    
   }

function showSeatPopup(totalData,seatMapRequestInfo,seatMapFooterInfo){
		//console.log('calling showSeatPopup functoin');
		 $('.seatLoading').hide();
		if(typeof totalData!="undefined" && totalData[0].length > 0 && totalData[1] != null){
			flightSerVar.loadTemplate('seat_map_template',totalData,$('#_seat_map_template'));
			 $('.seatLaoutshow').show();
			 $('.seatsNotAvailable').hide();
			 setTimeout(function(){
				    var myWid = totalData[0].length;
					$('.seatLaoutshow').css('width',(myWid*33)+33);
					$('.seatLaoutshow').css('left','0');
					$('.seatLaoutshow').show();
					var myHi = $('.seatLaoutshow').height();
					$('.seatlayout').css('min-height',myHi);
					$('.seatBody').css('min-height',myHi+20);

					var widthTotal = $('.seatLaoutshow').width();
					if(widthTotal <900){
						$('.slideNavig').hide();
					} else {
						$('.slideNavig').show(); 
					}

				},300);


				setTimeout(function(){
					var view = $(".seatLaoutshow");
						var move = "90px";
						var sliderLimitWidth = view.width()-900;
						var sliderLimit = -sliderLimitWidth;
						
						$(".selectNxt").click(function(){
							
							var currentPosition = parseInt(view.css("left"));
							if (currentPosition >= sliderLimit) view.stop(false,true).animate({left:"-="+move},{ duration: 400})

						});

						$(".selectPrv").click(function(){

							var currentPosition = parseInt(view.css("left"));
							if (currentPosition < 0) view.stop(false,true).animate({left:"+="+move},{ duration: 400})

						});

				},400);

		}else{
					$('.seatsNotAvailable').show();
					$('.seatLaoutshow').hide();
					$('.slideNavig').hide();
				 }
	
}
/**
 * BookNow button for filght results
 * @param flightObj
 * @param object
 * @returns {Boolean}
 */
function bookNowAll(flightObj,elm) {
	//console.log('bookNowAll');
}
/**
 * if flight reults are more than one leg checking radio button is checked or not 
 * @param elm
 * @returns {Boolean}
 */
function checkEmpty(elm){
	var d = $(elm);
	var z = 0;
	var con = false;
	var t = d.parents('.flight-item-wrap').find('input:radio');
	t.each(function(){
	  if($(this).prop('checked')==true){
		con = true;
	  }
	});		
	var p = d.parents('.flight-item-wrap').find('.fltResultsGrid');
	p.each(function(){
    	var elmTarget = $(this).find('ul.fltResults li.legResult');
    	z =	z+elmTarget.length;	 
	});	
    if(z==p.length){
		con = true;
	}	
    return con;
}
function farReq(data,elm,fareCombo){
	var fareRuleIndexId = data.indexID;
	$(elm).parent().find('.expandContent').slideToggle().toggleClass('open');
	$('.fareRulesLink').toggleClass('active');
	//if($('.expandContent').hasClass('open')){
	
	if(!$('.fareRulesDetails').is(':visible')){
		$(elm).parents('.fltDetails').find('.fareRulesDetails').hide();
		$(elm).parents('.fltDetails').find('.loadingFare').show();
	}
	$(elm).parents('.fltDetails').find('.fareRulesLink').removeClass('loader');
	var $this = $(this);
	$this.addClass('loader');
	$this.removeClass('.fareRulesLink');
			var usc = flightSerVar.setSelectedCurrency;
			var currency = flightSerVar.cExR[usc];
			var ccobj = {};
			var cx = flightSerVar.cExR;
			if(fareCombo){
				usc = flightComboSerVar.setSelectedCurrency;
			    currency = flightComboSerVar.cExR[flightComboSerVar.setSelectedCurrency];
			    cx = flightComboSerVar.cExR;			   
			   }
			for(var j in cx){
				ccobj[j] = parseFloat(cx[j])/parseFloat(currency);
			}
			
	if(!(fareRuleIndexId in fareRuleViewedInfo)){
	$.post('/flight/farerulereq',{resData:data},function(fareRuleData){
		/*var tempStr = '{"farerulePolicyRS":{"isoCurrency":"SAR","accessToken":"09823jklsfljjsfd","echoToken":null,"ai":{"dirId":"Package","odos":{"odo":[{"refNum":"1","rph":"501GF-163GF","fs":[{"dap":"DXB","dt":"1","aap":"BAH","at":null,"oal":"GF","mal":"GF","eq":"320","ct":"Economy","dur":"03:55:00","fdur":null,"st":null,"si":null,"ti":null,"fi":null,"comment":null,"as":"7","fc":"N","tofi":"GF","fn":"501","is":"0","sq":null,"ardt":"2016-06-14T08:15:00","ddt":"2016-06-14T08:00:00"},{"dap":"BAH","dt":null,"aap":"RUH","at":"1","oal":"GF","mal":"GF","eq":"320","ct":"Economy","dur":"03:55:00","fdur":null,"st":null,"si":null,"ti":null,"fi":null,"comment":null,"as":"7","fc":"N","tofi":"GF","fn":"163","is":"0","sq":null,"ardt":"2016-06-14T10:55:00","ddt":"2016-06-14T09:40:00"}],"tt":"2","rs":"Refundable","cb":"30 Kilos","pt":"PUBLIC"},{"refNum":"2","rph":"1150GF-506GF","fs":[{"dap":"RUH","dt":"1","aap":"BAH","at":null,"oal":"GF","mal":"GF","eq":"320","ct":"Economy","dur":"08:10:00","fdur":null,"st":null,"si":null,"ti":null,"fi":null,"comment":null,"as":"7","fc":"N","tofi":"GF","fn":"1150","is":"0","sq":null,"ardt":"2016-06-17T08:10:00","ddt":"2016-06-17T07:00:00"},{"dap":"BAH","dt":null,"aap":"DXB","at":"1","oal":"GF","mal":"GF","eq":"320","ct":"Economy","dur":"08:10:00","fdur":null,"st":null,"si":null,"ti":null,"fi":null,"comment":null,"as":"7","fc":"N","tofi":"GF","fn":"506","is":"0","sq":null,"ardt":"2016-06-17T16:10:00","ddt":"2016-06-17T14:00:00"}],"tt":"2","rs":"Refundable","cb":"30 Kilos","pt":"PUBLIC"}]}},"aipi":{"fInfo":[{"cchrgs":"238","reischrgs":"276"}]},"extra":null}}';
		var fareRuleInfo = JSON.parse(tempStr);*/
		var fareRuleInfo = JSON.parse(fareRuleData.response);
		
		$(elm).parents('.fltDetails').find('.loadingFare').hide();
		$(elm).parents('.fltDetails').find('.fareRulesDetails').show();
		var fareObj = {};
		if(typeof fareRuleInfo.farerulePolicyRS.errors == 'undefined'){
			
				
				fareObj.isoCurrency= fareRuleInfo.farerulePolicyRS.isoCurrency;
				fareObj.cchrgs= fareRuleInfo.farerulePolicyRS.aipi.fInfo[0].cchrgs;
				fareObj.reischrgs= fareRuleInfo.farerulePolicyRS.aipi.fInfo[0].reischrgs;
				/*fareRuleViewedInfo[fareRuleIndexId] = fareRuleInfo.farerulePolicyRS.aipi.fInfo[0].cchrgs+'-'
				+fareRuleInfo.farerulePolicyRS.aipi.fInfo[0].reischrgs ;*/
		
			$(elm).parents('.fltDetails').find('.expandContent .cchrgs').text(usc +"  "+(parseFloat(fareObj.cchrgs)*parseFloat(ccobj[fareObj.isoCurrency])).toFixed(2));
			$(elm).parents('.fltDetails').find('.expandContent .reischrgs').text(usc +"  "+(parseFloat(fareObj.reischrgs)*parseFloat(ccobj[fareObj.isoCurrency])).toFixed(2));
			
			
			
	   }else{
		
		  $(elm).parents('.fltDetails').find('.fareRulesDetails').text(i18n.t('selectedFlightFareRule'));
	   }
	   
	   fareRuleViewedInfo[fareRuleIndexId] = fareObj;
	   if(!fareCombo){
	   flightSerVar.generateBooknow($(elm));
	   }
	  });
	 }
	else{
		$(elm).parents('.fltDetails').find('.loadingFare').hide();
		$(elm).parents('.fltDetails').find('.fareRulesDetails').show();
		
		if(fareRuleViewedInfo[fareRuleIndexId].cchrgs && fareRuleViewedInfo[fareRuleIndexId].reischrgs){	
		$(elm).parents('.fltDetails').find('.expandContent .cchrgs').text(usc +"  "+(parseFloat(fareRuleViewedInfo[fareRuleIndexId].cchrgs)*parseFloat(ccobj[fareRuleViewedInfo[fareRuleIndexId].isoCurrency])).toFixed(2));
		$(elm).parents('.fltDetails').find('.expandContent .reischrgs').text(usc +"  "+ (parseFloat(fareRuleViewedInfo[fareRuleIndexId].reischrgs)*parseFloat(ccobj[fareRuleViewedInfo[fareRuleIndexId].isoCurrency])).toFixed(2));
		}
		else{
			 $(elm).parents('.fltDetails').find('.fareRulesDetails').text(i18n.t('selectedFlightFareRule'));
		}
	}
   //}
}



function changeYourFlight(opts,arg){
	$('.modal').modal('hide');
	$('.modal-backdrop').hide();
    $('body').removeClass('modal-open');
	flightSerVar.changeYourFlight = true;
	getSearchURL(opts,arg);
	
	$('.currency').show();
	$('.country').show();
	$('.lang, .language').show();
}


$('body').on('change','._addTravellerInfo',function(){
	var target = $(this).parents('.inputGrp');
	var elm = $(this).find("option:selected" );
	popTInfo(elm,target);
});

function popTInfo(elm,trg){
	//console.log(elm);console.log(trg);
	var flagCssPath = "";
	var title = trg.find('._txtTitle');
	var fname = trg.find('._txtFName');
	var mname = trg.find('._txtMName');
	var lname = trg.find('._txtLName');
	var uEmail = trg.find('._txtEmail');
	var uPhone = trg.find('._txtPhone');
	var umobileAreaCode = trg.find('#phoneCountryCode');
	var umobileAreaCountryCode = trg.find('.ddTitleText img');
	var uBirthDate = trg.find('._dob');
	title.val(elm.attr('data-title'));
	fname.val(elm.attr('data-fname'));
	mname.val(elm.attr('data-mname'));
	lname.val(elm.attr('data-lname'));	
	uEmail.val(elm.attr('data-email'));
	dateUpdate(uBirthDate , elm.attr('data-birthDate'));
	if(elm.attr('data-phone')!='' && elm.attr('data-phone')!=undefined && elm.attr('data-phone').split('-').length>1){
		uPhone.val(elm.attr('data-phone').split('-')[1]);
	}
	else{
		uPhone.val(elm.attr('data-phone'));
	}
	if(elm.attr('data-ccode')!=undefined && elm.attr('data-ccode').charAt(0) == "+"){
		umobileAreaCode.val(elm.attr('data-ccode'));
	}
	else{
		umobileAreaCode.val("+"+elm.attr('data-ccode'));
	}
	if(elm.attr('data-mobileareacountrycode')!="" && elm.attr('data-mobileareacountrycode')!=undefined){
		flagCssPath = elm.attr('data-mobileareacountrycode')+" fnone cc-flag fnone";
		umobileAreaCountryCode.attr("class",flagCssPath.toLowerCase());
	}
	else{
		flagCssPath = "sa fnone cc-flag fnone";
		umobileAreaCountryCode.attr("class",flagCssPath.toLowerCase());
		umobileAreaCode.val("+966");
	}
	var uPassportNumber = trg.find('._txtPNum');		
	var uPassportExpiryDate = trg.find('._passportExpiryDate');
	var uPassportIssueDate = trg.find('._passportIssuedDate');
	uPassportNumber.val(elm.attr('data-passportNumber'));
	//Nationality Pre populating from traveller dropdwon
	trg.find('.passportInfoBody ._nationality').each(function(){
		   $(this).parents('.custom-select-v3').find('a span').text('');
		   if(elm.attr('data-nationality') != undefined){
			   $(this).parents('.custom-select-v3').find('a span').text($(this).parents('.custom-select-v3').find('ul li[data-value="'+elm.attr('data-nationality')+'"]').attr('data-cname'));
			   var nationality = $(this).parents('.custom-select-v3').find('._nationality option[value="'+elm.attr('data-nationality')+'"]');
			   nationality.prop('selected','selected');
		   }else{
			   $(this).parents('.custom-select-v3').find('a span').text(i18n.t("select"));
			   var nationality = $(this).parents('.custom-select-v3').find('._nationality option[value=""]');
			   nationality.prop('selected','selected');
		   }
	});	
	
	//Issuing Country Pre populating from traveller dropdwon
	trg.find('.passportInfoBody ._issuingCountry').each(function(){
	   $(this).parents('.custom-select-v3').find('a span').text('');
	   if(elm.attr('data-passIssueCntry') != undefined){
		   $(this).parents('.custom-select-v3').find('a span').text($(this).parents('.custom-select-v3').find('ul li[data-value="'+elm.attr('data-passIssueCntry').trim()+'"]').attr('data-cname'));
		   var nationality = $(this).parents('.custom-select-v3').find('._issuingCountry option[value="'+elm.attr('data-passIssueCntry').trim()+'"]');
		   nationality.prop('selected','selected');
	   }else{
		   $(this).parents('.custom-select-v3').find('a span').text(i18n.t("select"));
		   var nationality = $(this).parents('.custom-select-v3').find('._issuingCountry option[value=""]');
		   nationality.prop('selected','selected');
	   }
	 });
	
	//uPassportExpiryDate.val(elm.attr('data-passportExpireDate'));
	dateUpdate(uPassportExpiryDate , elm.attr('data-passportExpireDate'));
	dateUpdate(uPassportIssueDate , elm.attr('data-passportIssueDate'));
	
	//Prepopulating Nationality
	trg.find('._nationalId').val(elm.attr('data-nationalId'));
	trg.find('.nationalidBody ._nationality').each(function(){
		   $(this).parents('.custom-select-v3').find('a span').text('');
		   if(elm.attr('data-nIdnationality') != undefined){
			   $(this).parents('.custom-select-v3').find('a span').text($(this).parents('.custom-select-v3').find('ul li[data-value="'+elm.attr('data-nIdnationality')+'"]').attr('data-cname'));
			   var nationality = $(this).parents('.custom-select-v3').find('._nationality option[value="'+elm.attr('data-nIdnationality')+'"]');
			   nationality.prop('selected','selected');
		   }else{
			   $(this).parents('.custom-select-v3').find('a span').text(i18n.t("select"));
			   var nationality = $(this).parents('.custom-select-v3').find('._nationality option[value=""]');
			   nationality.prop('selected','selected');
		   }
	});
	trg.find('.nationalidBody ._issuingCountry').each(function(){
		   $(this).parents('.custom-select-v3').find('a span').text('');
		   if(elm.attr('data-issuedCountry') != undefined){
			   $(this).parents('.custom-select-v3').find('a span').text($(this).parents('.custom-select-v3').find('ul li[data-value="'+elm.attr('data-issuedCountry')+'"]').attr('data-cname'));
			   var nationality = $(this).parents('.custom-select-v3').find('._issuingCountry option[value="'+elm.attr('data-issuedCountry')+'"]');
			   nationality.prop('selected','selected');
		   }else{
			   $(this).parents('.custom-select-v3').find('a span').text(i18n.t("select"));
			   var nationality = $(this).parents('.custom-select-v3').find('._issuingCountry option[value=""]');
			   nationality.prop('selected','selected');
		   }
	});
	
	//Prepopulating Iqama
	trg.find('._iqamaId').val(elm.attr('data-iqamaId'));
	trg.find('.iqamaBody ._nationality').each(function(){
		   $(this).parents('.custom-select-v3').find('a span').text('');
		   if(elm.attr('data-iqamanationality') != undefined){
			   $(this).parents('.custom-select-v3').find('a span').text($(this).parents('.custom-select-v3').find('ul li[data-value="'+elm.attr('data-iqamanationality')+'"]').attr('data-cname'));
			   var nationality = $(this).parents('.custom-select-v3').find('._nationality option[value="'+elm.attr('data-iqamanationality')+'"]');
			   nationality.prop('selected','selected');
		   }else{
			   $(this).parents('.custom-select-v3').find('a span').text(i18n.t("select"));
			   var nationality = $(this).parents('.custom-select-v3').find('._nationality option[value=""]');
			   nationality.prop('selected','selected');
		   }
	});
	dateUpdate(trg.find('._iqamaExpiryDate') , (elm.attr('data-iqamaExpirydate')!=undefined)?elm.attr('data-iqamaExpirydate').split("T")[0]:"");
	
	if(trg.find(".passportInfoRow input[data-doctype='nationalId']").length && elm.attr('data-docType') != undefined && elm.attr('data-docType') == 3){
		trg.find(".passportInfoRow input[data-doctype='nationalId']").prop("checked", true);
		togglePassNatIqam(trg.find(".passportInfoRow input[data-doctype='nationalId']"));
	}else if(trg.find(".passportInfoRow input[data-doctype='iqamaId']").length && elm.attr('data-docType') != undefined && elm.attr('data-docType') == 4){
		trg.find(".passportInfoRow input[data-doctype='iqamaId']").prop("checked", true);
		togglePassNatIqam(trg.find(".passportInfoRow input[data-doctype='iqamaId']"));
	}else{
		trg.find(".passportInfoRow input[data-doctype='passport']").prop("checked", true);
		togglePassNatIqam(trg.find(".passportInfoRow input[data-doctype='passport']"));
	}
	flightSelTrav({
		"title":elm.attr('data-title') || "",
		"first_name":elm.attr('data-fname') || "" ,
		"last_name":elm.attr('data-lname') || "" ,
		"email":elm.attr('data-email') || "" ,
		"phone":elm.attr('data-phone') || "" ,
		"birth_date":(elm.attr('data-birthDate')!="")?moment(elm.attr('data-birthDate')).format('DD-MM-YYYY'):"" ,
		"passport_number":elm.attr('data-passportnumber') || "",
		"nationality":elm.attr('data-nationality') || "",
		"passport_issue_date":(elm.attr('data-passportissuedate')!="")?new Date(elm.attr('data-passportissuedate')).toString():"" ,
		"passport_expire_date":(elm.attr('data-passportexpiredate')!="")?new Date(elm.attr('data-passportexpiredate')).toString():"" ,
		"passport_issue_country":elm.attr('data-issuedcountry') || ""
	});
}
/*
 * Date Fields Pre populating From Myaccount dropdowns
 */
function dateUpdate(fieldToUpd , date){
	var date = date || "";
	var splitDate = date.split("-");
	fieldToUpd.find(".birthDate").val(parseInt(splitDate[2]));
	fieldToUpd.find(".birthMonth").val(parseInt(splitDate[1]));
	fieldToUpd.find(".birthYear").val(parseInt(splitDate[0]));
	fieldToUpd.find(".birthDay").val(date);
}

/*
 * Date Fields Pre populating From Myaccount dropdowns
 */
function prePopulateDateUpdate(fieldToUpd , date){
	var arrayDate = date.split("T");
	var splitDate = arrayDate[0].split("-");
	fieldToUpd.find(".birthDate").val(parseInt(splitDate[2]));
	fieldToUpd.find(".birthMonth").val(parseInt(splitDate[1]));
	fieldToUpd.find(".birthYear").val(parseInt(splitDate[0]));
	fieldToUpd.find(".birthDay").val(splitDate[2]+"-"+splitDate[1]+"-"+splitDate[0]);
}
$('body').on('click', '.add-traveller-btn-pop' ,function(){
    
	//$(this).closest('._txtFName').focus();
 $(this).parents('.addTrvlr').next('.inputGrp').find('._txtFName').focus();	 
 
 });


function autoFill(){
/*   Departing location should automatically set based on previous arrival destination - Starts */
$('#multicityFrom2').on('focus',function(){
	if($('#multicityFrom2').val()==""){
			$('#multicityFrom2').attr('data-iata',$('#multicityTo1').attr('data-iata'));
			$('#multiFromId2').val($('#multicityTo1').attr('data-iata'));
		$('#multicityFrom2').val($('#multicityTo1').val());
	}
});

$('#multicityFrom3').on('focus',function(){
	if($('#multicityFrom3').val()==""){
			$('#multicityFrom3').attr('data-iata',$('#multicityTo2').attr('data-iata'));
			$('#multiFromId3').val($('#multicityTo2').attr('data-iata'));
		$('#multicityFrom3').val($('#multicityTo2').val());
	}
});

$('#multicityFrom4').on('focus',function(){
	if($('#multicityFrom4').val()==""){
			$('#multicityFrom4').attr('data-iata',$('#multicityTo3').attr('data-iata'));
			$('#multiFromId4').val($('#multicityTo3').attr('data-iata'));
		$('#multicityFrom4').val($('#multicityTo3').val());
	}
});

$('#multicityFrom5').on('focus',function(){
	if($('#multicityFrom5').val()==""){
			$('#multicityFrom5').attr('data-iata',$('#multicityTo4').attr('data-iata'));
			$('#multiFromId5').val($('#multicityTo4').attr('data-iata'));
		$('#multicityFrom5').val($('#multicityTo4').val());
	}
});

$('#multicityFrom6').on('focus',function(){
	if($('#multicityFrom6').val()==""){
			$('#multicityFrom6').attr('data-iata',$('#multicityTo5').attr('data-iata'));
			$('#multiFromId6').val($('#multicityTo5').attr('data-iata'));
		$('#multicityFrom6').val($('#multicityTo5').val());
	}
});
}
$('body').on('click','._shareItinerary',function(){
	console.log('_shareItinerary@@@@@@@@@@@@');
	var email=$('._siEmail').val();
	var pid = $(this).attr('data-pid');
	if(email===''){
		growl_alert(i18n.t("enteruremail"));
		return false;
	}
	else{
		if(email !==''){
			if(!_evl(email)){
				growl_alert(i18n.t("errEmaiAdd"));
				return false;
			}
		}
		if(email !==''){
			var data={
					email:email,
					pid:pid
			}
			
			$.post('/flight/shareItinerary',{data:data},function(res){
			    if(res!==null && res.status==="SUCCESS"){
			     $('.modal').modal('hide');
			     $('.modal-backdrop').hide();
			     $('body').removeClass('modal-open');
			     growl_alert(i18n.t("checkMail"));
			     $('.alert_custom').addClass('alert-success');
			    }
			    else if(res!==null && res.status==="NODATA"){
			     location.href='/'+res.lang+'/flights'; return;
			    }
			    else{
			     $('.modal').modal('hide');
			     $('.modal-backdrop').hide();
			     $('body').removeClass('modal-open');
			     growl_alert(i18n.t("failed"));
    			}
  			 });
		}
		
	}
});




/**
 * @description Send voucher on click
 */
$('body').on('click','._sendETicket',function(){
	var email=$('._guestEmail').val();
	var bkngRef=$(this).attr('data-bookingRef');
	if(email===''){
		growl_alert(i18n.t("enteruremail"));
		$('._guestEmail').addClass('error');
		return false;
	}
	else{
		if(email !==''){
			if(!_evl(email)){
				growl_alert(i18n.t("errEmaiAdd"));
				$('._guestEmail').addClass('error');
				return false;
			}
		}
		if(email !=='' && bkngRef !==null){
			var data={
					email:email,
					bkngRef:bkngRef,
					prdType:'Flight',
					srvcType:'email_eticket'
			}
			$.post('/flight/sendETicket',{data:data},function(res){
				if(res!==null && res.status==="SUCCESS"){
					growl_alert(i18n.t("checkEmailEticket"));
					$('.alert_custom').addClass('alert-success');
				}
				else{
					growl_alert(i18n.t("failed"));
				}
			});
		}
		
	}
});

$('body').on('change','._txtOnwardExtraBaggage,._txtReturnExtraBaggage',function(){
	if(!baggageSec.totalFareOrg){
		baggageSec.totalFareOrg = $('.totalFare').attr('data-totalFare') ;
		baggageSec.userCurr = $('.totalFare').attr('data-curr') ;
	}
	//var netPrice =  parseFloat(baggageSec.totalFareOrg) ;
	var netPrice =  0 ;

	baggageSec.onwardBag ={};
	baggageSec.returnBag = {} ;
	
	$('._txtOnwardExtraBaggage').each(function(){
	var baggageType = $(this).find(":selected").attr('data-bagType') ;
	var baggageFee = $(this).find(":selected").attr('data-fee') ;
	if(baggageFee){
	if(baggageSec.onwardBag[baggageType]){
		
		baggageSec.onwardBag[baggageType].qty += 1;
	}
	else {
	
		 var baggage = {};
		 
		 baggage.fee = baggageFee ;
		 baggage.type = baggageType ;
		 baggage.qty = 1;
		 baggage.uc = baggageSec.userCurr;
		 
		 baggageSec.onwardBag[baggage.type] = baggage;
		 
		 }
	 netPrice = netPrice + parseFloat(baggageFee) ;

	  }
	});
	$('._txtReturnExtraBaggage').each(function(){
	var baggageType = $(this).find(":selected").attr('data-bagType') ;
	var baggageFee = $(this).find(":selected").attr('data-fee') ;
	if(baggageFee){
	if(baggageSec.returnBag[baggageType]){
		
		baggageSec.returnBag[baggageType].qty += 1;
	}
	else {
		
		 var baggage = {};
		 
		 baggage.fee = baggageFee ;
		 baggage.type = baggageType ;
		 baggage.qty = 1;
		 baggage.uc = baggageSec.userCurr;
		 
		 baggageSec.returnBag[baggage.type] = baggage;		 
		 
		}
	  netPrice = netPrice + parseFloat(baggageFee) ;

	 }
	});
	
	
	
	$.get('/common/themes/v2/tmpl/flight/flightReview.ejs?v='+Math.random(),{},function(template){
	flightSerVar.dynamicTemplate = template;
	flightSerVar.loadTemplate('baggage_selected_template',baggageSec.onwardBag,$('#onwardBaggageSec'));
	flightSerVar.loadTemplate('baggage_selected_template',baggageSec.returnBag,$('#returnBaggageSec'));
	
	});
	/*var totalPriceStr = baggageSec.userCurr +' <strong>'+netPrice.toFixed(2)+'</strong> ';
	
	$('.totalFare').html(totalPriceStr);*/
	$('#baggageSec').show();

	baggageSec.netPrice = netPrice.toFixed(2) ;
	//flightSerVar.modifiedTotalPrice = netPrice.toFixed(2) ;
	
	displayNetPrice();
	
});


$('body').on('change','._alTktNum,input[name="alTktBtn"]',function(){
	var $t = $(this);    
    if(!$t.hasClass('_alTktNum') ){
			resetFlightAlhilal();
			/*if(!$t.attr('id')==''){
				
			}*/
    }else { 	
		$t.parents('.tktvar').find('input[name="alTktBtn"]').prop('checked',true);
		$('.tktvar').each(function(){
			if($(this)[0]!==$t.parents('.tktvar')[0]){
				$(this).find('._alTktNum').val('');
			}
		});
		
		
	var noOfTktSelect = $(this).val();
	var supPrice =	$(this).attr('data-tktPrice');
	var userPrice =	$(this).attr('data-userPrice');
	var userCurr =	$(this).attr('data-curr');
	var supCurrency =	$(this).attr('data-supCurrency');
	var tktType =	$(this).attr('data-tktType');	
	var tktCode =	$(this).attr('data-tktCode');	
	var tktId =	$(this).attr('data-tktId');	
	var totalFare = $('.totalFare').attr('data-totalFare') ;
	//var netPrice = parseFloat(totalFare);
	var netPrice = 0;
	var netTktPrice = 0;
	
	netTktPrice = parseFloat(userPrice) * parseFloat(noOfTktSelect) ;
	
	 //totalPrice = parseFloat(totalPrice) + netTktPrice ;
		
		var alTicket = {
			tktType:tktType,
			tktCode:tktCode,
			tktId:tktId,
			noOfTktSelect:noOfTktSelect,
			supPrice:supPrice,
			userPrice:userPrice,
			supCurrency:supCurrency,
			userCurrency:userCurr,
			totalPrice:netTktPrice
			
		}
	
	
	
	if(noOfTktSelect > 0){
	flightSerVar.selectedALTickets = {};
	flightSerVar.selectedALTickets[tktType] = alTicket;
	
	
	for(var ticket in flightSerVar.selectedALTickets){
		netPrice = netPrice + parseFloat(flightSerVar.selectedALTickets[ticket].totalPrice);
	}
	
	/*var totalPriceStr = userCurr +' <strong class="_priceTag">'+netPrice.toFixed(2)+'</strong> ';
	flightSerVar.modifiedTotalPrice = netPrice;*/
	
	var altktHtml = '';
	

		
		for(var altkt in flightSerVar.selectedALTickets){
			
			var tkt= flightSerVar.selectedALTickets[altkt];
			if(flightComboSerVar.isActive){
			altktHtml = altktHtml + '<span class="pull-left">'+tkt.tktType+'('+tkt.noOfTktSelect+')</span>  \
		 <span class="pull-right">'+userCurr+' '+tkt.totalPrice+'</span>';
			}else{
			altktHtml = altktHtml + '<li class="alTktPrice" ><span class="pull-left">'+tkt.tktType+'<span class="ticketNum">('+tkt.noOfTktSelect+')</span></span> \
						 <span class="pull-right">'+userCurr+' <label>'+tkt.totalPrice+'</label></span></li>';
			}
		}
		
	
	//$('.totalFare').html(totalPriceStr);
	
	$('#alTktPrice').html(altktHtml).show();
	if(flightComboSerVar.isActive){
	$('.fcalhTkt').html(alTicket.tktType+' Ticket-'+alTicket.noOfTktSelect).show();	
	}else{
	$('.alhTkt').html(alTicket.tktType+' Ticket-'+alTicket.noOfTktSelect).show();
	}
	
	flightSerVar.selectedALTickets.netPrice = netPrice;
	displayNetPrice();
	}else{
		
		resetFlightAlhilal();
	}
	
	
		
	}	
    
	
	
	
});


function resetFlightAlhilal(){	
	flightSerVar.selectedALTickets = {};
	
	//var totalFare = $('.totalFare').attr('data-totalFare') ;
	var userCurr = $('.totalFare').attr('data-curr') ;
	
	/*var totalPriceStr = userCurr +' <strong class="_priceTag">'+parseFloat(totalFare).toFixed(2)+'</strong> ';
	$('.totalFare').html(totalPriceStr);*/
	
	$('#alTktPrice').hide();
	$('._alTktNum').val(0);
	if(flightComboSerVar.isActive){
		$('.fcalhTkt').hide();
	}else{
		$('.alhTkt').hide();
	}
	
	
	
	displayNetPrice();	
	pricetagConvert.init();
	
	
}

//for 6 leg implementation
$('body').on('click','._addAnotherFlightMC',function(){
	var mcDetailsRowId = parseInt($(this).attr('data-grip'));
	var mcCloseRowId = mcDetailsRowId;
	$('.multic'+mcDetailsRowId).show();
	if(mcDetailsRowId<=6){
		if(mcCloseRowId>4){
			$('._mcClose'+parseInt(mcCloseRowId-1)).hide();
		}
		mcDetailsRowId++;
		$(this).attr('data-grip',mcDetailsRowId);
		if(mcCloseRowId==6){
			$('.addMreSearchMC').hide();
		}else{
			$('.addMreSearchMC').show();
		}
	}
	
});
$('body').on('click','._closeXrowMC',function(){
	var closeXrowId = $(this).attr('data-grip');
	var closeXrow = $(this).parents().find('.multic'+parseInt(closeXrowId));
	$(closeXrow).hide();
	$('._mcClose'+parseInt(closeXrowId-1)).show();
	$('._addAnotherFlightMC').attr('data-grip',parseInt(closeXrowId));
	if(!$('._addAnotherFlightMC').is(':visible')){
		$('.addMreSearchMC').show();
	}
	
	$('#multiFromId'+parseInt(closeXrowId)).val('');
	$('#multiToID'+parseInt(closeXrowId)).val('');
	$('#mchdateF'+parseInt(closeXrowId)+'Hidden').val('');
	$('.mchdateF'+parseInt(closeXrowId)).val('');
	
	$('#multicityFrom'+parseInt(closeXrowId)).attr('data-iata','');
	$('#multicityFrom'+parseInt(closeXrowId)).attr('value','');
	$('#multicityFrom'+parseInt(closeXrowId)).val('');
	$('#multicityTo'+parseInt(closeXrowId)).attr('data-iata','');
	$('#multicityTo'+parseInt(closeXrowId)).attr('value','');
	$('#multicityTo'+parseInt(closeXrowId)).val('');
});

function initTravelerDynamo(){
  var $trgt = $('.brdRound').find('.travSeatTtl .travSeatTtlAdlt .adultChange');
  var $inputGroup = $('.travlrDetails.inputGrp');
  var count = 0;
  $inputGroup.each(function(k){ 
    //console.log(k);
    var $t = $(this);
    var $elm = $t.find('._txtFName, ._txtMName,._txtLName');
    //console.log($elm);
    $elm.on('blur',function(){
    var fname = $($elm[0]), mname = $($elm[1]), lname = $($elm[2]), fullname = fname.val()+' '+mname.val()+' '+lname.val();
    $($trgt[k]).find('.travlrNam').text(fullname);
    });
});
  
$('.travellerSeat, .travellersName').each(function(){  
	var liItems = $(this);
	var Sum = 0;
	if(liItems.children('.col-xs-12').length >= 1){
	 $(this).children('.col-xs-12').each(function(i, e){
			Sum += $(e).outerWidth(true);
	 });
	$(this).width(Sum+1);
	} 
});
	
  
}

function seatMapLayout(thisValue){
	$('.seaterPop').removeAttr("style");
	$('.bgoverlayout, .seaterPop').addClass('active');
	var seaterPopHeight = $('.seaterPop').height();
	//console.log('.asdfa'+seaterPopHeight);
	if(thisValue){
		var offsetTop = $(thisValue).offset().top-(seaterPopHeight/2);
	}
	$('.bgoverlayout, .seaterPop').addClass('active');
	$('.seaterPop').css('top',offsetTop+"px"); 
	var offsetPopTop = $('.seaterPop').offset().top;
	$('html, body').animate({scrollTop:offsetPopTop-2}, 1000);
	
	
	
	/*Seat popup page functionalities*/
	$('body').on('click','.seaterPop .close, .bgoverlayout',function(){
		$('.bgoverlayout, .seaterPop').removeClass('active');
	});
	
	$(document).on('keyup',function(evt) {
		if (evt.keyCode == 27) {
		  if($('.bgoverlayout').hasClass('active')){
				$('.bgoverlayout, .seaterPop').removeClass('active');	
		  } 
		}
	});
	

/* [[ seat panel layout dropdown start here ]]*/
		
		$('body').on('click','.seatDropdownPop',function(e){
			e.preventDefault();
			$('.seatselectPopWindow').removeClass('active');
			$('.seatselectPopWindow').addClass('active');				
		});
			
		$('body').on('click','.closeLink',function(){
			$(".seatselectPopWindow").removeClass('active');
		});
			
		$('body').click( function(){
			$(".seatselectPopWindow").removeClass('active');
		});
		 
		$('body').on('click','.seatselectPopWindow, .seatDropdownPop',function(e){
			e.stopPropagation();
		});
}

/**
 * Document Type selection in traveller details page
 */
var nationality = $($('._nationality')[0]).html();
var issuednation = $($('._issuingCountry')[0]).html();
$('body').on('change','._documentType:checked',function(){
	togglePassNatIqam($(this));
});
function togglePassNatIqam($this){
	var $this = $this;
	var targetElm = $this.parents('._userPassportInfo');
	
	var _nationIDEml = targetElm.find('._nationality');
	var gccList = $('#gccCountryList').val() || "";
	var gccArr = gccList.split('|');
	var _issueIDEml = targetElm.find('._issuingCountry');
	if($this.attr('data-doctype')=="nationalId"){
		targetElm.find('.passportInfoBody').hide();
		targetElm.find('.iqamaBody').hide();
		targetElm.find('.nationalidBody').show();
		var tarN = targetElm.find('.nationalidBody').find('._nationality');
		var tarI = targetElm.find('.nationalidBody').find('._issuingCountry');
		tarN.find('option').each(function(){
			if($(this)[0].value!="" && gccArr.indexOf($(this)[0].value)==-1){
				$(this).remove();
			}
		});
		tarI.find('option').each(function(){
			if($(this)[0].value!="" && gccArr.indexOf($(this)[0].value)==-1){
				$(this).remove();
			}
		});
		
		if($(targetElm.find('.iqamaBody').find('._hijriCal')).is(':checked')){
				targetElm.find('.iqamaBody').find('._hijriCal').trigger('click');
		}
		$("._nationality").customselect('destroy');
			$("._issuingCountry").customselect('destroy');	
			$("._nationality").customselect();
			$("._issuingCountry").customselect();	
	}else if($this.attr('data-doctype')=="iqamaId"){
		targetElm.find('.passportInfoBody').hide();
		targetElm.find('.nationalidBody').hide();
		targetElm.find('.iqamaBody').show();
		targetElm.find('.iqamaBody').find('._hijriCal').trigger('click');
	}else{
		targetElm.find('.passportInfoBody').show();
		targetElm.find('.nationalidBody').hide();
		targetElm.find('.iqamaBody').hide();
		if($(targetElm.find('.iqamaBody').find('._hijriCal')).is(':checked')){
				targetElm.find('.iqamaBody').find('._hijriCal').trigger('click');
		}
		$("._nationality").customselect('destroy');
		$("._issuingCountry").customselect('destroy');	
		$("._nationality").customselect();
		$("._issuingCountry").customselect();	
	}
}

$('body').on('change','._hijriCal', function(){
	var mainTrgt = $(this).parents('.iqamaBody');
	if($(this).is(':checked')){
		$(mainTrgt).find('._hijriDDDP').show();
		$(mainTrgt).find('._englishDDDP').hide();
	}else{
		$(mainTrgt).find('._hijriDDDP').hide();
		$(mainTrgt).find('._englishDDDP').show();
	}
	
});


$('body').on('click','.editUser', function(){	
	
	$('._fnameEdit').val($(this).attr('data-fname'));
	$('._lnameEdit').val($(this).attr('data-lname'));
	$('._idEdit').val($(this).attr('data-id'));
});

function paymentConfigureFlight(sadad,payfort,checkout,installment,payAtStore,paymentObj){
	
	if(paymentObj.showPayfort){
		payfort.show();
	}else{
		payfort.hide();
		payfort.removeClass('active');
	}
	if(paymentObj.showCheckout){
		checkout.show();
	}else{
		checkout.hide();
		checkout.removeClass('active');
	}
	
	if(paymentObj.showSadad){
		sadad.show();
	}else{
		sadad.hide();
	}
	
	if(paymentObj.showInstallment){
		if(paymentObj.sarAmount > 1000){
			installment.show();
		}else{
			installment.hide();
		}
	}else{
		installment.hide();
	}
	
	if(paymentObj.showPayAtStore){
		payAtStore.show();
	}else{
		payAtStore.hide();
	}
	
	if(paymentObj.showBankTransfer){
		$('._bankTransferSection').show();
	}else{
		$('._bankTransferSection').hide();
	}
	
}
/**
* Generate hotel cross sell search request.
*/
function executeHotelCrossSellSReq(hJsonReqPram){
	var reqParams= JSON.parse(hJsonReqPram);
	reqParams.arg='newSearch';
	 $('#hotelCrossSellFormId').show();
	$.get('/hotel/searchHotels',reqParams,function(res){
		 if(res != "undefined" && res.status != "undefined" && res.status == "SUCCESS"){
			  var data = JSON.parse(res.data);
			  data.reqParams = reqParams;
			 $.get('/common/themes/v2/tmpl/flight/flightConfirmation.ejs?v=nd-v0102',{},function(template){
					 flightSerVar.dynamicTemplate = template;					 
					 flightSerVar.loadTemplate('hotel_Cross_sell_view',data,$('#hotelCrossSellFormId'),template);
					 confirmationPageSlider(); 
			});
		  }else{
			  $('#hotelCrossSellFormId').hide();
		  }
		
	});
}

function confirmationPageSlider(){
	//console.log('confirmationPageSlider')
	      var owl = $("#hotelCrossSellId");    
            owl.owlCarousel({   
                items : 4,
                itemsDesktop: [1199, 4],
                lazyLoad : true,
                navigation : true,
                pagination: true,
                autoPlay : true,
				rewindNav: false,
                stopOnHover :true,
                touchDrag:false
                });
	var bLazy = new Blazy({
        breakpoints: [{ 
		src: '../img/destinations/call-icon.jpg'
	}]
      , success: function(element){
	    setTimeout(function(){
		var parent = element.parentNode;
		parent.className = parent.className.replace(/\bloading\b/,'');
	    }, 200);
        }
   });
}
 
 function amentiesCheck(merchnArr, valArr){
	  for (var i = 0; i < merchnArr.length; i++) {
		  for(var j = 0; j< valArr.length; j++){
			if (merchnArr[i].name === valArr[j]) {
				return true;
			  }
		  }
    }
    return false;
 }
 
 /**
 * Hotel cross sell Book now button.
 */
$('body').on('click','._hotelCSBookNow',function(){
	var $t = $(this);
	var reqParams= JSON.parse($t.attr('data-reqParams')),
	    uuid= $t.attr('data-uuid'),
	    uniqueId= $t.attr('data-uid'),
	    hotelId= uniqueId,
	    hname= $t.attr('data-hname'),
	    language=reqParams.language,
	    checkInDate=reqParams.checkInDate,
		checkOutDate = reqParams.checkOutDate,
		noOfRooms=reqParams.noOfRooms,
		childrenAges=reqParams.childrenAges,
	    na=reqParams.noOfAdults.split(","),
	    noOfAdults='';
	   for(var i in na){
		if(noOfAdults===''){
		  noOfAdults=na[i];
		}
		else{
			noOfAdults=noOfAdults+","+na[i];
		}
	   }
	   var	nc=reqParams.noOfChildren.split(",");
		var noOfChildren='';
		for(var i in nc){
			if(noOfChildren===''){
			  noOfChildren=nc[i];
			}
			else{
				noOfChildren=noOfChildren+","+nc[i];
			}
		}
		var me='',
		    language=language.split("_")[0];
		$.post('/hotelNameById',{uniqueId:uniqueId},function(res){
			var hotelComKey=res.split("|");
			var url='',
			cityName = hotelComKey[1],
			countryName =hotelComKey[0],
			hotelName = hotelComKey[2];
			pId=randomString(12);
			url = "/hotelresults/"+countryName+"/"+cityName+"/"+hotelName+"."+language+"?"
			+"checkInDate="+checkInDate
			+"&checkOutDate="+checkOutDate
			+"&noOfRooms="+noOfRooms
			+"&language="+language
			+"&noOfAdults="+noOfAdults
			+"&noOfChildren="+noOfChildren
			+"&childrenAges="+childrenAges
			+"&uniqueId="+uniqueId
			+"&hotelId="+hotelId
			+"&me="+me
			+"&pId="+pId
			+"&uuid="+uuid
			+"&hCrossSell="+true;
			console.log("Review Url :"+url);
			window.location.href = url;
			
		});
});	

/**
* Hijri Calender Generation
*/
function hijriCalGen(){
	$('._hijriDpSelector').each(function(){
		var maxAge = $(this).attr('data-maxage');
		$(this).hijriDayPicker({
			maxAge: maxAge,
			monthFormat:'short',
			dateFormat:'littleEndian',
			callback:function(e){
			//console.log(e);
			},
		});	
	});
}

function showPricePopUp(){
	 $('#priceChangePopup').modal({
		 show: true,
		 keyboard: false,
		 backdrop:'static'
		 });
	
}

function displayNetPrice(){
	var netPrice = $('.totalFare').attr('data-totalFare');
	var userCurr = $('.totalFare').attr('data-curr') ;
	
	netPrice = parseFloat(netPrice) + parseFloat(baggageSec.netPrice || 0) + parseFloat(flightSerVar.selectedALTickets.netPrice || 0);
	flightSerVar.modifiedTotalPrice = netPrice.toFixed(2) ;
	
	var totalPriceStr = userCurr +' <strong class="_priceTag">'+netPrice.toFixed(2)+'</strong> ';
	
	$('.totalFare').html(totalPriceStr);
	
	pricetagConvert.init();
	
}

/**
* Frames the url for fareChange scnario
*/
function fareChange(fareUrl){
	console.log('fareChange:',fareUrl);

	var opts = cmnGetObjFrmURL(fareUrl);

	delete opts.isoView;

	//send with prev pid
	var ppid = cmnGetURLQueryStr('pid');
	opts.ppid = ppid;
	
	changeYourFlight(opts,true);
	
	
}

function fareChangeFC(fareUrl,trip){
	//console.log('fareChange:',fareUrl);
	
	var opts = cmnGetObjFrmURL(fareUrl);	
		
	if(trip=='both'){
		delete opts.isoView;	
    	var searchUrl = '/flight/result?'+$.param(opts);
		location.href = searchUrl;
		return;
	}

		
	//pop up the fareChangeSearchPopUp
	$('#fareChangeSearchPopUp').modal({
		 show: true,
		 keyboard: false,
		 backdrop:'static'
	});
	
	//console.log(opts);
	opts.tripType=1;
	
	if(trip=='ret'){
	   opts.depdate = opts.arrdate;
	   opts.arr = [opts.dep, opts.dep = opts.arr][0];  // swap arrival & departure for return trip
	}
	//delete opts.isoView;
	delete opts.arrdate;
	//send with prev pid
	var ppid = cmnGetURLQueryStr('pid');
	opts.ppid = ppid;
	flightComboSerVar.uuid = ppid;
	flightComboSerVar.fareChange = true;
	
	var newUrl = '/flight/result?'+$.param(opts);

	//console.log('newUrl');console.log(newUrl);
	
	$.get(newUrl,{v:Math.random()},function(res){
		//console.log('res');console.log(res);
		flightComboSerVar.isActive=true;
		flightSerVar.isActive=false;
		
		flightComboSerVar.dynamicTemplate = flightComboSerVar.resultTemplate;
		flightSerVar.dynamicTemplate = flightComboSerVar.resultTemplate;
		
		if(trip=='onw'){			
		flightComboSerVar.onwardFilterData = res.response.searchRes;
		flightComboSerVar.baseData.pricedItinerarysOnward = res.response.searchRes;				
		}else{			
		console.log('test tej');
		console.log(res.response.searchRes);
		for(itnIndex in res.response.searchRes){
			res.response.searchRes[itnIndex].trips[1] = res.response.searchRes[itnIndex].trips[0];
		}
		flightComboSerVar.returnFilterData = res.response.searchRes;
		flightComboSerVar.baseData.pricedItinerarysReturn = res.response.searchRes;				
		}
		
		
		//console.log('flightComboSerVar.dynamicTemplate');console.log(flightComboSerVar.dynamicTemplate);
		if(trip=='onw'){	
			flightComboSerVar.initFCData(trip); //re-initialize onw flight data
			flightSerVar.initialRenderFareCombo();			
			
			//change html text in fc steps
			var html='<strong class="title">'+i18n.t('selectOnwardFlight')+'</strong><div class="flightDtls flaticon-black401"><div></div></div>';
			$('#selectedOnwFlight').html(html);
			$('.fcSteps li:eq(0)').removeClass('selected').addClass('active');
			$('.fcSteps li:eq(2)').removeClass('selected').removeClass('active');
			$('.pBar strong').removeClass('scltRtn');
			$('.pBar span:eq(0)').removeClass('fMove'); 
			$('#selectedRetFlight').removeClass('opacity colorAnimation active');
			
			$(".fcSteps li:eq(2) .title").attr('data-i18n','buildYourItinerary');
			$('.fcSteps li:eq(2)').removeClass('opacity colorAnimation active');
			$('.fcSteps li:eq(2) .flightDtls').removeClass('cart-ic');
			$('.fcSteps li:eq(2) .flightDtls').addClass('nav-ic');
			$('.fcSteps li:eq(2) .flightDtls > div').hide();
		}else{
			flightComboSerVar.initFCData('rtn'); //re-initialize ret flight data
			// load return flights
			flightComboSerVar.loadReturnFlights();
			
			//change html text in fc steps
			var html='<strong class="title">'+i18n.t('selectReturnFlight')+'</strong><div class="flightDtls flaticon-black401"><div></div></div>';
			$('#selectedRetFlight').html(html);
			//$('.fcSteps li:eq(0)').removeClass('selected').addClass('active');
			$('.fcSteps li:eq(1)').removeClass('selected').removeClass('active');
			$('.fcSteps li:eq(2)').removeClass('selected').removeClass('active');
			$('.pBar strong').removeClass('scltItnry completed');
			$('.pBar strong').addClass('scltRtn');
			$('.pBar span:eq(1), .pBar span:eq(2)').removeClass('fMove'); 
			$(".fcSteps li:eq(2) .title").attr('data-i18n','buildYourItinerary');
			$('.fcSteps li:eq(2)').removeClass('opacity colorAnimation active');
			$('.fcSteps li:eq(2) .flightDtls').removeClass('cart-ic');
			$('.fcSteps li:eq(2) .flightDtls').addClass('nav-ic');
			$('.fcSteps li:eq(2) .flightDtls > div').hide();
		}
		
		
		if(trip=='onw'){
		loadTemplate('flight-sort-fareCombo',{onwFF:true},$('#flightResultsSortingPanel'),flightComboSerVar.dynamicTemplate);
		}else{
			loadTemplate('flight-sort-fareCombo',{retFF:true},$('#flightResultsSortingPanel'),flightComboSerVar.dynamicTemplate);
		}
		flightComboSerVar.updateFilghtCount();
		
		//$('.comboSteps').show(2500);
	$('.itineraryBlock,#fcProvideTravellerDetails,#provideTravellerDetails,#review-terms,#paymeBtn,._saveTravellerDetails,#fcFlightTripSummary,.fcSuccessAlert').fadeOut(500,function(){
						$('.resultBlock').fadeIn(1800);
		dynamicJsCssLoading('reviewPage.css','/common/themes/v2/css/results.css','css');		
    	dynamicJsCssLoading('reviewPage-ar.css','/common/themes/v2/css/results-ar.css','css');
		$('.modal-backdrop ').hide();  	
		// for a fare reprise case	
		$('._saveTravellerDetails').removeClass('LoadBtn');
		$('._saveTravellerDetails').removeAttr("disabled");
		$("._saveTravellerDetails").val(i18n.t('continueToPayment'));		
		});
		$('#review-terms').html('');
		
	setTimeout(function(){
						$('.modifyTog,.modifyBlock a,#_filter_airlineIcons_template,.flightFound').slideDown('slow');
		},2500);
		
		
	});
	
}

function alternativeFlights(fareUrl){
	console.log('alternativeFlights');
	console.log('fareChange:',fareUrl);
	
	var opts = cmnGetObjFrmURL(fareUrl);

	delete opts.isoView;
	
	var newUrl = '/flight/result?'+$.param(opts);

	console.log('newUrl');console.log(newUrl);
	location.href = newUrl;
				
}
function changeFlight(url){
	var query = url.split("?")[1];
	var result = {};
	query.split("&").forEach(function(part) {
		var item = part.split("=");
		if(item[0]!=""){
			result[item[0]] = decodeURIComponent(item[1]);
		}
	});
	var tripType = "RoundTrip";
	var dep="",arr="",depdate="",arrdate="";
	if(result.tripType == "2"){
		dep = result.dep;
		arr = result.arr;
		depdate = new Date(result.depdate).toString();
		arrdate = new Date(result.arrdate).toString();
	}else if(result.tripType == "1"){
		tripType = "OneWay";
		dep = result.dep;
		arr = result.arr;
		depdate = new Date(result.depdate).toString();
	}else if(result.tripType == "3"){
		tripType = "MultiCity";
		dep = result.dep1;
		arr = result.arr1;
		depdate = new Date(result.arrdate1).toString();
		if(result.dep2!=""){
			dep += ","+result.dep2;
			arr += ","+result.arr2;
			depdate += ","+new Date(result.arrdate2).toString();
			if(result.dep3!=""){
				dep += ","+result.dep3;
				arr += ","+result.arr3;
				depdate += ","+new Date(result.arrdate3).toString();
				if(result.dep4!=""){
					dep += ","+result.dep4;
					arr += ","+result.arr4;
					depdate += ","+new Date(result.arrdate4).toString();
					if(result.dep5!=""){
						dep += ","+result.dep5;
						arr += ","+result.arr5;
						depdate += ","+new Date(result.arrdate5).toString();
						if(result.dep6!=""){
							dep += ","+result.dep6;
							arr += ","+result.arr6;
							depdate += ","+new Date(result.depdate6).toString();
						}
					}
				}
			}
		}
	}
	chngFlgt({
		"trip_type":tripType,
	    "leaving_from":dep,
	    "going_to":arr,
	    "departing_date":depdate,
	    "returning_date":arrdate,
	    "traveller_adult":result.adt,
	    "traveller_child":result.chd,
	    "traveller_infant":result.inf,
	    "class":result.cbn ? (result.cbn).toUpperCase():""
	});
}

/**
 *For Price Sliders
 */
var $onwardRange,$returnRange, onwardPriceSlider,returnPriceSlider;

var renderBestOffers;
var paginationOptInitFF;

var flightComboSerVar = (function() {
	'user strict';
	return {
		/**
		*Global Variables
		*/
		//set orginal base object [clone]
		//remove this later Refactor
		filterData: [],
		onwardBaseObj: [],
		returnBaseObj: [],
		isActive:false,
		dynamicTemplate:'',
		uuid: '',
		baseData: [],
		cExR: [],
		nonStopFlights: 'false',
		onwardFilterData: [],
		returnFilterData: [],
		onwardTrips: [],
		returnTrips: [],
		filterUIArry:[],
		hashmap: [],
		headerInfo: '',
		setSelectedCurrency:'',
		dynamicFilterdata: {},
		fareRes: {},
		onwPriceFilterMin: 0,
		retPriceFilterMin: 0,
		topairline:'',
	  	onwPriceFilterMax: 0,
	  	retPriceFilterMax: 0,
	  	checkInit: false,
		eventBindingFlag:false,
		selectedFlightCombination:{},
		onwFlightSelected:false,
		rtnFlightSelected:false,
		returnEdit:false,
		fareChange:false,
		getSelectedCurrency:function(){
			if(this.setSelectedCurrency=="SAR"){
				this.setSelectedCurrency = 'SAR';
			}else{
				this.setSelectedCurrency = this.setSelectedCurrency;				
			}
			return this.setSelectedCurrency;
		},
		/**
		*@description Set the base object data across category
		*@params Array (Response Object)
		*@return null
		*/
		setData: function(res) {
			var obj = JSON.parse(JSON.stringify(res));
			this.baseData = obj;
			this.onwardFilterData = obj.pricedItinerarysOnward;
			this.returnFilterData = obj.pricedItinerarysReturn;
			this.cExR = obj.cExeR;
			this.hashmap = obj.maps;
			this.headerInfo = obj.resultsHeader;
			this.uuid = obj.uuid;
			this.setSelectedCurrency = obj.ISOCurrency;
			this.onwardBaseObj = obj.pricedItinerarysOnward;
			this.returnBaseObj = obj.pricedItinerarysReturn;
			this.isActive = false;
		},
	
		/**
		* Variables for filter and sorting
		*/
		filterSelector:{
			onwardAirline: "#airlineName-filter-list_FF li input[type=checkbox]",
			returnAirline: "#airlineName-filter-list_FFR li input[type=checkbox]",
			onwardStopsFF: "#stops-filter-list_FF ul li input[type=checkbox]",
			returnStopsFF: "#stops-filter-list_FFR ul li input[type=checkbox]",
			stopOverAirports: "#_stopOverAirport-filter-list_FF li input[type=checkbox]",
			returnStopOverAirports: "#_stopOverAirport-filter-list_FFR li input[type=checkbox]",
			
			onwardNearByAirport: "#_nearByAirport-filter-list_FF li input[type=checkbox]",
			returnNearByAirport: "#_nearByAirport-filter-list_FFR li input[type=checkbox]",
			eventDeparture: "#_depature_time_filter_FF li input[type=checkbox]",
			eventArrival: "#_arrival_time_filter_FF li input[type=checkbox]",
			returnTripEventDeparture: "#_depature_time_filter_FFR li input[type=checkbox]",
			returnTripEventArrival: "#_arrival_time_filter_FFR li input[type=checkbox]",
			
			//sortPrice: "#_sortPrice",
			sortOnwardPrice: "#_sortOnwardPrice",
			sortReturnPrice: "#_sortReturnPrice",
			sortOnwardDepart: "#_sortOnwardDepart",
			sortReturnDepart: "#_sortReturnDepart",
			sortOnwardArrival: "#_sortOnwardArrival",
			sortReturnArrival: "#_sortReturnArrival",
			sortOnwardTD: "#_sortOnwardTD",
			sortReturnTD: "#_sortReturnTD",
			
			ffpAllianceFF: '#ffp-tab_FF li',
			ffpAllianceFFR: '#ffp-tab_FFR li',
			
			/*priceFilter: "#_price_fliter",
			priceFilterSection: "#_flight-price-filter-section",*/
			onwardPriceFilter: "#_price_fliter_FF",
			onwardPriceFilterSection: "#_flight-price-filter-section_FF",
			returnPriceFilter: "#_price_fliter_FFR",
			returnPriceFilterSection: "#_flight-price-filter-section_FFR",
			
			clearFilter: "#_clearFilter",
			airlineGrid: '#flightAirlineGrid .item a'
		},
		init:function(){
			var $t = this;
			$t.checkInit = true;
				
			/**
			*Sort by Onward Price
			*/
			$('body').on('change',$t.filterSelector.sortOnwardPrice,function(){
				var $onwardSortPrice = $t.getOnwardPriceSortVal();
				$t.sortByOnwardPrice($onwardSortPrice);
				$t.renderSortedOnwardData();
			});
			/**
			*Sort by Return Price
			*/
			$('body').on('change',$t.filterSelector.sortReturnPrice,function(){
				var $returnSortPrice = $t.getReturnPriceSortVal();
				$t.sortByReturnPrice($returnSortPrice);
				$t.renderSortedReturnData();
			});
			/**
			*Sort by Onward Depart Time
			*/
			$('body').on('change',$t.filterSelector.sortOnwardDepart,function(){
				var $onwardSortDepart = $t.getOnwardDepartSortVal();
				$t.sortByOnwardDepart($onwardSortDepart);
				$t.renderSortedOnwardData();
			});
			/**
			*Sort by Return Depart Time
			*/
			$('body').on('change',$t.filterSelector.sortReturnDepart,function(){
				var $returnSortDepart = $t.getReturnDepartSortVal();
				$t.sortByReturnDepart($returnSortDepart);
				$t.renderSortedReturnData();;
			});
			/**
			*Sort by Onward Arrival Time
			*/
			$('body').on('change',$t.filterSelector.sortOnwardArrival,function(){
				var $onwardSortArrival = $t.getOnwardArrivalSortVal();
				$t.sortByOnwardArrival($onwardSortArrival);
				$t.renderSortedOnwardData();
			});
			/**
			*Sort by Return Arrival Time
			*/
			$('body').on('change',$t.filterSelector.sortReturnArrival,function(){
				var $returnSortArrival = $t.getReturnArrivalSortVal();
				$t.sortByReturnArrival($returnSortArrival);
				$t.renderSortedReturnData();;
			});
			/**
			*Sort by Onward Trip Duration
			*/
			$('body').on('change',$t.filterSelector.sortOnwardTD,function(){
     			var $onwardSortTD = $t.getOnwardTDSortVal();
				$t.sortByOnwardTD($onwardSortTD);
				$t.renderSortedOnwardData();
			});
			/**
			*Sort by Return Trip Duration
			*/
			$('body').on('change',$t.filterSelector.sortReturnTD,function(){
				var $returnSortTD = $t.getReturnTDSortVal();
				$t.sortByReturnTD($returnSortTD);
				$t.renderSortedReturnData();
			});
			/**
			 *Filter by Airline name
			 */			
			$('body').on('change',this.filterSelector.onwardAirline,function(){
				$t.resetOnwardPriceSliderOnLoad();
				setTimeout(function(){
					$t.onwardRender(true);				
				},80);
				//$t.findOnwFLKey($(this));
			});
			/**
			 *Filter by Airline name
			 */			
			$('body').on('change',this.filterSelector.returnAirline,function(){
				$t.resetReturnPriceSliderOnLoad();
				setTimeout(function(){
					$t.returnRender(true);				
				},80);
				//$t.findRetFLKey($(this));
			});
			
		//Alliance 
			$('body').on('click',this.filterSelector.ffpAllianceFF,function(){
			if($(this).hasClass('active')){
			 $(this).removeClass('active');
			}
			else {
			$(this).addClass('active');

			}
				$t.resetOnwardPriceSliderOnLoad();
				setTimeout(function(){
					$t.onwardRender(true);
				},80);
				//$t.findFLKey($('#ffp-tab'));
			});
			
			//Alliance 
			$('body').on('click',this.filterSelector.ffpAllianceFFR,function(){
			if($(this).hasClass('active')){
			 $(this).removeClass('active');
			}
			else {
			$(this).addClass('active');

			}
				$t.resetReturnPriceSliderOnLoad();
				setTimeout(function(){
					$t.returnRender(true);
				},80);
				//$t.findFLKey($('#ffp-tab'));
			});
					
			$('body').on('change',this.filterSelector.onwardStopsFF,function(){
				$t.resetOnwardPriceSliderOnLoad();
				setTimeout(function(){
					$t.onwardRender(true);
					//$t.render(true);
				},80);
				//$t.findOnwFLKey($(this));
				//$t.findRetFLKey($(this));
			});
			
			$('body').on('change',this.filterSelector.returnStopsFF,function(){
				$t.resetReturnPriceSliderOnLoad();
				setTimeout(function(){
					$t.returnRender(true);
				},80);
				//$t.findRetFLKey($(this));
			});
			
			/**
			 *Filter by Onward Airport Stopover
			 */			
			$('body').on('change',this.filterSelector.stopOverAirports,function(){
				$t.resetOnwardPriceSliderOnLoad();
				setTimeout(function(){
					$t.onwardRender(true);
				},80);
				//$t.findOnwFLKey($(this));
			});
			/**
			 *Filter by Return Airport Stopover
			 */			
			$('body').on('change',this.filterSelector.returnStopOverAirports,function(){
				$t.resetReturnPriceSliderOnLoad();
				setTimeout(function(){
					$t.returnRender(true);
				},80);
				//$t.findRetFLKey($(this));
			});
			/**
			 *Filter Near by Airport
			 */			
			$('body').on('change',this.filterSelector.onwardNearByAirport,function(){
				
				$t.resetOnwardPriceSliderOnLoad();
				setTimeout(function(){
					//$t.renderBasetemplate({NBA:false});
					async.series([
					function(callback){
						$t.onwardRender(true);
						return callback();
					},function(callback){
						$t.loadOnwFilter();
						return callback();
					}]
					,function(err){	
						$t.reloadOnwFilters($t.dynamicFilterdata);
					});
				},80);
					
			});		
			/**
			 *Filter Near by Airport
			 */			
			$('body').on('change',this.filterSelector.returnNearByAirport,function(){
				$t.resetReturnPriceSliderOnLoad();
				setTimeout(function(){
					//$t.renderBasetemplate({NBA:false});
					async.series([
					function(callback){
						$t.returnRender(true);
						return callback();
					},function(callback){
						$t.loadRetFilter();
						return callback();
					}]
					,function(err){	
						$t.reloadRetFilters($t.dynamicFilterdata);
					});
				},80);
					
			});		
			/**
			 *Filter by Departure Time
			 */			
			$('body').on('change',this.filterSelector.eventDeparture+','+this.filterSelector.eventArrival,function(){
				$t.resetOnwardPriceSliderOnLoad();
				setTimeout(function(){
					$t.onwardRender(true);
				},80);
				//$t.findOnwFLKey($(this));
			});
			
			/**
			 *Filter by Arrival Time
			 */			
			$('body').on('change',this.filterSelector.returnTripEventDeparture+','+this.filterSelector.returnTripEventArrival,function(){
				$t.resetReturnPriceSliderOnLoad();
				setTimeout(function(){
					$t.returnRender(true);
				},80);
				//$t.findRetFLKey($(this));
			});
			/**
			 *Filter by Onward Price
			 */					
			$('body').on('change',this.filterSelector.onwardPriceFilter,function(){
				$this = $(this);
				 window.setTimeout(function(){
					var priceStr;
					async.parallel([
						function(callback){
							priceStr = $t.getFilteredOnwardPrice();
							return callback();
						},
						function(callback){
							$t.setPriceMinMax(priceStr,'onward');
							return callback();
						}
					],
					function(err){
						$t.onwardRender();
						FBFOnwardPriceChange({"left_range":$t.onwPriceFilterMin,"right_range":$t.onwPriceFilterMax});
						//$t.findOnwFLKey($this);
					});
				},700);				
			});
			/**
			 *Filter by Return Price
			 */					
			$('body').on('change',this.filterSelector.returnPriceFilter,function(){
				$this = $(this);
				 window.setTimeout(function(){
					var priceStr;
					async.parallel([
						function(callback){
							priceStr = $t.getFilteredReturnPrice();
							return callback();
						},
						function(callback){
							$t.setPriceMinMax(priceStr,'return');
							return callback();
						}
					],
					function(err){
						$t.returnRender();
						FBFRtnPriceChange({"left_range":$t.retPriceFilterMin,"right_range":$t.retPriceFilterMax});
						//$t.findRetFLKey($this);
					});
				},700);				
			});
						
			// on select of FF flights radio btns
			/*$('body').on('change','input[name=onw]',function(){
				if($('.selected-pan').hasClass('colorAnimation'))
				$('.selected-pan').removeClass('colorAnimation');
				$('.tripRow').removeClass('selected');
				$(this).parents('.tripRow').addClass('selected');
				
				var selectedOnwTrip,selectedOnwTripObj;
				for(var i  in $t.onwardFilterData){
					var obj = $t.onwardFilterData[i];
					if(obj.index==$(this).attr('data-index')){
						selectedOnwTripObj=obj;
						for(var j in obj.trips[0]){
							var legTrip = obj.trips[0][j];
							if(legTrip.tripLegIndex==$(this).attr('data-legIndex')){
								selectedOnwTrip = legTrip;
								break;
							}
						}
						break; 
					}
					
				}
				$t.selectedFlightCombination.onwardTrip = selectedOnwTrip;
				$t.selectedFlightCombination.onwardTripObj = selectedOnwTripObj;
			  
			  $t.renderSelectedFareCombo();

			});
			
			$('body').on('change','input[name=rtn]',function(){
				if($('.selected-pan').hasClass('colorAnimation'))
				$('.selected-pan').removeClass('colorAnimation');
				$('.returnTripRow').removeClass('selected');
				$(this).parents('.returnTripRow').addClass('selected');
				
				var selectedRetTrip,selectedRetTripObj;;
				for(var i in $t.returnFilterData){
					var obj = $t.returnFilterData[i];
					if(obj.index==$(this).attr('data-index')){
						selectedRetTripObj=obj;
						for(var j in obj.trips[1]){
							var legTrip = obj.trips[1][j];
							if(legTrip.tripLegIndex==$(this).attr('data-legIndex')){
								selectedRetTrip = legTrip;
								break;
							}
						}
						break; 
					}
					
				}
				
				$t.selectedFlightCombination.returnTrip = selectedRetTrip;
				$t.selectedFlightCombination.returnTripObj = selectedRetTripObj;
				  
				 $t.renderSelectedFareCombo();
				
				
				
			   
			});*/
			
			$('body').on('click','#selectedFareComboBtn',function(){
				var target = $(this);
				if(!$t.selectedFlightCombination.onwardTrip){
					growl_alert(i18n.t("pleaseSelectOnwTrip"));
				}else if(!$t.selectedFlightCombination.returnTrip){
					growl_alert(i18n.t("pleaseSelectRetTrip"));
				}
				var data = {
					uniqueId:flightComboSerVar.uuid,
					onwIndex:$t.selectedFlightCombination.onwardTripObj.index,
					onwLegIndex:$t.selectedFlightCombination.onwardTrip.tripLegIndex,
					retIndex:$t.selectedFlightCombination.returnTripObj.index,
					retLegIndex:$t.selectedFlightCombination.returnTrip.tripLegIndex
					
				};
				
				var t1,t2;	

				t1 = $t.selectedFlightCombination.onwardTrip.jsonSector[$t.selectedFlightCombination.onwardTrip.jsonSector.length-1].arrDateAndTime;

				
				t2 = $t.selectedFlightCombination.returnTrip.jsonSector[0].depDateAndTime;
							
					
				
				var d1 = new Date(moment(t1));
				var d2 = new Date(moment(t2));
				var timeDiff2 = d2.getTime() - d1.getTime();
				timeDiff2 = timeDiff2 / (1000 * 3600);					
				if(timeDiff2<2){
					growl_alert(i18n.t("flight_minimum_validation"));
					return false;
				}else{
					if(data.onwIndex in fareRuleViewedInfo ){
					data.onwFInfo = fareRuleViewedInfo[data.onwIndex] ;			
					}
					if(data.retIndex in fareRuleViewedInfo ){
					data.retFInfo = fareRuleViewedInfo[data.retIndex] ;			
					}
					
					jsonData = JSON.stringify(data);
					target.attr("disabled", true);
					btnLoadingAnimation(target);
					$.post('/flight/fareComboreviewapi',{resData:jsonData},function(res){
					 if(res!== null && res.status ==='SUCCESS'){
						flightSerVar.fareRes = res ;
						var base_url = window.location.origin;
						var result = 'flight/review?pid='+res.response.productId;
						reloadCon = true;
						router.navigate(result);
					  }
					  //else if(res.status==='ERROR'){
					  else {
						  var onwTripStatus = (res.onwTripStatus && res.onwTripStatus) || 'fail' ;
						  var retTripStatus = (res.retTripStatus && res.retTripStatus) || 'fail' ;
						  
						  if(onwTripStatus.toLowerCase()=='fail' 
						              && retTripStatus.toLowerCase()=='fail'){
							growl_alert(i18n.t("selectFlightNotAvl"));							  
						  }else if(onwTripStatus.toLowerCase() =='fail'){
						 growl_alert(i18n.t("selectOnwFlightNotAvl"));							  
						  }else if(retTripStatus.toLowerCase() =='fail'){
						 growl_alert(i18n.t("selectRetFlightNotAvl"));
						  }
						 flightComboSerVar.removeRecord(data,res);
						 $('#selectedFareComboBtn').removeAttr("disabled");
						 $('#selectedFareComboBtn').removeClass('LoadBtn');
						 $('#selectedFareComboBtn').text(i18n.t("bookNow"));
					  }
					});
				}
				
            });		

			$('body').on('click','#undoLastFilter',function(){	
			
			var filterElm = flightComboSerVar.filterUIArry.pop();
			if(filterElm.source!='onwPriceSlider' && filterElm.source!='retPriceSlider'){
				var target =  $('#'+filterElm.id);
					var isDisabled = target.prop('disabled');
					if(isDisabled){
						target.prop('checked',false);
						elm.remove();
					}else{
						target.trigger('click');
					}
			}
			//flightComboSerVar.generateComboFilterUI(flightComboSerVar.filterUIArry,'fareComboFiltered');
				
            });	
			
			/**
			 *Reset Filter Action
			 */
			$('body').on('click touchstart','.yhfComboReset,#clearFilters',function(){	
			    onwSelected = $t.selectedFlightCombination.onwardTrip?true: false; 
				async.series([
					function(callback){
						//reset price slider
						if(!onwSelected){
						$t.resetOnwardPriceSliderOnLoad();		
						}else{					
						$t.resetReturnPriceSliderOnLoad();	
						}						
						return callback();						
					},
					function(callback){						
						if(!onwSelected){
						$('.onwFilterFF').each(function(){
							$(this).attr('checked', false); 
						});
						//Reset ffp alliance
                        $($t.filterSelector.ffpAllianceFF	).each(function(){	
						    $(this).removeClass('active'); 
						});
						}else{
						$('.retFilterFF').each(function(){
							$(this).attr('checked', false); 
						});
						//Reset ffp alliance
                        $($t.filterSelector.ffpAllianceFFR	).each(function(){	
						    $(this).removeClass('active'); 
						});
						}
						
						
						return callback();
						
					},
					function(callback){		
						//Trigger the UI Filter Module
						$t.UIFilterSelected();										
						//Reset sort dropdown				
						//$t.resetSorts();			
						return callback();
						
					},
					function(callback){		
						//Re-render the result view
					//	$t.render();				
					if(!onwSelected){
						$t.onwardRender();	
						}else{
							$t.returnRender();	
						}
						return callback();
						
					}
				],function(err){					
					
				});
				return false;
			});
			
			
			
			/**
			*On click of the trip bar
			*/
			$('body').on('click','.tripRow',function(){
				/*$(this).find('input[name=onw]').trigger('change');
				$(this).find('input[name=onw]').prop('checked', 'checked');*/
				
				var $radBtn = $(this).find('input[name=onw]');
				$radBtn.prop('checked', 'checked');
				if($('.selected-pan').hasClass('colorAnimation'))
				$('.selected-pan').removeClass('colorAnimation');
				$('.tripRow').removeClass('selected');
				$(this).addClass('selected');
				
				setTimeout( function() {
				var selectedOnwTrip,selectedOnwTripObj;
				for(var i  in $t.onwardFilterData){
					var obj = $t.onwardFilterData[i];
					if(obj.index==$radBtn.attr('data-index')){
						selectedOnwTripObj=obj;
						for(var j in obj.trips[0]){
							var legTrip = obj.trips[0][j];
							if(legTrip.tripLegIndex==$radBtn.attr('data-legIndex')){
								selectedOnwTrip = legTrip;
								break;
							}
						}
						break; 
					}
					
				}
				$t.selectedFlightCombination.onwardTrip = selectedOnwTrip;
				$t.selectedFlightCombination.onwardTripObj = selectedOnwTripObj;
			  $t.renderSelectedFareCombo();
			  });
			  
			});
			/**
			*On click of the trip bar
			*/
			$('body').on('click','.returnTripRow',function(){
				//$(this).find('input[name=rtn]').trigger('change');
				//var $radBtn = $(this).find('input[name=rtn]').prop('checked', 'checked');
				var $radBtn = $(this).find('input[name=rtn]');
				$radBtn.prop('checked', 'checked');
				if($('.selected-pan').hasClass('colorAnimation'))
				$('.selected-pan').removeClass('colorAnimation');
				$('.returnTripRow').removeClass('selected');
				$(this).addClass('selected');
				
				setTimeout( function() {
				var selectedRetTrip,selectedRetTripObj,availability=false;
				for(var i in $t.returnFilterData){
					var obj = $t.returnFilterData[i];
					if(obj.index==$radBtn.attr('data-index')){
						selectedRetTripObj=obj;
						for(var j in obj.trips[1]){
							var legTrip = obj.trips[1][j];
							if(legTrip.tripLegIndex==$radBtn.attr('data-legIndex')){
								selectedRetTrip = legTrip;
								break;
							}
						}
						break; 
					}
					
				}
				
				$t.selectedFlightCombination.returnTrip = selectedRetTrip;
				$t.selectedFlightCombination.returnTripObj = selectedRetTripObj;
				  
				 $t.renderSelectedFareCombo();
				 });
				
			});
			
			$('body').on('click','#fcSelectBtn',function(){
				
				var offsetPopTop = $('#_bodyContainer').offset().top;
				$('html, body').animate({scrollTop:offsetPopTop}, 500);
				
				
				var onwardTrip,returnTrip;
				var $selectBtn = $(this);
				var data = {
					uniqueId:flightComboSerVar.uuid,
					indexID:$selectBtn.attr('data-index'),
					legIndex:$selectBtn.attr('data-legIndex')
				};
			function fetchingData($selectBtn){ 
				$('#fcModal .fcDtls figure img').removeClass("mRtrn");
				var $this=$selectBtn.parents('._fbfPopUpInfo');
				var fltDts=$this.find('.flightFrom').text().trim().slice(0,5);
				var fltTo=$this.find('.flightTo').text().trim().slice(0,5);
				var IataTo=$this.find('.flightTo.hidden-xs small').text().trim();
				var Iata=$this.find('.flightFrom small').text().trim();
				var fligtsFrom = fltDts;
				var fligtsTo = fltTo;
				var placeFrom = '('+Iata+')';
				var placeTo = '('+IataTo+')';
			 
				var elm1=$('#fcModal .fcDtls strong .placeFrom').text(placeFrom);
				var elm2=$('#fcModal .fcDtls strong .placeTo').text(placeTo);
				var elm3=$('#fcModal .fcDtls strong .fligtsFrom').text(fligtsFrom);
				var elm4=$('#fcModal .fcDtls strong .fligtsTo').text(fligtsTo);
				var imgSrc = $selectBtn.parents('._fbfPopUpInfo').find('img').attr('src');
				var alName = $selectBtn.parents('._fbfPopUpInfo').find('.airlineName em').text();
				$('#fcModal .fcDtls figure img').attr('src', imgSrc);
				$('#fcModal .fcDtls figcaption').text(alName);
				
				if($('#selectedOnwFlight').hasClass('selected')){
					$('#fcModal .fcDtls figure img').addClass("mRtrn");
				}
			}	
				
			 if(!$t.onwFlightSelected && !$t.rtnFlightSelected){  // onw flt not selected earlier
			    onwardTrip = true;
				$(this).addClass('LoadBtn');  
				$(".loading_popup_flight_ff").addClass('active');
				fetchingData($selectBtn);
				$('#fcModal p span').html(i18n.t('addingOnwardFlight'));
				$('#fcModal .fcSuccess, #fcModal .fcFail').hide();
				$('.fcDtls').show();
				$('#fcModal').fadeIn('slow');
				
				
				$("#selectedOnwFlight .title").html(i18n.t('addingOnwardFlight')+' <img src="'+i18n.t("basePath")+'img/imgBgLoad.gif"/>');
				$("#selectedRetFlight .title").html(i18n.t('loadingReturnFlights')+' <img src="'+i18n.t("basePath")+'img/imgBgLoad.gif"/>');
				$("#selectedRetFlight").addClass("opacity colorAnimation ");
				$('.pBar strong').addClass('scltRtn');
				$('.pBar span:eq(0)').addClass('fMove'); 
					
				var selectedOnwTrip,selectedOnwTripObj,availability;
				 
				 
				data.checkOnwFlightAvailability = true;
				var jsonData = JSON.stringify(data);
				setTimeout(function(){
				 async.parallel([function(callback){
				 $.post('/flight/fcFlightAvailability',{resData:jsonData},function(res){
					if(res!== null && res.status ==='SUCCESS')	
					availability = true;
				    callback();
					
				  }); //availability = true; callback();
				 },function(callback){
					 for(var i  in $t.onwardFilterData){
							var obj = $t.onwardFilterData[i];
							if(obj.index==$selectBtn.attr('data-index')){
								selectedOnwTripObj=obj;
								for(var j in obj.trips[0]){
									var legTrip = obj.trips[0][j];
									if(legTrip.tripLegIndex==$selectBtn.attr('data-legIndex')){
										selectedOnwTrip = legTrip;
										break;
									}
								}
								break; 
								
							}
							
						}
					callback();
				 }],function(){
							setTimeout(function(){
					$('#fcModal').fadeOut('slow');
					},3000);		 
					if(availability){		
			
						
				
					
					$t.selectedFlightCombination.onwardTrip = selectedOnwTrip;
					$t.selectedFlightCombination.onwardTripObj = selectedOnwTripObj;
					$t.onwFlightSelected = true;					
					var selectedTripData = {
						fcTrip :selectedOnwTripObj,
						trip:selectedOnwTrip,
						rtn:'',
						changeFlight:'changeOnwFlight()',
						maps:flightComboSerVar.hashmap
					}	
					$(".loading_popup_flight_ff").removeClass('active');
					
					$("#selectedRetFlight .title").html(i18n.t('selectReturnFlight'));
					$("#selectedRetFlight .title").attr('data-i18n','selectReturnFlight');
					$('.fcSteps li:eq(0)').addClass('selected').removeClass('active');
					$('.fcSteps li:eq(1)').addClass('active');
					$("#fcModal .fcSuccess span").attr('data-i18n','successMsg');
					$("#fcModal .fcSuccess small").attr('data-i18n','addedOnwFlt');
					setTimeout(function(){
					if(!$('#fcModal .fcSuccess').is('visible')){
						$('.fcDtls').fadeOut(function(){	
							$('#fcModal .fcSuccess').show();
						});
					} else {
						$('#fcModal .fcSuccess').fadeOut(function(){						
							$('.fcDtls').show();
						});
						
					}
					},2000);
					
					loadTemplate('flight-fareCombo-selected',selectedTripData,$('#selectedOnwFlight'),flightComboSerVar.dynamicTemplate);
									
	
					$('.selected .flightDtls div').fadeIn(1500);
					
							// curr change happened in bestOffers
					  if(flightSerVar.renderFBFOffers==true){
						   flightComboSerVar.ccm(flightComboSerVar.setSelectedCurrency);
						   	_langGlobal.langInit();
							pricetagConvert.init(); // divide decimal point	

					  }else{
							// load return flights
							flightComboSerVar.loadReturnFlights();
					
				  }
					
					flightComboSerVar.filterUIArry = [];  // clear filter data if any
					flightComboSerVar.generateComboFilterUI(flightComboSerVar.filterUIArry);
					
					
					
					flightComboSerVar.updateFilghtCount();
					
					$('.alert_custom').fadeOut();   //remove error alerts if any
					
				    }else{
						growl_alert(i18n.t("selectFlightNotAvl"));
						flightComboSerVar.removeRecord(data);
						
						//move back css
						
							$('.pBar strong').removeClass('scltRtn');
							$('.pBar span:eq(0)').removeClass('fMove'); 
							$('#selectedRetFlight').removeClass('opacity colorAnimation active');
							$("#fcModal .fcFail span").attr('data-i18n','failed');
							$("#fcModal .fcFail small").attr('data-i18n','sorryNotAvlb');
							if(!$('#fcModal .fcFail').is('visible')){
								$('.fcDtls').fadeOut(function(){	
									$('#fcModal .fcFail').show();
								});
							} else {
								$('#fcModal .fcFail').fadeOut(function(){						
									$('.fcDtls').show();
								});
							}
					}

				  
				 });
				});
				}else{  // return flt select clkd
				if($t.validateDepArrTime($selectBtn)){
					$(this).addClass('LoadBtn');  
					$(".loading_popup_flight_ff").addClass('active');
					fetchingData($selectBtn);
					
					if(!$t.onwFlightSelected){
						data.onwEdited = true;
						data.uniqueId=flightComboSerVar.generatedPID ;
						onwardTrip = true;
						$('#fcModal p span').html(i18n.t('addingOnwardFlight'));
					}else {
						returnTrip = true;
						$('#fcModal p span').html(i18n.t('addingReturnFlight'));
					}
					if($t.returnEdit){
						data.uniqueId=flightComboSerVar.generatedPID ;
					}
					data.fareChange=flightComboSerVar.fareChange;
					
					$('#fcModal .fcSuccess, #fcModal .fcFail').hide();
					$('.fcDtls').show();
					$('#fcModal').fadeIn('slow'); 
					
					$("#selectedRetFlight .title").html(i18n.t('addingReturnFlight')+' <img src="'+i18n.t("basePath")+'img/imgBgLoad.gif"/>');
					$('.fcSteps li:eq(2) .title').html(i18n.t('buildingYourItinerary')+' <img src="'+i18n.t("basePath")+'img/imgBgLoad.gif"/>');
					$(".fcSteps li:eq(2)").addClass("opacity colorAnimation ");
					$('.pBar strong').addClass('scltItnry');		
					$('.pBar span:eq(1)').addClass('fMove');
					

					
					//$('.selected .flightDtls div').fadeIn(1500);
					//$(".loading_popup_flight").removeClass('active');
				
				var selectedRetTrip,selectedRetTripObj,availability;
				var jsonData = JSON.stringify(data);
				
				setTimeout(function(){
				async.parallel([function(callback){
				 $.post('/flight/fareComboreviewapi',{resData:jsonData},function(res){
				if(res!== null && res.status ==='SUCCESS'){		
				availability = true;
				flightComboSerVar.fareRes = res ;
				}
				 callback();
				});
				 },function(callback){
					 if(data.onwEdited){
						 for(var i  in $t.onwardFilterData){
							var obj = $t.onwardFilterData[i];
							if(obj.index==$selectBtn.attr('data-index')){
								selectedOnwTripObj=obj;
								for(var j in obj.trips[0]){
									var legTrip = obj.trips[0][j];
									if(legTrip.tripLegIndex==$selectBtn.attr('data-legIndex')){
										selectedOnwTrip = legTrip;
										break;
									}
								}
								break; 
								
							}
							
						}
					 }else{
						  for(var i  in $t.returnFilterData){
							var obj = $t.returnFilterData[i];
							if(obj.index==$selectBtn.attr('data-index')){
								selectedRetTripObj=obj;
								for(var j in obj.trips[1]){
									var legTrip = obj.trips[1][j];
									if(legTrip.tripLegIndex==$selectBtn.attr('data-legIndex')){
										selectedRetTrip = legTrip;
										break;
									}
								}
								break; 
								
							}
							
						}
					 }
					
					callback();
				 }],function(){
					
					if(availability){	
			
					var selectedTripData ;
			        if(data.onwEdited){
					$t.selectedFlightCombination.onwardTrip = selectedOnwTrip;
					$t.selectedFlightCombination.onwardTripObj = selectedOnwTripObj;
					$t.onwFlightSelected = true;					
						var selectedTripData = {
							fcTrip :selectedOnwTripObj,
							trip:selectedOnwTrip,
							rtn:'',
							changeFlight:'changeOnwFlight()',
							maps:flightComboSerVar.hashmap
						}	
					$('.fcSteps li:eq(0)').addClass('selected').removeClass('active');
					loadTemplate('flight-fareCombo-selected',selectedTripData,$('#selectedOnwFlight'),$t.dynamicTemplate);	
					}else{
					$t.selectedFlightCombination.returnTrip = selectedRetTrip;
					$t.selectedFlightCombination.returnTripObj = selectedRetTripObj;
					$t.rtnFlightSelected = true;										
						var selectedTripData = {
							fcTrip :selectedRetTripObj,
							trip:selectedRetTrip,
							rtn:'rtn',
							changeFlight:'changeRtnFlight()',
							maps:flightComboSerVar.hashmap
						}
					loadTemplate('flight-fareCombo-selected',selectedTripData,$('#selectedRetFlight'),$t.dynamicTemplate);
					}
						
					
					
					$('.fcSteps li:eq(1)').addClass('selected').removeClass('active');
					$('.fcSteps li:eq(2)').addClass('active'); 
					$('.fcSteps li:eq(2) .title').html(i18n.t('reviewYourItinerary'));
					$('.fcSteps li:eq(2) .title').attr('data-i18n','reviewYourItinerary');
					$("#fcModal .fcSuccess span").attr('data-i18n','successMsg');
					$("#fcModal .fcSuccess small").attr('data-i18n','addedRtnFlt');
					setTimeout(function(){
					if(!$('#fcModal .fcSuccess').is('visible')){
						$('.fcDtls').fadeOut(function(){
							$('#fcModal .fcSuccess').show();
						});
					} else {
						$('#fcModal .fcSuccess').fadeOut(function(){						
							$('.fcDtls').show();
						});
						
					}
					},2000);
					
					
					$('.selected .flightDtls div').fadeIn(1500);
					
					/*setTimeout(function(){
						$('.resultBlock').fadeOut(2000,function(){
						dynamicJsCssLoading('results'+(i18n.options.lng == "en" ?"":'-'+i18n.options.lng)+'.css','/common/themes/v2/css/reviewPage'+(i18n.options.lng == "en"?"":'-'+i18n.options.lng)+'.css','css');
						$('.resultsPage').addClass('opc flightTravel opcFC');
						});
						setTimeout(function(){
							$('.itineraryBlock').fadeIn(1000);
						},2000);
					},5000);*/
					
					$('#rtnFltEdit').show();  //if disabled
					
					$('.alert_custom').fadeOut();   //remove error alerts if any
					
					var base_url = window.location.origin;
					//var result = '/flight/fcReview?pid='+flightComboSerVar.fareRes.response.productId;
					var result = '/flight/review?pid='+flightComboSerVar.fareRes.response.productId;
					flightComboSerVar.generatedPID = flightComboSerVar.fareRes.response.productId;
					reloadCon = true;
					router.navigate(base_url+result,true);
					
						
					/*setTimeout(function(){
						$('.modifyTog,.sCModify,.modifyBlock a,#_filter_airlineIcons_template,.flightFound').slideUp('slow');
					},2500);*/
					
					_langGlobal.langInit();
					
										 
				    }else{
						growl_alert(i18n.t("selectFlightNotAvl"));
						flightComboSerVar.removeRecord(data);
						
						//move back css
						
							$('.pBar strong').removeClass('scltItnry completed');
							$('.pBar span:eq(1), .pBar span:eq(2)').removeClass('fMove'); 
							$('.fcSteps li:eq(2)').removeClass('opacity colorAnimation active');
							$('.fcSteps li:eq(2) .flightDtls').removeClass('cart-ic');
							$('.fcSteps li:eq(2) .flightDtls').addClass('nav-ic');
							$('.fcSteps li:eq(2) .flightDtls > div').hide();
							$("#fcModal .fcFail span").attr('data-i18n','failed');
							$("#fcModal .fcFail small").attr('data-i18n','sorryNotAvlb');
									
							if(!$('#fcModal .fcFail').is('visible')){
								$('.fcDtls').fadeOut(function(){	
									$('#fcModal .fcFail').show();
								});
							} else {
								$('#fcModal .fcFail').fadeOut(function(){						
									$('.fcDtls').show();
								});
							}
					}
					$(".loading_popup_flight_ff").removeClass('active');
					setTimeout(function(){
					$('#fcModal').fadeOut('slow');
					},5000);	 
				   });
				  });
				  
				}
				
				 }	
				 
				});
			
			/**
				 *Remove Filtered UI Element list
				 */
				$('body').on('click touchstart','._TabComboFilterRemove',function(){
					var elm = $(this).parents('li');
					var id = elm.attr('data-id');
					var source = elm.attr('data-source');
					if(source!="onwPriceSlider" && source!="retPriceSlider" && source!="ffpAllianceFilter"){
					var target =  $('#'+id);
						var isDisabled = target.prop('disabled');
						if(isDisabled){
							target.prop('checked',false);
							elm.remove();
						}else{
							target.trigger('click');
						}
					}	
					/*if(source=="stopsFilterFF"){
						//var target =  $($t.filterSelector.stops).parents('li').find('#'+id);
						var target =  $('#'+id);
						var isDisabled = target.prop('disabled');
						if(isDisabled){
							target.prop('checked',false);
							elm.remove();
						}else{
							target.trigger('click');
						}
					}else if(source=="onwardAirlineFilterFF"){
						//var target =  $($t.filterSelector.airline).parents('li').find('#'+id);
						var target =  $('#'+id);
						var isDisabled = target.prop('disabled');
						if(isDisabled){
							target.prop('checked',false);
							elm.remove();
						}else{
							target.trigger('click');
						}
					}else if(source=="airportStopOverFilterFF"){
						//var target =  $($t.filterSelector.stopOverAirports).parents('li').find('#'+id);
						var target =  $('#'+id);
						var isDisabled = target.prop('disabled');
						if(isDisabled){
							target.prop('checked',false);
							elm.remove();
						}else{
							target.trigger('click');
						}
					}else if(source=="nearByAirportFilter"){
						//var target =  $($t.filterSelector.nearByAirport).parents('li').find('#'+id);
						var target =  $('#'+id);
						var isDisabled = target.prop('disabled');
						if(isDisabled){
						target.prop('checked',false);
							elm.remove();
						}else{
							target.trigger('click');
						}			  
					}else if(source=="airportDepartureTimeFilter"){
						//var target = $($t.filterSelector.eventDeparture).parents('li').find('#'+id);
						var target =  $('#'+id);
						var isDisabled = target.prop('disabled');
						if(isDisabled){
							target.prop('checked',false);
							elm.remove();
						}else{
							target.trigger('click');
						}				  
					}else if(source=="airportArrivalTimeFilter"){
						//var target = $($t.filterSelector.eventArrival).parents('li').find('#'+id);
						var target =  $('#'+id);
						var isDisabled = target.prop('disabled');
						if(isDisabled){
							target.prop('checked',false);
							elm.remove();
						}else{
							target.trigger('click');
						}		  
					}else*/
					else if(source=="onwPriceSlider"){
						elm.remove();
						setTimeout(function(){		
							$t.resetOnwardPriceSliderOnLoad();				
							$t.onwardRender();	
						},80);				
					}
					else if(source=="retPriceSlider"){
						elm.remove();
						setTimeout(function(){		
							$t.resetReturnPriceSliderOnLoad();				
							$t.returnRender();	
						},80);				
					}
					else if(source=="ffpAllianceFilter"){
						//var target = $($t.filterSelector.ffpAlliance+"[attr-alliance='_blank']");
						var target = $('#'+id);
						target.trigger('click');
					}
				});
			
			/*setTimeout(function(){
				$t.resetOnwardPriceSlider($t.onwardFilterData);
				$t.resetReturnPriceSlider($t.returnFilterData);
			},80);
			$t.render();*/
		},
		validateDepArrTime: function($selectBtn){
			if(!flightComboSerVar.rtnFlightSelected){
				var arr = flightComboSerVar.selectedFlightCombination.onwardTrip.jsonSector[flightComboSerVar.selectedFlightCombination.onwardTrip.jsonSector.length-1].arrDateAndTime;
				var dep = $selectBtn.attr('data-depDate');
				var d1 = new Date(arr);
				var d2 = new Date(dep);
				if(typeof dep!="undefined"){
					var timeDiff2 = d2.getTime() - d1.getTime();
					timeDiff2 = timeDiff2 / (1000 * 3600);		
					if(timeDiff2<2){
						growl_alert(i18n.t('flight_minimum_validation'));
						return false;
					}
					$('.alert_custom').hide();
					return true;
				}
				return true;
			}else{
				var arr = $selectBtn.attr('data-arrDate');
				var dep = flightComboSerVar.selectedFlightCombination.returnTrip.jsonSector[0].depDateAndTime;
				var d1 = new Date(arr);
				var d2 = new Date(dep);
				if(typeof dep!="undefined"){
					var timeDiff2 = d2.getTime() - d1.getTime();
					timeDiff2 = timeDiff2 / (1000 * 3600);		
					if(timeDiff2<2){
						growl_alert(i18n.t('flight_minimum_validation'));
						return false;
					}
					$('.alert_custom').hide();
					return true;
				}
				return true;
			}
			
		},
		initFCData : function(trip){ 
			if(trip=='onw'){
			 // reverting the selected onw FareCombo flight
				 flightComboSerVar.selectedFlightCombination.onwardTrip = undefined;
				 flightComboSerVar.selectedFlightCombination.onwardTripObj = undefined;
				 flightComboSerVar.onwFlightSelected = false;
			}else if(trip=='rtn'){
				flightComboSerVar.selectedFlightCombination.returnTrip = undefined;
				 flightComboSerVar.selectedFlightCombination.returnTripObj = undefined;
				 flightComboSerVar.rtnFlightSelected = false;
			}else{
				flightComboSerVar.selectedFlightCombination= {};
				 flightComboSerVar.onwFlightSelected = false;
				 flightComboSerVar.rtnFlightSelected = false;
			}
		
		},
		UIFilterSelected:function(){
			if(flightComboSerVar.onwPriceFilterMin!=0 && flightComboSerVar.onwPriceFilterMax!=0){
				removeValueFromArr('onwPriceSlider','price',flightComboSerVar.filterUIArry);
				flightComboSerVar.filterUIArry.push({
                  source:'onwPriceSlider',
                  value:'price',
                  id:'',
                  trip:'onward',
                  display:"<span class='filtPrice'><span>"+this.getSelectedCurrency()+"</span> "+flightComboSerVar.onwPriceFilterMin+" - <span>"+this.getSelectedCurrency()+"</span> "+flightComboSerVar.onwPriceFilterMax + "</span>"
              });			  
			}else{
				removeValueFromArr('onwPriceSlider','price',flightComboSerVar.filterUIArry);
			}
			if(flightComboSerVar.retPriceFilterMin!=0 && flightComboSerVar.retPriceFilterMax!=0){
				removeValueFromArr('retPriceSlider','price',flightComboSerVar.filterUIArry);
				flightComboSerVar.filterUIArry.push({
                  source:'retPriceSlider',
                  value:'price',
                  id:'',
                  trip:'return',
                  display:"<span class='filtPrice'><span>"+this.getSelectedCurrency()+"</span> "+flightComboSerVar.retPriceFilterMin+" - <span>"+this.getSelectedCurrency()+"</span> "+flightComboSerVar.retPriceFilterMax + "</span>"
              });			  
			}else{
				removeValueFromArr('retPriceSlider','price',flightComboSerVar.filterUIArry);
			}
			$('.onwFilterFF,.retFilterFF').each(function(){
				var source = $(this).attr('name');
				var value = $(this).val();
				var id = $(this).attr('id');
				var displayVal = "",trip="";
					if($(this).is(':checked')){	
						if(isFilterInArray(source,value,flightComboSerVar.filterUIArry)==true){
							if(source=="stopsFilterFF" || source=="stopsFilterFFR"){
								displayVal = cmnStopsLangRender(value);
								trip='';
							}else if(source=="airportDepartureTimeFilter"){
								displayVal = cmnArrivalEventLangRender(value, i18n.t("departure"));
								trip='onward';
							}else if(source=="returnAirportDepartureTimeFilter"){
								displayVal = cmnArrivalEventLangRender(value, i18n.t("return"));
								trip='return';
							}else if(source=="airportArrivalTimeFilter"){
								displayVal = cmnArrivalEventLangRender(value, i18n.t("arrival"));
								trip='onward';
							}else if(source=="returnAirportArrivalTimeFilter"){
								displayVal = cmnArrivalEventLangRender(value, i18n.t("return"));
								trip='return';
							}else if(source=="onwardAirlineFilterFF"){
								displayVal = $(this).attr('data-aName');
								trip='onward';
							}else if(source=="returnAirlineFilterFF"){
								displayVal = $(this).attr('data-aName');
								trip='return';
							}else if(source=="airportStopOverFilterFF"){
								displayVal = i18n.t($(this).attr('data-aName'));
								trip='onward';
							}else if(source=="airportStopOverFilterFFR"){
								displayVal = i18n.t($(this).attr('data-aName'));
								trip='return';
							}else if(source=="nearByAirportFilterFF" || source =="nearByAirportFilterFFR"){
								displayVal = i18n.t($(this).attr('data-aName'));
								//trip='onward';
							}
							else{
								displayVal = value;
							}
							flightComboSerVar.filterUIArry.push({
								source:source,
								value:value,
								id:id,
								trip:trip,
								display:displayVal
							});

						}
					}else{
						if(source=="airportArrivalTimeFilter"){
						}
						removeValueFromArr(source,value,flightComboSerVar.filterUIArry);
					}

				
			});
			
			var s = $(this.filterSelector.ffpAllianceFF+','+this.filterSelector.ffpAllianceFFR);
			s.each(function(){
				var $this = $(this);
				var source = $this.attr('name');
				var value = $this.attr('data-AliName');
				var id = $this.attr('id');
				var displayVal = $this.attr('data-AliName');
				if($this.hasClass('active')){
						if(isFilterInArray(source,value,flightComboSerVar.filterUIArry)==true){
						flightComboSerVar.filterUIArry.push({
								source:source,
								value:value,
								id:id,
								display:displayVal
							});
						}
			   }
			else if(isFilterInArray(source,value,flightComboSerVar.filterUIArry)==false){
				removeValueFromArr(source,value,flightComboSerVar.filterUIArry);
				}
			
			});
			
			
			//flightComboSerVar.generateComboFilterUI(flightComboSerVar.filterUIArry,'fareComboFiltered');
			flightComboSerVar.generateComboFilterUI(flightComboSerVar.filterUIArry);
		},
		
		 resetOnwardPriceSliderOnLoad:function(){
			flightComboSerVar.onwPriceFilterMin = 0;
			flightComboSerVar.onwPriceFilterMax = 0;
			var priceList = flightComboSerVar.getNONFPriceList('onward');
			var min = 0;
			var max = 0;
			if(priceList.length>0){
				min = priceList[0];
				max = priceList[priceList.length -1];
			}
			$(this.filterSelector.onwardPriceFilter).val(min+';'+max);
			this.reRenderOnwardPrice(priceList);
		},
		resetReturnPriceSliderOnLoad:function(){
			flightComboSerVar.retPriceFilterMin = 0;
			flightComboSerVar.retPriceFilterMax = 0;
			var priceList = flightComboSerVar.getNONFPriceList('return');
			var min = 0;
			var max = 0;
			if(priceList.length>0){
				min = priceList[0];
				max = priceList[priceList.length -1];
			}
			$(this.filterSelector.returnPriceFilter).val(min+';'+max);
			this.reRenderReturnPrice(priceList);
		},
		getNONFPriceList: function (tripType) { //produce [lowest_price,lowest_price...]
            var pList = [];
			var priceData ;
			if(tripType=='onward'){
			 priceData = flightComboSerVar.onwardBaseObj;
			}
			else{
			 priceData = flightComboSerVar.returnBaseObj;
			}
			for (i in priceData) {
				var priceObj = priceData[i].jsonFlightPrice;
				if (typeof priceObj !== 'undefined') {
					var totalFare = priceObj.up.totalFare;
					pList.push(Math.ceil(totalFare));
				}
			}
			if (pList.length > 0){
				for (var i = 0; i < pList.length; i++) {
					if (nn(pList[i], pList) == false) {
						pList.push(pList[i]);
					}
				}
			}
			pList.sort(function(a, b) {
				return a - b;
			});
            return pList;
        },
		
		filterByOnwardAirlineName:function(value){//Filter by Airline Name
		
			var i, j,item,array = this.onwardFilterData,reArray = [],holder,maps = this.hashmap;	
			for(i = 0, j = array.length; i<j; i++){
				var dPoint = false;
				item = array[i];
				for(e = 0; e<item.trips[0].length; e++){
					holder = item.trips[0][e].jsonSector[0].marAirlineCode;
					if(typeof holder !== "undefined" && cmnFindexofSearch(holder,value)==true){
						dPoint = true;
					}else{
						item.trips[0].splice(e, 1);
						e--;
					}
					var after = item.trips[0].length;
				}
				if(dPoint==true){
					reArray.push(item);
				}

			}
			this.onwardFilterData = reArray;
		},
		filterByReturnAirlineName:function(value){//Filter by Airline Name
			var i, j,item,array = this.returnFilterData,reArray = [],holder,maps = this.hashmap;	
			for(i = 0, j = array.length; i<j; i++){
				var dPoint = false;
				item = array[i];
				for(e = 0; e<item.trips[1].length; e++){
					holder = item.trips[1][e].jsonSector[0].marAirlineCode;
					if(typeof holder !== "undefined" && cmnFindexofSearch(holder,value)==true){
						dPoint = true;
					}else{
						item.trips[1].splice(e, 1);
						e--;
					}
					var after = item.trips[1].length;
				}
				if(dPoint==true){
					reArray.push(item);
				}

			}
			this.returnFilterData = reArray;
		},
		
		filterByOnwardAllianceName:function(value){//Filter by Alliance Name

			
			var selectedAllainces = value ; 
			var airlinesUnderAlliance = [];
			
		    if(jQuery.isEmptyObject(allianceAirlinesMap)){	
		    	
				for(i in ffp.en){
				//ffp.en[i].airlineCode;
				var airlinesSupported = [] ;
				for(j in ffp.en[i].ffpPrgms){
				airlinesSupported.push(ffp.en[i].ffpPrgms[j]);
				}
				allianceAirlinesMap[ffp.en[i].airlineCode] = airlinesSupported;
				}
			}
		   
			for(i in selectedAllainces){

				for(airline in allianceAirlinesMap[selectedAllainces[i]]){

					airlinesUnderAlliance.push(allianceAirlinesMap[selectedAllainces[i]][airline]);

				}
			}

			
				 // get Airline list
			/*  var airlineList = 	this.getAirlineList(this.functionNBASource()) ;
				
			for( i in airlineList){

			 airLineMap[airlineList[i][1][1]] = airlineList[i][1][1] ;

			} */

			var i, j,item,array = this.onwardFilterData,reArray = [],holder;	
			for(i = 0, j = array.length; i<j; i++){
				var dPoint = false;
				item = array[i];
				for(e = 0; e<item.trips[0].length; e++){
					holder =  item.trips[0][e].jsonSector[0].marAirlineCode;
					if(typeof holder !== "undefined" && cmnFindexofSearch(holder,airlinesUnderAlliance)==true){
						dPoint = true;
					}else{
						item.trips[0].splice(e, 1);
						e--;
					}
				   var after = item.trips[0].length;
				}
				if(dPoint==true){
					reArray.push(item);
				}
				
			}
			
			this.onwardFilterData = reArray;
	        },
			filterByReturnAllianceName:function(value){//Filter by Alliance Name

			
			var selectedAllainces = value ; 
			var airlinesUnderAlliance = [];
			
		    if(jQuery.isEmptyObject(allianceAirlinesMap)){	
		    	
				for(i in ffp.en){
				//ffp.en[i].airlineCode;
				var airlinesSupported = [] ;
				for(j in ffp.en[i].ffpPrgms){
				airlinesSupported.push(ffp.en[i].ffpPrgms[j]);
				}
				allianceAirlinesMap[ffp.en[i].airlineCode] = airlinesSupported;
				}
			}
		   
			for(i in selectedAllainces){

				for(airline in allianceAirlinesMap[selectedAllainces[i]]){

					airlinesUnderAlliance.push(allianceAirlinesMap[selectedAllainces[i]][airline]);

				}
			}


			var i, j,item,array = this.returnFilterData,reArray = [],holder;	
			for(i = 0, j = array.length; i<j; i++){
				var dPoint = false;
				item = array[i];
				for(e = 0; e<item.trips[1].length; e++){
					holder =  item.trips[1][e].jsonSector[0].marAirlineCode;
					if(typeof holder !== "undefined" && cmnFindexofSearch(holder,airlinesUnderAlliance)==true){
						dPoint = true;
					}else{
						item.trips[1].splice(e, 1);
						e--;
					}
				   var after = item.trips[1].length;
				}
				if(dPoint==true){
					reArray.push(item);
				}
				
			}
			
			this.returnFilterData = reArray;
	        },
		
		/**
		*@description Method to process the final execution taking the base object
		*@params Boolean
		*@return Boolean
		*/
		render: function(priceRender,callback) {
			var $t = this;
			/**
			 * Remove record when fair res fails time
			 */
			if(priceRender !=="removeRecord"){
				//get the base object which we got from the search response
				var onwardBase = JSON.stringify($t.baseData.pricedItinerarysOnward);
				//Set the base object to flightSerVar to process the filtration request.
				$t.onwardFilterData = JSON.parse(onwardBase);
				
				var returnBase = JSON.stringify($t.baseData.pricedItinerarysReturn);
				//Set the base object to flightSerVar to process the filtration request.
				$t.returnFilterData = JSON.parse(returnBase);
			}
			
			/*
			 *initialize global scope for the filters
			 */
			var $onwardAirlinename = [];
			var $returnAirlinename = [];
			var $ffpname = [];
			var $onwardStops = [];
			var $returnStops = [];
			var $airportStopover = [];
			var $returnAirportStopover = [];
			var $nearByAirport = [];
			var $airlineDepartureEvent = [];
			var $airlineArrivalEvent = [];
			var $ReturnTripAirlineDepartureEvent = [];
			var $ReturnTripAirlineArrivalEvent = [];
			var $sortPrice = '';
			var $onwardSortPrice = '';
			var $returnSortPrice = '';
			
			var $minMaxPrice = [];
		
			async.series([
				function(callback){
					//Onward Airline name filter
					$onwardAirlinename = $t.getFilteredOnwardAirlineName();
					//Onward Airline name filter
					$returnAirlinename = $t.getFilteredReturnAirlineName();
					// FFP  alliance filter
					$ffpOnwAllianceName = $t.getFilteredOnwardAllianceName();
					
					$ffpRetAllianceName = $t.getFilteredReturnAllianceName();
					//Stops filter
					$onwardStops = $t.getFilteredOnwardStops();
					//$returnStops = $t.getFilteredReturnStops();
					//Airport Stopover filter
					$airportStopover = $t.getFilteredAirportStopOver();
					//Return Airport Stopover filter
					$returnAirportStopover = $t.getFilteredReturnAirportStopOver();
					//Near By Airport filter
					$nearByAirport = $t.getFilteredNearby();
					//Departure Event filter
					$airlineDepartureEvent = $t.getFilteredDepartureEvent();
					//Arrival Event filter
					$airlineArrivalEvent = $t.getFilteredArrivalEvent();
					//ReturnTrip Departure Event filter
					$ReturnTripAirlineDepartureEvent = $t.getFilteredReturnTripDepartureEvent();
					//ReturnTrip Arrival Event filter
					$ReturnTripAirlineArrivalEvent = $t.getFilteredReturnTripArrivalEvent();
					
					//Sort by onw price
					$onwardSortPrice = 'asc';
					//Sort by ret price
					$returnSortPrice = 'asc';
					
					
									
					//Min/Max Price filter
					$minMaxOnwardPrice = $t.getFilteredOnwardPrice();
					$minMaxReturnPrice = $t.getFilteredReturnPrice();
					
					
					return callback();
				},
				function(callback){
					if($t.getArrivalCodeFromURL()!=""){
						$nearByAirport.push($t.getArrivalCodeFromURL());
					}
					if($onwardAirlinename.length>0){
						$t.filterByOnwardAirlineName($onwardAirlinename);
					}
					if($returnAirlinename.length>0){
						$t.filterByReturnAirlineName($returnAirlinename);
					}
					/*if($ffpAllianceName.length>0){
						$t.filterByAllianceName($ffpAllianceName);
					}*/
					if($ffpOnwAllianceName.length>0){
						$t.filterByOnwardAllianceName($ffpOnwAllianceName);
					}
					if($ffpRetAllianceName.length>0){
						$t.filterByReturnAllianceName($ffpRetAllianceName);
					}
					if($onwardStops.length>0){
						//$t.filterByOnwardStops($onwardStops);
						$t.filterByOnwardStops($onwardStops);
						$t.filterByReturnStops($onwardStops);

					}
					/*if($returnStops.length>0){
						$t.filterByReturnStops($returnStops);
					}*/
					if($airportStopover.length>0){
						$t.filterByAirportStopOver($airportStopover);
					}
					if($returnAirportStopover.length>0){
						$t.filterByAirportReturnStopOver($returnAirportStopover);
					}

					if($nearByAirport.length>0){
						$t.filterNearByAirport($nearByAirport);
					}
					if($airlineDepartureEvent.length>0){
						$t.filterByDepartureEvent($airlineDepartureEvent);
					}
					if($airlineArrivalEvent.length>0){
						$t.filterByArrivalEvent($airlineArrivalEvent);
					}
					if($ReturnTripAirlineDepartureEvent.length>0){
						$t.filterByReturnTripDepartureEvent($ReturnTripAirlineDepartureEvent);
					}
					if($ReturnTripAirlineArrivalEvent.length>0){
						$t.filterByReturnTripArrivalEvent($ReturnTripAirlineArrivalEvent);
					}
					if($onwardSortPrice){
						$t.sortByOnwardPrice($onwardSortPrice);
					}else{
					$t.sortByOnwardPrice('asc');
					}
					if($returnSortPrice){
						$t.sortByReturnPrice($returnSortPrice);
					}else{
					$t.sortByReturnPrice('asc');
					}
					if($minMaxOnwardPrice!=""){
						$t.filterByOnwardPrice($minMaxOnwardPrice);
					}
					if($minMaxReturnPrice!=""){
						$t.filterByReturnPrice($minMaxReturnPrice);
					}
					 return callback();
				}
				],function(){			
				
			 		
					var renderedData = {};
					renderedData.onwardRenderedData = JSON.parse(JSON.stringify($t.onwardFilterData));
					renderedData.returnRenderedData = JSON.parse(JSON.stringify($t.returnFilterData));
					if(typeof callback==='function') return callback(renderedData);
					 
					/*$t.UIFilterSelected();
					$t.updateFilghtCount();*/
					
					// this flow for curr change & 
				var onwPrices=[],retPrices=[]
				/*for(var onw of $t.onwardFilterData){
					onwPrices.push(onw.jsonFlightPrice.up.totalFare);
				}
				*/
					var onwardTrips=[],returnTrips=[];

             async.series([
				function(callback){
					for(var x in renderedData.onwardRenderedData){
						var onwardRes = renderedData.onwardRenderedData[x];
						 for(var y in onwardRes.trips[0]){
							 var onwTrip = {};
							 var trip = onwardRes.trips[0][y];
							 onwTrip.index=onwardRes.index;
							// onwTrip.legIndex=trip.legIndex;							 
							 onwTrip.totalFare=onwardRes.jsonFlightPrice.up.totalFare;		
                             onwTrip.trip=trip;		
                             onwTrip.uc=onwardRes.jsonFlightPrice.up.uc;
                            onwardTrips.push(onwTrip);							 
						 }
						
					 }
					 for(var x in renderedData.returnRenderedData){
						 var returnRes = renderedData.returnRenderedData[x];
						 for(var y in returnRes.trips[1]){
							 var retTrip = {};
							 var trip = returnRes.trips[1][y];
							 retTrip.index=returnRes.index;
							// retTrip.legIndex=trip.legIndex;							 
							 retTrip.totalFare=returnRes.jsonFlightPrice.up.totalFare;		
                             retTrip.trip=trip;				
                             retTrip.uc=returnRes.jsonFlightPrice.up.uc;
                            returnTrips.push(retTrip);							 
						 }
						
					 }
					 return callback();
				},
				function(callback){
					
						
					var data = {
						onwardTrips:onwardTrips,
						returnTrips:returnTrips,
						maps:$t.hashmap,
						uuid:$t.uuid,
						headerInfo:$t.headerInfo,
						uc:$t.setSelectedCurrency || 'SAR',
						lang: i18n.options.lng
					}
					
					loadTemplate('fareCombination-onward-result-list',data,$('#onwardFF'),$t.dynamicTemplate);
					loadTemplate('fareCombination-return-result-list',data,$('#returnFF'),$t.dynamicTemplate);

					$('#onwTripsLength').html(onwardTrips.length);
					$('#retTripsLength').html(returnTrips.length);
					
					if(onwardTrips.length<1 && priceRender =="removeRecord"){
						$t.selectedFlightCombination.onwardTrip = null;
						$t.selectedFlightCombination.onwardTripObj = null;
						$('#selectedOnward').empty();
						$('#selectedOnwFInfo').empty();
					}
					if(returnTrips.length<1 && priceRender =="removeRecord"){
						$t.selectedFlightCombination.returnTrip = null;
						$t.selectedFlightCombination.returnTripObj = null;
						$('#selectedReturn').empty();
						$('#selectedRetFInfo').empty();
					}
					
					if(/*priceRender =="removeRecord" &&*/ $t.onwardFilterData[0] && $t.returnFilterData[0]){
					$t.selectedFlightCombination.onwardTrip = $t.onwardFilterData[0].trips[0][0];
				    $t.selectedFlightCombination.onwardTripObj = $t.onwardFilterData[0];
					$t.selectedFlightCombination.returnTrip = $t.returnFilterData[0].trips[1][0];
				    $t.selectedFlightCombination.returnTripObj = $t.returnFilterData[0];
					}
					
					var onwFare = 0 , retFare=0,totalFare=0;
					
					if($t.selectedFlightCombination.onwardTripObj){
						onwFare = $t.selectedFlightCombination.onwardTripObj.jsonFlightPrice.up.totalFare ;
					}
					if($t.selectedFlightCombination.returnTripObj){
						retFare = $t.selectedFlightCombination.returnTripObj.jsonFlightPrice.up.totalFare ;
					}
					
					totalFare = (parseFloat(onwFare) + parseFloat(retFare)).toFixed(2) ;
										
					var selectedTripData = {
						onwardTrip:$t.selectedFlightCombination.onwardTrip,
						returnTrip:$t.selectedFlightCombination.returnTrip,
						maps:$t.hashmap,
						uuid:$t.uuid,
						headerInfo:$t.headerInfo,
						totalFare:totalFare,
				        uc:$t.setSelectedCurrency,
						pax:$t.baseData.searchCriteria.guest,
						lang: i18n.options.lng
						
					}
					
					//flight by flight
					loadTemplate('fareCombination-selected-onward',selectedTripData,$('#selectedOnward'),$t.dynamicTemplate);
					loadTemplate('fareCombination-selected-return',selectedTripData,$('#selectedReturn'),$t.dynamicTemplate);
					loadTemplate('fareCombination-selected-price',selectedTripData,$('.price-details'),$t.dynamicTemplate);
					loadTemplate('fareCombination-selected-onwFlightInfo',selectedTripData,$('#selectedOnwFInfo'),$t.dynamicTemplate);
					loadTemplate('fareCombination-selected-retFlightInfo',selectedTripData,$('#selectedRetFInfo'),$t.dynamicTemplate);
					
                    /*loadTemplate('flight-filter-view-fareCombo',$t.dynamicFilterdata,$('#filterFF'),$t.dynamicTemplate);*/
					
					if(priceRender){
					$t.resetOnwardPriceSlider($t.onwardFilterData);
					$t.resetReturnPriceSlider($t.returnFilterData);
					}
					
					$t.UIFilterSelected();
					/*$t.onwardFilterLogic();
					$t.returnFilterLogic();*/
					
					 _langGlobal.langInit(); // initialise i18n
					 pricetagConvert.init();

					return callback();
				  }
			     ]);
				 

					
					
					
				});
		},
		/**
		*@description Method to process the final execution taking the base object
		*@params Boolean
		*@return Boolean
		*/
		onwardRender: function(priceRender,callback) {
			var $t = this;
			/**
			 * Remove record when fair res fails time
			 */
			if(priceRender !=="removeRecord"){
				//get the base object which we got from the search response
				var onwardBase = JSON.stringify($t.baseData.pricedItinerarysOnward);
				//Set the base object to flightSerVar to process the filtration request.
				$t.onwardFilterData = JSON.parse(onwardBase);
			}
			
			
			
			/*
			 *initialize global scope for the filters
			 */
			var $onwardAirlinename = [];
			var $onwardStops = [];
			var $airportStopover = [];
			var $nearByAirport = [];
			var $airlineDepartureEvent = [];
			var $airlineArrivalEvent = [];
			var $onwardSortPrice = '';
			var $onwardSortDepart = '';			
			var $minMaxPrice = [];
			
			 var onwardTrips=[],returnTrips=[];
		
			
			async.series([
				function(callback){
					//Onward Airline name filter
					$onwardAirlinename = $t.getFilteredOnwardAirlineName();
					// FFP  alliance filter
					$ffpOnwAllianceName = $t.getFilteredOnwardAllianceName();
					//Stops filter
					$onwardStops = $t.getFilteredOnwardStops();
					//Airport Stopover filter
					$airportStopover = $t.getFilteredAirportStopOver();
					//Near By Airport filter
					$nearByAirport = $t.getOnwardFilteredNearby();
					//Departure Event filter
					$airlineDepartureEvent = $t.getFilteredDepartureEvent();
					//Arrival Event filter
					$airlineArrivalEvent = $t.getFilteredArrivalEvent();
					
					//Sort by onw price
					$onwardSortPrice = $t.getOnwardPriceSortVal();
					//Sort by onw price
					$onwardSortDepart = $t.getOnwardDepartSortVal();
					
					
									
					//Min/Max Price filter
					$minMaxOnwardPrice = $t.getFilteredOnwardPrice();
					
					
					return callback();
				},
				function(callback){
					if($t.getOnwardArrivalCodeFromURL()!=""){
						$nearByAirport.push($t.getOnwardArrivalCodeFromURL());
					}
					if($onwardAirlinename.length>0){
						$t.filterByOnwardAirlineName($onwardAirlinename);
					}
					if($ffpOnwAllianceName.length>0){
						$t.filterByOnwardAllianceName($ffpOnwAllianceName);
					}
					if($onwardStops.length>0){
						$t.filterByOnwardStops($onwardStops);
					}
					if($airportStopover.length>0){
						$t.filterByAirportStopOver($airportStopover);
					}
					if($nearByAirport.length>0){
						$t.filterOnwardNearByAirport($nearByAirport);
					}
					if($airlineDepartureEvent.length>0){
						$t.filterByDepartureEvent($airlineDepartureEvent);
					}
					if($airlineArrivalEvent.length>0){
						$t.filterByArrivalEvent($airlineArrivalEvent);
					}
					/*if($onwardSortPrice){
						
						$t.sortByOnwardPrice($onwardSortPrice);
					}else{
						$t.sortByOnwardPrice('asc');
					}
					if($onwardSortDepart){
						$t.sortByOnwardDepart($onwardSortDepart);
					}*/
					
							
					
					if($minMaxOnwardPrice!=""){
						$t.filterByOnwardPrice($minMaxOnwardPrice);
					}
					 return callback();
				},
				function(callback){
					/*for(var i  in $t.onwardFilterData){
						var onwardRes = $t.onwardFilterData[i];
						 for(var j in onwardRes.trips[0]){
							 var onwTrip = {};
							 var trip = onwardRes.trips[0][j];
							 onwTrip.index=onwardRes.index;
							// onwTrip.legIndex=trip.legIndex;							 
							 onwTrip.totalFare=onwardRes.jsonFlightPrice.up.totalFare;		
                             onwTrip.trip=trip;		
                            onwardTrips.push(onwTrip);							 
						 }
						
					 }*/
					 if($onwardSortPrice){
						$t.sortByOnwardPrice($onwardSortPrice);
					}else{
						$t.sortByOnwardPrice('asc');
					}
					/*if($onwardSortDepart){
						$t.sortByOnwardDepart($onwardSortDepart);
					}*/
					 
					 return callback();
				}
				],function(){			
					//$t.onwardTrips = onwardTrips;  //initiated in the sort functionalities
					onwardTrips = $t.onwardTrips   //initiated in the sort functionalities
					
					var renderedData = {};
					renderedData.onwardRenderedData = JSON.parse(JSON.stringify($t.onwardFilterData));
					if(typeof callback==='function') return callback(renderedData,onwardTrips);
					// Refactor
					if(priceRender){
						//$t.resetPriceSlider($t.filterData);
						$t.resetOnwardPriceSlider($t.onwardFilterData);
					} 
					$t.UIFilterSelected();
					$t.updateFilghtCount();
					//$t.onwardFilterLogic();
					
					
					var onwTrips = JSON.parse(JSON.stringify(onwardTrips));
					
					paginationOptInitFF = cmnPaginationConfig(flightComboSerVar.pageselectCallback);
					$("#pagination").pagination(onwardTrips.length, paginationOptInitFF,onwTrips );
					
					var data = {
						onwardTrips:onwardTrips,
						returnTrips:returnTrips,
						maps:flightComboSerVar.hashmap,
						uuid:flightComboSerVar.uuid,
						headerInfo:flightComboSerVar.headerInfo,
				        uc:$t.setSelectedCurrency || 'SAR',
						lang: i18n.options.lng
					};
					
					//loadTemplate('fareCombination-onward-result-list',data,$('#onwardFF'),flightComboSerVar.dynamicTemplate);
					//$('#onwTripsLength').html(onwardTrips.length);
					
					if(onwardTrips.length<1 && priceRender =="removeRecord"){
						$t.selectedFlightCombination.onwardTrip = null;
						$t.selectedFlightCombination.onwardTripObj = null;
						$('#selectedOnward').empty();
						$('#selectedOnwFInfo').empty();
					}

				/*if($t.onwardFilterData[0]){

				$t.selectedFlightCombination.onwardTrip = $t.onwardFilterData[0].trips[0][0];
				$t.selectedFlightCombination.onwardTripObj = $t.onwardFilterData[0];
					
					var onwFare = 0 , retFare=0,totalFare=0;
					
					if($t.selectedFlightCombination.onwardTripObj){
						onwFare = $t.selectedFlightCombination.onwardTripObj.jsonFlightPrice.up.totalFare ;
					}
					if($t.selectedFlightCombination.returnTripObj){
						retFare = $t.selectedFlightCombination.returnTripObj.jsonFlightPrice.up.totalFare ;
					}
					
					totalFare = (parseFloat(onwFare) + parseFloat(retFare)).toFixed(2) ;
					var selectedTripData = {
									onwardTrip:$t.selectedFlightCombination.onwardTrip,
									returnTrip:$t.selectedFlightCombination.returnTrip,
									maps:$t.hashmap,
									uuid:$t.uuid,
									headerInfo:$t.headerInfo,
									totalFare:totalFare,
									uc:$t.setSelectedCurrency,
						            pax:$t.baseData.searchCriteria.guest,
									lang: i18n.options.lng
									
								}
					
					//flight by flight
					loadTemplate('fareCombination-selected-onward',selectedTripData,$('#selectedOnward'),$t.dynamicTemplate);
					loadTemplate('fareCombination-selected-price',selectedTripData,$('.price-details'),$t.dynamicTemplate);
					loadTemplate('fareCombination-selected-onwFlightInfo',selectedTripData,$('#selectedOnwFInfo'),$t.dynamicTemplate);
				  }*/
				  
				  _langGlobal.langInit(); // initialise i18n
				  pricetagConvert.init();
				  
				//	$t.scrollToTopResults();
		
				});
		},
		/**
		*@description Method to process the final execution taking the base object
		*@params Boolean
		*@return Boolean
		*/
		returnRender: function(priceRender,callback) {
			var $t = this;

			
			/**
			 * Remove record when fair res fails time
			 */
			if(priceRender !=="removeRecord"){
					
				var returnBase = JSON.stringify($t.baseData.pricedItinerarysReturn);
				//Set the base object to flightSerVar to process the filtration request.
				$t.returnFilterData = JSON.parse(returnBase);
			}
			
			for(var p=0; p<$t.returnFilterData.length; p++){
		    	for(var q=0; q<$t.returnFilterData[p].trips.length; q++){
		    		$t.returnFilterData[p].trips[q].sort(function (a, b) {	
		    			var a1 = formatDate(a.jsonSector[0].depDateAndTime,'mins');
		    			var b1 = formatDate(b.jsonSector[0].depDateAndTime,'mins');
		    			return a1 - b1;
		    		});	        	
		    	}
		    }
			/*
			 *initialize global scope for the filters
			 */
			var $returnAirlinename = [];
			var $returnStops = [];
			var $returnAirportStopover = [];
			var $nearByAirport = [];
			var $ReturnTripAirlineDepartureEvent = [];
			var $ReturnTripAirlineArrivalEvent = [];
			var $returnSortPrice = '';
			
			var $minMaxPrice = [];
			
			var onwardTrips=[],returnTrips=[];
		
			async.series([
				function(callback){
					//Onward Airline name filter
					$returnAirlinename = $t.getFilteredReturnAirlineName();
					
					$ffpRetAllianceName = $t.getFilteredReturnAllianceName();
					
					$returnStops = $t.getFilteredReturnStops();
					//Return Airport Stopover filter
					$returnAirportStopover = $t.getFilteredReturnAirportStopOver();
					//Near By Airport filter
					$nearByAirport = $t.getReturnFilteredNearby();
					//ReturnTrip Departure Event filter
					$ReturnTripAirlineDepartureEvent = $t.getFilteredReturnTripDepartureEvent();
					//ReturnTrip Arrival Event filter
					$ReturnTripAirlineArrivalEvent = $t.getFilteredReturnTripArrivalEvent();
					
					//Sort by ret price
					$returnSortPrice = $t.getReturnPriceSortVal();
					
					
									
					//Min/Max Price filter
					$minMaxReturnPrice = $t.getFilteredReturnPrice();
					
					
					return callback();
				},
				function(callback){
					if($t.getReturnArrivalCodeFromURL()!=""){
						$nearByAirport.push($t.getReturnArrivalCodeFromURL());
					}
					if($returnAirlinename.length>0){
						$t.filterByReturnAirlineName($returnAirlinename);
					}
					if($ffpRetAllianceName.length>0){
						$t.filterByReturnAllianceName($ffpRetAllianceName);
					}
					if($returnStops.length>0){
						$t.filterByReturnStops($returnStops);
					}
					if($returnAirportStopover.length>0){
						$t.filterByAirportReturnStopOver($returnAirportStopover);
					}
					if($nearByAirport.length>0){
						$t.filterReturnNearByAirport($nearByAirport);
					}
					if($ReturnTripAirlineDepartureEvent.length>0){
						$t.filterByReturnTripDepartureEvent($ReturnTripAirlineDepartureEvent);
					}
					if($ReturnTripAirlineArrivalEvent.length>0){
						$t.filterByReturnTripArrivalEvent($ReturnTripAirlineArrivalEvent);
					}
					/*if($returnSortPrice!=""){
						$t.sortByReturnPrice($returnSortPrice);
					}else{
					$t.sortByReturnPrice('asc');
					}*/
					
					if($minMaxReturnPrice!=""){
						$t.filterByReturnPrice($minMaxReturnPrice);
					}
					 return callback();
				},
				function(callback){					
					 if($returnSortPrice){
						$t.sortByReturnPrice($returnSortPrice);
					}else{
						$t.sortByReturnPrice('asc');
					}
					
					 
					 return callback();
				}
				],function(){			
					//$t.onwardTrips = onwardTrips;
					returnTrips = $t.returnTrips;	//initiated in the sort functionalities
					
					var renderedData = {};
					renderedData.returnRenderedData = JSON.parse(JSON.stringify($t.returnFilterData));
					if(typeof callback==='function') return callback(renderedData,returnTrips);
					// Refactor
					if(priceRender){						
						$t.resetReturnPriceSlider($t.orturnFilterData);
					} 
					$t.UIFilterSelected();
					$t.updateFilghtCount();
					//$t.returnFilterLogic();
					
					// Refactor
					//$("#pagination").pagination($t.filterData.length, paginationOptInit, $t.filterData);	
					
					
					/*var data = {
						onwardTrips:onwardTrips,
						returnTrips:returnTrips,
						maps:flightComboSerVar.hashmap,
						uuid:flightComboSerVar.uuid,
						headerInfo:flightComboSerVar.headerInfo,
				        uc:$t.setSelectedCurrency || 'SAR',
						lang: i18n.options.lng
					};
					
					loadTemplate('fareCombination-return-result-list',data,$('#returnFF'),flightComboSerVar.dynamicTemplate);
					
					$('#retTripsLength').html(returnTrips.length);*/
					
					var retTrips = JSON.parse(JSON.stringify(returnTrips));
					paginationOptInitFF = cmnPaginationConfig(flightComboSerVar.pageselectCallback);
					$("#pagination").pagination(returnTrips.length, paginationOptInitFF,retTrips );
					
					if(returnTrips.length<1 && priceRender =="removeRecord"){
						$t.selectedFlightCombination.returnTrip = null;
						$t.selectedFlightCombination.returnTripObj = null;
						$('#selectedReturn').empty();
						$('#selectedRetFInfo').empty();
					}
					
				/*if($t.returnFilterData[0]){	
				$t.selectedFlightCombination.returnTrip = $t.returnFilterData[0].trips[1][0];
				$t.selectedFlightCombination.returnTripObj = $t.returnFilterData[0];
					
					var onwFare = 0 , retFare=0,totalFare=0;
					
					if($t.selectedFlightCombination.onwardTripObj){
						onwFare = $t.selectedFlightCombination.onwardTripObj.jsonFlightPrice.up.totalFare ;
					}
					if($t.selectedFlightCombination.returnTripObj){
						retFare = $t.selectedFlightCombination.returnTripObj.jsonFlightPrice.up.totalFare ;
					}
					
					totalFare = (parseFloat(onwFare) + parseFloat(retFare)).toFixed(2) ;
					
					var selectedTripData = {
									onwardTrip:$t.selectedFlightCombination.onwardTrip,
									returnTrip:$t.selectedFlightCombination.returnTrip,
									maps:$t.hashmap,
									uuid:$t.uuid,
									headerInfo:$t.headerInfo,
									totalFare:totalFare,
									uc:$t.setSelectedCurrency,
				             		pax:$t.baseData.searchCriteria.guest,
									lang: i18n.options.lng
				 					
								}
					
					//flight by flight
					loadTemplate('fareCombination-selected-return',selectedTripData,$('#selectedReturn'),$t.dynamicTemplate);
					loadTemplate('fareCombination-selected-retFlightInfo',selectedTripData,$('#selectedRetFInfo'),$t.dynamicTemplate);
					loadTemplate('fareCombination-selected-price',selectedTripData,$('.price-details'),$t.dynamicTemplate);
				 }	*/
				 
				  _langGlobal.langInit(); // initialise i18n
				  pricetagConvert.init();
				  
					//$t.scrollToTopResults();

					
				});
		},
		
		getOnwFLKey:[],
		findOnwFLKey:function(elm){
			this.getOnwFLKey = elm;
		},
		
		onwardFilterLogic:function(){
			var CNBA = false;
			var $t = this;
			var key = $t.getOnwFLKey;
			var //getPriceList,
				airlineNameWithPrice,
				stopOverAirport,
				filterbyEventDeparture,
				filterbyEventArrival,
				stopsList;
				
			async.parallel([
				function(callback){					
					//Get Airline name with price for filter element
					airlineNameWithPrice = flightComboSerVar.getAirlineList(flightComboSerVar.functionOnwardNBASource(),'onward');
					return callback();
				},
				function(callback){
					//Get stopover airport name
					stopOverAirport = $t.getStopOverAirportFL('onward');
					return callback();
				},
				function(callback){					
					//Get Filter by event departure & arrival object
					var FBE = $t.getDAEventFL($t.onwardFilterData);
					filterbyEventDeparture = FBE[0];
					filterbyEventArrival = FBE[1];
					return callback();
				},
				/*function(callback){					
					stopsList = $t.getStopsList();
					return callback();
				},*/
				function(callback){					
					//Airline name with price for Scroll Grid
					airlineNameForGrid = JSON.parse(JSON.stringify(airlineNameWithPrice));	
					return callback();
				}				
			],function(err){				
				//Airline name filter
				$airlinename = $t.getFilteredOnwardAirlineName();
				//Stops filter
				$stops = $t.getFilteredOnwardStops();
				//Airport Stopover filter
				$airportStopover = $t.getFilteredAirportStopOver();
				//Departure Event filter
				$airlineDepartureEvent = $t.getFilteredDepartureEvent();
				//Arrival Event filter
				$airlineArrivalEvent = $t.getFilteredArrivalEvent();
				//check price slider key
				var $priceFL = false;
				if(key.length>0){
					if(key.attr('name')=='stopsFilterFF'){
						$t.getFlightAirlineFL(airlineNameWithPrice,false,'onward');
						$t.getStopOverFL(stopOverAirport,false,'onward');
						$t.getEventDepartureFL(filterbyEventDeparture,false,'onward');
						$t.getEventArrivalFL(filterbyEventArrival,false,'onward');
						$priceFL = false;
					}
					if(key.attr('name')=='onwardAirlineFilterFF'){
						//$t.getStopsFL(stopsList,false,'onward');
						$t.getStopOverFL(stopOverAirport,false,'onward');
						$t.getEventDepartureFL(filterbyEventDeparture,false,'onward');
						$t.getEventArrivalFL(filterbyEventArrival,false,'onward');
						$priceFL = false;
					}
					if(key.attr('name')=='airportStopOverFilterFF'){
						//$t.getStopsFL(stopsList,false,'onward');
						$t.getFlightAirlineFL(airlineNameWithPrice,false,'onward');
						$t.getEventDepartureFL(filterbyEventDeparture,false,'onward');
						$t.getEventArrivalFL(filterbyEventArrival,false,'onward');
						$priceFL = false;
					}
					if(key.attr('name')=='airportDepartureTimeFilter'){
						//$t.getStopsFL(stopsList,false,'onward');
						$t.getFlightAirlineFL(airlineNameWithPrice,false,'onward');
						$t.getStopOverFL(stopOverAirport,false,'onward');
						$t.getEventArrivalFL(filterbyEventArrival,false,'onward');
						$priceFL = false;
					}
					if(key.attr('name')=='airportArrivalTimeFilter'){
						//$t.getStopsFL(stopsList,false,'onward');
						$t.getFlightAirlineFL(airlineNameWithPrice,false,'onward');
						$t.getStopOverFL(stopOverAirport,false,'onward');
						$t.getEventDepartureFL(filterbyEventDeparture,false,'onward');
						$priceFL = false;
					}
					/*if(key.attr('name')=='flightPriceFilerElm'){
						$t.getStopsFL(stopsList,false,'onward');
						$t.getFlightAirlineFL(airlineNameWithPrice,false,'onward');
						$t.getStopOverFL(stopOverAirport,false,'onward');
						$t.getEventDepartureFL(filterbyEventDeparture,false,'onward');
						$t.getEventArrivalFL(filterbyEventArrival,false,'onward');
						$priceFL = true;
					}*/
					if($airlinename.length==0 && $stops.length==0 && $airportStopover.length==0 && $airlineDepartureEvent.length==0 && $airlineArrivalEvent.length==0){
						if($priceFL==false){
							//$t.getStopsFL([],true,'onward');
							$t.getStopOverFL([],true,'onward');
							$t.getFlightAirlineFL([],true,'onward');
							$t.getEventDepartureFL([],true,'onward');
							$t.getEventArrivalFL([],true,'onward');						
						}
					}
				}
			});
			
		},
		
		getRetFLKey:[],
		findRetFLKey:function(elm){
			this.getRetFLKey = elm;
		},
		returnFilterLogic:function(){
			var CNBA = false;
			var $t = this;
			var key = $t.getRetFLKey;
			var //getPriceList,
				airlineNameWithPrice,
				stopOverAirport,
				filterbyEventDeparture,
				filterbyEventArrival,
				stopsList;
				
			async.parallel([
				function(callback){					
					//Get Airline name with price for filter element
					airlineNameWithPrice = flightComboSerVar.getAirlineList(flightComboSerVar.functionReturnNBASource(),'return');
					return callback();
				},
				function(callback){
					//Get stopover airport name
				 	stopOverAirport = $t.getStopOverAirportFL('return');
					return callback();
				},
				function(callback){					
					//Get Filter by event departure & arrival object
					var FBE = $t.getDAEventFL($t.returnFilterData);
					filterbyEventDeparture = FBE[0];
					filterbyEventArrival = FBE[1];
					return callback();
				},
				/*function(callback){					
					stopsList = $t.getStopsList();
					return callback();
				},*/
				function(callback){					
					//Airline name with price for Scroll Grid
					airlineNameForGrid = JSON.parse(JSON.stringify(airlineNameWithPrice));	
					return callback();
				}				
			],function(err){				
				//Airline name filter
				$airlinename = $t.getFilteredReturnAirlineName();
				//Stops filter
				$stops = $t.getFilteredOnwardStops();
				//Airport Stopover filter
				$airportStopover = $t.getFilteredReturnAirportStopOver();
				//Departure Event filter
				$airlineDepartureEvent = $t.getFilteredReturnTripDepartureEvent();
				//Arrival Event filter
				$airlineArrivalEvent = $t.getFilteredReturnTripArrivalEvent();
				//check price slider key
				var $priceFL = false;
				if(key.length>0){
					if(key.attr('name')=='stopsFilterFF'){
						$t.getFlightAirlineFL(airlineNameWithPrice,false,'return');
						$t.getStopOverFL(stopOverAirport,false,'return');
						$t.getEventDepartureFL(filterbyEventDeparture,false,'return');
						$t.getEventArrivalFL(filterbyEventArrival,false,'return');
						$priceFL = false;
					}
					if(key.attr('name')=='returnAirlineFilterFF'){
						//$t.getStopsFL(stopsList,false,'return');
						$t.getStopOverFL(stopOverAirport,false,'return');
						$t.getEventDepartureFL(filterbyEventDeparture,false,'return');
						$t.getEventArrivalFL(filterbyEventArrival,false,'return');
						$priceFL = false;
					}
					if(key.attr('name')=='airportStopOverFilterFFR'){
						//$t.getStopsFL(stopsList,false,'return');
						$t.getFlightAirlineFL(airlineNameWithPrice,false,'return');
						$t.getEventDepartureFL(filterbyEventDeparture,false,'return');
						$t.getEventArrivalFL(filterbyEventArrival,false,'return');
						$priceFL = false;
					}
					if(key.attr('name')=='returnAirportDepartureTimeFilter'){
						//$t.getStopsFL(stopsList,false,'return');
						$t.getFlightAirlineFL(airlineNameWithPrice,false,'return');
						$t.getStopOverFL(stopOverAirport,false,'return');
						$t.getEventArrivalFL(filterbyEventArrival,false,'return');
						$priceFL = false;
					}
					if(key.attr('name')=='returnAirportArrivalTimeFilter'){
						//$t.getStopsFL(stopsList,false,'return');
						$t.getFlightAirlineFL(airlineNameWithPrice,false,'return');
						$t.getStopOverFL(stopOverAirport,false,'return');
						$t.getEventDepartureFL(filterbyEventDeparture,false,'return');
						$priceFL = false;
					}
					/*if(key.attr('name')=='flightPriceFilerElm'){
						$t.getStopsFL(stopsList,false,'return');
						$t.getFlightAirlineFL(airlineNameWithPrice,false,'return');
						$t.getStopOverFL(stopOverAirport,false,'return');
						$t.getEventDepartureFL(filterbyEventDeparture,false,'return');
						$t.getEventArrivalFL(filterbyEventArrival,false,'return');
						$priceFL = true;
					}*/
					if($airlinename.length==0 && $stops.length==0 && $airportStopover.length==0 && $airlineDepartureEvent.length==0 && $airlineArrivalEvent.length==0){
						if($priceFL==false){
							//$t.getStopsFL([],true,'return');
							$t.getStopOverFL([],true,'return');
							$t.getFlightAirlineFL([],true,'return');
							$t.getEventDepartureFL([],true,'return');
							$t.getEventArrivalFL([],true,'return');					
						}
					}
				}
			});
			
		},
		getStopOverAirportFL:function(tripType){
			var dataArray ;
			if(tripType=='onward'){
			 dataArray = this.onwardFilterData;
			}else if(tripType=='return'){
				dataArray = this.returnFilterData;
			}
			var dummySO = [];			
			var stopOverAirport = []; 
			var getNearByAirport = this.functionNBASource();
			var value = [];
			var maps = this.hashmap;
			if(getNearByAirport.length>0){
				value = getNearByAirport;
			}
            if(dataArray.length > 0){
				for(i in dataArray){
					var trip1 =  [];
					if(tripType=='onward'){
					 trip1 = dataArray[i].trips[0] || [];
					}else if(tripType=='return'){
					 trip1 = dataArray[i].trips[1] || [];
					}
					for(var e=0; e<trip1.length; e++){
						for(var f=0; f<trip1[e].jsonSector.length -1; f++){
							//$.trim(maps.airportName[sector.arrAirportCode][lang]);
							var stopOverAName = $.trim(maps.airportName[trip1[e].jsonSector[f].arrAirportCode][lang]);
							var stopOverACode = $.trim(trip1[e].jsonSector[f].arrAirportCode);
							if(value.length>0){
								if(cmnFindexofSearch(trip1[e].arrAirportCode,value)==true){
									if(nn(maps.airportName[trip1[e].jsonSector[f].arrAirportCode][lang], dummySO)===false){
										dummySO.push(maps.airportName[trip1[e].jsonSector[f].arrAirportCode][lang]);
										stopOverAirport.push([stopOverAName, stopOverACode]);
									}
								}
							}else{
								if(nn(maps.airportName[trip1[e].jsonSector[f].arrAirportCode][lang], dummySO)===false){
									dummySO.push(maps.airportName[trip1[e].jsonSector[f].arrAirportCode][lang]);
									stopOverAirport.push([stopOverAName, stopOverACode]);
								}
							}							
							if(typeof trip1[e].stopOverAirportName!="undefined" && typeof trip1[e].stopOverAirportCode!="undefined"){
								trip1[e].stopOverAirportName.push(stopOverAName);
								trip1[e].stopOverAirportName.push(stopOverACode);
							}else{
								trip1[e].stopOverAirportName =  [];
								trip1[e].stopOverAirportCode =  [];
								trip1[e].stopOverAirportName.push(stopOverAName);
								trip1[e].stopOverAirportCode.push(stopOverACode);
							}
						}
					} 
					
				}
            }
			return stopOverAirport;
        },
		
		getDAEventFL:function(object,tripType){
			var FBEDepartureObjArray = [], FBED = [];
			var FBEArrivalObjArray = [], FBEA = [];			
			if (object.length > 0) {
				for (i in object) {
					var baseFromSec = object[i].trips[0] || [];
					if(tripType=='return'){
						baseFromSec = object[i].trips[1] || [];
					}
					for(var e=0; e<baseFromSec.length; e++){
						var departureLeg = baseFromSec[e].jsonSector[0];
						var arrivalLeg = baseFromSec[e].jsonSector[baseFromSec[e].jsonSector.length -1];
						var departureEventTime = formatDate(departureLeg.depDateAndTime,'events');
						var arrivalEventTime = formatDate(arrivalLeg.arrDateAndTime,'events');
						//Set Departure Time
						if(nn(departureEventTime,FBEDepartureObjArray)===false){
							FBED[departureEventTime] = [cmnDAEventLocalization(departureEventTime)];
							FBEDepartureObjArray.push(departureEventTime);
						}
						//Set Arrival Time
						if(nn(arrivalEventTime,FBEArrivalObjArray)===false){
							FBEA[arrivalEventTime] = [cmnDAEventLocalization(arrivalEventTime)];
							FBEArrivalObjArray.push(arrivalEventTime);
						}
					}
				}
			}
			return [FBEDepartureObjArray,FBEArrivalObjArray];
        },
		
		getFlightAirlineFL:function(airlineNameWithPrice,reset,tripType,callback){
			var subD = [];
			var target ;
			if(tripType=='onward'){
			 target = $('#airlineName-filter-list_FF input[type=checkbox]');
			}else if(tripType=='return'){
			  target = $('#airlineName-filter-list_FFR input[type=checkbox]');	
			}
			for(var i in airlineNameWithPrice){
				var keyCodeObject = '_aTag-'+airlineNameWithPrice[i][1][1];	
				subD.push(keyCodeObject);
			}
			target.each(function(){
				$(this).prop('disabled',false);
			});
			if(reset===false){
				target.each(function(){
					var t = $(this);
					var a = subD.indexOf(t.attr('attr-airlinecode'));
					if(a<0){
						t.prop('disabled',true);
					}
				});
			}
			if(typeof callback!="undefined"){
				return callback();
			}
		},
		getStopOverFL:function(stopOverAirport,reset,tripType,callback){

			var subD = [];
			var target ;
			if(tripType=='onward'){
			 target = $('#_stopOverAirport-filter-list_FF input[type=checkbox]');
			}else if(tripType=='return'){
				 target = $('#_stopOverAirport-filter-list_FFR input[type=checkbox]');
			}
			for(var i in stopOverAirport){
				var keyCodeObject = stopOverAirport[i][1];	
				subD.push(keyCodeObject);
			}
			target.each(function(){
				$(this).prop('disabled',false);
			});
			if(reset===false){
				target.each(function(){
					var t = $(this);
					var a = subD.indexOf(t.val());
					if(a<0){
						t.prop('disabled',true);
					}
				});
			}
			if(typeof callback!="undefined"){
				return callback();
			}
		},
		getEventDepartureFL:function(filterbyEventDeparture,reset,tripType,callback){
			var subD = [];
			var target ;
			 if(tripType=='onward'){
			 target = $('#_depature_time_filter_FF input[type=checkbox]');
			 }else if(tripType=='return'){
				target = $('#_depature_time_filter_FFR input[type=checkbox]'); 
			 }
			for(var i in filterbyEventDeparture){
				var keyCodeObject = filterbyEventDeparture[i];	
				subD.push(keyCodeObject);
			}
			target.each(function(){
				$(this).prop('disabled',false);
			});
			if(reset===false){
				target.each(function(){
					var t = $(this);
					var a = subD.indexOf(t.val()); 
					if(a<0){
						t.prop('disabled',true);
					}
				});
			}
			if(typeof callback!="undefined"){
				return callback();
			}
		},
		getEventArrivalFL:function(filterbyEventArrival,reset,tripType,callback){
			var subD = [];
			var target = $('#_arrival_time_filter input[type=checkbox]');
			if(tripType=='onward'){
			 target = $('#_arrival_time_filter_FF input[type=checkbox]');
			 }else if(tripType=='return'){
				target = $('#_arrival_time_filter_FFR input[type=checkbox]'); 
			 }
			for(var i in filterbyEventArrival){
				var keyCodeObject = filterbyEventArrival[i];	
				subD.push(keyCodeObject);
			}
			target.each(function(){
				$(this).prop('disabled',false);
			});
			if(reset===false){
				target.each(function(){
					var t = $(this);
					var a = subD.indexOf(t.val()); 
					if(a<0){
						t.prop('disabled',true);
					}
				});
			}
			if(typeof callback!="undefined"){
				return callback();
			}
		},
        getStopsFL:function(stopsList,reset,tripType,callback){
			var subD = [];
			var target ;
			if(tripType=='onward'){
			 target = $('#stops-filter-list_FF input[type=checkbox]');
			}else if(tripType=='return'){
			 target = $('#stops-filter-list_FFR input[type=checkbox]');
			}
			for(var i in stopsList){
				var keyCodeObject = stopsList[i].keyVal || '';
				if(keyCodeObject!=""){
					subD.push(keyCodeObject);					
				}
			}
			target.each(function(){
				$(this).prop('disabled',false);
			});
			if(reset===false){
				target.each(function(){
					var t = $(this);
					var a = subD.indexOf(parseInt(t.val())); 
					if(a<0){
						t.prop('disabled',true);
					}
				});
			}
			if(typeof callback!="undefined"){
				return callback();
			}
		},
		
		/**
		*@description Price Filter Function
		*@params Array (Price Filter Criteria [960,1250])
		*@return null
		*/
		filterByOnwardPrice: function(value){
			var min = value[0];
			var max = value[1];
			var i, item, array = this.onwardFilterData,
			reArray = [],
			holder;
			for (i in array) {
				item = array[i];
				holder = Math.ceil(array[i].jsonFlightPrice.up.totalFare);
				if (min != 0 && max != 0) {
					if (typeof holder !== "undefined" && cmnBetweenSearch(holder, min, max) === true) {
						reArray.push(item);
					}
				} else {
					reArray.push(item);
				}
			}
			this.onwardFilterData = reArray;
		},
		filterByReturnPrice: function(value){
			var min = value[0];
			var max = value[1];
			var i, item, array = this.returnFilterData,
			reArray = [],
			holder;
			for (i in array) {
				item = array[i];
				holder = Math.ceil(array[i].jsonFlightPrice.up.totalFare);
				if (min != 0 && max != 0) {
					if (typeof holder !== "undefined" && cmnBetweenSearch(holder, min, max) === true) {
						reArray.push(item);
					}
				} else {
					reArray.push(item);
				}
			}
			this.returnFilterData = reArray;
		},
		updateFilghtCount:function(){
			var count = this.getRecordCount();
			/*var elm = $('#flightResultsSortingPanel');
			if(!elm.find('._nof').is(':visible')){
				elm.find('._nof').show();
			}*/
			$('#_nofRecordFlight').html(count);
		},
		getRecordCount:function(){
			var d, record = 0 ;
			if(!this.onwFlightSelected){
				d = this.onwardFilterData;
				for(var i in d){
				record = record + parseInt(d[i].trips[0].length);
			    }
			}else{
				d = this.returnFilterData;
				for(var i in d){
				record = record + parseInt(d[i].trips[1].length);
			    }
			}
			
			
			return record;
		},
		getFilteredOnwardPrice:function(){
			var s = $(this.filterSelector.onwardPriceFilter).val() || '';
			var minMaxArr = s.split(';') || [];
			var priceMin = parseInt(minMaxArr[0]) || 0;
			var priceMax = parseInt(minMaxArr[1]) || 0;			
			return [priceMin,priceMax];
		},
		getFilteredReturnPrice:function(){
			var s = $(this.filterSelector.returnPriceFilter).val() || '';
			var minMaxArr = s.split(';') || [];
			var priceMin = parseInt(minMaxArr[0]) || 0;
			var priceMax = parseInt(minMaxArr[1]) || 0;			
			return [priceMin,priceMax];
		},
		setPriceMinMax:function(value,tripType){
			if(tripType=='onward'){
			flightComboSerVar.onwPriceFilterMin = value[0];
			flightComboSerVar.onwPriceFilterMax = value[1];
			}
			else if(tripType=='return'){
			flightComboSerVar.retPriceFilterMin = value[0];
			flightComboSerVar.retPriceFilterMax = value[1];	
			}
		},
		
		/**
		*@description Sort By Onward Price
		*@params String asc|desc
		*@return null
		*/
		sortByOnwardPrice: function(option) {
			var onwTrips=[];
			/*var array = this.onwardFilterData,onwTrips=[];
			array.sort(function(a, b) {
				if (option == "asc") {
					return a.jsonFlightPrice.up.totalFare - b.jsonFlightPrice.up.totalFare;
				} else if (option == "desc") {
					return b.jsonFlightPrice.up.totalFare - a.jsonFlightPrice.up.totalFare;
				}
			});
			this.onwardFilterData = array;*/
			

			for(var p in this.onwardFilterData){
				var onwardRes = this.onwardFilterData[p];
						 for(var q in onwardRes.trips[0]){
						 var onwTrip = {};
							 var trip = onwardRes.trips[0][q];
							 onwTrip.index=onwardRes.index;
							// onwTrip.legIndex=trip.legIndex;							 
							 onwTrip.totalFare=onwardRes.jsonFlightPrice.up.totalFare;		
                             onwTrip.trip=trip;		
                            onwTrips.push(onwTrip);							 
						 }
						
					 }
			
			var array = onwTrips;
			array.sort(function(a, b) {
				if (option == "asc") {
					return a.totalFare - b.totalFare || a.trip.totalDurationMinutes - b.trip.totalDurationMinutes 
							|| formatDate(a.trip.jsonSector[0].depDateAndTime,'mins') - formatDate(b.trip.jsonSector[0].depDateAndTime,'mins') 
							   || formatDate(a.trip.jsonSector[0].arrDateAndTime,'mins') - formatDate(b.trip.jsonSector[0].arrDateAndTime,'mins');
				} else if (option == "desc") {
					return b.totalFare - a.totalFare || a.trip.totalDurationMinutes - b.trip.totalDurationMinutes  
							|| formatDate(a.trip.jsonSector[0].depDateAndTime,'mins') - formatDate(b.trip.jsonSector[0].depDateAndTime,'mins') 
							   || formatDate(a.trip.jsonSector[0].arrDateAndTime,'mins') - formatDate(b.trip.jsonSector[0].arrDateAndTime,'mins');
				}
			});
			
			this.onwardTrips = array;

		},
		/**
		*@description Sort By Price
		*@params String asc|desc
		*@return null
		*/
		sortByReturnPrice: function(option) {
			var retTrips=[];
			for(var p in this.returnFilterData){
				var returnRes = this.returnFilterData[p];
						 for(var q in returnRes.trips[1]){
						 var retTrip = {};
							 var trip = returnRes.trips[1][q];
							 retTrip.index=returnRes.index;
							 retTrip.totalFare=returnRes.jsonFlightPrice.up.totalFare;		
                             retTrip.trip=trip;		
                            retTrips.push(retTrip);							 
						 }
						
					 }
			
			var array = retTrips;
			
			array.sort(function(a, b) {
				if (option == "asc") {
					return a.totalFare - b.totalFare || a.trip.totalDurationMinutes - b.trip.totalDurationMinutes 
							|| formatDate(a.trip.jsonSector[0].depDateAndTime,'mins') - formatDate(b.trip.jsonSector[0].depDateAndTime,'mins') 
							   || formatDate(a.trip.jsonSector[0].arrDateAndTime,'mins') - formatDate(b.trip.jsonSector[0].arrDateAndTime,'mins');
				} else if (option == "desc") {
					return b.totalFare - a.totalFare || a.trip.totalDurationMinutes - b.trip.totalDurationMinutes  
							|| formatDate(a.trip.jsonSector[0].depDateAndTime,'mins') - formatDate(b.trip.jsonSector[0].depDateAndTime,'mins') 
							   || formatDate(a.trip.jsonSector[0].arrDateAndTime,'mins') - formatDate(b.trip.jsonSector[0].arrDateAndTime,'mins');
				}
			});
			
			this.returnTrips = array;
		},
		/**
		*@description Sort By Onward  Depart time
		*@params String asc|desc
		*@return null
		*/
		sortByOnwardDepart: function(option) {
			var array = this.onwardTrips;
			
			/*for(var p=0; p<$t.onwardFilterData.length; p++){
		    	for(var q=0; q<$t.onwardFilterData[p].trips.length; q++){
		    		$t.onwardFilterData[p].trips[q].sort(function (a, b) {	
		    			var a1 = formatDate(a.jsonSector[0].depDateAndTime,'mins');
		    			var b1 = formatDate(b.jsonSector[0].depDateAndTime,'mins');
		    			return a1 - b1;
		    		});	        	
		    	}
		    }*/
			
			array.sort(function(a, b) {
				var a1 = formatDate(a.trip.jsonSector[0].depDateAndTime,'mins');
		    	var b1 = formatDate(b.trip.jsonSector[0].depDateAndTime,'mins');
				if (option == "asc") {
					return a1 - b1 || a.totalFare - b.totalFare || 
							a.trip.totalDurationMinutes - b.trip.totalDurationMinutes
							|| formatDate(a.trip.jsonSector[0].arrDateAndTime,'mins') - formatDate(b.trip.jsonSector[0].arrDateAndTime,'mins');
				} else if (option == "desc") {
					return b1 - a1 || a.totalFare - b.totalFare || 
							a.trip.totalDurationMinutes - b.trip.totalDurationMinutes
							|| formatDate(a.trip.jsonSector[0].arrDateAndTime,'mins') - formatDate(b.trip.jsonSector[0].arrDateAndTime,'mins');
				}
			});
			this.onwardTrips = array;
		},
		/**
		*@description Sort By Return Depart time
		*@params String asc|desc
		*@return null
		*/
		sortByReturnDepart: function(option) {
			var array = this.returnTrips;
			
			array.sort(function(a, b) {
				var a1 = formatDate(a.trip.jsonSector[0].depDateAndTime,'mins');
		    	var b1 = formatDate(b.trip.jsonSector[0].depDateAndTime,'mins');
				if (option == "asc") {
					return a1 - b1 || a.totalFare - b.totalFare || 
							a.trip.totalDurationMinutes - b.trip.totalDurationMinutes
							|| formatDate(a.trip.jsonSector[0].arrDateAndTime,'mins') - formatDate(b.trip.jsonSector[0].arrDateAndTime,'mins');
				} else if (option == "desc") {
					return b1 - a1 || a.totalFare - b.totalFare || 
							a.trip.totalDurationMinutes - b.trip.totalDurationMinutes
							|| formatDate(a.trip.jsonSector[0].arrDateAndTime,'mins') - formatDate(b.trip.jsonSector[0].arrDateAndTime,'mins');
				}
			});
			this.returnTrips = array;
		},
		/**
		*@description Sort By Arrival  Depart time
		*@params String asc|desc
		*@return null
		*/
		sortByOnwardArrival: function(option) {
			var array = this.onwardTrips;
			
			
			array.sort(function(a, b) {
				var a1 = formatDate(a.trip.jsonSector[0].arrDateAndTime,'mins');
		    	var b1 = formatDate(b.trip.jsonSector[0].arrDateAndTime,'mins');
				if (option == "asc") {
					return a1 - b1 || a.totalFare - b.totalFare || a.trip.totalDurationMinutes - b.trip.totalDurationMinutes  
							|| formatDate(a.trip.jsonSector[0].depDateAndTime,'mins') - formatDate(b.trip.jsonSector[0].depDateAndTime,'mins') ;
				} else if (option == "desc") {
					return b1 - a1 || a.totalFare - b.totalFare || a.trip.totalDurationMinutes - b.trip.totalDurationMinutes  
							|| formatDate(a.trip.jsonSector[0].depDateAndTime,'mins') - formatDate(b.trip.jsonSector[0].depDateAndTime,'mins') ;
				}
			});
			this.onwardTrips = array;
		},
		/**
		*@description Sort By Return Arrival time
		*@params String asc|desc
		*@return null
		*/
		sortByReturnArrival: function(option) {
			var array = this.returnTrips;
			
			array.sort(function(a, b) {
				var a1 = formatDate(a.trip.jsonSector[0].arrDateAndTime,'mins');
		    	var b1 = formatDate(b.trip.jsonSector[0].arrDateAndTime,'mins');
				if (option == "asc") {
					return a1 - b1 || a.totalFare - b.totalFare || a.trip.totalDurationMinutes - b.trip.totalDurationMinutes  
							|| formatDate(a.trip.jsonSector[0].depDateAndTime,'mins') - formatDate(b.trip.jsonSector[0].depDateAndTime,'mins');
				} else if (option == "desc") {
					return b1 - a1 || a.totalFare - b.totalFare || a.trip.totalDurationMinutes - b.trip.totalDurationMinutes  
							|| formatDate(a.trip.jsonSector[0].depDateAndTime,'mins') - formatDate(b.trip.jsonSector[0].depDateAndTime,'mins');
				}
			});
			this.returnTrips = array;
		},
		/**
		*@description Sort By Onward  Depart time
		*@params String asc|desc
		*@return null
		*/
		sortByOnwardTD: function(option) {
			var array = this.onwardTrips;
		
			array.sort(function(a, b) {
				
				if (option == "asc") {
					return a.trip.totalDurationMinutes - b.trip.totalDurationMinutes || a.totalFare - b.totalFare   
							|| formatDate(a.trip.jsonSector[0].depDateAndTime,'mins') - formatDate(b.trip.jsonSector[0].depDateAndTime,'mins') 
							   || formatDate(a.trip.jsonSector[0].arrDateAndTime,'mins') - formatDate(b.trip.jsonSector[0].arrDateAndTime,'mins');
				} else if (option == "desc") {
					return b.trip.totalDurationMinutes - a.trip.totalDurationMinutes || a.totalFare - b.totalFare   
							|| formatDate(a.trip.jsonSector[0].depDateAndTime,'mins') - formatDate(b.trip.jsonSector[0].depDateAndTime,'mins') 
							   || formatDate(a.trip.jsonSector[0].arrDateAndTime,'mins') - formatDate(b.trip.jsonSector[0].arrDateAndTime,'mins');
				}
			});
			this.onwardTrips = array;
		},
		/**
		*@description Sort By Return Depart time
		*@params String asc|desc
		*@return null
		*/
		sortByReturnTD: function(option) {
			var array = this.returnTrips;
			
		   array.sort(function(a, b) {
				
				if (option == "asc") {
					return a.trip.totalDurationMinutes - b.trip.totalDurationMinutes || a.totalFare - b.totalFare   
							|| formatDate(a.trip.jsonSector[0].depDateAndTime,'mins') - formatDate(b.trip.jsonSector[0].depDateAndTime,'mins') 
							   || formatDate(a.trip.jsonSector[0].arrDateAndTime,'mins') - formatDate(b.trip.jsonSector[0].arrDateAndTime,'mins');
				} else if (option == "desc") {
					return b.trip.totalDurationMinutes - a.trip.totalDurationMinutes || a.totalFare - b.totalFare   
							|| formatDate(a.trip.jsonSector[0].depDateAndTime,'mins') - formatDate(b.trip.jsonSector[0].depDateAndTime,'mins') 
							   || formatDate(a.trip.jsonSector[0].arrDateAndTime,'mins') - formatDate(b.trip.jsonSector[0].arrDateAndTime,'mins');
				}
			});
			this.returnTrips = array;
		},
		getOnwardPriceSortVal:function(){
			var s = $(this.filterSelector.sortOnwardPrice);
		//	return s.hasClass('active')?'asc':'desc';
			//return 'asc';
			return s.val();
		},
		getReturnPriceSortVal:function(){
			var s = $(this.filterSelector.sortReturnPrice);
			return s.val();
		},
		
		getOnwardDepartSortVal:function(){
			var s = $(this.filterSelector.sortOnwardDepart);
			return s.val();
		},
		getReturnDepartSortVal:function(){
			var s = $(this.filterSelector.sortReturnDepart);
			return s.val();
		},
		getOnwardArrivalSortVal:function(){
			var s = $(this.filterSelector.sortOnwardArrival);
			return s.val();
		},
		getReturnArrivalSortVal:function(){
			var s = $(this.filterSelector.sortReturnArrival);
			return s.val();
		},
		getOnwardTDSortVal:function(){
			var s = $(this.filterSelector.sortOnwardTD);
			return s.val();
		},
		getReturnTDSortVal:function(){
			var s = $(this.filterSelector.sortReturnTD);
			return s.val();
		},
		getFilteredDepartureEvent:function(){
			var s = $(this.filterSelector.eventDeparture);
			var departureEvent = [];
			s.each(function(){
				var $this = $(this);
				var $selVal = $.trim($this.val());
				if($this.is(':checked')){
					departureEvent.push($selVal);
				}
			});
			return departureEvent;
		},	
		getFilteredArrivalEvent:function(){
			var s = $(this.filterSelector.eventArrival);
			var arrivalEvent = [];
			s.each(function(){
				var $this = $(this);
				var $selVal = $.trim($this.val());
				if($this.is(':checked')){
					arrivalEvent.push($selVal);
				}
			});
			return arrivalEvent;
		},
		getFilteredReturnTripDepartureEvent:function(){
			var s = $(this.filterSelector.returnTripEventDeparture);
			var departureEvent = [];
			s.each(function(){
				var $this = $(this);
				var $selVal = $.trim($this.val());
				if($this.is(':checked')){
					departureEvent.push($selVal);
				}
			});
			return departureEvent;
		}
		,	
		getFilteredReturnTripArrivalEvent:function(){
			var s = $(this.filterSelector.returnTripEventArrival);
			var arrivalEvent = [];
			s.each(function(){
				var $this = $(this);
				var $selVal = $.trim($this.val());
				if($this.is(':checked')){
					arrivalEvent.push($selVal);
				}
			});
			return arrivalEvent;
		},
		filterByDepartureEvent:function(value){
			var i, j,item,array = this.onwardFilterData,reArray = [],holder;	
			for(i = 0, j = array.length; i<j; i++){
				var dPoint = false;
                item = JSON.parse(JSON.stringify(array[i]));
                for(e = 0; e<item.trips[0].length; e++){
                    holder =  item.trips[0][e].departureEvent;
                    if(typeof holder !== "undefined" && cmnFindexofSearch(holder,value)==true){
						dPoint = true;
                    }else{
						item.trips[0].splice(e, 1);
						e--;
					}
                }
				if(dPoint==true){
                    reArray.push(item);
                }
            }
			this.onwardFilterData = reArray;
		},
		filterByArrivalEvent:function(value){
			var i, j,item,array = this.onwardFilterData,reArray = [],holder;	
			for(i = 0, j = array.length; i<j; i++){
				var dPoint = false;
                item = array[i]
                for(e = 0; e<item.trips[0].length; e++){
                    holder =  item.trips[0][e].arrivalEvent;
                    if(typeof holder !== "undefined" && cmnFindexofSearch(holder,value)==true){
						dPoint = true;
                    }else{
						item.trips[0].splice(e, 1);
						e--;
					}
                }
				if(dPoint==true){
                    reArray.push(item);
                }
            }
			this.onwardFilterData = reArray;
		},
		filterByReturnTripDepartureEvent:function(value){
			var i, j,item,array = this.returnFilterData,reArray = [],holder;	
			for(i = 0, j = array.length; i<j; i++){
				var dPoint = false;
                item = JSON.parse(JSON.stringify(array[i]));
                for(e = 0; e<item.trips[1].length; e++){
                    holder =  item.trips[1][e].departureEvent;
                    if(typeof holder !== "undefined" && cmnFindexofSearch(holder,value)==true){
						dPoint = true;
                    }else{
						item.trips[1].splice(e, 1);
						e--;
					}
                }
				if(dPoint==true){
                    reArray.push(item);
                }
            }
			this.returnFilterData = reArray;
		},
		filterByReturnTripArrivalEvent:function(value){
			var i, j,item,array = this.returnFilterData,reArray = [],holder;	
			for(i = 0, j = array.length; i<j; i++){
				var dPoint = false;
                item = array[i]
                for(e = 0; e<item.trips[1].length; e++){
                    holder =  item.trips[1][e].arrivalEvent;
                    if(typeof holder !== "undefined" && cmnFindexofSearch(holder,value)==true){
						dPoint = true;
                    }else{
						item.trips[1].splice(e, 1);
						e--;
					}
                }
				if(dPoint==true){
                    reArray.push(item);
                }
            }
			this.returnFilterData = reArray;
		},
		filterNearByAirport:function(value){//Filter by Near by airport
			var dataArray = JSON.parse(JSON.stringify(this.filterData)), reArray = [];
			for(var i in dataArray){
				var dPoint = false;
				for(var l in dataArray[i].trips[0]){
					var airlineCodeException = dataArray[i].trips[0][l].jsonSector[0].marAirlineCode;   
					var checkAirlineCode = this.getAirlineException();
					if((cmnFindexofSearch(dataArray[i].trips[0][l].arrivalAirportCode,value)==true || nn(airlineCodeException,			checkAirlineCode)==true)){
						var dPoint = true;
					}else{
						dataArray[i].trips[0].splice(l,1);
						l--;
					}
				}    
				if(dPoint==true){
					reArray.push(dataArray[i]);
				}
			}
			this.filterData = reArray;
		},
		filterOnwardNearByAirport:function(value){//Filter by Near by airport
			var dataArray = JSON.parse(JSON.stringify(this.onwardFilterData)), reArray = [];
			for(var i in dataArray){
				var dPoint = false;
				for(var l in dataArray[i].trips[0]){
					var airlineCodeException = dataArray[i].trips[0][l].jsonSector[0].marAirlineCode;   
					var checkAirlineCode = this.getAirlineException();
					if((cmnFindexofSearch(dataArray[i].trips[0][l].arrivalAirportCode,value)==true || nn(airlineCodeException,checkAirlineCode)==true)){
						var dPoint = true;
					}else{
						dataArray[i].trips[0].splice(l,1);
						l--;
					}
				}    
				if(dPoint==true){
					reArray.push(dataArray[i]);
				}
			}
			this.onwardFilterData = reArray;
		},
		filterReturnNearByAirport:function(value){//Filter by Near by airport
			var dataArray = JSON.parse(JSON.stringify(this.returnFilterData)), reArray = [];
			for(var i in dataArray){
				var dPoint = false;
				for(var l in dataArray[i].trips[1]){
					var airlineCodeException = dataArray[i].trips[1][l].jsonSector[0].marAirlineCode;   
					var checkAirlineCode = this.getAirlineException();
					if((cmnFindexofSearch(dataArray[i].trips[1][l].arrivalAirportCode,value)==true || nn(airlineCodeException,checkAirlineCode)==true)){
						var dPoint = true;
					}else{
						dataArray[i].trips[1].splice(l,1);
						l--;
					}
				}    
				if(dPoint==true){
					reArray.push(dataArray[i]);
				}
			}
			this.returnFilterData = reArray;
		},
		filterByAirportStopOver:function(value){
			var dataArray = this.onwardFilterData, reArray = [];
			for(var i in dataArray){
				var dPoint = false;
				for(var l = 0;l<dataArray[i].trips[0].length;l++){
					var stopOver = dataArray[i].trips[0][l].stopOverAirport;
					if(cmnIndexofSearchArr(value,stopOver)==true){
						var dPoint = true;
					}else{
						dataArray[i].trips[0].splice(l,1);
						l--;
					}
				}   
				if(dPoint==true){
					reArray.push(dataArray[i]);
				}
			}
			this.onwardFilterData = reArray;
		},
		filterByAirportReturnStopOver:function(value){
			
			var dataArray = this.returnFilterData, reArray = [];
			for(var i in dataArray){
				var dPoint = false;
				for(var l = 0;l<dataArray[i].trips[1].length;l++){
					var stopOver = dataArray[i].trips[1][l].stopOverAirport;
					if(cmnIndexofSearchArr(value,stopOver)==true){
						var dPoint = true;
					}else{
						dataArray[i].trips[1].splice(l,1);
						l--;
					}
				}   
				if(dPoint==true){
					reArray.push(dataArray[i]);
				}
			}
			this.returnFilterData = reArray;
		},
		getFilteredAirportStopOver:function(){
			var s = $(this.filterSelector.stopOverAirports);
			var airportStopOver = [];
			s.each(function(){
				var $this = $(this);
				var $selVal = $.trim($this.val());
				if($this.is(':checked')){
					airportStopOver.push($selVal);
				}
			});
			return airportStopOver;
		},
		getFilteredReturnAirportStopOver:function(){
			var s = $(this.filterSelector.returnStopOverAirports);
			var airportStopOver = [];
			s.each(function(){
				var $this = $(this);
				var $selVal = $.trim($this.val());
				if($this.is(':checked')){
					airportStopOver.push($selVal);
				}
			});
			return airportStopOver;
		},		
		getFilteredOnwardStops:function(){
			var s = $(this.filterSelector.onwardStopsFF);
			var stops = [];
			s.each(function(){
				var $this = $(this);
				var $selVal = $.trim($this.val());
				if($this.is(':checked')){
					stops.push($selVal);
				}
			});
			return stops;
		},
		getFilteredReturnStops:function(){
			var s = $(this.filterSelector.returnStopsFF);
			var stops = [];
			s.each(function(){
				var $this = $(this);
				var $selVal = $.trim($this.val());
				if($this.is(':checked')){
					stops.push($selVal);
				}
			});
			return stops;
		},
		filterByOnwardStops:function(value){//Filter by Stop Over
			var i, j,item,array = this.onwardFilterData,reArray = [],holder;	
			for(i = 0, j = array.length; i<j; i++){
				var dPoint = false;
				item = array[i]
				for(e = 0; e<item.trips[0].length; e++){
					holder =  item.trips[0][e].jsonSector.length;
					if(typeof holder !== "undefined" && cmnFindexofSearch(holder,value)==true){
						dPoint = true;
					}else{
						item.trips[0].splice(e, 1);
						e--;
					}
				}
				if(dPoint==true){
					reArray.push(item);
				}
			}
			this.onwardFilterData = reArray;
		},
		filterByReturnStops:function(value){//Filter by Stop Over
			var i, j,item,array = this.returnFilterData,reArray = [],holder;	
			for(i = 0, j = array.length; i<j; i++){
				var dPoint = false;
				item = array[i]
				for(e = 0; e<item.trips[1].length; e++){
					holder =  item.trips[1][e].jsonSector.length;
					if(typeof holder !== "undefined" && cmnFindexofSearch(holder,value)==true){
						dPoint = true;
					}else{
						item.trips[1].splice(e, 1);
						e--;
					}
				}
				if(dPoint==true){
					reArray.push(item);
				}
			}
			this.returnFilterData = reArray;
		},
		getFilteredOnwardAirlineName:function(){
			var s = $(this.filterSelector.onwardAirline);
			var gridItems = $(this.filterSelector.airlineGrid);
			gridItems.each(function(){
				var item = $(this).parents('.item');
				item.removeClass('active');
			});
			var filterByAirlineName = [];
			s.each(function(){
				var $this = $(this);
				var $selVal = $.trim($this.val());
				if($this.is(':checked')){					
					gridItems.each(function(){
						if($(this).attr('id')==$this.attr('attr-airlinecode')){
							$(this).parents('.item').addClass('active');
						}
					});
					filterByAirlineName.push($selVal);
				}
			});
			return filterByAirlineName;
		},
		getFilteredReturnAirlineName:function(){
			var s = $(this.filterSelector.returnAirline);
			var gridItems = $(this.filterSelector.airlineGrid);
			gridItems.each(function(){
				var item = $(this).parents('.item');
				item.removeClass('active');
			});
			var filterByAirlineName = [];
			s.each(function(){
				var $this = $(this);
				var $selVal = $.trim($this.val());
				if($this.is(':checked')){					
					gridItems.each(function(){
						if($(this).attr('id')==$this.attr('attr-airlinecode')){
							$(this).parents('.item').addClass('active');
						}
					});
					filterByAirlineName.push($selVal);
				}
			});
			return filterByAirlineName;
		},
		getFilteredOnwardAllianceName:function(){
			var s = $(this.filterSelector.ffpAllianceFF);
			var filteredAllianceName = [];
			s.each(function(){
				var $this = $(this);
				if($this.hasClass('active')){		
				var $selVal = $this.attr('attr-alliance');

					filteredAllianceName.push($selVal);
				}
			});
			return filteredAllianceName;
		},
		getFilteredReturnAllianceName:function(){
			var s = $(this.filterSelector.ffpAllianceFFR);
			var filteredAllianceName = [];
			s.each(function(){
				var $this = $(this);
				if($this.hasClass('active')){		
				var $selVal = $this.attr('attr-alliance');

					filteredAllianceName.push($selVal);
				}
			});
			return filteredAllianceName;
		},
		/**
		*@description Load template Content
		*@param HTML Selector [dynamicTemplate(Dynamic template to Loaded)]
		*@param String [templateID (Template ID)]
		*@param data Array/Object [data(Json Data)]
		*@param HTML Selector [toUpdate(Template to update)]
		*@return 
		*/
		loadTemplate:function(templateID,data,toUpdate,callback){
			var result;
			//Load the template
			var template = tmpl($(this.dynamicTemplate).filter('#'+templateID).html(),data);
			var r = /\\u([\d\w]{4})/gi;
			template = template.replace(r, function (match, grp) {
			    return String.fromCharCode(parseInt(grp, 16)); } );
			template = unescape(template);
			//Select result container
			if(typeof toUpdate==='object'){			
				result = toUpdate;
			}else{			
				result = $('#'+toUpdate);
			}
			//Empty the result container
			result.empty();
			//Load data to the result container
			result.append(template);
			_langGlobal.langInit();
			
			if(typeof callback==='function')
				return callback();
			
		},
		resetOnwardPriceSlider:function(getFilterData){
			var priceList = flightComboSerVar.getPriceList('onward');
			
			this.reRenderOnwardPrice(priceList);
		},
		resetReturnPriceSlider:function(getFilterData){
			var priceList = flightComboSerVar.getPriceList('return');
			this.reRenderReturnPrice(priceList);
		},
		reRenderOnwardPrice:function(data){
			var currencyIcon = flightComboSerVar.getSelectedCurrency();
			if(currencyIcon=="SAR"){
				currencyIcon = i18n.t('SAR');
			}else{
				currencyIcon = currencySymbols(currencyIcon);				
			}
			if(data.length==0 || data.length==1){
				//$(this.filterSelector.onwardPriceFilterSection).slideUp();	
				$(this.filterSelector.onwardPriceFilterSection).hide();	
				if($returnRange && $returnRange.val() && $returnRange.val().indexOf('undefined') > -1){
					$('.priceFilterTab').hide();
					$('.priceFilterText').hide();
				}
			}else{			
				$(this.filterSelector.onwardPriceFilterSection).slideDown();	
				$('.priceFilterTab').show();
				$('.priceFilterText').show();
			}
			if(onwardPriceSlider){
				onwardPriceSlider.destroy();
				$(this.filterSelector.onwardPriceFilter).val(data[0]+":"+data[data.length -1]);
			}
			$onwardRange =  $(this.filterSelector.onwardPriceFilter).ionRangeSlider({
				values: data,
				type: 'double',
				prefix: "<span>"+currencyIcon+"</span> ",
				onFinish: function (obj){
					priceMin = obj.from_value;
					priceMax = obj.to_value;
				}
			});
			onwardPriceSlider = $onwardRange.data("ionRangeSlider");
		},
		reRenderReturnPrice:function(data){
			var currencyIcon = flightComboSerVar.getSelectedCurrency();
			if(currencyIcon=="SAR"){
				currencyIcon = i18n.t('SAR');
			}else{
				currencyIcon = currencySymbols(currencyIcon);				
			}
			if(data.length==0 || data.length==1){
				//$(this.filterSelector.returnPriceFilterSection).slideUp();	
				$(this.filterSelector.returnPriceFilterSection).hide();	
				if($onwardRange && $onwardRange.val() && $onwardRange.val().indexOf('undefined')> -1){
					$('.priceFilterTab').hide();
					$('.priceFilterText').hide();
				}
			}else{		
				$(this.filterSelector.returnPriceFilterSection).slideDown();	
				$('.priceFilterTab').show();
				$('.priceFilterText').show();
			}
			if(returnPriceSlider){
				returnPriceSlider.destroy();
				$(this.filterSelector.returnPriceFilter).val(data[0]+":"+data[data.length -1]);
			}
			$returnRange =  $(this.filterSelector.returnPriceFilter).ionRangeSlider({
				values: data,
				type: 'double',
				prefix: "<span>"+currencyIcon+"</span> ",
				onFinish: function (obj){
					priceMin = obj.from_value;
					priceMax = obj.to_value;
				}
			});
			returnPriceSlider = $returnRange.data("ionRangeSlider");
		},
		loadFilter:function(){
			var $t = this;
			var onwardStopsList = $t.getOnwardStopsList();
			var returnStopsList = $t.getReturnStopsList();
			var totalStopsList =  $t.getTotalStopsList();
			//var NBA = $t.getNearByAirport();
			var stopOverAirports = $t.getStopOverAirport();
			var DAE = $t.getDAEvent();
			//var AirlineNameWP = $t.airlineNameWithPrice();
			var onwardAirlineNameWP = $t.onwardAirlineNameWithPrice();
			var returnAirlineNameWP = $t.returnAirlineNameWithPrice();
			var onwardPriceList = $t.getPriceList('onward');
			var returnPriceList = $t.getPriceList('return');

			
			var data = {
				onwardStopsList:onwardStopsList,
				returnStopsList:returnStopsList,
				totalStopsList:totalStopsList,
				NBA:NBA,
				stopOverAirportlist:stopOverAirports.stopOverAirportList,
				stopOverReturnAirportlist:stopOverAirports.stopOverReturnAirportList,
				filterbyEventDeparture:DAE[0],
				filterbyEventArrival:DAE[1],
				filterbyReturnEventDeparture:DAE[2],
				filterbyReturnEventArrival:DAE[3],
				onwardAirlineNameWP:onwardAirlineNameWP,
				returnAirlineNameWP:returnAirlineNameWP
			};
			flightComboSerVar.dynamicFilterdata = data;
		},
		loadOnwFilter:function(){
			var $t = this;
			var onwardStopsList = $t.getOnwardStopsList();
			var totalStopsList =  $t.getTotalStopsList();
			var NBA = $t.getOnwardNearByAirport();
			var stopOverAirports = $t.getStopOverAirport();
			var DAE = $t.getDAEvent();
			//var AirlineNameWP = $t.airlineNameWithPrice();
			var onwardAirlineNameWP = $t.onwardAirlineNameWithPrice();
			var onwardPriceList = $t.getPriceList('onward');

			
			var data = {
				onwardStopsList:onwardStopsList,
				totalStopsList:totalStopsList,
				NBA:NBA,
				stopOverAirportlist:stopOverAirports.stopOverAirportList,
				filterbyEventDeparture:DAE[0],
				filterbyEventArrival:DAE[1],
				onwardAirlineNameWP:onwardAirlineNameWP,
			};
			flightComboSerVar.dynamicFilterdata = data;
		},
		loadRetFilter:function(){
			var $t = this;
			var returnStopsList = $t.getReturnStopsList();
			var totalStopsList =  $t.getTotalStopsList();
			var NBA = $t.getReturnNearByAirport();
			var stopOverAirports = $t.getStopOverAirport();
			var DAE = $t.getDAEvent();
			//var AirlineNameWP = $t.airlineNameWithPrice();
			var returnAirlineNameWP = $t.returnAirlineNameWithPrice();
			var returnPriceList = $t.getPriceList('return');

			
			var data = {
				returnStopsList:returnStopsList,
				totalStopsList:totalStopsList,
				NBA:NBA,
				stopOverReturnAirportlist:stopOverAirports.stopOverReturnAirportList,
				filterbyReturnEventDeparture:DAE[2],
				filterbyReturnEventArrival:DAE[3],
				returnAirlineNameWP:returnAirlineNameWP
			};
			flightComboSerVar.dynamicFilterdata = data;
			
		},
		genOnwardAirlineJunk: function(value){
			var dataArray = this.onwardFilterData, reArray = [];
            //var pList = [];
			var airlineName = [];
			var maps = this.hashmap;
			for(var i in dataArray){
				var fromSec = dataArray[i].trips[0];
                var priceObj = dataArray[i].jsonFlightPrice;
				var totalFare = priceObj.up.totalFare;
				//pList.push(totalFare);
				for(var l in dataArray[i].trips[0]){	
						var airlineCodeException = dataArray[i].trips[0][l].jsonSector[0].marAirlineCode;			
						var checkAirlineCode = this.getAirlineException();
						var arrivalAirportCode = dataArray[i].trips[0][l].jsonSector[dataArray[i].trips[0][l].jsonSector.length -1].arrivalAirportCode;
						var segments = dataArray[i].trips[0][l].jsonSector[0];
						var aname = maps.airlineName[segments.marAirlineCode][lang];
						var aCode = segments.marAirlineCode;
						airlineName.push([aname, totalFare, aCode]);
					//}
				}
			}
			return airlineName;
        },		
		genReturnAirlineJunk: function(value){
			var dataArray = this.returnFilterData, reArray = [];
            //var pList = [];
			var airlineName = [];
			var maps = this.hashmap;
			for(var i in dataArray){
				var fromSec = dataArray[i].trips[1];
                var priceObj = dataArray[i].jsonFlightPrice;
				var totalFare = priceObj.up.totalFare;
				//pList.push(totalFare);
				for(var l in dataArray[i].trips[1]){	
						var airlineCodeException = dataArray[i].trips[1][l].jsonSector[0].marAirlineCode;			
						var checkAirlineCode = this.getAirlineException();
						var arrivalAirportCode = dataArray[i].trips[1][l].jsonSector[dataArray[i].trips[1][l].jsonSector.length -1].arrivalAirportCode;
						var segments = dataArray[i].trips[1][l].jsonSector[0];
						var aname = maps.airlineName[segments.marAirlineCode][lang];
						var aCode = segments.marAirlineCode;
						airlineName.push([aname, totalFare, aCode]);
					//}
				}
			}
			return airlineName;
        },
        getAirlineException:function(){
			//return ['G9'];
			return [];
		},		
		getAirlineList: function(value,tripType){ //produce [Airline_name,lowest_price]...
			  var array =[];
			  
			  if(tripType=='onward'){
			   array = this.genOnwardAirlineJunk(value);
			  }
			  else {
				array = this.genReturnAirlineJunk(value);
			  }
	            var map = {};
	            var aCode = {};
	            var airlineNamesWithPrice = [];
	            for (var i = 0; i < array.length; i++) {
	                if (array[i][0] in map) {
	                    map[array[i][0]].push([array[i][1],array[i][2]]);
	                } else {
	                    map[array[i][0]] = [[array[i][1],array[i][2]]];
	                }
	            }
	            for (var key in map) {
	                var priceArr = map[key];
	                var getLowest = priceArr.sort(function (a, b) {
	                    return a[0] - b[0];
	                });
	                airlineNamesWithPrice.push([key,getLowest[0],flightComboSerVar.setSelectedCurrency]);
	            }
				airlineNamesWithPrice.sort(function(a,b){
					 var upA = a[0].toUpperCase();
					 var upB = b[0].toUpperCase();
					 return (upA < upB) ? -1 : (upA > upB) ? 1 : 0;	
				});
				return airlineNamesWithPrice;
	    },
		getPriceList: function(tripType){ //produce [lowest_price,lowest_price...]
			var pList = [];
			var priceData  ;
			if(tripType=='onward'){
			 priceData = JSON.parse(JSON.stringify(this.onwardFilterData));
			}else{
			 priceData = JSON.parse(JSON.stringify(this.returnFilterData));	
			}
			for (i in priceData) {
				var priceObj = priceData[i].jsonFlightPrice;
				if (typeof priceObj !== 'undefined') {
					var totalFare = priceObj.up.totalFare;
					pList.push(Math.ceil(totalFare));
				}
			}
			if (pList.length > 0){
				for (var i = 0; i < pList.length; i++) {
					if (nn(pList[i], pList) == false) {
						pList.push(pList[i]);
					}
				}
			}
			pList.sort(function(a, b) {
				return a - b;
			});
			return pList;
		},
		onwardAirlineNameWithPrice: function(){
	    	var airlineNameWithPrice = flightComboSerVar.getAirlineList(flightComboSerVar.functionOnwardNBASource(),'onward');
	    	return airlineNameWithPrice;
	    },		
		returnAirlineNameWithPrice: function(){
	    	var airlineNameWithPrice = flightComboSerVar.getAirlineList(flightComboSerVar.functionReturnNBASource(),'return');
	    	return airlineNameWithPrice;
	    },
		getStopOverAirport:function(){
			/**
			 * Stop Over Final Array List
			 */
			var stopOverAirportList = [];
			var stopOverReturnAirportList = [];
			
			var stopOverAirports={stopOverAirportList:[],stopOverReturnAirportList:[]};
			/**
			 *Stop Over Airport Collection List Dummy
			 */
			var SACLD = [];
			
			var returnSACLD = [];
			/**
			 * Base Flight Response Object
			 */
			var baseOnwardFlightData = this.baseData.pricedItinerarysOnward;
			var baseReturnFlightData = this.baseData.pricedItinerarysReturn;
			
			
			/**
			 *Data map object
			 */
			
			var maps = this.hashmap;
			for(var i in baseOnwardFlightData){
				var trip = baseOnwardFlightData[i].trips[0];			
				for(var e in trip){
					var segments = trip[e].jsonSector;
						for(var l=0; l<segments.length-1; l++){
							var sector = segments[l];
							var stopOverAName = $.trim(maps.airportName[sector.arrAirportCode][lang]);
							var stopOverACode = $.trim(sector.arrAirportCode);
							if(nn(stopOverACode,SACLD)==false){
								SACLD.push(stopOverACode);
								stopOverAirportList.push([stopOverAName,stopOverACode]);
							}
						}
				}

				
				
			}
			for(var i in baseReturnFlightData){
				var trip = baseReturnFlightData[i].trips[1] || [] ;			
				for(var e in trip){
					var segments = trip[e].jsonSector;
						for(var l=0; l<segments.length-1; l++){
							var sector = segments[l];
							var stopOverAName = $.trim(maps.airportName[sector.arrAirportCode][lang]);
							var stopOverACode = $.trim(sector.arrAirportCode);
							if(nn(stopOverACode,returnSACLD)==false){
								returnSACLD.push(stopOverACode);
								stopOverReturnAirportList.push([stopOverAName,stopOverACode]);
							}
						}
				}

				
				
			}
			

			
			stopOverAirports.stopOverAirportList = stopOverAirportList;
			stopOverAirports.stopOverReturnAirportList = stopOverReturnAirportList;
			
			return stopOverAirports;
		},
		/*getFFPList:function(){
			
	         var airLineMap = {};		 
	         var ffpMap = {};		 
			 
			 
			 // get Airline list
			 var airlineList = 	this.getAirlineList(this.functionNBASource(),'onward') ;
				
			// 
			for( i in airlineList){

			 airLineMap[airlineList[i][1][1]] = airlineList[i][1][1] ;

			}

			if($('html').hasClass('arabic')) {
				for(ffPrgmArr in ffp.ar){
				if(ffp.ar[ffPrgmArr].airlineCode in airLineMap){

				for(ffPrgm in ffp.ar[ffPrgmArr].ffpPrgms){
				if(ffPrgm in ffpMap){
				ffpMap[ffp.ar[ffPrgmArr].ffpPrgms[ffPrgm]] = ffpMap[ffp.ar[ffPrgmArr].ffpPrgms[ffPrgm]] + ',' +ffp.ar[ffPrgmArr].airlineCode  ;	
				}
				else {
				ffpMap[ffp.ar[ffPrgmArr].ffpPrgms[ffPrgm]] = ffp.ar[ffPrgmArr].airlineCode ;				 



				}

				}
				}

			}	        }
			
			else{

				for(ffPrgmArr in ffp.en){
				if(ffp.en[ffPrgmArr].airlineCode in airLineMap){

				for(ffPrgm in ffp.en[ffPrgmArr].ffpPrgms){
				if(ffPrgm in ffpMap){
				ffpMap[ffp.en[ffPrgmArr].ffpPrgms[ffPrgm]] = ffpMap[ffp.en[ffPrgmArr].ffpPrgms[ffPrgm]] + ',' +ffp.en[ffPrgmArr].airlineCode  ;	
				}
				else {
				ffpMap[ffp.en[ffPrgmArr].ffpPrgms[ffPrgm]] = ffp.en[ffPrgmArr].airlineCode ;				 



				}

				}
				}

				}
			}


			

			


			return ffpMap;

	        },*/
		getDAEvent:function(){
			var onwardObject = this.onwardFilterData;
			var returnObject = this.returnFilterData;
			var FBEDepartureObjArray = [], FBED = [];
			var FBEArrivalObjArray = [], FBEA = [];
			var returnFBEDepartureObjArray = [], returnFBED = [];
			var returnFBEArrivalObjArray = [], returnFBEA = [];
			if (onwardObject.length > 0) {
				for (i in onwardObject) {
					var baseFromSec = onwardObject[i].trips[0];
					for(var e=0; e<baseFromSec.length; e++){
						var departureLeg = baseFromSec[e].jsonSector[0];
						var arrivalLeg = baseFromSec[e].jsonSector[baseFromSec[e].jsonSector.length -1];
						var departureEventTime = formatDate(departureLeg.depDateAndTime,'events');
						var arrivalEventTime = formatDate(arrivalLeg.arrDateAndTime,'events');
						//Set Departure Time
						if(nn(departureEventTime,FBEDepartureObjArray)===false){
							FBED[departureEventTime] = [cmnDAEventLocalization(departureEventTime)];
							FBEDepartureObjArray.push(departureEventTime);
						}
						//Set Arrival Time
						if(nn(departureEventTime,FBEArrivalObjArray)===false){
							FBEA[arrivalEventTime] = [cmnDAEventLocalization(arrivalEventTime)];
							FBEArrivalObjArray.push(arrivalEventTime);
						}
						//Set the values to the base sector
						baseFromSec[e].departureEvent = departureEventTime;
						baseFromSec[e].arrivalEvent = arrivalEventTime;
						
						//Set Total Duration
						var baseOnwardObj = baseFromSec[e];
						var dDT = formatDate(baseOnwardObj.jsonSector[0].depDateAndTime,'mins');
						var aDT = formatDate(baseOnwardObj.jsonSector[baseOnwardObj.jsonSector.length -1].arrDateAndTime,'mins');
						baseOnwardObj.departureMins = dDT;
						baseOnwardObj.arrivalMins = aDT;
					}
					
				}
			}
			if (returnObject.length > 0) {
				for (i in returnObject) {
					var returnBaseFromSec = returnObject[i].trips[1] || [];
					for(var e=0; e<returnBaseFromSec.length; e++){
						var departureLeg = returnBaseFromSec[e].jsonSector[0];
						var arrivalLeg = returnBaseFromSec[e].jsonSector[returnBaseFromSec[e].jsonSector.length -1];
						var departureEventTime = formatDate(departureLeg.depDateAndTime,'events');
						var arrivalEventTime = formatDate(arrivalLeg.arrDateAndTime,'events');
						//Set Departure Time
						if(nn(departureEventTime,returnFBEDepartureObjArray)===false){
							returnFBED[departureEventTime] = [cmnDAEventLocalization(departureEventTime)];
							returnFBEDepartureObjArray.push(departureEventTime);
						}
						//Set Arrival Time
						if(nn(departureEventTime,returnFBEArrivalObjArray)===false){
							returnFBEA[arrivalEventTime] = [cmnDAEventLocalization(arrivalEventTime)];
							returnFBEArrivalObjArray.push(arrivalEventTime);
						}
						//Set the values to the base sector
						returnBaseFromSec[e].departureEvent = departureEventTime;
						returnBaseFromSec[e].arrivalEvent = arrivalEventTime;
						
						//Set Total Duration
						var baseOnwardObj = returnBaseFromSec[e];
						var dDT = formatDate(baseOnwardObj.jsonSector[0].depDateAndTime,'mins');
						var aDT = formatDate(baseOnwardObj.jsonSector[baseOnwardObj.jsonSector.length -1].arrDateAndTime,'mins');
						baseOnwardObj.departureMins = dDT;
						baseOnwardObj.arrivalMins = aDT;
					}
					
				}
			}
			return [FBED,FBEA,returnFBED,returnFBEA];
        },
		getNearByAirport:function(){
			var nearByAirport = [],pricelist = [];
			var nearByAirportDummy = [];
			var urlNearbyIataCondition = true;
			var baseObj = this.baseObj;
			var maps = this.hashmap;
			var nbAirportFromURL = this.getArrivalCodeFromURL();
			if(baseObj.length > 0) {
				for (i in baseObj) {					
					var baseFromSec = baseObj[i].trips[0];
					for(var e=0; e<baseFromSec.length; e++){
						var NBAAirportName = maps.airportName[baseFromSec[e].jsonSector[baseFromSec[e].jsonSector.length -1].arrAirportCode][lang];
						var NBAAirportCode = baseFromSec[e].jsonSector[baseFromSec[e].jsonSector.length -1].arrAirportCode;
						baseFromSec[e].arrivalAirportCode = NBAAirportCode;
						if(nbAirportFromURL==NBAAirportCode){
							urlNearbyIataCondition = false;
						}
						if(nbAirportFromURL!=NBAAirportCode){
							if(nn(NBAAirportCode,nearByAirportDummy)==false){
								nearByAirportDummy.push(NBAAirportCode);
								nearByAirport.push([NBAAirportName,NBAAirportCode]);
							}
						}
					}     
				}
			}
			/**
			* Near by airport Price implementation
			*/
			for(var a in nearByAirport){
				if(baseObj.length > 0){
					for (i in baseObj) {					
						var baseFromSec = baseObj[i].trips[0];
						for(var e=0; e<baseFromSec.length; e++){
							var NBAAirportCode = baseFromSec[e].jsonSector[baseFromSec[e].jsonSector.length -1].arrAirportCode;
							if(baseFromSec[e].arrivalAirportCode===nearByAirport[a][1]){
								if(nbAirportFromURL!=NBAAirportCode){
									pricelist.push([baseFromSec[e].arrivalAirportCode,Math.ceil(baseObj[i].jsonFlightPrice.up.totalFare)]);
								}
							}
						}
					}
				}
			} 
			var map = {};
			var nbapricelist = [];
			for (var i = 0; i < pricelist.length; i++) {
				if (pricelist[i][0] in map) {
					map[pricelist[i][0]].push(pricelist[i][1]);
				} else {
					map[pricelist[i][0]] = [pricelist[i][1]];
				}
			}
			for (var key in map) {
				var priceArr = map[key];
				var getLowest = priceArr.sort(function (a, b) {
					return a[0] - b[0];
				});
				getLowest.sort(function (a, b) {
					return a - b;
				});
				nbapricelist.push([key,getLowest[0],i18n.t(currencySymbols(flightSerVar.setSelectedCurrency))]);
			}
			var cur = i18n.t(currencySymbols(flightSerVar.getSelectedCurrency()));
			for(var a in nearByAirport){
				for(var b in nbapricelist){
					if(nbapricelist[b][0]===nearByAirport[a][1]){
						nearByAirport[a].push(nbapricelist[b][1],cur);
					}
				}
			} 
			if(urlNearbyIataCondition==false){
				this.urlNearbyIata = nbAirportFromURL;
			}
			return nearByAirport;
		},
		getOnwardNearByAirport:function(){
			var nearByAirport = [],pricelist = [];
			var nearByAirportDummy = [];
			var urlNearbyIataCondition = true;
			var baseObj = this.onwardBaseObj;
			var maps = this.hashmap;
			var nbAirportFromURL = this.getOnwardArrivalCodeFromURL();
			if(baseObj.length > 0) {
				for (i in baseObj) {					
					var baseFromSec = baseObj[i].trips[0];
					for(var e=0; e<baseFromSec.length; e++){
						var NBAAirportName = maps.airportName[baseFromSec[e].jsonSector[baseFromSec[e].jsonSector.length -1].arrAirportCode][lang];
						var NBAAirportCode = baseFromSec[e].jsonSector[baseFromSec[e].jsonSector.length -1].arrAirportCode;
						baseFromSec[e].arrivalAirportCode = NBAAirportCode;
						if(nbAirportFromURL==NBAAirportCode){
							urlNearbyIataCondition = false;
						}
						if(nbAirportFromURL!=NBAAirportCode){
							if(nn(NBAAirportCode,nearByAirportDummy)==false){
								nearByAirportDummy.push(NBAAirportCode);
								nearByAirport.push([NBAAirportName,NBAAirportCode]);
							}
						}
					}     
				}
			}
			/**
			* Near by airport Price implementation
			*/
			for(var a in nearByAirport){
				if(baseObj.length > 0){
					for (i in baseObj) {					
						var baseFromSec = baseObj[i].trips[0];
						for(var e=0; e<baseFromSec.length; e++){
							var NBAAirportCode = baseFromSec[e].jsonSector[baseFromSec[e].jsonSector.length -1].arrAirportCode;
							if(baseFromSec[e].arrivalAirportCode===nearByAirport[a][1]){
								if(nbAirportFromURL!=NBAAirportCode){
									pricelist.push([baseFromSec[e].arrivalAirportCode,Math.ceil(baseObj[i].jsonFlightPrice.up.totalFare)]);
								}
							}
						}
					}
				}
			} 
			var map = {};
			var nbapricelist = [];
			for (var i = 0; i < pricelist.length; i++) {
				if (pricelist[i][0] in map) {
					map[pricelist[i][0]].push(pricelist[i][1]);
				} else {
					map[pricelist[i][0]] = [pricelist[i][1]];
				}
			}
			for (var key in map) {
				var priceArr = map[key];
				var getLowest = priceArr.sort(function (a, b) {
					return a[0] - b[0];
				});
				getLowest.sort(function (a, b) {
					return a - b;
				});
				nbapricelist.push([key,getLowest[0],i18n.t(currencySymbols(flightSerVar.setSelectedCurrency))]);
			}
			var cur = i18n.t(currencySymbols(flightSerVar.getSelectedCurrency()));
			for(var a in nearByAirport){
				for(var b in nbapricelist){
					if(nbapricelist[b][0]===nearByAirport[a][1]){
						nearByAirport[a].push(nbapricelist[b][1],cur);
					}
				}
			} 
			if(urlNearbyIataCondition==false){
				this.urlNearbyIata = nbAirportFromURL;
			}
			return nearByAirport;
		},
		getReturnNearByAirport:function(){
			var nearByAirport = [],pricelist = [];
			var nearByAirportDummy = [];
			var urlNearbyIataCondition = true;
			var baseObj = this.returnBaseObj;
			var maps = this.hashmap;
			var nbAirportFromURL = this.getReturnArrivalCodeFromURL();
			if(baseObj.length > 0) {
				for (i in baseObj) {					
					var baseFromSec = baseObj[i].trips[1];
					for(var e=0; e<baseFromSec.length; e++){
						var NBAAirportName = maps.airportName[baseFromSec[e].jsonSector[baseFromSec[e].jsonSector.length -1].arrAirportCode][lang];
						var NBAAirportCode = baseFromSec[e].jsonSector[baseFromSec[e].jsonSector.length -1].arrAirportCode;
						baseFromSec[e].arrivalAirportCode = NBAAirportCode;
						if(nbAirportFromURL==NBAAirportCode){
							urlNearbyIataCondition = false;
						}
						if(nbAirportFromURL!=NBAAirportCode){
							if(nn(NBAAirportCode,nearByAirportDummy)==false){
								nearByAirportDummy.push(NBAAirportCode);
								nearByAirport.push([NBAAirportName,NBAAirportCode]);
							}
						}
					}     
				}
			}
			/**
			* Near by airport Price implementation
			*/
			for(var a in nearByAirport){
				if(baseObj.length > 0){
					for (i in baseObj) {					
						var baseFromSec = baseObj[i].trips[1];
						for(var e=0; e<baseFromSec.length; e++){
							var NBAAirportCode = baseFromSec[e].jsonSector[baseFromSec[e].jsonSector.length -1].arrAirportCode;
							if(baseFromSec[e].arrivalAirportCode===nearByAirport[a][1]){
								if(nbAirportFromURL!=NBAAirportCode){
									pricelist.push([baseFromSec[e].arrivalAirportCode,Math.ceil(baseObj[i].jsonFlightPrice.up.totalFare)]);
								}
							}
						}
					}
				}
			} 
			var map = {};
			var nbapricelist = [];
			for (var i = 0; i < pricelist.length; i++) {
				if (pricelist[i][0] in map) {
					map[pricelist[i][0]].push(pricelist[i][1]);
				} else {
					map[pricelist[i][0]] = [pricelist[i][1]];
				}
			}
			for (var key in map) {
				var priceArr = map[key];
				var getLowest = priceArr.sort(function (a, b) {
					return a[0] - b[0];
				});
				getLowest.sort(function (a, b) {
					return a - b;
				});
				nbapricelist.push([key,getLowest[0],i18n.t(currencySymbols(flightSerVar.setSelectedCurrency))]);
			}
			var cur = i18n.t(currencySymbols(flightSerVar.getSelectedCurrency()));
			for(var a in nearByAirport){
				for(var b in nbapricelist){
					if(nbapricelist[b][0]===nearByAirport[a][1]){
						nearByAirport[a].push(nbapricelist[b][1],cur);
					}
				}
			} 
			if(urlNearbyIataCondition==false){
				this.urlNearbyIata = nbAirportFromURL;
			}
			return nearByAirport;
		},
		getTotalStopsList:function(){
			var stopList = [];
			var countStops = 0;
			var nonStopFlightCount = 0,oneStopFlightCount=0,twoStopFlightCount=0,threeStopFlightCount=0,fourStopFlightCount=0,fiveStopFlightCount=0;
			var nonStop = [], oneStop = [], twoStop = [], threeStop = [], fourStop = [], fiveStop = [], stopObj = {};
			var onwBaseObject = this.onwardFilterData;
			var retBaseObject = this.returnFilterData;
						
			var nonStopKey = i18n.t("nonStop");
			var oneStopKey = i18n.t("oneStopKey");
			var twoStopKey = i18n.t("twoStopKey");
			var threeStopKey = i18n.t("threeStopKey");
			var fourStopKey = i18n.t("fourStopKey");
			var fiveStopKey = i18n.t("fiveStopKey");
			async.parallel([
				function(callback){					
					for (var i = 0; i < onwBaseObject.length; i++) {
						for (var j = 0; j < onwBaseObject[i].trips[0].length; j++){
							var f = onwBaseObject[i].trips[0][j].jsonSector;
							var totalFare = onwBaseObject[i].jsonFlightPrice.up.totalFare;
							if (f.length == 1) {
								nonStopFlightCount = nonStopFlightCount+1;
								nonStop.push(totalFare);
							}
							if (f.length == 2) {
								oneStopFlightCount = oneStopFlightCount+1;
								oneStop.push(totalFare);
							}
							if (f.length == 3) {
								twoStopFlightCount = twoStopFlightCount+1;
								twoStop.push(totalFare);
							}
							if (f.length == 4) {
								threeStopFlightCount = threeStopFlightCount+1;
								threeStop.push(totalFare);
							}
							if (f.length == 5) {
								fourStopFlightCount = fourStopFlightCount+1;
								fourStop.push(totalFare);
							}
							if (f.length == 6) {
								fiveStopFlightCount = fiveStopFlightCount+1;
								fiveStop.push(totalFare);
							}
						}
					}					
					

					stopObj[nonStopKey] = nonStop;
					stopObj[oneStopKey] = oneStop;
					stopObj[twoStopKey] = twoStop;
					stopObj[threeStopKey] = threeStop;
					stopObj[fourStopKey] = fourStop;
					stopObj[fiveStopKey] = fiveStop;
					return callback();
				},
				function(callback){					
					for (var i = 0; i < retBaseObject.length; i++) {
						for (var j = 0; j < retBaseObject[i].trips[1].length; j++){
							var f = retBaseObject[i].trips[1][j].jsonSector;
							var totalFare = retBaseObject[i].jsonFlightPrice.up.totalFare;
							if (f.length == 1) {
								nonStopFlightCount = nonStopFlightCount+1;
								nonStop.push(totalFare);
							}
							if (f.length == 2) {
								oneStopFlightCount = oneStopFlightCount+1;
								oneStop.push(totalFare);
							}
							if (f.length == 3) {
								twoStopFlightCount = twoStopFlightCount+1;
								twoStop.push(totalFare);
							}
							if (f.length == 4) {
								threeStopFlightCount = threeStopFlightCount+1;
								threeStop.push(totalFare);
							}
							if (f.length == 5) {
								fourStopFlightCount = fourStopFlightCount+1;
								fourStop.push(totalFare);
							}
							if (f.length == 6) {
								fiveStopFlightCount = fiveStopFlightCount+1;
								fiveStop.push(totalFare);
							}
						}
					}					
					

					stopObj[nonStopKey] = nonStop;
					stopObj[oneStopKey] = oneStop;
					stopObj[twoStopKey] = twoStop;
					stopObj[threeStopKey] = threeStop;
					stopObj[fourStopKey] = fourStop;
					stopObj[fiveStopKey] = fiveStop;

					return callback();
				}
				
			],function(callback){
					for (var v in stopObj) {
						var _SOC = {
							key: "",
							lowPrice: "",
							keyVal: 0
						};
						stopList.push({key:'currency',value:flightComboSerVar.getSelectedCurrency()});
						if (typeof stopObj[v] !== 'undefined' && stopObj[v].length > 0) {
							_SOC.key = v;
							_SOC.lowPrice = flightComboSerVar.getStops(stopObj[v]);
							switch (v) {
							case nonStopKey:
								_SOC.keyVal = 1;
								_SOC.flightsCount = nonStopFlightCount;
							break;
							case oneStopKey:
								_SOC.keyVal = 2;
								_SOC.flightsCount = oneStopFlightCount;
							break;
							case twoStopKey:
								_SOC.keyVal = 3;
								_SOC.flightsCount = twoStopFlightCount;
							break;
							case threeStopKey:
								_SOC.keyVal = 4;
								_SOC.flightsCount = threeStopFlightCount;
							break;
							case fourStopKey:
								_SOC.keyVal = 5;
								_SOC.flightsCount = fourStopFlightCount;
							break;
							case fiveStopKey:
								_SOC.keyVal = 6;
								_SOC.flightsCount = fiveStopFlightCount;
							break;
							}
							if(_SOC.keyVal !== 'undefined' && _SOC.keyVal > 0){
								countStops++;
							}
							stopList.push(_SOC);
						}  
					}
					//return callback();
				});
			return stopList;
		},
		getOnwardStopsList:function(){
			var stopList = [];
			var countStops = 0;
			var nonStopFlightCount = 0,oneStopFlightCount=0,twoStopFlightCount=0,threeStopFlightCount=0,fourStopFlightCount=0,fiveStopFlightCount=0;
			var nonStop = [], oneStop = [], twoStop = [], threeStop = [], fourStop = [], fiveStop = [], stopObj = {};
			var baseObject = this.onwardFilterData;
			var nonStopKey = i18n.t("nonStop");
			var oneStopKey = i18n.t("oneStopKey");
			var twoStopKey = i18n.t("twoStopKey");
			var threeStopKey = i18n.t("threeStopKey");
			var fourStopKey = i18n.t("fourStopKey");
			var fiveStopKey = i18n.t("fiveStopKey");
			async.parallel([
				function(callback){					
					for (var i = 0; i < baseObject.length; i++) {
						for (var j = 0; j < baseObject[i].trips[0].length; j++){
							var f = baseObject[i].trips[0][j].jsonSector;
							var totalFare = baseObject[i].jsonFlightPrice.up.totalFare;
							if (f.length == 1) {
								nonStopFlightCount = nonStopFlightCount+1;
								nonStop.push(totalFare);
							}
							if (f.length == 2) {
								oneStopFlightCount = oneStopFlightCount+1;
								oneStop.push(totalFare);
							}
							if (f.length == 3) {
								twoStopFlightCount = twoStopFlightCount+1;
								twoStop.push(totalFare);
							}
							if (f.length == 4) {
								threeStopFlightCount = threeStopFlightCount+1;
								threeStop.push(totalFare);
							}
							if (f.length == 5) {
								fourStopFlightCount = fourStopFlightCount+1;
								fourStop.push(totalFare);
							}
							if (f.length == 6) {
								fiveStopFlightCount = fiveStopFlightCount+1;
								fiveStop.push(totalFare);
							}
						}
					}					
					

					stopObj[nonStopKey] = nonStop;
					stopObj[oneStopKey] = oneStop;
					stopObj[twoStopKey] = twoStop;
					stopObj[threeStopKey] = threeStop;
					stopObj[fourStopKey] = fourStop;
					stopObj[fiveStopKey] = fiveStop;
					return callback();
				},
				function(callback){
					for (var v in stopObj) {
						var _SOC = {
							key: "",
							lowPrice: "",
							keyVal: 0
						};
						stopList.push({key:'currency',value:flightComboSerVar.getSelectedCurrency()});
						if (typeof stopObj[v] !== 'undefined' && stopObj[v].length > 0) {
							_SOC.key = v;
							_SOC.lowPrice = flightComboSerVar.getStops(stopObj[v]);
							switch (v) {
							case nonStopKey:
								_SOC.keyVal = 1;
								_SOC.flightsCount = nonStopFlightCount;
							break;
							case oneStopKey:
								_SOC.keyVal = 2;
								_SOC.flightsCount = oneStopFlightCount;
							break;
							case twoStopKey:
								_SOC.keyVal = 3;
								_SOC.flightsCount = twoStopFlightCount;
							break;
							case threeStopKey:
								_SOC.keyVal = 4;
								_SOC.flightsCount = threeStopFlightCount;
							break;
							case fourStopKey:
								_SOC.keyVal = 5;
								_SOC.flightsCount = fourStopFlightCount;
							break;
							case fiveStopKey:
								_SOC.keyVal = 6;
								_SOC.flightsCount = fiveStopFlightCount;
							break;
							}
							if(_SOC.keyVal !== 'undefined' && _SOC.keyVal > 0){
								countStops++;
							}
							stopList.push(_SOC);
						}  
					}
					return callback();
				}
			]);
			return stopList;
		},
		getReturnStopsList:function(){
			var stopList = [];
			var countStops = 0;
			var nonStopFlightCount = 0,oneStopFlightCount=0,twoStopFlightCount=0,threeStopFlightCount=0,fourStopFlightCount=0,fiveStopFlightCount=0;
			var nonStop = [], oneStop = [], twoStop = [], threeStop = [], fourStop = [], fiveStop = [], stopObj = {};
			var baseObject = this.returnFilterData;
			var nonStopKey = i18n.t("nonStop");
			var oneStopKey = i18n.t("oneStopKey");
			var twoStopKey = i18n.t("twoStopKey");
			var threeStopKey = i18n.t("threeStopKey");
			var fourStopKey = i18n.t("fourStopKey");
			var fiveStopKey = i18n.t("fiveStopKey");
			async.parallel([
				function(callback){					
					for (var i = 0; i < baseObject.length; i++) {
						for (var j = 0; j < baseObject[i].trips[1].length; j++){
							var f = baseObject[i].trips[1][j].jsonSector;
							var totalFare = baseObject[i].jsonFlightPrice.up.totalFare;
							if (f.length == 1) {
								nonStopFlightCount = nonStopFlightCount+1;
								nonStop.push(totalFare);
							}
							if (f.length == 2) {
								oneStopFlightCount = oneStopFlightCount+1;
								oneStop.push(totalFare);
							}
							if (f.length == 3) {
								twoStopFlightCount = twoStopFlightCount+1;
								twoStop.push(totalFare);
							}
							if (f.length == 4) {
								threeStopFlightCount = threeStopFlightCount+1;
								threeStop.push(totalFare);
							}
							if (f.length == 5) {
								fourStopFlightCount = fourStopFlightCount+1;
								fourStop.push(totalFare);
							}
							if (f.length == 6) {
								fiveStopFlightCount = fiveStopFlightCount+1;
								fiveStop.push(totalFare);
							}
						}
					}					
					

					stopObj[nonStopKey] = nonStop;
					stopObj[oneStopKey] = oneStop;
					stopObj[twoStopKey] = twoStop;
					stopObj[threeStopKey] = threeStop;
					stopObj[fourStopKey] = fourStop;
					stopObj[fiveStopKey] = fiveStop;
					return callback();
				},
				function(callback){
					for (var v in stopObj) {
						var _SOC = {
							key: "",
							lowPrice: "",
							keyVal: 0
						};
						stopList.push({key:'currency',value:flightComboSerVar.getSelectedCurrency()});
						if (typeof stopObj[v] !== 'undefined' && stopObj[v].length > 0) {
							_SOC.key = v;
							_SOC.lowPrice = flightComboSerVar.getStops(stopObj[v]);
							switch (v) {
							case nonStopKey:
								_SOC.keyVal = 1;
								_SOC.flightsCount = nonStopFlightCount;
							break;
							case oneStopKey:
								_SOC.keyVal = 2;
								_SOC.flightsCount = oneStopFlightCount;
							break;
							case twoStopKey:
								_SOC.keyVal = 3;
								_SOC.flightsCount = twoStopFlightCount;
							break;
							case threeStopKey:
								_SOC.keyVal = 4;
								_SOC.flightsCount = threeStopFlightCount;
							break;
							case fourStopKey:
								_SOC.keyVal = 5;
								_SOC.flightsCount = fourStopFlightCount;
							break;
							case fiveStopKey:
								_SOC.keyVal = 6;
								_SOC.flightsCount = fiveStopFlightCount;
							break;
							}
							if(_SOC.keyVal !== 'undefined' && _SOC.keyVal > 0){
								countStops++;
							}
							stopList.push(_SOC);
						}  
					}
					return callback();
				}
			]);
			return stopList;
		},
		getStops: function(array){
			var outPut = [];
			if (typeof array !== 'undefined' && array.length > 0) {
				outPut = array.sort(function(a, b) {
					return a - b;
				});
			}
			return outPut[0];
		},
		getArrivalCodeFromURL:function(){
			var NBIATA = flightSerVar.getArrStr();
			var i, j,item,array = this.filterData,holder, condition=false;
			for(i = 0, j = array.length; i<j; i++){
				var dPoint = false;
				item = array[i];
					holder =  item.trips[0][item.trips[0].length -1].arrivalAirportCode;
					if(typeof holder !== "undefined" && holder===NBIATA){
						condition = true;
					}
			}
			if(condition==true){
				return flightSerVar.getArrStr();
			}else{
				return '';
			}
		},
		getOnwardArrivalCodeFromURL:function(){
			var NBIATA = flightSerVar.getArrStr();
			var i, j,item,array = this.onwardFilterData,holder, condition=false;
			for(i = 0, j = array.length; i<j; i++){
				var dPoint = false;
				item = array[i];
					holder =  item.trips[0][item.trips[0].length -1].arrivalAirportCode;
					if(typeof holder !== "undefined" && holder===NBIATA){
						condition = true;
					}
			}
			if(condition==true){
				return flightSerVar.getArrStr();
			}else{
				return '';
			}
		},
		getReturnArrivalCodeFromURL:function(){
			var NBIATA = flightSerVar.getDepStr();
			var i, j,item,array = this.returnFilterData,holder, condition=false;
			for(i = 0, j = array.length; i<j; i++){
				var dPoint = false;
				item = array[i];
					holder =  item.trips[1][item.trips[1].length -1].arrivalAirportCode;
					if(typeof holder !== "undefined" && holder===NBIATA){
						condition = true;
					}
			}
			if(condition==true){
				return flightSerVar.getDepStr();
			}else{
				return '';
			}
		},
		/**
		* Method to get URL query string 
		* @param Query Key
		* @returns
		*/
		getArrStr: function(){
			var arr = cmnGetURLQueryStr('arr')||cmnGetURLQueryStr('arr1');
			return arr;
		},
		functionNBASource:function(){
			var NBA = this.urlNearbyIata;
			var GFNA = this.getFilteredNearby();
			var RES = [];
			if(GFNA.length>0){
				RES = GFNA;
			}
			if(NBA!=""){
				RES.push(NBA);
			}
			return RES;
		},
		functionOnwardNBASource:function(){
			var NBA = this.urlNearbyIata;
			var GFNA = this.getOnwardFilteredNearby();
			var RES = [];
			if(GFNA.length>0){
				RES = GFNA;
			}
			if(NBA!=""){
				RES.push(NBA);
			}
			return RES;
		},
		functionReturnNBASource:function(){
			var NBA = this.urlNearbyIata;
			var GFNA = this.getReturnFilteredNearby();
			var RES = [];
			if(GFNA.length>0){
				RES = GFNA;
			}
			if(NBA!=""){
				RES.push(NBA);
			}
			return RES;
		},
		getFilteredNearby:function(){
			var nearby = [];
			var s = $(this.filterSelector.nearByAirport);
			s.each(function(){
				var $this = $(this);
				var $selVal = $.trim($this.val());
				if($this.is(':checked')){
					nearby.push($selVal);
				}
			});
			return nearby;
		},
		getOnwardFilteredNearby:function(){
			var nearby = [];
			var s = $(this.filterSelector.onwardNearByAirport);
			s.each(function(){
				var $this = $(this);
				var $selVal = $.trim($this.val());
				if($this.is(':checked')){
					nearby.push($selVal);
				}
			});
			return nearby;
		},
		getReturnFilteredNearby:function(){
			var nearby = [];
			var s = $(this.filterSelector.returnNearByAirport);
			s.each(function(){
				var $this = $(this);
				var $selVal = $.trim($this.val());
				if($this.is(':checked')){
					nearby.push($selVal);
				}
			});
			return nearby;
		},
		ccm:function(cur){
			//var baseObj = this.baseObj;
			var onwardBaseObj = this.onwardBaseObj;
			var returnBaseObj = this.returnBaseObj;
			var currency = this.cExR[cur];
			var ccobj = {};
			var cx = this.cExR;
			for(var j in cx){
				ccobj[j] = parseFloat(cx[j])/parseFloat(currency);
			}
			var $t = this;
			if(!$t.selectedFlightCombination.onwardTrip){
				async.series([
        		function(callback){
        			for(var i in onwardBaseObj){
						onwardBaseObj[i].jsonFlightPrice.up.uc = cur;
        				onwardBaseObj[i].jsonFlightPrice.up.totalFare = (parseFloat(onwardBaseObj[i].jsonFlightPrice.totalFare)*parseFloat(ccobj[onwardBaseObj[i].jsonFlightPrice.ic])).toFixed(2);
        				onwardBaseObj[i].jsonFlightPrice.up.baseFare = (parseFloat(onwardBaseObj[i].jsonFlightPrice.baseFare)*parseFloat(ccobj[onwardBaseObj[i].jsonFlightPrice.ic])).toFixed(2);
        				onwardBaseObj[i].jsonFlightPrice.up.taxes = (parseFloat(onwardBaseObj[i].jsonFlightPrice.taxes)*parseFloat(ccobj[onwardBaseObj[i].jsonFlightPrice.ic])).toFixed(2);
						
        			}

        			return callback();
        		},
        		function(callback){
        			$t.onwardFilterData = onwardBaseObj;
        			$t.setSelectedCurrency = cur;
        			return callback();
        		},
        		function(callback){
        			$t.loadOnwFilter();
					$t.resetOnwardPriceSlider($t.onwardFilterData);
        			return callback();
        		}
        		],function(err){			
				$t.onwardRender(true);	


				loadTemplate('flight-OnwFilter-fareCombo',flightComboSerVar.dynamicFilterdata,$('#filterBO'),flightComboSerVar.dynamicTemplate);
				
				setTimeout(function(){
							ULlessMore(['airlineName-filter-list_FF','_stopOverAirport-filter-list_FF']);
						}, 2000);
					

				flightComboSerVar.dynamicFilterdata.onwardAirlineNameWP = flightComboSerVar.dynamicFilterdata.onwardAirlineNameWP.sort(function(a,b){
					return a[1][0]-b[1][0];
					});
				$t.loadTemplate('filter_airlineIcons_template',$t.dynamicFilterdata.onwardAirlineNameWP,$('#_filter_airlineIcons_template'),$t.dynamicTemplate);
				loadAirlineGridwithOwl();
				
			});
				
			}else{
				
				
				async.series([
        		function(callback){
					for(var i in returnBaseObj){
        				returnBaseObj[i].jsonFlightPrice.up.uc = cur;
        				returnBaseObj[i].jsonFlightPrice.up.totalFare = (parseFloat(returnBaseObj[i].jsonFlightPrice.totalFare)*parseFloat(ccobj[returnBaseObj[i].jsonFlightPrice.ic])).toFixed(2);
        				returnBaseObj[i].jsonFlightPrice.up.baseFare = (parseFloat(returnBaseObj[i].jsonFlightPrice.baseFare)*parseFloat(ccobj[returnBaseObj[i].jsonFlightPrice.ic])).toFixed(2);
        				returnBaseObj[i].jsonFlightPrice.up.taxes = (parseFloat(returnBaseObj[i].jsonFlightPrice.taxes)*parseFloat(ccobj[returnBaseObj[i].jsonFlightPrice.ic])).toFixed(2);
        			}
        			return callback();
        		},
        		function(callback){
        			$t.returnFilterData = returnBaseObj;
        			$t.setSelectedCurrency = cur;
        			return callback();
        		},
        		function(callback){
        			$t.loadRetFilter();
					$t.resetReturnPriceSlider($t.returnFilterData);
        			return callback();
        		}
        		],function(err){					
				
	
				$t.returnRender(true);
				
				loadTemplate('flight-returnFilter-fareCombo',flightComboSerVar.dynamicFilterdata,$('#filterBO'),flightComboSerVar.dynamicTemplate);
				
				flightComboSerVar.dynamicFilterdata.returnAirlineNameWP = flightComboSerVar.dynamicFilterdata.returnAirlineNameWP.sort(function(a,b){
					return a[1][0]-b[1][0];
					});
				$t.loadTemplate('filter_airlineIcons_template',$t.dynamicFilterdata.returnAirlineNameWP,$('#_filter_airlineIcons_template'),$t.dynamicTemplate);
				
				setTimeout(function(){
							ULlessMore(['airlineName-filter-list_FFR','_stopOverAirport-filter-list_FFR']);
						}, 2000);
				loadAirlineGridwithOwl();

			});
			}
			
			
		},
		removeRecord: function(data,res){
			
			var onwData = flightComboSerVar.onwardBaseObj;
			var retData = flightComboSerVar.returnBaseObj;
			
			if(!flightComboSerVar.onwFlightSelected){
				for(var i in onwData){
					if(onwData[i].index==data.indexID){
						for(var j in onwData[i].trips[0]){
							var legTrip = onwData[i].trips[0][j];
								if(legTrip.tripLegIndex==data.legIndex){
									onwData[i].trips[0].splice(j,1);
									if(onwData[i].trips[0].length < 1){
										onwData.splice(i,1);
									}
									break;
								}						

						}
						break;
					}
				}
				
				//js obj changes so that the operations on filter data doesnt effect the global data
				var onwardBase = JSON.stringify(onwData);
				flightComboSerVar.onwardFilterData = JSON.parse(onwardBase);
				
				flightComboSerVar.onwardRender('removeRecord');
			}else{
				for(var i in retData){
					if(retData[i].index==data.indexID){

						for(var j in retData[i].trips[1]){
							var legTrip = retData[i].trips[1][j];
								if(legTrip.tripLegIndex==data.legIndex){
									retData[i].trips[1].splice(j,1);
									if(retData[i].trips[1].length < 1){
										retData.splice(i,1);
									}
									break;
								}
							}
						break;
					}
				}
				
				//js obj changes so that the operations on filter data doesnt effect the global data
				var returnBase = JSON.stringify(retData);
				flightComboSerVar.returnFilterData = JSON.parse(returnBase);
				
				flightComboSerVar.returnRender('removeRecord');
			}
			
			/*flightComboSerVar.loadFilter();
			loadTemplate('flight-filter-view-fareCombo',flightComboSerVar.dynamicFilterdata,$('#filterFF'),flightComboSerVar.dynamicTemplate);
			*/
			/*flightComboSerVar.onwardFilterData = onwData;
			flightComboSerVar.returnFilterData = retData;
			flightComboSerVar.render('removeRecord');*/

		} ,
		renderSelectedFareCombo:function(index){
			var $t = this;
			var onwFare = 0 , retFare=0,totalFare=0;
					
					if($t.selectedFlightCombination.onwardTripObj){
						onwFare = $t.selectedFlightCombination.onwardTripObj.jsonFlightPrice.up.totalFare ;
					}
					if($t.selectedFlightCombination.returnTripObj){
						retFare = $t.selectedFlightCombination.returnTripObj.jsonFlightPrice.up.totalFare ;
					}
					
			totalFare = (parseFloat(onwFare) + parseFloat(retFare)).toFixed(2) ;
			
			var onwardRenderedData = $t.selectedFlightCombination.onwardTrip;
			var returnRenderedData = $t.selectedFlightCombination.returnTrip;
			async.series([
				function(callback){
					return callback();
				}],function(){	
					var selectedTripData = {
						onwardTrip:onwardRenderedData || {},
						returnTrip:returnRenderedData || {},
						maps:flightComboSerVar.hashmap,
						uuid:flightComboSerVar.uuid,
						headerInfo:flightComboSerVar.headerInfo,
						totalFare:totalFare,
				        uc:$t.setSelectedCurrency || 'SAR',
						pax:$t.baseData.searchCriteria.guest,
						lang: i18n.options.lng
					};
					
				   /*var offsetPopTop = $('.primary-content').offset().top;
					$('html, body').animate({scrollTop:offsetPopTop}, 500);*/
				   loadTemplate('fareCombination-selected-onward',selectedTripData,$('#selectedOnward'),flightComboSerVar.dynamicTemplate);
				   loadTemplate('fareCombination-selected-return',selectedTripData,$('#selectedReturn'),flightComboSerVar.dynamicTemplate);
					loadTemplate('fareCombination-selected-price',selectedTripData,$('.price-details'),flightComboSerVar.dynamicTemplate);
					loadTemplate('fareCombination-selected-onwFlightInfo',selectedTripData,$('#selectedOnwFInfo'),$t.dynamicTemplate);
					loadTemplate('fareCombination-selected-retFlightInfo',selectedTripData,$('#selectedRetFInfo'),$t.dynamicTemplate);
					
					pricetagConvert.init(); // divide decimal point	
					_langGlobal.langInit(); // initialise i18n
					
					
					$('.selected-pan').addClass('colorAnimation');
			});
				
		},
		renderSortedOnwardData:function(){
		var $t = this;		
			
			var onwTrips = JSON.parse(JSON.stringify($t.onwardTrips));
					
			paginationOptInitFF = cmnPaginationConfig(flightComboSerVar.pageselectCallback);
			$("#pagination").pagination($t.onwardTrips.length, paginationOptInitFF,onwTrips );	
					
			
			_langGlobal.langInit(); // initialise i18n
			  pricetagConvert.init();			
					
		
		},
		renderSortedReturnData:function(){
		
		var $t = this;	
		
		var retTrips = JSON.parse(JSON.stringify($t.returnTrips));
					
		paginationOptInitFF = cmnPaginationConfig(flightComboSerVar.pageselectCallback);
		$("#pagination").pagination($t.returnTrips.length, paginationOptInitFF,retTrips );	
			
		_langGlobal.langInit(); // initialise i18n
		  pricetagConvert.init();
					
		
		},
	 generateComboFilterUI:function(array,classname){
		  classname = classname || 'youHaveFiltered';
		//get the target HTML UL for clear filters
		var clearFilterTarget = $('.'+classname).find('ul');
		clearFilterTarget.empty().append('<li class="yhfComboReset '+classname+'Reset">'+i18n.t("reset")+'</li>');
		//get the target HTML LI for clear filters
		var clearFilterli = clearFilterTarget.find('li');
		/*if(flightComboSerVar.onwFilterUIArry.length>0 || 
		                                       flightComboSerVar.retFilterUIArry.length>0){
		 $('.fareComboFiltered').slideDown();

		}
		else {
				$('.fareComboFiltered').slideUp();
                return;
		}*/
		if(array.length>0){
		  $('.'+classname).slideDown();
			for(var i=0; i<array.length; i++){
				 var ulHtml  = '';
				 
					  ulHtml  += '<li data-source="'+array[i].source+'" data-value="'+array[i].value+'" data-id="'+array[i].id+'" class="tooltipCustom">';
					  
					  if(array[i].trip=='onward'){
					   ulHtml  += '<span class="tooltipCustomCont">Departure</span>';
					  }else if(array[i].trip=='return'){
						 ulHtml  += '<span class="tooltipCustomCont">Return</span>';  
					  }else {
					  ulHtml  += '<span class="tooltipCustomCont">Both</span>';
 
					  }
					  ulHtml  +=  ''+array[i].display+' <span class="flaticon-delete30 _TabComboFilterRemove"></span></li>';
		  
					  
					  
					  clearFilterTarget.find('li:last-child').before(ulHtml);
					  
			}
		}else{
		  $('.'+classname).slideUp();
		}
   } ,
   
   scrollToTopResults:function(){
	   
	   var offsetPopTop = $('.primary-content').offset().top;
				$('html, body').animate({scrollTop:offsetPopTop}, 500);
   },

	//Pagination Function
   pageselectCallback : function(page_index, filterData){
		//Item per page
		var items_per_page = 30;
		var max_elem = Math.min((page_index+1) * items_per_page, filterData.length);
		//Index Starting number
		var start = page_index*items_per_page;
		//Index ending number
		var end = max_elem;
		//final result after indexing
		if(filterData.length==0){
			$('.fNoFilteredResults').attr('style','display:block');
		}else{
			$('.fNoFilteredResults').attr('style','display:none');
		}
		
		var result = filterData.slice(start,end);
		//var trip =  ((!flightComboSerVar.onwFlightSelected)?'onward':'return');
		var data = {
			maps: flightComboSerVar.hashmap,
			headerInfo: flightComboSerVar.headerInfo,
			uuid: flightComboSerVar.uuid,
			fcTrips:result,
			tripType: cmnGetURLQueryStr('tripType'),
			lang: i18n.options.lng,
			uc:flightComboSerVar.setSelectedCurrency || 'SAR',
			trip:((!flightComboSerVar.onwFlightSelected)?1:2)
		};	
		loadTemplate('flight-fareCombo-view',data,$('.flightResultContainer'),flightComboSerVar.dynamicTemplate);
		setTimeout(function(){
			_langGlobal.langInit(); // initialise i18n
			//tooltip for merchandise
			$('.tt').tooltip();
		},1000);
		/*if(flightSerVar.wegoRslts){
			$('h2.allFlights').show();
			flightSerVar.wegoRslts = false;
		}
		if(flightSerVar.currencyChange){
			$('.yhfReset').trigger('click');
			flightSerVar.currencyChange = false;
		}
		$('.dynamic_results_loader').hide();
		if(flightSerVar.validateMS){
			$('.youHaveFiltered').hide();
		}
		flightSerVar.validateMS = false;
		//flightSerVar.langRender();	
		 //flightSerVar.preSelectRadio();  
		setTimeout(function(){			
			//for selecting the radio input when clicking on li element.
			$('.fltResultsGridBrd').each(function(){
				$(this).find('li').on('click',function(){
					 $(this).find('input:radio').prop('checked', true);
					flightSerVar.dyanamicRadioSelection($(this));
				});
			});
		},100);
		$(".flightResultContainer .fltResults .flightTo .plus1Date.tooltipCustom").mouseenter(function() {
			  $(this).parent().addClass('toolTipOverlap')
		   }).mouseleave(function () {
			   $(this).parent().removeClass('toolTipOverlap')
		 });*/
		var offsetPopTop = $('#_bodyContainer').offset().top;
		$('html, body').animate({scrollTop:offsetPopTop}, 500);
		return false;
	},
	
   //Reload Filters
   reloadOnwFilters : function(dynamicFilterdata){
	   
	
		flightComboSerVar.resetOnwardPriceSlider(flightComboSerVar.onwardFilterData);
		
		
		flightSerVar.loadTemplate('stops-filter-list_FF',dynamicFilterdata,$('#stops-filter-list_FF'),flightSerVar.dynamicTemplate);
	
	
	flightSerVar.loadTemplate('airlineName-filter-list_FF',dynamicFilterdata,$('#airlineName-filter-list_FF'),flightSerVar.dynamicTemplate);
	flightSerVar.loadTemplate('_stopOverAirport-filter-list_FF',dynamicFilterdata,$('#_stopOverAirport-filter-list_FF'),flightSerVar.dynamicTemplate);
	
		
		
		flightComboSerVar.dynamicFilterdata.onwardAirlineNameWP = flightComboSerVar.dynamicFilterdata.onwardAirlineNameWP.sort(function(a,b){
		return a[1][0]-b[1][0];
		});
		loadTemplate('filter_airlineIcons_template',flightComboSerVar.dynamicFilterdata.onwardAirlineNameWP,$('#_filter_airlineIcons_template'),flightComboSerVar.dynamicTemplate);
		loadAirlineGridwithOwl();
	 },
	
   //Reload Filters
   reloadRetFilters : function(dynamicFilterdata){
	   
		flightSerVar.loadTemplate('stops-filter-list_FFR',dynamicFilterdata,$('#stops-filter-list_FFR'),flightSerVar.dynamicTemplate);
	
	
		flightSerVar.loadTemplate('airlineName-filter-list_FFR',dynamicFilterdata,$('#airlineName-filter-list_FFR'),flightSerVar.dynamicTemplate);
		flightSerVar.loadTemplate('_stopOverAirport-filter-list_FFR',dynamicFilterdata,$('#_stopOverAirport-filter-list_FFR'),flightSerVar.dynamicTemplate);
		

		
		flightComboSerVar.dynamicFilterdata.returnAirlineNameWP = flightComboSerVar.dynamicFilterdata.returnAirlineNameWP.sort(function(a,b){
			return a[1][0]-b[1][0];
			});
		loadTemplate('filter_airlineIcons_template',flightComboSerVar.dynamicFilterdata.returnAirlineNameWP,$('#_filter_airlineIcons_template'),flightComboSerVar.dynamicTemplate);

		loadAirlineGridwithOwl();
	 },
	 
     loadReturnFlights : function(){
			
			flightComboSerVar.returnRender(false,function(renderedData,returnTrips){
					var retTrips = JSON.parse(JSON.stringify(returnTrips));
					
					
					//load filters
					flightComboSerVar.loadRetFilter();
					
					loadTemplate('flight-returnFilter-fareCombo',flightComboSerVar.dynamicFilterdata,$('#filterBO'),flightComboSerVar.dynamicTemplate);
					loadTemplate('flight-sort-fareCombo',{retFF:true},$('#flightResultsSortingPanel'),flightComboSerVar.dynamicTemplate);
					
					retTrips = retTrips.sort(function(a, b){
						return a.totalFare-b.totalFare;
					});
					paginationOptInitFF = cmnPaginationConfig(flightComboSerVar.pageselectCallback);
					$("#pagination").pagination(returnTrips.length, paginationOptInitFF,retTrips );	
						
		
					flightComboSerVar.resetReturnPriceSlider(flightComboSerVar.returnFilterData);
					
					setTimeout(function(){
							ULlessMore(['airlineName-filter-list_FFR','_stopOverAirport-filter-list_FFR']);
							_langGlobal.langInit();
							pricetagConvert.init(); // divide decimal point	
						}, 2000);
							
							
							
					flightComboSerVar.dynamicFilterdata.returnAirlineNameWP = flightComboSerVar.dynamicFilterdata.returnAirlineNameWP.sort(function(a,b){
					return a[1][0]-b[1][0];
					});
					loadTemplate('filter_airlineIcons_template',flightComboSerVar.dynamicFilterdata.returnAirlineNameWP,$('#_filter_airlineIcons_template'),flightComboSerVar.dynamicTemplate);
					loadAirlineGridwithOwl();
					
					if(flightSerVar.topairline!==''){						
						$('#airlineName-filter-list_FFR  li').each(function(){
							if($(this).find('input').val()==flightSerVar.topairline){								
								$(this).find('input[type=checkbox]').trigger('click');
							}
							});
					}
					
					if(flightSerVar.nonStopFlights=='true'){
						$('#nonStopRoundTripFlights').trigger('click');
								$('#nonStopOneWayFlights').trigger('click');
								$('#nonStopMultiCityFlights').trigger('click');
									$('#stops-filter-list_FFR ul li').each(function(){
									if($(this).find('input').val()=='1'){
										$(this).find('input[type=checkbox]').trigger('click');
									}
								});
							}
					}); 
					
					

			
	 }
  }	
}());


function fcReviewRender(){
	 
	$('.resultBlock').fadeOut(2000,function(){
		dynamicJsCssLoading('results'+(i18n.options.lng == "en" ?"":'-'+i18n.options.lng)+'.css','/common/themes/v2/css/reviewPage'+(i18n.options.lng == "en"?"":'-'+i18n.options.lng)+'.css','css');
		$('.resultsPage').addClass('opc flightTravel opcFC');
		});
		setTimeout(function(){
			$('.itineraryBlock').fadeIn(1000);
		},2000);
	setTimeout(function(){
		$('.modifyTog,.sCModify,.modifyBlock a,#_filter_airlineIcons_template,.flightFound').slideUp('slow');
	  },2500);	
		
	  var res = flightComboSerVar.fareRes;

	  if(typeof res!="undefined"){
	   var obj = res.response;
	   
	   $.get('/common/themes/v2/tmpl/flight/flightReview.ejs?v='+Math.random(),{},function(template){
				obj.lang = lang;
			      obj.currency=obj.ISOCurrency;
			      
			     var data = {
			    	     responseData:obj
			   	     }
					 loadTemplate('fareCombo_pop_ups',data,$('#pop_ups'),template);
					loadTemplate('fareCombo-review-flight',data,$('.itineraryBlock'),template);
					 loadTemplate('fareCombo-tripSummary',data,$('#fareComboTripSummary'),template);
					loadTemplate('provide-traveller-details',data,$('#provideTravellerDetails'),template);
					/*loadTemplate('payment',data,$('#payment'),template);
				   loadTemplate('redeem-points',data,$('#redeem-points'),template);*/
				   loadTemplate('share_itenary',data,$('#shareItenary'),template);
				   
					flightComboSerVar.dynamicTemplate = template;
					 
					 $('._saveTravellerDetails').attr('data-pid',obj.productId);
					 $('#FTDP').attr('data-pid',obj.productId);
					 
					 //load coupon data 
					$('.redeemPoints .nav li a').click(function (e) {
					  e.preventDefault()
					  $(this).tab('show')
					});
					
					 
					 initfcReview();
					 initTravelerDynamo();
				   
				   //Init Payment Panel
					initPaymentPanel();
				
					/**
					 * Date of birth Initilization for traveller details page
					 */	/* [[ Flight Summary Travellers info ]]*/
					fltSmryTraDrpDwn();
					$('.rFpriceInfo #showHideFareDetails a').on('click', function(){
							$('.rFpriceInfo #showHideFareDetails ul').slideToggle();
						});
					$('.fcFligtTo').click(function(){
						$(this).next().slideToggle('slow');
						$(this).toggleClass("open");
						
					});
					$('._dpSelector').each(function(){
						var maxAge = $(this).attr('data-maxage');
						$(this).birthdayPicker({
							maxAge: maxAge,
							monthFormat:'short',
							dateFormat:'littleEndian',
							callback:function(e){
							},
						});	
					});

					hijriCalGen();
	
					 flyinCountDown.init({countDownElm:'_countDown-Value',displayElm:'countdown'});
					  
						/*Flight Review COMBO page sidebar scrollToFixed*/
						fltReviewComboSummery();
						var gccList = "SA|AE|BH|KW|QA|OM";
						var gccArr = gccList.split('|');
						var tarN = $('._userPassportInfo .nationalidBody').find('._nationality');
						var tarI = $(' ._userPassportInfo .nationalidBody').find('._issuingCountry');
						tarN.find('option').each(function(){
							if($(this)[0].value!="" && gccArr.indexOf($(this)[0].value)==-1){
								$(this).remove();
							}
						});
						tarI.find('option').each(function(){
							if($(this)[0].value!="" && gccArr.indexOf($(this)[0].value)==-1){
								$(this).remove();
							}
						});
					$('[id=countryNames]').customselect();
					getCountryList();
					$('.currency').hide();
					$('.lang, .language').hide();
					$('.country').hide();
					$('.tt').tooltip();//tooltip for merchandise
					//$.loadingPageAnimation();	
					pricetagConvert.init();
					 
					 
					 flightSerVar.dynamicTemplate = template;
					 
					 
					 $('#fcStepsText').html('<div><strong>'+i18n.t('CngrtsYorTripReady')+'<small>'+i18n.t('enterYourDetailsPay')+' <label> '+'<elm>'+i18n.t(data.responseData.flightItineraries.jsonFlightPrice.up.uc)+'</elm> '+data.responseData.flightItineraries.jsonFlightPrice.up.totalFare+'</label>' + '</small></strong></div>');
					 $('.selected .flightDtls div').fadeIn(1500);
					 // Google Analytics Page View trigger.
					 /* dataLayer.push({
						  'event':'VirtualPageview',
						  'virtualPageURL':window.location.href.split('com')[1],
						  'virtualPageTitle':'Flight FC Review'
					}); */

					 
					 
					 
			});
	  
	  }
					
}


function initfcReview(){
	
	
	$('.continueToPayment').click(function(){
	if($('.fcSteps.comboSteps').length){
		var offsetPopTop = $('.fcSteps.comboSteps').offset().top;
		 $('html, body').animate({scrollTop:offsetPopTop}, 500);
		}
		var lang= i18n.options.lng
		
		var reviewPageCSS = 'reviewPage.css';
		if(lang.indexOf('ar') > -1){
			reviewPageCSS = 'reviewPage-ar.css';
		}
		
		/*var res = flightComboSerVar.fareRes;

	  if(res){
	   var obj = res.response;
			      
		 var data = {
				 responseData:obj
			 }
		
		loadTemplate('review-terms',data,$('#review-terms'),flightComboSerVar.dynamicTemplate);
	  }*/
		
		$(".loading_popup_flight_ff").addClass('active');
		$('.pBar span:eq(2)').addClass('fMove');
		$('.pBar strong').addClass('completed');
		$('#cssload-contain span').text("Loading Traveller Detail page");
		setTimeout(function(){$(".loading_popup_flight_ff").removeClass('active');},2000);
		$('.fcSteps li:eq(2)').addClass('selected').removeClass('active');	
		//setTimeout(function(){$('head').append('<link href="/common/themes/v2/css/'+reviewPageCSS+'" rel="stylesheet"/>');},800);
		$('.fcSteps li:eq(2) .flightDtls').removeClass('nav-ic');
		$('.fcSteps li:eq(2) .flightDtls').addClass('cart-ic');
		$('.selected .flightDtls div').fadeIn(2000);
		$('.itineraryBlock').fadeOut(1500); 
		$('#fcProvideTravellerDetails,#provideTravellerDetails,#review-terms,._saveTravellerDetails,#fcFlightTripSummary').fadeIn(1500); 
		$('.modifyTog,.sCModify,.modifyBlock a,#_filter_airlineIcons_template,.flightFound').slideUp('slow');
		$('._saveTravellerDetails').show();
		
		
		
		//pre poulate for fare Chnage
		if($('#prePopulatePassengerDetails')  && $('#prePopulatePassengerDetails').val()){
			var prePopulatePassengerDetails = JSON.parse($('#prePopulatePassengerDetails').val());
			$('._txtEmail').val(prePopulatePassengerDetails.email);
			$('._txtPhone').val(prePopulatePassengerDetails.ph);
			for(var paxIndex in prePopulatePassengerDetails.paxList.at){
				$('._txtFName:eq('+paxIndex+')').val(prePopulatePassengerDetails.paxList.at[paxIndex]['gn']);
				//$('._txtMName:eq('+paxIndex+')').val(prePopulatePassengerDetails.paxList.at[paxIndex]['gn']);
				$('._txtLName:eq('+paxIndex+')').val(prePopulatePassengerDetails.paxList.at[paxIndex]['sn']);
				$('._txtPNum:eq('+paxIndex+')').val(prePopulatePassengerDetails.paxList.at[paxIndex].doc.di);
				$('._txtTitle :eq('+paxIndex+')').val(prePopulatePassengerDetails.paxList.at[paxIndex].title);
			//	$('#phoneCountryCode:eq('+paxIndex+')').val(prePopulatePassengerDetails.paxList.at[paxIndex].doc.di);
				//$('._txtPNum:eq('+paxIndex+')').val(prePopulatePassengerDetails.paxList.at[paxIndex].doc.di);
				prePopulateDateUpdate($('._dob:eq('+paxIndex+')') ,prePopulatePassengerDetails.paxList.at[paxIndex].doc.bd);
				prePopulateDateUpdate($('._passportExpiryDate:eq('+paxIndex+')') ,prePopulatePassengerDetails.paxList.at[paxIndex].doc.exd);
				prePopulateDateUpdate($('._passportIssuedDate:eq('+paxIndex+')') ,prePopulatePassengerDetails.paxList.at[paxIndex].doc.efd);
			
			//Nationality Pre populating 
			$('._nationality:eq('+paxIndex+')').each(function(){
				if($(this).parents('.custom-select-v3').is(':visible')){
					$(this).parents('.custom-select-v3').find('a span').text('');
					$(this).parents('.custom-select-v3').find('a span').text($(this).parents('.custom-select-v3').find('ul li[data-value="'+prePopulatePassengerDetails.paxList.at[paxIndex].doc.dia+'"]').attr('data-cname'));
					var nationality = $(this).parents('.custom-select-v3').find('._nationality option[value="'+prePopulatePassengerDetails.paxList.at[paxIndex].doc.dia+'"]');
					nationality.prop('selected','selected');
				}
			});
			//Issuing Country 
			$('._issuingCountry:eq('+paxIndex+')').each(function(){
				if($(this).parents('.custom-select-v3').is(':visible')){
					$(this).parents('.custom-select-v3').find('a span').text('');
					$(this).parents('.custom-select-v3').find('a span').text($(this).parents('.custom-select-v3').find('ul li[data-value="'+prePopulatePassengerDetails.paxList.at[paxIndex].doc.dil+'"]').attr('data-cname'));
					var nationality = $(this).parents('.custom-select-v3').find('._issuingCountry option[value="'+prePopulatePassengerDetails.paxList.at[paxIndex].doc.dil+'"]');
					nationality.prop('selected','selected');
				}
	});
			
			}
		}
		
		var url = window.location.href+'&showTravDetFC=true';		
		//history.pushState('', 'New Page Title',url);
		history.replaceState('', 'New Page Title',url);
		
	});
}
		
		
function changeOnwFlight(){
	
	flightComboSerVar.isActive=true;
	flightSerVar.isActive=false;
	
	
					 
	 //highlight FF btn
	$('#_FFSec').removeClass('btn-default');
	$('#_bestOffersSec').addClass('btn-default');
	$('.primary-content').addClass('fResultSec');

	var html='<strong class="title">'+i18n.t('selectOnwardFlight')+'</strong><div class="flightDtls flaticon-black401"><div></div></div>';
	$('#selectedOnwFlight').html(html);
	$('.fcSteps li:eq(0)').removeClass('selected').addClass('active');
	$('.fcSteps li:eq(2)').removeClass('selected').removeClass('active');
	$('.pBar strong').removeClass('scltRtn');
	$('.pBar span:eq(0)').removeClass('fMove'); 
	$('#selectedRetFlight').removeClass('opacity colorAnimation active');
	
	$(".fcSteps li:eq(2) .title").attr('data-i18n','buildYourItinerary');
	$('.fcSteps li:eq(2)').removeClass('opacity colorAnimation active');
	$('.fcSteps li:eq(2) .flightDtls').removeClass('cart-ic');
	$('.fcSteps li:eq(2) .flightDtls').addClass('nav-ic');
	$('.fcSteps li:eq(2) .flightDtls > div').hide();
				
	
	flightComboSerVar.dynamicTemplate = flightComboSerVar.resultTemplate;
	flightSerVar.dynamicTemplate = flightComboSerVar.resultTemplate;
	
	$('#filterBO').empty(); //prevent unusual behaviour on edit of flights
	//$('#filterBO').fadeIn(1000);
	if(flightComboSerVar.rtnFlightSelected){
		$('#rtnFltEdit').hide(); //return Flt cannot be edited without selection of onw flt
	}
	flightComboSerVar.returnEdit=false;  //considering as new flow if at all return edit also clkd
	
	flightComboSerVar.initFCData('onw');
	
	// curr change happened in bestOffers
		  if(flightSerVar.renderFBFOffers==true){
			   flightComboSerVar.ccm(flightComboSerVar.setSelectedCurrency);
				_langGlobal.langInit();
				pricetagConvert.init(); // divide decimal point	

		  }else {
	flightComboSerVar.onwardRender(false,function(renderedData,onwardTrips){
	
	var onwTrips = JSON.parse(JSON.stringify(onwardTrips));
	
	paginationOptInitFF = cmnPaginationConfig(flightComboSerVar.pageselectCallback);
	$("#pagination").pagination(onwardTrips.length, paginationOptInitFF,onwTrips );	
	
	if(!flightComboSerVar.checkInit)					
	flightComboSerVar.init();	
	
	//flightComboSerVar.initFCData('onw');

	flightComboSerVar.loadOnwFilter();
	flightComboSerVar.updateFilghtCount();

	flightComboSerVar.filterUIArry = [];  // clear filter data if any
	flightComboSerVar.generateComboFilterUI([]); //clear selected filters UI
	
	
	loadTemplate('flight-OnwFilter-fareCombo',flightComboSerVar.dynamicFilterdata,$('#filterBO'),flightComboSerVar.dynamicTemplate);
	
	flightComboSerVar.resetOnwardPriceSlider(flightComboSerVar.onwardFilterData);
	
	flightComboSerVar.dynamicFilterdata.onwardAirlineNameWP = flightComboSerVar.dynamicFilterdata.onwardAirlineNameWP.sort(function(a,b){
	return a[1][0]-b[1][0];
	});
	loadTemplate('filter_airlineIcons_template',flightComboSerVar.dynamicFilterdata.onwardAirlineNameWP,$('#_filter_airlineIcons_template'),flightComboSerVar.dynamicTemplate);
	loadAirlineGridwithOwl();
	
	setTimeout(function(){
			ULlessMore(['airlineName-filter-list_FF','_stopOverAirport-filter-list_FF']);
		}, 2000);
		
	_langGlobal.langInit();
	
	pricetagConvert.init(); // divide decimal point	
	
	});

	}
	
	loadTemplate('flight-sort-fareCombo',{onwFF:true},$('#flightResultsSortingPanel'),flightComboSerVar.dynamicTemplate);
	
	flightComboSerVar.updateFilghtCount();
	
	//$('.comboSteps').show(2500);
	$('.itineraryBlock,#fcProvideTravellerDetails,#provideTravellerDetails,#review-terms,._saveTravellerDetails,#fcFlightTripSummary,.fcSuccessAlert').fadeOut(500,function(){
						$('.resultBlock').fadeIn(1800);
		dynamicJsCssLoading('reviewPage.css','/common/themes/v2/css/results.css','css');		
    	dynamicJsCssLoading('reviewPage-ar.css','/common/themes/v2/css/results-ar.css','css');
						
		});
		
	setTimeout(function(){
						$('.modifyTog,.modifyBlock a,#_filter_airlineIcons_template,.flightFound').slideDown('slow');
		},2500);
		
	//change url to results from review-flight

	//getSearchURL(flightComboSerVar.fareRes.response.changeFlightOpts);
	
	if(flightComboSerVar.fareRes && flightComboSerVar.fareRes.response){
		changeEditSearchUrl();
	}
	flyinCountDown.destroyCountDown(); // re-initialize
	
	//show currency,country,lang dropdowns
	$('.currency').show();
	$('.country').show();
	$('.lang, .language').show();
		
}	

function changeRtnFlight(){
	flightComboSerVar.isActive=true;
	flightSerVar.isActive=false;					 
	flightComboSerVar.returnEdit=true;
	flightComboSerVar.rtnFlightSelected=false;
	
	//highlight FF btn
	$('#_FFSec').removeClass('btn-default');
	$('#_bestOffersSec').addClass('btn-default');
	$('.primary-content').addClass('fResultSec');
	
	var html='<strong class="title">'+i18n.t('selectReturnFlight')+'</strong><div class="flightDtls flaticon-black401"><div></div></div>';
	$('#selectedRetFlight').html(html);
	//$('.fcSteps li:eq(0)').removeClass('selected').addClass('active');
	$('.fcSteps li:eq(1)').removeClass('selected').removeClass('active');
	$('.fcSteps li:eq(2)').removeClass('selected').removeClass('active');
	$('.pBar strong').removeClass('scltItnry completed');
	$('.pBar strong').addClass('scltRtn');
	$('.pBar span:eq(1), .pBar span:eq(2)').removeClass('fMove'); 
	$(".fcSteps li:eq(2) .title").attr('data-i18n','buildYourItinerary');
	$('.fcSteps li:eq(2)').removeClass('opacity colorAnimation active');
	$('.fcSteps li:eq(2) .flightDtls').removeClass('cart-ic');
	$('.fcSteps li:eq(2) .flightDtls').addClass('nav-ic');
	$('.fcSteps li:eq(2) .flightDtls > div').hide();
	
	flightComboSerVar.dynamicTemplate = flightComboSerVar.resultTemplate;
	flightSerVar.dynamicTemplate = flightComboSerVar.resultTemplate;
	
	$('#filterBO').empty(); //prevent unusual behaviour on edit of flights
	//$('#filterBO').fadeIn(1000);
	loadTemplate('flight-sort-fareCombo',{retFF:true},$('#flightResultsSortingPanel'),flightComboSerVar.dynamicTemplate);
	

	// load return flights
	flightComboSerVar.returnRender(false,function(renderedData,returnTrips){
	var retTrips = JSON.parse(JSON.stringify(returnTrips));
	
	paginationOptInitFF = cmnPaginationConfig(flightComboSerVar.pageselectCallback);
	$("#pagination").pagination(returnTrips.length, paginationOptInitFF,retTrips );	
		
	/*flightComboSerVar.loadFilter();
	flightComboSerVar.updateFilghtCount();*/
	
	flightComboSerVar.loadRetFilter();
	loadTemplate('flight-returnFilter-fareCombo',flightComboSerVar.dynamicFilterdata,$('#filterBO'),flightComboSerVar.dynamicTemplate);
	
	flightComboSerVar.resetReturnPriceSlider(flightComboSerVar.returnFilterData);
	
	
	flightComboSerVar.dynamicFilterdata.returnAirlineNameWP = flightComboSerVar.dynamicFilterdata.returnAirlineNameWP.sort(function(a,b){
	return a[1][0]-b[1][0];
	});
	loadTemplate('filter_airlineIcons_template',flightComboSerVar.dynamicFilterdata.returnAirlineNameWP,$('#_filter_airlineIcons_template'),flightComboSerVar.dynamicTemplate);
	loadAirlineGridwithOwl();

	
	flightComboSerVar.filterUIArry = [];  // clear filter data if any
	flightComboSerVar.generateComboFilterUI(flightComboSerVar.filterUIArry);
	flightComboSerVar.updateFilghtCount();	
	
	setTimeout(function(){
			ULlessMore(['airlineName-filter-list_FFR','_stopOverAirport-filter-list_FFR']);
		}, 2000);
			_langGlobal.langInit();
			pricetagConvert.init(); // divide decimal point	
	
	}); 
	

	//$('.comboSteps').show(2500);

	$('.itineraryBlock,#fcProvideTravellerDetails,#provideTravellerDetails,#review-terms,._saveTravellerDetails,#fcFlightTripSummary,.fcSuccessAlert').fadeOut(500,function(){
						$('.resultBlock').fadeIn(1800);
		dynamicJsCssLoading('reviewPage.css','/common/themes/v2/css/results.css','css');		
    	dynamicJsCssLoading('reviewPage-ar.css','/common/themes/v2/css/results-ar.css','css');
						
		});
	setTimeout(function(){
						$('.modifyTog,.modifyBlock a,#_filter_airlineIcons_template,.flightFound').slideDown('slow');
		},2500);
	
	if(flightComboSerVar.fareRes && flightComboSerVar.fareRes.response){
		changeEditSearchUrl();
	}	
	flyinCountDown.destroyCountDown(); // re-initialize
	
	
	//show currency,country,lang dropdowns
	$('.currency').show();
	$('.country').show();
	$('.lang, .language').show();
	
}


function changeEditSearchUrl(){
	
	
	/**
	    * Window.location.origin Fix for IE
	    * @site http://tosbourn.com/a-fix-for-window-location-origin-in-internet-explorer/
	    */
	if (!window.location.origin) {
		window.location.origin = window.location.protocol + "//" + window.location.hostname + (window.location.port ? ':' + window.location.port: '');
	}
	var base_url = window.location.origin;
	
	var result = 'flight/result?'+$.param(flightComboSerVar.fareRes.response.changeFlightOpts);
	var url = window.location.origin+'/'+result;	
	
	
	//history.pushState('', 'New Page Title',url);
	history.replaceState('', 'New Page Title',url);
	
}

 
(function(){var n,t=[].indexOf||function(n){for(var t=0,e=this.length;e>t;t++)if(t in this&&this[t]===n)return t;return-1};n=jQuery,n.fn.validateCreditCard=function(e,a){var r,l,i,c,u,h,v,o,d,f,p,s,g;for(i=[{name:"amex",pattern:/^3[47]/,valid_length:[15]},{name:"diners_club_carte_blanche",pattern:/^30[0-5]/,valid_length:[14]},{name:"diners_club_international",pattern:/^36/,valid_length:[14]},{name:"jcb",pattern:/^35(2[89]|[3-8][0-9])/,valid_length:[16]},{name:"laser",pattern:/^(6304|670[69]|6771)/,valid_length:[16,17,18,19]},{name:"visa_electron",pattern:/^(4026|417500|4508|4844|491(3|7))/,valid_length:[16]},{name:"visa",pattern:/^4/,valid_length:[16]},{name:"mastercard",pattern:/^5[1-5]/,valid_length:[16]},{name:"maestro",pattern:/^(5018|5020|5038|6304|6759|676[1-3])/,valid_length:[12,13,14,15,16,17,18,19]},{name:"discover",pattern:/^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)/,valid_length:[16]}],null==a&&(a={}),null==(s=a.accept)&&(a.accept=function(){var n,t,e;for(e=[],n=0,t=i.length;t>n;n++)r=i[n],e.push(r.name);return e}()),g=a.accept,f=0,p=g.length;p>f;f++)if(l=g[f],t.call(function(){var n,t,e;for(e=[],n=0,t=i.length;t>n;n++)r=i[n],e.push(r.name);return e}(),l)<0)throw"Credit card type '"+l+"' is not supported";return c=function(n){var e,c,u;for(u=function(){var n,e,l,c;for(c=[],n=0,e=i.length;e>n;n++)r=i[n],l=r.name,t.call(a.accept,l)>=0&&c.push(r);return c}(),e=0,c=u.length;c>e;e++)if(l=u[e],n.match(l.pattern))return l;return null},h=function(n){var t,e,a,r,l,i;for(a=0,i=n.split("").reverse(),e=r=0,l=i.length;l>r;e=++r)t=i[e],t=+t,e%2?(t*=2,a+=10>t?t:t-9):a+=t;return a%10===0},u=function(n,e){var a;return a=n.length,t.call(e.valid_length,a)>=0},d=function(n){var t,a;return l=c(n),a=!1,t=!1,null!=l&&(a=h(n),t=u(n,l)),e({card_type:l,luhn_valid:a,length_valid:t})},o=function(){var t;return t=v(n(this).val()),d(t)},v=function(n){return n.replace(/[ -]/g,"")},0!==this.length&&o.call(this),this}}).call(this);

$(document).ready(function($){
	cardYear();
	$('#CARD_NO').val('');
	$('#CARD_HOLDER_NAME').val('');
	$('#CARD_EXPIRY_MONTH').val('');
	$('#CARD_EXPIRY_YEAR').val('');
	$('#CARD_CVV').val('');
	initFormance($);
});
/*jQuery Formance Plugin*/
!function(){var t,e,r,n,a,s,o,i,l,c,u,h,d,f,v,p,m,g,y,$,C,S,_,T,D,w,N,A,k,L,Z,M,F,K,Y,R,E,z,B,G,H,J,P,V,X,x,b,j,W,Q,I,U,O,q,te,ee,re,ne,ae,se,oe,ie,le,ce,ue=[].slice,he=[].indexOf||function(t){for(var e=0,r=this.length;r>e;e++)if(e in this&&this[e]===t)return e;return-1};t=jQuery,t.formance={},t.formance.fn={},t.fn.formance=function(){var e,r;return r=arguments[0],e=2<=arguments.length?ue.call(arguments,1):[],t.formance.fn[r].apply(this,e)},ee=function(e){var r,n;return r=t(e.target),e.metaKey||e.ctrlKey?!0:32===e.which?!1:0===e.which?!0:e.which<33?!0:(n=String.fromCharCode(e.which),!!/[\d\s]/.test(n))},Q=function(e){var r,n;return r=t(e.target),e.metaKey||e.ctrlKey?!0:32===e.which?!1:0===e.which?!0:e.which<33?!0:(n=String.fromCharCode(e.which),!!/[\d\sA-Za-z]/.test(n))},J=function(t){var e;return null!=t.prop("selectionStart")&&t.prop("selectionStart")!==t.prop("selectionEnd")?!0:("undefined"!=typeof document&&null!==document&&null!=(e=document.selection)&&"function"==typeof e.createRange?e.createRange().text:void 0)?!0:!1},t.formance.fn.restrictNumeric=function(){return this.on("keypress",ee),this},t.formance.fn.restrictAlphaNumeric=function(){return this.on("keypress",Q),this},t.formance.fn.hasTextSelected=J,t=jQuery,J=t.formance.fn.hasTextSelected,a=/(\d{1,4})/g,n=[{type:"maestro",pattern:/^(5018|5020|5038|6304|6759|676[1-3])/,format:a,length:[12,13,14,15,16,17,18,19],cvcLength:[3],luhn:!0},{type:"dinersclub",pattern:/^(36|38|30[0-5])/,format:a,length:[14],cvcLength:[3],luhn:!0},{type:"laser",pattern:/^(6706|6771|6709)/,format:a,length:[16,17,18,19],cvcLength:[3],luhn:!0},{type:"jcb",pattern:/^35/,format:a,length:[16],cvcLength:[3],luhn:!0},{type:"unionpay",pattern:/^62/,format:a,length:[16,17,18,19],cvcLength:[3],luhn:!1},{type:"discover",pattern:/^(6011|65|64[4-9]|622)/,format:a,length:[16],cvcLength:[3],luhn:!0},{type:"mastercard",pattern:/^5[1-5]/,format:a,length:[16],cvcLength:[3],luhn:!0},{type:"amex",pattern:/^3[47]/,format:/(\d{1,4})(\d{1,6})?(\d{1,5})?/,length:[15],cvcLength:[3,4],luhn:!0},{type:"visa",pattern:/^4/,format:a,length:[13,14,15,16],cvcLength:[3],luhn:!0}],e=function(t){var e,r,a;for(t=(t+"").replace(/\D/g,""),r=0,a=n.length;a>r;r++)if(e=n[r],e.pattern.test(t))return e},r=function(t){var e,r,a;for(r=0,a=n.length;a>r;r++)if(e=n[r],e.type===t)return e},I=function(e){var r,n,a;return r=t(e.currentTarget),n=String.fromCharCode(e.which),/^\d+$/.test(n)?(a=r.val()+n,a.length<=4):void 0},t.formance.fn.format_credit_card_cvc=function(){return this.formance("restrictNumeric"),this.on("keypress",I),this},t.formance.fn.validate_credit_card_cvc=function(){var e,n,a,s;return n=t(this).data("credit_card_type"),e=t(this).val(),e=t.trim(e),/^\d+$/.test(e)?n?(a=e.length,he.call(null!=(s=r(n))?s.cvcLength:void 0,a)>=0):e.length>=3&&e.length<=4:!1},t=jQuery,J=t.formance.fn.hasTextSelected,te=function(e){var r,n,a;return r=t(e.currentTarget),n=String.fromCharCode(e.which),/^\d+$/.test(n)&&!J(r)?(a=r.val()+n,a=a.replace(/\D/g,""),a.length>6?!1:void 0):void 0},$=function(e){var r,n,a;return n=String.fromCharCode(e.which),/^\d+$/.test(n)?(r=t(e.currentTarget),a=r.val()+n,/^\d$/.test(a)&&"0"!==a&&"1"!==a?(e.preventDefault(),r.val("0"+a+" / ")):/^\d\d$/.test(a)?(e.preventDefault(),r.val(""+a+" / ")):void 0):void 0},_=function(e){var r,n,a;return n=String.fromCharCode(e.which),/^\d+$/.test(n)?(r=t(e.currentTarget),a=r.val(),/^\d\d$/.test(a)?r.val(""+a+" / "):void 0):void 0},w=function(e){var r,n,a;return n=String.fromCharCode(e.which),"/"===n?(r=t(e.currentTarget),a=r.val(),/^\d$/.test(a)&&"0"!==a?r.val("0"+a+" / "):void 0):void 0},l=function(e){var r,n;if(!e.meta&&(r=t(e.currentTarget),n=r.val(),8===e.which&&(null==r.prop("selectionStart")||r.prop("selectionStart")===n.length)))return/\d(\s|\/)+$/.test(n)?(e.preventDefault(),r.val(n.replace(/\d(\s|\/)*$/,""))):/\s\/\s?\d?$/.test(n)?(e.preventDefault(),r.val(n.replace(/\s\/\s?\d?$/,""))):void 0},t.formance.fn.format_credit_card_expiry=function(){return this.formance("restrictNumeric"),this.on("keypress",te),this.on("keypress",$),this.on("keypress",w),this.on("keypress",_),this.on("keydown",l),this},V=function(t){var e,r,n,a,s;return n=t.replace(/\s/g,""),s=n.split("/",2),e=s[0],a=s[1],2===(null!=a?a.length:void 0)&&/^\d+$/.test(a)&&(r=(new Date).getFullYear(),r=r.toString().slice(0,2),a=r+a),e=parseInt(e,10),a=parseInt(a,10),{month:e,year:a}},t.formance.fn.val_credit_card_expiry=function(){var t;return t=V(this.val()),null==t.month||isNaN(t.month)?!1:null==t.year||isNaN(t.year)?!1:new Date(t.year,t.month-1)},t.formance.fn.validate_credit_card_expiry=function(){var e,r,n,a,s,o,i;return n=V(this.val()),a=n.month,o=n.year,"object"==typeof a&&"month"in a&&(i=a,a=i.month,o=i.year),a&&o?(a=t.trim(a),o=t.trim(o),/^\d+$/.test(a)&&/^\d+$/.test(o)&&parseInt(a,10)<=12?(2===o.length&&(s=(new Date).getFullYear(),s=s.toString().slice(0,2),o=s+o),r=new Date(o,a),e=new Date,r.setMonth(r.getMonth()-1),r.setMonth(r.getMonth()+1,1),r>e):!1):!1},t=jQuery,J=t.formance.fn.hasTextSelected,a=/(\d{1,4})/g,n=[{type:"maestro",pattern:/^(5018|5020|5038|6304|6759|676[1-3])/,format:a,length:[12,13,14,15,16,17,18,19],cvcLength:[3],luhn:!0},{type:"dinersclub",pattern:/^(36|38|30[0-5])/,format:a,length:[14],cvcLength:[3],luhn:!0},{type:"laser",pattern:/^(6706|6771|6709)/,format:a,length:[16,17,18,19],cvcLength:[3],luhn:!0},{type:"jcb",pattern:/^35/,format:a,length:[16],cvcLength:[3],luhn:!0},{type:"unionpay",pattern:/^62/,format:a,length:[16,17,18,19],cvcLength:[3],luhn:!1},{type:"discover",pattern:/^(6011|65|64[4-9]|622)/,format:a,length:[16],cvcLength:[3],luhn:!0},{type:"mastercard",pattern:/^5[1-5]/,format:a,length:[16],cvcLength:[3],luhn:!0},{type:"amex",pattern:/^3[47]/,format:/(\d{1,4})(\d{1,6})?(\d{1,5})?/,length:[15],cvcLength:[3,4],luhn:!0},{type:"visa",pattern:/^4/,format:a,length:[13,14,15,16],cvcLength:[3],luhn:!0}],e=function(t){var e,r,a;for(t=(t+"").replace(/\D/g,""),r=0,a=n.length;a>r;r++)if(e=n[r],e.pattern.test(t))return e},r=function(t){var e,r,a;for(r=0,a=n.length;a>r;r++)if(e=n[r],e.type===t)return e},P=function(t){var e,r,n,a,s,o;for(n=!0,a=0,r=(t+"").split("").reverse(),s=0,o=r.length;o>s;s++)e=r[s],e=parseInt(e,10),(n=!n)&&(e*=2),e>9&&(e-=9),a+=e;return a%10===0},U=function(r){var n,a,s,o;return n=t(r.currentTarget),s=String.fromCharCode(r.which),/^\d+$/.test(s)&&!J(n)?(o=(n.val()+s).replace(/\D/g,""),a=e(o),a?o.length<=a.length[a.length.length-1]:o.length<=16):void 0},j=function(e){return setTimeout(function(){var r,n;return r=t(e.currentTarget),n=r.val(),n=formatCreditCardNumber(n),r.val(n)})},m=function(r){var n,a,s,o,i,l,c;return s=String.fromCharCode(r.which),!/^\d+$/.test(s)||(n=t(r.currentTarget),c=n.val(),a=e(c+s),o=(c.replace(/\D/g,"")+s).length,l=16,a&&(l=a.length[a.length.length-1]),o>=l||null!=n.prop("selectionStart")&&n.prop("selectionStart")!==c.length)?void 0:(i=a&&"amex"===a.type?/^(\d{4}|\d{4}\s\d{6})$/:/(?:^|\s)(\d{4})$/,i.test(c)?(r.preventDefault(),n.val(c+" "+s)):i.test(c+s)?(r.preventDefault(),n.val(c+s+" ")):void 0)},s=function(e){var r,n;return r=t(e.currentTarget),n=r.val(),e.meta||8!==e.which||null!=r.prop("selectionStart")&&r.prop("selectionStart")!==n.length?void 0:/\d\s$/.test(n)?(e.preventDefault(),r.val(n.replace(/\d\s$/,""))):/\s\d?$/.test(n)?(e.preventDefault(),r.val(n.replace(/\s\d?$/,""))):void 0},ce=function(e){var r,a,s,o,i;return r=t(e.currentTarget),i=r.val(),o=t.formance.creditCardType(i)||"unknown",r.hasClass(o)?void 0:(a=function(){var t,e,r;for(r=[],t=0,e=n.length;e>t;t++)s=n[t],r.push(s.type);return r}(),r.removeClass("unknown"),r.removeClass(a.join(" ")),r.addClass(o),r.toggleClass("identified","unknown"!==o),r.trigger("payment.cardType",o))},t.formance.creditCardType=function(t){var r;return t?(null!=(r=e(t))?r.type:void 0)||null:null},formatCreditCardNumber=function(t){var r,n,a,s;return(r=e(t))?(a=r.length[r.length.length-1],t=t.replace(/\D/g,""),t=t.slice(0,+a+1||9e9),r.format.global?null!=(s=t.match(r.format))?s.join(" "):void 0:(n=r.format.exec(t),null!=n&&n.shift(),null!=n?n.join(" "):void 0)):t},t.formance.fn.format_credit_card_number=function(){return this.formance("restrictNumeric"),this.on("keypress",U),this.on("keypress",m),this.on("keydown",s),this.on("keyup",ce),this.on("paste",j),this},t.formance.fn.validate_credit_card_number=function(){var r,n,a;return n=t(this).val(),n=(n+"").replace(/\s+|-/g,""),/^\d+$/.test(n)?(r=e(n),r?(a=n.length,he.call(r.length,a)>=0&&(r.luhn===!1||P(n))):!1):!1},t=jQuery,J=t.formance.fn.hasTextSelected,O=function(e){var r,n,a;return r=t(e.currentTarget),n=String.fromCharCode(e.which),/^\d+$/.test(n)&&!J(r)?(a=r.val()+n,a=a.replace(/\D/g,""),a.length>8?!1:void 0):void 0},g=function(e){var r,n,a,s;return n=String.fromCharCode(e.which),/^\d+$/.test(n)?(r=t(e.currentTarget),a=r.val(),s=a+n,/^\d$/.test(s)&&"0"!==n&&"1"!==n&&"2"!==n&&"3"!==n?(e.preventDefault(),r.val("0"+s+" / ")):/^\d{2}$/.test(s)?(e.preventDefault(),r.val(""+s+" / ")):/^\d{2}\s\/\s\d$/.test(s)&&"0"!==n&&"1"!==n?(e.preventDefault(),r.val(""+a+"0"+n+" / ")):/^\d{2}\s\/\s\d{2}$/.test(s)?(e.preventDefault(),r.val(""+s+" / ")):void 0):void 0},C=function(e){var r,n,a;return n=String.fromCharCode(e.which),/^\d+$/.test(n)?(r=t(e.currentTarget),a=r.val(),/^\d{2}$/.test(a)||/^\d{2}\s\/\s\d{2}$/.test(a)?r.val(""+a+" / "):void 0):void 0},T=function(e){var r,n,a,s,o,i,l,c,u;return l=String.fromCharCode(e.which),"/"===l?(r=t(e.currentTarget),c=r.val(),o=/^(\d)$/,i=/^(\d{2})\s\/\s(\d)$/,o.test(c)&&"0"!==c?r.val("0"+c+" / "):i.test(c)&&(u=c.match(i),n=u[0],a=u[1],s=u[2],"0"!==s)?r.val(""+a+" / 0"+s+" / "):void 0):void 0},o=function(e){var r,n;if(!e.meta&&(r=t(e.currentTarget),n=r.val(),8===e.which&&(null==r.prop("selectionStart")||r.prop("selectionStart")===n.length)))return/\d(\s|\/)+$/.test(n)?(e.preventDefault(),r.val(n.replace(/\d(\s|\/)*$/,""))):/\s\/\s?\d?$/.test(n)?(e.preventDefault(),r.val(n.replace(/\s\/\s?\d?$/,""))):void 0},t.formance.fn.format_dd_mm_yyyy=function(){return this.formance("restrictNumeric"),this.on("keypress",O),this.on("keypress",g),this.on("keypress",T),this.on("keypress",C),this.on("keydown",o),this},X=function(t){var e,r,n,a;return a=null!=t?t.replace(/\s/g,"").split("/",3):[0/0,0/0,0/0],e=a[0],r=a[1],n=a[2],(null==n||4!==n.length)&&(n=0/0),e=parseInt(e,10),r=parseInt(r,10),n=parseInt(n,10),{day:e,month:r,year:n}},t.formance.fn.val_dd_mm_yyyy=function(){var t;return t=X(this.val()),null==t.day||isNaN(t.day)?!1:null==t.month||isNaN(t.month)?!1:null==t.year||isNaN(t.year)?!1:new Date(t.year,t.month-1,t.day)},t.formance.fn.validate_dd_mm_yyyy=function(){var t,e;return e=X(this.val()),t=this.formance("val_dd_mm_yyyy"),null!=t&&t instanceof Date?t.getDate()!==e.day?!1:t.getMonth()+1!==e.month?!1:t.getFullYear()!==e.year?!1:!0:!1},t=jQuery,J=t.formance.fn.hasTextSelected,t.formance.fn.format_email=function(){return this},t.formance.fn.validate_email=function(){var e,r,n,a;return r={simple:/^\S+@\S+$/,complex:'/^(([^<>()[]\\.,;:s@"]+(.[^<>()[]\\.,;:s@"]+)*)|( ".+"))@(([[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}])|(([a-zA -Z-0-9]+.)+[a-zA-Z]{2,}))$/'},e=t(this),n=e.val(),null==n?!1:(a=e.data("formance_algorithm"),null!=a&&a in r?r[a].test(n):r.simple.test(n))},t=jQuery,t.formance.fn.format_number=function(){var e;return e=t(this).data("formance_length"),null!=e&&t(this).attr("maxLength",e),this.formance("restrictNumeric"),this},t.formance.fn.validate_number=function(){var e,r,n;if(e=t(this),n=e.val(),r=e.data("formance_length"),null!=r&&"number"==typeof r&&n.length!==r)return!1;if(null!=r&&"string"==typeof r&&""!==r){if(isNaN(parseInt(r,10)))return!1;if(n.length!==parseInt(r,10))return!1}return/^\d+$/.test(n)},t=jQuery,J=t.formance.fn.hasTextSelected,re=function(e){var r,n,a;return r=t(e.currentTarget),n=String.fromCharCode(e.which),/^[a-zA-Z\d]+$/.test(n)&&!J(r)?(a=r.val()+n,a=a.replace(/[^a-zA-Z\d]/g,""),a.length>15?!1:void 0):void 0},L=function(e){var r,n,a,s;if(n=String.fromCharCode(e.which),/^[a-zA-Z\d]+$/.test(n))if(r=t(e.currentTarget),a=r.val(),s=a+n.toUpperCase(),""===a){if(e.preventDefault(),/^[A-Za-z]$/.test(s))return r.val(s)}else if(/^[A-Za-z]\d{0,3}$/.test(a)){if(e.preventDefault(),/^[A-Za-z]\d{4}$/.test(s)&&(s=""+s+" - "),/^[A-Za-z]\d{0,4}[\s|\-]*$/.test(s))return r.val(s)}else if(/^[A-Za-z]\d{4}[\s|\-]*\d{0,4}$/.test(a)&&(e.preventDefault(),/^[A-Za-z]\d{4}[\s|\-]*\d{5}$/.test(s)&&(s=""+s+" - "),/^[A-Za-z]\d{4}[\s|\-]*\d{0,5}[\s|\-]*$/.test(s)))return r.val(s)},c=function(e){var r,n;if(!e.meta&&(r=t(e.currentTarget),n=r.val(),8===e.which&&(null==r.prop("selectionStart")||r.prop("selectionStart")===n.length)))return/\d(\s|\-)+$/.test(n)?(e.preventDefault(),r.val(n.replace(/\d(\s|\-)+$/,""))):void 0},F=function(e){return setTimeout(function(){var r,n,a,s,o,i,l;return r=t(e.currentTarget),i=r.val(),l=i.match(/^([A-Za-z\d]{5})[\s|\-]*(\d{5})[\s|\-]*(\d{5})$/),a=l[0],n=l[1],o=l[2],s=l[3],r.val(""+n+" - "+o+" - "+s)})},t.formance.fn.format_ontario_drivers_license_number=function(){return this.formance("restrictAlphaNumeric"),this.on("keypress",re),this.on("keypress",L),this.on("keydown",c),this.on("paste",F),this},t.formance.fn.validate_ontario_drivers_license_number=function(){var e,r;return r=t(this).val(),null==r?!1:(r=r.replace(/[\s|\-]/g,""),/^[a-zA-Z\d]+$/.test()?(e=/^[A-Za-z]\d{4}[\s|\-]*\d{5}[\s|\-]*\d{5}$/,e.test(r)):!1)},t=jQuery,J=t.formance.fn.hasTextSelected,ne=function(e){var r,n,a;return r=t(e.currentTarget),n=String.fromCharCode(e.which),/^\d+$/.test(n)&&!J(r)?(a=r.val()+n,a=a.replace(/\D/g,""),a.length>15?!1:void 0):void 0},Z=function(e){var r,n,a,s;return n=String.fromCharCode(e.which),/^\d+$/.test(n)?(r=t(e.currentTarget),a=r.val(),s=r.val()+n,""===a?(e.preventDefault(),s=/^7$/.test(s)?"708158 ":"708158 "+s,r.val(s)):/^\d{5}$/.test(a)&&(e.preventDefault(),/^\d{6}$/.test(s)&&(s=""+s+" "),/^\d{6}\s*$/.test(s))?target.val(s):void 0):void 0},u=function(e){var r,n;if(!e.meta&&(r=t(e.currentTarget),n=r.val(),8===e.which&&(null==r.prop("selectionStart")||r.prop("selectionStart")===n.length)))return/708158\s+$/.test(n)?(e.preventDefault(),r.val(n.replace(/708158\s+$/,""))):void 0},K=function(e){return setTimeout(function(){var r,n,a,s,o,i;return r=t(e.currentTarget),o=r.val(),i=o.match(/^(\d{6})\s*(\d{9})$/),a=i[0],n=i[1],s=i[2],r.val(""+n+" "+s)})},t.formance.fn.format_ontario_outdoors_card_number=function(){return this.formance("restrictNumeric"),this.on("keypress",ne),this.on("keypress",Z),this.on("keydown",u),this.on("paste",K),this},t.formance.fn.validate_ontario_outdoors_card_number=function(){var e,r;return r=t(this).val(),null==r?!1:(r=r.replace(/\s/g,""),/^\d+$/.test(r)?(e=/^708158\s*\d{9}$/,e.test(r)):!1)},t=jQuery,J=t.formance.fn.hasTextSelected,ae=function(e){var r,n,a;return r=t(e.currentTarget),n=String.fromCharCode(e.which),/^[a-zA-Z\d]+$/.test(n)&&!J(r)?(a=r.val()+n,a=a.replace(/[^a-zA-Z\d]/g,""),a.length>12?!1:void 0):void 0},M=function(e){var r,n,a,s;if(n=String.fromCharCode(e.which),/^[a-zA-Z\d]+$/.test(n))if(r=t(e.currentTarget),a=r.val(),s=a+n.toUpperCase(),/^\d{0,3}$/.test(a)){if(e.preventDefault(),/^\d{4}$/.test(s)&&(s=""+s+" - "),/^\d{0,4}[\s|\-]*$/.test(s))return r.val(s)}else if(/^\d{4}[\s|\-]*\d{0,2}$/.test(a)){if(e.preventDefault(),/^\d{4}[\s|\-]*\d{3}$/.test(s)&&(s=""+s+" - "),/^\d{4}[\s|\-]*\d{0,3}[\s|\-]*$/.test(s))return r.val(s)}else if(/^\d{4}[\s|\-]*\d{3}[\s|\-]*\d{0,2}$/.test(a)){if(e.preventDefault(),/^\d{4}[\s|\-]*\d{3}[\s|\-]*\d{3}$/.test(s)&&(s=""+s+" - "),/^\d{4}[\s|\-]*\d{3}[\s|\-]*\d{0,3}[\s|\-]*$/.test(s))return r.val(s)}else if(/^\d{4}[\s|\-]*\d{3}[\s|\-]*\d{3}[\s|\-]*[A-Za-z]{0,1}$/.test(a)&&(e.preventDefault(),/^\d{4}[\s|\-]*\d{3}[\s|\-]*\d{3}[\s|\-]*[A-Za-z]{0,2}$/.test(s)))return r.val(s)},h=function(e){var r,n;if(!e.meta&&(r=t(e.currentTarget),n=r.val(),8===e.which&&(null==r.prop("selectionStart")||r.prop("selectionStart")===n.length)))return/\d(\s|\-)+$/.test(n)?(e.preventDefault(),r.val(n.replace(/\d(\s|\-)+$/,""))):void 0},Y=function(e){return setTimeout(function(){var r,n,a,s,o,i,l,c;return r=t(e.currentTarget),l=r.val(),c=l.match(/^(\d{4})[\s|\-]*(\d{3})[\s|\-]*(\d{3})[\s|\-]*([A-Za-z]{2})$/),a=c[0],n=c[1],o=c[2],i=c[3],s=c[4],r.val(""+n+" - "+o+" - "+i+" - "+s)})},t.formance.fn.format_ontario_photo_health_card_number=function(){return this.formance("restrictAlphaNumeric"),this.on("keypress",ae),this.on("keypress",M),this.on("keydown",h),this.on("paste",Y),this},t.formance.fn.validate_ontario_photo_health_card_number=function(){var e,r;return r=t(this).val(),null==r?!1:(r=r.replace(/[\s|\-]/g,""),/^[a-zA-Z\d]+$/.test()?(e=/^\d{4}[\s|\-]*\d{3}[\s|\-]*\d{3}[\s|\-]*[A-Za-z]{2}$/,e.test(r)):!1)},t=jQuery,J=t.formance.fn.hasTextSelected,W=function(t){var e,r,n,a,s,o;return a=t.replace(/\D/g,"").match(/^(\d{0,3})?(\d{0,3})?(\d{0,4})?$/),o=a,a=o[0],e=o[1],r=o[2],n=o[3],s="",null!=e&&(s+="("+e),3===(null!=e?e.length:void 0)&&(s+=") "),null!=r&&(s+=""+r),3===(null!=r?r.length:void 0)&&(s+=" - "),null!=n&&(s+=""+n),s},se=function(e){var r,n,a;return r=t(e.currentTarget),n=String.fromCharCode(e.which),/^\d+$/.test(n)&&!J(r)?(a=r.val()+n,a=a.replace(/\D/g,""),a.length>10?!1:void 0):void 0},z=function(e){var r,n,a,s;return n=String.fromCharCode(e.which),/^\d+$/.test(n)?(r=t(e.currentTarget),s=r.val()+n,a=W(s),e.preventDefault(),r.val(a)):void 0},d=function(e){var r,n;if(!e.meta&&(r=t(e.currentTarget),n=r.val(),8===e.which&&(null==r.prop("selectionStart")||r.prop("selectionStart")===n.length)))return/\(\d$/.test(n)?(e.preventDefault(),r.val("")):/\d\)(\s)+$/.test(n)?(e.preventDefault(),r.val(n.replace(/\d\)(\s)*$/,""))):/\d(\s|\-)+$/.test(n)?(e.preventDefault(),r.val(n.replace(/\d(\s|\-)+$/,""))):void 0},R=function(e){return setTimeout(function(){var r,n,a;return r=t(e.currentTarget),a=r.val(),n=W(a),r.val(n)})},t.formance.fn.format_phone_number=function(){return this.formance("restrictNumeric"),this.on("keypress",se),this.on("keypress",z),this.on("keydown",d),this.on("paste",R),this},t.formance.fn.validate_phone_number=function(){var e;return e=t(this).val(),null==e?!1:(e=e.replace(/\(|\)|\s+|-/g,""),/^\d+$/.test(e)?10===e.replace(/\D/g,"").length:!1)},t=jQuery,J=t.formance.fn.hasTextSelected,oe=function(e){var r,n,a;return r=t(e.currentTarget),n=String.fromCharCode(e.which),/^[a-zA-Z\d]+$/.test(n)&&!J(r)?(a=r.val()+n,a=a.replace(/[^a-zA-Z\d]/g,""),a.length>6?!1:void 0):void 0},B=function(e){var r,n,a,s;if(n=String.fromCharCode(e.which),/^[a-zA-Z\d]+$/.test(n))if(r=t(e.currentTarget),a=r.val(),s=a+n.toUpperCase(),""===a){if(e.preventDefault(),/^[ABCEFGHJKLMNPRSTVXY]$/.test(s))return r.val(s)}else if(/^[ABCEFGHJKLMNPRSTVXY]$/.test(a)){if(e.preventDefault(),/^[ABCEFGHJKLMNPRSTVXY][0-9]$/.test(s))return r.val(s)}else if(/^[ABCEFGHJKLMNPRSTVXY][0-9]$/.test(a)){if(e.preventDefault(),/^[ABCEFGHJKLMNPRSTVXY][0-9][ABCEFGHJKLMNPRSTVWXYZ]$/.test(s))return r.val(""+s+" ")}else if(/^[ABCEFGHJKLMNPRSTVXY][0-9][ABCEFGHJKLMNPRSTVWXYZ]\s$/.test(a)){if(e.preventDefault(),/^[ABCEFGHJKLMNPRSTVXY][0-9][ABCEFGHJKLMNPRSTVWXYZ]\s?[0-9]$/.test(s))return r.val(s)}else if(/^[ABCEFGHJKLMNPRSTVXY][0-9][ABCEFGHJKLMNPRSTVWXYZ]\s?[0-9]$/.test(a)){if(e.preventDefault(),/^[ABCEFGHJKLMNPRSTVXY][0-9][ABCEFGHJKLMNPRSTVWXYZ]\s?[0-9][ABCEFGHJKLMNPRSTVWXYZ]$/.test(s))return r.val(s)}else if(/^[ABCEFGHJKLMNPRSTVXY][0-9][ABCEFGHJKLMNPRSTVWXYZ]\s?[0-9][ABCEFGHJKLMNPRSTVWXYZ]$/.test(a)&&(e.preventDefault(),/^[ABCEFGHJKLMNPRSTVXY][0-9][ABCEFGHJKLMNPRSTVWXYZ]\s?[0-9][ABCEFGHJKLMNPRSTVWXYZ][0-9]$/.test(s)))return r.val(s)},f=function(e){var r,n;if(!e.meta&&(r=t(e.currentTarget),n=r.val(),8===e.which&&(null==r.prop("selectionStart")||r.prop("selectionStart")===n.length)))return/[ABCEFGHJKLMNPRSTVWXYZ](\s)+$/.test(n)?(e.preventDefault(),r.val(n.replace(/[ABCEFGHJKLMNPRSTVWXYZ](\s)*$/,""))):void 0},E=function(e){return setTimeout(function(){var r,n,a,s,o,i;return r=t(e.currentTarget),o=r.val(),i=o.match(/^([ABCEFGHJKLMNPRSTVXY][0-9][ABCEFGHJKLMNPRSTVWXYZ])\s?([0-9][ABCEFGHJKLMNPRSTVWXYZ][0-9])$/),a=i[0],n=i[1],s=i[2],r.val(""+n+" "+s)})},t.formance.fn.format_postal_code=function(){return this.formance("restrictAlphaNumeric"),this.on("keypress",oe),this.on("keypress",B),this.on("keydown",f),this.on("paste",E),this},t.formance.fn.validate_postal_code=function(){var e;return e=t(this).val(),null==e?!1:(e=e.replace(/\s+/g,""),/^[a-zA-Z\d]+$/.test(e)?(e=e.replace(/[^a-zA-Z\d]/g,""),/^[ABCEFGHJKLMNPRSTVXY][0-9][ABCEFGHJKLMNPRSTVWXYZ]\s?[0-9][ABCEFGHJKLMNPRSTVWXYZ][0-9]$/.test(e.toUpperCase())):!1)},t=jQuery,J=t.formance.fn.hasTextSelected,ie=function(e){var r,n,a;return r=t(e.currentTarget),n=String.fromCharCode(e.which),/^\d+$/.test(n)&&!J(r)?(a=r.val()+n,a=a.replace(/\D/g,""),a.length>4?!1:void 0):void 0},G=function(e){var r,n,a,s;return n=String.fromCharCode(e.which),/^\d+$/.test(n)?(r=t(e.currentTarget),a=r.val(),s=a+n,/^\d{2}$/.test(s)?(e.preventDefault(),r.val(""+s+" / ")):/^\d{2}\s\/\s\d{1}$/.test(s)&&"0"!==n&&"1"!==n?(e.preventDefault(),r.val(""+a+"0"+n)):void 0):void 0},A=function(e){var r,n,a;return n=String.fromCharCode(e.which),/^\d+$/.test(n)?(r=t(e.currentTarget),a=r.val(),/^\d{2}$/.test(a)?r.val(""+a+" / "):void 0):void 0},N=function(e){var r,n,a,s;return a=String.fromCharCode(e.which),"/"===a?(r=t(e.currentTarget),s=r.val(),n=/^(\d)$/,n.test(s)&&2===s.length||1===s.length?r.val("0"+s+" / "):void 0):void 0},v=function(e){var r,n;if(!e.meta&&(r=t(e.currentTarget),n=r.val(),8===e.which&&(null==r.prop("selectionStart")||r.prop("selectionStart")===n.length)))return/\d(\s|\/)+$/.test(n)?(e.preventDefault(),r.val(n.replace(/\d(\s|\/)*$/,""))):/\s\/\s?\d?$/.test(n)?(e.preventDefault(),r.val(n.replace(/\s\/\s?\d?$/,""))):void 0},t.formance.fn.format_time_yy_mm=function(){return this.formance("restrictNumeric"),this.on("keypress",ie),this.on("keypress",G),this.on("keypress",A),this.on("keypress",N),this.on("keydown",v),this},x=function(t){var e,r,n;return n=null!=t?t.replace(/\s/g,"").split("/",2):[0/0,0/0],r=n[0],e=n[1],e=parseInt(e,10),r=parseInt(r,10),{years:r,months:e}},t.formance.fn.val_time_yy_mm=function(){var t;return t=x(this.val()),null==t.years||isNaN(t.years)?!1:null==t.months||isNaN(t.months)?!1:t},t.formance.fn.validate_time_yy_mm=function(){var e,r,n;return r=x(this.val()),e=this.formance("val_time_yy_mm"),n=t(this).val(),e.months!==r.months?!1:e.years!==r.years?!1:/^(\d{1}[\d{1}]*)[\s\/]*(\d{1}[\d{1}]*)[\s\/]*$/.test(n)?!0:!1},t=jQuery,J=t.formance.fn.hasTextSelected,le=function(e){var r,n,a;return r=t(e.currentTarget),n=String.fromCharCode(e.which),/^\d+$/.test(n)&&!J(r)?(a=r.val()+n,a=a.replace(/\D/g,""),a.length>6?!1:void 0):void 0},k=function(e){var r,n,a;return n=String.fromCharCode(e.which),/^\d+$/.test(n)?(r=t(e.currentTarget),a=r.val(),/^\d{2}$/.test(a)||/^\d{2}\s\-\s\d{2}$/.test(a)?r.val(""+a+" - "):void 0):void 0},p=function(e){var r,n;if(!e.meta&&(r=t(e.currentTarget),n=r.val(),8===e.which&&(null==r.prop("selectionStart")||r.prop("selectionStart")===n.length)))return/\d(\s|\-)+$/.test(n)?(e.preventDefault(),r.val(n.replace(/\d(\s|\-)+$/,""))):/\s\-\s?\d?$/.test(n)?(e.preventDefault(),r.val(n.replace(/\s\-\s?\d?$/,""))):void 0},H=function(e){var r,n,a,s;return n=String.fromCharCode(e.which),/^\d+$/.test(n)?(r=t(e.currentTarget),a=r.val(),s=a+n,/^\d{2}$/.test(s)?(e.preventDefault(),r.val(""+s+" - ")):/^\d{2}\s\-\s\d{2}$/.test(s)?(e.preventDefault(),r.val(""+s+" - ")):void 0):void 0},t.formance.fn.format_uk_sort_code=function(){return this.formance("restrictNumeric"),this.on("keypress",le),this.on("keypress",H),this.on("keypress",k),this.on("keydown",p),this},t.formance.fn.validate_uk_sort_code=function(){var e;return e=t(this).val(),/^(\d{2})[\s\-]*(\d{2})[\s\-]*(\d{2})[\s]*$/.test(e)?!0:!1},t=jQuery,J=t.formance.fn.hasTextSelected,q=function(e){var r,n,a;return r=t(e.currentTarget),n=String.fromCharCode(e.which),/^\d+$/.test(n)&&!J(r)?(a=r.val()+n,a=a.replace(/\D/g,""),a.length>8?!1:void 0):void 0},y=function(e){var r,n,a,s;return n=String.fromCharCode(e.which),/^\d+$/.test(n)?(r=t(e.currentTarget),a=r.val(),s=a+n,/^\d{4}$/.test(s)?(e.preventDefault(),r.val(""+s+" / ")):/^\d{4}\s\/\s\d$/.test(s)&&"0"!==n&&"1"!==n?(e.preventDefault(),r.val(""+a+"0"+n+" / ")):/^\d{4}\s\/\s\d{2}$/.test(s)?(e.preventDefault(),r.val(""+s+" / ")):/^\d{4}\s\/\s\d{2}\s\/\s\d$/.test(s)&&"0"!==n&&"1"!==n&&"2"!==n&&"3"!==n?(e.preventDefault(),r.val(""+a+"0"+n)):void 0):void 0},S=function(e){var r,n,a;return n=String.fromCharCode(e.which),/^\d+$/.test(n)?(r=t(e.currentTarget),a=r.val(),/^\d{4}$/.test(a)||/^\d{4}\s\/\s\d{2}$/.test(a)?r.val(""+a+" / "):void 0):void 0},D=function(e){var r,n,a,s,o,i,l,c;return o=String.fromCharCode(e.which),"/"===o?(r=t(e.currentTarget),i=r.val(),s=/^(\d{4})\s\/\s(\d)$/,s.test(i)&&(c=i.match(s),n=c[0],l=c[1],a=c[2],"0"!==a)?r.val(""+l+" / 0"+a+" / "):void 0):void 0},i=function(e){var r,n;if(!e.meta&&(r=t(e.currentTarget),n=r.val(),8===e.which&&(null==r.prop("selectionStart")||r.prop("selectionStart")===n.length)))return/\d(\s|\/)+$/.test(n)?(e.preventDefault(),r.val(n.replace(/\d(\s|\/)*$/,""))):/\s\/\s?\d?$/.test(n)?(e.preventDefault(),r.val(n.replace(/\s\/\s?\d?$/,""))):void 0},t.formance.fn.format_yyyy_mm_dd=function(){return this.formance("restrictNumeric"),this.on("keypress",q),this.on("keypress",y),this.on("keypress",D),this.on("keypress",S),this.on("keydown",i),this},b=function(t){var e,r,n,a;return a=null!=t?t.replace(/\s/g,"").split("/",3):[0/0,0/0,0/0],n=a[0],r=a[1],e=a[2],(null==n||4!==n.length)&&(n=0/0),e=parseInt(e,10),r=parseInt(r,10),n=parseInt(n,10),{day:e,month:r,year:n}},t.formance.fn.val_yyyy_mm_dd=function(){var t;return t=b(this.val()),null==t.day||isNaN(t.day)?!1:null==t.month||isNaN(t.month)?!1:null==t.year||isNaN(t.year)?!1:new Date(t.year,t.month-1,t.day)},t.formance.fn.validate_yyyy_mm_dd=function(){var t,e;return e=b(this.val()),t=this.formance("val_yyyy_mm_dd"),null!=t&&t instanceof Date?t.getDate()!==e.day?!1:t.getMonth()+1!==e.month?!1:t.getFullYear()!==e.year?!1:!0:!1}}.call(this);
jQuery(function(e) {
    fields = ["credit_card_number", "credit_card_expiry", "credit_card_cvc", "dd_mm_yyyy", "yyyy_mm_dd", "email", "number", "phone_number", "postal_code", "time_yy_mm", "uk_sort_code", "ontario_drivers_license_number", "ontario_photo_health_card_number", "ontario_outdoors_card_number"];
    e.each(fields, function(t, n) {
        e("input." + n).formance("format_" + n).addClass("form-control").wrap("<div class='form-group' />").parent();
        e("body").on("keyup change blur","input." + n, function(t) {
            return function(n) {
                $this = e(this);
                if ($this.formance("validate_" + t)) {
                    $this.parent().removeClass("has-success has-error").addClass("has-success").children(":last")
                } else {
                    $this.parent().removeClass("has-success has-error").addClass("has-error").children(":last")
                }
            }
        }(n))
    })
});

function initFormance($){
	console.log("formance");
    fields = ['credit_card_number',
              'credit_card_expiry',
              'credit_card_cvc',
              'dd_mm_yyyy',
              'yyyy_mm_dd',
              'email',
              'number',
              'phone_number',
              'postal_code',
              'time_yy_mm',
              'uk_sort_code',
              'ontario_drivers_license_number',
              'ontario_photo_health_card_number',
              'ontario_outdoors_card_number']

     $.each( fields, function (index, value) {
    	 $('input.'+value).formance('format_'+value);

        $('input.'+value).on('keyup change blur', function (value) {
            return function (event) {				
                $this = $(this);
                if ($this.formance('validate_'+value)) {
                    $this.parent();
                } else {
                    $this.parent();
                }
            }
        }(value));
     });
	 
}
var cardValidationStatus = false;
function removeAllCC_Class(element){
		jQuery(element).removeClass('elm-ccn-visa');
		jQuery(element).removeClass('elm-ccn-mastercard');
		jQuery(element).removeClass('elm-ccn-amex');
}
$('body').on('blur','#CARD_NO',function(){
		var $this = $(this);  
		$(this).validateCreditCard(function(result){
	       if(result.card_type!=null){
	           if(result.card_type.name=="visa"){
	               removeAllCC_Class($this);
	               $this.addClass('elm-ccn-visa');
	           }else if(result.card_type.name=="mastercard"){
	               removeAllCC_Class($this);
	               $this.addClass('elm-ccn-mastercard');
	           }
	       }else{
	           removeAllCC_Class($this);
	       }
	       if(result.luhn_valid==false || result.length_valid==false){
	           $this.addClass('error');
				if($('#CARD_NO').val()==''){
				   $('.ccp-error2').slideDown();
				   $('.ccp-error').slideUp();
			   }
	           else{
				$('.ccp-error').slideDown();
				$('.ccp-error2').slideUp();
			   }
	           cardValidationStatus = false;
	       }else{
	           cardValidationStatus = true;
	           $('.ccp-error').slideUp();
			   $('.ccp-error2').slideUp();
	           $this.removeClass('error');
	       }
	   }); 
});


	
//If the card no is empty and has the error.
	jQuery('body').on('focus','#CARD_NO',function(){
		if(jQuery(this).val()==""){
			if(jQuery(this).hasClass('error')){	
				jQuery('#CARD_NO').removeClass('error');
			}
		}
	});	

$('body').on('blur','#CARD_NO',function(){
		var card_num = $(this).val();
		card_num = card_num;
		var card_new_num = jQuery('input[name=CARDNO]').val(card_num);
		if(jQuery(this).hasClass('unknown'))
		{
			jQuery('#CARD_NO').addClass('error');
			removeAllCC_Class('#CARD_NO');
			//jQuery('.ccp-error').slideDown();
		}
		if(card_num=="")
		{
			jQuery('#CARD_NO').removeClass('error');
		}
		cardNum = card_num.replace(/\s/g,'');
		$("#card_number").val(cardNum);
	});

$('body').on('change','#CARD_EXPIRY_MONTH, #CARD_EXPIRY_YEAR',function(){
	var cardExpYr = ($("#CARD_EXPIRY_YEAR").val()).slice(-2);
	var cardExpMnt = $("#CARD_EXPIRY_MONTH").val();
	var expDate = cardExpYr+""+cardExpMnt;
	$("#expiry_date").val(expDate);
});

$('body').on('click','#CARD_NO',function(){
	  console.log('entered');
      $('.ccp-error').slideUp();
	  $('.ccp-error2').slideUp();
	  $(this).removeClass('error');  
});	
function _Conly(c) {
	  var regex = /^[a-zA-Z ]{2,30}$/;  
	  return regex.test(c);
}
function _Nonly(n) {
	  var regex = /^[0-9]{1,25}$/;  
	  return regex.test(n);
}
function validateCardExpiry(){
	var expiryMonth = jQuery('#CARD_EXPIRY_MONTH').val(), expiryYear = jQuery('#CARD_EXPIRY_YEAR').val();
	var cardMonth = expiryMonth || '01', cardYear = expiryYear || '1901';
	var elemMonth = jQuery('#CARD_EXPIRY_MONTH').parent('.custom-select-v3');
	var elemYear = jQuery('#CARD_EXPIRY_YEAR').parent('.custom-select-v3');	
	var cdate = new Date();
	var expDate = new Date(cardMonth+'/01/'+cardYear);
	if(typeof expiryMonth!=='undefined' && typeof expiryYear!=='undefined'){
		if(expDate.getFullYear()>cdate.getFullYear()){
			return true;
		}else if(expDate.getFullYear()==cdate.getFullYear() && expDate.getMonth()>=cdate.getMonth()){
			return true;
		}else{
			$('.psgExDate').addClass('error');
			$('.psgExDate').focus();
			return false;
		}
	}else{
		return true;
	}	
}
function validateCardExpiryCO(){
	var expiryMonth = jQuery('#CARD_EXPIRY_MONTH_CO').val(), expiryYear = jQuery('#CARD_EXPIRY_YEAR_CO').val();
	var cardMonth = expiryMonth || '01', cardYear = expiryYear || '1901';
	var elemMonth = jQuery('#CARD_EXPIRY_MONTH_CO').parent('.custom-select-v3');
	var elemYear = jQuery('#CARD_EXPIRY_YEAR_CO').parent('.custom-select-v3');	
	var cdate = new Date();
	var expDate = new Date(cardMonth+'/01/'+cardYear);
	if(typeof expiryMonth!=='undefined' && typeof expiryYear!=='undefined'){
		if(expDate.getFullYear()>cdate.getFullYear()){
			return true;
		}else if(expDate.getFullYear()==cdate.getFullYear() && expDate.getMonth()>=cdate.getMonth()){
			return true;
		}else{
			$('.psgExDate').addClass('error');
			$('.psgExDate').focus();
			return false;
		}
	}else{
		return true;
	}
}
//Function for alphanumeric validations
function AlphaNumericonly(n){
	  var regex = /^[A-Za-z0-9\s]+$/i;
	  return regex.test(n);
}
function validateCardInfo(transfers) {
    var condition = true;
    if (transfers) {

        //Arrival Airline Details validations

      if($('#gtaSrchHtl').is(':checked')) {	
    	if ($('#GTrHotlSearchKey').val() == "") {
			  growl_alert(i18n.t("PlsEntYourHtlDtl"));
            $("#GTrHotel").addClass('error');
            condition = false;
            return false;
        } else {
            $("#GTrHotel").removeClass('error');
        }
      }
      if($('#gtaEntHtl').is(':checked')) {     
        if ($('#GTrHotelEnt').val() == "") {
			  growl_alert(i18n.t("PlsEntYourHtlDtl"));
            $("#GTrHotelEnt").addClass('error');
            condition = false;
            return false;
        } else if(!AlphaNumericonly($('#GTrHotelEnt').val())){
        	 growl_alert(i18n.t("validHtlDetl"));
			$('#GTrHotelEnt').addClass('error');
			condition = false;
			 return false;
	}
        else {
            $("#GTrHotelEnt").removeClass('error');
        }
      }
        
        //Arrival validations
         if ($('#arrAirline').val() == "") {
			  growl_alert(i18n.t("Pleaseprovidearrivingairlinedetails"));
            $("#arrAirline").addClass('error');
            condition = false;
            return false;
        } else if(!AlphaNumericonly($('#arrAirline').val())){
        	 growl_alert(i18n.t("validArrFlightDetl"));
			$('#arrAirline').addClass('error');
			condition = false;
			 return false;
	} else {
            $("#arrAirline").removeClass('error');
        }
        //Arrival Flight Number Details validations
        if ($('#arrFlightno').val() == "") {
			growl_alert(i18n.t("pleaseprovidearrivalflightnumber"));
            $("#arrFlightno").addClass('error');
            condition = false;
            return false;
        } else if(!AlphaNumericonly($("#arrFlightno").val())){
        	 growl_alert(i18n.t("validArrFlightNum"));
			$("#arrFlightno").addClass('error');
			condition = false;
			 return false;
	}
        else {
            $("#arrFlightno").removeClass('error');
        }
     //traveller arrival details time comparisn
		/*  if(parseInt(($("#arrDetTime").val().split(",")[1]).split(":")[0]) <= parseInt($('#arrTransFTime').val())){
			 growl_alert("Please select the Lessthan Flight Arrival Time");
			 $("#arrTransFTime").addClass('error');
			 condition = false;
            return false;
		}else{
			 $("#arrTransFTime").removeClass('error');
		} */
		/* var bTimeTrans=parseInt($("#depDetTime").val().split(",")[1].split(":")[0]);
		var bTimedepTransFTime=parseInt($('#depTransFTime').val());
		
		 if(bTimeTrans==bTimedepTransFTime){
			 growl_alert(" Departure time not be same  your Flight Time");
			 $("#depTransFTime").addClass('error');
			 condition = false;
            return false;
		 }else{
			  $("#depTransFTime").removeClass('error');
		 } */

        if(typeof $('#arrivalFlightHidden').val() != "undefined" && $('#arrivalFlightHidden').val() == ""){
        	growl_alert("Please Provide Departing Flight Date");
            $(".arrivalFlightDate").addClass('error');
            condition = false;
            return false;
        }else{
        	$(".arrivalFlightDate").removeClass('error');
        }
        //both aar time and dep time validations.
        if (parseInt($('#arrTransFTime').val()) == parseInt($('#depTransFTime').val())) {
			growl_alert(i18n.t("arrivaltimeanddepartingtimecannotbesame"));
            $("#arrTransFTime").addClass('error');
            $("#depTransFTime").addClass('error');
            condition = false;
            return false;
        } else {
            $("#arrTransFTime").removeClass('error');
            $("#depTransFTime").removeClass('error');
        }
        //flight Departing details validations
        if ($('#depAirline').val() == "") {
			growl_alert(i18n.t("pleaseprovidedepartingairlinedetails"));
            $("#depAirline").addClass('error');
            condition = false;
            return false;
        }else if(!AlphaNumericonly($("#depAirline").val())){
        	 growl_alert(i18n.t("validDepFlightDetl"));
			$("#depAirline").addClass('error');
			condition = false;
			 return false;
	    }
         else {
            $("#depAirline").removeClass('error');
        }
        if ($('#depFilghtno').val() == "") {
			growl_alert(i18n.t("pleaseprovidedepartingflightno"));
            $("#depFilghtno").addClass('error');
            condition = false;
            return false;
        }else if(!AlphaNumericonly($("#depFilghtno").val())){
        	 growl_alert(i18n.t("validDepFlightNum"));
			$("#depFilghtno").addClass('error');
			condition = false;
			 return false;
	    } 
        else {
            $("#depFilghtno").removeClass('error');
        }
        if(typeof $('#departureFlightHidden').val() != "undefined" && $('#departureFlightHidden').val() == ""){
        	growl_alert("Please Provide Departing Flight Date");
            $(".departureFlightDate").addClass('error');
            condition = false;
            return false;
        }else{
        	$(".departureFlightDate").removeClass('error');
        }
		var departureFlightDate = $('#departureFlightHidden').val();
		var departureFlightTime = $('#depTransFTime').val();
		var departureFlightDT = departureFlightDate+'/'+departureFlightTime;
		var dropOffDate = $('._dropOffDate').val();
		console.log('departureFlightDT',departureFlightDT);
		var date1 = moment(dropOffDate,'YYYY/MM/DD/HH:mm').format('DD-MM-YYYY HH:mm');
		var date2 = moment(departureFlightDT,'YYYY/MM/DD/HH:mm').format('DD-MM-YYYY HH:mm');
		var diffMinutes = moment(date2,'DD-MM-YYYY HH:mm').diff(moment(date1,'DD-MM-YYYY HH:mm'),'minutes');
		if(typeof departureFlightDate != 'undefined'){
			if(diffMinutes<180){
				growl_alert("Departing airline time should be 3 hours excess than drop-off time");
				$('.departureFlightDate').addClass('error');
				$('#depTransFTime').addClass('error');
				return false;			
			}else{
				$('.departureFlightDate').removeClass('error');
				$('#depTransFTime').removeClass('error');
			}
		}
    }
    if ($('._payfort').hasClass('active')) {
		
        var cnum = $('#CARD_NO').val().replace(/\s/g, '');

		var ccDAppliedNum=$('.ccNumber').val();
		if(ccDAppliedNum == undefined || ccDAppliedNum === ''){
		 ccDAppliedNum=$('#ccdDetails').val();
		}
		
		
        if (cnum == "") {
            growl_alert(i18n.t("enterCardNumber"));
            $('#CARD_NO').addClass('error');
            $('#CARD_NO').focus();
            $('html, body').animate({scrollTop: $('#CARD_NO').offset().top - 110});
            condition = false;
            return false;
        }
        if (cnum.length != 16 || $('#CARD_NO').hasClass('error')) {
            growl_alert(i18n.t("cardNumberInvalid"));
            $('#CARD_NO').addClass('error');
            $('#CARD_NO').focus();           
            $('html, body').animate({scrollTop: $('#CARD_NO').offset().top - 110});
            condition = false;
            return false;
        }
		/*If credit card discount applied then we should not allow user to select other payment gateway options, should pay with only same credit card. */
		if(cnum !== '' && cnum.length == 16 && !$('#CARD_NO').hasClass('error') && $('._ccdsuccess').is(':visible')){
			
			if(cnum.slice(0,6) !== ccDAppliedNum){
				growl_alert(i18n.t("cmpltPaySmeDisc"));
				$('#CARD_NO').addClass('error');
				$('#CARD_NO').focus();           
				$('html, body').animate({scrollTop: $('#CARD_NO').offset().top - 110});
				condition = false;
				return false;  
			}
		}			
        if ($('#CARD_HOLDER_NAME').val() == "" || (!_Conly($('#CARD_HOLDER_NAME').val()))) {
            growl_alert(i18n.t("enterCardName"));
            $('#CARD_HOLDER_NAME').addClass('error');
            $('#CARD_HOLDER_NAME').focus();
            $('html, body').animate({scrollTop: $('#CARD_HOLDER_NAME').offset().top - 110});
            condition = false;
            return false;
        } else {
            $('#CARD_HOLDER_NAME').removeClass('error');
        }
        if ($('#CARD_EXPIRY_MONTH').val() == "") {
            growl_alert(i18n.t("selectMonth"));
            $('#CARD_EXPIRY_MONTH').addClass('error');
            //$('#CARD_EXPIRY_MONTH').focus();
            $('html, body').animate({scrollTop: $('#CARD_EXPIRY_MONTH').offset().top - 110});
            condition = false;
            return false;
        } else {
            $('#CARD_EXPIRY_MONTH').removeClass('error');
        }
        if ($('#CARD_EXPIRY_YEAR').val() == "") {
            growl_alert(i18n.t("selectYear"));
            $('#CARD_EXPIRY_YEAR').addClass('error');
            //$('#CARD_EXPIRY_YEAR').focus();
            $('html, body').animate({scrollTop: $('#CARD_EXPIRY_YEAR').offset().top - 110});
            condition = false;
            return false;
        } else {
            $('#CARD_EXPIRY_YEAR').removeClass('error');
        }
        console.log($('#CARD_CVV').val().length);
        if (($('#CARD_CVV').val().length < 3) || (!_Nonly($('#CARD_CVV').val())) || ($('#CARD_CVV').val().length > 3)) {
            growl_alert(i18n.t("enterCVV"));
            $('#CARD_CVV').addClass('error');
            $('#CARD_CVV').focus();
            $('#CARD_CVV').val("");
            $('html, body').animate({scrollTop: $('#CARD_CVV').offset().top - 110});
            condition = false;
            return false;
        }
        if ($('#CARD_EXPIRY_MONTH').val() != "" && $('#CARD_EXPIRY_YEAR').val() != "") {
            var validateExpDate = validateCardExpiry();
            if (validateExpDate == false) {
                $('#CARD_EXPIRY_MONTH').val("");
                $('#CARD_EXPIRY_YEAR').val("");
                growl_alert(i18n.t("validExpDate"));
                $('html, body').animate({scrollTop: $('#CARD_EXPIRY_YEAR').offset().top - 110});
                condition = false;
                return false;
            } else {
                return true;
            }
        }

        return false;
    }
	if ($('._checkout').hasClass('active')) {
       	var cnum = $('#checkout-form #CARD_NO').val().replace(/\s/g, '');	
        if (cnum == "") {
            growl_alert(i18n.t("enterCardNumber"));
            $('#checkout-form #CARD_NO').addClass('error');
            $('#checkout-form #CARD_NO').focus();
            $('html, body').animate({scrollTop: $('#checkout-form #CARD_NO').offset().top - 110});
            condition = false;
            return false;
        }
        if (cnum.length != 16 || $('#CARD_NO').hasClass('error')) {
            growl_alert(i18n.t("cardNumberInvalid"));
            $('#checkout-form #CARD_NO').addClass('error');
            $('#checkout-form #CARD_NO').focus();           
            $('html, body').animate({scrollTop: $('#checkout-form #CARD_NO').offset().top - 110});
            condition = false;
            return false;
        }
        if ($('#checkout-form #CARD_HOLDER_NAME').val() == "" || (!_Conly($('#checkout-form #CARD_HOLDER_NAME').val()))) {
            growl_alert(i18n.t("enterCardName"));
            $('#CARD_HOLDER_NAME').addClass('error');
            $('#CARD_HOLDER_NAME').focus();
            $('html, body').animate({scrollTop: $('#CARD_HOLDER_NAME').offset().top - 110});
            condition = false;
            return false;
        } else {
            $('#checkout-form #CARD_HOLDER_NAME').removeClass('error');
        }
        if ($('#checkout-form #CARD_EXPIRY_MONTH_CO').val() == "") {
            growl_alert(i18n.t("selectMonth"));
            $('#checkout-form #CARD_EXPIRY_MONTH_CO').addClass('error');
            //$('#CARD_EXPIRY_MONTH').focus();
            $('html, body').animate({scrollTop: $('#checkout-form #CARD_EXPIRY_MONTH_CO').offset().top - 110});
            condition = false;
            return false;
        } else {
            $('#checkout-form #CARD_EXPIRY_MONTH_CO').removeClass('error');
        }
        if ($('#checkout-form #CARD_EXPIRY_YEAR_CO').val() == "") {
            growl_alert(i18n.t("selectYear"));
            $('#checkout-form #CARD_EXPIRY_YEAR_CO').addClass('error');
            //$('#CARD_EXPIRY_YEAR').focus();
            $('html, body').animate({scrollTop: $('#checkout-form #CARD_EXPIRY_YEAR_CO').offset().top - 110});
            condition = false;
            return false;
        } else {
            $('#CARD_EXPIRY_YEAR_CO').removeClass('error');
        }
        console.log($('#checkout-form #CARD_CVV').val().length);
        if (($('#checkout-form #CARD_CVV').val().length < 3) || (!_Nonly($('#checkout-form #CARD_CVV').val())) || ($('#checkout-form #CARD_CVV').val().length > 3)) {
            growl_alert(i18n.t("enterCVV"));
            $('#checkout-form #CARD_CVV').addClass('error');
            $('#checkout-form #CARD_CVV').focus();
            $('#checkout-form #CARD_CVV').val("");
            $('html, body').animate({scrollTop: $('#checkout-form #CARD_CVV').offset().top - 110});
            condition = false;
            return false;
        }
        if ($('#checkout-form #CARD_EXPIRY_MONTH_CO').val() != "" && $('#checkout-form #CARD_EXPIRY_YEAR_CO').val() != "") {
            var validateExpDate = validateCardExpiryCO();
            if (validateExpDate == false) {
                $('#checkout-form #CARD_EXPIRY_MONTH_CO').val("");
                $('#checkout-form #CARD_EXPIRY_YEAR_CO').val("");
                growl_alert(i18n.t("validExpDate"));
                $('html, body').animate({scrollTop: $('#checkout-form #CARD_EXPIRY_YEAR_CO').offset().top - 110});
                condition = false;
                return false;
            } else {
                return true;
            }
        }
        return false;
    }
   
    if ($('._amex').hasClass('active')) {
       	var cnum = $('#amex-form #CARD_NO').val().replace(/\s/g, '');	
        if (cnum == "") {
            growl_alert(i18n.t("enterCardNumber"));
            $('#amex-form #CARD_NO').addClass('error');
            $('#amex-form #CARD_NO').focus();
            $('html, body').animate({scrollTop: $('#amex-form #CARD_NO').offset().top - 110});
            condition = false;
            return false;
        }
        if (cnum.length != 15 || $('#CARD_NO').hasClass('error')) {
            growl_alert(i18n.t("cardNumberInvalid"));
            $('#amex-form #CARD_NO').addClass('error');
            $('#amex-form #CARD_NO').focus();           
            $('html, body').animate({scrollTop: $('#amex-form #CARD_NO').offset().top - 110});
            condition = false;
            return false;
        }

        if ($('#amex-form #CARD_HOLDER_NAME').val() == "" || (!_Conly($('#amex-form #CARD_HOLDER_NAME').val()))) {
            growl_alert(i18n.t("enterCardName"));
            $('#CARD_HOLDER_NAME').addClass('error');
            $('#CARD_HOLDER_NAME').focus();
            $('html, body').animate({scrollTop: $('#CARD_HOLDER_NAME').offset().top - 110});
            condition = false;
            return false;
        } else {
            $('#amex-form #CARD_HOLDER_NAME').removeClass('error');
        }
        if ($('#amex-form #CARD_EXPIRY_MONTH_CO').val() == "") {
            growl_alert(i18n.t("selectMonth"));
            $('#amex-form #CARD_EXPIRY_MONTH_CO').addClass('error');
            //$('#CARD_EXPIRY_MONTH').focus();
            $('html, body').animate({scrollTop: $('#amex-form #CARD_EXPIRY_MONTH_CO').offset().top - 110});
            condition = false;
            return false;
        } else {
            $('#amex-form #CARD_EXPIRY_MONTH_CO').removeClass('error');
        }
        if ($('#amex-form #CARD_EXPIRY_YEAR_CO').val() == "") {
            growl_alert(i18n.t("selectYear"));
            $('#amex-form #CARD_EXPIRY_YEAR_CO').addClass('error');
            //$('#CARD_EXPIRY_YEAR').focus();
            $('html, body').animate({scrollTop: $('#amex-form #CARD_EXPIRY_YEAR_CO').offset().top - 110});
            condition = false;
            return false;
        } else {
            $('#CARD_EXPIRY_YEAR_CO').removeClass('error');
        }
        console.log($('#amex-form #CARD_CVV').val().length);
        if (($('#amex-form #CARD_CVV').val().length < 4) || (!_Nonly($('#amex-form #CARD_CVV').val())) || ($('#amex-form #CARD_CVV').val().length > 4)) {
            growl_alert(i18n.t("enterCVV"));
            $('#amex-form #CARD_CVV').addClass('error');
            $('#amex-form #CARD_CVV').focus();
            $('#amex-form #CARD_CVV').val("");
            $('html, body').animate({scrollTop: $('#amex-form #CARD_CVV').offset().top - 110});
            condition = false;
            return false;
        }
        if ($('#amex-form #CARD_EXPIRY_MONTH_CO').val() != "" && $('#amex-form #CARD_EXPIRY_YEAR_CO').val() != "") {
            var validateExpDate = validateCardExpiryCO();
            if (validateExpDate == false) {
                $('#amex-form #CARD_EXPIRY_MONTH_CO').val("");
                $('#amex-form #CARD_EXPIRY_YEAR_CO').val("");
                growl_alert(i18n.t("validExpDate"));
                $('html, body').animate({scrollTop: $('#amex-form #CARD_EXPIRY_YEAR_CO').offset().top - 110});
                condition = false;
                return false;
            } else {
                return true;
            }
        }
        return false;
    }

}
//sadad validation
function validateSadadOLP(args){
	if(args=="SADAD"){
		var input = $('#SADAD_OLP_ID');
	}else if(args=="FORT-SADAD"){
		var input = $('#sadad_olp');
	}else{
		var input = $('.olpaliasid');
	}
	if(input.val()==""){
		input.addClass('error');
		//growl_alert("Enter Online Payment Id Alias");
		growl_alert(i18n.t("onlinePaymentAlias"));
		return false;                   
	}else if(_Aval(input.val())){
		input.addClass('error');
		growl_alert(i18n.t("namesinenglish"));
		return false;                   
	}else if(args!="FORT-SADAD" && !isNaN((input.val().trim()).charAt(0))){
		input.addClass('error');
		growl_alert(i18n.t("validonlinePaymentAlias"));
		return false;                   
	}else if(!/^[a-zA-Z0-9_.@]{6,12}$/.test(input.val())) {
		input.addClass('error');
		growl_alert(i18n.t("validonlinePaymentAlias"));
		return false;                   
	}
	return true;
}
//Qitaf mobile no. validation
function ValidateQitafPhoneNumber(){
	var _mobileNo = $('#QITAF_MOBILE_NO');	
	 var len = _mobileNo.val().length;
	 var fchar=_mobileNo.val().charAt(0);
	 var schar=_mobileNo.val().charAt(0) + _mobileNo.val().charAt(1);
	 $('#QITAF_GRNOTP_BTN').addClass('LoadBtn');
	 if(_mobileNo.val()==""){		
		 alert('Please provide Mobile number');		 
		 $('#QITAF_GRNOTP_BTN').removeClass('LoadBtn');
        $('#QITAF_GRNOTP_BTN').focus();
        return false;
	 }
	 if(_mobileNo.val()!="" && len<9){
		 alert('Please enter a valid mobile number');
        $('#QITAF_GRNOTP_BTN').removeClass('LoadBtn');
        $('#QITAF_GRNOTP_BTN').focus();
        return false;
    }
	 if((_mobileNo.val()!="") && ((len==9 && fchar != 5)||(len==10 && schar != 05))){
		 alert('Please enter a valid mobile number');
        $('#QITAF_GRNOTP_BTN').removeClass('LoadBtn');
        $('#QITAF_GRNOTP_BTN').focus();
        return false;
    }
	return true;
}

//@p the dropdown for expiry dates.           
	function cardYear(){
		var html = '';
		var years=moment().format('YYYY'); 
		for(var i=0;i<=50;i++){
			var y = parseInt(years)+parseInt(i);
			html +='<option year='+y+'>'+y+'</option>'
		}
		$('#CARD_EXPIRY_YEAR').append(html);
		$('#CARD_EXPIRY_YEAR_CO').append(html);
		$('input.credit_card_number').formance('format_credit_card_number');
	}
	
	
$('._cardExpMonth').on('change',function(){
	$('input[name="ccmonth"]').val($(this).val());
});

$('._cardExpYear').on('change',function(){
	$('input[name="ccyear"]').val($(this).val().substring(2,4));
});




/**
 *@description common payment Module 
 *@author Mansoor Ali
 *@date 31-May-2016
 *@email mansoor@flyin.com
 */

/**
 *@Info Payment Module
*/

/*below styles forbank transfer*/
$('body').on('click','#prfdBnkTabs li h3', function(){	
  	$('#prfdBnkTabs .bnkDetails').slideUp();
	$("#prfdBnkTabs li").removeClass("active");
	if($(this).next().is(':hidden')){
		$(this).next().slideDown();
		$(this).parent().addClass("active")
	}
});

function payMeProduct(args, elm) {	
	var pnlHdng = $(".payment .panel-heading");
	var chkActvP = false;
	/*for(var i=0; i<pnlHdng.length; i++){
		if($(pnlHdng[i]).is(':visible') && $(pnlHdng[i]).hasClass("active")){
			chkActvP = true;
			break;
		}
	}*/
	var target = $('._payMode');
	target.each(function(){
		if($(this).hasClass('active')){
			chkActvP = true;
		}
	});
	if(chkActvP){
		var pid = $('#CPP').attr('data-pid');
		 if(args=="QUICKPAY"){
				 var cvv;
				 var unique_id;
				 var radio = $('._saveCardHideShow').find('input[type=radio]');
				 radio.each(function(){
				   if($(this).is(':checked')){
				     unique_id = $(this).attr('id');
				     console.log(unique_id);
				     cvvObj =  $(this).closest('li').find('#QUICKPAY_CARD_CVV');
				     cvv =  $(this).closest('li').find('#QUICKPAY_CARD_CVV').val();
				   }
				});
			 	if((cvv.length < 3)||(!_Nonly(cvv))||(cvv.length > 3)){  
		            growl_alert(i18n.t("enterCVV"));
		            cvvObj.addClass('error');
		            cvvObj.focus();
		            cvvObj.val("");
		            condition1=false;
					return;
	            }else{
	            	condition1= true;
	            }
			 }
			 
			 if(condition1){
				 btnLoadingAnimation($('#paymeBtn'));
				 dontRefreshPopup();
				 var cvv;
				 var unique_id;
				 var radio = $('._saveCardHideShow').find('input[type=radio]');
				 radio.each(function(){
				   if($(this).is(':checked')){
					 unique_id = $(this).attr('id');
					 cvv =  $(this).closest('li').find('#QUICKPAY_CARD_CVV').val();
				   }
				   
				 })	 		 
				 
				 var data = {
							cvv:cvv,
							pid:pid,
							unique_id:unique_id,
							device_fingerprint:device_fingerprint
					}
					$.post('/payment/payfort/quickPay', data, function(res) {
						if(res.status==='success')
						 {
							if(res.check_3ds)
							{
								location.href = res.url;
							}
							else{
								if(res.bnpl)
								{
									location.href = "/pages/hotel/hotelConfirmation?SavedItenaryId="+res.savedItenaryId+'&pid='+res.pid;
								}
								else if(res.product === 'mfc' || res.product === 'ma'){
									location.href = res.rurl;
								}
								else if(res.hashPay)
								{
									if(res.product === 'F')
									{
										location.href = "/hashPay/flightconfirmation?pid="+res.pid;
									}
									else if(res.product === 'H'){
										location.href = "/hashPay/hotelConfirmation?pid="+res.pid;
									}
									
								}
								else{
									loadFlightConfirmationPage({pid:res.pid,uuid:res.uuid});
								}
							}
						 }
						 else{
							location.href = '/payment/payfortRetry?pid='+res.pid;
						 }	
						
					});	
			 }
	    if (args === 'PAYFORT') {
	        var condition1 = validateCardInfo();
	        if (condition1 == true) {
	        	dontRefreshPopup();
	        	var device_fingerprint = $('#device_fingerprint').val();
	        	var data = {
	   					device_fingerprint:device_fingerprint,
	   				    pid:pid,
	   			}
	   			//console.log('device_fingerprint  ===',device_fingerprint);
	   			$.post('/payment/payfort/saveDeviceFingerPrint', data, function(res) {
	   				$('#paymentForm').submit();
	   			});	
	            /*var CARD_NO = $('#CARD_NO');
	            var CARD_HOLDER_NAME = $('#CARD_HOLDER_NAME');
	            var CARD_EXPIRY_MONTH = $('#CARD_EXPIRY_MONTH');
	            var CARD_EXPIRY_YEAR = $('#CARD_EXPIRY_YEAR');
	            var CARD_CVV = $('#CARD_CVV');
	            var data = {
	                CARD_NO: CARD_NO.val() || '',
	                CARD_HOLDER_NAME: CARD_HOLDER_NAME.val() || '',
	                CARD_EXPIRY_MONTH: CARD_EXPIRY_MONTH.val() || '',
	                CARD_EXPIRY_YEAR: CARD_EXPIRY_YEAR.val() || '',
	                CARD_CVV: CARD_CVV.val() || '',
	                PID: pid,
	            }
	            
	            console.log('data' + JSON.stringify(data));
	            $.post('/payment/payfort', data, function(res) {
	            	 if(res.status==='success')
	    			 {
	    			 	location.href = res.url;
	    			 }
	    			 else{
	    				location.href = '/common/error';
	    			 }
	            });*/
	        }
	    } 
	      if(args==='CHECKOUT'){
	    	var condition1 = validateCardInfo();
	        if (condition1 == true){
				 dontRefreshPopup();
				 $('#checkout-form').submit();
			  } 
	     }

         if(args==='AMEX'){
	    	var condition1 = validateCardInfo();
	        if (condition1 == true){
				 dontRefreshPopup();
				 $('#amex-form').submit();
			  } 
	     }
	    if (args === 'SADAD') {
	        var sadadFire = validateSadadOLP(args);
	        if (sadadFire) {
	            dontRefreshPopup();
	            var OLP_ID = $('#SADAD_OLP_ID');
	            var data = {
	                OLP_ID: OLP_ID.val() || '',
	                PID: pid,
	            }
	            $.post('/payment/sadad', data, function(res) {
	                if (res.status === "SUCCESS") {
	                    location.href = res.ibURL;
	                    $('#paymentStep').addClass('done');
	                    $('#goodToGoStep').addClass('active');
	                } else if (res.status === "FAILED") {
	                    $('#sadadErrorMessage').text(res.errorMessage).addClass('validate_error_message');
	                    $('#dontRefreshPopup').modal('hide');
	                    var offsetPopTop = $('.payment.opcPayment').offset().top;
	                    $('html, body').animate({
	                        scrollTop: offsetPopTop
	                    }, 500);
	                }
	            });
	        }
	    }
		if (args === 'FORT-SADAD') {
			var sadadFire = validateSadadOLP(args);
			if (sadadFire) {		
			btnLoadingAnimation($('#paymeBtn'));
			var sadad_olp = $('#sadad_olp').val();			
			var data = {
					sadad_olp:sadad_olp,
				    pid:pid,
			}
			$.post('/payment/fortSadad/generateFortSadadDetails',data, function(sadadResposne) {						                
               
                $('._fort-sadad').find('#signature').val(sadadResposne.shaSign);
                $('._fort-sadad').find('#command').val(sadadResposne.command);
                $('._fort-sadad').find('#merchant_identifier').val(sadadResposne.merchant_identifier);
                $('._fort-sadad').find('#access_code').val(sadadResposne.access_code);
                $('._fort-sadad').find('#merchant_reference').val(sadadResposne.merchant_reference);
                $('._fort-sadad').find('#amount').val(sadadResposne.amount);
                $('._fort-sadad').find('#currency').val(sadadResposne.currency);
                $('._fort-sadad').find('#language').val(sadadResposne.language);
                $('._fort-sadad').find('#customer_email').val(sadadResposne.customer_email);
                $('._fort-sadad').find('#payment_option').val(sadadResposne.payment_option);
                $('._fort-sadad').find('#order_description').val(sadadResposne.order_description);
                $('._fort-sadad').find('#customer_ip').val(sadadResposne.customer_ip);
                $('._fort-sadad').find('#eci').val(sadadResposne.eci);
                $('._fort-sadad').find('#customer_name').val(sadadResposne.customer_name);             
				$('._fort-sadad').find('#merchant_extra').val(sadadResposne.merchant_extra);
                $('._fort-sadad').find('#return_url').val(sadadResposne.return_url);
                $('._fort-sadad').find('#fortSadadForm').attr('action', sadadResposne.action_url);

				$('#fortSadadForm').submit();
            });
		}
	  }
	    if (args === 'INSTALLMENTS') {
	        btnLoadingAnimation($(elm));
	        dontRefreshPopup();
	        $(elm).attr("disabled", "disabled");
	        $(elm).text(i18n.t("processingText"));
	        var data = {
	            pid: pid
	        }
	        $.post('/payment/installments', data, function(res) {
	        	if(res.status==='SUCCESS')
				 {
					 location.href=res.redirectURL;
				 }
				 else{
					 location.href = '/common/error';
				 }
	        });
	    }
	}
	else{
		growl_alert(i18n.t("slctPymntOptn"));
	}
}



function bankTransferBkng(pid){
	
	var bankTransfer = false;
	if($('body').find('._bankTransfer').hasClass('active')){
		bankTransfer = true;
	}
	
	var merchantBankkey = 0 ;
     if($('body').find('._bank1').hasClass('active')){
		merchantBankkey = 1; 
	 }
	 if($('body').find('._bank2').hasClass('active')){
		merchantBankkey = 2; 
	 }
	 if($('body').find('._bank3').hasClass('active')){
		merchantBankkey = 3; 
	 }
	 if($('body').find('._bank4').hasClass('active')){
		merchantBankkey = 4; 
	 }
	 if($('body').find('._bank5').hasClass('active')){
		merchantBankkey = 5; 
	 }
	var data ={pid:pid,payMode:'BANKTRANSFER',merchantBankkey:merchantBankkey}; 	
	if(bankTransfer)
	{
		 if(merchantBankkey!==0)
		 {
			dontRefreshPopup();
			bookingStatusChange({pid:pid});
			$.post('/payment/getData',data,function(res){
			     console.log("res============",res);	
				 if(res.response.paymentObj.product == 'H')
				 {
					 $.post('/payment/bankTransfer',{pid:pid,merchantBankkey:merchantBankkey},function(returnObj){
						 if(returnObj.status==="ERROR")
						 {
							location.href="/flight/error"; 
							return;
						 }
						 if(returnObj.product==='H')
						 {
						   location.href = '/hotel/confirmation?pid='+pid;
						 }
					 }); 
				 }
				 if(res.response.paymentObj.product == 'F')
				 {
					  if(res.response.fareComboSelected== true && res.response.PNR == null)
					  { 
				         $.post('/payment/payAtStorePreBookFareCombo',data,function(returnObj){	
						     if(returnObj.response == null || returnObj.response.bookRS == null)
							 {
								 var templateObj = {pnrUrl:returnObj.pnrUrl};
								 flightSerVar.loadTemplate('technical_error',templateObj,$('#priceChangePopup'),function(){
										$('#priceChangePopup').modal({
											 show: true,
											 keyboard: false,
											 backdrop:'static'
										});
								});
								return;
						     }
							 else if(returnObj.response.bookRS.fareChange == 'YES')
							 { 
							    $.get('/common/themes/v2/tmpl/flight/flightReview.ejs?v='+Math.random(),{},function(template){
											flightSerVar.dynamicTemplate = template;
											var templateObj = {
													args:'BANKTRANSFER', 
													pid:pid,
													uc:returnObj.response.uc,
													onwrdUpdatePrice:returnObj.response.onwrdUpdatePrice,
													onwrdPrice:returnObj.response.onwrdPrice,
													retrnUpdatePrice:returnObj.response.retrnUpdatePrice,
													returnPrice:returnObj.response.returnPrice,
													pnrUrl:returnObj.response.pnrUrl,
													trip:returnObj.response.tripChanged
											}
											flightSerVar.loadTemplate('fareCombo_price_change',templateObj,$('#priceChangePopup'),function(){
												$('#priceChangePopup').modal({
													 show: true,
													 keyboard: false,
													 backdrop:'static'
												});
											});
											
								});
							 }
							 else if(returnObj !== null && returnObj.response && returnObj.status=='SUCCESS')
							 {
								$.post('/update/bankTransferDetails',data,function(returnObj){
									if(returnObj.status==='SUCCESS'){
										location.href= '/flight/confirmation?pid='+pid;
                                        return;
									}
								});
							 }
							 else
							 {
								var templateObj = {
												pnrUrl:returnObj.response.pnrUrl
										}
								flightSerVar.loadTemplate('technical_error',templateObj,$('#priceChangePopup'),function(){
											$('#priceChangePopup').modal({
												 show: true,
												 keyboard: false,
												 backdrop:'static'
												 });
										});
								return;
							}
						 
						 });                
				      }
					  else if(res.response.PNR == null && res.response.fareComboSelected == false)
					  {
						  $.post('/payment/payAtStorePreBook',data,function(returnObj){
							  if(returnObj.response == null || returnObj.response.bookRS == null)
							  {								
								 var base_url = window.location.origin;
								 var result = base_url+'/flight/pnrError?pid='+pid;
								 location.href = result;								 
								 return;
							  }
							  else if(returnObj.response.bookRS.fareChange && returnObj.response.bookRS.fareChange.toLowerCase() == 'YES'.toLowerCase())
							  {
									$.get('/common/themes/v2/tmpl/flight/flightReview.ejs?v='+Math.random(),{},function(template){
										flightSerVar.dynamicTemplate = template;
										var templateObj = {
												args:'BANKTRANSFER', 
												pid:pid,
												uc:returnObj.response.uc,
												updatedPrice:returnObj.response.updatedPrice,
												FromPrice:returnObj.response.FromPrice,
												pnrUrl:returnObj.response.pnrUrl
										}
										flightSerVar.loadTemplate('price_change',templateObj,$('#priceChangePopup'),function(){										
											$('#priceChangePopup').modal({
												 show: true,
												 keyboard: false,
												 backdrop:'static'
												 });
										});
										
									});
							  } 
							  else if(returnObj !== null && returnObj.response && returnObj.status=='SUCCESS')
							  {
								$.post('/update/bankTransferDetails',data,function(returnObj){
									if(returnObj.status==='SUCCESS'){
										location.href= '/flight/confirmation?pid='+pid;
                                        return;
									}
								  });						
							  }
							  else
							  {
								location.href="/flight/error"; 
							    return;
							  }
						  });
					  }
					  else
					  {
					  	$.post('/update/bankTransferDetails',data,function(returnObj){
									if(returnObj.status==='SUCCESS'){
										location.href= '/flight/confirmation?pid='+pid;
                                        return;
									}
									else
							  		{
										location.href="/flight/error"; 
									    return;
							  		}
						});
					  }
				  }
            });
		 }
		 else
		 {
			  //validation please select your bank 
			  growl_alert(i18n.t("slctPymntBank"));
		 }
   }else
   {
	   //validation please select payment option
	   growl_alert(i18n.t("slctPymntOptn"));
   }
   
}



function bnkTrnsfrUpdatePayment(flyinCode,product){
	$.post('/payment/bnkTrnsfrUpdatePayment',{flyinCode:flyinCode,product:product},function(res){
		
		if(res.status==="PAYMENTACCEPTED"){
		   location.href="/flight/paymentDoneError"; 
		   return;
		}
		if(res.status==="PAYMENTCANCELLED"){
		   location.href="/flight/cancelError"; 
		   return;
		}
		
		if(res.status==="FAILURE")
        {
		   location.href="/flight/error"; 
		   return;
		}
		if(res.status==="SUCCESS"){
			if(res.product==='F'){
				location.href="/payment/bankTransferFlightPayment?pid="+res.pid;
				return;
			}
			if(res.product==='H'){
				location.href="/payment/bankTransferHotelPayment?pid="+res.pid;
				return;
			}
		}
		console.log('bnkTrnsfrUpdatePaymentResponse######',JSON.stringify(res.response));
	});
}

function hashPayPayment(pid){
	var customername = $('#customerName').val();
	var referencenumber = $('#referenceNumber').val();
	var dateofTransfer = $('#dateofTransfer').val();
	var validate = true;
	var spcialchars = "!@#$%^&*()+=-[]\\\';,./{}|\":<>?";
	
	if(customername !==""){
			for (var i = 0; i < customername.length; i++) {
				if (spcialchars.indexOf(customername.charAt(i)) != -1) {
					validate = false;
					growl_alert(i18n.t("plsPrvdCstmrName"));
					return;
				}
			}
	}else{
			validate = false;
			growl_alert(i18n.t("plsPrvdCstmrName"));
			return;
	}
	if((dateofTransfer=="")){
		validate = false;
		growl_alert(i18n.t("pickDate"));
		return;
	}
	
	if(referencenumber !==""){
			for (var i = 0; i < referencenumber.length; i++) {
				if (spcialchars.indexOf(referencenumber.charAt(i)) != -1) {
					validate = false;
					growl_alert(i18n.t("plsPrvdVaildRefNo"));
					return;
				}
			}
	}else{
		validate = false;
		growl_alert(i18n.t("plsPrvdRefNo"));
		return;
	}
	
	if(validate){
		$.post('/payment/hashPayPayment',{pid:pid,customername:customername,referencenumber:referencenumber,dateofTransfer:dateofTransfer},function(res){
		if(res.status==='ERROR'){
		   location.href="/flight/error"; 
		 }if(res.status==='SUCCESS'){
			//show pop up
			$('#bnkDtlsUpdSucs').modal({
				 show: true,
				 keyboard: false,
				 backdrop:'static'
				 });
			return;
		  } 
	    });
	}
	
}	



var FJS;
function initFlightFilter(res) {
	flightServiceVar.baseObj = JSON.parse(JSON.stringify(res));
	flightServiceVar.filterData = flightServiceVar.baseObj.flights.searchRes;
	var flights = res.flights.searchRes;
	var packPrices = res.flights.flightFilters.priceList; 
	initFlightSliders();
	var checkbox_filters = [{
			field: 'filterData.stops',
			ele: '#stops-filter-list ul li input[type=checkbox]'
		}, {
			field: 'filterData.airlineInfo.ac',
			ele: '#airlineName-filter-list li input[type=checkbox]'
		}, {
			field: 'filterData.departureEventOnward.period',
			ele: '#_depature_time_filter li input[type=checkbox]'
		}, {
			field: 'filterData.arrivalEventOnward.period',
			ele: '#_arrival_time_filter li input[type=checkbox]'
		}, {
			field: 'filterData.departureEventReturn.period',
			ele: '#_returnTrip_depature_time_filter li input[type=checkbox]'
		}, {
			field: 'filterData.arrivalEventReturn.period',
			ele: '#_returnTrip_arrival_time_filter li input[type=checkbox]'
		}, {
			field: 'filterData.stopOverAirportOnward',
			ele: '#_stopOverAirport-filter-list li input[type=checkbox]'
		}, {
			field: 'filterData.stopOverAirportReturn',
			ele: '#_returnStopOverAirport-filter-list li input[type=checkbox]'
		}, {
			field: 'filterData.nearByAirports',
			ele: '#_nearByAirport-filter-list li input[type=checkbox]'			
		}, {
			field: 'filterData.packageFare',
			ele: '#_flight_price_fliter',
			type: 'range'
		},{
			field: 'filterData.airlineInfo.alliance',
			ele: '#_ffp-tab li input[type=checkbox]',
			
		}

	];

	FJS = FilterJS(flights, '', {
			template: '',
			callbacks: {
				afterFilter: afterFilter
			}
		});
	$.each(checkbox_filters, function (i, filter) {
		FJS.addCriteria(filter);
	});
	function afterFilter(result, jQ) {
		if(result && result.length == 0){			
			$('.flightNoFilteredResults').show();
			$('.flightResultContainer').hide();
		}else{
			var tempData = {
			flights: {
				searchRes: result,
				resultsHeader: res.flights.resultsHeader,
				maps: res.flights.maps,
				sessionCurrency:res.flights.sessionCurrency,
			},
			token : res.token
			};
			flightServiceVar.filterData = result;			
			fphService.loadTemplate('fph_desktop_flightResults', tempData, $('.flightResultContainer'), function () {				
				ULTriplessMoreForLegs(['_flight_trip1', '_flight_trip2', '_flight_trip3'], function () {
					setTimeout(function () {
						var target = $('.priceGrid');
						target.each(function () {
							var containerHeight = $(this).parents('.item.primary-item').innerHeight();
							var fphPricePrt = $(this).find('.fphPricePrt').height();
							
							 
						if(containerHeight>270){
							$(this).find('.mobileBooknow').css({
								'padding-top': (containerHeight) / 2 - fphPricePrt+70,
								'height': containerHeight
							});
						} else {
							$(this).find('.mobileBooknow').css({
								'padding-top': 20,
								'height': 300
							});
						}
						
						});
					}, 80);
				});
				$('.flightNoFilteredResults').hide();
				$('.flightResultContainer').show();
				pricetagConvert.init();
			});
		}
		
		flightServiceVar.UIFilterSelected();
		var flightCount=0;
		for(var i=0;i<result.length;i++){
			flightCount=flightCount+result[i].trips[0].length;
		}
		$('.foundFlt').find('elm').text(flightCount);
	};

	function initFlightSliders() {		
		if(packPrices.length==0 || packPrices.length==1){
			$("#_flight-price-filter-section").hide();
		}else{		
			$("#_flight-price-filter-section").slideDown();
		}
		if(slider){
			slider.destroy();
			$("#_flight_price_fliter").val(packPrices[0]+":"+packPrices[packPrices.length -1]);
		}
		$range = $("#_flight_price_fliter").ionRangeSlider({
			values: packPrices,
			range: true,
			type: 'double',
			prefix: "<span>"+i18n.t(res.flights.sessionCurrency)+"</span> ",
			onFinish: function (obj){
				priceMin = obj.from_value;
				priceMax = obj.to_value;
			}
		});
		slider = $range.data("ionRangeSlider");
	}

	//-------------------END OF THE INIT FUNCTION----------------//
};

/**
 * sort hotels by star rating and price
 */
$('body').on('change','._sortFlights',function () {
	var $t = $(this);
	$('._sortFlights').each(function(){
			if($t[0]!==$(this)[0]){
				
				$(this).find('select').val('');
			}
	});
	var val = $t.find('select').val();	
	var flights = flightServiceVar.filterData;
	var FFJS=FJS.Model.records;
	
	//sort by early departure
	if(val == 'dEar'){
		//sort the trips inside the itenaries
		for(var i=0;i<flights.length;i++){
			//out bound
			flights[i].trips[0].sort(function(a,b){
				return a.jsonSector[0].depDateAndTimeMins-b.jsonSector[0].depDateAndTimeMins;
			});
			//in bound

		};
		//sort the itenaries
		//out bound
		flights.sort(function(a,b){
			return a.trips[0][0].jsonSector[0].depDateAndTimeMins-b.trips[0][0].jsonSector[0].depDateAndTimeMins;	
		});

		for(var i=0;i<FFJS.length;i++){
			//out bound
			FFJS[i].trips[0].sort(function(a,b){
				return a.jsonSector[0].depDateAndTimeMins-b.jsonSector[0].depDateAndTimeMins;
			});
			//in bound

		};
		//sort the itenaries
		//out bound
		FFJS.sort(function(a,b){
			return a.trips[0][0].jsonSector[0].depDateAndTimeMins-b.trips[0][0].jsonSector[0].depDateAndTimeMins;	
		});

	}
	//sort by late departure
	if(val == 'dLat'){
		//sort the trips inside the itenaries
		for(var i=0;i<flights.length;i++){
			//out bound
			flights[i].trips[0].sort(function(a,b){
				return b.jsonSector[0].depDateAndTimeMins-a.jsonSector[0].depDateAndTimeMins;
			});
			//in bound

		};
		//sort the itenaries
		//out bound
		flights.sort(function(a,b){
			return b.trips[0][0].jsonSector[0].depDateAndTimeMins-a.trips[0][0].jsonSector[0].depDateAndTimeMins;	
		});

		//sort the trips inside the itenaries
		for(var i=0;i<FFJS.length;i++){
			//out bound
			FFJS[i].trips[0].sort(function(a,b){
				return b.jsonSector[0].depDateAndTimeMins-a.jsonSector[0].depDateAndTimeMins;
			});
			//in bound

		};
		//sort the itenaries
		//out bound
		FFJS.sort(function(a,b){
			return b.trips[0][0].jsonSector[0].depDateAndTimeMins-a.trips[0][0].jsonSector[0].depDateAndTimeMins;	
		});

	}
	//sort by early arrival
	if(val == 'aEar'){
		//sort the trips inside the itenaries
		for(var i=0;i<flights.length;i++){
			//out bound
			flights[i].trips[0].sort(function(a,b){
				return b.jsonSector[0].arrDateAndTimeMins-a.jsonSector[0].arrDateAndTimeMins;
			});
			//in bound

		};
		//sort the itenaries
		//out bound
		flights.sort(function(a,b){
			return b.trips[0][0].jsonSector[0].arrDateAndTimeMins-a.trips[0][0].jsonSector[0].arrDateAndTimeMins;	
		});

		//sort the trips inside the itenaries
		for(var i=0;i<FFJS.length;i++){
			//out bound
			FFJS[i].trips[0].sort(function(a,b){
				return b.jsonSector[0].arrDateAndTimeMins-a.jsonSector[0].arrDateAndTimeMins;
			});
			//in bound

		};
		//sort the itenaries
		//out bound
		FFJS.sort(function(a,b){
			return b.trips[0][0].jsonSector[0].arrDateAndTimeMins-a.trips[0][0].jsonSector[0].arrDateAndTimeMins;	
		});

	}
	//sort by late arrival
	if(val == 'aLat'){
		//sort the trips inside the itenaries
		for(var i=0;i<flights.length;i++){
			//out bound
			flights[i].trips[0].sort(function(a,b){
				return a.jsonSector[0].arrDateAndTimeMins-b.jsonSector[0].arrDateAndTimeMins;
			});
			//in bound

		};
		//sort the itenaries
		//out bound
		flights.sort(function(a,b){
			return a.trips[0][0].jsonSector[0].arrDateAndTimeMins-b.trips[0][0].jsonSector[0].arrDateAndTimeMins;	
		});

		//sort the trips inside the itenaries
		for(var i=0;i<FFJS.length;i++){
			//out bound
			FFJS[i].trips[0].sort(function(a,b){
				return a.jsonSector[0].arrDateAndTimeMins-b.jsonSector[0].arrDateAndTimeMins;
			});
			//in bound

		};
		//sort the itenaries
		//out bound
		FFJS.sort(function(a,b){
			return a.trips[0][0].jsonSector[0].arrDateAndTimeMins-b.trips[0][0].jsonSector[0].arrDateAndTimeMins;	
		});

	}
	// sort by shortest trip duration
	// outbound
	if(val == 'short'){
		//sort the trips inside the itenaries
		for(var i=0;i<flights.length;i++){
			//out bound
			flights[i].trips[0].sort(function(a,b){
				return a.totalDurationMinutes-b.totalDurationMinutes;
			});
			//in bound

		};
		//sort the itenaries
		//out bound
		flights.sort(function(a,b){
			return a.trips[0][0].totalDurationMinutes-b.trips[0][0].totalDurationMinutes;	
		});

		//sort the trips inside the itenaries
		for(var i=0;i<FFJS.length;i++){
			//out bound
			FFJS[i].trips[0].sort(function(a,b){
				return a.totalDurationMinutes-b.totalDurationMinutes;
			});
			//in bound

		};
		//sort the itenaries
		//out bound
		FFJS.sort(function(a,b){
			return a.trips[0][0].totalDurationMinutes-b.trips[0][0].totalDurationMinutes;	
		});

	

}
// sort by longest trip duration
	// outbound
	if(val == 'long'){		
		//sort the trips inside the itenaries
		for(var i=0;i<flights.length;i++){
			//out bound
			flights[i].trips[0].sort(function(a,b){
				return b.totalDurationMinutes-a.totalDurationMinutes;
			});
			//in bound

		};
		//sort the itenaries
		//out bound
		flights.sort(function(a,b){
			return b.trips[0][0].totalDurationMinutes-a.trips[0][0].totalDurationMinutes;	
		});
		//sort the trips inside the itenaries
		for(var i=0;i<FFJS.length;i++){
			//out bound
			FFJS[i].trips[0].sort(function(a,b){
				return b.totalDurationMinutes-a.totalDurationMinutes;
			});
			//in bound

		};
		//sort the itenaries
		//out bound
		FFJS.sort(function(a,b){
			return b.trips[0][0].totalDurationMinutes-a.trips[0][0].totalDurationMinutes;	
		});

	

}
//sort by lowest price
if(val=='low'){
	flights.sort(function(a,b){
		return a.filterData.packageFare-b.filterData.packageFare;
	});
	FFJS.sort(function(a,b){
		return a.filterData.packageFare-b.filterData.packageFare;
	});

}
//sort by highest price
if(val=='high'){
	flights.sort(function(a,b){
		return b.filterData.packageFare-a.filterData.packageFare;
	});
	FFJS.sort(function(a,b){
		return b.filterData.packageFare-a.filterData.packageFare;
	});

}
flightServiceVar.filterData = flights;
flightServiceVar.flightsRender();	
});




$(document).ready(function () {
	
	setTimeout(function () {
		if ($('.fph ._quickPayCont').is(':visible'))
			//if($('.fph ._quickPayCont .panel-heading').hasClass('active'))
		{
			$('#paymeBtn').attr("onclick", "payMePackage('QUICKPAY',this)");
		}
	}, 500);

	/*
	 *FPH Results Refresh Rendering
	 */

	var PAGEID = $('input[name=_PAGE_ID]');
	if (PAGEID.val() == "FPHRESULT_PAGE") {
		fphSearchOnLoad();
	}

	$('body').on('click', '.showDetailsPOP', function (e) {
		e.stopPropagation();
		$(this).parent().find('.fltDetails').show();
		return false;
	});
	/*$('body').on('click','.flightHotels', function(){
	//$('#flightsRoundtripFH').trigger('click');
	$('#selectedFPHSO').val('flightsRoundtripFH');
	});*/
	var pricechanged = $('input[name=_fphpriceChanged]');
	if (pricechanged.val() == "true") {
		$('#_revMessId').modal('show');
	} else {
		$('#_revMessId').modal('hide');
	}
	var showPayment = $('input[name=showPayment]');
	if (showPayment.val() == "true") {
		$('.paymentBlock').show();
		$('._fphPayButton').show();
	} else if (showPayment.val() == "false") {
		$('.paymentBlock').hide();
		$('._fphPayButton').hide();
	}
	/*
	FPH COOKIES
	 */
	var dCookie = Cookies.get('fphNSearchCookie') || ''
		var checkHomeSearch = $('body.homePage');
	if (dCookie != "" && checkHomeSearch.length > 0) {
		var cookieData = JSON.parse(dCookie);
		$('#roundFromFPH').val(cookieData.fromInput);
		$('#roundToFPH').val(cookieData.toInput);
		$('#roundFromFPH').attr("title", cookieData.fromInput);
		$('#roundToFPH').attr("title", cookieData.toInput);
		$('#roundFromIdFH').val(cookieData.fromIATA);
		$('#toRoundIDFH').val(cookieData.toIATA);
		$('#roundFromFPH').attr('data-iata', cookieData.fromIATA);
		$('#roundToFPH').attr('data-iata', cookieData.toIATA);
		$('#flighthotelsearchKey').val(cookieData.flighthotelsearchKey);
		$('#depFlightHotelSearchKey').val(cookieData.depFlightHotelSearchKey);

		if (cookieData.tripType === "oneWay") {
			$('#flightsOnewayFH').trigger('click');
			$('#selectedFPHSO').val('flightsOnewayFH');
		}
		if (cookieData.tripType === "roundTrip") {
			$('#flightsRoundtripFH').trigger('click');
			$('#selectedFPHSO').val('flightsRoundtripFH');
		}
	} else {
		$('#selectedFPHSO').val('flightsRoundtripFH');
		$('#flightsRoundtripFH').trigger('click');
		$(".fromtwowayFPH, .totwowayFPH, .fromonewayFPH, #rThdateFHiddenFH, #rThdateTHiddenFH, #hdateFHiddenFH").val("");
	}
	$('._fphTxtOnwardExtraBaggage').find('option').eq(0).prop('selected', true);
	$('._fphTxtReturnExtraBaggage').find('option').eq(0).prop('selected', true);
	if (typeof $('.couponOfcode').text() == 'undefined' || $('.couponOfcode').text() == null || $('.couponOfcode').text() == '') {
		$('.couponOfcode').hide();
	} else {
		$('.couponOfcode').hide();
	}
});

//Cookie traveler and class widget generate
function travllerAndClassWidgetFph() {
	var dCookie = Cookies.get('fphNSearchCookie') || ''
		var checkHomeSearch = $('body.homePage');
	if (dCookie != "" && checkHomeSearch.length > 0) {
		var cookieData = JSON.parse(dCookie);
		//console.log("FPH Cookie:  "+JSON.stringify(cookieData));
		$("#searchTrpClassFH").val(cookieData.classType);

		$(".noOfRoomsSel._sub_FPHT2").val(cookieData.roomCnt);
		for (i = 1; i < parseInt(cookieData.roomCnt); i++) {
			$(".noOfRoomsSel._sub_FPHT2").trigger("change");
		}
		cookieData.roomCnt = cookieData.roomCnt || "1";
		cookieData.adltCnt = cookieData.adltCnt || "1";
		cookieData.chldCnt = cookieData.chldCnt || "";
		cookieData.chldAge = cookieData.chldAge || "";
		cookieData.inftCnt = cookieData.inftCnt || "";

		var adltCnt = (cookieData.adltCnt).split(",");
		var chdCnt = (cookieData.chldCnt).split(",");
		var infCnt = (cookieData.inftCnt).split(",");
		var chdAgeCnt = (cookieData.chldAge).split("|");

		$(".roomContainer ._fthtlroomcontainer2").each(function (key) {
			$(this).find(".adultSelected").val(adltCnt[key]);
			$(this).find(".infantSelected").val(infCnt[key]);

			$(this).find(".childSelected").val(chdCnt[key]);
			$(this).find(".childSelected").trigger("change");

			chldAge = chdAgeCnt[key].split(",");
			for (i = 0; i < chldAge.length; i++) {
				$(this).find(".childAge select").eq(i).val(chldAge[i]);
			}
		});

		$('#_FH_hotelRooms').val(cookieData.roomCnt);
		$('#_FH_hiddena').val(cookieData.adltCnt);
		$('#_FH_hiddenc').val(cookieData.chldCnt);
		$('#_FH_hiddenca').val(cookieData.chldAge);
		$('#_FH_hiddeni').val(cookieData.inftCnt);

		var fphcurDate = new Date();
		var fphChkIDate = new Date(moment(cookieData.htlCheckIn).format('YYYY/DD/MM'));

		if (cookieData.htlStyDiff) {
			$('#searchDifferent').prop('checked', true);
			$(".myHotelDates._diffDates").show();
		}
		if (fphChkIDate.setHours(0, 0, 0, 0) < fphcurDate.setHours(0, 0, 0, 0)) {
			$("._datepicker.fromFPH, ._datepicker.toFPH, .fromOneWayFPH, .toOneWayFPH").val(moment(fphcurDate).format('DD/MM/YYYY'));
		} else {
			setTimeout(function(){
				$("._datepicker.fromFPH, .fromOneWayFPH").val(cookieData.htlCheckIn);
				$("._datepicker.toFPH, .toOneWayFPH").val(cookieData.htlCheckOut);
			},500);
		}
	}
}

//On change datepicker value change date of all trip
$('body').on('focus, blur', '.fromtwowayFPH, .fromonewayFPH', function (e) {
	$(".fromtwowayFPH, .fromonewayFPH").val($(this).val());
	$("#rThdateFHiddenFH, #hdateFHiddenFH").val($(this).siblings("input").val());
	/*if(!$(this).hasClass("fromtwowayFPH")){
	$('._datepicker.totwowayFPH , #rThdateTHiddenFH').val("");
	}*/

});

/**
 *For Price Slider
 */
var $range, slider, slider2, $range2;
var baggageSec = {};
var fphtimer = 0, fftimer = 0;
/**
 *@description F+H Service Object
 *@author Fahid Mohammad
 */
var fphService = (function () {
	'user strict';
	return {
		pkgResults: [],
		isActive: false,
		flightResults: [],
		dynamicTemplate: '',
		filterData: [],
		flightData: [],
		baseObj: [],
		travellerCount: "",
		HSSKEY: '',
		cExR: [],
		uiValue: [],
		HUNCObj: [],
		HOTELNAMESEARCHRESILT: [],
		hotDeal: false,
		starRatingFilterData: {},
		HSRL: {},
		univData: '',
		setSelectedCurrency: '',
		priceFilterMin: 0,
		priceFilterMax: 0,
		fareRuleViewedInfo: {},
		iataCodes: [],
		cityNames: [],
		selectedHD: false,
		hotelHashmap: [],
		flighthashmap: [],
		districtFilterList: {},
		landMarkObjHolder: [],
		setcriteria: {},
		changeFlightShow: false,
		changeRoomFire: false,
		resetFilterswithMS: false,
		changeFlightSelected: false,
		selFilterData: '',
		homeSearch: false,
		flightsRefresh: true,
		priceSliderFltr : false,
		arNames: {
			months: ["ÙŠÙ†Ø§ÙŠØ±", "ÙØ¨Ø±Ø§ÙŠØ±", "Ù…Ø§Ø±Ø³", "Ø§Ø¨Ø±ÙŠÙ„", "Ù…Ø§ÙŠÙˆ", "ÙŠÙˆÙ†ÙŠÙˆ", "ÙŠÙˆÙ„ÙŠÙˆ", "Ø£ØºØ³Ø·Ø³", "Ø³Ø¨ØªÙ…Ø¨Ø±", "Ø£ÙƒØªÙˆØ¨Ø±", "Ù†ÙˆÙÙ…Ø¨Ø±", "Ø¯ÙŠØ³Ù…Ø¨Ø±"],
			weekdaysShort: ["Ø§Ù„Ø£Ø­Ø¯", "Ø§Ù„Ø§Ø«Ù†ÙŠÙ†", "Ø§Ù„Ø«Ù„Ø§Ø«Ø§Ø¡", "Ø§Ù„Ø£Ø±Ø¨Ø¹Ø§Ø¡", "Ø§Ù„Ø®Ù…ÙŠØ³", "Ø§Ù„Ø¬Ù…Ø¹Ø©", "Ø§Ù„Ø³Ø¨Øª"]
		},
		getCityNames:function(iataCode, callback){			
			_langGlobal.langRender(function () {
				$.post('/fphcityNameByIATACode?iataCode=' + JSON.stringify(iataCode), function (res) {
					fphService.cityNames=[];
					fphService.cityNames.push(res.depCityName[i18n.options.lng]);
					fphService.cityNames.push(res.arrCityName[i18n.options.lng]);
					callback(null, fphService.cityNames);
				});
			
			});
		},
		//generating pricelist for price slider
 priceListGenFare:function(data){
	var priceList = [];
	for(var i in data){
		var price = data[i].packagePrice;
		if(priceList.indexOf(price)===-1){
			priceList.push(price);
		}
	}
	priceList.sort(function(a,b){
		return a-b;
	});
	return priceList;
},
/**
* Price Slider Resetting
*/
   resetPriceSilder:function(priceL,cur){	
	//hide and show the price slider based on null check
	if(priceL.length==0 || priceL.length==1){
		$("#_price-filter-section").hide();
	}else{		
		$("#_price-filter-section").slideDown();		
	}
	//Remove and distroy the price slider
	if(slider){
		slider.destroy();
	}
	//reset and update the price input value
	if(priceL[0]!=undefined){
		$("#_price_fliterh").val(parseInt(priceL[0])+":"+parseInt(priceL[priceL.length -1]));			
	}
	//Re-initilize the price slider
	$range = $("#_price_fliterh").ionRangeSlider({
		values: priceL,
		range: true,
		type: 'double',
		prefix: "<span>"+i18n.t(cur)+"</span> ",
		onChange: function (data) {
			fphService.priceSliderFltr = false;
		},
		onFinish: function (obj){
				priceMin = obj.from_value;
				priceMax = obj.to_value;
		}
	});
	slider = $range.data("ionRangeSlider");
},
		/**
		 *@description Load template Content
		 *@param HTML Selector [dynamicTemplate(Dynamic template to Loaded)]
		 *@param String [templateID (Template ID)]
		 *@param data Array/Object [data(Json Data)]
		 *@param HTML Selector [toUpdate(Template to update)]
		 *@return
		 */
		 hotelsRender:function(){
	 		var tempResponse = JSON.parse(JSON.stringify(fphService.baseObj));
			tempResponse.data.hotel.searchRS=fphService.filterData;					
			fphService.loadTemplate('fph_desktop_hotelresults',tempResponse,$('.fphResultContainer'));
			$('#packageCount').text(tempResponse.data.hotel.searchRS.length);
			$('.fphNoFilteredResults').hide();
			$('.fphResultContainer').show();

		 },
		loadTemplate: function (templateID, data, toUpdate, callback) {
			var result;
			//Load the template
			var template = tmpl($(this.dynamicTemplate).filter('#' + templateID).html(), data);
			var r = /\\u([\d\w]{4})/gi;
			template = template.replace(r, function (match, grp) {
					return String.fromCharCode(parseInt(grp, 16));
				});
			template = unescape(template);
			//Select result container
			if (typeof toUpdate === 'object') {
				result = toUpdate;
			} else {
				result = $('#' + toUpdate);
			}

			if (typeof result !== 'undefined' && result.length > 0) {
				//Empty the result container
				result.empty();
				//Load data to the result container
				result.append(template);
			}

			_langGlobal.langInit();
			//tooltip for hotel result page top features
			$('.tt').tooltip();
			//userTrackerModule.init();;
			//below script for img lazy load
			var bLazy = new Blazy({
					breakpoints: [{
							src: '../img/destinations/call-icon.jpg'
						}
					],
					success: function (element) {
						setTimeout(function () {
							var parent = element.parentNode;
							parent.className = parent.className.replace(/\bloading\b/, '');
						}, 200);
					}
				});

			if (typeof callback === 'function')
				return callback();

		},
		removePackage: function (hotelId) {
			var hotels = this.baseObj.hotel.searchRS;
			for (var i in hotels) {
				if (hotelId == hotels[i].uid) {
					hotels.splice(i, 1);
					break;
				}
			}
			fphService.render(true, true, function () {
				$.get('/common/themes/v2/tmpl/fph/fphResults.ejs?v='+Math.random(), {}, function (template) {
					fphService.dynamicTemplate = template;
					flightServiceVar.dynamicTemplate = template;
					fphService.loadFilter();
					fphService.univData.HSRL = fphService.starRatingFilterData;
					fphService.univData.airlineWP = fphService.airlineWP;
					fphService.univData.hotDeal = fphService.hotDeal;
					fphService.univData.districtFilterList = fphService.districtFilterList;
					fphService.loadTemplate('fph_first_filter', fphService.univData, $('._first_filter_section'), template);
					fphService.loadTemplate('fph_second_filter', fphService.univData, $('._second_filter_section'), template);
					fphService.loadTemplate('fph_third_filter', fphService.univData, $('._third_filter_section'), template);
					fphService.resetPriceSlider(fphService.filterData);
					$('#_filter-airline-list').find("input[value=" + fphService.filterData[0].flightItenary.trips[0][0].jsonSector[0].marAirlineCode + "]").trigger('click');
					setTimeout(function () {
						ULlessMore(['_filter-airline-list', '_fphaccType_filter_template', '_fpharea_filter_template', '_fphhotelChain_filter_template']);
					}, 2000);
				});
			});
		},
		loadFPHDatePicker: function () {
			var $t = this,
			right = "right",
			left = "left",
			pos1 = right,
			pos2 = left;
			if ($('html').attr('data-lang') == "ar") {
				pos1 = left;
				pos2 = right;
			}
			var middle = "middle",
			modifySearchFlightPos = "right",
			numberOfCalendar = 2,
			dateformat = "DD/MM/YYYY";
			if (jsUpdateSize(1350) === false) {
				numberOfCalendar = 1;
			}
			var globalDate = new Date(),
			checkinDate = cmnGetURLQueryStr('checkInDate'),
			checkOutDate = cmnGetURLQueryStr('checkOutDate'),
			travelFromDate = cmnGetURLQueryStr('departureDate'),
			travelToDate = cmnGetURLQueryStr('arrivalDate');
			if (travelFromDate != "") {
				travelFromDate = moment(travelFromDate, 'YYYY-MM-DD').toDate();
			} else {
				travelFromDate = new Date();
			}
			if (travelToDate != "") {
				travelToDate = moment(travelToDate, 'YYYY-MM-DD').toDate();
			} else {
				travelToDate = new Date();
			}

			/*FPH Modify Search Round-Trip*/
			var fromtwowaySelectorFPH = $('._datepicker.fromtwowayFPH');
			var totwowaySelectorFPH = $('._datepicker.totwowayFPH');
			var fromtwowayFPH = [fromtwowaySelectorFPH[0], ((jsUpdateSize(1350) === false) ? pos2 : pos1), false, false, true, travelFromDate, $('#rThdateFHiddenFH')];
			var totwowayFPH = [totwowaySelectorFPH[0], pos1, true, true, true, travelToDate, $('#rThdateTHiddenFH')];
			loadDatePicker(fromtwowayFPH, totwowayFPH, '', numberOfCalendar, dateformat, 0, globalDate, true, false, [true, moment(checkinDate).format('DD-MM-YYYY'), moment(checkOutDate).format('DD-MM-YYYY'), pos2, pos2]);

			/*FPH Modify Search One-Way*/
			var fromonewaySelectorFPH = $('._datepicker.fromonewayFPH');
			var fromonewayFPH = [fromonewaySelectorFPH[0], ((jsUpdateSize(1350) === false) ? pos2 : pos1), false, false, true, travelFromDate, $('#hdateFHiddenFH')];
			loadDatePicker(fromonewayFPH, '', '', numberOfCalendar, dateformat, 0, globalDate, false, true, [true, moment(checkinDate).format('DD-MM-YYYY'), moment(checkOutDate).format('DD-MM-YYYY'), pos2, pos2, 'OneWay']);

		},
		checkdiffDates: function () {
			var $t = this;
			var checkinDate = cmnGetURLQueryStr('checkInDate'),
			checkOutDate = cmnGetURLQueryStr('checkOutDate'),
			travelFromDate = cmnGetURLQueryStr('departureDate'),
			travelToDate = cmnGetURLQueryStr('arrivalDate');
			if (moment(checkinDate).isSame(moment(travelFromDate)) && moment(checkOutDate).isSame(moment(travelToDate))) {
				return false;
			}
			return true;
		},
		setData: function (res) {
			var obj = JSON.parse(JSON.stringify(res));
			this.baseObj = obj;
			this.filterData = obj.hotel.searchRS;
			this.flightData = obj.flight.searchRes;
			this.hotelHashmap = obj.hotel.maps;
			this.flightHashmap = obj.flight.maps;
			this.cExR = obj.flight.cExeR;
			this.isActive = true;
			if (obj.hotel.searchRS) {
				this.setSelectedCurrency = obj.hotel.searchRS[0].up.uc;
			} else {
				this.setSelectedCurrency = 'SAR';
			}
		},
		ccm: function (cur) {
			window.location.reload();

		/*
			var flightsPage = false;
			console.log('fphccm');
			var url = window.location.href;
			console.log(url);
			console.log(typeof url);
			if(url.indexOf('page=flights')>-1){
				console.log('entered flight page');
				flightsPage = true;
			}
			$.get(url + "&fphisoView=true", {v: Math.random(),homeSearch: false}, function (res) {
				console.log('got response');
				console.log('res', res);
				if(flightsPage){					
					populateFlights(res);
				}else{
					var response = res.data;
					var tempData = {
						hotels: response.hotel.searchRS,
						token: res.token,
						searchCriteria: response.hotel.searchCriteria
					};					
					fphService.loadTemplate('fph_desktop_header', response.hotel, $('.modifySearch.fph'));
					fphService.loadTemplate('fph_desktop_landmarks', response.hotel.landMarkData.undefined, $('._landmark'));
					fphService.loadTemplate('fph_desktop_hotelresults', res, $('#list-view'));
					fphService.loadTemplate('fph_desktop_hotelFilters', {maps:response.hotel.maps,currency:res.currency}, $('.filters'));
					initPackageFilter(res, false);
				}				
			});
		*/},
		getAirlineList: function (value) { //produce [Airline_name,lowest_price]...
			var array = this.genAirlineJunk(value);
			var map = {};
			var aCode = {};
			var airlineNamesWithPrice = [];
			for (var i = 0; i < array.length; i++) {
				if (array[i][0]in map) {
					map[array[i][0]].push([array[i][1], array[i][2]]);
				} else {
					map[array[i][0]] = [[array[i][1], array[i][2]]];
				}
			}
			for (var key in map) {
				var priceArr = map[key];
				var getLowest = priceArr.sort(function (a, b) {
						return a[0] - b[0];
					});
				airlineNamesWithPrice.push([key, getLowest[0], fphService.setSelectedCurrency]);
			}
			airlineNamesWithPrice.sort(function (a, b) {
				var upA = a[0].trim().toUpperCase();
				var upB = b[0].trim().toUpperCase();
				return (upA < upB) ? -1 : (upA > upB) ? 1 : 0;
			});
			return airlineNamesWithPrice;
		},
		airlineNameWithPrice: function () {
			var airlineNameWithPrice = fphService.getAirlineList(this.fphgetArrivalCodeFromURL());
			return airlineNameWithPrice;
		},
		getAirlineException: function () {
			//return ['G9'];
			return [];
		},
		genAirlineJunk: function (value) {
			var dataArray = JSON.parse(JSON.stringify(this.flightData)),
			reArray = [],
			packArray,
			packaRRAY = JSON.parse(JSON.stringify(this.filterData));
			for (var i in packaRRAY) {
				packaRRAY[i].up.hotelFare = parseFloat(packaRRAY[i].up.p) + parseFloat(packaRRAY[i].up.mkp) - parseFloat(packaRRAY[i].up.disc);
			}
			packaRRAY.sort(function (a, b) {
				return a.up.hotelFare - b.up.hotelFare;
			});

			//var pList = [];
			var airlineName = [];
			var maps = this.flightHashmap;
			for (var i in dataArray) {
				var fromSec = dataArray[i].trips[0];
				var priceObj = dataArray[i].jsonFlightPrice;
				var totalFare = parseFloat(priceObj.up.totalFare) + parseFloat(priceObj.up.mkp) - parseFloat(priceObj.up.disc) + parseFloat(packaRRAY[0].up.hotelFare);

				//pList.push(totalFare);
				for (var l in dataArray[i].trips[0]) {
					var airlineCodeException = dataArray[i].trips[0][l].jsonSector[0].marAirlineCode;
					var checkAirlineCode = this.getAirlineException();
					if (typeof value[0] !== 'undefined' && value !== "" && value.length > 0) {
						if (this.ffphindexofSearch(dataArray[i].trips[0][l].arrivalAirportCode, value) == true || nn(airlineCodeException, checkAirlineCode) == true) {
							var arrivalAirportCode = dataArray[i].trips[0][l].jsonSector[dataArray[i].trips[0][l].jsonSector.length - 1].arrivalAirportCode;
							var segments = dataArray[i].trips[0][l].jsonSector[0];
							var aname = maps.airlineName[segments.marAirlineCode][lang];
							var aCode = segments.marAirlineCode;
							airlineName.push([aname, totalFare, aCode]);
						}
					} else {
						var arrivalAirportCode = dataArray[i].trips[0][l].jsonSector[dataArray[i].trips[0][l].jsonSector.length - 1].arrivalAirportCode;
						var segments = dataArray[i].trips[0][l].jsonSector[0];
						var aname = maps.airlineName[segments.marAirlineCode][lang];
						var aCode = segments.marAirlineCode;
						airlineName.push([aname, totalFare, aCode]);
					}
					//}
				}
			}
			return airlineName;
		},

		fphgetArrivalCodeFromURL: function () {
			var NBIATA = this.fphgetArrStr();
			var i,
			j,
			item,
			array = this.flightData,
			holder,
			condition = false;

			for (i = 0, j = array.length; i < j; i++) {
				var dPoint = false;
				item = array[i];
				holder = item.trips[0][item.trips[0].length - 1].arrivalAirportCode;
				if (typeof holder !== "undefined" && holder === NBIATA[0]) {
					condition = true;
				}
			}
			if (condition == true) {
				return this.fphgetArrStr();
			} else {
				return '';
			}
		},
		/**
		 * Method to get URL query string
		 * @param Query Key
		 * @returns
		 */
		fphgetArrStr: function () {
			var arr = [];
			arr.push(cmnGetURLQueryStr('arriveDetails'));
			return arr;
		},
		ffphindexofSearch: function (key, valueArr) {
			if (typeof valueArr !== 'undefined' && valueArr.length > 0) {
				for (var i = 0; i < valueArr.length; i++) {
					if (valueArr[i] == key) {
						return true;
					}
				}
			}
			return false;
		},
		loadFilter: function () {
			var $t = this;
			//Hotel Star Rating Object
			var HSRO = $t.getStarRatingList();
			var DLO = $t.getDistrictList();
			var AirlineNameWP = $t.airlineNameWithPrice();

			$t.getHotDeal();
			this.starRatingFilterData = {
				//Hotel Start Rating List
				HSRL: this.HSRCObj,
			};
			this.districtFilterList = DLO;
			this.airlineWP = AirlineNameWP;
		},
		getDistrictList: function () {
			var hotelData = this.filterData;
			var maps = this.hotelHashmap;
			//Hotel District List Object
			var HDLO = [],
			count = 0;
			for (var i in hotelData) {
				if (typeof hotelData[i].staticData !== "undefined") {
					if (typeof hotelData[i].staticData.distId !== "undefined" && hotelData[i].staticData.distId != null) {
						HDLO.push(unicodeConverter(maps.district[hotelData[i].staticData.distId]));
					} else {
						count = count + 1;
						HDLO.push('');
					}
				}
			}
			HDLO = this.hgroupArrayCount(HDLO);
			return HDLO;
		},
		hgroupArrayCount: function (array) {
			result = {};
			for (key in array) {
				if (result[array[key]]) {
					result[array[key]]++;
				} else {
					result[array[key]] = 1;
				}
			}
			return result;
		},
		getHotDeal: function () {
			var array = this.filterData,
			item;
			this.HUNCObj = [];
			for (var i in array) {				
					var packagePrice = array[i].packagePrice;
					item = array[i];
					this.HUNCObj.push({
						name: item.staticData.hotelName,
						price: packagePrice,
						rating: item.staticData.starRating
					});								
				}
			
		},
		getPackagePrice: function (obj) {
			var fFare = obj.flightItenary.jsonFlightPrice.up;
			var hFare = obj.up;
			var packagePrice = (parseFloat(fFare.totalFare) + parseFloat(fFare.mkp) + parseFloat(hFare.p) + parseFloat(hFare.mkp) - parseFloat(fFare.disc) - parseFloat(hFare.disc)).toFixed(2);
			return packagePrice;
		},
		getStarRatingList: function () {
			var hotelData = this.filterData;
			this.HSRCObj = [];

			//Hotel Star Rating Object
			var HSRO = [];
			for (var i in hotelData) {
				if (typeof hotelData[i].flightItenary !== "undefined") {
					var packagePrice = parseInt(fphService.getPackagePrice(hotelData[i]));
					HSRO.push([hotelData[i].staticData.starRating, packagePrice]);
				}
			}
			fphService.ratingFilteringProcessor(HSRO);
			return HSRO;
		},
		ratingFilteringProcessor: function (objData) {
			var ratings = [];
			var star1 = [],
			star2 = [],
			star3 = [],
			star4 = [],
			star5 = [];
			unrated = [];
			for (var i = 0; i < objData.length; i++) {
				var f = objData[i][0];
				var totalFare = objData[i][1];
				switch (f) {
				case "1":
					star1.push(totalFare);
					break;
				case "2":
					star2.push(totalFare);
					break;
				case "3":
					star3.push(totalFare);
					break;
				case "4":
					star4.push(totalFare);
					break;
				case "5":
					star5.push(totalFare);
					break;
				case "0":
					unrated.push(totalFare);
					break;
				}
			}
			stars = [{
					'0': unrated
				}, {
					'1': star1
				}, {
					'2': star2
				}, {
					'3': star3
				}, {
					'4': star4
				}, {
					'5': star5
				}
			];
			this.starList(stars.reverse());
		},
		starList: function (array) {
			for (var i = 0; i < array.length; i++) {
				for (var v in array[i]) {
					var _SOC = {
						lowPrice: "",
						keyCode: '',
						totalCount: 0
					};
					this.HSRCObj.push({
						key: 'currency',
						value: this.getSelectedCurrency()
					});
					if (typeof array[i][v] !== 'undefined') {
						var gs = this.getStars(array[i][v]);
						_SOC.lowPrice = gs[0];
						_SOC.totalCount = gs[1];
						switch (v) {
						case "1":
							_SOC.keyCode = 1;
							break;
						case "2":
							_SOC.keyCode = 2;
							break;
						case "3":
							_SOC.keyCode = 3;
							break;
						case "4":
							_SOC.keyCode = 4;
							break;
						case "5":
							_SOC.keyCode = 5;
							break;
						case "0":
							_SOC.keyCode = 0;
							break;
						}
						this.HSRCObj.push(_SOC);
					}
				}
			}
		},
		getStars: function (array) {
			var outPut = [];
			if (typeof array !== 'undefined' && array.length > 0) {
				outPut = array.sort(function (a, b) {
						return a - b;
					});
			}
			return [outPut[0], outPut.length];
		},
		getPackageById: function (hotelId) {
			var i,
			j,
			item,
			array = this.filterData,
			response = [],
			holder,
			breakCon = false;
			for (i = 0, j = array.length; i < j; i++) {
				item = array[i];
				holder = array[i].uid;
				if (holder == hotelId) {
					response = item;
					return item;
				}
			}
			return response;
		},

		getSelectedCurrency: function (opt) {
			if (opt == false) {
				if (this.setSelectedCurrency == "SAR") {
					this.setSelectedCurrency = "SAR";
				} else {
					this.setSelectedCurrency = currencySymbols(this.setSelectedCurrency);
				}
			}
			return this.setSelectedCurrency;
		},
		filterSelector: {
			airline: "#_filter-airline-list li input[type=radio]",
			area: "#_area_filter_template li input[type=checkbox]",
			starRatings: "#_starRating_template li input[type=checkbox]",
			sortPrice: "#_sortPrice",
			sortStarRating: "#_sortRating",
			accTypes: "#_accType_filter_template li input[type=checkbox]",
			hotDeal: "#_hotDeal_filter_template li input[type=checkbox]",
			hotelChains: "#_hotelChain_filter_template li input[type=checkbox]",
			hotelFilter: "._hotelFilter",
			priceFilter: "#_price_fliter",
			priceFilterSection: "#_fph-price-filter-section",
			sortSelect: "#_sortSelect",
		},
		hresetPriceSliderOnLoad: function () {
			var priceList = fphService.hgetNONFPriceList();
			var min = 0;
			var max = 0;
			if (priceList.length > 0) {
				min = priceList[0];
				max = priceList[priceList.length - 1];
			}
			$(this.filterSelector.priceFilter).val(min + ';' + max);
			this.hreRenderPrice(priceList);
		},
		hreRenderPrice: function (data) {
			var currencyIcon = fphService.getSelectedCurrency();
			if (currencyIcon == "SAR") {
				currencyIcon = 'SAR';
			} else {
				currencyIcon = currencySymbols(currencyIcon);
			}
			if (data.length == 0 || data.length == 1) {
				$(this.filterSelector.priceFilterSection).slideUp();
			} else {
				$(this.filterSelector.priceFilterSection).slideDown();
			}
			if (slider) {
				slider.destroy();
				$(this.filterSelector.priceFilter).val(data[0] + ":" + data[data.length - 1]);
			}
			$range = $(this.filterSelector.priceFilter).ionRangeSlider({
					values: data,
					type: 'double',
					prefix: currencyIcon + " ",
					onFinish: function (obj) {
						priceMin = obj.from_value;
						priceMax = obj.to_value;
					}
				});
			slider = $range.data("ionRangeSlider");
		},
		resetPriceSlider: function (data) {
			var priceUniqArr = [];
			var hotelData = data;
			var currencyIcon = this.getSelectedCurrency();
			if (currencyIcon == "SAR") {
				currencyIcon = 'SAR';
			} else {
				currencyIcon = currencySymbols(currencyIcon);
			}
			for (var i in hotelData) {
				if (typeof hotelData[i].flightItenary !== "undefined") {
					var packagePrice = parseInt(fphService.getPackagePrice(hotelData[i]));
					if (nn(packagePrice, priceUniqArr) == false) {
						priceUniqArr.push(packagePrice);
					}
				}
			}
			priceUniqArr.sort(function (a, b) {
				return a - b;
			});
			if (priceUniqArr.length == 0 || priceUniqArr.length == 1) {
				$('#_fph-price-filter-section').slideUp();
			} else {
				$('#_fph-price-filter-section').slideDown();
			}
			if (slider) {
				slider.destroy();
				$("#_price_fliter").val(priceUniqArr[0] + ":" + priceUniqArr[priceUniqArr.length - 1]);
			}
			$range = $("#_price_fliter").ionRangeSlider({
					values: priceUniqArr,
					type: 'double',
					prefix: "<span>" + i18n.t(currencyIcon) + "</span> ",
					onFinish: function (obj) {
						priceMin = obj.from_value;
						priceMax = obj.to_value;
					}
				});
			slider = $range.data("ionRangeSlider");
		},
		hgetNONFPriceList: function () { //produce [lowest_price,lowest_price...]
			var priceUniqArr = [];
			var hotelData = fphService.filterData;
			for (var i in hotelData) {
				if (typeof hotelData[i].flightItenary !== 'undefined') {
					var packagePrice = parseInt(fphService.getPackagePrice(hotelData[i]));
					if (nn(packagePrice, priceUniqArr) == false) {
						priceUniqArr.push(packagePrice);
					}
				}

			}
			priceUniqArr.sort(function (a, b) {
				return a - b;
			});
			return priceUniqArr;
		},
		hotelListSearch: function () {
			var elm = $('._filter_hotel_template'),
			castObject = [];
			fphService.HOTELNAMESEARCHRESILT = [];
			if (fphService.HSSKEY !== "") {
				var i,
				j,
				item,
				array = this.HUNCObj,
				reArray = [],
				holder;
				var filter = new RegExp($.trim(fphService.HSSKEY), "i");
				for (var i in array) {
					item = array[i];
					holder = item.name;
					if (holder.match(filter)) {
						reArray.push(item);
					}
				}
				this.HOTELNAMESEARCHRESILT = reArray;
			}
			elm.each(function () {
				if ($(this).is(':visible')) {
					if (fphService.HOTELNAMESEARCHRESILT.length == 0) {
						//$(this).slideUp();
					}
					castObject = $(this);
				}
			});
			fphService.loadTemplate('filter_hotel_template', fphService.HOTELNAMESEARCHRESILT, castObject);
		},
		getFilteredPrice: function () {
			var s = $(this.filterSelector.priceFilter).val();
			var minMaxArr = s.split(';') || [];
			var priceMin = parseInt(minMaxArr[0]) || 0;
			var priceMax = parseInt(minMaxArr[1]) || 0;
			return [priceMin, priceMax];
		},
		setPriceMinMax: function (value) {
			fphService.priceFilterMin = value[0];
			fphService.priceFilterMax = value[1];
		},
		landmarksData: function () {
			var obj = fphService.filterData;
			for (var i = 0; i < obj.length; i++) {
				var latLon = latLonToDistance(fphService.setcriteria.lat, fphService.setcriteria.long, obj[i].staticData.lat, obj[i].staticData.lng);
				//Calculate Distance based on Initial lat lon point
				if (fphService.setcriteria.lat != "" && fphService.setcriteria.long != "" && obj[i].staticData.lat != "" && obj[i].staticData.lng != "") {
					obj[i].staticData.distanceCity = latLon;
				} else {
					obj[i].staticData.distanceCity = null;
				}

				if (fphService.landMarkObjHolder.length > 0 && obj[i].staticData.lat != "" && obj[i].staticData.lng != "") {
					var latLonLandMark = latLonToDistance(fphService.landMarkObjHolder[0][1], fphService.landMarkObjHolder[0][2], obj[i].staticData.lat, obj[i].staticData.lng);
					var data = {
						distance: latLonLandMark,
						landmarkName: fphService.landMarkObjHolder[0][0]
					}
					obj[i].staticData.distanceLandMark = data;
				} else {
					var data = {
						distance: null,
						landmarkName: ''
					}
					obj[i].staticData.distanceLandMark = data;
				}
			}
		},
		loadFlightView: function (hotelId) {
			var selectedPackage = this.getPackageById(hotelId);
			ccmFlight(this.baseObj.flight, selectedPackage);
			return false;
		},
		newInit : function(){
			$('body').on('click','.filterSec input:checkbox',function(){
				
				fphService.priceSliderFltr = true;
				FJS.removeCriteria('packagePrice');
			});
		},
		init: function () {
			var $t = this;
			var htimer = null;
			$('body').on('keyup', this.filterSelector.hotelFilter, function (event) {
				var psElm = $(this).parents('.searchByHotel').find('._filter_hotel_template');
				if (event.which == 46 || event.which == 8) {
					$('.youHaveFiltered ul li').each(function () {
						if ($(this).attr('data-source') == "hotelnamefilter") {
							removeValueFromArr('hotelnamefilter', fphService.HSSKEY, this.uiValue);
						}
					});
				}

				if (event.which !== 40 && event.which !== 38 && event.which !== 13) {
					var $this = $(this);
					clearTimeout(htimer);
					htimer = setTimeout(function () {
							var searchKey = $.trim($this.val());
							if (searchKey != "" && searchKey.length > 2) {
								fphService.HSSKEY = $this.val();
								psElm.slideDown();
							} else {
								fphService.HSSKEY = "";
								psElm.slideUp();
							}
							$t.hotelListSearch();
						}, 1000);
				}
			});

			/**
			 *Filter by Districts
			 */
/*			$('body').on('change', this.filterSelector.area, function () {
				$t.hresetPriceSliderOnLoad();
				$t.render(true);
			});*/

			/**
			 *Change Flight
			 */
			$('body').on('click', '._apxchangeFlight', function () {
				$(this).parents('._changeFlightBlock').find('._myLoader').show();
				$t.changeFlightShow = true;
				var $hotelId = $(this).attr('data-hotel-id');
				setTimeout(function () {
					$t.loadFlightView($hotelId);
				}, 200);
				return false;
				//below script for filter
				var windowWidth = $(window).width();
				setTimeout(function () {
					if (windowWidth < 1023) {
						$('.filterSec.flight').hide();
					}
				}, 1000);
			});
			//below script for filter
			$(window).resize(function () {
				var windowWidth = $(window).width();
				if (windowWidth > 768) {
					$('.filterSec.flight').show();
				}
				if (windowWidth < 1023) {
					$('.filterSec.flight').hide();
				}
			});

			$('body').on('change', $t.filterSelector.airline, function () {

				fphService.changeFlightSelected = false;
				$('.yhfReset._youHaveFilteredPackageReset').trigger('click');
				$('#changeFlightFlag').val("true");
				$t.hresetPriceSliderOnLoad();
				setTimeout(function () {
					$t.render(true, true);
				}, 80);
			});

			$('body').on('change', this.filterSelector.hotelChains, function () {
				$t.hresetPriceSliderOnLoad();
				$t.render(true);
			});

			$('body').on('change', this.filterSelector.sortSelect, function () {
				$t.priceSort = "";
				$t.ratingSort = "";
				var type = $(this).find(':selected').attr('data-type');
				var val = $(this).val();
				switch (type) {
				case '_sortPrice':
					$t.priceSort = val;
					break;
				case '_sortRating':
					$t.ratingSort = val;
					break;
				default:
					$t.priceSort = "";
					$t.ratingSort = "";
					fphService.resetFilterswithMS = true;
				}
				$t.render();
			});

			/***
			 * reloads the distances after selecting the landmark
			 */
			$('body').on('click', 'a._landMarkAnchor', function (e) {
				$(".distanceDropdown").slideUp(),
				$t.landMarkObjHolder = [];
				var lat = $(this).attr("data-lat"),
				lon = $(this).attr("data-lon"),
				landMarkName = $(this).text();
				$t.landMarkObjHolder.push([landMarkName, lat, lon]);
				$t.HUIFilterSelected();
				$t.landmarksData();
				$t.render();
			});

			$('body').on('click', '._filter_hotel_template ul li a', function () {
				//Reset Other filters
				$('.youHaveFilteredHotelReset').trigger('click');
				var psElm = $(this).parents('.searchByHotel').find('._filter_hotel_template');
				$('.youHaveFilteredHotel ul li').each(function () {
					if ($(this).attr('data-source') == "hotelnamefilter") {
						removeValueFromArr('hotelnamefilter', '', fphService.uiValue);
					}
				});
				fphService.HSSKEY = $(this).text();
				$($t.filterSelector.hotelFilter).val(fphService.HSSKEY);
				/*if(!$(filterSelector.resetHotelFilter).is(':visible')){
				$(filterSelector.resetHotelFilter).slideDown();
				}*/
				psElm.slideUp();
				fphService.uiValue.push({
					source: 'hotelnamefilter',
					value: fphService.HSSKEY,
					id: 'nameHotel',
					display: fphService.HSSKEY
				});
				generateFilterUI(fphService.uiValue, '_youHaveFilteredPackage');
				$t.hotelListSearch();
				$t.filterByHotel(fphService.HSSKEY);
				var priceList = fphService.priceListGenFare(fphService.filterData);			
				fphService.resetPriceSilder(priceList, fphService.baseObj.currency);
				fphService.hotelsRender();				
				fphService.HUIFilterSelected();
				//$t.render(true);
				return false;
			});

/*			$('body').on('change', $t.filterSelector.accTypes, function () {

				$t.hresetPriceSliderOnLoad();
				$t.render(true);
			});*/

			/**
			 *Sort by Star Rating
			 */
/*			$('body').on('change', $t.filterSelector.starRatings, function () {
				$t.hresetPriceSliderOnLoad();
				setTimeout(function () {
					$t.render(true);
				}, 80);
			});*/
			/**
			 *Filter by Price
			 */
/*			$('body').on('change', this.filterSelector.hotDeal, function () {
				$t.hresetPriceSliderOnLoad();
				$t.render(true);
			});*/
			/**
			 *Filter by Price
			 */
			 
			 $('body').on('change', '#_price_fliterh', function () {
				$this = $(this);
				window.clearTimeout(fphtimer);
				fphtimer = window.setTimeout(function () {	
					var val = $t.getFilteredPrice();
					fphHotelPriceChange({"left_range":val[0],"right_range":val[1]});
				}, 700);
			});
			 $('body').on('change', '#_flight_price_fliter', function () {
				$this = $(this);
				window.clearTimeout(fphtimer);
				fphtimer = window.setTimeout(function () {	
					var val = $('#_flight_price_fliter');
					fphFlightriceChange({"left_range":val[0],"right_range":val[1]});
				}, 700);
			});

			$('body').on('change', this.filterSelector.priceFilter, function () {
				$this = $(this);
				window.clearTimeout(fphtimer);
				fphtimer = window.setTimeout(function () {
						var priceStr;
						async.parallel([
								function (callback) {
									priceStr = $t.getFilteredPrice();
									return callback();
								},
								function (callback) {
									$t.setPriceMinMax(priceStr);
									return callback();
								}
							],
							function (err) {
							$t.render();
							//$t.findFLKey($this);
						});
					}, 700);
			});

			/**
			 *Remove Filtered UI Element list
			 */

			$('body').on('click touchstart', '.youHaveFilteredHotel ._TabFilterRemove', function () {
				$('.dynamic_results_loader').show();
				var elm = $(this).parents('li');
				var id = elm.attr('data-id');
				var source = elm.attr('data-source');
				if (source == "star") {
					var target = $($t.filterSelector.starRatings).parents('li').find('#' + id);
					var isDisabled = target.prop('disabled');
					if (isDisabled) {
						target.prop('checked', false);
						elm.remove();
					} else {
						target.trigger('click');
					}
				} else if (source == "hotel_deal") {
					var target = $($t.filterSelector.hotDeal).parents('li').find('#' + id);
					var isDisabled = target.prop('disabled');
					if (isDisabled) {
						target.prop('checked', false);
						elm.remove();
					} else {
						target.trigger('click');
					}
				} else if (source == "accommodation_type") {
					var target = $($t.filterSelector.accTypes).parents('li').find('#' + id);
					var isDisabled = target.prop('disabled');
					if (isDisabled) {
						target.prop('checked', false);
						elm.remove();
					} else {
						target.trigger('click');
					}
				} else if (source == "district") {
					var target = $($t.filterSelector.area).parents('li').find('#' + id);

					var isDisabled = target.prop('disabled');
					if (isDisabled) {
						target.prop('checked', false);
						elm.remove();
					} else {
						target.trigger('click');
					}

				} else if (source == "hotelnamefilter") {
					$('._hotelFilter').val('');
					removeValueFromArr('hotelnamefilter', fphService.HSSKEY, fphService.uiValue);
					fphService.HSSKEY = "";
					fphService.HUIFilterSelected();
					//Reset Other filters 
					$('.youHaveFilteredHotelReset').trigger('click');
				} else if (source == "landMarkSort") {
					fphService.landMarkObjHolder = [];
					fphService.HUIFilterSelected();
				} else if (source == "hotel-chain") {
					var target = $($t.filterSelector.hotelChains).parents('li').find('#' + id);
					var isDisabled = target.prop('disabled');
					if (isDisabled) {
						target.prop('checked', false);
						elm.remove();
					} else {
						target.trigger('click');
					}
				} else if (source == "priceSlider") {
					elm.remove();
					fphService.priceFilterMin = 0;
					fphService.priceFilterMax = 0;
					fphService.HUIFilterSelected();
					$("#_price_fliterh").val(0 + ":" + 0);

				}
				fphService.hotelsRender();
				/*fphService.render(true);
				fphService.resetPriceSlider(fphService.filterData);*/

			});

			/**
			 *Reset Filter Action
			 */
			$('body').on('click touchstart', '.yhfReset.youHaveFilteredHotelReset', function () {
				fphService.priceSliderFltr = true;
				$('.youHaveFilteredHotel').hide();
				fphService.filterData = fphService.baseObj.data.hotel.searchRS;				
				fphService.priceFilterMin = 0;
				fphService.priceFilterMax = 0;
				async.series([
/*						function (callback) {
							//reset price slider
							$t.hresetPriceSliderOnLoad();
							return callback();
						},*/
						function (callback) {
							//Reset Stops Filter
							$($t.filterSelector.starRatings).each(function () {
								$(this).attr('checked', false);
							});
							$($t.filterSelector.hotDeal).each(function () {
								$(this).attr('checked', false);
							});														
							$($t.filterSelector.accTypes).each(function () {
								$(this).attr('checked', false);
							});
							$($t.filterSelector.area).each(function () {
								$(this).attr('checked', false);
							});
							$($t.filterSelector.hotelChains).each(function () {
								$(this).attr('checked', false);
							});
							/*$($t.filterSelector.priceFilter).each(function () {
								$(this).attr('checked', false);
							});							


*/
							$('.youHaveFilteredHotel ul li').each(function () {
								if ($(this).attr('data-source') == "hotelnamefilter") {
									removeValueFromArr('hotelnamefilter', '', fphService.uiValue);
								}
							});
							//Remove hotel name filter
							fphService.HSSKEY = "";
							fphService.landMarkObjHolder = [];
							return callback();

						},
							function (callback) {
							//Trigger the UI Filter Module
							//$t.HUIFilterSelected();
							//Reset sort dropdown
							//$t.resetSorts();
							return callback();
						},
						function (callback) {
							//Re-render the result view
							$t.HSSKEY = "";
							$('._hotelFilter').val('');
							//$t.render();
							return callback();

						}
					], function (err) {
						var priceList = fphService.priceListGenFare(fphService.filterData);			
						fphService.resetPriceSilder(priceList, fphService.baseObj.currency);
						fphService.hotelsRender();						
					//$t.renderBasetemplate();
				});
				return false;
			});
			/*setTimeout(function () {
				$t.resetPriceSlider($t.filterData);
			}, 80);*/

			//$t.render();
			//ccmFlight($t.baseObj.flight);
		},
		starLangRender: function (value) {
			var language_data = "";
			if (value != "") {
				switch (value) {
				case '0':
					language_data = i18n.t('unrated');
					break;
				case '1':
					language_data = '1 ' + i18n.t('star');
					break;
				case '2':
					language_data = '2 ' + i18n.t('star');
					break;
				case '3':
					language_data = '3 ' + i18n.t('star');
					break;
				case '4':
					language_data = '4 ' + i18n.t('star');
					break;
				case '5':
					language_data = '5 ' + i18n.t('star');
					break;
				}
			}
			return language_data;
		},

		HUIFilterSelected: function () {
			if (fphService.priceFilterMin != 0 && fphService.priceFilterMax != 0) {
				removeValueFromArr('priceSlider', 'price', fphService.uiValue);
				fphService.uiValue.push({
					source: 'priceSlider',
					value: 'price',
					id: '',
					display: "<span class='filtPrice'><span>" + i18n.t(this.getSelectedCurrency()) + "</span> " + this.priceFilterMin + " - <span>" + i18n.t(this.getSelectedCurrency()) + "</span> " + this.priceFilterMax + "</span>"
				});
			} else {
				removeValueFromArr('priceSlider', 'price', fphService.uiValue);
			}
			if (fphService.landMarkObjHolder.length > 0) {
				removeValueFromArr('landMarkSort', 'landmark', fphService.uiValue);
				fphService.uiValue.push({
					source: 'landMarkSort',
					value: 'landmark',
					id: '',
					display: fphService.landMarkObjHolder[0][0]
				});
			} else {
				removeValueFromArr('landMarkSort', 'landmark', fphService.uiValue);
			}
			$('input[type="checkbox"]').each(function () {
				var source = $(this).attr('name');
				var value = $(this).val();
				var id = $(this).attr('id');
				var displayVal = "";
				if (source == "district" || source == "star" || source == "accommodation_type" || source == "hotel_deal" || source == "facility-type" || source == "hotel-chain") {
					if ($(this).is(':checked')) {

						if (isFilterInArray(source, value, fphService.uiValue) == true) {
							if (source == "star") {
								displayVal = fphService.starLangRender(value);
							} else {
								displayVal = value;
							}
							if (source == "district") {
								displayVal = $(this).attr('data_name');
							}
							if (source == "hotel-chain") {
								displayVal = $(this).attr('data_name');
							}
							if(source == "hotel_deal"){
								displayVal = i18n.t("deal");
							}
							if(source == "accommodation_type"){
								displayVal = $(this).attr('data_name');
							}
							fphService.uiValue.push({
								source: source,
								value: value,
								id: id,
								display: displayVal
							});
						}
					} else {
						removeValueFromArr(source, value, fphService.uiValue);
					}
				}
			});
			generateFilterUI(fphService.uiValue, 'youHaveFilteredHotel');
		},

		//Filter by Hotel
		filterByHotel: function (key) {
			var i,
			j,
			item,
			array = fphService.baseObj.data.hotel.searchRS,
			reArray = [],
			holder;
			for (var i in array) {
				item = array[i];
				holder = item.staticData.hotelName;
				if (holder.toLowerCase().indexOf(key.toLowerCase()) == 0) {
					reArray.push(item);
				}
			}
			this.filterData = reArray;
		},
		getFilteredstarRating: function () {
			var starRating = [];
			$(this.filterSelector.starRatings).each(function () {
				if ($(this).is(':checked')) {
					starRating.push($.trim($(this).val()));
				}
			});
			return starRating;
		},
		//Filter By Star Ratings
		filterByStarRatings: function (value) {
			var i,
			j,
			item,
			array = this.filterData,
			reArray = [],
			holder;
			for (i = 0, j = array.length; i < j; i++) {
				item = array[i];
				holder = item.staticData.starRating;
				if (typeof holder !== "undefined" && this.hindexofSearch(holder, value) == true) {
					reArray.push(item);
				}
			}
			this.filterData = reArray;
		},
		hindexofSearch: function (key, valueArr) {
			if (typeof valueArr !== 'undefined' && valueArr.length > 0) {
				for (var i = 0; i < valueArr.length; i++) {
					if (valueArr[i] == key) {
						return true;
					}
				}
			}
			return false;
		},

		/**
		 *@description Price Filter Function
		 *@params Array (Price Filter Criteria [960,1250])
		 *@return null
		 */
		filterByPrice: function (value) {
			var min = value[0];
			var max = value[1];
			var i,
			item,
			array = this.filterData,
			reArray = [],
			holder;
			for (i in array) {
				item = array[i];
				var packagePrice = parseInt(fphService.getPackagePrice(array[i]));
				holder = parseFloat(packagePrice);
				if (min != 0 && max != 0) {
					if (typeof holder !== "undefined" && cmnBetweenSearch(holder, min, max) === true) {
						reArray.push(item);
					}
				} else {
					reArray.push(item);
				}
			}
			this.filterData = reArray;
		},
		getFilteredHotDeal: function () {
			$(this.filterSelector.hotDeal).each(function () {
				if ($(this).is(':checked')) {
					fphService.selectedHD = true;
				}
			});
		},
		//Filter By Deals
		filterByHotDeal: function (value) {
			var array = this.filterData,
			reArray = [];
			for (var i in array) {
				item = array[i];
				if (item.hotDeal) {
					reArray.push(item);
				}
			}
			this.filterData = reArray;
		},
		getFilteredAccTypes: function () {
			var accTypes = [];
			$(this.filterSelector.accTypes).each(function () {
				if ($(this).is(':checked')) {
					accTypes.push($.trim($(this).val()));
				}
			});
			return accTypes;
		},
		//Filter By Accommodation Types
		filterByAccType: function (value) {
			var i,
			j,
			item,
			array = this.filterData,
			reArray = [],
			holder;
			for (i = 0, j = array.length; i < j; i++) {
				item = array[i];
				if (typeof item.staticData.hotelType != "undefined") {
					var htypes = item.staticData.hotelType;
					for (var n in htypes) {
						if (this.hindexofSearch(htypes[n], value) == true) {
							reArray.push(item);
						}
					}

				}
			}
			this.filterData = reArray;
		},
		getFilteredDistricts: function () {
			var areaList = [];
			$(this.filterSelector.area).each(function () {
				if ($(this).is(':checked')) {
					areaList.push($.trim($(this).val()));
				}
			});
			return areaList;
		},
		//Filter by Area
		filterByArea: function (value) {
			var i,
			j,
			item,
			array = this.filterData,
			maps = this.hotelHashmap,
			reArray = [],
			holder;
			for (i = 0, j = array.length; i < j; i++) {
				item = array[i];
				if (item.staticData.distId !== null) {
					holder = unicodeConverter(maps.district[item.staticData.distId]);
					if (typeof holder !== "undefined" && this.hindexofSearch(holder, value) == true) {
						reArray.push(item);
					}
				} else if (item.staticData.distId == null) {
					reArray.push(item);
				}
			}
			this.filterData = reArray;
		},
		getFilteredHotelChains: function () {
			var hotelChains = [];
			$(this.filterSelector.hotelChains).each(function () {
				if ($(this).is(':checked')) {
					hotelChains.push($.trim($(this).val()));
				}
			});
			return hotelChains;
		},
		//Filer By Hotel CHain
		filterByHotelChain: function (value) {
			var i,
			j,
			item,
			array = this.filterData,
			reArray = [],
			holder,
			maps = this.hotelHashmap;
			for (i = 0, j = array.length; i < j; i++) {
				item = array[i];
				holder = item.staticData.hotelChainId;
				if (typeof holder !== "undefined" && this.histhere(value, holder) == true) {
					reArray.push(item);
				}
			}
			this.filterData = reArray;
		},
		histhere: function (array, element) {
			var arr = array;
			var elem = element;
			var isthere = false;
			if (array.length > 0) {
				for (var i = 0; i < arr.length; i++) {
					if (arr[i] == elem) {
						isthere = true;
						return isthere;
					}
				}
			}

			return isthere;
		},
		getAirline: function () {
			var s = $(this.filterSelector.airline);
			var airline = '';
			s.each(function () {
				var $this = $(this);
				var $selVal = $.trim($this.val());
				if ($this.is(':checked')) {
					airline = $selVal;
				}
			});

			return airline;
		},
		filterByAirline: function (value) { //Filter by Airline Name
			var i,
			j,
			item,
			hotelData = this.filterData,
			array = JSON.parse(JSON.stringify(this.flightData)),
			reArray = [],
			holder,
			maps = this.flightHashmap,
			newHotelData = [];
			for (i = 0, j = array.length; i < j; i++) {
				var dPoint = false;
				item = array[i];
				for (e = 0; e < item.trips[0].length; e++) {

					holder = item.trips[0][e].jsonSector[0].marAirlineCode;
					//console.log(holder);
					if (typeof holder !== "undefined" && this.fphindexofSearch(holder, value) == true) {
						dPoint = true;
					} else {
						item.trips[0].splice(e, 1);
						e--;
					}
				}
				if (dPoint == true) {
					reArray.push(item);
				}

			}
			reArray.sort(function (a, b) {
				return a.jsonFlightPrice.up.totalFare - b.jsonFlightPrice.up.totalFare;
			});
			for (var d in hotelData) {
				var hotelObj = hotelData[d];
				hotelObj.flightItenary = reArray[0];
				newHotelData.push(hotelObj);
			}
			this.filterData = newHotelData;

		},
		fphindexofSearch: function (key, value) {
			if (value == key) {
				return true;
			}
			return false;
		},
		//Sort by price
		sortByPrice: function (option) {
			var array = this.filterData;
			if (option == "asc") {
				array.sort(function (a, b) {
					return a.up.p - b.up.p;
				});
				this.filterData = array;
			} else if (option == "desc") {
				array.sort(function (a, b) {
					return b.up.p - a.up.p;
				});
				this.filterData = array;
			}
		},
		//Sort by Rating
		sortByRating: function (option) {
			var array = this.filterData;
			if (option == "asc") {
				array.sort(function (a, b) {
					return a.staticData.starRating - b.staticData.starRating;
				});
				this.filterData = array;
			} else if (option == "desc") {
				array.sort(function (a, b) {
					return b.staticData.starRating - a.staticData.starRating;
				});
				this.filterData = array;
			}
		},

		//Sort by Distance
		sortByDistance: function (option) {
			var array = this.filterData;
			if (option == "asc") {
				array.sort(function (a, b) {
					return a.staticData.distanceLandMark.distance - b.staticData.distanceLandMark.distance;
				});
				this.filterData = array;
			} else if (option == "desc") {
				array.sort(function (a, b) {
					return b.staticData.distanceLandMark.distance - a.staticData.distanceLandMark.distance;
				});
				this.filterData = array;
			}
		},
		render: function (priceRender, starRender, callback) {
			var $t = this;
			$t.filterData = $t.baseObj.hotel.searchRS;
			if (fphService.changeFlightSelected) {
				//console.log('fphService.selFilterData', JSON.stringify(fphService.selFilterData));
				$t.filterData = fphService.selFilterData;
			}
			var $starRating = [];
			var $minMaxPrice = [];
			var $hotDeal = [];
			async.series([function (callback) {
						//Airline name filter
						$starRating = $t.getFilteredstarRating();
						//Min/Max Price filter
						$minMaxPrice.push($t.priceFilterMin);
						$minMaxPrice.push($t.priceFilterMax);
						//Hot Deal
						$hotDeal = $t.getFilteredHotDeal();
						//accommodation filter
						$accTypes = $t.getFilteredAccTypes();
						//District filter
						$areaList = $t.getFilteredDistricts();
						//Hotel CHains filter
						$hotelChains = $t.getFilteredHotelChains();
						//airline filter
						if (!(fphService.changeFlightSelected)) {
							$airline = $t.getAirline();
						} else {
							$airline = '';
							//$airline = 	$t.filterData[0].flightItenary.trips[0][0].jsonSector[0].marAirlineCode;
						}
						$t.landmarksData();
						return callback();
					},
					function (callback) {

						if (fphService.HSSKEY !== "") {
							$t.filterByHotel(fphService.HSSKEY);
						}
						if ($starRating.length > 0) {
							$t.filterByStarRatings($starRating);
						}
						if ($t.selectedHD) {
							$t.filterByHotDeal($t.selectedHD);
							$t.selectedHD = false;
						}
						if ($accTypes.length > 0) {
							$t.filterByAccType($accTypes);
						}
						if ($areaList.length > 0) {
							$t.filterByArea($areaList);
						}
						if ($hotelChains.length > 0) {
							$t.filterByHotelChain($hotelChains);
						}
						if ($airline != "") {
							$t.filterByAirline($airline);
						}
						if ($t.priceSort != "") {
							$t.sortByPrice($t.priceSort);
						}
						if ($t.ratingSort != "") {
							$t.sortByRating($t.ratingSort);
						}
						if ($t.landMarkObjHolder.length > 0) {
							$t.sortByDistance('asc');
						}

						if ($minMaxPrice != "") {
							$t.filterByPrice($minMaxPrice);
						}

						return callback();
					}
				], function () {
				if (starRender) {
					var HSRO = fphService.getStarRatingList();
					fphService.starRatingFilterData = {
						//Hotel Start Rating List
						HSRL: fphService.HSRCObj,
					};
					fphService.univData.HSRL = fphService.starRatingFilterData;
					fphService.loadTemplate('fph_second_filter', fphService.univData, $('._second_filter_section'));
				}
				if (priceRender) {
					$t.resetPriceSlider($t.filterData);
				}
				fphpaginationOptInit = cmnPaginationConfig(fphpageselectCallback);
				$("#pagination").pagination($t.filterData.length, fphpaginationOptInit, $t.filterData);
				$('#packageCount').text($t.filterData.length);
				var renderedData = JSON.parse(JSON.stringify($t.filterData));
				if (typeof callback === 'function')
					return callback(renderedData);
				$t.HUIFilterSelected();
			});

		},
		loadQitafFPHtripSummary: function (args) {
			$('.totalSec li:first-child').after('<li class="redeemQitaf"><span class="pull-left">'+
					i18n.t('redeemedAmount')+ '</span><span class="pull-right green-txt">'+i18n.t('SAR')+'  <elm class="_priceTag">'+args.responseData.qitafObj.redeemAmount+'</elm></span></li>');
			//update total price
			var totalPriceStr = ' <strong>' + args.responseData.qitafObj.updatedTotalPrice + '</strong> ';
			$('._tFair').html(totalPriceStr);

			// update pay button
			var payArr = $('#paymeBtn').val().split(' ');
			if (lang == "ar") {
				payArr[1] = args.responseData.qitafObj.updatedTotalPrice;
			} else {
				payArr[2] = args.responseData.qitafObj.updatedTotalPrice;
			}
			$('#paymeBtn').val(payArr[0] + ' ' + payArr[1] + ' ' + payArr[2]);
			// update sar price message
			var sarAmtDisp = $('._sarAmt');
			var egpAmtDisp = $('._egpAmt');
			if (sarAmtDisp.length > 0) {
				$('._sarAmt').text(parseFloat(args.responseData.sarPrice.updatedPrice));
			}
			if (egpAmtDisp.length > 0) {
				$('._egpAmt').text(parseFloat(args.responseData.egpPrice.updatedPrice));
			}
			pricetagConvert.init();	
			$("#qitafVal").val("true");


			/*$.get('/common/themes/v2/tmpl/hotel/hotelReviewTerms.ejs?v=nd-v0102', {}, function(reviewTermTemplate) {
			loadTemplate('hotel-trip-summary', {responseData: args.responseData}, $('#hotelTripSummary'), reviewTermTemplate);
			$('#paymeBtn').val('PAY '+ args.responseData.OBIRS.BookingInfoRS.hotel.rc.up.uc+ ' ' + args.responseData.qitafObj.updatedTotalPrice);
			});	*/
			/*console.log(args);
			$.get('/common/themes/v2/tmpl/fph/fphResults.ejs?v=nd-v0102', {}, function (template) {
				fphService.dynamicTemplate = template;
				fphService.loadTemplate('fph-trip-summary', {
					pocket: args.responseData
				}, $('#fph-trip-summary-id'));
				$('#paymeBtn').val('PAY ' + args.responseData.price.uc + ' ' + args.responseData.qitafObj.updatedTotalPrice);
			});*/


		},
		updateLoyaltyDetails: function (data) {
			var pocket = JSON.parse(data);
			var beforeCoupon = $('._tSave').attr('data-save');
			var beforePrice = parseFloat($('._tFair').attr('data-p'));
			if (pocket.loyaltydetails !== null) {
				var couponDiscount = 0;
				if(typeof pocket.coupondetails !== 'undefined' && pocket.coupondetails !== null){
					couponDiscount = parseFloat(pocket.coupondetails.deductAmount);
				}
				var loyaltyDiscount = parseFloat(pocket.loyaltydetails.redemptionUCAmount);
				$('._tFair').attr('data-lprice',loyaltyDiscount);
				$('._tFair').attr('data-cprice',couponDiscount);
				var price = beforePrice - (loyaltyDiscount + couponDiscount);
				/*if(beforeCoupon){
				couponDiscount = couponDiscount+ parseFloat(beforeCoupon);
				}*/

				var totalPriceStr = ' <strong>' + price.toFixed(2) + '</strong> ';
				$('._tFair').html(totalPriceStr);
				$('._tFair').attr("data-upprice",price.toFixed(2));
				//remove saving
				/*$('._yousaved').hide();*/
				//add coupon discount
				/*if(typeof pocket.coupondetails !== 'undefined' && pocket.coupondetails !== null){
				$('.totalFair.package').after('<div class="totalFair savings _coupon"><span class="pull-left" >' +
					i18n.t('couponDiscount') +
					'</span> <span class="pull-right price">' +
					i18n.t(pocket.price.uc) + ' ' +
					'<strong class="_priceTag" >' +
					couponDiscount.toFixed(2) +
					'</strong> </span> </div>');
			}*/
				
					$('.totalSec li:first-child').after('<li class="_loyalty"><span class="pull-left">'+
					i18n.t('flyinRewardsRedeemed')+ '</span><span class="pull-right green-txt">'+i18n.t(pocket.flightInfo.flightItineraries.jsonFlightPrice.up.uc)+'  <elm class="_priceTag">'+pocket.loyaltydetails.redemptionUCAmount+'</elm></span></li>');
				
				//update paybutton
				var payArr = $('#paymeBtn').val().split(' ');
				if (lang == "ar") {
					payArr[1] = price.toFixed(2);
				} else {
					payArr[2] = price.toFixed(2);
				}
				$('#paymeBtn').val(payArr[0] + ' ' + payArr[1] + ' ' + payArr[2]);
				var lytObj = $('._ltyInfo');
				$(lytObj).attr('data-bamt',parseFloat(pocket.sarPrice.updatedPrice));
				var sarAmtDisp = $('._sarAmt');
				var egpAmtDisp = $('._egpAmt');
				if (sarAmtDisp.length > 0) {
					$('._sarAmt').text(parseFloat(pocket.sarPrice.updatedPrice));
				}
				if (egpAmtDisp.length > 0) {
					$('._egpAmt').text(parseFloat(pocket.egpPrice.updatedPrice));
				}
				pricetagConvert.init();
			}

		},
		updateCouponDetails: function (data) {
			var pocket = JSON.parse(data);
			var beforeCoupon = $('._tSave').attr('data-save');
			var beforePrice = parseFloat($('._tFair').attr('data-p'));
			if (pocket.coupondetails !== null) {
				var loyaltyDiscount = 0;
				if(typeof pocket.loyaltydetails !== 'undefined' && pocket.loyaltydetails !== null){
					loyaltyDiscount = parseFloat(pocket.loyaltydetails.redemptionUCAmount);
				}
				var couponDiscount = parseFloat(pocket.coupondetails.deductAmount);
				$('._tFair').attr('data-cprice',couponDiscount);
				$('._tFair').attr('data-lprice',loyaltyDiscount);
				var price = beforePrice - (couponDiscount + loyaltyDiscount);
				/*if(beforeCoupon){
				couponDiscount = couponDiscount+ parseFloat(beforeCoupon);
				}*/

				var totalPriceStr = ' <strong>' + price.toFixed(2) + '</strong> ';
				$('._tFair').html(totalPriceStr);
				$('._tFair').attr("data-upprice",price.toFixed(2));
				//remove saving
				/*$('._yousaved').hide();*/
				//add coupon discount
				var currEgp ="";
				if(pocket.price.uc == "EGP"){
					currEgp ="_egpCur";
				}
				$('.totalSec li:first-child').after('<li class="totalFair savings _coupon"><span class="pull-left" > '+
					i18n.t('couponDiscount') +
					'</span> <span class="pull-right price green-txt '+currEgp+'">'+i18n.t(pocket.price.uc) + ' ' +
					'<elm class="_priceTag" >' +
					couponDiscount.toFixed(2) +
					'</elm> </span> </li>');
				/*if(typeof pocket.loyaltydetails !== 'undefined' && pocket.loyaltydetails !== null){
					$('.tistlPointsSmry li:first-child').after('<li class="green-txt"><span class="pull-left">'+
					i18n.t('flyinRewardsRedeemed')+ '</span><span class="pull-right">'+i18n.t(pocket.flightInfo.flightItineraries.jsonFlightPrice.up.uc)+'  <strong class="_priceTag">'+pocket.loyaltydetails.redemptionUCAmount+'</strong></span></li>');
				}*/
				//update paybutton
				var payArr = $('#paymeBtn').val().split(' ');
				if (lang == "ar") {
					payArr[1] = price.toFixed(2);
				} else {
					payArr[2] = price.toFixed(2);
				}
				$('#paymeBtn').val(payArr[0] + ' ' + payArr[1] + ' ' + payArr[2]);
				var lytObj = $('._ltyInfo');
				$(lytObj).attr('data-bamt',parseFloat(pocket.sarPrice.updatedPrice));
				var sarAmtDisp = $('._sarAmt');
				var egpAmtDisp = $('._egpAmt');
				if (sarAmtDisp.length > 0) {
					$('._sarAmt').text(parseFloat(pocket.sarPrice.updatedPrice));
				}
				if (egpAmtDisp.length > 0) {
					$('._egpAmt').text(parseFloat(pocket.egpPrice.updatedPrice));
				}
				pricetagConvert.init();
			}

		},
		removeCoupon: function (data) {
			var pocket = JSON.parse(data);
			var beforeCoupon = $('._tSave').attr('data-save');
			var couponAmt = parseFloat($('._tFair').attr('data-cprice'));
			//var loyaltyAmt = parseFloat($('._tFair').attr('data-lprice'));
			var totalDiscount = (couponAmt).toFixed(2);
			var beforePrice = parseFloat($('._tFair').attr('data-p'));
			var upPrice = parseFloat($('._tFair').attr('data-upprice'));
			var totalAmt = (parseFloat(upPrice) + parseFloat(totalDiscount)).toFixed(2);
			$('._tFair').html(totalAmt);
			$('._tSave').html(beforeCoupon);
			$('._tFair').attr("data-upprice",totalAmt);
			var payArr = $('#paymeBtn').val().split(' ');
			if (lang == "ar") {
				payArr[1] = totalAmt;
			} else {
				payArr[2] = totalAmt;
			}
			$('._yousaved').show();
			$('._coupon').hide();
			$('#paymeBtn').val(payArr[0] + ' ' + payArr[1] + ' ' + payArr[2]);
			var sarAmtDisp = $('._sarAmt');
			var egpAmtDisp = $('._egpAmt');
			if (sarAmtDisp.length > 0) {
				$('._sarAmt').text(parseFloat(pocket.sarPrice.updatedPrice));
			}
			if (egpAmtDisp.length > 0) {
				$('._egpAmt').text(parseFloat(pocket.egpPrice.updatedPrice));
			}
		},
		removeLoyalty: function (data) {
			var pocket = JSON.parse(data);
			var beforeLoyalty = $('._tSave').attr('data-save');
			//var couponAmt = parseFloat($('._tFair').attr('data-cprice'));
			var loyaltyAmt = parseFloat($('._tFair').attr('data-lprice'));
			var totalDiscount = (loyaltyAmt).toFixed(2);
			var beforePrice = parseFloat($('._tFair').attr('data-p'));
			var upPrice = parseFloat($('._tFair').attr('data-upprice'));
			var totalAmt = (parseFloat(upPrice) + parseFloat(totalDiscount)).toFixed(2);
			$('._tFair').html(totalAmt);
			$('._tSave').html(beforeLoyalty);
			$('._tFair').attr("data-upprice",totalAmt);
			var payArr = $('#paymeBtn').val().split(' ');
			if (lang == "ar") {
				payArr[1] = totalAmt;
			} else {
				payArr[2] = totalAmt;
			}
			$('._yousaved').show();
			$('._loyalty').hide();
			$('#paymeBtn').val(payArr[0] + ' ' + payArr[1] + ' ' + payArr[2]);
			var sarAmtDisp = $('._sarAmt');
			var egpAmtDisp = $('._egpAmt');
			if (sarAmtDisp.length > 0) {
				$('._sarAmt').text(parseFloat(pocket.sarPrice.p));
			}
			if (egpAmtDisp.length > 0) {
				$('._egpAmt').text(parseFloat(pocket.egpPrice.p));
			}
		}

	}
}
	());

var fphpaginationOptInit;

function fphpageselectCallback(page_index, filterData) {
	//Item per page
	var items_per_page = 30;
	var max_elem = Math.min((page_index + 1) * items_per_page, filterData.length);
	//Index Starting number
	var start = page_index * items_per_page;
	//Index ending number
	var end = max_elem;
	var result = filterData.slice(start, end);
	var data = {
		flight: fphService.baseObj.flight,
		hotels: fphService.baseObj.hotel,
		priceMap: fphService.baseObj.priceMap,
		hotel: {
			searchRS: result
		}
	}
	if (filterData.length == 0) {
		$('.fphNoFilteredResults').attr('style', 'display:block');
	} else {
		$('.fphNoFilteredResults').attr('style', 'display:none');
	}
	//added trigerclick

	fphService.loadTemplate('fph-results', data, $('.fphResultContainer'));
	if (typeof data.hotel.searchRS[0] != 'undefined') {
		$('#_filter-airline-list').find("input[value=" + data.hotel.searchRS[0].flightItenary.trips[0][0].jsonSector[0].marAirlineCode + "]").prop('checked', true);
	}

	if (fphService.resetFilterswithMS) {
		setTimeout(function () {
			$('.yhfReset._youHaveFilteredPackageReset').trigger('click');
		}, 80)
	}
	var offsetPopTop = $('#_bodyContainer').offset().top;
	$('html, body').animate({
		scrollTop: offsetPopTop
	}, 500);
	/**
	 * For airline logos
	 */
	for (var i in data.flight.searchRes) {
		for (e in data.flight.searchRes[i].trips) {
			for (m in data.flight.searchRes[i].trips[e]) {
				var legMAC = [],
				legMACode = [];
				for (l in data.flight.searchRes[i].trips[e][m].jsonSector) {
					if (nn(data.flight.searchRes[i].trips[e][m].jsonSector[l].marAirlineCode, legMACode) == false) {
						legMACode.push(data.flight.searchRes[i].trips[e][m].jsonSector[l].marAirlineCode);
						legMAC.push(data.flight.searchRes[i].trips[e][m].jsonSector[l].marAirlineCode);
					}
					data.flight.searchRes[i].trips[e][m].airlineLogos = legMAC;
				}
			}
		}
	}
	//fphService.loadTemplate('change_flight_template',data.flight,$('._fphChangeFlight'));
	pricetagConvert.init();
	fphService.resetFilterswithMS = false;
	return false;
}

/**
 *@description F+H Search Request Builder
 *@return JSON Object
 *@auther Fahid Mohammad
 */
fphService.validateSearch = function () {
	fphService.changeFlightSelected = false;
	if ($('#selectedFPHSO').val() == 'flightsRoundtripFH') {
		fphService.roundTripSearch();
	} else if ($('#selectedFPHSO').val() == 'flightsOnewayFH') {
		fphService.onewaySearch();
	}

}

fphService.roundTripSearch = function () {
	//flights
	var roundFrom = $('#roundFromFPH');
	var roundTo = $('#roundToFPH');
	var dupCodeMsgFH = $('#dupCodeMsgFH');
	var roundFromId = $('#roundFromIdFH');
	var toRoundID = $('#toRoundIDFH');
	var adult = 1; //$('#roundTripAdultsFH, #fhAdults');
	var child = 0; //$('#roundTripChildrenFH, #fhChildren');
	var infant = 0; //$('#roundTripInfantsFH, #fhInfants');
	var classType = $('#searchTrpClassFH, #modifySearchClassTypeFH');
	var isChecked = $('#nonStopSearchTripFlightsFH,  #modifyNonStopOneWayFlightsFH');
	var date1 = $('#rThdateFHiddenFH, .mmfromtwowayFPH');
	var date2 = $('#rThdateTHiddenFH, .mmtotwowayFPH');
	var isFlexiDate = $('#flexiCalRoundTripFlights, #flexiModifyTripFlights');
	var isDirectFlight = false,
	isFlexiableDate = false;
	var isFlexiableDate = false;
	if (isChecked.prop('checked')) {
		isDirectFlight = true;
	}

	//hotels
	var isHotelChgDates = false;
	var countrycityhotel = $('#countrycityhotel');
	var flighthotelsearchKey = $('#flighthotelsearchKey');
	var depFlightHotelSearchKey = $('#depFlightHotelSearchKey');
	var predectiveInfo = flighthotelsearchKey.val().split('>>');
	var depPredectiveInfo = depFlightHotelSearchKey.val().split('>>');
	var hkeyHiddenAlter = $('#hkeyHiddenAlter');
	var hkeyTotalGHiddenAlter = $('#_FH_hkeyTotalGHiddenAlter');
	var checkIn = date1;
	var checkOut = date2;
	checkIn = checkIn.val().replace(/\//g, '-');
	checkOut = checkOut.val().replace(/\//g, '-');
	var hotelRooms = $('#_FH_hotelRooms').val();
	var adults = $("#_FH_hiddena").val();
	var children = $("#_FH_hiddenc").val();
	var infants = $("#_FH_hiddeni").val();
	var age = $("#_FH_hiddenca").val();
	var passengers = groupPassengers();
	var infantMoreMsg = $('#infantMoreMsg').val();
	var childrenAges = getTotalChildAge(age);
	adult = passengers[0];
	child = passengers[1];
	infant = passengers[2];
	if (adult < infant) {
		growl_alert(infantMoreMsg);
		return false;
	}
	if ((adult + child) > 9) {
		growl_alert(hkeyTotalGHiddenAlter.attr('data-err'));
		return false;
	}

	var lang = 'en_GB';
	if ($('html').attr('data-lang') == 'ar') {
		lang = "ar_SA";
	}

	//Flight validation
	if (roundFromId.attr('value') == "") {
		return cmnSrchVal(roundFrom, i18n.t("requiredDeparturemessage"));
	} else {
		roundFrom.removeClass('error');
	}
	if (toRoundID.attr('value') == "") {
		return cmnSrchVal(roundTo, i18n.t("requiredArrivalmessage"));
	} else {
		roundTo.removeClass('error');
	}
	if (roundFromId.attr('value') != "" && toRoundID.attr('value') != "") {
		if (roundFromId.attr('value') == toRoundID.attr('value')) {
			roundFrom.addClass('error');
			return cmnSrchVal(roundTo, i18n.t("fromToDestNotSame"));
		} else {
			roundFrom.removeClass('error');
			roundTo.removeClass('error');
		}
	}
	//Datepicker Validation
	if (date1.val() == "") {
		return cmnSrchVal($('._datepicker.fromtwowayFPH'), i18n.t("requiredDepDatemessage"));
	} else {
		$('._datepicker.fromtwowayFPH').removeClass('error');
	}
	if (date2.val() == "") {
		return cmnSrchVal($('._datepicker.totwowayFPH'), i18n.t("requiredReturnDatemessage"));
	} else {
		$('._datepicker.totwowayFPH').removeClass('error');
	}

	var diffCheckinDates = $('#searchDifferent, #mSearchDifferent')
		if (diffCheckinDates.prop('checked')) {
			if (date1.val() === date2.val()) {
				$('._datepicker.fromtwowayFPH').addClass('error');
				return cmnSrchVal($('._datepicker.totwowayFPH'), i18n.t("errSameDates"));
			}
			checkIn = $('._datepicker.fromFPH,.fromFPH');
			checkOut = $('._datepicker.toFPH,.toFPH');
			if (checkIn.val() == "") {
				return cmnSrchVal(checkIn, i18n.t("errCheckIn"));
			} else {
				checkIn.removeClass('error');

			}
			if (checkOut.val() == "") {
				return cmnSrchVal(checkOut, i18n.t("errCheckOut"));
			} else {
				checkOut.removeClass('error');
			}
			if (checkIn.val() === checkOut.val()) {
				checkIn.addClass('error');
				return cmnSrchVal(checkOut, i18n.t("errSameDates"));
			}else if(checkIn.val()!="" && checkOut.val()!="" && new Date(moment(checkIn.val(), "DD/MM/YYYY").format("YYYY-MM-DD")) > new Date(moment(checkOut.val(), "DD/MM/YYYY").format("YYYY-MM-DD"))){
				return cmnSrchVal($('._datepicker.toFPH,.toFPH'), i18n.t('reqValCheckOutDate'));
			}else {
				checkIn = moment(checkIn.val(), "DD/MM/YYYY").format("YYYY-MM-DD");
				checkOut = moment(checkOut.val(), "DD/MM/YYYY").format("YYYY-MM-DD");
				var timeDiff = Math.abs(new Date(checkOut).getTime() - new Date(checkIn).getTime());
				var nights = Math.ceil(timeDiff / (1000 * 3600 * 24));
				if (nights > 30) {
					$('._datepicker.fromFPH').addClass('error');
					return cmnSrchVal($('._datepicker.toFPH'), i18n.t("errbkngperiod"));
				} else {
					$('._datepicker.fromFPH').removeClass('error');
					$('._datepicker.toFPH').removeClass('error');
				}
			}

		}
		if (date1.val() === date2.val()) {
			$('._datepicker.fromtwowayFPH').addClass('error');
			return cmnSrchVal($('._datepicker.totwowayFPH'), i18n.t("errSameDates"));
		} else if (!diffCheckinDates.prop('checked')) {
			var timeDiff = Math.abs(new Date(date2.val()).getTime() - new Date(date1.val()).getTime());
			var nights = Math.ceil(timeDiff / (1000 * 3600 * 24));
			if (nights > 30) {
				$('._datepicker.fromtwowayFPH').addClass('error');
				return cmnSrchVal($('._datepicker.totwowayFPH'), i18n.t("errbkngperiod"));
			} else {
				$('._datepicker.fromtwowayFPH').removeClass('error');
				$('._datepicker.totwowayFPH').removeClass('error');

			}
		}
		if(date1.val()!="" && date2.val()!="" && new Date(date1.val()) > new Date(date2.val())){
			return cmnSrchVal($('._datepicker.totwowayFPH'), i18n.t("reqValReturnDatemsg"));
		}
		$('.alert_custom').hide();
	if ($('#roundTripButtonFH2').length) {
		btnLoadingAnimation($('#roundTripButtonFH2'));
		$("#roundTripButtonFH2").attr("disabled", "disabled");
		$("#roundTripButtonFH2").val(i18n.t('processingTxt'));
	}

	//console.log(_fphChdAge);
	if ($('#searchDifferent').is(':checked')) {
		var htlStyDiffrent = true;
	} else {
		var htlStyDiffrent = false;
	}
	fphService.homeSearch = true;
	var cookieData = {
		fromInput: roundFrom.val(),
		toInput: roundTo.val(),
		fromIATA: roundFromId.val(),
		toIATA: toRoundID.val(),
		flighthotelsearchKey: flighthotelsearchKey.val(),
		depFlightHotelSearchKey: depFlightHotelSearchKey.val(),
		departureDate: moment($("#rThdateFHiddenFH").val()).format('YYYY-MM-DD'),
		arrivalDate: moment($("#rThdateTHiddenFH").val()).format('YYYY-MM-DD'),
		classType: $("#searchTrpClassFH").val(),
		roomCnt: $("#_FH_hotelRooms").val(),
		adltCnt: $("#_FH_hiddena").val(),
		chldCnt: $("#_FH_hiddenc").val(),
		inftCnt: $("#_FH_hiddeni").val(),
		chldAge: $("#_FH_hiddenca").val(),
		htlStyDiff: htlStyDiffrent,
		htlCheckIn: $("._datepicker.fromFPH").val(),
		htlCheckOut: $("._datepicker.toFPH").val(),
		tripType: "roundTrip"
	}
	Cookies.set('fphNSearchCookie', JSON.stringify(cookieData), {
		expires: 60,
		path: '/',
		domain: window.domainName
	});
	var opt = {
		tripType: '2',
		departureDetails: roundFromId.val(),
		arriveDetails: toRoundID.val(),
		adult: adult || 1,
		child: child || 0,
		infant: infant || 0,
		classType: classType.val() || 'Economy',
		departureDate: moment(date1.val().replace(/\//g, '-')).format('YYYY-MM-DD'),
		arrivalDate: moment(date2.val().replace(/\//g, '-')).format('YYYY-MM-DD'),
		isDirectFlights: isDirectFlight,
		isFPH: true,
		destinationOrHotel: 'Destination',
		depCityId: depPredectiveInfo[3],
		depCountryCode: depPredectiveInfo[6],
		arrCityId: predectiveInfo[3],
		cityName: predectiveInfo[4],
		countryName: predectiveInfo[5],
		countryCode: predectiveInfo[6],
		criteria: 'null',
		directFlow: true,
		isHotelChgDates: isHotelChgDates,
		checkInDate: checkIn,
		checkOutDate: checkOut,
		predictiveId: predectiveInfo[3],
		starType: '',
		checkBreakfastSelected: false,
		hotelSearchType: predectiveInfo[0],
		resultsViewType: 'List',
		noOfRooms: hotelRooms,
		language: lang,
		noOfAdults: adults,
		noOfChildren: children,
		childrenAges: childrenAges,
		infantsArr: infants,
		hotelClass: 'null',
		productType: 'FPH',
		token: randomString()
	};

	var child_age="";
	var spltChldAge = $("#_FH_hiddenca").val().split("|");
	for(i=0; i < spltChldAge.length ;i++){
		var ages = spltChldAge[i].split(",");
		for(j=0; j < ages.length; j++){
			if(ages[j] != "0"){
				child_age += ages[j]+",";
			}
		}
	}
	fphSearch({
		"trip_type":"RoundTrip",
		"leaving_from":$('#roundFromIdFH').val(),
		"going_to":$('#toRoundIDFH').val(),
		"departing_date":(date1.val()!="")?new Date(date1.val()).toString():"",
		"returning_date":(date2.val()!="")?new Date(date2.val()).toString():"",
		"traveller_adult": adult.toString(),
		"traveller_child":child.toString(),
		"traveller_infant":infant.toString(),
		"class":$("#searchTrpClassFH").val(),
		"no_of_rooms":hotelRooms,
		"different_date_hotel_stay": (htlStyDiffrent==true)?"Yes":"No",
		"check_in":(htlStyDiffrent==true)?$("._datepicker.fromFPH").val():"",
		"check_out":(htlStyDiffrent==true)?$("._datepicker.toFPH").val():"",
		"child_age":child_age
	});
	setTimeout(function () {
		fphService.buildUrl(opt);
	}, 1000);
}

fphService.onewaySearch = function () {
	//flights
	var roundFrom = $('#roundFromFPH');
	var roundTo = $('#roundToFPH');
	var dupCodeMsgFH = $('#dupCodeMsgFH');
	var roundFromId = $('#roundFromIdFH');
	var toRoundID = $('#toRoundIDFH');
	var adult = 1; //$('#roundTripAdultsFH, #fhAdults');
	var child = 0; //$('#roundTripChildrenFH, #fhChildren');
	var infant = 0; //$('#roundTripInfantsFH, #fhInfants');
	var classType = $('#searchTrpClassFH, #modifySearchClassTypeFH');
	var isChecked = $('#nonStopSearchTripFlightsFH,  #modifyNonStopOneWayFlightsFH');
	var date1 = $('#hdateFHiddenFH, .mmfromtwowayFPH');
	//var date2 = $('#rThdateTHiddenFH, .mmtotwowayFPH');
	var isFlexiDate = $('#flexiCalRoundTripFlights, #flexiModifyTripFlights');
	var isDirectFlight = false,
	isFlexiableDate = false;
	var isFlexiableDate = false;
	if (isChecked.prop('checked')) {
		isDirectFlight = true;
	}

	//hotels
	var isHotelChgDates = false;
	var countrycityhotel = $('#countrycityhotel');
	var flighthotelsearchKey = $('#flighthotelsearchKey');
	var predectiveInfo = flighthotelsearchKey.val().split('>>');
	var depFlightHotelSearchKey = $('#depFlightHotelSearchKey');
	var depPredectiveInfo = depFlightHotelSearchKey.val().split('>>');
	var hkeyHiddenAlter = $('#hkeyHiddenAlter');
	var hkeyTotalGHiddenAlter = $('#_FH_hkeyTotalGHiddenAlter');
	var checkIn = $('._datepicker.fromOneWayFPH,.bbhDF');
	var checkOut = $('._datepicker.toOneWayFPH,.bbhDT');
	var hotelRooms = $('#_FH_hotelRooms').val();
	var adults = $("#_FH_hiddena").val();
	var children = $("#_FH_hiddenc").val();
	var infants = $("#_FH_hiddeni").val();
	var age = $("#_FH_hiddenca").val();
	var passengers = groupPassengers();
	var infantMoreMsg = $('#infantMoreMsg').val();
	var childrenAges = getTotalChildAge(age);
	adult = passengers[0];
	child = passengers[1];
	infant = passengers[2];
	if (adult < infant) {
		growl_alert(infantMoreMsg);
		return false;
	}

	if ((adult + child) > 9) {
		growl_alert(hkeyTotalGHiddenAlter.attr('data-err'));
		return false;
	}

	var lang = 'en_GB';
	if ($('html').attr('data-lang') == 'ar') {
		lang = "ar_SA";
	}
	//Flight validation
	if (roundFromId.attr('value') == "") {
		roundFrom.addClass('error');
		growl_alert(i18n.t("requiredDeparturemessage"));
		roundFrom.focus();
		return false;
	} else {
		roundFrom.removeClass('error');
	}
	if (toRoundID.attr('value') == "") {
		roundTo.addClass('error');
		growl_alert(i18n.t("requiredArrivalmessage"));
		roundTo.focus();
		return false;
	} else {
		roundTo.removeClass('error');
	}
	if (roundFromId.attr('value') != "" && toRoundID.attr('value') != "") {
		if (roundFromId.attr('value') == toRoundID.attr('value')) {
			growl_alert(i18n.t('fromToDestNotSame'));
			roundFrom.addClass('error');
			roundTo.addClass('error');
			return false;
		}
	}
	//Datepicker Validation
	if (date1.val() == "") {
		$('._datepicker.fromonewayFPH').addClass('error');
		growl_alert(i18n.t('requiredDepDatemessage'));
		return false;
	} else {
		$('._datepicker.fromonewayFPH').removeClass('error');
	}

	if (true) {
		checkIn = $('._datepicker.fromOneWayFPH,.bbhDF');
		checkOut = $('._datepicker.toOneWayFPH,.bbhDT');
		//Datepicker Validation
		if (checkIn.val() == "") {
			checkIn.addClass('error');
			growl_alert(i18n.t('errCheckIn'));
			return false;
		} else {
			checkIn.removeClass('error');
		}
		if (checkOut.val() == "") {
			checkOut.addClass('error');
			growl_alert(i18n.t('errCheckOut'));
			return false;
		} else {
			checkOut.removeClass('error');
		}
		if (checkIn.val() === checkOut.val()) {
			checkIn.addClass('error');
			checkOut.addClass('error');
			growl_alert(i18n.t('errSameDates'));
			return false;
		}else if(checkIn.val()!="" && checkOut.val()!="" && new Date(moment(checkIn.val(), "DD/MM/YYYY").format("YYYY-MM-DD")) > new Date(moment(checkOut.val(), "DD/MM/YYYY").format("YYYY-MM-DD"))){
			return cmnSrchVal($('._datepicker.toOneWayFPH,.bbhDT'), i18n.t('reqValCheckOutDate'));
		} else {
			checkIn = moment(checkIn.val(), "DD/MM/YYYY").format("YYYY-MM-DD");
			checkOut = moment(checkOut.val(), "DD/MM/YYYY").format("YYYY-MM-DD");
			var timeDiff = Math.abs(new Date(checkOut).getTime() - new Date(checkIn).getTime());
			var nights = Math.ceil(timeDiff / (1000 * 3600 * 24));
			if (nights > 30) {
				growl_alert(i18n.t("errbkngperiod"));
				condition = false;
				return false;
			}
		}
	}
	$('.alert_custom').hide();
	if ($('#roundTripButtonFH2').length) {
		btnLoadingAnimation($('#roundTripButtonFH2'));
		$("#roundTripButtonFH2").attr("disabled", "disabled");
		$("#roundTripButtonFH2").val(i18n.t('processingTxt'));
	}
	fphService.homeSearch = true;
	var cookieData = {
		fromInput: roundFrom.val(),
		toInput: roundTo.val(),
		fromIATA: roundFromId.val(),
		toIATA: toRoundID.val(),
		flighthotelsearchKey: flighthotelsearchKey.val(),
		depFlightHotelSearchKey: depFlightHotelSearchKey.val(),
		departureDate: moment($("#hdateFHiddenFH").val()).format('YYYY-MM-DD'),
		classType: $("#searchTrpClassFH").val(),
		roomCnt: $("#_FH_hotelRooms").val(),
		adltCnt: $("#_FH_hiddena").val(),
		chldCnt: $("#_FH_hiddenc").val(),
		inftCnt: $("#_FH_hiddeni").val(),
		chldAge: $("#_FH_hiddenca").val(),
		htlCheckIn: $("._datepicker.fromOneWayFPH").val(),
		htlCheckOut: $("._datepicker.toOneWayFPH").val(),
		tripType: "oneWay"
	}
	Cookies.set('fphNSearchCookie', JSON.stringify(cookieData), {
		expires: 60,
		path: '/',
		domain: window.domainName
	});

	var opt = {
		tripType: '1',
		departureDetails: roundFromId.val(),
		arriveDetails: toRoundID.val(),
		adult: adult || 1,
		child: child || 0,
		infant: infant || 0,
		classType: classType.val() || 'Economy',
		departureDate: moment(date1.val().replace(/\//g, '-')).format('YYYY-MM-DD'),
		//arrivalDate: moment(date2.val().replace(/\//g, '-')).format('YYYY-MM-DD'),
		isDirectFlights: isDirectFlight,
		isFPH: true,
		destinationOrHotel: 'Destination',
		depCityId: depPredectiveInfo[3],
		depCountryCode: depPredectiveInfo[6],
		arrCityId: predectiveInfo[3],
		cityName: predectiveInfo[4],
		countryName: predectiveInfo[5],
		countryCode: predectiveInfo[6],
		criteria: 'null',
		directFlow: true,
		isHotelChgDates: isHotelChgDates,
		checkInDate: checkIn,
		checkOutDate: checkOut,
		predictiveId: predectiveInfo[3],
		starType: '',
		checkBreakfastSelected: false,
		hotelSearchType: predectiveInfo[0],
		resultsViewType: 'List',
		noOfRooms: hotelRooms,
		language: lang,
		noOfAdults: adults,
		noOfChildren: children,
		childrenAges: childrenAges,
		infantsArr: infants,
		hotelClass: 'null',
		productType: 'FPH',
		token : randomString()
	};
	var child_age="";
	var spltChldAge = $("#_FH_hiddenca").val().split("|");
	for(i=0; i < spltChldAge.length ;i++){
		var ages = spltChldAge[i].split(",");
		for(j=0; j < ages.length; j++){
			if(ages[j] != "0"){
				child_age += ages[j]+",";
			}
		}
	}
	fphSearch({
		"trip_type":"OneWay",
		"leaving_from":$('#roundFromIdFH').val(),
		"going_to":$('#toRoundIDFH').val(),
		"departing_date":(date1.val()!="")?new Date(date1.val()).toString():"",
		"returning_date":"",
		"traveller_adult": adult.toString(),
		"traveller_child":child.toString(),
		"traveller_infant":infant.toString(),
		"class":$("#searchTrpClassFH").val(),
		"no_of_rooms":hotelRooms,
		"different_date_hotel_stay":"Yes",
		"check_in":$("._datepicker.fromOneWayFPH").val(),
		"check_out":$("._datepicker.toOneWayFPH").val(),
		"child_age":child_age
	});
	setTimeout(function () {
		fphService.buildUrl(opt);
	}, 1000);
}

fphService.validateFlightHotelPOP = function () {
	if ($('#selectedFPHSOPOP').val() == 'flightsOnewayFHPOP') {
		fphService.onewayPOPSearch();
	}
	if ($('#selectedFPHSOPOP').val() == 'flightsRoundtripFHPOP') {
		fphService.roundTripPOPSearch();
	}

}

/**
 *@description Search Request Builder for FPH landing page
 *@return JSON Object
 *@author Hari
 */
fphService.roundTripPOPSearch = function () {
	//flights
	var roundFrom = $('#roundFromFPHPOP');
	var roundTo = $('#roundToFPHPOP');
	var dupCodeMsgFH = $('#dupCodeMsgFH');
	var roundFromId = $('#roundFromIdFHPOP');
	var toRoundID = $('#toRoundIDFHPOP');
	var adult = 1; //$('#roundTripAdultsFH, #fhAdults');
	var child = 0; //$('#roundTripChildrenFH, #fhChildren');
	var infant = 0; //$('#roundTripInfantsFH, #fhInfants');
	var classType = $('#searchTrpClassFHPOP, #modifySearchClassTypeFH');
	var isChecked = $('#nonStopSearchTripFlightsFHPOP,  #modifyNonStopOneWayFlightsFH');
	var date1 = $('#rThdateFHiddenFHPOP, .mmfromtwowayFPH');
	var date2 = $('#rThdateTHiddenFHPOP, .mmtotwowayFPH');
	var isFlexiDate = $('#flexiCalRoundTripFlights, #flexiModifyTripFlights');
	var isDirectFlight = false,
	isFlexiableDate = false;
	var isFlexiableDate = false;
	if (isChecked.prop('checked')) {
		isDirectFlight = true;
	}

	//hotels
	var isHotelChgDates = false;
	var countrycityhotel = $('#countrycityhotel');
	var flighthotelsearchKey = $('#flighthotelsearchKeyPOP');
	var predectiveInfo = flighthotelsearchKey.val().split('>>');
	var depFlightHotelSearchKey = $('#depFlightHotelSearchKey');
	var depPredectiveInfo = depFlightHotelSearchKey.val().split('>>');
	var hkeyHiddenAlter = $('#hkeyHiddenAlter');
	var hkeyTotalGHiddenAlter = $('#_FHPOP_hkeyTotalGHiddenAlter');
	var checkIn = date1;
	var checkOut = date2;
	checkIn = checkIn.val().replace(/\//g, '-');
	checkOut = checkOut.val().replace(/\//g, '-');
	var hotelRooms = $('#_FHPOP_hotelRooms').val();
	var adults = $("#_FHPOP_hiddena").val();
	var children = $("#_FHPOP_hiddenc").val();
	var infants = $("#_FHPOP_hiddeni").val();
	var age = $("#_FHPOP_hiddenca").val();
	if (adult < infant) {
		growl_alert(infantMoreMsg);
		return false;
	}
	//Flight validation
	if (roundFromId.attr('value') == "") {
		return cmnSrchVal(roundFrom, roundFrom.attr('data-err'));
	} else {
		roundFrom.removeClass('error');
	}
	if (toRoundID.attr('value') == "") {
		return cmnSrchVal(roundTo, roundTo.attr('data-err'));
	} else {
		roundTo.removeClass('error');
	}
	if (roundFromId.attr('value') != "" && toRoundID.attr('value') != "") {
		if (roundFromId.attr('value') == toRoundID.attr('value')) {
			roundFrom.addClass('error');
			return cmnSrchVal(roundTo, dupCodeMsgFH.attr('data-err'));
		} else {
			roundFrom.removeClass('error');
			roundTo.removeClass('error');
		}
	}
	//Datepicker Validation
	if (date1.val() == "") {
		return cmnSrchVal($('._datepicker.fromtwowayFPHPOP'), i18n.t('requiredDepDatemessage'));
	} else {
		$('._datepicker.fromtwowayFPHPOP').removeClass('error');
	}
	if (date2.val() == "") {
		return cmnSrchVal($('._datepicker.totwowayFPHPOP'), i18n.t('requiredArrivalmessage'));
	} else {
		$('._datepicker.totwowayFPHPOP').removeClass('error');
	}

	var passengers = groupPassengersPOP();
	var infantMoreMsg = $('#infantMoreMsg').val();
	adult = passengers[0];
	child = passengers[1];
	infant = passengers[2];
	if (adult < infant) {
		growl_alert(infantMoreMsg);
		return false;
	}
	if ((adult + child) > 9) {
		growl_alert(hkeyTotalGHiddenAlter.attr('data-err'));
		return false;
	}
	var childrenAges = getTotalChildAge(age);
	var lang = 'en_GB';
	if ($('html').attr('data-lang') == 'ar') {
		lang = "ar_SA";
	}

	var diffCheckinDates = $('#searchDifferentPOP, #mSearchDifferent')
		if (diffCheckinDates.prop('checked')) {
			if (date1.val() === date2.val()) {
				$('._datepicker.fromtwowayFPHPOP').addClass('error');
				return cmnSrchVal($('._datepicker.totwowayFPHPOP'), i18n.t('errSameDates'));
			}
			checkIn = $('._datepicker.fromFPHPOP');
			checkOut = $('._datepicker.toFPHPOP');
			if (checkIn.val() == "") {
				return cmnSrchVal(checkIn, i18n.t('errCheckIn'));
			} else {
				checkIn.removeClass('error');
			}
			if (checkOut.val() == "") {
				return cmnSrchVal(checkOut, i18n.t('errCheckOut'));
			} else {
				checkOut.removeClass('error');
			}
			if (checkIn.val() === checkOut.val()) {
				checkIn.addClass('error');
				return cmnSrchVal(checkOut, i18n.t('errSameDates'));
			} else {
				checkIn = moment(checkIn.val(), "DD/MM/YYYY").format("YYYY-MM-DD");
				checkOut = moment(checkOut.val(), "DD/MM/YYYY").format("YYYY-MM-DD");
				var timeDiff = Math.abs(new Date(checkOut).getTime() - new Date(checkIn).getTime());
				var nights = Math.ceil(timeDiff / (1000 * 3600 * 24));
				if (nights > 30) {
					$('._datepicker.fromFPHPOP').addClass('error');
					return cmnSrchVal($('._datepicker.toFPHPOP'), i18n.t("errbkngperiod"));
				} else {
					$('._datepicker.fromFPHPOP').removeClass('error');
					$('._datepicker.toFPHPOP').removeClass('error');
				}
			}
		}
		if (date1.val() === date2.val()) {
			$('._datepicker.fromtwowayFPHPOP').addClass('error');
			return cmnSrchVal($('._datepicker.totwowayFPHPOP'), i18n.t('errSameDates'));
		} else if (!diffCheckinDates.prop('checked')) {
			var timeDiff = Math.abs(new Date(date2.val()).getTime() - new Date(date1.val()).getTime());
			var nights = Math.ceil(timeDiff / (1000 * 3600 * 24));
			if (nights > 30) {
				$('._datepicker.fromtwowayFPHPOP').addClass('error');
				return cmnSrchVal($('._datepicker.totwowayFPHPOP'), i18n.t("errbkngperiod"));
			} else {
				$('._datepicker.fromtwowayFPHPOP').removeClass('error');
				$('._datepicker.totwowayFPHPOP').removeClass('error');

			}
		}
		$('.alert_custom').hide();
	if ($('#roundTripButtonFHPOP').length) {
		btnLoadingAnimation($('#roundTripButtonFHPOP'));
		$("#roundTripButtonFHPOP").attr("disabled", "disabled");
		$("#roundTripButtonFHPOP").val(i18n.t('processingTxt'));
	}
	if ($('#searchDifferentPOP').is(':checked')) {
		var htlStyDiffrent = true;
	} else {
		var htlStyDiffrent = false;
	}
	var cookieData = {
		fromInput: roundFrom.val(),
		toInput: roundTo.val(),
		fromIATA: roundFromId.val(),
		toIATA: toRoundID.val(),
		flighthotelsearchKey: flighthotelsearchKey.val(),
		depFlightHotelSearchKey: depFlightHotelSearchKey.val(),
		departureDate: moment($("#rThdateFHiddenFHPOP").val()).format('YYYY-MM-DD'),
		arrivalDate: moment($("#rThdateTHiddenFHPOP").val()).format('YYYY-MM-DD'),
		classType: $("#searchTrpClassFHPOP").val(),
		roomCnt: $("#_FHPOP_hotelRooms").val(),
		adltCnt: $("#_FHPOP_hiddena").val(),
		chldCnt: $("#_FHPOP_hiddenc").val(),
		inftCnt: $("#_FHPOP_hiddeni").val(),
		chldAge: $("#_FHPOP_hiddenca").val(),
		htlStyDiff: htlStyDiffrent,
		htlCheckIn: $("._datepicker.fromFPHPOP").val(),
		htlCheckOut: $("._datepicker.toFPHPOP").val(),
		tripType: "roundTrip"

	}
	Cookies.set('fphNSearchCookie', JSON.stringify(cookieData), {
		expires: 60,
		path: '/',
		domain: window.domainName
	});
	var opt = {
		tripType: '2',
		departureDetails: roundFromId.val(),
		arriveDetails: toRoundID.val(),
		adult: adult || 1,
		child: child || 0,
		infant: infant || 0,
		classType: classType.val() || 'Economy',
		departureDate: moment(date1.val().replace(/\//g, '-')).format('YYYY-MM-DD'),
		arrivalDate: moment(date2.val().replace(/\//g, '-')).format('YYYY-MM-DD'),
		isDirectFlights: isDirectFlight,
		isFPH: true,
		destinationOrHotel: 'Destination',
		depCityId: depPredectiveInfo[3],
		depCountryCode: depPredectiveInfo[6],
		arrCityId: predectiveInfo[3],
		cityName: predectiveInfo[4],
		countryName: predectiveInfo[5],
		countryCode: predectiveInfo[6],
		criteria: 'null',
		directFlow: true,
		isHotelChgDates: isHotelChgDates,
		checkInDate: checkIn,
		checkOutDate: checkOut,
		predictiveId: predectiveInfo[3],
		starType: '',
		checkBreakfastSelected: false,
		hotelSearchType: predectiveInfo[0],
		resultsViewType: 'List',
		noOfRooms: hotelRooms,
		language: lang,
		noOfAdults: adults,
		noOfChildren: children,
		childrenAges: childrenAges,
		infantsArr: infants,
		hotelClass: 'null',
		productType: 'FPH',
		token: randomString()
	};
	setTimeout(function () {
		fphService.buildUrl(opt);
		$('.bgoverlay, .popupLand').removeClass('active');
	}, 1000);
}

fphService.onewayPOPSearch = function () {
	//flights
	var roundFrom = $('#roundFromFPHPOP');
	var roundTo = $('#roundToFPHPOP');
	var dupCodeMsg = $('#dupCodeMsg');
	var roundFromId = $('#roundFromIdFHPOP');
	var toRoundID = $('#toRoundIDFHPOP');
	var adult = '0'; //$('#roundTripAdultsFH, #fhAdults');
	var child = '0'; //$('#roundTripChildrenFH, #fhChildren');
	var infant = '0'; //$('#roundTripInfantsFH, #fhInfants');
	var classType = $('#searchTrpClassFHPOP, #modifySearchClassTypeFH');
	var isChecked = $('#nonStopSearchTripFlightsFHPOP,  #modifyNonStopOneWayFlightsFH');
	var date1 = $('#hdateFHiddenFHPOP, .mmfromtwowayFPH');
	//var date2 = $('._datepicker.totwowayFPH, .mmtotwoway');
	var isFlexiDate = $('#flexiCalRoundTripFlights, #flexiModifyTripFlights');
	var isDirectFlight = false,
	isFlexiableDate = false;
	if (isChecked.prop('checked')) {
		isDirectFlight = true;
	}

	//hotels
	var isHotelChgDates = false;
	var countrycityhotel = $('#countrycityhotel');
	var flighthotelsearchKey = $('#flighthotelsearchKeyPOP, #flighthotelsearchKeyOneWay');
	var predectiveInfo = flighthotelsearchKey.val().split('>>');
	var depFlightHotelSearchKey = $('#depFlightHotelSearchKey');
	var depPredectiveInfo = depFlightHotelSearchKey.val().split('>>');
	var hkeyHiddenAlter = $('#hkeyHiddenAlter');
	var hkeyTotalGHiddenAlter = $('#_FHPOP_hkeyTotalGHiddenAlter');
	var hotelRooms = $('#_FHPOP_hotelRooms').val();
	var adults = $("#_FHPOP_hiddena").val();
	var children = $("#_FHPOP_hiddenc").val();
	var infants = $("#_FHPOP_hiddeni").val();
	var age = $("#_FHPOP_hiddenca").val();
	//var passengers=separatePasssangers($("#_FH_hiddena").val(),$( "#_FH_hiddenca").val());
	var passengers = groupPassengersPOP();
	var infantMoreMsg = $('#infantMoreMsg').val();
	adult = passengers[0];
	child = passengers[1];
	infant = passengers[2];

	if (adult < infant) {
		growl_alert(infantMoreMsg);
		return false;
	}

	if ((adult + child) > 9) {
		growl_alert(hkeyTotalGHiddenAlter.attr('data-err'));
		return false;
	}

	var childrenAges = getTotalChildAge(age);
	var lang = 'en_GB';
	if ($('html').attr('data-lang') == 'ar') {
		lang = "ar_SA";
	}

	//Flight validation
	if (roundFromId.attr('value') == "") {
		roundFrom.addClass('error');
		growl_alert(roundFrom.attr('data-err'));
		roundFrom.focus();
		return false;
	} else {
		roundFrom.removeClass('error');
	}
	if (toRoundID.attr('value') == "") {
		roundTo.addClass('error');
		growl_alert(roundTo.attr('data-err'));
		roundTo.focus();
		return false;
	} else {
		roundTo.removeClass('error');
	}
	if (roundFromId.attr('value') != "" && toRoundID.attr('value') != "") {
		if (roundFromId.attr('value') == toRoundID.attr('value')) {
			growl_alert(dupCodeMsg.attr('data-err'));
			return false;
		}
	}
	//Datepicker Validation
	if (date1.val() == "") {
		$('._datepicker.fromonewayFPHPOP').addClass('error');
		growl_alert(i18n.t('requiredDepDatemessage'));
		return false;
	} else {
		$('._datepicker.fromonewayFPHPOP').removeClass('error');
	}

	if (true) {
		checkIn = $('._datepicker.fromOneWayFPHPOP');
		checkOut = $('._datepicker.toOneWayFPHPOP');
		//Datepicker Validation
		if (checkIn.val() == "") {
			checkIn.addClass('error');
			growl_alert(i18n.t('errCheckIn'));
			return false;
		} else {
			checkIn.removeClass('error');
		}
		if (checkOut.val() == "") {
			checkOut.addClass('error');
			growl_alert(i18n.t('errCheckOut'));
			return false;
		} else {
			checkOut.removeClass('error');
		}
		if (checkIn.val() === checkOut.val()) {
			checkIn.addClass('error');
			checkOut.addClass('error');
			growl_alert(i18n.t('errSameDates'));
			return false;
		} else {
			checkIn = moment(checkIn.val(), "DD/MM/YYYY").format("YYYY-MM-DD");
			checkOut = moment(checkOut.val(), "DD/MM/YYYY").format("YYYY-MM-DD");
			var timeDiff = Math.abs(new Date(checkOut).getTime() - new Date(checkIn).getTime());
			var nights = Math.ceil(timeDiff / (1000 * 3600 * 24));
			if (nights > 30) {
				growl_alert(i18n.t("errbkngperiod"));
				condition = false;
				return false;
			}
		}
		//isHotelChgDates=true;
	}

	/*if(roundFromId.val()=="" || toRoundID.val()==""){
	selectPredictiveOnOpen();
	}*/
	//for mobiles
	var totalPass = parseInt(adult) + parseInt(child) + parseInt(infant);
	var infantMoreMsg = $('#infantMoreMsg').val();
	var passengerMoreMsg = $('#passengerMoreMsg').val();
	//Check if total passenger is greater than 9
	if (totalPass > 9) {
		growl_alert(passengerMoreMsg);
		return false
	}
	$('.alert_custom').hide();
	if ($('#roundTripButtonFHPOP').length) {
		btnLoadingAnimation($('#roundTripButtonFHPOP'));
		$("#roundTripButtonFHPOP").attr("disabled", "disabled");
		$("#roundTripButtonFHPOP").val(i18n.t('processingTxt'));
	}
	var cookieData = {
		fromInput: roundFrom.val(),
		toInput: roundTo.val(),
		fromIATA: roundFromId.val(),
		toIATA: toRoundID.val(),
		flighthotelsearchKey: flighthotelsearchKey.val(),
		depFlightHotelSearchKey: depFlightHotelSearchKey.val(),
		departureDate: moment($("#hdateFHiddenFHPOP").val()).format('YYYY-MM-DD'),
		classType: $("#searchTrpClassFHPOP").val(),
		roomCnt: $("#_FHPOP_hotelRooms").val(),
		adltCnt: $("#_FHPOP_hiddena").val(),
		chldCnt: $("#_FHPOP_hiddenc").val(),
		inftCnt: $("#_FHPOP_hiddeni").val(),
		chldAge: $("#_FHPOP_hiddenca").val(),
		htlCheckIn: $("._datepicker.fromOneWayFPHPOP").val(),
		htlCheckOut: $("._datepicker.toOneWayFPHPOP").val(),
		tripType: "oneWay"

	}
	Cookies.set('fphNSearchCookie', JSON.stringify(cookieData), {
		expires: 60,
		path: '/',
		domain: window.domainName
	});
	var opt = {
		tripType: '1',
		departureDetails: roundFromId.val(),
		arriveDetails: toRoundID.val(),
		departureDate: moment(date1.val().replace(/\//g, '-')).format('YYYY-MM-DD'),
		isDirectFlights: isDirectFlight,
		isRefundableFares: false,
		adult: adult || 1,
		child: child || 0,
		infant: infant || 0,
		classType: classType.val() || 'Economy',
		isDirectFlights: isDirectFlight,
		isFPH: true,
		destinationOrHotel: 'Destination',
		depCityId: depPredectiveInfo[3],
		depCountryCode: depPredectiveInfo[6],
		arrCityId: predectiveInfo[3],
		cityName: predectiveInfo[4],
		//provinceName:predectiveInfo[3],
		countryName: predectiveInfo[5],
		countryCode: predectiveInfo[6],
		//latitude:'11',
		//longitude:'11',
		criteria: 'null',
		directFlow: true,
		isHotelChgDates: isHotelChgDates,
		checkInDate: checkIn,
		checkOutDate: checkOut,
		predictiveId: predectiveInfo[3],
		starType: '',
		checkBreakfastSelected: false,
		hotelSearchType: predectiveInfo[0],
		resultsViewType: 'List',
		noOfRooms: hotelRooms,
		language: lang,
		noOfAdults: adults,
		noOfChildren: children,
		childrenAges: childrenAges,
		infantsArr: infants,
		hotelClass: 'null',
		token: randomString()
	};

	setTimeout(function () {
		fphService.buildUrl(opt);
	}, 1000);
}

function groupPassengersPOP() {
	var adultArray = $("#_FHPOP_hiddena").val().split(',');
	var childrenArray = $("#_FHPOP_hiddenc").val().split(',');
	var infantsArray = $("#_FHPOP_hiddeni").val().split(',');
	var adultCnt = 0;
	var childCnt = 0;
	var infantCnt = 0;
	for (var i = 0; i < adultArray.length; i++) {
		adultCnt = parseInt(adultCnt) + parseInt(adultArray[i]);
	}
	for (var i = 0; i < childrenArray.length; i++) {
		childCnt = parseInt(childCnt) + parseInt(childrenArray[i]);
	}
	for (var i = 0; i < infantsArray.length; i++) {
		infantCnt = parseInt(infantCnt) + parseInt(infantsArray[i]);
	}
	return [adultCnt, childCnt, infantCnt]
}

function getTotalChildAge(str) {
	var arr = splitD(str, "|");
	var g = [];
	var str = "";
	var str2 = "";
	if (typeof arr !== "undefined" && arr.length > 0) {
		for (var i = 0; i < arr.length; i++) {
			str += "[" + joinArrayToCommaLimiter(arr[i]).join(",") + "]:";
		}
	}
	if (str.slice(-1) == ":") {
		str2 = str.substr(0, str.length - 1);
	}
	return str2;
}

function splitD(str, del) {
	if (str != "") {
		return str.split(del);
	}
}

function joinArrayToCommaLimiter(arr) {
	var d = [];
	var arr = arr.split(",");
	if (arr.length > 0) {
		for (var i = 0; i < arr.length; i++) {
			if (parseInt(arr[i]) > 0) {
				d.push(parseInt(arr[i]));
			}
		}
	}
	return d;
}

/**
 *@description F+H Search Request Builder
 *@return null
 *@auther Fahid Mohammad
 */
fphService.buildUrl = function (opt) {
	var result = "";
	if (!window.location.origin) {
		window.location.origin = window.location.protocol + "//" + window.location.hostname + (window.location.port ? ':' + window.location.port : '');
	}
	var base_url = window.location.origin;
	result = 'fph/search?' + $.param(opt);
	fphService.furlPush(result);
}
/**
 *@description FPH Results Refresh Rendering
 */
function fphSearchOnLoad() {
	//$('#_bodyContainer').empty();
	fphService.homeSearch = false;
	fphService.furlPush(window.location.href);
}

/**
 *@description Route URL to F+H Result Page
 *@return null
 *@author Fahid Mohammad
 */
fphService.furlPush = function (url, arg) {
	var u = window.location.origin + '/' + url;	
	if (typeof router !== "undefined") {
		router.navigate(u, true);
	}
}
function groupPassengers() {
	var adultArray = $("#_FH_hiddena").val().split(',');
	var childrenArray = $("#_FH_hiddenc").val().split(',');
	var infantsArray = $("#_FH_hiddeni").val().split(',');
	var adultCnt = 0;
	var childCnt = 0;
	var infantCnt = 0;
	for (var i = 0; i < adultArray.length; i++) {
		adultCnt = parseInt(adultCnt) + parseInt(adultArray[i]);
	}
	for (var i = 0; i < childrenArray.length; i++) {
		childCnt = parseInt(childCnt) + parseInt(childrenArray[i]);
	}
	for (var i = 0; i < infantsArray.length; i++) {
		infantCnt = parseInt(infantCnt) + parseInt(infantsArray[i]);
	}
	return [adultCnt, childCnt, infantCnt]
}
function fphgetCityNames(iataCode) {
	_langGlobal.langRender(function () {
		var cityTxt = '';
		var dateTxt = '';
		var hotelDates = '';
		var ad = (cmnGetURLQueryStr('adult') > 1) ? cmnGetURLQueryStr('adult') + ' ' + i18n.t('adult_plural') : cmnGetURLQueryStr('adult') + ' ' + i18n.t('adult');
		var ch = (cmnGetURLQueryStr('child') > 1) ? cmnGetURLQueryStr('child') + ' ' + i18n.t('child_plural') : cmnGetURLQueryStr('child') + ' ' + i18n.t('child');
		var inf = (cmnGetURLQueryStr('infant') > 1) ? cmnGetURLQueryStr('infant') + ' ' + i18n.t('infant_plural') : cmnGetURLQueryStr('infant') + ' ' + i18n.t('infant');

		var checkIn1 = fphService.arNames.weekdaysShort[moment(cmnGetURLQueryStr('checkInDate')).weekday()] + ', ' + moment(cmnGetURLQueryStr('checkInDate')).format('DD') + ' ' + fphService.arNames.months[moment(cmnGetURLQueryStr('checkInDate')).format('M') - 1] + ' ' + moment(cmnGetURLQueryStr('checkInDate')).format('YYYY');
		var chIn = (i18n.options.lng == "en") ? moment(cmnGetURLQueryStr('checkInDate')).format('ddd, DD MMM YYYY') : checkIn1;
		var checkOUT1 = fphService.arNames.weekdaysShort[moment(cmnGetURLQueryStr('checkOutDate')).weekday()] + ', ' + moment(cmnGetURLQueryStr('checkOutDate')).format('DD') + ' ' + fphService.arNames.months[moment(cmnGetURLQueryStr('checkOutDate')).format('M') - 1] + ' ' + moment(cmnGetURLQueryStr('checkOutDate')).format('YYYY');
		var chOut = (i18n.options.lng == "en") ? moment(cmnGetURLQueryStr('checkOutDate')).format('ddd, DD MMM YYYY') : checkOUT1;
		hotelDates += '<elm>' + i18n.t('checkIn') + '</elm>' + ': ' + '<elm>' + chIn + '</elm>' + ' - ' + '<elm>' + i18n.t('checkOut') + '</elm>' + ': ' + '<elm>' + chOut + '</elm>';

		$.post('/fphcityNameByIATACode?iataCode=' + JSON.stringify(iataCode), function (res) {
			fphService.cityNames=[];
			fphService.cityNames.push(res.depCityName[i18n.options.lng]);
			fphService.cityNames.push(res.arrCityName[i18n.options.lng]);
			if (cmnGetURLQueryStr('tripType') == 2) {
				cityTxt += '<elm>' + ((i18n.options.lng == "en") ? fphService.cityNames[0] : unicodeConverter(fphService.cityNames[0])) + '</elm>' + '<i class="flaticon-double99"></i> ' + '<elm>' + ((i18n.options.lng == "en") ? fphService.cityNames[1] : unicodeConverter(fphService.cityNames[1])) + '</elm>';
				var dep1 = fphService.arNames.weekdaysShort[moment(cmnGetURLQueryStr('departureDate')).weekday()] + ', ' + moment(cmnGetURLQueryStr('departureDate')).format('DD') + ' ' + fphService.arNames.months[moment(cmnGetURLQueryStr('departureDate')).format('M') - 1] + ' ' + moment(cmnGetURLQueryStr('departureDate')).format('YYYY');
				var dT1 = (i18n.options.lng == "en") ? moment(cmnGetURLQueryStr('departureDate')).format('ddd, DD MMM YYYY') : dep1;
				var dep2 = fphService.arNames.weekdaysShort[moment(cmnGetURLQueryStr('arrivalDate')).weekday()] + ', ' + moment(cmnGetURLQueryStr('arrivalDate')).format('DD') + ' ' + fphService.arNames.months[moment(cmnGetURLQueryStr('arrivalDate')).format('M') - 1] + ' ' + moment(cmnGetURLQueryStr('arrivalDate')).format('YYYY');
				var dT2 = (i18n.options.lng == "en") ? moment(cmnGetURLQueryStr('arrivalDate')).format('ddd, DD MMM YYYY') : dep2;
				dateTxt += '<elm>' + dT1 + '</elm>' + ' - ' + '<elm>' + dT2 + '</elm>';
			} else if (cmnGetURLQueryStr('tripType') == 1) {
				cityTxt += '<elm>' + ((i18n.options.lng == "en") ? fphService.cityNames[0] : unicodeConverter(fphService.cityNames[0])) + '</elm>' + '<i class="flaticon-thin4"></i> ' + '<elm>' + ((i18n.options.lng == "en") ? fphService.cityNames[1] : unicodeConverter(fphService.cityNames[1])) + '</elm>';
				var dep1 = fphService.arNames.weekdaysShort[moment(cmnGetURLQueryStr('departureDate')).weekday()] + ', ' + moment(cmnGetURLQueryStr('departureDate')).format('DD') + ' ' + fphService.arNames.months[moment(cmnGetURLQueryStr('departureDate')).format('M') - 1] + ' ' + moment(cmnGetURLQueryStr('departureDate')).format('YYYY');
				var dT1 = (i18n.options.lng == "en") ? moment(cmnGetURLQueryStr('departureDate')).format('ddd, DD MMM YYYY') : dep1;
				dateTxt += '<elm>' + dT1 + '</elm>';

			}
			loadCnt = {
				loadCityTxt: cityTxt,
				loadHotelTxt: hotelDates,
				loadStr: dateTxt + ' | ' + ((cmnGetURLQueryStr('adult') > 0) ? ad : '') + ((cmnGetURLQueryStr('child') > 0) ? ', ' + ch : '') + ((cmnGetURLQueryStr('infant') > 0) ? ', ' + inf : '')
			}
			$.loadingPageAnimation('show', 'FPH', loadCnt);
		});
	});
}
/**
 * Random String Generation
 */
function randomString() {
	var text = "";
	var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";

	for (var i = 0; i < 12; i++)
		text += possible.charAt(Math.floor(Math.random() * possible.length));

	return text;
}
function fphResultrender(url) {	
	store.clearAll();
	$('#_bodyContainer').empty();
	$('.bbcFooter').hide();
	fphService.hotDeal = false;
	$('body').removeClass('homePage');
	$('body').addClass('fphResultPage');
	fphService.cityNames = [];
	fphService.iataCodes = [];
	fphService.HSSKEY = "";
	fphService.HOTELNAMESEARCHRESILT = [];
	fphService.fareRuleViewedInfo = {};
	fphService.iataCodes.push(cmnGetURLQueryStr('depCityId'));
	fphService.iataCodes.push(cmnGetURLQueryStr('arrCityId'));
	fphgetCityNames(fphService.iataCodes);

	//$.get("/common/themes/v2/tmpl/fph/fphS2.json",{},function(res){
	$.get(url + "&fphisoView=true", {
		v: Math.random(),
		homeSearch: fphService.homeSearch
	}, function (res) {
			var lang = $('html').attr('data-lang');
			dynamicJsCssLoading('landing' + (lang == "en" ? "" : '-' + lang) + '.css', '/common/themes/v2/css/results' + (lang == "en" ? "" : '-' + lang) + '.css', 'css');
			dynamicJsCssLoading('alHilal' + (lang == "en" ? "" : '-' + lang) + '.css', '/common/themes/v2/css/results' + (lang == "en" ? "" : '-' + lang) + '.css', 'css');
			dynamicJsCssLoading('tistahel' + (lang == "en" ? "" : '-' + lang) + '.css', '/common/themes/v2/css/results' + (lang == "en" ? "" : '-' + lang) + '.css', 'css');
		if (res.status == 'SUCCESS') {
			store.set('H'+res.token,res);
			// Google Analytics Page View trigger.
				/* dataLayer.push({
					  'event':'VirtualPageview',
					  'virtualPageURL':'/fph/search',
					  'virtualPageTitle':'FPH Results'
				}); */
			
			fphService.homeSearch = false;
			fphService.priceSliderFltr = false;
			//for currency change in results page
			fphService.isActive = true;

			inputConsole('REPORTSTATUS=SEARCH_RES-' + res.echoToken)
			fphService.resetFilterswithMS = true;
			
			

			var response = res.data;
			fphService.filterData = response.hotel.searchRS;
			fphService.baseObj = JSON.parse(JSON.stringify(res));
			//fphService.setData(response);
			//flightServiceVar.setData(response.flight);
			//fphService.setcriteria.lat = response.hotel.cityGeoData.lat;
			//fphService.setcriteria.long = response.hotel.cityGeoData.long;
			/*var data = {
			searchRS:response.hotel.searchRS,
			maps:response.hotel.maps,
			landMarkData:response.hotel.landMarkData,
			language:response.hotel.language
			}
			fphService.univData = data;*/

			$.get('/fph/resultStatic', {}, function (template) {
				//$('#_bodyContainer').empty();
				document.getElementById("_bodyContainer").innerHTML = template;
				document.close();
				$.get('/common/themes/v2/tmpl/fph/packageHotelResults.ejs?v=nd-v0102', {}, function (template) {
					fphService.dynamicTemplate = template;
					var tempData = {
						hotels: response.hotel.searchRS,
						token: res.token,
						searchCriteria: response.hotel.searchCriteria
					};
					
					fphService.loadTemplate('fph_desktop_header', response.hotel, $('.modifyBlock'));
					fphService.loadTemplate('fph_desktop_landmarks', response.hotel.landMarkData, $('._landmark'));
					fphService.loadTemplate('fph_desktop_hotelresults', res, $('#list-view'),function(){
					setTimeout(function(){
					ULlessMore(['_accType_filter_template','_area_filter_template','_hotelChain_filter_template']);
					$('#packageCount').text(res.data.hotel.searchRS.length);
					}, 80);
					});
					fphService.loadTemplate('fph_desktop_hotelFilters', {maps:response.hotel.maps, currency:res.currency}, $('.hotel .filters'));
					pricetagConvert.init();
					initPackageFilter(res,true);
					fphService.newInit();
					modifySearchData(response);
					initPredictiveSearchComponent();
					fphService.init();
					fphService.getHotDeal();
					//loadSwapFunction();
/*					$.get('/common/themes/v2/tmpl/fph/packageFlightResults.ejs?v=nd-v0102', {}, function (flightTemplate) {
								fphService.flightTemplate = flightTemplate;
					}); */
					$('.modifySearch, .hotelResultSort, #fphHotelResult, .pkgSelBlock').show();
					

				});
			});
			$.loadingPageAnimation();
		} else {
			if (res.status === "FAIL") {
				var fileToken='REPORTSTATUS=SEARCH_ERROR';
				if(res.blame){
					fileToken=fileToken+'_'+res.blame;
				}				
				inputConsole(fileToken+'-' + res.echoToken);
				$.get('/fph/resultStatic', {}, function (template) {
					//$('#_bodyContainer').empty();
					document.getElementById("_bodyContainer").innerHTML = template;
					document.close();
					$('.resultBlock').hide();
					$.get('/common/themes/v2/tmpl/fph/fphResults.ejs?v='+Math.random(), {}, function (template) {
						fphService.dynamicTemplate = template;
						fphService.loadTemplate('no_results_found', {}, $('._noResultsFound'), template);
						$('._noResultsFound').attr('style', 'display:block');
						fphService.loadTemplate('fph-modify-view', res.data, $('.modifyBlock'), template);
						$('.modifySearch').show();
						modifySearchDataError(res.data);
						initDatePickerComponent();
						initPredictiveSearchComponent();
						//autoFill();
						pricetagConvert.init();
						$.loadingPageAnimation();
						//loadSwapFunction();

					});
				});

			}
		}
	});

}

/**
 * @author nahl
 * @description onclick book now button in results page
 * @param uuid
 * @param uid
 * @return redirect to fph review page
 */
$('body').on('click', '._apxBooknow', function () {
	fphContToReview(JSON.parse($("#contFPHData").val()));
	$(".fphResultContainer").find('._apxBooknow').prop('disabled', true)
	btnLoadingAnimation($(this));
	$(this).text(i18n.t('processingText'));
	var args = {
		echotoken: $(this).attr('data-echotoken'),
		hotelId: $(this).attr('data-hotelId'),
		index: $(this).attr('data-index'),
		outbound: $(this).attr('data-outbound'),
		inbound: $(this).attr('data-inbound'),
		price: $(this).attr('data-price'),
		changeFlight: true
	};
	var token = '';
	if($('._changeFlight') && $('._changeFlight').attr('data_token')){
		token = $('._changeFlight').attr('data_token');
	}	
	$.post('/fph/checkAvailability', args, function (res) {
		if (res.status == "SUCCESS") {
			inputConsole('REPORTSTATUS=CHECKAVAILIBILITY_RES-' + res.echotoken);
			//window.open('/fph/review?pid='+res.productId);
			window.location.href = '/fph/review?pid=' + res.productId;
		 } else if (res.status == "FAIL" && res.hotel == "FAIL") {
			$(".fphLoad").show();
			$(".fphLoad .fInfo, .fphLoad .fcSuccess").fadeOut(function(){
					$(".fphError").html("<div class='fcFail'><svg class='cancelSVG' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 52 52'><circle class='cancel__circle' cx='26' cy='26' r='25' fill='none'/><path class='cancel__check' fill='none' d='M16 18 l 20 18'/><path class='cancel__check' fill='none' d='M16 36 l 20 -18'/></svg></div>"+"<span>"+i18n.t('srythePackNotAvl')+"</span>"+"<br>"+"<a href='"+flightServiceVar.baseObj.selectedHotel.searchUrl+"removeuid="+flightServiceVar.baseObj.selectedHotel.uid+"' class='btn btn-sm _bkBtn'>"+i18n.t('changepackage')+"</a>");
					$(".fphLoad .fphError").show();	
					$(".fphLoad .fcSuccess").hide();
			});
			setTimeout(function(){      
     			window.location.href = flightServiceVar.baseObj.selectedHotel.searchUrl+'removeuid='+flightServiceVar.baseObj.selectedHotel.uid; }, 3500);
				inputConsole('REPORTSTATUS=CHECKAVAILIBILITY_ERROR_HOPLA-' + res.echotoken);
				// growl_alert(i18n.t('selectedpackagenotavailable'));
			//fphService.removePackage(args.hotelId);
		 } else if (res.status == "FAIL" && res.flight == "FAIL") {
		inputConsole('REPORTSTATUS=CHECKAVAILIBILITY_ERROR_GDS-' + res.echotoken);	
		$(".fphLoad").show();
			$(".fphLoad .fInfo, .fphLoad .fcSuccess").fadeOut(function(){
					if($("#fphHotel").is(':visible')){
						var args = {
							token: token
						}
						$.post('/fph/changeFlight', args, function (res) {
							
							loadFlights(res);
							waitForElement('.priceGrid',function(){
								ULTriplessMoreForLegs(['_flight_trip1', '_flight_trip2', '_flight_trip3'], function () {
								setTimeout(function () {
									ULlessMore(['airlineName-filter-list','_stopOverAirport-filter-list','_returnStopOverAirport-filter-list']);
									var target = $('.priceGrid');
									target.each(function () {
										var containerHeight = $(this).parents('.item.primary-item').innerHeight();
										var fphPricePrt = $(this).find('.fphPricePrt').height();
										
										if(containerHeight>350){
											$(this).find('.mobileBooknow').css({
												'padding-top': (containerHeight) / 2 - fphPricePrt+70,
												'height': containerHeight
											});
										} else {
											$(this).find('.mobileBooknow').css({
												'padding-top': 20,
												'height': 360
											});
										}
											
											}); 
									}, 4000);
									});
									
								});
						});		
					}
					$(".fphError").html("<div class='fcFail'><svg class='cancelSVG' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 52 52'><circle class='cancel__circle' cx='26' cy='26' r='25' fill='none'/><path class='cancel__check' fill='none' d='M16 18 l 20 18'/><path class='cancel__check' fill='none' d='M16 36 l 20 -18'/></svg></div>"+"<p>"+i18n.t('srySlctdFltPackNotAvl')+"</p>");
					$(".fphLoad .fphError").show();
					$(".fphLoad .fcSuccess").hide();		
					$('._apxBooknow').removeClass('LoadBtn');
					$('._apxBooknow').text(i18n.t('continue'));
					// growl_alert(i18n.t('selectedflightnotavailable'));
					var html = '<div class="fphfltInfo"><div class="slctflt"><span class="flaticon-black401"></span>'+i18n.t('Selectedyourflight')+'</div></div>';
					$('.slectpkgRevw .fltResults .fphfltInfo').html(html);
					$(".fphSelBar .fltBar").removeClass("selected").find('.content').text(i18n.t('selectflight'));
					$(".fpHotBtn").attr("disabled",'disabled');					
			});
			setTimeout(function(){
				 $('.fphLoad').fadeOut(); 
				 $(".fphLoad .fphError").hide();
				}, 3500);	

		} else {
			$('._apxBooknow').removeClass('LoadBtn');
			$('._apxBooknow').text(i18n.t('bookNow'));
			inputConsole('REPORTSTATUS=CHECKAVAILIBILITY_ERROR-' + res.echotoken);
			growl_alert(i18n.t('selectedpackagenotavailable'));
			$(".fphResultContainer").find('._apxBooknow').prop('disabled', false)
			//fphService.removePackage(args.hotelId);
		}
	});

});

/*$('body').on('click','._apxContinue',function(){
var pid=$(this).attr('data_pid');
$.post('/fph/continuePayment',{pid:pid},function(res){

});
});	*/
/* [[  show hide f+h "my hotel stay is on different dates" panel ]]*/
$('body').on('change', '._searchDifferent', function () {
	var difDatePanel = $('._diffDates');
	if ($(this).is(':checked')) {
		difDatePanel.show();
	} else {
		difDatePanel.hide();
	}
});

$('body').on('change', '.fph #flightsOnewayFH', function () {
	var returnDP = $('.returnDP ');
	var fphCheckin = $('.fphCheckin');
	var diffDates = $('#diffDates');
	if ($(this).is(':checked')) {
		returnDP.hide();
		fphCheckin.show();
		diffDates.hide();
		$('.fphonewayDP').show();
		$('.departDP').hide();
		//alert('in...');
	}
});
$('body').on('change', '.fph #flightsRoundtripFH', function () {
	var returnDP = $('.returnDP ');
	var fphCheckin = $('.fphCheckin');
	var diffDates = $('#diffDates');
	if ($(this).is(':checked')) {
		$('.departDP').show();
		returnDP.show();
		fphCheckin.hide();
		diffDates.show();
		//alert('out');
	}
});

$('body').on('click', '._fphChangeRoom', function () {
	var echotoken = $(this).attr('data-echotoken');
	var uid = $(this).attr('data-uid');
	var pId = $(this).attr('data-pId');	
	if (!fphService.changeRoomFire) {
		var arg = {
			echotoken: echotoken,
			uid: uid,
			pId: pId
		};
		$.post('/fph/changeRoom', arg, function (res) {

			if (res && res.status == 'SUCCESS') {
				fphService.changeRoomFire = true;
				$.get('/common/themes/v2/tmpl/fph/fphResults.ejs?v='+Math.random(), {}, function (template) {
					fphService.dynamicTemplate = template;
					fphService.loadTemplate('changeRoomTmpl', res.data, $('.changeRoomDtls'));
					pricetagConvert.init();
				});

			} else {

				$('.roomWidgetLoader').hide();
				$('.rmbooking-at .alert-danger').show();
			}

		});
	}
});
$('body').on('click', '._selChangeRoom', function () {
	$(".selected").removeClass("selected");
	$(this).parents("._room").addClass("selected");
	$("html, body").animate({scrollTop:0});
	var echotoken = $(this).attr('data-echotoken');
	var uid = $(this).attr('data-uid');
	var pId = $(this).attr('data-pId');
	var roomId = $(this).attr('data-rId');
	var html = '';
	var nonRefundtext = '';
	var tooltip = $('.fphInOutDates .tooltipCustomCont');
	$.post('/fph/roomCancellationPolicy', {
		echotoken: echotoken,
		uid: uid,
		pId: pId,
		roomId: roomId,
		roomPrice:$(this).attr('data-p')
	}, function (res) {
		if (res && res.data) {
			var lfc = res.data.lfc;
			if (typeof lfc !== "undefined" && lfc.d !== null) {
				var lfcDate = lfc.ud;//lfc.d + " " + lfc.hou + ":" + lfc.min;
				html += i18n.t("freeCancelPolicyCondition") + ' <strong>' + lfcDate + '</strong>';

			}

			if (typeof res.data.nrf !== "undefined" && res.data.nrf !== null) {
				html += i18n.t("thisNonrefundable");
				nonRefundtext += i18n.t("nonRefundable");
			} else {
				var cp = res.data.cp;
				for (var i in cp) {
					var startDate = cp[i].ps.ud;//cp[i].ps.d + ' ' + cp[i].ps.hou + ':' + cp[i].ps.min;
					var endDate = cp[i].pe.ud;//cp[i].pe.d + ' ' + cp[i].pe.hou + ':' + cp[i].pe.min;
					if (cp[i].crg.ty === "Percentage") {
						html += '<span class="clearAfter"></span><em>' + cp[i].crg.val + '%</em>  ' + i18n.t("cancellationOfTheBookingAmount");
					} else {

						if (cp[i].crg.val > 1) {
							html += cp[i].crg.val + i18n.t("cancellationNightsPrice");
						} else {
							html += cp[i].crg.val + i18n.t("cancellationNightPrice");
						}

					}
					html += ' ' + i18n.t("cancellationFrom") + ' <strong>' + startDate + '</strong>  ' + i18n.t("cancellationTo") + ' <strong>' + endDate + '</strong>';
				}
			}
			tooltip.empty().append(html);
			$('._sumCanc').empty().append(html);
		} else {
			html += i18n.t("cancelPolicyError");
			tooltip.empty().append(html);
			$('._sumCanc').empty().append(html);

		}
		if(res.earnPoints){
			$('._loyalty').find('strong').text(res.earnPoints);
		}

	});

	$('#_roomName').text($(this).parents('._room').find('._rn').text());
	$('#_mealName').text($(this).parents('._room').find('._mn').text());
	var roomName = $(this).parents('._room').find('._rn').attr("data_roomname");
	$(".roomFare").find("strong").each(function(){
		var roomsStr = $(this).text().substring(0,8);
		$(this).text(roomsStr+roomName);	
	})
	var payArr = $('#paymeBtn').val().split(' ');

	var dataP = parseFloat($(this).parents('._room').find('._rmPrice').attr('data-p')).toFixed(2);
	var dataW = parseFloat($(this).parents('._room').find('._rmPrice').attr('data-wdp')).toFixed(2);
	var dataD = parseFloat($(this).parents('._room').find('._rmPrice').attr('data-disc')).toFixed(2);
	$('._room').each(function (k, v) {
		var $priceElm = $(v).find('._rmPrice');
		var $rmPrice = parseFloat($priceElm.attr('data-p')).toFixed(2);
		var disPrice = parseFloat($rmPrice - dataP).toFixed(2);
		var sign = (disPrice >= 0) ? '+' : '-';
		$(v).find('._sign').text(sign);
		$(v).find('._rmPrice').text(Math.abs(disPrice));

	});	
	//update package price
	var packStrikeP = parseFloat($('._tPackage').attr('data-wdp')).toFixed(2);
	var hotelStrikeP = parseFloat($('._tPackage').attr('data-hStk')).toFixed(2);
	var dispPackage = (parseFloat(packStrikeP - hotelStrikeP) + parseFloat(dataW)).toFixed(2);
	$('._tPackage').text(dispPackage);
	//update total price
	var packTotalPrice = parseFloat($('._tFair').attr('data-p')).toFixed(2);
	var hotelPrice = parseFloat($('._tFair').attr('data-hPrice')).toFixed(2);
	var dispTotalPrice = (parseFloat(packTotalPrice - hotelPrice) + parseFloat(dataP)).toFixed(2);
	$('._tFair').text(dispTotalPrice);
	$('._tFair').attr('data-p',dispTotalPrice);
	$('._tFair').attr('data-upPrice',dispTotalPrice);
	$('._tFair').attr('data-hPrice',dataP);
	if (lang == "ar") {
		payArr[1] = dispTotalPrice;
	} else {
		payArr[2] = dispTotalPrice;
	}
	$('#paymeBtn').val(payArr[0] + ' ' + payArr[1] + ' ' + payArr[2]);
	//update saving
	var packSave = parseFloat($('._tSave').attr('data-save')).toFixed(2);
	var hotelDisc = parseFloat($('._tSave').attr('data-hDisc')).toFixed(2);
	var dispSaving = (parseFloat(packSave - hotelDisc) + parseFloat(dataD)).toFixed(2);
	$('._tSave').text(dispSaving);
	$('._roomChanged').val(true);
	$('._roomId').val(roomId);
	pricetagConvert.init();
});

$('body').on('change', '._fphTxtOnwardExtraBaggage,._fphTxtReturnExtraBaggage', function () {
	if (!baggageSec.totalFareOrg) {
		baggageSec.totalFareOrg = $('._tFair').attr('data-p');
		baggageSec.userCurr = $('._tFair').attr('data-curr');
	}
	var netPrice = parseFloat(baggageSec.totalFareOrg);

	baggageSec.onwardBag = {};
	baggageSec.returnBag = {};

	$('._fphTxtOnwardExtraBaggage').each(function () {
		var baggageType = $(this).find(":selected").attr('data-bagType');
		var baggageFee = $(this).find(":selected").attr('data-fee');
		if (baggageFee) {
			if (baggageSec.onwardBag[baggageType]) {

				baggageSec.onwardBag[baggageType].qty += 1;
			} else {

				var baggage = {};

				baggage.fee = baggageFee;
				baggage.type = baggageType;
				baggage.qty = 1;
				baggage.uc = baggageSec.userCurr;

				baggageSec.onwardBag[baggage.type] = baggage;

			}
			netPrice = netPrice + parseFloat(baggageFee);

		}
	});
	$('._fphTxtReturnExtraBaggage').each(function () {
		var baggageType = $(this).find(":selected").attr('data-bagType');
		var baggageFee = $(this).find(":selected").attr('data-fee');
		if (baggageFee) {
			if (baggageSec.returnBag[baggageType]) {

				baggageSec.returnBag[baggageType].qty += 1;
			} else {

				var baggage = {};

				baggage.fee = baggageFee;
				baggage.type = baggageType;
				baggage.qty = 1;
				baggage.uc = baggageSec.userCurr;

				baggageSec.returnBag[baggage.type] = baggage;

			}
			netPrice = netPrice + parseFloat(baggageFee);

		}
	});	
	$.get('/common/themes/v2/tmpl/fph/fphResults.ejs?v='+Math.random(), {}, function (template) {
		fphService.dynamicTemplate = template;
		fphService.loadTemplate('fph_baggage_selected_template', baggageSec.onwardBag, $('#fphOnwardBaggageSec'));
		fphService.loadTemplate('fph_baggage_selected_template', baggageSec.returnBag, $('#fphReturnBaggageSec'));
		pricetagConvert.init();

	});

	var totalPriceStr = ' <strong>' + netPrice.toFixed(2) + '</strong> ';

	//$('#baggageSec').html(baggStr);
	$('._tFair').html(totalPriceStr);
	$('#baggageSec').show();
	baggageSec.updatedPrice = netPrice.toFixed(2);
	var payArr = $('#paymeBtn').val().split(' ');
	if (lang == "ar") {
		payArr[1] = netPrice.toFixed(2);
	} else {
		payArr[2] = netPrice.toFixed(2);
	}
	$('#paymeBtn').val(payArr[0] + ' ' + payArr[1] + ' ' + payArr[2]);
});

$('body').on('click', '._saveChangesFPH', function () {
	var condition = true;
	$('._traDetValidator').each(function (e) {
		var $this = $(this);
		if ($this.hasClass('_fnameEdit') && condition == true) {
			if ($this.val() == "") {
				return condition = cmnTrvlrVal($this, i18n.t("errFirstName"));
			} else if (_Aval($this.val())) {
				return condition = cmnTrvlrVal($this, i18n.t("namesinenglish"));
			} else if ((!_fnval($this.val())) || ($this.val().length <= 2)) {
				return condition = cmnTrvlrVal($this, i18n.t("validfirstname"));
			} else {
				var firstNam = $this.val();
				var splChar = "-";
				var firstName = firstNam.replace(/ +/g, "");
				if (firstName.length <= 0) {
					return condition = cmnTrvlrVal($this, i18n.t("validfirstname"));
				}
				for (var i = 0; i < firstName.length; i++) {
					if ((firstName[0] == "-" || firstName[firstName.length - 1] == "-") || (typeof firstName[i] !== "undefined") && (typeof firstName[i + 1] !== "undefined") && ((splChar == firstName[i]) && (splChar == firstName[i + 1]))) {
						return condition = cmnTrvlrVal($this, i18n.t("validfirstname"));
					}
				}
			}
		}
		if ($this.hasClass('_mnameEdit') && condition == true) {
			var message = $this.attr('data-err');
			if (($this.val() != "") && ($this.length > 0)) {
				if (_Aval($this.val())) {
					return condition = cmnTrvlrVal($this, message);
				} else if (!_mnval($this.val())) {
					return condition = cmnTrvlrVal($this, i18n.t("pleaseEntervalidMiddleName"));
				}
				var splChar = "-";
				var middleName = $this.val().replace(/ +/g, "");
				for (var i = 0; i < middleName.length; i++) {
					if ((middleName[0] == "-" || middleName[middleName.length - 1] == "-") || (typeof middleName[i] !== "undefined") && (typeof middleName[i + 1] !== "undefined") && ((splChar == middleName[i]) && (splChar == middleName[i + 1]))) {
						return condition = cmnTrvlrVal($this, i18n.t("pleaseEntervalidMiddleName"));
					}
				}
			}
		}
		if ($this.hasClass('_lnameEdit') && condition == true) {
			var message = $this.attr('data-err');
			if ($this.val() == "") {
				return condition = cmnTrvlrVal($this, i18n.t("errLastName"));
			} else if (_Aval($this.val())) {
				return condition = cmnTrvlrVal($this, i18n.t("validlastname"));
			} else if ((!_lnval($this.val())) || ($this.val().length <= 1)) {
				return condition = cmnTrvlrVal($this, i18n.t("validlastname"));
			} else {
				var lastNam = $this.val();
				var splChar = "-";
				var lastName = lastNam.replace(/ +/g, "");
				if (lastName.length <= 0) {
					return condition = cmnTrvlrVal($this, i18n.t("validlastname"));
				}
				for (var i = 0; i < lastName.length; i++) {
					if ((lastName[0] == "-" || lastName[lastName.length - 1] == "-") || (typeof lastName[i] !== "undefined") && (typeof lastName[i + 1] !== "undefined") && ((splChar == lastName[i]) && (splChar == lastName[i + 1]))) {
						return condition = cmnTrvlrVal($this, i18n.t("validlastname"));
					}
				}
			}
		}
	});
	if (condition == true) {
		$('.alert_custom').hide();
		var pid = $('#FPHTDP').attr('data-pid');
		var fName = $('._fnameEdit');
		var lName = $('._lnameEdit');
		var mName = $('._mnameEdit');
		var id = $('._idEdit');
		var data = {
			fName: $.trim(((fName.val()).replace(/-/g, "")).replace(/\s\s+/g, ' ')) || '',
			lName: $.trim(((lName.val()).replace(/-/g, "")).replace(/\s\s+/g, ' ')) || '',
			mName: $.trim(((mName.val()).replace(/-/g, "")).replace(/\s\s+/g, ' ')) || '',
			id: id.val() || '',
			pid: pid,
			product: 'FPH',
		}
		$.post('/save/travellerdetails', data, function (res) {
			var pocket = res;
			$('.modal').modal('hide');
			$(".modal-backdrop").toggleClass("modal-backdrop fade out");
			$('body').css('padding', 0);
			setTimeout(function () {
				$.get('/common/themes/v2/tmpl/fph/fphResults.ejs?v='+Math.random(), {}, function (template) {
					fphService.dynamicTemplate = template;
					fphService.loadTemplate('fph-review-terms', pocket, $('.review-terms-fph'));
				});
			}, 200);
		});
	}
});
$('body').on('click', '._fphContinue', function () {
	var condition = true;
	var qitafElm = $('.redeemPoints');
	var paymentElm = $('.payment');
	$('._traDetValidator').each(function (e) {

		var $this = $(this);
		if ($this.hasClass('_txtTitle') && condition == true) {
			if ($this.val() == "") {
				return condition = cmnTrvlrVal($this, i18n.t("pleaseProvideTitle"));
			}
			$this.removeClass('error');
		}
		if (($this.hasClass('_txtFName')) && condition == true) {
			if ($this.val() == "") {
				return condition = cmnTrvlrVal($this, i18n.t("errFirstName"));
			} else if (_Aval($this.val())) {
				return condition = cmnTrvlrVal($this, i18n.t("namesinenglish"));
			} else if ((!_fnval($this.val())) || ($this.val().length <= 2)) {
				return condition = cmnTrvlrVal($this, i18n.t("validfirstname"));
			} else {
				var firstNam = $this.val();
				var splChar = "-";
				var firstName = firstNam.replace(/ +/g, "");
				if (firstName.length <= 0) {
					return condition = cmnTrvlrVal($this, i18n.t("validfirstname"));
				}
				for (var i = 0; i < firstName.length; i++) {
					if ((firstName[0] == "-" || firstName[firstName.length - 1] == "-") || (typeof firstName[i] !== "undefined") && (typeof firstName[i + 1] !== "undefined") && ((splChar == firstName[i]) && (splChar == firstName[i + 1]))) {
						return condition = cmnTrvlrVal($this, i18n.t("validfirstname"));
					}
				}
			}
		}
		if (($this.hasClass('_txtMName')) && condition == true) {
			var message = $this.attr('data-err');
			if (($this.val() != "") && ($this.length > 0)) {
				if (_Aval($this.val())) {
					return condition = cmnTrvlrVal($this, message);
				} else if (!_mnval($this.val())) {
					return condition = cmnTrvlrVal($this, i18n.t("pleaseEntervalidMiddleName"));
				}
				var splChar = "-";
				var middleName = $this.val().replace(/ +/g, "");
				for (var i = 0; i < middleName.length; i++) {
					if ((middleName[0] == "-" || middleName[middleName.length - 1] == "-") || (typeof middleName[i] !== "undefined") && (typeof middleName[i + 1] !== "undefined") && ((splChar == middleName[i]) && (splChar == middleName[i + 1]))) {
						return condition = cmnTrvlrVal($this, i18n.t("pleaseEntervalidMiddleName"));
					}
				}
			}
		}
		if (($this.hasClass('_txtLName')) && condition == true) {
			if ($this.val() == "") {
				return condition = cmnTrvlrVal($this, i18n.t("errLastName"));
			} else if (_Aval($this.val())) {
				return condition = cmnTrvlrVal($this, i18n.t("validlastname"));
			} else if ((!_lnval($this.val())) || ($this.val().length <= 1)) {
				return condition = cmnTrvlrVal($this, i18n.t("validlastname"));
			} else {
				var lastNam = $this.val();
				var splChar = "-";
				var lastName = lastNam.replace(/ +/g, "");
				if (lastName.length <= 0) {
					return condition = cmnTrvlrVal($this, i18n.t("validlastname"));
				}
				for (var i = 0; i < lastName.length; i++) {
					if ((lastName[0] == "-" || lastName[lastName.length - 1] == "-") || (typeof lastName[i] !== "undefined") && (typeof lastName[i + 1] !== "undefined") && ((splChar == lastName[i]) && (splChar == lastName[i + 1]))) {
						return condition = cmnTrvlrVal($this, i18n.t("validlastname"));
					}
				}
			}
		}
		if ($this.hasClass('_dob') && condition == true) {
			var dobDate = $this.find('.birthDay').val();
			var message = $this.attr('data-err');
			if (dobDate == "" || $this.find('.birthDate').prop('selectedIndex')==0 || $this.find('.birthMonth').prop('selectedIndex')==0 || $this.find('.birthYear').prop('selectedIndex')==0) {
				return condition = cmnTrvlrVal($this, i18n.t("errDob"));
			} else if (dobDate != "") {
				var paxType = $this.parents('.travlrDetails').attr('data-group');
				if (paxType == 'Adult') {
					var dobDate = moment(dobDate, "YYYY-MM-DD");
					var maxDate = moment(moment().subtract(12, 'years').calendar(), "MM/DD/YYYY h:mm:ss");
					var days = parseInt(moment(dobDate).diff(moment(maxDate), 'days'));
					if (days > 0) {
						return condition = cmnTrvlrVal($this, i18n.t("validdob"));
					}
				} else if (paxType == 'Infant') {
					var dobDate = moment(dobDate, "YYYY-MM-DD");
					var maxDate = moment().format("MM/DD/YYYY");
					var days = parseInt(moment(dobDate).diff(moment(maxDate), 'days'));
					if (days > 0) {
						return condition = cmnTrvlrVal($this, i18n.t("validdob"));
					}
				} else if (paxType == 'Child') {
					var dobDate = moment(dobDate, "YYYY-MM-DD");
					var maxDate = moment(moment().subtract(2, 'years').calendar(), "MM/DD/YYYY h:mm:ss");
					var days = parseInt(moment(dobDate).diff(moment(maxDate), 'days'));
					if (days > 0) {
						return condition = cmnTrvlrVal($this, i18n.t("validdob"));
					}
				}
			}
			$this.removeClass('error');
		}
		if ($this.hasClass('_phoneNumber') && condition == true) {
			var len = $this.val().length;
			if ($this.val() == "") {
				return condition = cmnTrvlrVal($this, i18n.t("errMobNum"));
			} else if (($this.val() != "" && len <= 7) || (!_Nonly($this.val()))) {
				return condition = cmnTrvlrVal($this, i18n.t("validmobile"));
			}
		}
		if ($this.hasClass('_emailAddress') && condition == true) {
			if ($this.val() == '') {
				return condition = cmnTrvlrVal($this, i18n.t("enteruremail"));
			} else if (!_evl($this.val())) {
				return condition = cmnTrvlrVal($this, i18n.t("errEmaiAdd"));
			}
		}
		if ($this.hasClass('_passportId') && condition == true && ($this.is(':visible'))) {
			if ($this.val() == "" || $this.val().length < 3 || (!_passportVal($this.val()))) {
				return condition = cmnTrvlrVal($this, i18n.t("errPassportNumber"));
			}
		}
		if ($this.hasClass('_nationalId') && condition == true && ($this.is(':visible'))) {
			if ($this.val() == "" || $this.val().length < 3 || (!_natnVal($this.val()))) {
				return condition = cmnTrvlrVal($this, i18n.t("pleaseEnterAValidNationalId"));
			}
		}
		if ($this.hasClass('_iqamaId') && condition == true && ($this.is(':visible'))) {
			if ($this.val() == "" || $this.val().length < 10 || (!_natnVal($this.val()))) {
				return condition = cmnTrvlrVal($this, i18n.t("pleaseEnterAValidIqamaId"));
			} else {
				$this.removeClass('error');
			}
		}
		if ($this.hasClass('_nationality') && condition == true && ($this.parents('.custom-select-v3').is(':visible'))) {
			if ($this.val() == "") {
				return condition = cmnTrvlrVal($this, i18n.t("errNationality"));
			} else {
				$this.parents('.cSel').removeClass('error');
			}
		}
		if ($this.hasClass('_issuingCountry') && condition == true && ($this.parents('.custom-select-v3').is(':visible'))) {
			if ($this.val() == "") {
				return condition = cmnTrvlrVal($this, i18n.t("selectissuedCountry"));
			} else {
				$this.parents('.cSel').removeClass('error');
			}
		}
		if ($this.hasClass('_passportExpiryDate') && condition == true && ($this.is(':visible'))) {
			var peDate = $this.find('.birthDay').val();
			var message = $this.attr('data-err');
			if (peDate == "") {
				return condition = cmnTrvlrVal($this, i18n.t("errPassportExpDate"));
			} else {
				var travelDate = $('#lastDepDate').val();
				if (travelDate != "") {
					var tDate = new Date(travelDate);
					var eDate = new Date(peDate);
					var timeDiff = Math.abs(eDate.getTime()) - Math.abs(tDate.getTime());
					var daysDiff = Math.ceil(timeDiff / (1000 * 3600 * 24));
					if (daysDiff < 180) {
						return condition = cmnTrvlrVal($this, i18n.t("passportValidPeriod"));
					}
				}
			}

			$this.removeClass('error');
		}
		if ($this.hasClass('_passportIssuedDate') && condition == true && ($this.is(':visible'))) {
			var peDate = $this.find('.birthDay').val();
			
			var message = $this.attr('data-err');
			var dob = moment($(this).parents('._userInfo').find('._dob .birthDay').val(), 'MM/DD/YYYY');
			
			var pid = moment(peDate, 'MM/DD/YYYY');
			if (peDate == "") {
				return condition = cmnTrvlrVal($this, message);
			} else if (pid._i <= dob._i) {
				return condition = cmnTrvlrVal($this, i18n.t("issueDateShouldBeGreaterThanDOB"));
			} else if (pid._i > moment().format('YYYY-MM-DD')) {
				return condition = cmnTrvlrVal($this, i18n.t("issueDateExceedsTodaysate"));
			}
			$this.removeClass('error');
		}
		if ($this.hasClass('_engCalIqamaExpDate') && condition == true && ($this.is(':visible'))) {
			var peDate = $this.find('.birthDay').val();
			var message = $this.attr('data-err');
			if (peDate == "") {
				return condition = cmnTrvlrVal($this, i18n.t("pleaseProvideAValidIqamaIdExpiryDate"));
			}

			$this.removeClass('error');
		}
		if ($this.hasClass('_hijriCalIqamaExpDate') && condition == true && ($this.is(':visible'))) {
			var peDate = $this.find('.hijriDay').val();
			var message = $this.attr('data-err');
			if (peDate == "") {
				return condition = cmnTrvlrVal($this, i18n.t("pleaseProvideAValidIqamaIdExpiryDate"));
			}

			$this.removeClass('error');
		}
		if (validateDuplicateNames() === false) {
			growl_alert(i18n.t("errduplicatenames"));
			condition = false;

			return false;
		}
		// Duplicate Passport number validation
		if ($this.hasClass('_passportId') && condition == true && ($this.is(':visible'))) {
			if (validateDuplicatePassportNamesReview(true) === false) {
				growl_alert(i18n.t("duplicateNumsNotAllow"));
				condition = false;
				return false;
			}
		} else if ($this.hasClass('_nationality') && condition == true && ($this.is(':visible'))) {
			if (validateDuplicatePassportNamesReview(false) === false) {
				growl_alert(i18n.t("duplicateNationalIdNotAllow"));
				condition = false;
				return false;
			}
		}

	});
	if (condition == true) {
		$('.alert_custom').hide();

		//$.loadingPageAnimation('show');
		btnLoadingAnimation($('._fphContinue'));
		$('._fphContinue').attr("disabled", "disabled");
		$('._fphContinue').val(i18n.t('processingTxt'));
		var $target = $('.inputGrp');
		var paxInfoData = {};
		var count = 0;
		var paxNumber = 1;
		var productId = $(this).attr('data_pid');
		var echotoken = $(this).attr('data_echotoken');

		$target.each(function () {
			var userObj = {};
			/*			telephoneDetails.areaCityCode=$('#phoneCountryCode').val();
			telephoneDetails.countryName=$('#phoneCountryName').val();
			telephoneDetails.phoneNumber=$('._txtPhone').val();*/
			var $userInfo = $(this).find('._userInfo');
			//	var $userDateInfo = $(this).find('._userDateInfo');
			var $userPassportInfo = $(this).find('._userPassportInfo');
			var $leadInfo = $(this).find('._leadInfo');
			var $fName = $userInfo.find('._txtFName');
			var $mName = $userInfo.find('._txtMName');
			var $lName = $userInfo.find('._txtLName');
			var $title = $userInfo.find('._txtTitle');
			var $dob = $(this).find("input[name='dob" + paxNumber + "_birthDay']");
			var $passportExp;
			var $passportIssueDate;
			var $passportNum;
			var $nationality;
			var $passportIssuedNation;
			if ($userPassportInfo.find('.passportInfoBody').is(':visible')) {
				$passportNum = $userPassportInfo.find('.passportInfoBody').find('._txtPNum');
				$nationality = $userPassportInfo.find('.passportInfoBody').find('._nationality');
				$passportIssuedNation = $userPassportInfo.find('.passportInfoBody').find('._issuingCountry');
				$passportExp = $(this).find("input[name='pExp" + paxNumber + "_birthDay']").val();
				$passportIssueDate = $(this).find("input[name='pIss" + paxNumber + "_birthDay']").val();
			} else if ($userPassportInfo.find('.iqamaBody').is(':visible')) {
				$passportNum = $userPassportInfo.find('.iqamaBody').find('._txtINum');
				$nationality = $userPassportInfo.find('.iqamaBody').find('._nationality');
				$passportIssuedNation = $userPassportInfo.find('.iqamaBody').find('._issuingCountry');

				if ($userPassportInfo.find('.iqamaBody').find('._hijriCal').is(':checked')) {
					$passportExp = moment($(this).find("input[name='pExp" + paxNumber + "_hijriDay']").val()).format('YYYY-MM-DD');
				} else {
					$passportExp = $(this).find("input[name='pExp" + paxNumber + "_iqamaDay']").val();
				}

				$passportIssueDate = '2016-08-25';
			} else {
				$passportNum = $userPassportInfo.find('.nationalidBody').find('._txtNNum');
				$nationality = $userPassportInfo.find('.nationalidBody').find('._nationality');
				$passportIssuedNation = $userPassportInfo.find('.nationalidBody').find('._issuingCountry');
				$passportExp = '2020-08-25';
				$passportIssueDate = '2016-08-25';
			}			
			//var $passportIssueDate = $(this).find("input[name='pIssue"+paxNumber+"_birthDay']");
			var findGrp = $(this).attr('data-group');
			var $emailAddress = $leadInfo.find('._txtEmail');
			var $phone = $leadInfo.find('._txtPhone');
			var $mealPref = $(this).find('._txtMealPref')
				var $seatPref = $(this).find('._txtSeatPref')
				var $extraPref = $(this).find('._txtextraPref')
				var $onwardExtraBaggage = $(this).find('._txtOnwardExtraBaggage')
				var $returnExtraBaggage = $(this).find('._txtReturnExtraBaggage')
				var $ffpID = $(this).find('._txtFfpID')
				var $freqNumber = $(this).find('._freqNo');
				var $docTypeSelected = '0';
			if ($(this).find('._documentType:checked').attr('data-doctype') == 'passport') {
				$docTypeSelected = '2';
			} else if ($(this).find('._documentType:checked').attr('data-doctype') == 'nationalId') {
				$docTypeSelected = '3';
			} else if ($(this).find('._documentType:checked').attr('data-doctype') == 'iqamaId') {
				$docTypeSelected = '4';
			}

			paxInfoData[count] = {};
			paxInfoData[count].Document = {};
			paxInfoData[count].BaggageOptions = {};
			var gender = 'Male';
			if ('Mrs' == $title.val()) {
				gender = 'Female'
			}
			if ('Miss' == $title.val()) {
				gender = 'Female'
			}

			if (typeof $leadInfo != "undefined" && $leadInfo.length > 0) {
				paxInfoData.contactinfo = {};
				paxInfoData.contactinfo.email = $emailAddress.val();
				paxInfoData.contactinfo.mobile = $phone.val();
				paxInfoData.contactinfo.countryCode = $('#phoneCountryCode').val();
				/*				paxInfoData.contactinfo.leadPaxNationality = $("._fphPaxNationality").val();
				paxInfoData.contactinfo.leadPaxCountry = $("._fphPaxCountry").val();
				 */
				paxInfoData.contactinfo.leadPaxNationality = "Saudi Arabia";
				paxInfoData.contactinfo.leadPaxCountry = "Saudi Arabia";

			}

			switch (findGrp) {
			case 'Adult':
				paxInfoData[count].PaxType = 'ADT';
				break;
			case 'Child':
				paxInfoData[count].PaxType = 'CHD';
				break;
			case 'Infant':
				paxInfoData[count].PaxType = 'INF';

				break;
			default:
				paxInfoData[count].PaxType = 'ADT';
			}
			paxInfoData[count].Title = $title.val();
			paxInfoData[count].GivenName = $.trim((($fName.val()).replace(/-/g, "")).replace(/\s\s+/g, ' '));
			if ($mName.val()) {
				paxInfoData[count].MiddleName = $.trim((($mName.val()).replace(/-/g, "")).replace(/\s\s+/g, ' '));
			}

			paxInfoData[count].Surname = $.trim((($lName.val()).replace(/-/g, "")).replace(/\s\s+/g, ' '));

			paxInfoData[count].Assistance = $extraPref.val() || '';
			paxInfoData[count].SeatType = $seatPref.val() || '';
			paxInfoData[count].MealType = $mealPref.val() || '';
			paxInfoData[count].BaggageOptions.onWard = $onwardExtraBaggage.val() || '';
			paxInfoData[count].BaggageOptions.backWard = $returnExtraBaggage.val() || '';
			paxInfoData[count].Document.ExpireDate = $passportExp || '';
			paxInfoData[count].Document.EffectiveDate = $passportIssueDate || '';
			paxInfoData[count].Document.DocID = $passportNum.val();
			paxInfoData[count].FFP=$freqNumber.val();
			if (typeof $dob.val() == 'undefined') {
				paxInfoData[count].Document = '';
			} else {
				paxInfoData[count].Document.BirthDate = $dob.val() || '';
				paxInfoData[count].Document.BirthPlace = $nationality.val() || '';
				if ($(this).find('._documentType:checked').attr('data-doctype') == 'iqamaId') {
					paxInfoData[count].Document.DocIssueLocation = $nationality.val() || '';
				} else {
					paxInfoData[count].Document.DocIssueLocation = $passportIssuedNation.val() || '';
				}
				paxInfoData[count].Document.DocIssueAuthority = $passportIssuedNation.val() || '';
				paxInfoData[count].Document.Gender = gender;
				paxInfoData[count].Document.DocType = $docTypeSelected;
			}
			count++;
			paxNumber++;

		});
		paxInfoData.selectedSeats = selectedSeats;
		if (!paxInfoData.contactinfo.leadPaxNationality) {
			paxInfoData.contactinfo.leadPaxNationality = paxInfoData[0].Document.DocIssueLocation;
			paxInfoData.contactinfo.leadPaxCountry = paxInfoData[0].Document.DocIssueLocation;
		}
		var roomChanged = false;
		var roomId = '';
		if ($('._roomChanged').val() == 'true') {
			roomChanged = true;
			roomId = $('._roomId').val();
		}
		var args = {
			productId: productId,
			echotoken: echotoken,
			paxInfo: paxInfoData,
			roomChanged: roomChanged,
			roomId: roomId,
			price: $('._tFair').attr('data-p'),
			tktId: $("#alhilalticketid").val(),
			tktCode: $("#alhilaltktCode").val(),
			numoftickets: $("#numoftickets").val()
		};

		var sadad = $('.panel-heading._sadad');
		var payfort=$('.panel-heading._payfort');
		var checkout=$('.panel-heading._checkout');
		var installment = $('.panel-heading._installments');
		var payAtStore = $('.panel-heading._payAtStore');
		var checkout = $('.panel-heading._checkout');
		var showCheckOut = '';

		$.post('/fph/continuePayment', args, function (res) {
			if (res.status == 'SUCCESS') {
				inputConsole('REPORTSTATUS=PREBOOKING_RES-' + res.echotoken);
				var pocket = res.pocket;
				if(pocket.price.uc!="SAR" && pocket.price.uc!="USD" && pocket.domain.domainName.en=='Global'){
					$('._sarAmt').text(pocket.sarPrice.updatedPrice);
				}else if(pocket.price.uc!="EGP" && pocket.domain.domainName.en!='Global'){
					$('._egpAmt').text(pocket.egpPrice.updatedPrice);
				}
				$('._travellerForm').hide();
				$('._fphContinue').hide();
				$('.changeRoomDtls').hide();
				$('._fphChangeRoom').hide();
				$('#travellerDetailsStep').addClass('done');
				$('#paymentStep').addClass('active');
				if (pocket.priceChange) {
					$('._tPackage').text(pocket.price.wdp);
					$('._tFair').text(pocket.price.p);
					$('._tSave').text(pocket.price.disc);
					//update pay button
					var payArr = $('#paymeBtn').val().split(' ');
					if (lang == "ar") {
						payArr[1] = pocket.price.p;
					} else {
						payArr[2] = pocket.price.p;
					}
					$('#paymeBtn').val(payArr[0] + ' ' + payArr[1] + ' ' + payArr[2]);
					$.get('/common/themes/v2/tmpl/fph/fphResults.ejs?v='+Math.random(), {}, function (template) {
						fphService.dynamicTemplate = template;
						fphService.loadTemplate('price-changed-modal', pocket, $('._priceChangeModal'));
						$('#_priceChangedModel').modal('show');
						pricetagConvert.init();
					});

				}

				$.get('/common/themes/v2/tmpl/fph/fphResults.ejs?v='+Math.random(), {}, function (template) {
					fphService.dynamicTemplate = template;
					fphService.loadTemplate('fph-review-terms', pocket, $('.review-terms-fph'));
					fphService.loadTemplate('redeem-points', {responseData:pocket}, $('#redeem-points'));
					fphService.loadTemplate('payment',{responseData:pocket},$('#payment'));
					fphService.loadTemplate('myWallet',{responseData:pocket},$('#myWallet'));
					pricetagConvert.init();
					cardYear();
				
				resTabPanel();
				initPaymentPanel();
				hideMore();
				saveCardInfo();
				
				$('.alHilalMtkt').hide();
				$('._fphPayButton').show();
				offerWidgetFlyin.init();

				if(pocket.paymentObj.showPayfort){
				$.get('/payment/generateShasign', {
					pid: productId
				}, function (shaResposne) {					
					$('._payfort').find('#signature').val(shaResposne.shaSign);
					$('._payfort').find('#service_command').val(shaResposne.service_command);
					$('._payfort').find('#merchant_identifier').val(shaResposne.merchant_identifier);
					$('._payfort').find('#access_code').val(shaResposne.access_code);
					$('._payfort').find('#merchant_reference').val(shaResposne.merchant_reference);
					$('._payfort').find('#language').val(shaResposne.language);
					$('._payfort').find('#return_url').val(shaResposne.return_url);
					$('._payfort').find('#paymentForm').attr('action', shaResposne.action_url);
				});
				}
				else if(pocket.paymentObj.showCheckout){						
					loadCheckoutKit(pocket.paymentObj);
				}
				var configuration = {
					        mobileElm: 'QITAF_MOBILE_NO',
					        genOtpBtn: 'QITAF_GRNOTP_BTN',
					        pid: 'FPHTDP',
					        product: 'FPHTDP',
					        amount: 'QITAF_AMOUNT_TO_BE_REDEEM',
					        pin: 'QITAF_PIN_NO',
					        redeemPointBtn: 'QITAF_REDEEM_POINT_BTN',
					        reGenerateOTP: 'QITAF_RE_GENERATE_OTP_BTN',
					        earnGenOtpBtn: 'QITAF_EARN_GRNOTP_BTN',
					        earnMobileNum: 'QITAF_EARN_MOBILE_NO',
					        earnMessage: 'earnMessage',
					        optForm: 'optForm',
					        optPhone: 'optPhone',
					        optEPhone: 'optEPhone',
					        messageContainer: 'errorMessage',
					        redeemContainer: 'redeemMessage',
					        successClass: 'validate_success_message',
					        errorClass: 'validate_error_message',
				};
				QitafService.init(configuration);

				});
				/*paymentElm.show();
				qitafElm.show();
				$('._ltyInfo').attr('data-bid',res.pocket.paymentObj.flyinCode);
				setTimeout(function () {
					if (!$('.redeemPoints ul li').is(':visible')) {
						qitafElm.hide();
					}
				}, 200);
				reedemPointsVisible();
				var offsetPopTop;
				if (pocket.paymentObj.showQitaf) {
					$('.qiTab').show();
					// qitafElm.slideDown();
					// offsetPopTop = $(qitafElm).offset().top;
				} else {
					$('.qiTab, #QP').hide();
					// qitafElm.hide();
					// offsetPopTop = $(paymentElm).offset().top;
				}
				$('.paymentBlock').show();
				if (pocket.couponData && pocket.couponData.status == 'success' && pocket.couponData.data && pocket.couponData.data[0]) {
					$('#couponCode').val(pocket.couponData.data[0].code);
					$('.couponOfcode').text(pocket.couponData.data[0].des);
				}

				if (typeof $('.couponOfcode').text() == 'undefined' || $('.couponOfcode').text() == null || $('.couponOfcode').text().trim() == '') {
					$('.couponOfcode').hide();
				} else {
					$('.couponOfcode').show();
				}
				$('.alHilalMtkt').hide();
				$('._fphPayButton').show();
				offerWidgetFlyin.init();
				//Hide Installment Section
				if (res.sarAmount < 1000) {
					$('.install').hide();
				}

				console.log('before saved card');
				if (pocket.paymentObj.savedPayfortCardDetails && pocket.paymentObj.savedPayfortCardDetails.length > 0 && !pocket.paymentObj.showCheckout) {
					console.log('inside saved card----', pocket.paymentObj.savedPayfortCardDetails);
					$.get('/common/themes/v2/tmpl/hotel/quickPayPaymentBlock.ejs?v=nd-v0102', {}, function (quickPayTemplate) {
						loadTemplate('quickPay', {
							responseData: pocket
						}, $('#quickPayContainer'), quickPayTemplate);

						setTimeout(function () {
							$('._quickPayCont').show();
							if(pocket.paymentObj.showPayfort)
									{
										payfort.removeClass('active');
										payfort.next().addClass('collapse');
										payfort.parent('.panel').removeClass('first');
									}
									else{
										checkout.removeClass('active');
										checkout.next().addClass('collapse');
										checkout.parent('.panel').removeClass('first');
									}
							$('._paymentBody').hide();
							$('.buttons').find('#paymeBtn').attr('onclick', "payMePackage('QUICKPAY',this)");
							hideMore();
						}, 500);
					});
				}
				else if(pocket.paymentObj.showCheckout){
							setTimeout(function(){
							$('.buttons').find('#paymeBtn').attr('onclick',"payMePackage('CHECKOUT',this)");
							},500);	
				}

				if (pocket.paymentObj.userLoggedIn) {
					setTimeout(function () {
						$('._saveCardHideShow li:gt(1)').hide();
						$('.saveCradCheck').show();
						saveCardInfo();
					}, 500);
				} else {
					setTimeout(function () {
						$('.saveCradCheck').hide();
					}, 500);
				}
				if(pocket.paymentObj.showPayfort){
				$.get('/payment/generateShasign', {
					pid: productId
				}, function (shaResposne) {
					console.log('shaResposne ', shaResposne);
					$('.payment').find('#signature').val(shaResposne.shaSign);
					$('.payment').find('#service_command').val(shaResposne.service_command);
					$('.payment').find('#merchant_identifier').val(shaResposne.merchant_identifier);
					$('.payment').find('#access_code').val(shaResposne.access_code);
					$('.payment').find('#merchant_reference').val(shaResposne.merchant_reference);
					$('.payment').find('#language').val(shaResposne.language);
					$('.payment').find('#return_url').val(shaResposne.return_url);
					$('.payment').find('#paymentForm').attr('action', shaResposne.action_url);
				});
				}
				else if(pocket.paymentObj.showCheckout){						
							showCheckOut = true;
							var dataCheckout= {PID:productId};						
			
							$.post('/payment/checkout/getToken',dataCheckout,function(tokenObj){
								if(tokenObj.status==='ERROR'){
								//disable checkout paymentgateway																	
								}else{
									//enable payment gateway load the checkout kit									
									
									window.CKOConfig = {
									debugMode: tokenObj.environment.debug,
									publicKey: tokenObj.environment.key,
									paymentToken: tokenObj.transaction.transaction_token,
									customerEmail: tokenObj.transaction.email,
									ready: function (event) {										
									CheckoutKit.monitorForm('#checkout-form', CheckoutKit.CardFormModes.CARD_CHARGE);
									},
									cardCharged: function (event) {									
									window.location.href = event.data.redirectUrl;
									},
									cardTokenisationFailed: function (event) {
            							window.location.href = tokenObj.environment.error_url+"&reason=cardTokenisationFailed"
							        },
							        paymentTokenExpired: function (event) {
							            window.location.href = tokenObj.environment.error_url+"&reason=paymentTokenExpired"
							        },
							        apiError: function (event) {
							            window.location.href = tokenObj.environment.error_url+"&reason=apiError"
							        }
									};
									var fileRef=document.createElement('script');
									fileRef.setAttribute("type","text/javascript");
									fileRef.setAttribute("src", "https://sandbox.checkout.com/js/checkoutkit.js");
									fileRef.setAttribute("async", "async");
									document.getElementsByTagName("head")[0].appendChild(fileRef);									
								}
							});

				}
				paymentConfigureFPH(sadad, payfort, installment, payAtStore, pocket.paymentObj, showCheckOut, checkout);*/

				
				//$.loadingPageAnimation();
				/*$('html, body').animate({
					scrollTop: offsetPopTop
				}, 500);*/
				
				//Update card payment label text with 'Use another credit card' if quick pay is available
				 /*setTimeout(function(){	
				changePaymentLabel();
				},1000);*/
			} else {
				if(res.status == "FAIL" && res.hotel == "FAIL") {
					packageNotAvailabel(res.searchUrl, res.removeuid);
					inputConsole('REPORTSTATUS=PREBOOKING_ERROR_HOPLA-' + res.echotoken);
					/*growl_alert(i18n.t('selectedpackagenotavailable'));*/
				}else if(res.status == "FAIL" && res.flight == "FAIL"){
					packageNotAvailabel(res.searchUrl, res.removeuid);
					inputConsole('REPORTSTATUS=PREBOOKING_ERROR_GDS-' + res.echotoken);
					/*growl_alert(i18n.t('selectedpackagenotavailable'));*/
				}else{
					inputConsole('REPORTSTATUS=PREBOOKING_ERROR-' + res.echotoken);
					var errorUrl="/fph/error"
					if(res.errorCode){
						errorUrl=errorUrl+"?"+"code="+res.errorCode;
					}
					location.href = errorUrl;
					return;
				}
				
			}
		});
	}
	//TO load the function.
	cardYear();
	hideMore();
});
/**
 *@Info Payment Module
 */
function payMePackage(args) {

	var pnlHdng = $(".payment .panel-heading");
	var chkActvFph = false;
	/*for (var i = 0; i < pnlHdng.length; i++) {
		if ($(pnlHdng[i]).is(':visible') && $(pnlHdng[i]).hasClass("active")) {
			chkActvFph = true;
			break;
		}
	}*/

	var target = $('._payMode');
	target.each(function(){
		if($(this).hasClass('active')){
			console.log($(this));
			chkActvFph = true;
		}
	});

	if (chkActvFph) {
		noRefreshAction();
		var pid = $('#FPHTDP').attr('data-pid');
		var echotoken = $(this).attr('data_echotoken');
		var condition3 = validateCardInfo();
		if (true) {
			$.post('/payment/bookingStatusChange', {
				pid: pid
			}, function (res) {
				console.log(res);
			});
		}
		if (args === 'QUICKPAY') {
			var condition = true;
			var cvv;
			var unique_id;
			var radio = $('._saveCardHideShow').find('input[type=radio]');
			radio.each(function () {
				if ($(this).is(':checked')) {
					unique_id = $(this).attr('id');
					console.log(unique_id);
					cvvObj = $(this).closest('li').find('#QUICKPAY_CARD_CVV');
					cvv = $(this).closest('li').find('#QUICKPAY_CARD_CVV').val();
				}
			});
			if ((cvv.length < 3) || (!_Nonly(cvv)) || (cvv.length > 3)) {
				growl_alert(i18n.t("enterCVV"));
				cvvObj.addClass('error');
				cvvObj.focus();
				cvvObj.val("");
				condition = false;
			}
			if (condition) {
				btnLoadingAnimation($('#paymeBtn'));
				dontRefreshPopup();
				var device_fingerprint = $('#device_fingerprint').val();
				var data = {
					cvv: cvv,
					pid: pid,
					unique_id: unique_id,
					device_fingerprint: device_fingerprint
				}
				$.post('/payment/payfort/quickPay', data, function (res) {
					if (res.status === 'success') {
						if (res.check_3ds) {
							location.href = res.url;
						} else {
							if (res.bnpl) {
								location.href = "/pages/hotel/hotelConfirmation?SavedItenaryId=" + res.savedItenaryId + '&pid=' + res.pid;
							} else if (res.product === 'mfc' || res.product === 'ma') {
								location.href = res.rurl;
							} else {
								loadPackageConfirmationPage(res.pid, res.echotoken);
							}
						}
					} else {
						location.href = '/payment/payfortRetry?pid=' + res.pid;
					}

				});

			}

		}
		if (args === 'PAYFORT') {
			if (condition3 == true) {
				btnLoadingAnimation($('#paymeBtn'));
				dontRefreshPopup();
				var device_fingerprint = $('#device_fingerprint').val();
				var data = {
					device_fingerprint: device_fingerprint,
					pid: pid,
				}
				//console.log('device_fingerprint  ===',device_fingerprint);
				$.post('/payment/payfort/saveDeviceFingerPrint', data, function (res) {
					$('#paymentForm').submit();
				});
				/*var CARD_NO = $('#CARD_NO');
				var CARD_HOLDER_NAME = $('#CARD_HOLDER_NAME');
				var CARD_EXPIRY_MONTH = $('#CARD_EXPIRY_MONTH');
				var CARD_EXPIRY_YEAR = $('#CARD_EXPIRY_YEAR');
				var CARD_CVV = $('#CARD_CVV');
				var data= {
				CARD_NO:CARD_NO.val() || '',
				CARD_HOLDER_NAME:CARD_HOLDER_NAME.val() || '',
				CARD_EXPIRY_MONTH:CARD_EXPIRY_MONTH.val() || '',
				CARD_EXPIRY_YEAR:CARD_EXPIRY_YEAR.val() || '',
				CARD_CVV:CARD_CVV.val() || '',
				PID:pid,
				}

				$.post('/payment/payfort',data,function(res){
				if(res.status==='success'){
				location.href = res.url;
				}
				else{
				location.href = '/common/error';
				}

				});*/
			}
		}
		if (args === 'CHECKOUT') {
			if (true) {
				btnLoadingAnimation($('#paymeBtn'));
				dontRefreshPopup();
				$('#checkout-form').submit();
			}
		}
     
        if (args === 'AMEX') {
			if (true) {
				btnLoadingAnimation($('#paymeBtn'));
				dontRefreshPopup();
				$('#amex-form').submit();
			}
		}

		if (args === 'SADAD') {
			var condSADAD = true;
			condSADAD = validateSadadOLP(args);
			if (condSADAD) {
				btnLoadingAnimation($('#paymeBtn'));
				var OLP_ID = $('#SADAD_OLP_ID');
				var data = {
					OLP_ID: OLP_ID.val() || '',
					PID: pid,
				}
				dontRefreshPopup();
				$.post('/payment/sadad', data, function (res) {

					if (res.status === "SUCCESS") {
						location.href = res.ibURL;
					} else if (res.status === "FAILED") {

						$('#sadadErrorMessage').text(res.errorMessage).addClass('validate_error_message');
						$('#dontRefreshPopup').modal('hide');
						var offsetPopTop = $('.payment.opcPayment').offset().top;
						$('html, body').animate({
							scrollTop: offsetPopTop
						}, 500);
					}

				});
			}
		}

		if (args === 'FORT-SADAD') {	
		var condSADAD = true;
			condSADAD = validateSadadOLP(args);
			if (condSADAD) {	
			btnLoadingAnimation($('#paymeBtn'));	

			var sadad_olp = $('#sadad_olp').val();
			console.log('olpId-------->',sadad_olp);
			var data = {
					sadad_olp:sadad_olp,
				    pid:pid,
			}
			$.post('/payment/fortSadad/generateFortSadadDetails',data, function(sadadResposne) {						                
               
                $('._fort-sadad').find('#signature').val(sadadResposne.shaSign);
                $('._fort-sadad').find('#command').val(sadadResposne.command);
                $('._fort-sadad').find('#merchant_identifier').val(sadadResposne.merchant_identifier);
                $('._fort-sadad').find('#access_code').val(sadadResposne.access_code);
                $('._fort-sadad').find('#merchant_reference').val(sadadResposne.merchant_reference);
                $('._fort-sadad').find('#amount').val(sadadResposne.amount);
                $('._fort-sadad').find('#currency').val(sadadResposne.currency);
                $('._fort-sadad').find('#language').val(sadadResposne.language);
                $('._fort-sadad').find('#customer_email').val(sadadResposne.customer_email);
                $('._fort-sadad').find('#payment_option').val(sadadResposne.payment_option);
                $('._fort-sadad').find('#order_description').val(sadadResposne.order_description);
                $('._fort-sadad').find('#customer_ip').val(sadadResposne.customer_ip);
                $('._fort-sadad').find('#eci').val(sadadResposne.eci);
                $('._fort-sadad').find('#customer_name').val(sadadResposne.customer_name);             
				$('._fort-sadad').find('#merchant_extra').val(sadadResposne.merchant_extra);
                $('._fort-sadad').find('#return_url').val(sadadResposne.return_url);
                $('._fort-sadad').find('#fortSadadForm').attr('action', sadadResposne.action_url);

	            $('#fortSadadForm').submit();
            });
		}
		}

		if (args === 'INSTALLMENTS') {
			btnLoadingAnimation($('#paymeBtn'));
			dontRefreshPopup();
			var data = {
				pid: pid
			}
			$.post('/payment/installments', data, function (res) {
				if (res.status === 'SUCCESS') {
					location.href = res.redirectURL;
				} else {
					location.href = '/common/error';
				}
			});
		}
	} else {
		growl_alert(i18n.t("slctPymntOptn"));
	}

}
function loadPackageConfirmationPage(pid, echotoken) {
	//var pid=$(this).attr('data_pid');
	$.post('/fph/finalBook', {
		pid: pid,
		echotoken: echotoken
	}, function (res) {
		$("script[src='/common/themes/v2/js/jlibs/pageRefresh.js']").remove();
		console.log(res);
		if (res.status == "SUCCESS") {
			inputConsole('REPORTSTATUS=' + res.flyinCode + 'BOOKING_RES-' + res.echotoken);
			window.location.href = '/fph/confirmation?pId=' + pid;

		} else {
			inputConsole('REPORTSTATUS=BOOKING_ERROR-' + res.echotoken);
			var errorUrl="/fph/error"
				if(res.errorCode){
					errorUrl=errorUrl+"?"+"code="+res.errorCode;
				}
				location.href = errorUrl;
			return;
		}

	});
}
function modifySearchData(response) {
	var $t = this;
	if (typeof Cookies.get('fphNSearchCookie') != 'undefined') {
		var data = Cookies.get('fphNSearchCookie');
		parsedData = JSON.parse(data);
		if ($('#flighthotelsearchKey') != 'undefined') {
			if (data === 'undefined') {
				$('#flighthotelsearchKey').val('');
			} else {
				$('#flighthotelsearchKey').val(parsedData.flighthotelsearchKey);
			}
		} else {
			$('#flighthotelsearchKey').val('');
		}
		if ($('#depFlightHotelSearchKey') != 'undefined') {
			if (data === 'undefined') {
				$('#depFlightHotelSearchKey').val('');
			} else {
				$('#depFlightHotelSearchKey').val(parsedData.depFlightHotelSearchKey);
			}
		} else {
			$('#depFlightHotelSearchKey').val('');
		}
	}
		var modifyData = null;
		var tripType = null;
		var classType =null;
		var noa = null;
		var noc = null;
		var noi =null;
		var nor = null;
		var tripDetails = null;
		var trvCount =null;
		var resultsHeader=null;
		var searchCriteria=null;
		var hotelCheckinDate = null;
		var hotelCheckoutDate = null;
	if(response.hotel){
		modifyData = response.hotel.resultsHeader.modifyData;
		tripType = response.hotel.resultsHeader.searchCriteria.tripType;
		classType = response.hotel.resultsHeader.searchCriteria.classType;
		noa = response.hotel.resultsHeader.searchCriteria.noOfAdults;
		noc = response.hotel.resultsHeader.searchCriteria.noOfChildren;
		noi = response.hotel.resultsHeader.searchCriteria.noOfInfants;
		nor = response.hotel.searchCriteria.nRms;
		tripDetails = response.hotel.tripDetails;
		trvCount = parseInt(noa) + parseInt(noc) + parseInt(noi);
		resultsHeader=response.hotel.resultsHeader;
		searchCriteria=response.hotel.searchCriteria;
		hotelCheckinDate = response.hotel.searchCriteria.ecin;
		hotelCheckoutDate = response.hotel.searchCriteria.ecout;
		
	}if(response.flights){
		modifyData = response.flights.resultsHeader.modifyData;
		tripType = response.flights.resultsHeader.searchCriteria.tripType;
		classType = response.flights.resultsHeader.searchCriteria.classType;
		noa = response.flights.resultsHeader.searchCriteria.noOfAdults;
		noc = response.flights.resultsHeader.searchCriteria.noOfChildren;
		noi = response.flights.resultsHeader.searchCriteria.noOfInfants;
		nor = response.selectedHotel.searchCriteria.nRms;
		tripDetails = response.selectedHotel.tripDetails;
		trvCount = parseInt(noa) + parseInt(noc) + parseInt(noi);
		resultsHeader=response.flights.resultsHeader;
		searchCriteria=response.selectedHotel.searchCriteria;
		hotelCheckinDate = response.selectedHotel.searchCriteria.ecin;
		hotelCheckoutDate = response.selectedHotel.searchCriteria.ecout;
	}
	
	$('#searchTrpClassFH').val(classType);
	$('._apxtravellers').text(trvCount);
	fphService.travellerCount = trvCount;
	$('searchTrpClassFH').text(resultsHeader.searchCriteria.classType);
	var chAgsRaw = searchCriteria.chAgs;
	var chAgsSplit = chAgsRaw.split(':');
	var chRoom = "";
	//child ages
	for (var i in chAgsSplit) {
		if (i > 0 && i < chAgsSplit.length) {
			chRoom += "|"
		}
		var chAge = chAgsSplit[i].split(',');
		for (var j in chAge) {
			var chAgeNew = chAge[j].replace("[", "");
			chAgeNew = chAgeNew.replace("]", "");
			if (chAgeNew == "") {
				chAgeNew = "0";
			}
			chRoom += chAgeNew;
			if (j < chAge.length - 1) {
				chRoom += ",";
			}
		}

	}
	$("#_FH_hiddenca").val(chRoom);
	$("#_FH_hiddenca").attr("data-val", chRoom);
	$("#_FH_hkeyTotalGHiddenAlter").val(trvCount);
	var checkinDate = cmnGetURLQueryStr('checkInDate');

	var checkOutDate = cmnGetURLQueryStr('checkOutDate');
	$('._apxRooms').text(nor);
	var lang = $('html').attr('data-lang');
	$('._apxClass').text(i18n.t(classType.toLowerCase()));
	var dates = resultsHeader.arrDepDates.split('/');
	$('.travellersDropdown').each(function () {

		if (trvCount == 1) {
			$(this).find('._FHTravInfo').val(1 + ' ' + i18n.t('room') + ', 1' + ' ' + i18n.t('traveller'));
		}else if(trvCount<=2  || trvCount <=10){
			$(this).find('._FHTravInfo').val(nor + ' ' + i18n.t('room_plural') + ', ' + trvCount + ' ' + i18n.t('2to10travellers'));
		}else if(trvCount >=11){
			$(this).find('._FHTravInfo').val(nor + ' ' + i18n.t('room_plural') + ', ' + trvCount + ' ' + i18n.t('traveller'));
		}

		$(this).find('#searchTrpClassFH').val(classType);
		$(this).find('.adultSelected').val(noa);
		$(this).find('.childSelected').val(noc);
		$(this).find('.infantSelected').val(noi);
	});
	var fromDisplay = unicodeConverter(tripDetails.depCityName) + ", " + unicodeConverter(tripDetails.depCountryName) + ", (" + modifyData[0].departingIata + ") - " + unicodeConverter(modifyData[0].departingAirportName[lang]);
	$('#roundFromFPH').val(fromDisplay);
	$('#roundFromFPH').attr("title", fromDisplay);
	/*for (var i in response.hotel.maps.city) {
		var cityName = response.hotel.maps.city[i];
		break;
	}
	for (var i in response.hotel.maps.country) {
		var countryName = response.hotel.maps.country[i];
		break;
	}*/
	var toDisplay = unicodeConverter(tripDetails.arrCityName) + ", " + unicodeConverter(tripDetails.arrCountryName) + ", (" + modifyData[0].arrivalIata + ") - " + unicodeConverter(modifyData[0].arrivalAirportName[lang]);
	//$('._apxCity').text(unicodeConverter(tripDetails.arrCityName));
	$('#roundToFPH').val(toDisplay);
	$('#roundToFPH').attr("title", toDisplay);
	$('#roundFromIdFH').val(modifyData[0].departingIata);
	$('#toRoundIDFH').val(modifyData[0].arrivalIata);
	$('#roundFromFPH').attr('data-iata', modifyData[0].departingIata);
	$('#roundToFPH').attr('data-iata', modifyData[0].arrivalIata);
	fphService.loadFPHDatePicker();
	autoPopulateFPHNewRoomWidget();
	if (tripType == "Round Trip") {
		if (fphService.checkdiffDates()) {
			$('#searchDifferent').trigger('click');
			$('._datepicker.fromFPH').val(moment(checkinDate).format("DD/MM/YYYY"));
			$('._datepicker.toFPH').val(moment(checkOutDate).format("DD/MM/YYYY"));
		}

		var dep1 = fphService.arNames.weekdaysShort[moment(dates[0]).weekday()] + ', ' + moment(dates[0]).format('DD') + ' ' + fphService.arNames.months[moment(dates[0]).format('M') - 1] + ' ' + moment(dates[0]).format('YYYY');
		var dT1 = (i18n.options.lng == "en") ? moment(dates[0]).format('ddd, DD MMM YYYY') : dep1;
		var dep2 = fphService.arNames.weekdaysShort[moment(dates[1]).weekday()] + ', ' + moment(dates[1]).format('DD') + ' ' + fphService.arNames.months[moment(dates[1]).format('M') - 1] + ' ' + moment(dates[1]).format('YYYY');
		var dT2 = (i18n.options.lng == "en") ? moment(dates[1]).format('ddd, DD MMM YYYY') : dep2;

		$('._apxDates').html('<elm>' + dT1 + '</elm>' + ' - ' + '<elm>' + dT2 + '</elm>');
		/* HOTEL DATED ADDED BY BILAL*/
		
		var hdep1 = fphService.arNames.weekdaysShort[moment(hotelCheckinDate).weekday()] + ', ' + moment(hotelCheckinDate).format('DD') + ' ' + fphService.arNames.months[moment(hotelCheckinDate).format('M') - 1] + ' ' + moment(hotelCheckinDate).format('YYYY');
		var hdT1 = (i18n.options.lng == "en") ? moment(hotelCheckinDate).format('ddd, DD MMM YYYY') : hdep1;
		var hdep2 = fphService.arNames.weekdaysShort[moment(hotelCheckoutDate).weekday()] + ', ' + moment(hotelCheckoutDate).format('DD') + ' ' + fphService.arNames.months[moment(hotelCheckoutDate).format('M') - 1] + ' ' + moment(hotelCheckoutDate).format('YYYY');
		var hdT2 = (i18n.options.lng == "en") ? moment(hotelCheckoutDate).format('ddd, DD MMM YYYY') : hdep2;
		$('._apxHotelDates').html('<elm>' + hdT1 + '</elm>' + ' - ' + '<elm>' + hdT2 + '</elm>');

		/* HOTEL DATED ADDED BY BILAL */	
		

		$('._datepicker.fromtwowayFPH').val(moment(dates[0]).format('DD/MM/YYYY'));
		$('._datepicker.totwowayFPH').val(moment(dates[1]).format('DD/MM/YYYY'));
		$('._datepicker.fromonewayFPH').val(moment(dates[0]).format('DD/MM/YYYY'));
		$('#rThdateFHiddenFH').val(moment(dates[0]).format('YYYY/MM/DD'));
		$('#rThdateTHiddenFH').val(moment(dates[1]).format('YYYY/MM/DD'));
		$('#selectedFPHSO').val('flightsRoundtripFH');
		$('#flightsRoundtripFH').trigger('click');
	}
	if (tripType == "One Way") {
		var dep1 = fphService.arNames.weekdaysShort[moment(dates[0]).weekday()] + ', ' + moment(dates[0]).format('DD') + ' ' + fphService.arNames.months[moment(dates[0]).format('M') - 1] + ' ' + moment(dates[0]).format('YYYY');
		var dT1 = (i18n.options.lng == "en") ? moment(dates[0]).format('ddd, DD MMM YYYY') : dep1;
		$('._apxDates').text(dT1);
		/* HOTEL DATED ADDED BY BILAL*/
		var hdep1 = fphService.arNames.weekdaysShort[moment(hotelCheckinDate).weekday()] + ', ' + moment(hotelCheckinDate).format('DD') + ' ' + fphService.arNames.months[moment(hotelCheckinDate).format('M') - 1] + ' ' + moment(hotelCheckinDate).format('YYYY');
		var hdT1 = (i18n.options.lng == "en") ? moment(hotelCheckinDate).format('ddd, DD MMM YYYY') : hdep1;
		var hdep2 = fphService.arNames.weekdaysShort[moment(hotelCheckoutDate).weekday()] + ', ' + moment(hotelCheckoutDate).format('DD') + ' ' + fphService.arNames.months[moment(hotelCheckoutDate).format('M') - 1] + ' ' + moment(hotelCheckoutDate).format('YYYY');
		var hdT2 = (i18n.options.lng == "en") ? moment(hotelCheckoutDate).format('ddd, DD MMM YYYY') : hdep2;
		$('._apxHotelDates').html('<elm>' + hdT1 + '</elm>' + ' - ' + '<elm>' + hdT2 + '</elm>');
		/* HOTEL DATED ADDED BY BILAL*/
		$('._datepicker.fromonewayFPH').val(moment(dates[0]).format('DD/MM/YYYY'));
		$('#hdateFHiddenFH').val(dates[0]);
		$('#selectedFPHSO').val('flightsOnewayFH');
		$('#flightsOnewayFH').trigger('click');
	}
}

function modifySearchDataError(response) {

	var $t = this;
	if (typeof Cookies.get('fphNSearchCookie') != 'undefined') {
		var data = Cookies.get('fphNSearchCookie');
		parsedData = JSON.parse(data);
		if ($('#flighthotelsearchKey') != 'undefined') {
			if (data === 'undefined') {
				$('#flighthotelsearchKey').val('');
			} else {
				$('#flighthotelsearchKey').val(parsedData.flighthotelsearchKey);
			}
		} else {
			$('#flighthotelsearchKey').val('');
		}
		if ($('#depFlightHotelSearchKey') != 'undefined') {
			if (data === 'undefined') {
				$('#depFlightHotelSearchKey').val('');
			} else {
				$('#depFlightHotelSearchKey').val(parsedData.depFlightHotelSearchKey);
			}
		} else {
			$('#depFlightHotelSearchKey').val('');
		}
	}
	var modifyData = response.tripinfoHeader;
	var arrCityName = response.hotel.modifySearchData.arrCityName;
	var arrCountryName = response.hotel.modifySearchData.arrCountryName;
	var depCityName = response.hotel.modifySearchData.depCityName;
	var depCountryName = response.hotel.modifySearchData.depCountryName;
	var classType = response.SearchRQ.searchRQ.ct;
	$('#packageCount').text(0);
	$('._apxCity').text(unicodeConverter(arrCityName));
	$('._apxClass').text(i18n.t(response.SearchRQ.searchRQ.ct.toLowerCase()));
	fphService.loadFPHDatePicker();
	var noa = cmnGetURLQueryStr("adult");
	var noc = cmnGetURLQueryStr("child");
	var noi = cmnGetURLQueryStr("infant");
	var nor = cmnGetURLQueryStr("noOfRooms");
	var trvCount = parseInt(noa) + parseInt(noc) + parseInt(noi);
	var chAgsRaw = response.hotel.searchCriteria.chAgs;
	var chAgsSplit = chAgsRaw.split(':');
	var chRoom = "";
	//child ages
	for (var i in chAgsSplit) {
		if (i > 0 && i < chAgsSplit.length) {
			chRoom += "|"
		}
		var chAge = chAgsSplit[i].split(',');
		for (var j in chAge) {
			var chAgeNew = chAge[j].replace("[", "");
			chAgeNew = chAgeNew.replace("]", "");
			if (chAgeNew == "") {
				chAgeNew = "0";
			}
			chRoom += chAgeNew;
			if (j < chAge.length - 1) {
				chRoom += ",";
			}
		}

	}
	$("#_FH_hiddenca").val(chRoom);
	$("#_FH_hiddenca").attr("data-val", chRoom);
	$('._apxtravellers').text(trvCount);
	$("#_FH_hkeyTotalGHiddenAlter").val(trvCount);
	var checkinDate = cmnGetURLQueryStr('checkInDate');
	var checkOutDate = cmnGetURLQueryStr('checkOutDate');
	$('._apxRooms').text(nor);
	var lang = $('html').attr('data-lang');
	var dates = response.arrDepDates.split('/');
	/*HOTEL DATES ADDED BY BILAL*/
	var hotelCheckinDate = response.hotel.searchCriteria.ecin;
	var hotelCheckoutDate = response.hotel.searchCriteria.ecout;
	/*HOTEL DATES ADDED BY BILAL*/

	var tripType = response.tripType;
	if (tripType == 2) {
		if (fphService.checkdiffDates()) {
			$('#searchDifferent').trigger('click');
			$('._datepicker.fromFPH').val(moment(checkinDate).format("DD/MM/YYYY"));
			$('._datepicker.toFPH').val(moment(checkOutDate).format("DD/MM/YYYY"));
		}

		var dep1 = fphService.arNames.weekdaysShort[moment(dates[0]).weekday()] + ', ' + moment(dates[0]).format('DD') + ' ' + fphService.arNames.months[moment(dates[0]).format('M') - 1] + ' ' + moment(dates[0]).format('YYYY');
		var dT1 = (i18n.options.lng == "en") ? moment(dates[0]).format('ddd, DD MMM YYYY') : dep1;
		var dep2 = fphService.arNames.weekdaysShort[moment(dates[1]).weekday()] + ', ' + moment(dates[1]).format('DD') + ' ' + fphService.arNames.months[moment(dates[1]).format('M') - 1] + ' ' + moment(dates[1]).format('YYYY');
		var dT2 = (i18n.options.lng == "en") ? moment(dates[1]).format('ddd, DD MMM YYYY') : dep2;
		$('._apxDates').html('<elm>' + dT1 + '</elm>' + ' - ' + '<elm>' + dT2 + '</elm>');

		/*HOTEL DATES ADDED BY BILAL*/
		var hdep1 = fphService.arNames.weekdaysShort[moment(hotelCheckinDate).weekday()] + ', ' + moment(hotelCheckinDate).format('DD') + ' ' + fphService.arNames.months[moment(hotelCheckinDate).format('M') - 1] + ' ' + moment(hotelCheckinDate).format('YYYY');
		var hdT1 = (i18n.options.lng == "en") ? moment(hotelCheckinDate).format('ddd, DD MMM YYYY') : hdep1;
		var hdep2 = fphService.arNames.weekdaysShort[moment(hotelCheckoutDate).weekday()] + ', ' + moment(hotelCheckoutDate).format('DD') + ' ' + fphService.arNames.months[moment(hotelCheckoutDate).format('M') - 1] + ' ' + moment(hotelCheckoutDate).format('YYYY');
		var hdT2 = (i18n.options.lng == "en") ? moment(hotelCheckoutDate).format('ddd, DD MMM YYYY') : hdep2;
		$('._apxHotelDates').html('<elm>' + hdT1 + '</elm>' + ' - ' + '<elm>' + hdT2 + '</elm>');
		/*HOTEL DATES ADDED BY BILAL*/
		

		$('._datepicker.fromtwowayFPH').val(moment(dates[0]).format('DD/MM/YYYY'));
		$('._datepicker.totwowayFPH').val(moment(dates[1]).format('DD/MM/YYYY'));
		$('._datepicker.fromonewayFPH').val(moment(dates[0]).format('DD/MM/YYYY'));
		$('#rThdateFHiddenFH').val(moment(dates[0]).format('YYYY/MM/DD'));
		$('#rThdateTHiddenFH').val(moment(dates[1]).format('YYYY/MM/DD'));
		$('#selectedFPHSO').val('flightsRoundtripFH');
		$('#flightsRoundtripFH').trigger('click');
	}
	var fromDisplay = unicodeConverter(depCityName) + ", " + unicodeConverter(depCountryName) + ", (" + modifyData[1].departingIata + ") - " + unicodeConverter(modifyData[1].departingAirportName[lang]);
	$('#roundFromFPH').val(fromDisplay);
	$('#roundFromFPH').attr("title", fromDisplay);
	var toDisplay = unicodeConverter(arrCityName) + ", " + unicodeConverter(arrCountryName) + ", (" + modifyData[1].arrivalIata + ") - " + unicodeConverter(modifyData[1].arrivalAirportName[lang]);
	$('#roundToFPH').val(toDisplay);
	$('#roundToFPH').attr("title", toDisplay);
	$('#roundFromIdFH').val(modifyData[1].departingIata);
	$('#toRoundIDFH').val(modifyData[1].arrivalIata);
	$('#roundFromFPH').attr('data-iata', modifyData[1].departingIata);
	$('#roundToFPH').attr('data-iata', modifyData[1].arrivalIata);
	if (tripType == 1) {
		var dep1 = fphService.arNames.weekdaysShort[moment(dates[0]).weekday()] + ', ' + moment(dates[0]).format('DD') + ' ' + fphService.arNames.months[moment(dates[0]).format('M') - 1] + ' ' + moment(dates[0]).format('YYYY');
		var dT1 = (i18n.options.lng == "en") ? moment(dates[0]).format('ddd, DD MMM YYYY') : dep1;
		$('._apxDates').text(dT1);
		
		/*HOTEL DATES ADDED BY BILAL*/
		var hdep1 = fphService.arNames.weekdaysShort[moment(hotelCheckinDate).weekday()] + ', ' + moment(hotelCheckinDate).format('DD') + ' ' + fphService.arNames.months[moment(hotelCheckinDate).format('M') - 1] + ' ' + moment(hotelCheckinDate).format('YYYY');
		var hdT1 = (i18n.options.lng == "en") ? moment(hotelCheckinDate).format('ddd, DD MMM YYYY') : hdep1;
		var hdep2 = fphService.arNames.weekdaysShort[moment(hotelCheckoutDate).weekday()] + ', ' + moment(hotelCheckoutDate).format('DD') + ' ' + fphService.arNames.months[moment(hotelCheckoutDate).format('M') - 1] + ' ' + moment(hotelCheckoutDate).format('YYYY');
		var hdT2 = (i18n.options.lng == "en") ? moment(hotelCheckoutDate).format('ddd, DD MMM YYYY') : hdep2;
		$('._apxHotelDates').html('<elm>' + hdT1 + '</elm>' + ' - ' + '<elm>' + hdT2 + '</elm>');
		/*HOTEL DATES ADDED BY BILAL*/

		$('._datepicker.fromonewayFPH').val(moment(dates[0]).format('DD/MM/YYYY'));
		$('#hdateFHiddenFH').val(dates[0]);
		$('#selectedFPHSO').val('flightsOnewayFH');
		$('#flightsOnewayFH').trigger('click');
	}
	$('.travellersDropdown').each(function () {
		if (trvCount == 1) {
			$(this).find('._FHTravInfo').val(1 + ' ' + i18n.t('room') + ', 1' + ' ' + i18n.t('traveller'));
		}else if(trvCount<=2  || trvCount <=10){
			$(this).find('._FHTravInfo').val(nor + ' ' + i18n.t('room_plural') + ', ' + trvCount + ' ' + i18n.t('2to10travellers'));
		}else if(trvCount >=11){
			$(this).find('._FHTravInfo').val(nor + ' ' + i18n.t('room_plural') + ', ' + trvCount + ' ' + i18n.t('traveller'));
		}
		$(this).find('#searchTrpClassFH').val(classType);
		$(this).find('.adultSelected').val(noa);
		$(this).find('.childSelected').val(noc);
		$(this).find('.infantSelected').val(noi);
	});
	$('#searchTrpClassFH').val(classType);
	autoPopulateFPHNewRoomWidget();
}

function autoPopulateFPHNewRoomWidget() {

	var noRSelection = $('.selectRooms select.noOfRoomsSel._sub_FPHT2');
	var getRoomElm = $('input[name=_FH_hiddena]'),
	getRoom = [];
	if (getRoomElm.length > 0) {
		getRoom = getRoomElm.attr('data-val').split(',');
	}
	var getChildElm = $('input[name=_FH_hiddenc]'),
	getChild = [];
	if (getChildElm.length > 0) {
		getChild = getChildElm.attr('data-val').split(',');
	}
	var getAgeArrElm = $('input[name=_FH_hiddenca]'),
	getAgeArr = [];
	if (getAgeArrElm.length > 0) {
		getAgeArr = getAgeArrElm.val().split('|');
	}
	var getInfantElm = $('input[name=_FH_hiddeni]'),
	getInfant = [];
	if (getInfantElm.length > 0) {
		getInfant = getInfantElm.attr('data-val').split(',');
	}

	var roomWidgetElm = $('.fhWidget._FPHT2');
	var totalRooms = calculateRoomsForFPHTwoWay();
	var caObj = [];
	roomWidgetElm.find('.specifyChildBlock.specifyChild').hide();
	//Populate number of rooms
	for (var i = totalRooms; i < getRoom.length; i++) {
		var clone = roomWidgetElm.find('._fthtlroomcontainer2:first').clone(true);
		clone.find('._roomCount_FPHT2').text(i + 1);
		clone.find('.specifyChildBlock.specifyChild').hide();
		clone.find('.adultSelected').val(getRoom[i]);
		roomWidgetElm.find('._fthtlroomcontainer2').last().after(clone);
	}
	if (getAgeArr.length > 0) {
		for (var i = 0; i < getAgeArr.length; i++) {
			var sp = getAgeArr[i].split(',');
			var caTemp = [];
			for (var e = 0; e < sp.length; e++) {
				var countCA = parseInt(sp[e]);
				if (countCA != 0) {
					caTemp.push(countCA);
				}
			}
			caObj.push(caTemp);
		}
	}
	roomWidgetElm.find('._fthtlroomcontainer2').each(function (k, v) {
		$(this).find('.adultSelected').val(getRoom[k]);
		$(this).find('.childSelected').val(getChild[k]);
		$(this).find('.infantSelected').val(getInfant[k]);

		if (typeof(caObj[k]) != 'undefined') {
			if (caObj[k].length !== 0) {
				$(this).find('.specifyChildBlock.specifyChild').show();
				$(this).find('.specifyChildBlock.specifyChild').find('.custom-select-v3').hide();
				var ageSel = $(this).find('.specifyChildBlock.specifyChild').find('.custom-select-v3');
				for (var l = 0; l < caObj[k].length; l++) {
					if (ageSel.length > 0) {
						$(ageSel[l]).show();
						$(ageSel[l]).find('select').val(caObj[k][l]);
					}
				}
			}
		}
	});
	roomWidgetElm.show();
	$('.modifySearchDiv').find(' .modify-nav').show();

	noRSelection.val(getRoom.length);
	noRSelection.parents('.selectRooms').show();

}

function calculateRoomsForFPHTwoWay() {
	var roomPicker = $('.fhWidget._FPHT2').find('._fthtlroomcontainer2');
	return roomPicker.length;
}

/***
 * @returns the distance between two points
 */
function latLonToDistance(t, a, s, i) {
	var n = 3958.7558657440545,
	o = toRadius(s - t),
	h = toRadius(i - a),
	M = Math.sin(o / 2) * Math.sin(o / 2) + Math.cos(toRadius(t)) * Math.cos(toRadius(s)) * Math.sin(h / 2) * Math.sin(h / 2),
	u = 2 * Math.atan2(Math.sqrt(M), Math.sqrt(1 - M)),
	r = n * u;
	return (1.609344 * r).toFixed(1)
}
function toRadius(t) {
	return t * Math.PI / 180
}

function ccmFlight(flightData, selectedPackage) {
	var newObj = [],
	$t = flightServiceVar,
	getFilterData;
	var getUSC = $('.currencyDropdown').find('ul li.active a').prop('class'),
	userSelectedCur = {};
	async.series([
			function (callback) {
				$t.selectedPackage = selectedPackage;
				$t.setSelectedCurrency = getUSC;
				return callback();
			},
			function (callback) {
				$t.flightData = flightData;
				$t.baseData = flightData;
				$t.baseObj = flightData;
				return callback();
			},
			function (callback) {
				$t.filterData = flightData.searchRes;
				$t.hashmap = flightData.maps;
				return callback();
			}
		], function (err) {
		if ($t.checkInit == false) {
			$t.init();
		}
		$t.loadFilter();
		$t.loadTemplate('fflight-filter-view', $t.dynamicFilterdata, $('.flight_filters'));
		$t.fresetPriceSlider($t.filterData);
		$t.render();

	});
}

var flightServiceVar = (function () {
	'user strict';
	return {
		/**
		 *Global Variables
		 */
		//set orginal base object [clone]
		baseObj: [],
		isActive: false,
		dynamicTemplate: '',
		uuid: '',
		baseData: [],
		cExR: [],
		nonStopFlights: 'false',
		filterData: [],
		flightData: [],
		selectedPackage: [],
		filterUIArry: [],
		hashmap: [],
		headerInfo: '',
		setSelectedCurrency: '',
		dynamicFilterdata: {},
		fareRes: {},
		priceFilterMin: 0,
		topairline: '',
		priceFilterMax: 0,
		resultsError: true,
		checkInit: false,
		validateMS: false,
		eventBindingFlag: false,
		flightsRender: function(){
			var tempResponse = JSON.parse(JSON.stringify(flightServiceVar.baseObj));
			tempResponse.flights.searchRes=flightServiceVar.filterData;								
			fphService.loadTemplate('fph_desktop_flightResults', tempResponse, $('.flightResultContainer'),function(){
				ULTriplessMoreForLegs(['_flight_trip1', '_flight_trip2', '_flight_trip3'], function () {
				setTimeout(function () {
					var target = $('.priceGrid');
					target.each(function () {
						var containerHeight = $(this).parents('.item.primary-item').innerHeight();
						var fphPricePrt = $(this).find('.fphPricePrt').height();
						
						if(containerHeight>300){
							$(this).find('.mobileBooknow').css({
								'padding-top': (containerHeight) / 2 - fphPricePrt+70,
								'height': containerHeight
							});
						} else {
							$(this).find('.mobileBooknow').css({
								'padding-top': 20,
								'height': 310
							});
						}
						
							 
					});
				}, 80);
			});
				pricetagConvert.init();
				$('.flightNoFilteredResults').hide();
				$('.flightResultContainer').show();
			});
		},
		getSelectedFlight : function(index, legIndex, inBound, callback){
			var flightsBase = JSON.parse(JSON.stringify(flightServiceVar.baseObj));
			var flights = flightsBase.flights.searchRes;
			var selectedFlight='';			
			for(var i=0; i<flights.length; i++){
				if(flights[i].index == index){
					for(var l=0; l<flights[i].trips[inBound].length; l++){
						if(flights[i].trips[inBound][l].tripLegIndex == legIndex){
							selectedFlight = flights[i].trips[inBound][l];
							break;
						}
					}
					break;
				}		
			}			
			if(selectedFlight!==''){
				callback(null, selectedFlight);
			}else{
				callback('noflight', null)
			}
		},
		getSelectedCurrency: function () {
			if (this.setSelectedCurrency == "SAR") {
				this.setSelectedCurrency = 'SAR';
			} else {
				this.setSelectedCurrency = this.setSelectedCurrency;
			}
			return this.setSelectedCurrency;
		},
		getselFliItenary: function (elm) {
			var selIndex = elm.attr('data-indexid');
			var legIndex = elm.attr('data-legindex');
			var i,
			j,
			k,
			z,
			m,
			item,
			fItem,
			array = JSON.parse(JSON.stringify(flightServiceVar.flightData)),
			response,
			fRes,
			fResponse = [],
			holder,
			fholder,
			flightItenary = [];
			var searchArray = array.searchRes;
			for (i = 0, j = searchArray.length; i < j; i++) {
				item = searchArray[i];
				holder = searchArray[i].index;
				if (holder == selIndex) {
					response = item;
				}
			}
			legIndexArr = legIndex.split('|');
			flightItenary.push(response);
			for (z = 0; z < legIndexArr.length; z++) {
				var trips = response.trips[z];
				for (k = 0, m = trips.length; k < m; k++) {
					fItem = trips[k];
					fholder = trips[k].tripLegIndex;
					if (fholder == legIndexArr[z]) {
						fRes = fItem;
					}
				}
				fResponse.push(fRes);
			}
			for (c = 0; c < response.trips.length; c++) {
				response.trips[c] = [];
				response.trips[c][0] = fResponse[c];
			}
			return response;
		},
		/**
		 *@description Set the base object data across category
		 *@params Array (Response Object)
		 *@return null
		 */
		setData: function (res) {
			var obj = JSON.parse(JSON.stringify(res));
			this.baseData = obj;
			this.filterData = obj.searchRes;
			this.cExR = obj.cExeR;
			this.hashmap = obj.maps;
			this.headerInfo = obj.resultsHeader;
			this.uuid = obj.uuid;
			this.setSelectedCurrency = obj.ISOCurrency;
			this.baseObj = obj.searchRes;
			//this.isActive = true;
			//ffp = obj.alliances;
		},
		//Pagination Configuration
		paginationConfig: function () {
			var opt = {
				callback: pageselectCallback
			};
			var items = {
				items_per_page: 30,
				num_display_entries: 6,
				num_edge_entries: 2,
				prev_text: i18n.t('previous'),
				next_text: i18n.t('next')
			};
			for (var key in items) {
				opt[key] = items[key];
			}
			return opt;
		},
		resetSorts: function (elm) { //Reset Sort dropdown
			var elmID = '';
			if (typeof elm != "undefined") {
				elmID = elm.attr('id');
			}
			try {
				var elmArr = [
					$(this.filterSelector.sortPrice),
					$(this.filterSelector.sortDuration),
					$(this.filterSelector.sortArrivalTime),
					$(this.filterSelector.sortDepartureTime)];
				for (i in elmArr) {
					if (elmArr[i].attr('id') != elmID) {
						elmArr[i][0].selectedIndex = 0;
					}
				}
			} catch (err) {}
		},
		/**
		 * Variables for filter and sorting
		 */
		filterSelector: {
			airline: "#airlineName-filter-list li input[type=checkbox]",
			stops: "#stops-filter-list ul li input[type=checkbox]",
			stopOverAirports: "#_stopOverAirport-filter-list li input[type=checkbox]",
			returnStopOverAirports: "#_returnStopOverAirport-filter-list li input[type=checkbox]",
			nearByAirport: "#_nearByAirport-filter-list li input[type=checkbox]",
			eventDeparture: "#_depature_time_filter li input[type=checkbox]",
			eventArrival: "#_arrival_time_filter li input[type=checkbox]",
			returnTripEventDeparture: "#_returnTrip_depature_time_filter li input[type=checkbox]",
			returnTripEventArrival: "#_returnTrip_arrival_time_filter li input[type=checkbox]",
			sortPrice: "#_fsortPrice",
			sortDuration: "#_fsortDuration",
			sortTime: "#_sortTime",
			priceFilter: "#_fPrice_fliter",
			priceFilterSection: "#_flight-price-filter-section",
			clearFilter: "#_clearFilter",
			radioSelct: '.selectRadio input[type=radio]',
			showLegInfo: '._showLegInfo',
			airlineGrid: '#flightAirlineGrid .item a',
			sortDepartureTime: "#_fsortDepartureTime",
			sortArrivalTime: "#_fsortArrivalTime",
			allianceImg: '#ffp-tab  img',
			backtoPackages: ".backtoPackages",
			fphAlliance: '#_ffp-tab li'
		},
		checkEmpty: function (elm) {
			var d = $(elm);
			var z = 0;
			var con = false;
			var t = d.parents('.item.primary-item').find('input:radio');
			t.each(function () {
				if ($(this).prop('checked') == true) {
					con = true;
				}
			});
			var p = d.parents('.item.primary-item').find('.fltResultsGrid');
			p.each(function () {
				var elmTarget = $(this).find('ul.fltResults li.legResult');
				z = z + elmTarget.length;
			});
			if (z == p.length) {
				p.each(function () {
					var $selectedId = $(this).find('ul.fltResults li').find('div.selectRadio').find('input:radio');
					$($selectedId).trigger("click");
				});
				con = true;
			}
			return con;
		},
		init: function () {
			var $t = this;
			$t.checkInit = true;
			/**
			 *Sort by Price
			 */
			$('body').on('change', $t.filterSelector.sortPrice, function () {
				$('.dynamic_results_loader').show();
				$t.resetSorts($(this));
				$t.render();
			});
			//update package price on change flight
			$('body').on('click', '._updatePackagePrice', function () {
				fphService.changeFlightSelected = true;
				$('#changeFlightFlag').val("true");
				var $this = $(this),
				selectedPackage = $t.selectedPackage;
				if (flightServiceVar.checkEmpty($this) == true) {
					btnLoadingAnimation($(this));
					$(this).text(i18n.t('processingText'));
					setTimeout(function () {
						var selFliItenary = $t.getselFliItenary($this);
						selectedPackage.flightItenary = selFliItenary;
						var filterData = JSON.parse(JSON.stringify(fphService.filterData));
						for (var i in filterData) {
							filterData[i].flightItenary = selFliItenary;
						}
						fphService.selFilterData = filterData;
						$t.render();
					}, 200);
				} else {
					growl_alert(i18n.t("pleaseSelectFlight"));
				}
			});
			/**
			 *Sort by Duration
			 */
			$('body').on('change', $t.filterSelector.sortDuration, function () {
				$('.dynamic_results_loader').show();
				$t.resetSorts($(this));
				$t.render();
			});
			/**
			 *Sort by Departure time
			 */
			$('body').on('change', this.filterSelector.sortArrivalTime, function () {
				$('.dynamic_results_loader').show();
				$t.resetSorts($(this));
				$t.render();
			});
			/**
			 *Back to Package Result
			 */
			$('body').on('click', this.filterSelector.backtoPackages, function () {
				if ($('._youHaveFilteredPackage').is(':visible')) {
					$('.yhfReset._youHaveFilteredPackageReset').trigger('click');
				}
				fphService.render(true, true, function () {
					$("._fphResultMain, .hotelResultSort, .fph_filters, ._apxchangeFlight, ._youHaveFilteredPackage, #pagination").attr('style', 'display:block');
					if (fphService.uiValue.length == 0) {
						$('._youHaveFilteredPackage').hide();
					}
					$('._fphChangeFlight, ._youHaveFilteredFlight, .flight_filters, .sortSec.changeFlight, ._fphselectedPackage').attr('style', 'display:none');
					$('._myLoader').hide();
					var bLazy = new Blazy({
							breakpoints: [{
									src: '../img/destinations/call-icon.jpg'
								}
							],
							success: function (element) {
								setTimeout(function () {
									var parent = element.parentNode;
									parent.className = parent.className.replace(/\bloading\b/, '');
								}, 200);
							}
						});

				});
				return false;

			});
			/**
			 *Sort by Arrival time
			 */
			$('body').on('change', this.filterSelector.sortDepartureTime, function () {
				$('.dynamic_results_loader').show();
				$t.resetSorts($(this));
				$t.render();
			});
			/**
			 *Filter by Airline name
			 */
/*			$('body').on('change', flightServiceVar.filterSelector.airline, function () {
				$('.dynamic_results_loader').show();
				$t.resetPriceSliderOnLoad();
				setTimeout(function () {
					$t.render(true);
				}, 80);
				return false;
				//$t.findFLKey($(this));
			});*/

			//Alliance
			$('body').on('click', this.filterSelector.fphAlliance, function () {
				$('.dynamic_results_loader').show();
				if ($(this).hasClass('active')) {
					$(this).removeClass('active');
				} else {
					$(this).addClass('active');

				}
				/*$t.resetPriceSliderOnLoad();
				setTimeout(function () {
					$t.render(true);
				}, 80);*/
				//$t.findFLKey($('#ffp-tab'));
			});

			/**
			 *Filter by Stops
			 */
/*			$('body').on('change', this.filterSelector.stops, function () {
				$('.dynamic_results_loader').show();
				$t.resetPriceSliderOnLoad();
				setTimeout(function () {
					$t.render(true);
				}, 80);
				//$t.findFLKey($(this));
			});*/
			/**
			 *Filter by Airport Stopover
			 */
/*			$('body').on('change', this.filterSelector.stopOverAirports + ',' + this.filterSelector.returnStopOverAirports, function () {
				$('.dynamic_results_loader').show();
				$t.resetPriceSliderOnLoad();
				setTimeout(function () {
					$t.render(true);
				}, 80);
				//$t.findFLKey($(this));
			});*/
			/**
			 *Filter Near by Airport
			 */
/*			$('body').on('change', this.filterSelector.nearByAirport, function () {
				$('.dynamic_results_loader').show();
				$t.resetPriceSliderOnLoad();
				/* setTimeout(function(){
				$t.render(true);
				//$t.renderBasetemplate({NBA:false});
				},80); 
				async.series([
						function (callback) {
							$t.render(true);
							return callback();
						}, function (callback) {
							$t.loadFilter();
							return callback();
						}
					], function (err) {
					reloadFilters($t.dynamicFilterdata);
				});

			});*/
			/**
			 *Filter by Departure Time
			 */
/*			$('body').on('change', this.filterSelector.eventDeparture + ',' + this.filterSelector.returnTripEventDeparture, function () {
				$('.dynamic_results_loader').show();
				$t.resetPriceSliderOnLoad();
				setTimeout(function () {
					$t.render(true);
				}, 80);
				//$t.findFLKey($(this));
			});*/

			/**
			 *Filter by Arrival Time
			 */
/*			$('body').on('change', this.filterSelector.eventArrival + ',' + this.filterSelector.returnTripEventArrival, function () {
				$('.dynamic_results_loader').show();
				$t.resetPriceSliderOnLoad();
				setTimeout(function () {
					$t.render(true);
				}, 80);
				//$t.findFLKey($(this));
			});*/
			/**
			 *Filter by Price
			 */
			$('body').on('change', this.filterSelector.priceFilter, function () {
				//$('.dynamic_results_loader').show();
				$this = $(this);
				window.clearTimeout(fftimer);
				fftimer = window.setTimeout(function () {
						var priceStr;
						async.parallel([
								function (callback) {
									priceStr = $t.getFilteredPrice();
									return callback();
								},
								function (callback) {
									$t.setPriceMinMax(priceStr);
									return callback();
								}
							],
							function (err) {
							$t.render();
							//$t.findFLKey($this);
						});
					}, 700);
			});
			/**
			 *Change trip radio selection
			 */
			$('body').on('click', this.filterSelector.radioSelct, function () {
				var $this = $(this);
				$t.dyanamicRadioSelection($this);
			});

			/**
			 *Reset Filter Action
			 */
			$('body').on('click touchstart', '.yhfReset.youHaveFilteredFlightReset', function () {
				$('.youHaveFilteredFlight').hide();
				//$('.dynamic_results_loader').show();
				flightServiceVar.filterData = flightServiceVar.baseObj.flights.searchRes;
				async.series([
						/*function (callback) {
							//reset price slider
							$t.resetPriceSliderOnLoad();
							return callback();
						},*/
						function (callback) {
							//Reset Stops Filter
							$($t.filterSelector.stops).each(function () {
								$(this).attr('checked', false);
							});
							//Reset airline filter
							$($t.filterSelector.airline).each(function () {
								$(this).attr('checked', false);
							});
							$($t.filterSelector.stopOverAirports).each(function () {
								$(this).attr('checked', false);
							});
							$($t.filterSelector.returnStopOverAirports).each(function () {
								$(this).attr('checked', false);
							});
							//Reset Event Departure filter
							$($t.filterSelector.eventDeparture).each(function () {
								$(this).attr('checked', false);
							});
							//Reset Event Return Departure filter
							$($t.filterSelector.returnTripEventDeparture).each(function () {
								$(this).attr('checked', false);
							});
							//Reset Event Return Arrival filter
							$($t.filterSelector.returnTripEventArrival).each(function () {
								$(this).attr('checked', false);
							});
							//Reset Event Arrival filter
							$($t.filterSelector.eventArrival).each(function () {
								$(this).attr('checked', false);
							});
							$($t.filterSelector.nearByAirport).each(function () {
								$(this).attr('checked', false);
							});
							 $('#_ffp-tab li').each(function () {
						        $(this).find('input').attr('checked', false);
						      });
/*
							//Reset Stop Over Airport filter
							//Reset Return Stop Over Airport filter

							//Reset Near by airport filter
							

							//Reset ffp alliance
							$($t.filterSelector.ffpAlliance).each(function () {
								$(this).removeClass('active');
							});*/
							return callback();

						},
						function (callback) {
							$('._sortFlights').each(function(){								
								$(this).find('select').val('');
									
							});
							return callback();
						},
						/*function (callback) {
							//Re-render the result view
							//$t.render(true);							
							return callback();

						}*/
					], function (err) {
						flightServiceVar.flightsRender();
						//reset the flight count
						$('.foundFlt').find('elm').text(flightServiceVar.baseObj.flights.flightFilters.flightCount);
					});
				return false;
			});
			if (this.eventBindingFlag === false) {
				/**
				 *Airline Grid Icon filter
				 */
				$('body').on('click', this.filterSelector.airlineGrid, function () {
					$('.dynamic_results_loader').show();
					var $this = $(this);
					var gridItems = $($t.filterSelector.airlineGrid);
					gridItems.each(function () {
						var item = $(this).parents('.item');
						item.removeClass('active');
					});
					var target = $($t.filterSelector.airline);
					target.each(function () {
						if ($(this).attr('attr-airlinecode') == $this.attr('id')) {
							if (!$(this).is(':checked')) {
								$(this).prop('checked', true);
								$this.parents('.item').addClass('active');
							} else {
								$this.parents('.item').removeClass('active');
								$(this).prop('checked', false);
							}
						} else {
							$(this).prop('checked', false);
						}
					});
					$t.resetPriceSliderOnLoad();
					setTimeout(function () {
						$t.render(true);
					}, 80);
					return false;
				});
				this.eventBindingFlag = true;
			}

			// executed on tab change for FlightByFlights round trip
			$('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
				$('.dynamic_results_loader').show();
				var target = $(e.target).attr("href"); // activated tab

				if (target == '#fbf') {
					flightComboSerVar.isActive = true;
					flightServiceVar.isActive = false;
					$('#filterFF').show();
					$('#filterBO').hide();
					$('.filter-slider').hide();
					$('#pagination').hide();
				} else {
					// curr change happened in FF
					if (flightComboSerVar.renderBestOffers == true) {
						flightServiceVar.ccm(flightComboSerVar.setSelectedCurrency);
					}
					flightServiceVar.isActive = true;
					flightComboSerVar.isActive = false;
					$('#filterBO').show();
					$('#filterFF').hide();
					$('.filter-slider').show();
					$('#pagination').show();
				}

				if (!(flightComboSerVar && flightComboSerVar.checkInit)) {
					flightComboSerVar.render(false, function (renderedData) {

						var onwardTrips = [],
						returnTrips = [];

						async.series([
								function (callback) {
									for (var x in renderedData.onwardRenderedData) {
										var onwardRes = renderedData.onwardRenderedData[x];
										for (var y in onwardRes.trips[0]) {
											var onwTrip = {};
											var trip = onwardRes.trips[0][y];
											onwTrip.index = onwardRes.index;
											onwTrip.totalFare = onwardRes.jsonFlightPrice.up.totalFare;
											onwTrip.trip = trip;
											onwardTrips.push(onwTrip);

										}

									}
									for (var x in renderedData.returnRenderedData) {
										var returnRes = renderedData.returnRenderedData[x];
										for (var y in returnRes.trips[1]) {
											var retTrip = {};
											var trip = returnRes.trips[1][y];
											retTrip.index = returnRes.index;
											retTrip.totalFare = returnRes.jsonFlightPrice.up.totalFare;
											retTrip.trip = trip;
											returnTrips.push(retTrip);
										}

									}
									return callback();
								},
								function (callback) {

									var data = {
										onwardTrips: onwardTrips,
										returnTrips: returnTrips,
										maps: flightComboSerVar.hashmap,
										uuid: flightComboSerVar.uuid,
										headerInfo: flightComboSerVar.headerInfo,
										sortData: {
											sort: 'price',
											order: 'asc'
										},
										uc: $t.setSelectedCurrency || 'SAR'
									}
									//console.log('data for CSL');console.log(JSON.stringify(data));

									loadTemplate('fareCombination-onward-result-list', data, $('#onwardFF'), flightComboSerVar.dynamicTemplate);
									loadTemplate('fareCombination-return-result-list', data, $('#returnFF'), flightComboSerVar.dynamicTemplate);

									flightComboSerVar.init();
									flightComboSerVar.loadFilter();
									flightComboSerVar.updateFilghtCount();

									var selectedDefaultOnward = renderedData.onwardRenderedData[0].trips[0][0];
									var selectedDefaultReturn = renderedData.returnRenderedData[0].trips[1][0];
									flightComboSerVar.selectedFlightCombination.onwardTrip = selectedDefaultOnward;
									flightComboSerVar.selectedFlightCombination.returnTrip = selectedDefaultReturn;
									flightComboSerVar.selectedFlightCombination.onwardTripObj = renderedData.onwardRenderedData[0];
									flightComboSerVar.selectedFlightCombination.returnTripObj = renderedData.returnRenderedData[0];
									var selectedTripData = {
										onwardTrip: selectedDefaultOnward,
										returnTrip: selectedDefaultReturn,
										maps: flightComboSerVar.hashmap,
										uuid: flightComboSerVar.uuid,
										headerInfo: flightComboSerVar.headerInfo,
										totalFare: (parseFloat(renderedData.onwardRenderedData[0].jsonFlightPrice.up.totalFare) + parseFloat(renderedData.returnRenderedData[0].jsonFlightPrice.up.totalFare)).toFixed(2),
										uc: $t.setSelectedCurrency || 'SAR',
										pax: $t.baseData.searchCriteria.guest
										/*totalFare:parseInt(renderedData.onwardRenderedData[0].jsonFlightPrice.totalFare) + parseInt(renderedData.returnRenderedData[0].jsonFlightPrice.totalFare)*/
									}

									//flight by flight
									loadTemplate('fareCombination-selected-onward', selectedTripData, $('#selectedOnward'), flightComboSerVar.dynamicTemplate);
									loadTemplate('fareCombination-selected-return', selectedTripData, $('#selectedReturn'), flightComboSerVar.dynamicTemplate);
									loadTemplate('fareCombination-selected-price', selectedTripData, $('.price-details'), flightComboSerVar.dynamicTemplate);
									loadTemplate('fareCombination-selected-onwFlightInfo', selectedTripData, $('#selectedOnwFInfo'), $t.dynamicTemplate);
									loadTemplate('fareCombination-selected-retFlightInfo', selectedTripData, $('#selectedRetFInfo'), $t.dynamicTemplate);

									loadTemplate('flight-filter-view-fareCombo', flightComboSerVar.dynamicFilterdata, $('#filterFF'), flightComboSerVar.dynamicTemplate);

									flightComboSerVar.resetOnwardPriceSlider(flightComboSerVar.onwardFilterData);
									flightComboSerVar.resetReturnPriceSlider(flightComboSerVar.returnFilterData);

									_langGlobal.langInit(); // initialise i18n
									$('.dynamic_results_loader').hide();

									setTimeout(function () {
										ULlessMore(['airlineName-filter-list_FF', 'airlineName-filter-list_FFR', '_stopOverAirport-filter-list_FF', '_stopOverAirport-filter-list_FFR']);
									}, 2000);

									return callback();
								}
							]);

						/*$('#filterFF').show();
						$('#filterBO').hide();
						$('.filter-slider').hide();		*/

					});

				} else {
					if ($('.dynamic_results_loader').is(':visible')) {
						$('.dynamic_results_loader').hide();

					}

				}

				console.log('target:' + target);
				//alert(target);
			});

			$('body').on('click touchstart', '.fltResultsGridBrd li', function () {
				$(this).find('input:radio').prop('checked', true);
				flightServiceVar.dyanamicRadioSelection($(this));
			});

			/**
			 *Remove Filtered UI Element list
			 */
			$('body').on('click touchstart', '.youHaveFilteredFlight ._TabFilterRemove', function () {
				$('.dynamic_results_loader').show();
				var elm = $(this).parents('li');
				var id = elm.attr('data-id');
				var source = elm.attr('data-source');
				if (source == "stopsFilter") {
					var target = $($t.filterSelector.stops).parents('li').find('#' + id);
					var isDisabled = target.prop('disabled');
					if (isDisabled) {
						target.prop('checked', false);
						elm.remove();
					} else {
						target.trigger('click');
					}
				} else if (source == "airlineFilter") {
					var target = $($t.filterSelector.airline).parents('li').find('#' + id);
					var isDisabled = target.prop('disabled');
					if (isDisabled) {
						target.prop('checked', false);
						elm.remove();
					} else {
						target.trigger('click');
					}
				} else if (source == "airportStopOverFilter") {
					var target = $($t.filterSelector.stopOverAirports).parents('li').find('#' + id);
					var isDisabled = target.prop('disabled');
					if (isDisabled) {
						target.prop('checked', false);
						elm.remove();
					} else {
						target.trigger('click');
					}
				} else if (source == "returnAirportStopOverFilter") {
					var target = $($t.filterSelector.returnStopOverAirports).parents('li').find('#' + id);
					var isDisabled = target.prop('disabled');
					if (isDisabled) {
						target.prop('checked', false);
						elm.remove();
					} else {
						target.trigger('click');
					}
				} else if (source == "nearByAirportFilter") {
					var target = $($t.filterSelector.nearByAirport).parents('li').find('#' + id);
					var isDisabled = target.prop('disabled');
					if (isDisabled) {
						target.prop('checked', false);
						elm.remove();
					} else {
						target.trigger('click');
					}
				} else if (source == "airportDepartureTimeFilter") {
					var target = $($t.filterSelector.eventDeparture).parents('li').find('#' + id);
					var isDisabled = target.prop('disabled');
					if (isDisabled) {
						target.prop('checked', false);
						elm.remove();
					} else {
						target.trigger('click');
					}
				} else if (source == "airportArrivalTimeFilter") {
					var target = $($t.filterSelector.eventArrival).parents('li').find('#' + id);
					var isDisabled = target.prop('disabled');
					if (isDisabled) {
						target.prop('checked', false);
						elm.remove();
					} else {
						target.trigger('click');
					}
				} else if (source == "returnAirportDepartureTimeFilter") {
					var target = $($t.filterSelector.returnTripEventDeparture).parents('li').find('#' + id);
					var isDisabled = target.prop('disabled');
					if (isDisabled) {
						target.prop('checked', false);
						elm.remove();
					} else {
						target.trigger('click');
					}
				} else if (source == "returnAirportArrivalTimeFilter") {
					var target = $($t.filterSelector.returnTripEventArrival).parents('li').find('#' + id);
					var isDisabled = target.prop('disabled');
					if (isDisabled) {
						target.prop('checked', false);
						elm.remove();
					} else {
						target.trigger('click');
					}
				} else if (source == "priceSlider") {
					elm.remove();
					setTimeout(function () {
						$t.resetPriceSliderOnLoad();
						$t.render();
					}, 80);
				} else if (source == "fphAllianceFilter") {
					elm.remove();
					var target = $($t.filterSelector.fphAlliance).find('#'+id);
					target.trigger('click');
				}
			});
			setTimeout(function () {
				//$t.fresetPriceSlider($t.filterData);
			}, 80);
			//$t.render();
		},
		UIFilterSelected: function () {
			if (flightServiceVar.priceFilterMin != 0 && flightServiceVar.priceFilterMax != 0) {
				removeValueFromArr('priceSlider', 'price', flightServiceVar.filterUIArry);
				flightServiceVar.filterUIArry.push({
					source: 'priceSlider',
					value: 'price',
					id: '',
					display: "<span class='filtPrice'><span>" + this.getSelectedCurrency() + "</span> " + flightServiceVar.priceFilterMin + " - <span>" + this.getSelectedCurrency() + "</span> " + flightServiceVar.priceFilterMax + "</span>"
				});
			} else {
				removeValueFromArr('priceSlider', 'price', flightServiceVar.filterUIArry);
			}
			$('input[type="checkbox"]').each(function () {
				var source = $(this).attr('name');
				var value = $(this).val();
				var id = $(this).attr('id');
				var displayVal = "";
				if (source == "airlineFilter" || source == "airportStopOverFilter" || source == "returnAirportStopOverFilter" || source == "airportDepartureTimeFilter" || source == "returnAirportArrivalTimeFilter" || source == "returnAirportDepartureTimeFilter" || source == "airportArrivalTimeFilter" || source == "stopsFilter" || source == "nearByAirportFilter" || source=="fphAllianceFilter") {
					if ($(this).is(':checked')) {
						if (isFilterInArray(source, value, flightServiceVar.filterUIArry) == true) {
							if (source == "stopsFilter") {
								displayVal = stopsLangRender(value);
							} else if (source == "airportDepartureTimeFilter") {
								displayVal = cmnArrivalEventLangRender(value, i18n.t("departure"));
							} else if (source == "returnAirportDepartureTimeFilter") {
								displayVal = cmnArrivalEventLangRender(value,i18n.t("return"));
							} else if (source == "airportArrivalTimeFilter") {
								displayVal = cmnArrivalEventLangRender(value, i18n.t("arrival"));
							} else if (source == "returnAirportArrivalTimeFilter") {
								displayVal = cmnArrivalEventLangRender(value, i18n.t("return"));
							} else if (source == "airlineFilter") {
								displayVal = $(this).attr('data-aName');
							} else {
								displayVal = value;
							}
							flightServiceVar.filterUIArry.push({
								source: source,
								value: value,
								id: id,
								display: displayVal
							});
						}
					} else {
						if (source == "airportArrivalTimeFilter") {}
						removeValueFromArr(source, value, flightServiceVar.filterUIArry);
					}
				}
			});

			var s = $(this.filterSelector.fphAlliance);
			s.each(function () {
				var $this = $(this).find('input');
				var source = $this.attr('name');
				var value = $this.val();
				var id = $this.attr('id');
				if ($this.is(':checked')) {
					if (isFilterInArray(source, value, flightServiceVar.filterUIArry) == true) {
						flightServiceVar.filterUIArry.push({
							source: source,
							value: value,
							id: id,
							display: value
						});
					}
				} else if (isFilterInArray(source, value, flightServiceVar.filterUIArry) == false) {
					removeValueFromArr(source, value, flightServiceVar.filterUIArry);
				}

			});
			console.log('flightServiceVar.filterUIArry', flightServiceVar.filterUIArry);
			generateFilterUI(flightServiceVar.filterUIArry, 'youHaveFilteredFlight');
		},
		dyanamicRadioSelection: function (elm) {
			async.series([
					function (callback) {
						//$('.fltResults._slm').each(function(){
						$('.fltResults').each(function () {
							var $trgt = $(this).find('li');
							$trgt.removeClass('active');
							$(this).parents('.custom-flight-flow').removeClass('sel');
						});
						return callback();
					},
					function (callback) {
						var $target = elm.parents('.custom-flight-flow').find('.row').find('.fltResultsGrid');

						$target.each(function () {
							var opt = true;
							var $elmRadio = $(this).find('input[type=radio]');
							$elmRadio.each(function () {
								if ($(this).is(':checked') == true) {
									$(this).parents('li').addClass('active');
									$(this).parents('.custom-flight-flow').addClass('sel');
									opt = false;
								}
							});
							if (opt == true) {
								$($elmRadio[0]).prop('checked', true);
								$($elmRadio[0]).parents('li').addClass('active');
								$(this).parents('.custom-flight-flow').addClass('sel');
							}
						});
						return callback();
					},
					function (callback) {
						var $target = elm.parents('.item.primary-item').find('.row').find('.fltResultsGrid');
						$target.each(function () {
							var $elmRadio = $(this).find('input[type=radio]');
							$elmRadio.each(function () {
								if ($(this).is(':checked') == true) {

									$(this).parents('li').addClass('active');
									$(this).parents('.custom-flight-flow').addClass('sel');
									opt = false;
								}
							});

						});
						return callback();
					},
					function (callback) {
						flightServiceVar.generateBooknow(elm);
						return callback();
					}
				]);
		},
		resetPriceSliderOnLoad: function () {
			flightServiceVar.priceFilterMin = 0;
			flightServiceVar.priceFilterMax = 0;
			var priceList = flightServiceVar.getNONFPriceList();
			var min = 0;
			var max = 0;
			if (priceList.length > 0) {
				min = priceList[0];
				max = priceList[priceList.length - 1];
			}
			$(this.filterSelector.priceFilter).val(min + ';' + max);
			this.freRenderPrice(priceList);
		},
		getNONFPriceList: function () { //produce [lowest_price,lowest_price...]
			var pList = [];
			var priceData = flightServiceVar.baseObj;
			for (i in priceData) {
				var priceObj = priceData[i].jsonFlightPrice;
				if (typeof priceObj !== 'undefined') {
					var totalFare = priceObj.up.totalFare;
					pList.push(parseInt(totalFare));
				}
			}
			if (pList.length > 0) {
				for (var i = 0; i < pList.length; i++) {
					if (nn(pList[i], pList) == false) {
						pList.push(pList[i]);
					}
				}
			}
			pList.sort(function (a, b) {
				return a - b;
			});
			return pList;
		},
		generateBooknow: function (elm) {

			var $target = elm.parents('.item.primary-item').find('.row').find('.fltResultsGrid');
			var $uuid = elm.parents('.item.primary-item').attr('data-uuid');
			var $objID = elm.parents('.item.primary-item').attr('data-objectindex');
			var $booknowBtn = elm.parents('.item.primary-item').find('.priceGrid').find('._bkBtn');
			var $baggageBtn = elm.parents('.item.primary-item').find('.flightFootItemList').find('._bgdetails');
			var $fareRuleBtn = elm.parents('.item.primary-item').find('.fareRulesLink');
			async.series([
					function (callback) {
						var tripBookNow = {};
						var tripBooknowObjectIndex = {};
						var tripLegsIndex = '';
						$target.each(function () {
							var $elmRadio = $(this).find('input[type=radio]');
							$elmRadio.each(function () {
								if ($(this).is(':checked') == true) {
									if (tripLegsIndex !== '') {
										tripLegsIndex = tripLegsIndex + '|' + $(this).attr('data-index');
									} else {
										tripLegsIndex = $(this).attr('data-index');
									}
								}
							});
						});
						tripBooknowObjectIndex.indexID = $objID;
						tripBooknowObjectIndex.legIndex = tripLegsIndex;
						tripBooknowObjectIndex.uniqueId = $uuid;
						tripBooknowObjectIndex.fareRuleExists = $fareRuleBtn.length ? true : false;

						if (tripBooknowObjectIndex.indexID in fphService.fareRuleViewedInfo) {
							tripBooknowObjectIndex.fInfo = fphService.fareRuleViewedInfo[tripBooknowObjectIndex.indexID];

						}

						tripBookNow = tripBooknowObjectIndex;
						if (!$booknowBtn.hasClass('wego')) {
							//$booknowBtn.attr('onclick',"bookNowAll("+JSON.stringify(tripBookNow)+",this)");
							$booknowBtn.attr('data-indexID', $objID);
							$booknowBtn.attr('data-legIndex', tripLegsIndex);
						}
						return callback();
					},
					function (callback) {
						var t1,
						t2;
						$target.each(function (i) {
							var $elmRadio = $(this).find('input[type=radio]');
							$elmRadio.each(function () {
								if ($(this).is(':checked') == true) {
									if (i == 0) {
										t1 = $(this).attr('data-date');
									} else if (i == 1) {
										t2 = $(this).attr('data-date');
									}
								}
							});
						});
						var d1 = new Date(moment(t1));
						var d2 = new Date(moment(t2));
						if (typeof t2 != "undefined") {
							var timeDiff2 = d2.getTime() - d1.getTime();
							timeDiff2 = timeDiff2 / (1000 * 3600);
							//console.log(timeDiff2);
							if (timeDiff2 < 2) {
								$booknowBtn.attr('onclick', "tripError(this);");
							}
						}
						return callback();
					}
				]);
		},
		filterByAirlineName: function (value) { //Filter by Airline Name
			var i,
			j,
			item,
			array = JSON.parse(JSON.stringify(this.filterData)),
			reArray = [],
			holder,
			maps = this.hashmap;
			for (i = 0, j = array.length; i < j; i++) {
				var dPoint = false;
				item = array[i];
				for (e = 0; e < item.trips[0].length; e++) {
					holder = item.trips[0][e].jsonSector[0].marAirlineCode;
					if (typeof holder !== "undefined" && cmnFindexofSearch(holder, value) == true) {
						dPoint = true;
					} else {
						item.trips[0].splice(e, 1);
						e--;
					}
					var after = item.trips[0].length;
				}
				if (dPoint == true) {
					reArray.push(item);
				}

			}
			this.filterData = reArray;
		},
		updateFilghtCount: function () {
			var count = this.getRecordCount();
			var elm = $('#flightResultSortingPanel');
			elm.find('#_flightCount').html(count);
		},
		getRecordCount: function () {
			var d = this.filterData;
			var record = 0;
			for (var i in d) {
				record = record + parseInt(d[i].trips[0].length);
			}
			return record;
		},
		filterByAllianceName: function (value) { //Filter by Alliance Name


			var selectedAllainces = value;
			var airlinesUnderAlliance = [];

			if (jQuery.isEmptyObject(allianceAirlinesMap)) {

				for (i in ffp.en) {
					//ffp.en[i].airlineCode;
					var airlinesSupported = [];
					for (j in ffp.en[i].ffpPrgms) {
						airlinesSupported.push(ffp.en[i].ffpPrgms[j]);
					}
					allianceAirlinesMap[ffp.en[i].airlineCode] = airlinesSupported;
				}
			}

			for (i in selectedAllainces) {

				for (airline in allianceAirlinesMap[selectedAllainces[i]]) {

					airlinesUnderAlliance.push(allianceAirlinesMap[selectedAllainces[i]][airline]);

				}
			}

			// get Airline list
			/*  var airlineList = 	this.getAirlineList(this.functionNBASource()) ;

			for( i in airlineList){

			airLineMap[airlineList[i][1][1]] = airlineList[i][1][1] ;

			} */

			var i,
			j,
			item,
			array = this.filterData,
			reArray = [],
			holder;
			for (i = 0, j = array.length; i < j; i++) {
				var dPoint = false;
				item = array[i];
				for (e = 0; e < item.trips[0].length; e++) {
					holder = item.trips[0][e].jsonSector[0].marAirlineCode;
					/* console.log('holder');
					console.log(holder); */
					if (typeof holder !== "undefined" && cmnFindexofSearch(holder, airlinesUnderAlliance) == true) {
						dPoint = true;
					} else {
						item.trips[0].splice(e, 1);
						e--;
					}
					var after = item.trips[0].length;
				}
				if (dPoint == true) {
					reArray.push(item);
				}

			}

			this.filterData = reArray;
		},

		/**
		 *@description Method to process the final execution taking the base object
		 *@params Boolean
		 *@return Boolean
		 */
		render: function (priceRender, callback) {
			var $t = this;
			$t.filterData = JSON.parse(JSON.stringify($t.baseData.searchRes));
			/*
			 *initialize global scope for the filters
			 */
			var $airlinename = [];
			var $stops = [];
			var $airportStopover = [];
			var $nearByAirport = [];
			var $airlineDepartureEvent = [];
			var $airlineArrivalEvent = [];
			var $sortPrice = '';
			var $sortDuration = '';
			var $sortArrival = '';
			var $sortDeparture = '';
			var $minMaxPrice = [];

			async.series([
					function (callback) {
						//Airline name filter
						$airlinename = $t.getFilteredAirlineName();
						//Stops filter
						$stops = $t.getFilteredStops();
						//Airport Stopover filter
						$airportStopover = $t.getFilteredAirportStopOver();
						//Near By Airport filter
						$nearByAirport = $t.getFilteredNearby();
						//Departure Event filter
						$airlineDepartureEvent = $t.getFilteredDepartureEvent();
						//Arrival Event filter
						$airlineArrivalEvent = $t.getFilteredArrivalEvent();
						//Sort by price
						$sortPrice = $t.getPriceSortVal();
						//Sort by Duration
						$sortDuration = $t.getDurationSortVal();
						//Sort by Arrival Time
						$sortArrival = $t.getArrivalSortVal();
						//Sort by Departure Time
						$sortDeparture = $t.getDepartureSortVal();
						//Min/Max Price filter
						$minMaxPrice = $t.getFilteredPrice();
						$t.sortByPrice('asc');
						return callback();
					},
					function (callback) {

						if ($t.getArrivalCodeFromURL() != "") {
							$nearByAirport.push($t.getArrivalCodeFromURL());
						}
						if ($airlinename.length > 0) {
							$t.filterByAirlineName($airlinename);
						}

						if ($stops.length > 0) {
							$t.filterByStopOver($stops);
						}

						if ($airportStopover.length > 0) {
							$t.filterByAirportStopOver($airportStopover);
						}

						if ($nearByAirport.length > 0) {
							$t.filterNearByAirport($nearByAirport);
						}

						if ($airlineDepartureEvent.length > 0) {
							$t.filterByDepartureEvent($airlineDepartureEvent);
						}

						if ($airlineArrivalEvent.length > 0) {
							$t.filterByArrivalEvent($airlineArrivalEvent);
						}

						if ($sortPrice != "") {
							$t.sortByPrice($sortPrice);
						}

						if ($sortDuration != "") {
							$t.sortByDuration($sortDuration);
						}

						if ($sortArrival != "") {
							$t.sortByArrival($sortArrival);
						}

						if ($sortDeparture != "") {
							$t.sortByDeparture($sortDeparture);
						}

						if ($minMaxPrice != "") {
							$t.flightFilterByPrice($minMaxPrice);
						}

						return callback();
					}
				], function () {

				if (typeof $t.selectedPackage !== "undefined") {
					var flightDummy = JSON.parse(JSON.stringify($t.flightData));
					var filterDummy = JSON.parse(JSON.stringify($t.filterData));
					var selectedPackDummy = JSON.parse(JSON.stringify($t.selectedPackage));
					flightDummy.searchRes = filterDummy;
					flightDummy.travellers = fphService.travellerCount;
					var searchRes = flightDummy.searchRes;
					for (var i in searchRes) {
						searchRes[i].jsonFlightPrice.up.totalFare = parseFloat(searchRes[i].jsonFlightPrice.up.totalFare) - parseFloat(selectedPackDummy.flightItenary.jsonFlightPrice.up.totalFare);
						searchRes[i].jsonFlightPrice.up.mkp = parseFloat(searchRes[i].jsonFlightPrice.up.mkp) - parseFloat(selectedPackDummy.flightItenary.jsonFlightPrice.up.mkp);
						searchRes[i].jsonFlightPrice.up.disc = parseFloat(searchRes[i].jsonFlightPrice.up.disc) - parseFloat(selectedPackDummy.flightItenary.jsonFlightPrice.up.disc);

					}
					if (flightDummy.searchRes.length == 0) {
						$('.fphNoFilteredResults').attr('style', 'display:block');
					} else {
						$('.fphNoFilteredResults').attr('style', 'display:none');
					}
					flightServiceVar.loadTemplate('change_flight_template', flightDummy, $('._fphChangeFlight'), function () {
						ULTriplessMoreForLegs(['_flight_trip1', '_flight_trip2', '_flight_trip3'], function () {
							setTimeout(function () {
								var target = $('.priceGrid');
								target.each(function () {
									var containerHeight = $(this).parents('.item.primary-item').innerHeight();
									var fphPricePrt = $(this).find('.fphPricePrt').height();
									
									if(containerHeight>300){
										$(this).find('.mobileBooknow').css({
											'padding-top': (containerHeight) / 2 - fphPricePrt+70,
											'height': containerHeight
										});
									} else {
										$(this).find('.mobileBooknow').css({
											'padding-top': 20,
											'height': 310
										});
									}
									
									 
								});
							}, 80);
						});
						$.loadingPageAnimation();
						$('.tt').tooltip();
						pricetagConvert.init();
					});

					$(".flightResultContainer .fltResults .flightTo .plus1Date.tooltipCustom").mouseenter(function () {
						$(this).parent().addClass('toolTipOverlap')
					}).mouseleave(function () {
						$(this).parent().removeClass('toolTipOverlap')
					});
				}
				if (fphService.changeFlightShow) {
					$('._fphChangeFlight').show();
					var data = {
						flight: fphService.baseObj.flight,
						hotels: fphService.baseObj.hotel,
						priceMap: fphService.baseObj.priceMap,
						hotel: {
							searchRS: flightServiceVar.selectedPackage
						}
					}
					flightServiceVar.loadTemplate('fph-selected-package', data, $('._fphselectedPackage'));
					$('._fphselecteditem').show();
					$("._fphResultMain, .hotelResultSort, .fph_filters, #pagination, .youHaveFiltered, .sortSec.changeFlight").attr('style', 'display:none');
					$('.flight_filters, .sortSec.changeFlight, ._fphselectedPackage').attr('style', 'display:block');
					$t.updateFilghtCount();
					var offsetPopTop = $('.resultBlock').offset().top;
					$('html, body').animate({
						scrollTop: offsetPopTop
					}, 500);
				}
				if (priceRender) {
					$t.fresetPriceSlider($t.filterData);
				}
				flightServiceVar.updatePriceGrid();
				$t.UIFilterSelected();

			});
		},
		/**
		 *@description Price Filter Function
		 *@params Array (Price Filter Criteria [960,1250])
		 *@return null
		 */
		flightFilterByPrice: function (value) {
			var min = value[0];
			var max = value[1];

			var i,
			item,
			array = this.filterData,
			selectedPack = this.selectedPackage,
			reArray = [],
			holder;

			for (i in array) {
				item = array[i];
				holder = parseInt(parseFloat(array[i].jsonFlightPrice.up.totalFare) + parseFloat(array[i].jsonFlightPrice.up.mkp) - parseFloat(array[i].jsonFlightPrice.up.disc) +
						parseFloat(selectedPack.up.p) + parseFloat(selectedPack.up.mkp) - parseFloat(selectedPack.up.disc));
				if (min != 0 && max != 0) {
					if (typeof holder !== "undefined" && this.betweenSearch(holder, min, max) === true) {
						reArray.push(item);
					}
				} else {
					reArray.push(item);
				}
			}
			this.filterData = reArray;

		},
		betweenSearch: function (key, a, b) {
			var min = Math.min.apply(Math, [a, b]),
			max = Math.max.apply(Math, [a, b]);
			return key >= min && key <= max;
		},
		sortByDeparture: function (option) {
			var array = this.filterData;
			for (i in array) {
				for (j in array[i].trips[0]) {
					array[i].trips[0][j].departureMins = formatDate(array[i].trips[0][j].jsonSector[0].depDateAndTime, 'mins');
					array[i].trips[0][j].arrivalMins = formatDate(array[i].trips[0][j].jsonSector[array[i].trips[0][j].jsonSector.length - 1].arrDateAndTime, 'mins');
					if (typeof array[i].trips[0] != "undefined") {
						array[i].trips[0].sort(function (a, b) {
							a.departureMins - b.departureMins;
						});
					}
				}
			}
			if (option == "asc" || option == "") {
				array.sort(function (a, b) {
					return a.trips[0][0].departureMins - b.trips[0][0].departureMins;
				});
				this.filterData = array;
			} else if (option == "desc") {
				array.sort(function (a, b) {
					return b.trips[0][0].departureMins - a.trips[0][0].departureMins;
				});
				this.filterData = array;
			}
		},
		sortByArrival: function (option) {
			var array = this.filterData;
			for (i in array) {
				for (j in array[i].trips[0]) {
					array[i].trips[0][j].departureMins = formatDate(array[i].trips[0][j].jsonSector[0].depDateAndTime, 'mins');
					array[i].trips[0][j].arrivalMins = formatDate(array[i].trips[0][j].jsonSector[array[i].trips[0][j].jsonSector.length - 1].arrDateAndTime, 'mins');
					if (typeof array[i].trips[0] != "undefined") {
						array[i].trips[0].sort(function (a, b) {
							a.arrivalMins - b.arrivalMins;
						});
					}
				}
			}
			if (option == "asc") {
				array.sort(function (a, b) {
					return a.trips[0][0].arrivalMins - b.trips[0][0].arrivalMins;
				});
				this.filterData = array;
			} else if (option == "desc") {
				array.sort(function (a, b) {
					return b.trips[0][0].arrivalMins - a.trips[0][0].arrivalMins;
				});
				this.filterData = array;
			}
		},
		getFilteredPrice: function () {
			var s = $(this.filterSelector.priceFilter).val();
			if (typeof s !== 'undefined') {
				var minMaxArr = s.split(';') || [];
				var priceMin = parseInt(minMaxArr[0]) || 0;
				var priceMax = parseInt(minMaxArr[1]) || 0;
				return [priceMin, priceMax];
			} else {
				return [0, 0];
			}
		},
		setPriceMinMax: function (value) {
			flightServiceVar.priceFilterMin = value[0];
			flightServiceVar.priceFilterMax = value[1];
		},
		getArrivalSortVal: function () {
			var s = $(this.filterSelector.sortArrivalTime);
			return s.val();
		},
		getDepartureSortVal: function () {
			var s = $(this.filterSelector.sortDepartureTime);

			return s.val();
		},
		/**
		 *@description Sort By Duration
		 *@params String asc|desc
		 *@return null
		 */
		sortByDuration: function (option) {
			var array = this.filterData;
			if (option == "asc") {
				array.sort(function (a, b) {
					return a.trips[0][0].totalDurationMinutes - b.trips[0][0].totalDurationMinutes;
				});
				this.filterData = array;
			} else if (option == "desc") {
				array.sort(function (a, b) {
					return b.trips[0][0].totalDurationMinutes - a.trips[0][0].totalDurationMinutes;

				});
				this.filterData = array;
			}
		},
		getDurationSortVal: function () {
			var s = $(this.filterSelector.sortDuration);
			return s.val();
		},
		/**
		 *@description Sort By Price
		 *@params String asc|desc
		 *@return null
		 */
		sortByPrice: function (option) {
			var array = this.filterData;
			array.sort(function (a, b) {
				if (option == "asc") {
					return a.jsonFlightPrice.up.totalFare - b.jsonFlightPrice.up.totalFare;
				} else if (option == "desc") {
					return b.jsonFlightPrice.up.totalFare - a.jsonFlightPrice.up.totalFare;
				}
			});
			this.filterData = array;
		},
		getPriceSortVal: function () {
			var s = $(this.filterSelector.sortPrice);
			return s.val();
		},
		getFilteredDepartureEvent: function () {
			var s = $(this.filterSelector.eventDeparture);
			var departureEvent = [];
			s.each(function () {
				var $this = $(this);
				var $selVal = $.trim($this.val());
				if ($this.is(':checked')) {
					departureEvent.push($selVal);
				}
			});
			return departureEvent;
		},
		getFilteredArrivalEvent: function () {
			var s = $(this.filterSelector.eventArrival);
			var arrivalEvent = [];
			s.each(function () {
				var $this = $(this);
				var $selVal = $.trim($this.val());
				if ($this.is(':checked')) {
					arrivalEvent.push($selVal);
				}
			});
			return arrivalEvent;
		},
		getFilteredReturnTripDepartureEvent: function () {
			var s = $(this.filterSelector.returnTripEventDeparture);
			var departureEvent = [];
			s.each(function () {
				var $this = $(this);
				var $selVal = $.trim($this.val());
				if ($this.is(':checked')) {
					departureEvent.push($selVal);
				}
			});
			return departureEvent;
		},
		getFilteredReturnTripArrivalEvent: function () {
			var s = $(this.filterSelector.returnTripEventArrival);
			var arrivalEvent = [];
			s.each(function () {
				var $this = $(this);
				var $selVal = $.trim($this.val());
				if ($this.is(':checked')) {
					arrivalEvent.push($selVal);
				}
			});
			return arrivalEvent;
		},
		filterByDepartureEvent: function (value) {
			var i,
			j,
			item,
			array = this.filterData,
			reArray = [],
			holder;
			for (i = 0, j = array.length; i < j; i++) {
				var dPoint = false;
				item = JSON.parse(JSON.stringify(array[i]));
				for (e = 0; e < item.trips[0].length; e++) {
					holder = item.trips[0][e].departureEvent;
					if (typeof holder !== "undefined" && cmnFindexofSearch(holder, value) == true) {
						dPoint = true;
					} else {
						item.trips[0].splice(e, 1);
						e--;
					}
				}
				if (dPoint == true) {
					reArray.push(item);
				}
			}
			this.filterData = reArray;
		},
		filterByArrivalEvent: function (value) {
			var i,
			j,
			item,
			array = this.filterData,
			reArray = [],
			holder;
			for (i = 0, j = array.length; i < j; i++) {
				var dPoint = false;
				item = array[i]
					for (e = 0; e < item.trips[0].length; e++) {
						holder = item.trips[0][e].arrivalEvent;
						if (typeof holder !== "undefined" && cmnFindexofSearch(holder, value) == true) {
							dPoint = true;
						} else {
							item.trips[0].splice(e, 1);
							e--;
						}
					}
					if (dPoint == true) {
						reArray.push(item);
					}
			}
			this.filterData = reArray;
		},
		filterByReturnTripDepartureEvent: function (value) {
			var i,
			j,
			item,
			array = this.filterData,
			reArray = [],
			holder;
			for (i = 0, j = array.length; i < j; i++) {
				var dPoint = false;
				item = JSON.parse(JSON.stringify(array[i]));
				for (e = 0; e < item.trips[1].length; e++) {
					holder = item.trips[1][e].departureEvent;
					if (typeof holder !== "undefined" && cmnFindexofSearch(holder, value) == true) {
						dPoint = true;
					} else {
						item.trips[1].splice(e, 1);
						e--;
					}
				}
				if (dPoint == true) {
					reArray.push(item);
				}
			}
			this.filterData = reArray;
		},
		filterByReturnTripArrivalEvent: function (value) {
			var i,
			j,
			item,
			array = this.filterData,
			reArray = [],
			holder;
			for (i = 0, j = array.length; i < j; i++) {
				var dPoint = false;
				item = array[i]
					for (e = 0; e < item.trips[1].length; e++) {
						holder = item.trips[1][e].arrivalEvent;
						if (typeof holder !== "undefined" && cmnFindexofSearch(holder, value) == true) {
							dPoint = true;
						} else {
							item.trips[1].splice(e, 1);
							e--;
						}
					}
					if (dPoint == true) {
						reArray.push(item);
					}
			}
			this.filterData = reArray;
		},
		filterNearByAirport: function (value) { //Filter by Near by airport
			var dataArray = this.filterData,
			reArray = [];
			for (var i in dataArray) {
				var dPoint = false;
				for (var l in dataArray[i].trips[0]) {
					var airlineCodeException = dataArray[i].trips[0][l].jsonSector[0].marAirlineCode;
					var checkAirlineCode = this.getAirlineException();
					if ((cmnFindexofSearch(dataArray[i].trips[0][l].arrivalAirportCode, value) == true || nn(airlineCodeException, checkAirlineCode) == true)) {
						var dPoint = true;
					} else {
						dataArray[i].trips[0].splice(l, 1);
						l--;
					}
				}
				if (dPoint == true) {
					reArray.push(dataArray[i]);
				}
			}
			this.filterData = reArray;
		},
		filterByAirportStopOver: function (value) {
			var dataArray = this.filterData,
			reArray = [];
			for (var i in dataArray) {
				var dPoint = false;
				for (var l = 0; l < dataArray[i].trips[0].length; l++) {
					var stopOver = dataArray[i].trips[0][l].stopOverAirport;
					if (cmnIndexofSearchArr(value, stopOver) == true) {
						var dPoint = true;
					} else {
						dataArray[i].trips[0].splice(l, 1);
						l--;
					}
				}
				if (dPoint == true) {
					reArray.push(dataArray[i]);
				}
			}
			this.filterData = reArray;
		},
		filterByAirportReturnStopOver: function (value) {

			var dataArray = this.filterData,
			reArray = [];
			for (var i in dataArray) {
				var dPoint = false;
				for (var l = 0; l < dataArray[i].trips[1].length; l++) {
					var stopOver = dataArray[i].trips[1][l].stopOverAirport;
					if (cmnIndexofSearchArr(value, stopOver) == true) {
						var dPoint = true;
					} else {
						dataArray[i].trips[1].splice(l, 1);
						l--;
					}
				}
				if (dPoint == true) {
					reArray.push(dataArray[i]);
				}
			}
			this.filterData = reArray;
		},
		getFilteredAirportStopOver: function () {
			var s = $(this.filterSelector.stopOverAirports);
			var airportStopOver = [];
			s.each(function () {
				var $this = $(this);
				var $selVal = $.trim($this.val());
				if ($this.is(':checked')) {
					airportStopOver.push($selVal);
				}
			});
			return airportStopOver;
		},
		getFilteredReturnAirportStopOver: function () {
			var s = $(this.filterSelector.returnStopOverAirports);
			var airportStopOver = [];
			s.each(function () {
				var $this = $(this);
				var $selVal = $.trim($this.val());
				if ($this.is(':checked')) {
					airportStopOver.push($selVal);
				}
			});
			return airportStopOver;
		},
		getFilteredStops: function () {
			var s = $(this.filterSelector.stops);
			var stops = [];
			s.each(function () {
				var $this = $(this);
				var $selVal = $.trim($this.val());
				if ($this.is(':checked')) {
					stops.push($selVal);
				}
			});
			return stops;
		},
		filterByStopOver: function (value) { //Filter by Stop Over
			var i,
			j,
			item,
			array = this.filterData,
			reArray = [],
			holder;
			for (i = 0, j = array.length; i < j; i++) {
				var dPoint = false;
				var dPoint1 = false;
				item = array[i]
					for (e = 0; e < item.trips[0].length; e++) {
						holder = item.trips[0][e].jsonSector.length;
						if (typeof holder !== "undefined" && cmnFindexofSearch(holder, value) == true) {
							dPoint = true;
						} else {
							item.trips[0].splice(e, 1);
							e--;
						}
					}
					if (typeof item.trips[1] !== "undefined") {
						for (f = 0; f < item.trips[1].length; f++) {
							holder = item.trips[1][f].jsonSector.length;

							if (typeof holder !== "undefined" && cmnFindexofSearch(holder, value) == true) {
								dPoint1 = true;
							} else {
								item.trips[1].splice(f, 1);
								f--;
							}
						}

					}
					var tripType = cmnGetURLQueryStr('tripType');
				if (typeof tripType !== 'undefined' && tripType == 1) {
					if (dPoint == true) {
						reArray.push(item);
					}
				} else if (typeof tripType !== 'undefined' && tripType == 2) {
					if (dPoint == true && dPoint1 == true) {
						reArray.push(item);
					}
				}
			}
			this.filterData = reArray;
		},
		getFilteredAirlineName: function () {
			var s = $(this.filterSelector.airline);
			var gridItems = $(this.filterSelector.airlineGrid);
			gridItems.each(function () {
				var item = $(this).parents('.item');
				item.removeClass('active');
			});
			var filterByAirlineName = [];
			s.each(function () {
				var $this = $(this);
				var $selVal = $.trim($this.val());
				if ($this.is(':checked')) {
					gridItems.each(function () {
						if ($(this).attr('id') == $this.attr('attr-airlinecode')) {
							$(this).parents('.item').addClass('active');
						}
					});
					filterByAirlineName.push($selVal);
				}
			});
			return filterByAirlineName;
		},
		getFilteredAllianceName: function () {
			var s = $(this.filterSelector.ffpAlliance);
			var filteredAllianceName = [];
			s.each(function () {
				var $this = $(this);
				if ($this.hasClass('active')) {
					//console.log($this.attr('attr-alliance'));
					var $selVal = $this.attr('attr-alliance');

					/* 	$airlineGridIcons.each(function(){
					if($(this).attr('id')==$this.attr('attr-airlinecode')){
					$(this).parents('.item').addClass('active');
					}
					}); */
					filteredAllianceName.push($selVal);
				}
			});
			return filteredAllianceName;
		},
		/**
		 *@description Load template Content
		 *@param HTML Selector [dynamicTemplate(Dynamic template to Loaded)]
		 *@param String [templateID (Template ID)]
		 *@param data Array/Object [data(Json Data)]
		 *@param HTML Selector [toUpdate(Template to update)]
		 *@return
		 */
		loadTemplate: function (templateID, data, toUpdate, callback) {
			var result;
			//Load the template
			var template = tmpl($(this.dynamicTemplate).filter('#' + templateID).html(), data);
			var r = /\\u([\d\w]{4})/gi;
			template = template.replace(r, function (match, grp) {
					return String.fromCharCode(parseInt(grp, 16));
				});
			template = unescape(template);
			//Select result container
			if (typeof toUpdate === 'object') {
				result = toUpdate;
			} else {
				result = $('#' + toUpdate);
			}
			//Empty the result container
			result.empty();
			//Load data to the result container
			result.append(template);
			_langGlobal.langInit();

			if (typeof callback === 'function')
				return callback();

		},
		fresetPriceSlider: function (getFilterData) {
			var priceList = flightServiceVar.getPriceList();
			this.freRenderPrice(priceList);
		},
		freRenderPrice: function (data) {

			var currencyIcon = flightServiceVar.getSelectedCurrency();
			if (currencyIcon == "SAR") {
				currencyIcon = 'SAR';
			} else {
				currencyIcon = currencySymbols(currencyIcon);
			}
			if (data.length == 0 || data.length == 1) {
				//$(this.filterSelector.priceFilterSection).slideUp();
				$(this.filterSelector.priceFilterSection).hide();
			} else {
				$(this.filterSelector.priceFilterSection).slideDown();
			}
			if (slider2) {
				slider2.destroy();
				$(this.filterSelector.priceFilter).val(data[0] + ":" + data[data.length - 1]);
			}
			$range2 = $(this.filterSelector.priceFilter).ionRangeSlider({
					values: data,
					type: 'double',
					prefix: currencyIcon + " ",
					onFinish: function (obj) {
						priceMin = obj.from_value;
						priceMax = obj.to_value;
					}
				});
			slider2 = $range2.data("ionRangeSlider");
		},
		loadFilter: function () {
			var $t = this;
			var stopsList = $t.getStopsList();
			var NBA = $t.getNearByAirport();
			var stopOverAirports = $t.getStopOverAirport();
			var DAE = $t.getDAEvent();
			var AirlineNameWP = $t.airlineNameWithPrice();
			var priceList = $t.getPriceList();

			var data = {
				stopsList: stopsList,
				NBA: NBA,
				stopOverAirportlist: stopOverAirports.stopOverAirportList,
				stopOverReturnAirportlist: stopOverAirports.stopOverReturnAirportList,
				filterbyEventDeparture: DAE[0],
				filterbyEventArrival: DAE[1],
				filterbyReturnEventDeparture: DAE[2],
				filterbyReturnEventArrival: DAE[3],
				AirlineNameWP: AirlineNameWP
			};

			flightServiceVar.dynamicFilterdata = data;
		},
		fgenAirlineJunk: function (value) {
			var dataArray = JSON.parse(JSON.stringify(this.baseObj.searchRes)),
			reArray = [],
			packaRRAY = JSON.parse(JSON.stringify(this.selectedPackage));
			if (typeof packaRRAY.up !== "undefined") {
				packaRRAY.up.hotelFare = parseFloat(packaRRAY.up.p) + parseFloat(packaRRAY.up.mkp) - parseFloat(packaRRAY.up.disc);
				//var pList = [];
				var airlineName = [];
				var maps = this.hashmap;
				for (var i in dataArray) {
					var fromSec = dataArray[i].trips[0];
					var priceObj = dataArray[i].jsonFlightPrice;
					var totalFare = parseFloat(priceObj.up.totalFare) + parseFloat(priceObj.up.mkp) - parseFloat(priceObj.up.disc) + parseFloat(packaRRAY.up.hotelFare);
					for (var l in dataArray[i].trips[0]) {
						var airlineCodeException = dataArray[i].trips[0][l].jsonSector[0].marAirlineCode;
						var checkAirlineCode = this.getAirlineException();
						if (value !== "" && value.length > 0) {
							if (cmnFindexofSearch(dataArray[i].trips[0][l].arrivalAirportCode, value) == true || nn(airlineCodeException, checkAirlineCode) == true) {
								var arrivalAirportCode = dataArray[i].trips[0][l].jsonSector[dataArray[i].trips[0][l].jsonSector.length - 1].arrivalAirportCode;
								var segments = dataArray[i].trips[0][l].jsonSector[0];
								var aname = maps.airlineName[segments.marAirlineCode][lang];
								var aCode = segments.marAirlineCode;
								airlineName.push([aname, totalFare, aCode]);
							}
						} else {
							var arrivalAirportCode = dataArray[i].trips[0][l].jsonSector[dataArray[i].trips[0][l].jsonSector.length - 1].arrivalAirportCode;
							var segments = dataArray[i].trips[0][l].jsonSector[0];
							var aname = maps.airlineName[segments.marAirlineCode][lang];
							var aCode = segments.marAirlineCode;
							airlineName.push([aname, totalFare, aCode]);
						}
					}
				}
				return airlineName;
			}
		},
		getAirlineException: function () {
			//return ['G9'];
			return [];
		},
		getAirlineList: function (value) { //produce [Airline_name,lowest_price]...
			var array = this.fgenAirlineJunk(value);
			var map = {};
			var aCode = {};
			var airlineNamesWithPrice = [];
			for (var i = 0; i < array.length; i++) {
				if (array[i][0]in map) {
					map[array[i][0]].push([array[i][1], array[i][2]]);
				} else {
					map[array[i][0]] = [[array[i][1], array[i][2]]];
				}
			}
			for (var key in map) {
				var priceArr = map[key];
				var getLowest = priceArr.sort(function (a, b) {
						return a[0] - b[0];
					});
				airlineNamesWithPrice.push([key, getLowest[0], flightServiceVar.setSelectedCurrency]);
			}
			airlineNamesWithPrice.sort(function (a, b) {
				var upA = a[0].trim().toUpperCase();
				var upB = b[0].trim().toUpperCase();
				return (upA < upB) ? -1 : (upA > upB) ? 1 : 0;
			});
			return airlineNamesWithPrice;
		},
		getPriceList: function () { //produce [lowest_price,lowest_price...]

			var pList = [];
			var priceData = JSON.parse(JSON.stringify(this.filterData));
			var packaRRAY = JSON.parse(JSON.stringify(this.selectedPackage));
			if (typeof packaRRAY.up !== "undefined") {
				packaRRAY.up.hotelFare = parseFloat(packaRRAY.up.p) + parseFloat(packaRRAY.up.mkp) - parseFloat(packaRRAY.up.disc);
				for (i in priceData) {
					var priceObj = priceData[i].jsonFlightPrice;
					if (typeof priceObj !== 'undefined') {
						var totalFare = parseFloat(priceObj.up.totalFare) + parseFloat(priceObj.up.mkp) - parseFloat(priceObj.up.disc) + parseFloat(packaRRAY.up.hotelFare);
						pList.push(parseInt(totalFare));
					}
				}
				if (pList.length > 0) {
					for (var i = 0; i < pList.length; i++) {
						if (nn(pList[i], pList) == false) {
							pList.push(pList[i]);
						}
					}
				}
				pList.sort(function (a, b) {
					return a - b;
				});

				return pList;
			}
		},
		airlineNameWithPrice: function () {
			var airlineNameWithPrice = flightServiceVar.getAirlineList(flightServiceVar.functionNBASource());
			return airlineNameWithPrice;
		},
		getStopOverAirport: function () {
			/**
			 * Stop Over Final Array List
			 */
			var stopOverAirportList = [];
			var stopOverReturnAirportList = [];

			var stopOverAirports = {
				stopOverAirportList: [],
				stopOverReturnAirportList: []
			};
			/**
			 *Stop Over Airport Collection List Dummy
			 */
			var SACLD = [];

			var returnSACLD = [];
			/**
			 * Base Flight Response Object
			 */
			var baseFlightData = this.baseData.searchRes;
			/**
			 *Data map object
			 */

			var maps = this.hashmap;
			for (var i in baseFlightData) {
				var trip = baseFlightData[i].trips[0];
				var returnTrip = baseFlightData[i].trips[1] || [];
				for (var e in trip) {
					var segments = trip[e].jsonSector;
					for (var l = 0; l < segments.length - 1; l++) {
						var sector = segments[l];
						var stopOverAName = $.trim(maps.airportName[sector.arrAirportCode][lang]);
						var stopOverACode = $.trim(sector.arrAirportCode);
						if (nn(stopOverACode, SACLD) == false) {
							SACLD.push(stopOverACode);
							stopOverAirportList.push([stopOverAName, stopOverACode]);
						}
					}
				}
				for (var e in returnTrip) {
					var segments = returnTrip[e].jsonSector;
					for (var l = 0; l < segments.length - 1; l++) {
						var sector = segments[l];
						var stopOverAName = $.trim(maps.airportName[sector.arrAirportCode][lang]);
						var stopOverACode = $.trim(sector.arrAirportCode);
						if (nn(stopOverACode, returnSACLD) == false) {
							returnSACLD.push(stopOverACode);
							stopOverReturnAirportList.push([stopOverAName, stopOverACode]);
						}
					}
				}

			}

			stopOverAirports.stopOverAirportList = stopOverAirportList;
			stopOverAirports.stopOverReturnAirportList = stopOverReturnAirportList;

			return stopOverAirports;
		},
		getFFPList: function () {

			var airLineMap = {};
			var ffpMap = {};

			// get Airline list
			var airlineList = this.getAirlineList(this.functionNBASource());

			//
			for (i in airlineList) {

				airLineMap[airlineList[i][1][1]] = airlineList[i][1][1];

			}

			if ($('html').hasClass('arabic')) {
				for (ffPrgmArr in ffp.ar) {
					if (ffp.ar[ffPrgmArr].airlineCode in airLineMap) {

						for (ffPrgm in ffp.ar[ffPrgmArr].ffpPrgms) {
							if (ffPrgm in ffpMap) {
								ffpMap[ffp.ar[ffPrgmArr].ffpPrgms[ffPrgm]] = ffpMap[ffp.ar[ffPrgmArr].ffpPrgms[ffPrgm]] + ',' + ffp.ar[ffPrgmArr].airlineCode;
							} else {
								ffpMap[ffp.ar[ffPrgmArr].ffpPrgms[ffPrgm]] = ffp.ar[ffPrgmArr].airlineCode;

							}

						}
					}

				}
			} else {

				for (ffPrgmArr in ffp.en) {
					if (ffp.en[ffPrgmArr].airlineCode in airLineMap) {

						for (ffPrgm in ffp.en[ffPrgmArr].ffpPrgms) {
							if (ffPrgm in ffpMap) {
								ffpMap[ffp.en[ffPrgmArr].ffpPrgms[ffPrgm]] = ffpMap[ffp.en[ffPrgmArr].ffpPrgms[ffPrgm]] + ',' + ffp.en[ffPrgmArr].airlineCode;
							} else {
								ffpMap[ffp.en[ffPrgmArr].ffpPrgms[ffPrgm]] = ffp.en[ffPrgmArr].airlineCode;

							}

						}
					}

				}
			}

			return ffpMap;

		},
		getDAEvent: function () {
			var object = this.filterData;
			var FBEDepartureObjArray = [],
			FBED = [];
			var FBEArrivalObjArray = [],
			FBEA = [];
			var returnFBEDepartureObjArray = [],
			returnFBED = [];
			var returnFBEArrivalObjArray = [],
			returnFBEA = [];
			if (object.length > 0) {
				for (i in object) {
					var baseFromSec = object[i].trips[0];
					var returnBaseFromSec = object[i].trips[1] || [];
					for (var e = 0; e < baseFromSec.length; e++) {
						var departureLeg = baseFromSec[e].jsonSector[0];
						var arrivalLeg = baseFromSec[e].jsonSector[baseFromSec[e].jsonSector.length - 1];
						var departureEventTime = formatDate(departureLeg.depDateAndTime, 'events');
						var arrivalEventTime = formatDate(arrivalLeg.arrDateAndTime, 'events');
						//Set Departure Time
						if (nn(departureEventTime, FBEDepartureObjArray) === false) {
							FBED[departureEventTime] = [cmnDAEventLocalization(departureEventTime)];
							FBEDepartureObjArray.push(departureEventTime);
						}
						//Set Arrival Time
						if (nn(departureEventTime, FBEArrivalObjArray) === false) {
							FBEA[arrivalEventTime] = [cmnDAEventLocalization(arrivalEventTime)];
							FBEArrivalObjArray.push(arrivalEventTime);
						}
						//Set the values to the base sector
						baseFromSec[e].departureEvent = departureEventTime;
						baseFromSec[e].arrivalEvent = arrivalEventTime;

						//Set Total Duration
						var baseOnwardObj = baseFromSec[e];
						var dDT = formatDate(baseOnwardObj.jsonSector[0].depDateAndTime, 'mins');
						var aDT = formatDate(baseOnwardObj.jsonSector[baseOnwardObj.jsonSector.length - 1].arrDateAndTime, 'mins');
						baseOnwardObj.departureMins = dDT;
						baseOnwardObj.arrivalMins = aDT;
					}
					for (var e = 0; e < returnBaseFromSec.length; e++) {
						var departureLeg = returnBaseFromSec[e].jsonSector[0];
						var arrivalLeg = returnBaseFromSec[e].jsonSector[returnBaseFromSec[e].jsonSector.length - 1];
						var departureEventTime = formatDate(departureLeg.depDateAndTime, 'events');
						var arrivalEventTime = formatDate(arrivalLeg.arrDateAndTime, 'events');
						//Set Departure Time
						if (nn(departureEventTime, returnFBEDepartureObjArray) === false) {
							returnFBED[departureEventTime] = [cmnDAEventLocalization(departureEventTime)];
							returnFBEDepartureObjArray.push(departureEventTime);
						}
						//Set Arrival Time
						if (nn(departureEventTime, returnFBEArrivalObjArray) === false) {
							returnFBEA[arrivalEventTime] = [cmnDAEventLocalization(arrivalEventTime)];
							returnFBEArrivalObjArray.push(arrivalEventTime);
						}
						//Set the values to the base sector
						returnBaseFromSec[e].departureEvent = departureEventTime;
						returnBaseFromSec[e].arrivalEvent = arrivalEventTime;

						//Set Total Duration
						var baseOnwardObj = returnBaseFromSec[e];
						var dDT = formatDate(baseOnwardObj.jsonSector[0].depDateAndTime, 'mins');
						var aDT = formatDate(baseOnwardObj.jsonSector[baseOnwardObj.jsonSector.length - 1].arrDateAndTime, 'mins');
						baseOnwardObj.departureMins = dDT;
						baseOnwardObj.arrivalMins = aDT;
					}
				}
			}
			return [FBED, FBEA, returnFBED, returnFBEA];
		},
		getNearByAirport: function () {
			var nearByAirport = [],
			pricelist = [];
			var nearByAirportDummy = [];
			var urlNearbyIataCondition = true;
			var baseObj = this.filterData;
			var maps = this.hashmap;
			var nbAirportFromURL = this.getArrivalCodeFromURL();
			if (baseObj.length > 0) {
				for (i in baseObj) {
					var baseFromSec = baseObj[i].trips[0];
					for (var e = 0; e < baseFromSec.length; e++) {
						var NBAAirportName = maps.airportName[baseFromSec[e].jsonSector[baseFromSec[e].jsonSector.length - 1].arrAirportCode][lang];
						var NBAAirportCode = baseFromSec[e].jsonSector[baseFromSec[e].jsonSector.length - 1].arrAirportCode;
						baseFromSec[e].arrivalAirportCode = NBAAirportCode;
						if (nbAirportFromURL == NBAAirportCode) {
							urlNearbyIataCondition = false;
						}
						if (nbAirportFromURL != NBAAirportCode) {
							if (nn(NBAAirportCode, nearByAirportDummy) == false) {
								nearByAirportDummy.push(NBAAirportCode);
								nearByAirport.push([NBAAirportName, NBAAirportCode]);
							}
						}
					}
				}
			}
			/**
			 * Near by airport Price implementation
			 */
			for (var a in nearByAirport) {
				if (baseObj.length > 0) {
					for (i in baseObj) {
						var baseFromSec = baseObj[i].trips[0];
						for (var e = 0; e < baseFromSec.length; e++) {
							var NBAAirportCode = baseFromSec[e].jsonSector[baseFromSec[e].jsonSector.length - 1].arrAirportCode;
							if (baseFromSec[e].arrivalAirportCode === nearByAirport[a][1]) {
								if (nbAirportFromURL != NBAAirportCode) {
									pricelist.push([baseFromSec[e].arrivalAirportCode, Math.ceil(baseObj[i].jsonFlightPrice.up.totalFare)]);
								}
							}
						}
					}
				}
			}

			var map = {};
			var nbapricelist = [];
			for (var i = 0; i < pricelist.length; i++) {
				if (pricelist[i][0]in map) {
					map[pricelist[i][0]].push(pricelist[i][1]);
				} else {
					map[pricelist[i][0]] = [pricelist[i][1]];
				}
			}
			for (var key in map) {
				var priceArr = map[key];
				var getLowest = priceArr.sort(function (a, b) {
						return a[0] - b[0];
					});
				getLowest.sort(function (a, b) {
					return a - b;
				});
				nbapricelist.push([key, getLowest[0], i18n.t(currencySymbols(flightServiceVar.setSelectedCurrency))]);
			}
			var cur = i18n.t(currencySymbols(flightServiceVar.getSelectedCurrency()));
			for (var a in nearByAirport) {
				for (var b in nbapricelist) {
					if (nbapricelist[b][0] === nearByAirport[a][1]) {
						nearByAirport[a].push(nbapricelist[b][1], cur);
					}
				}
			}
			if (urlNearbyIataCondition == false) {
				this.urlNearbyIata = nbAirportFromURL;
			}
			return nearByAirport;
		},
		getStopsList: function () {
			var stopList = [];
			var countStops = 0;
			var packaRRAY = JSON.parse(JSON.stringify(this.selectedPackage));
			if (typeof packaRRAY.up !== "undefined") {
				packaRRAY.up.hotelFare = parseFloat(packaRRAY.up.p) + parseFloat(packaRRAY.up.mkp) - parseFloat(packaRRAY.up.disc);
				var nonStopFlightCount = 0,
				oneStopFlightCount = 0,
				twoStopFlightCount = 0,
				threeStopFlightCount = 0,
				fourStopFlightCount = 0,
				fiveStopFlightCount = 0;
				var nonStop = [],
				oneStop = [],
				twoStop = [],
				threeStop = [],
				fourStop = [],
				fiveStop = [],
				stopObj = {};
				var baseObject = this.filterData;
				var nonStopKey = i18n.t("nonStop");
				var oneStopKey = i18n.t("oneStopKey");
				var twoStopKey = i18n.t("twoStopKey");
				var threeStopKey = i18n.t("threeStopKey");
				var fourStopKey = i18n.t("fourStopKey");
				var fiveStopKey = i18n.t("fiveStopKey");
				async.parallel([
						function (callback) {
							for (var i = 0; i < baseObject.length; i++) {
								for (var j = 0; j < baseObject[i].trips[0].length; j++) {
									var f = baseObject[i].trips[0][j].jsonSector;
									var totalFare = parseFloat(baseObject[i].jsonFlightPrice.up.totalFare) + parseFloat(baseObject[i].jsonFlightPrice.up.mkp) - parseFloat(baseObject[i].jsonFlightPrice.up.disc) + parseFloat(packaRRAY.up.hotelFare);
									if (f.length == 1) {
										nonStopFlightCount = nonStopFlightCount + 1;
										nonStop.push(totalFare);
									}
									if (f.length == 2) {
										oneStopFlightCount = oneStopFlightCount + 1;
										oneStop.push(totalFare);
									}
									if (f.length == 3) {
										twoStopFlightCount = twoStopFlightCount + 1;
										twoStop.push(totalFare);
									}
									if (f.length == 4) {
										threeStopFlightCount = threeStopFlightCount + 1;
										threeStop.push(totalFare);
									}
									if (f.length == 5) {
										fourStopFlightCount = fourStopFlightCount + 1;
										fourStop.push(totalFare);
									}
									if (f.length == 6) {
										fiveStopFlightCount = fiveStopFlightCount + 1;
										fiveStop.push(totalFare);
									}
								}
							}

							stopObj[nonStopKey] = nonStop;
							stopObj[oneStopKey] = oneStop;
							stopObj[twoStopKey] = twoStop;
							stopObj[threeStopKey] = threeStop;
							stopObj[fourStopKey] = fourStop;
							stopObj[fiveStopKey] = fiveStop;
							return callback();
						},
						function (callback) {
							for (var v in stopObj) {
								var _SOC = {
									key: "",
									lowPrice: "",
									keyVal: 0
								};
								stopList.push({
									key: 'currency',
									value: flightServiceVar.getSelectedCurrency()
								});
								if (typeof stopObj[v] !== 'undefined' && stopObj[v].length > 0) {
									_SOC.key = v;
									_SOC.lowPrice = flightServiceVar.getStops(stopObj[v]);
									switch (v) {
									case nonStopKey:
										_SOC.keyVal = 1;
										_SOC.flightsCount = nonStopFlightCount;
										break;
									case oneStopKey:
										_SOC.keyVal = 2;
										_SOC.flightsCount = oneStopFlightCount;
										break;
									case twoStopKey:
										_SOC.keyVal = 3;
										_SOC.flightsCount = twoStopFlightCount;
										break;
									case threeStopKey:
										_SOC.keyVal = 4;
										_SOC.flightsCount = threeStopFlightCount;
										break;
									case fourStopKey:
										_SOC.keyVal = 5;
										_SOC.flightsCount = fourStopFlightCount;
										break;
									case fiveStopKey:
										_SOC.keyVal = 6;
										_SOC.flightsCount = fiveStopFlightCount;
										break;
									}
									if (_SOC.keyVal !== 'undefined' && _SOC.keyVal > 0) {
										countStops++;
									}
									stopList.push(_SOC);
								}
							}
							return callback();
						}
					]);
				return stopList;
			}
		},
		getStops: function (array) {
			var outPut = [];
			if (typeof array !== 'undefined' && array.length > 0) {
				outPut = array.sort(function (a, b) {
						return a - b;
					});
			}
			return outPut[0];
		},
		getArrivalCodeFromURL: function () {
			var NBIATA = flightServiceVar.getArrStr();
			var i,
			j,
			item,
			array = this.filterData,
			holder,
			condition = false;
			for (i = 0, j = array.length; i < j; i++) {
				var dPoint = false;
				item = array[i];
				holder = item.trips[0][item.trips[0].length - 1].arrivalAirportCode;
				if (typeof holder !== "undefined" && holder === NBIATA) {
					condition = true;
				}
			}
			if (condition == true) {
				return flightServiceVar.getArrStr();
			} else {
				return '';
			}
		},
		/**
		 * Method to get URL query string
		 * @param Query Key
		 * @returns
		 */
		getArrStr: function () {
			var arr = cmnGetURLQueryStr('arriveDetails');
			return arr;
		},

		functionNBASource: function () {
			var NBA = this.urlNearbyIata;
			var GFNA = this.getFilteredNearby();
			var RES = [];
			if (GFNA.length > 0) {
				RES = GFNA;
			}
			if (typeof NBA !== 'undefined' && NBA != "") {
				RES.push(NBA);
			}
			return RES;
		},
		getFilteredNearby: function () {
			var nearby = [];
			var s = $(this.filterSelector.nearByAirport);
			s.each(function () {
				var $this = $(this);
				var $selVal = $.trim($this.val());
				if ($this.is(':checked')) {
					nearby.push($selVal);
				}
			});
			return nearby;
		},
		updatePriceGrid: function () {
			var target = $('.priceGrid');
			target.each(function () {
				$(this).find('.mobileBooknow').removeAttr('style');
				var containerHeight = $(this).parents('.item.primary-item').innerHeight();
				var fphPricePrt = $(this).find('.fphPricePrt').height();
				
					if(containerHeight>300){
						$(this).find('.mobileBooknow').css({
							'padding-top': (containerHeight) / 2 - fphPricePrt+70,
							'height': containerHeight
						});
					} else {
						$(this).find('.mobileBooknow').css({
							'padding-top': 20,
							'height': 310
						});
					}
				
				 
			});
		}
	}
}
	());
/**
 * @description on click email voucher
 */
$('body').on('click', '._fphSendvoucher', function () {
	var email = $('._guestEmail').val();
	var bkngRef = $(this).attr('data-bookingRef');
	if (email === '') {
		growl_alert(i18n.t("enteruremail"));
		$('._guestEmail').addClass('error');
		return false;
	} else {
		if (email !== '') {
			if (!_evl(email)) {
				growl_alert(i18n.t("errEmaiAdd"));
				$('._guestEmail').addClass('error');
				return false;
			}
		}
		if (email !== '' && bkngRef !== null) {
			var data = {
				email: email,
				bkngRef: bkngRef

			}
			$.post('/fph/sendVoucher', {
				data: data
			}, function (res) {
				console.log(res);
				if (res !== null && res.status === "SUCCESS") {
					growl_alert(i18n.t("checkEmailVoucher"));
					$('.alert_custom').addClass('alert-success');
				} else {
					growl_alert(i18n.t("failed"));
				}
			});
		}

	}
});

$('body').on('click', '.editUserFPH', function () {

	$('._fnameEdit').val($(this).attr('data-fname'));
	$('._lnameEdit').val($(this).attr('data-lname'));
	$('._mnameEdit').val($(this).attr('data-mname'));
	$('._idEdit').val($(this).attr('data-id'));
});

//change hotel functionality in flight results page
/*$('body').on('click', '._changeHotel', function () {
	window.history.back();
});*/

function paymentConfigureFPH(sadad, payfort, installment, payAtStore, paymentObj, showCheckOut, checkout) {

	if (paymentObj.showPayfort) {
		payfort.show();
		$('._payfortBody').show();
	} else {
		payfort.hide();
		payfort.removeClass('active');
	}
	if(paymentObj.showCheckout){
		checkout.show();
		$('._checkoutBody').show();
	}else{
		checkout.hide();
		checkout.removeClass('active');
	}

	if (paymentObj.showSadad) {
		sadad.show();
	} else {
		sadad.hide();
	}

	if (paymentObj.showInstallment) {
		installment.show();
	} else {
		installment.hide();
	}

	payAtStore.hide();

	if (paymentObj.showCheckout && showCheckOut) {
		checkout.show();
	} else {
		checkout.hide();
	}

}

//fph result page flight cancellation policies
function fphFlightFareReq(data, elm) {
	$(elm).parents('.infoStrip').find('.expandContent').slideToggle().toggleClass('open');
	$('.fareRulesLink').toggleClass('active');
	if (!$('.fareRulesDetails').is(':visible')) {
		$(elm).parents('.fltDetails').find('.fareRulesDetails').hide();
		$(elm).parents('.fltDetails').find('.loadingFare').show();
	}
	$(elm).parents('.fltDetails').find('.fareRulesLink').removeClass('loader');
	var $this = $(this);
	$this.addClass('loader');
	$this.removeClass('.fareRulesLink');
	var usc = fphService.setSelectedCurrency;
	var currency = fphService.cExR[usc];
	var ccobj = {};
	var cx = fphService.cExR;
	for (var j in cx) {
		ccobj[j] = parseFloat(cx[j]) / parseFloat(currency);
	}
	var fareRuleIndexId = data.indexID;
	var args = {
		echotoken: data.echoToken,
		index: data.indexID,
		changeFlight: $("#changeFlightFlag").val()
	};
	if (typeof fphService.fareRuleViewedInfo !== "undefined" && !(fareRuleIndexId in fphService.fareRuleViewedInfo)) {
		$.post('/fph/flightCancellationPolicy', args, function (res) {
			$(elm).parents('.fltDetails').find('.loadingFare').hide();
			$(elm).parents('.fltDetails').find('.fareRulesDetails').show();
			if (res) {
				var fareObj = {};
				fareObj.isoCurrency = res.isoCurrency;
				fareObj.cchrgs = res.cchrgs;
				fareObj.reischrgs = res.reischrgs;
				$(elm).parents('.fltDetails').find('.expandContent .cchrgs').text(usc + "  " + (parseFloat(fareObj.cchrgs) * parseFloat(ccobj[fareObj.isoCurrency])).toFixed(2));
				$(elm).parents('.fltDetails').find('.expandContent .reischrgs').text(usc + "  " + (parseFloat(fareObj.reischrgs) * parseFloat(ccobj[fareObj.isoCurrency])).toFixed(2));
			} else {
				$(elm).parents('.fltDetails').find('.fareRulesDetails').text(i18n.t('selectedFlightFareRule'));
			}
			fphService.fareRuleViewedInfo[fareRuleIndexId] = fareObj;
		});
	} else {
		$(elm).parents('.fltDetails').find('.loadingFare').hide();
		$(elm).parents('.fltDetails').find('.fareRulesDetails').show();
		if (typeof fphService.fareRuleViewedInfo[fareRuleIndexId] !== "undefined" && fphService.fareRuleViewedInfo[fareRuleIndexId].cchrgs && fphService.fareRuleViewedInfo[fareRuleIndexId].reischrgs) {
			$(elm).parents('.fltDetails').find('.expandContent .cchrgs').text(usc + "  " + (parseFloat(fphService.fareRuleViewedInfo[fareRuleIndexId].cchrgs) * parseFloat(ccobj[fphService.fareRuleViewedInfo[fareRuleIndexId].isoCurrency])).toFixed(2));
			$(elm).parents('.fltDetails').find('.expandContent .reischrgs').text(usc + "  " + (parseFloat(fphService.fareRuleViewedInfo[fareRuleIndexId].reischrgs) * parseFloat(ccobj[fphService.fareRuleViewedInfo[fareRuleIndexId].isoCurrency])).toFixed(2));
		} else {
			$(elm).parents('.fltDetails').find('.fareRulesDetails').text(i18n.t('selectedFlightFareRule'));
		}
	}
};

/*$('body').on('click','._addToTrip',function(){

var echoToken=$(this).attr('data_echoToken');
var index=$(this).attr('data_index');
var crossProductId=$('#_fphProductId').val();
$.get('/transfer/checkAvailability',{echoToken:echoToken,index:index,crossProductId:crossProductId},function(res){
console.log(res);
var params={echoToken:echoToken,productId:res.productId,crossProductId:crossProductId,crossProduct:'FPH'};
$.get('/transfer/transferPreBookRequest',params,function(res){
$.get('/payment/generateShasign',{pid:res.productId},function(shaResposne){
console.log('shaResposne ',shaResposne);
window.open('/transfer/review?pid='+res.productId+'&echoToken='+echoToken);

});

});

})
});
$('body').on('click','._transferConfirmation',function(){
console.log('_transferConfirmation');
var echoToken=$(this).attr('data_echoToken');
var productId=$(this).attr('data_productId');
var crossProductId=$('#_crossProductId').val();
var params={echoToken:echoToken,productId:productId,crossProductId:crossProductId,crossProduct:'FPH'};
$.get('/transfer/transferPreBookRequest',params,function(res){
console.log(res);
$.get('/transfer/transferBookRequest',{echoToken:echoToken,productId:productId},function(res){
window.location.href='/transfer/confirmation?pid='+productId+'&echoToken='+echoToken;
//$.get('/transfer/confirmation',{pid:productId,echoToken:echoToken});
});

})

});*/

/* FOOTBALL MATCHES TICKES */

/* FOOTBALL MATCHES TICKES */

// DO NOT BUY
$("body").on("click", "#donotbuy", function () {
	if ($(this).is(":checked") == true) {
		resetAlhilal();
	}
});

function resetAlhilal() {
	var packageActualPrice = $("._tPackage").attr("data-wdp")
		var actualPrice = $("._tFair").attr("data-p");
	$('._tPackage').text(packageActualPrice);
	$('._tFair').text(actualPrice);
	$("#alhilalticketid").val(null)
	$("#numoftickets").val(null)
	$("#alhilaltktCode").val(null);
	$('._numOfTickets').val('');
	$('.flightClass').hide();
	$('.alhTkt').hide();
}

$('body').on('change', '._fphAlhilal, ._numOfTickets', function () {
	var $t = $(this);
	if ($t.hasClass('tktradio') && $t.find('#donotbuy').length == 0) {
		resetAlhilal();
	} else if ($t.hasClass('_numOfTickets')) {
		$t.parents('.tktvar').find('#peconomy').prop('checked', true);
		$('.tktvar').each(function () {
			if ($(this)[0] !== $t.parents('.tktvar')[0]) {
				$(this).find('._numOfTickets').val('');
			}
		});
		// price calculation
		var ticketid = $(this).attr('data_ticketId');
		var ticketCode = $(this).attr('data_ticketCode');
		var numOfPassenger = $(this).val();
		var price = $(this).attr('data_ticketPrice');
		var ticketPrice = numOfPassenger * price;
		var totalPriceLabel = $(this).parents(".tktvar").find('._ticketPrice');
		$(totalPriceLabel).text(totalPrice);
		$("#alhilalticketid").val(ticketid);
		$("#numoftickets").val(numOfPassenger);
		$("#alhilaltktCode").val(ticketCode);

		// tickets add to flight summary
		var ticketSelection = $(this).parents(".tktvar").find(".tktradio, .ticket");
		var packagePrice = $('._tPackage').attr('data-wdp');
		var totalPrice = $('._tFair').attr('data-p');

		if ($(ticketSelection).is(":checked") == true) {
			// tickets type and numberof tickets add to flight summary
			var ticketType = $(this).attr('data_ticketType');
			$(".alhTkt").text(ticketType + " " + "Ticket" + "-" + numOfPassenger);
			$("._ticket").text(ticketType + " " + "Ticket" + "-" + numOfPassenger);
			//$("._userCur").text(i18n.t(userCurrency));
			$("._userPrice").text(ticketPrice);
			//
			var packageFinalPrice = parseFloat(packagePrice) + ticketPrice;
			var totalUpdatedPrice = parseFloat(totalPrice) + ticketPrice
				// var totalPriceStr = '<strong>'+price.toFixed(2)+'</strong>';
				//$('._tFair').text(packagePrice);
				$('._tFair').text(totalUpdatedPrice.toFixed(2));
			//$('._tPackage').html('<strong>'+packageFinalPrice.toFixed(2)+'</strong>');
			//update the summary page
			var data_p = $('._tFair').attr('data-p');
			var data_wdp = $('._tPackage').attr('data-wdp');
			$(".alhTkt").show();
			$(".totalFair").show();

			//update paybutton
			var payArr = $('#paymeBtn').val().split(' ');
			if (lang == "ar") {
				payArr[1] = totalUpdatedPrice.toFixed(2);
			} else {
				payArr[2] = totalUpdatedPrice.toFixed(2);
			}
			$('#paymeBtn').val(payArr[0] + ' ' + payArr[1] + ' ' + payArr[2]);
			pricetagConvert.init();

		}
		pricetagConvert.init();
	}

});

/*$("body").on('change',"._numOfTickets",function(){
// price calculation

var ticketid = $(this).attr('data_ticketId');
var ticketCode=$(this).attr('data_ticketCode');
var numOfPassenger = $(this).val();
var price = $(this).attr('data_ticketPrice');
var ticketPrice = numOfPassenger*price;
var totalPriceLabel = $(this).parents(".tktvar").find('._ticketPrice');
$(totalPriceLabel).text(totalPrice);
$("#alhilalticketid").val(ticketid);
$("#numoftickets").val(numOfPassenger);
$("#alhilaltktCode").val(ticketCode);

// tickets add to flight summary
var ticketSelection = $(this).parents(".tktvar").find(".ticket");
if($(this).val()!=""){
ticketSelection.trigger('click');
}else{
ticketSelection.prop("checked",false);
}
var packagePrice= $('._tPackage').attr('data-wdp');
var totalPrice= $('._tFair').attr('data-p');

if($(ticketSelection).is(":checked")==true){
// tickets type and numberof tickets add to flight summary
var ticketType = $(this).attr('data_ticketType');
$(".alhTkt").text(ticketType+" "+"Ticket"+"-"+numOfPassenger);
$("._ticket").text(ticketType+" "+"Ticket"+"-"+numOfPassenger);
//$("._userCur").text(i18n.t(userCurrency));
$("._userPrice").text(ticketPrice);
//
var packageFinalPrice =	parseFloat(packagePrice)+ticketPrice;
var totalUpdatedPrice =	parseFloat(totalPrice)+ticketPrice
// var totalPriceStr = '<strong>'+price.toFixed(2)+'</strong>';
//$('._tFair').text(packagePrice);
$('._tFair').text(totalUpdatedPrice.toFixed(2));
$('._tPackage').html('<strong>'+packageFinalPrice.toFixed(2)+'</strong>');
//update the summary page
var data_p= $('._tFair').attr('data-p');
var data_wdp= $('._tPackage').attr('data-wdp');
$(".alhTkt").show();
$(".totalFair").show();

//update paybutton
var payArr=$('#paymeBtn').val().split(' ');
if(lang=="ar"){
payArr[1]=totalUpdatedPrice.toFixed(2);
}else{
payArr[2]=totalUpdatedPrice.toFixed(2);
}
$('#paymeBtn').val(payArr[0]+' '+payArr[1]+' '+payArr[2]);
pricetagConvert.init();

}else{

var packageActualPrice = $("._tPackage").attr("data-wdp")
var actualPrice = $("._tFair").attr("data-p");
$('._tPackage').text(packageActualPrice);
$('._tFair').text(actualPrice);
$(".alhTkt").hide();
// $("._ticket").hide();
// $("._userPrice").hide();
// console.log($(".alhTkt"));


}
pricetagConvert.init();
});*/
/*FPH NATIONALITY INFORMATION*/
if ($("._userPassportInfo").is(":visible") == true) {
	$("._fphNationalityInformation").hide();
}

//hotel continue action
$('body').on('click', '.fphHotcontBtn', function () {
	fphContToFlght(JSON.parse($(this).siblings(".contSelFltData").val()));
	//$('#_bodyContainer').empty();
	//$.loadingPageAnimation('show', 'FPH', 'Flight');
	$('.fromToDest').html(i18n.t('weAreSeaching') +' <br/><strong>' + unicodeConverter(fphService.cityNames[0])+'</strong> ' + i18n.t('to') +' <strong>' +unicodeConverter(fphService.cityNames[1])+'</strong>'); 
	
	$('.fbfLoad').fadeIn(function(){
		$('.fInfo').show();
	});
	fphService.token = $(this).attr('data_token');
	fphService.hotelId = $(this).attr('data_uid');
	fphService.echoToken = $(this).attr('data_echoToken');
	var url = window.location.href;
	if(url.indexOf('page=flights')<0){
		url = url + '&page=flights';
	}
	
	fphService.flightsRefresh = false;
	router.navigate(url, true);
});

function fphFlightsRender() {
	var lang = $('html').attr('data-lang');
	dynamicJsCssLoading('landing' + (lang == "en" ? "" : '-' + lang) + '.css', '/common/themes/v2/css/results' + (lang == "en" ? "" : '-' + lang) + '.css', 'css');
	dynamicJsCssLoading('alHilal' + (lang == "en" ? "" : '-' + lang) + '.css', '/common/themes/v2/css/results' + (lang == "en" ? "" : '-' + lang) + '.css', 'css');
	dynamicJsCssLoading('tistahel' + (lang == "en" ? "" : '-' + lang) + '.css', '/common/themes/v2/css/results' + (lang == "en" ? "" : '-' + lang) + '.css', 'css');
			
	fphService.isActive = true;	
	if (fphService.flightsRefresh) {		
		$.get('/fph/resultStatic', {}, function (template) {					
			document.getElementById("_bodyContainer").innerHTML = template;
			document.close();
			fphService.iataCodes=[];
			fphService.iataCodes.push(cmnGetURLQueryStr('depCityId'));
			fphService.iataCodes.push(cmnGetURLQueryStr('arrCityId'));
			fphService.getCityNames(fphService.iataCodes, function(error, cityNames){				
				$('.fromToDest').html(i18n.t('weAreSeaching') +' <br/><strong>' + unicodeConverter(cityNames[0])+'</strong> ' + i18n.t('to') +' <strong>' +unicodeConverter(cityNames[1])+'</strong>'); 
				$('.fbfLoad').fadeIn();
			});
				
		});
		
		$.get(window.location.href + "&fphisoView=true", {
			v: Math.random(),
			homeSearch: fphService.homeSearch
		}, function (res) {
			if (res.flightsPage) {
				//window.history.back();
				if (typeof router !== "undefined") {
				  router.navigate(res.searchUrl, true);
				}
			} else {
				$.get('/common/themes/v2/tmpl/fph/packageFlightResults.ejs?v=nd-v0102', {}, function (flightTemplate) {
								fphService.flightTemplate = flightTemplate;
					});
					
					setTimeout(function(){
						populateFlights(res);
					},1000);
				
			}
		});
	} else {
		var args = {
			token: fphService.token,
			hotelId: fphService.hotelId,
			echoToken:fphService.echoToken
		}
		$.post('/fph/selectflight', args, function (res) {
			if (res.status == 'FAIL') {
				window.history.back();
				return;
			} else {
				populateFlights(res);
			}

		});

	}
}
function populateFlights(res) { 
	console.log('res', res);
	flightServiceVar.baseObj = JSON.parse(JSON.stringify(res)) 

		$.get('/common/themes/v2/tmpl/fph/packageFlightResults.ejs?v=nd-v0102', {}, function (flightTemplate) {			
			fphService.dynamicTemplate = flightTemplate;
			async.parallel([				
				function(callback){
					fphService.loadTemplate('flight_desktop_header', res, $('.modifyBlock'),function(){
						callback(null, null);
					});
				}, function (callback) {
					fphService.loadTemplate('fph_desktop_selectedHotel', res, $('.fphhotelInfo'), function () {
						callback(null, null);
					});
				}, function (callback) {
					/*if (res.selectedFlight) {
						fphService.loadTemplate('fph_desktop_selectedFlight', res, $('.slectpkgRevw .fltResults .fphfltInfo'), function () {
						});
					}*/
					callback(null, null);
				}, function(callback){
						fphService.loadTemplate('fph_desktop_price_section', res, $('.PkgPricDtls'), function () {
							callback(null, null);
						});
						
				}, function(callback){
					fphService.loadTemplate('fph_desktop_flightFilters', res.flights, $('.spflight.filterSec .filters'), function () {
						callback(null, null);
					});

				}, function(callback){
					fphService.loadTemplate('fph_desktop_flightResults', res, $('.flightResultContainer'),function(){
						callback(null, null);
					});
					
				}],function(error, results){
					
				loadJssorSlider();

				window.setTimeout(function () {
					$(".fphSelBar .htlBar").addClass("selected").find('.content').text(i18n.t('hotelSelected'));					
				}, 500);
				
					/* 	function setEqualHeight(columns)
				 {
				 var tallestcolumn = 0;
				 columns.each(
				 function()
				 {
				 currentHeight = $(this).height();
				 if(currentHeight > tallestcolumn)
				 {
				 tallestcolumn  = currentHeight;
				 }
				 }
				 );
				 columns.height(tallestcolumn);
				 }
				$(document).ready(function() {
				setTimeout(function(){ setEqualHeight($(".slectpkgRevw > li"));},5000);
				});
				  */
				
				window.setTimeout(function () {
					$(".fphSelBar .fltBar").addClass('active');
				}, 1800);
				$(".pkgRevwDtls").delay(2200).slideDown(600);
				$(".slectpkgRevw .hotel").addClass("added")
				$(".slectpkgRevw .hotel .fphhotelInfo").fadeOut().delay(2700).fadeIn(500);
				$(".slectpkgRevw .fltResults").fadeOut().delay(3200).fadeIn(500);
				$(".slectpkgRevw .PkgPricDtls").fadeOut().delay(3600).fadeIn(500);
				//set the flight count
				$('.foundFlt').find('elm').text(res.flights.flightFilters.flightCount);
				initFlightFilter(res);
				flightServiceVar.init();				
				pricetagConvert.init();	
				//loadSwapFunction();	
				//$.loadingPageAnimation();
				waitForElement('.priceGrid',function(){
				ULTriplessMoreForLegs(['_flight_trip1', '_flight_trip2', '_flight_trip3'], function () {
				setTimeout(function () {
					ULlessMore(['airlineName-filter-list','_stopOverAirport-filter-list','_returnStopOverAirport-filter-list']);
					var target = $('.priceGrid');
					target.each(function () {
						var containerHeight = $(this).parents('.item.primary-item').innerHeight();
						var fphPricePrt = $(this).find('.fphPricePrt').height();
						
						if(containerHeight>300){
							$(this).find('.mobileBooknow').css({
								'padding-top': (containerHeight) / 2 - fphPricePrt+70,
								'height': containerHeight
							});
						} else {
							$(this).find('.mobileBooknow').css({
								'padding-top': 20,
								'height': 310
							});
						}
							
							}); 
					}, 4000);
					});
					
				});
				
						$("#fphHotel").fadeOut(function () {
							$("#fphFlight").fadeIn();
							$('.modifySearch, .modifySearch .fph, .pkgSelBlock').slideDown();							
							$("body, html").animate({
								scrollTop: $("header").position().top
							});
						setTimeout(function () {
								$('#fphHotelResult').slideDown();	
						},2500);	
								$('.fbfLoad .fInfo').fadeOut(function(){
									$('.fbfLoad .fcSuccess').fadeIn();
									$('.fbfLoad .fcSuccess small').text(i18n.t('loadedFltRlt'));
								}); 
								setTimeout(function(){
									$('.fbfLoad').fadeOut();
									$('.fbfLoad .fcSuccess').hide();
									modifySearchData(res);
									initPredictiveSearchComponent();
								},3000) ;
						});
						 
					$('.tt').tooltip();
				});	
			
		});	
}



//on click on select button in flight results page
$("body").on("click", ".fphSelFltBtn", function () {
	var $t = $(this);
	if (flightServiceVar.checkEmpty($t) == true) {	
	waitForIndex($t,function(){		
		var data = {
			token: $t.attr('data-token'),
			index: $t.attr('data-indexid'),
			legIndices: $t.attr('data-legindex')
		}
		$("._fphChangeHotel").attr('data-token',data.token);
		$("._fphChangeHotel").attr('data-indexid',data.index);
		
		//$("._fphChangeHotel").attr('data-legindex',legIndices);
		$.post('/fph/selectPackage', data, function (response) {
		if (response.status == 'FAIL') {
			window.location.reload();
			return;
		}
		if (response.status == 'SUCCESS') {
			$.get('/common/themes/v2/tmpl/fph/packageFlightResults.ejs?v=nd-v0102', {}, function (template) {
				fphService.loadTemplate('fph_desktop_selectedFlight', response, $('.slectpkgRevw .fltResults .fphfltInfo'), function () {
					fphService.loadTemplate('fph_update_price_section', response, $('.PkgPricDtls'));
					$(".fphSelBar .fltBar").addClass("selected").find('.content').text(i18n.t('flightSelected'));
					$(".slectpkgRevw .fltResults .slctflt").remove();
					$(".fpHotBtn").removeAttr('disabled');					
					$("body, html").animate({
						scrollTop: $(".pkgSelBlock").position().top
					});
					/*if ($(".fltResults").hasClass("added")==true){
						$('.fbfLoad').hide();
					}else{
						$('.fbfLoad').fadeIn();
					}*/
					$('.fbfLoad').fadeIn();	

					$('.fbfLoad .fInfo').fadeOut(function(){
						$('.fbfLoad .fcSuccess').fadeIn();
						$('.fbfLoad .fcSuccess small').text(i18n.t('addedFltPack'));
						$('.fbfLoad .fphError').hide();
						$('._fphChangeHotel').show();
					}); 
					$(".slectpkgRevw .fltResults").addClass("added");
					window.setTimeout(function () {
						$(".fltResults .fltCont").fadeIn(500);
					}, 500);
					window.setTimeout(function () {
						$('.fbfLoad').fadeOut();
					}, 2000);
					
					pricetagConvert.init();
				});
			});
			
		}
	});

	});

}else{
	growl_alert(i18n.t("pleaseSelectFlight"));
}

});
loadJssorSlider=function(){
	                                var _SlideshowTransitions = [
                                        //Rotate HFork in
                                        {
                                            $Duration : 1200,
                                            x : 1,
                                            y : 2,
                                            $Cols : 2,
                                            $Zoom : 11,
                                            $Rotate : 1,
                                            $Assembly : 2049,
                                            $ChessMode : {
                                                $Column : 19
                                            },
                                            $Easing : {
                                                $Left : $JssorEasing$.$EaseInCubic,
                                                $Top : $JssorEasing$.$EaseInCubic,
                                                $Zoom : $JssorEasing$.$EaseInCubic,
                                                $Opacity : $JssorEasing$.$EaseOutQuad,
                                                $Rotate : $JssorEasing$.$EaseInCubic
                                            },
                                            $Opacity : 2,
                                            $Round : {
                                                $Rotate : 0.8
                                            }
                                        } ];

                                        var options = {
                                            $AutoPlay : false, //[Optional] Whether to auto play, to enable slideshow, this option must be set to true, default value is false
                                            $AutoPlayInterval : 1500, //[Optional] Interval (in milliseconds) to go for next slide since the previous stopped if the slider is auto playing, default value is 3000
                                            $PauseOnHover : 1, //[Optional] Whether to pause when mouse over if a slider is auto playing, 0 no pause, 1 pause for desktop, 2 pause for touch device, 3 pause for desktop and touch device, 4 freeze for desktop, 8 freeze for touch device, 12 freeze for desktop and touch device, default value is 1

                                            $DragOrientation : 3, //[Optional] Orientation to drag slide, 0 no drag, 1 horizental, 2 vertical, 3 either, default value is 1 (Note that the $DragOrientation should be the same as $PlayOrientation when $DisplayPieces is greater than 1, or parking position is not 0)
                                            $ArrowKeyNavigation : true, //[Optional] Allows keyboard (arrow key) navigation or not, default value is false
                                            $SlideDuration : 600, //Specifies default duration (swipe) for slide in milliseconds

                                            $SlideshowOptions : { //[Optional] Options to specify and enable slideshow or not
                                                $Class : $JssorSlideshowRunner$, //[Required] Class to create instance of slideshow
                                                $Transitions : _SlideshowTransitions, //[Required] An array of slideshow transitions to play slideshow
                                                $TransitionsOrder : 1, //[Optional] The way to choose transition to play slide, 1 Sequence, 0 Random
                                                $ShowLink : true
                                            //[Optional] Whether to bring slide link on top of the slider when slideshow is running, default value is false
                                            },

                                            $ArrowNavigatorOptions : { //[Optional] Options to specify and enable arrow navigator or not
                                                $Class : $JssorArrowNavigator$, //[Requried] Class to create arrow navigator instance
                                                $ChanceToShow : 1, //[Required] 0 Never, 1 Mouse Over, 2 Always
                                                $AutoCenter : 2, //[Optional] Auto center navigator in parent container, 0 None, 1 Horizontal, 2 Vertical, 3 Both, default value is 0
                                                $Steps : 1
                                            //[Optional] Steps to go for each navigation request, default value is 1
                                            },

                                            $ThumbnailNavigatorOptions : { //[Optional] Options to specify and enable thumbnail navigator or not
                                                $Class : $JssorThumbnailNavigator$, //[Required] Class to create thumbnail navigator instance
                                                $ChanceToShow : 2, //[Required] 0 Never, 1 Mouse Over, 2 Always

                                                $ActionMode : 1, //[Optional] 0 None, 1 act by click, 2 act by mouse hover, 3 both, default value is 1
                                                $Lanes : 4, //[Optional] Specify lanes to arrange thumbnails, default value is 1
                                                $SpacingX : 0, //[Optional] Horizontal space between each thumbnail in pixel, default value is 0
                                                $SpacingY : 0, //[Optional] Vertical space between each thumbnail in pixel, default value is 0
                                                $DisplayPieces : 3, //[Optional] Number of pieces to display, default value is 1
                                                $ParkingPosition : 156, //[Optional] The offset position to park thumbnail
                                                $Orientation : 2
                                            //[Optional] Orientation to arrange thumbnails, 1 horizental, 2 vertical, default value is 1
                                            }
                                        };

                                        var jssor_slider1 = new $JssorSlider$(
                                                "slider1_container", options);
                                        //responsive code begin
                                        //you can remove responsive code if you don't want the slider scales while window resizes
                                        function ScaleSlider() {
                                            var parentWidth = jssor_slider1.$Elmt.parentNode.clientWidth;
                                            if (parentWidth)
                                                jssor_slider1.$ScaleWidth(Math
                                                        .max(Math.min(
                                                                parentWidth,
                                                                1180), 300));
                                            else
                                                window.setTimeout(ScaleSlider,
                                                        30);
                                        }
                                        ScaleSlider();

                                        $(window).bind("load", ScaleSlider);
                                        $(window).bind("resize", ScaleSlider);
                                        $(window).bind("orientationchange",
                                                ScaleSlider);
                                        //responsive code end
}

function stopsLangRender(value){
	var language_data = "";
	if(value!=""){
		switch(value){
			case '0':
				language_data = i18n.t("nonStop");
				break;
			case '1':
				language_data = i18n.t("oneStopKey");
				break;
			case '2':
				language_data = i18n.t("twoStopKey");
				break;
		}
	}
	return language_data;
}


$('body').on('click','._changeFlight',function(){
	$(this).addClass('ldr');
	var html = '<div class="fphfltInfo"><div class="slctflt"><span class="flaticon-black401"></span>'+i18n.t('Selectedyourflight')+'</div></div>';
	$('.slectpkgRevw .fltResults .fphfltInfo').html(html);
	$(".fphSelBar .fltBar").removeClass("selected").find('.content').text(i18n.t('selectflight'));
	fphService.loadTemplate('fph_desktop_price_section', flightServiceVar.baseObj, $('.PkgPricDtls'));
	if($("#fphHotel").is(':visible')){
		var args = {
			token: $(this).attr('data_token')
		}
		$.post('/fph/changeFlight', args, function (res) {
			
			loadFlights(res);
			waitForElement('.priceGrid',function(){
				ULTriplessMoreForLegs(['_flight_trip1', '_flight_trip2', '_flight_trip3'], function () {
				setTimeout(function () {
					ULlessMore(['airlineName-filter-list','_stopOverAirport-filter-list','_returnStopOverAirport-filter-list']);
					var target = $('.priceGrid');
					target.each(function () {
						var containerHeight = $(this).parents('.item.primary-item').innerHeight();
						var fphPricePrt = $(this).find('.fphPricePrt').height();
						
						if(containerHeight>350){
							$(this).find('.mobileBooknow').css({
								'padding-top': (containerHeight) / 2 - fphPricePrt+70,
								'height': containerHeight
							});
						} else {
							$(this).find('.mobileBooknow').css({
								'padding-top': 20,
								'height': 360
							});
						}
							
							}); 
					}, 4000);
					});
					
				});
		});
		/*$("#fphHotel").fadeOut(function () {
			$("#fphFlight").fadeIn();			
		});*/
	}
	
});
$('body').on('click','._flightDetails',function(){
	var $t = $(this);
	var index = $(this).attr('data-objectindex');
	var legIndex = $(this).attr('data-index');
	var inBound = parseInt($(this).attr('data-inBound'));
	var target = $t.parents('.legResult').find('.fltDetails');
	
	flightServiceVar.getSelectedFlight(index, legIndex, inBound, function(error,selectedFlight){
		if(selectedFlight){
				data = {
					flights :{
						maps : flightServiceVar.baseObj.flights.maps
					},
					selectedFlight : selectedFlight
				}	
			fphService.loadTemplate('flight_details',data,target,function(){
					$('.fltDetails').hide();
					$(target).attr('style', 'display:block');
					//target.attr('style', 'display:block');
					$('.tt').tooltip();
			});
		}
	});
});

 
 $('body').on('click','._faredtlscls',function(){ 
$('.fltDetails1').hide();
 });

 function waitForIndex(elm, callback){ 	 		
 	if($(elm).attr('data-indexid') == ''){
 		window.setTimeout(function(){
 			waitForIndex(elm, callback);
 		},500); 		
 	}else{
 		callback(null, 'SUCCESS'); 		
 	}
 }

 /* HOTEL AND FLIGHT FAIL POPUP */
 var searchUrl =null;
 var removeuid = null;
 function packageNotAvailabel(searchUrl, removeuid){
	showSesssionExpiryPopup();
	$("#showSesssionExpiryPopup").find(".proTitle").html(i18n.t('weAreSorry')+"!");
	$("#showSesssionExpiryPopup").find("p").html(i18n.t('dueToHighDemandPackageNotAvailable'));
	$("#showSesssionExpiryPopup").find(".buttons").html("<a href='"+searchUrl+'removeuid='+removeuid+"' class='btn btn-sm _bkBtn'>"+i18n.t('changepackage')+"</a>");
	setTimeout(function(){      
	window.location.href = searchUrl+'removeuid='+removeuid; }, 60000);	
 }
 			 	

  /* HOTEL AND FLIGHT FAIL POPUP */


/**
 * change hotel
 * @params
 */
$('body').on('click', '._fphChangeHotel', function () {
	//$('.fphSelBar li.htlBar.active.selected .bar').removeClass('selected');
	$(this).addClass('ldr');
	var attr = {
		token: $(this).attr('data-token'),
		index: $(this).attr('data-indexid'),
		flightSelected: false
	}
	var HSTORE = store.get('H' + attr.token);
	if ($('._changeFlight').length) {
		attr.flightSelected = true;
	}
	$.post('/fph/changeHotel', attr, function (res) {
		if(res.status=='FAIL'){
			window.location.reload();		
		}else{
			loadHotels(res,false);
		}
	});
});
function loadHotels(res,str){
	var response=res.data;
	fphService.filterData = response.hotel.searchRS;
	fphService.baseObj = JSON.parse(JSON.stringify(res));
	$.get('/common/themes/v2/tmpl/fph/packageHotelResults.ejs?v=nd-v0102', {}, function (template) {
		fphService.dynamicTemplate = template;
		fphService.loadTemplate('fph_desktop_landmarks', response.hotel.landMarkData, $('._landmark'));
		fphService.loadTemplate('fph_desktop_hotelresults', res, $('#list-view'), function () {
			setTimeout(function () {
				ULlessMore(['_accType_filter_template', '_area_filter_template', '_hotelChain_filter_template']);
				$('#packageCount').text(res.data.hotel.searchRS.length);
			}, 80);
		});
		fphService.loadTemplate('fph_desktop_hotelFilters', { maps: response.hotel.maps, currency: res.currency }, $('.hotel .filters'));
		pricetagConvert.init();
		initPackageFilter(res, true);
		fphService.newInit();
		if(str){
			fphService.init();
		}		
		fphService.getHotDeal();
		
		$("#fphFlight").fadeOut(function () {
			$("#fphHotel").fadeIn();
			$('.modifySearch, .hotelResultSort, #fphHotelResult, .pkgSelBlock').show();
			$("body, html").animate({
				scrollTop: $("header").position().top
			});
			$('._apxBooknow').removeClass('LoadBtn');
			$('._apxBooknow').text(i18n.t('continue'));
			// growl_alert(i18n.t('selectedflightnotavailable'));
			var html = '<div class="fphhotelInfo1"><div class="slctflt"><span class="hotelion"></span>' + i18n.t('slctYrHotel') + '</div></div>';
			$('.slectpkgRevw .fphadddtls .fphhotelInfo').html(html);
			$(".fphSelBar .htlBar").removeClass("selected").find('.content').text(i18n.t('selecthotel'));
			$('._changeFlight').hide();
			$(".fpHotBtn").attr("disabled", 'disabled');
			$('.fpHotBtn').removeClass('_apxBooknow');
			setTimeout(function () {
				$('#fphHotelResult').slideDown();
			}, 2500);

		});
	});
}
$("body").on("click", "._selectHotelBtn", function () {
	var args = {
		token: $(this).attr('data_token'),
		hotelId: $(this).attr('data_uid'),
		echoToken: $(this).attr('data_echoToken'),
	}
	$('.fbfLoad').fadeIn();
	$("._changeFlight").attr('data_token',args.token);
	
	$.post('/fph/changeHotelSelected', args, function (response) {
		
		if (response.status == 'FAIL') {
			window.location.reload();
			return;
		}
		if (response.status == 'SUCCESS') {
			//populateFlights(response,true);
			$.get('/common/themes/v2/tmpl/fph/packageFlightResults.ejs?v=nd-v0102', {}, function (template) {
				fphService.dynamicTemplate = template;
				flightServiceVar.dynamicTemplate = template;
				fphService.loadTemplate('fph_desktop_selectedHotel', response, $('.fphhotelInfo'), function () {
					loadJssorSlider();
					fphService.loadTemplate('fph_update_price_section', response, $('.PkgPricDtls'));
					//$(".fphSelBar .fltBar").addClass("selected").find('.content').text(i18n.t('flightSelected'));
					$(".fphSelBar .htlBar").addClass("selected").find('.content').text(i18n.t('hotelSelected'));
					$(".slectpkgRevw .fltResults .slctflt").remove();
					$(".fpHotBtn").removeAttr('disabled');
					$("body, html").animate({
						scrollTop: $(".pkgSelBlock").position().top
					});

					

					$('.fbfLoad .fInfo').fadeOut(function () {
						$('.fbfLoad .fcSuccess').fadeIn();
						$('.fbfLoad .fcSuccess small').text(i18n.t('addYrHtlPackg'));
						$('.fbfLoad .fphError').hide();
					});
					$(".slectpkgRevw .fltResults").addClass("added");
					window.setTimeout(function () {
						$(".fltResults .fltCont").fadeIn(500);
					}, 500);
					window.setTimeout(function () {
						$('.fbfLoad').fadeOut();
						$('._changeFlight').show();
					}, 2000);

					pricetagConvert.init();
				});
			});

		}

	})
});
function loadFlights(res){
	$.get('/common/themes/v2/tmpl/fph/packageFlightResults.ejs?v=nd-v0102', {}, function (template) {
				fphService.dynamicTemplate = template;
				flightServiceVar.dynamicTemplate = template;
				
				fphService.loadTemplate('fph_desktop_flightResults', res, $('.flightResultContainer'), function () {
					fphService.loadTemplate('fph_desktop_flightFilters', res.flights, $('.spflight.filterSec .filters'));
					fphService.loadTemplate('fph_desktop_price_section', res, $('.PkgPricDtls'));
					initFlightFilter(res);
					//$(".fphSelBar .fltBar").addClass("selected").find('.content').text(i18n.t('flightSelected'));
					$(".fphSelBar .htlBar").addClass("selected").find('.content').text(i18n.t('hotelSelected'));
					//$(".slectpkgRevw .fltResults .slctflt").remove();
					//$(".fpHotBtn").removeAttr('disabled');
					$("body, html").animate({
						scrollTop: $(".pkgSelBlock").position().top
					});

					$("#fphHotel").fadeOut(function () {
						$("#fphFlight").fadeIn();
					});
					//$(".slectpkgRevw .fltResults").addClass("added");
					window.setTimeout(function () {
						$(".fltResults .fltCont").fadeIn(500);
					}, 500);
					window.setTimeout(function () {
						$('.fbfLoad').fadeOut();
						$('._changeFlight').show();
						$('._fphChangeHotel').hide();
					}, 2000);

					pricetagConvert.init();
				});
			});
}
var slider, $range, FJS;
//global parents object
var BASE_RES=null;
//array of hotels global object
var HOTELS=null;BASE_HOTELS=null;
//search Criteria
var SEARCH_CRITERIA=null;
function initPackageFilter(res,reset){
	if(reset){
		BASE_RES=JSON.parse(JSON.stringify(res));;
		BASE_HOTELS=BASE_RES.data.hotel.searchRS;
		HOTELS=JSON.parse(JSON.stringify(BASE_HOTELS));
		SEARCH_CRITERIA=BASE_RES.data.hotel.searchCriteria;

	}
	var hotels=res.data.hotel.searchRS;
	var packPrices=res.data.hotel.maps.packPrices
	initSliders();

	var checkbox_filters = [{
		field: 'filters.star',
		ele: '#_starRating_template input:checkbox'
	},
	{
		field: 'filters.district.key',
		ele: '#_area_filter_template input:checkbox'
	},
	{
		field: 'filters.deals.hotDeal',
		ele: '#_hotDeal_filter_template input:checkbox',

	},
	{
		field: 'filters.accommodation',
		ele: '#_accType_filter_template input:checkbox'
	},
	{
		field: 'filters.chain.key',
		ele: '#_hotelChain_filter_template input:checkbox'
	}, {
			field: 'packagePrice',
			ele: '#_price_fliterh',
			type: 'range'
		}
	];	
	if(FJS){
		FJS.unbindEvents(hotels);

	}
	
	FJS = FilterJS(hotels, '', {
		template: '',
		//search: {ele: '#searchbox'},
		callbacks: {
			afterFilter: afterFilter
		}
	});	
	

	$.each(checkbox_filters, function(i, filter) {

		FJS.addCriteria(filter);
	});
	function afterFilter(result, jQ) {		
		if(result && result.length == 0){			
			$('.fphNoFilteredResults').show();
			$('.fphResultContainer').hide();
			fphService.HUIFilterSelected();
		}else{
			FJS.removeCriteria('packagePrice');	
			HOTELS=result;
			res.data.hotel.searchRS=result;
			if(fphService.priceSliderFltr){			
				var priceList = fphService.priceListGenFare(result);			
				fphService.resetPriceSilder(priceList, res.currency);

			}
			fphService.HUIFilterSelected();
			fphService.loadTemplate('fph_desktop_hotelresults',res,$('.fphResultContainer'),function(){
				//$('.fphNoFilteredResults').hide();
				//$('.fphResultContainer').show();
				pricetagConvert.init();
				var priceSliderCriteria = {
				field: 'packagePrice',
				ele: '#_price_fliterh',
				type: 'range'
			}
			FJS.addCriteria(priceSliderCriteria);
			});
			$('.fphNoFilteredResults').hide();
			$('.fphResultContainer').show();
			$('#packageCount').text(res.data.hotel.searchRS.length);
		}
	};

	function initSliders() {		
		if(packPrices.length==0 || packPrices.length==1){
			$("#_price-filter-section").hide();
		}else{		
			$("#_price-filter-section").slideDown();
		}
		if(slider){
			slider.destroy();
			$("#_price_fliterh").val(packPrices[0]+":"+packPrices[packPrices.length -1]);
		}
		$range = $("#_price_fliterh").ionRangeSlider({
			values: packPrices,
			range: true,
			type: 'double',
			prefix: "<span>"+i18n.t(res.currency)+"</span> ",
			onChange: function () {
				fphService.priceSliderFltr = false;
			},
			onFinish: function (obj){
				priceMin = obj.from_value;
				priceMax = obj.to_value;
			}
		});
		slider = $range.data("ionRangeSlider");
	}


	//-------------------END OF THE INIT FUNCTION----------------//
};
/**
 * sort hotels by star rating and price
 */
$('body').on('change','#_fphSortSelect',function () {
	
	var FJSHOTELS=FJS.Model.records;
	var type = $(this).find(':selected').attr('data-type');
	var val  = $(this).val();
	if("_sortRating"==type){
		if('asc'==val){
			HOTELS.sort(function(a,b){
				return a.filters.star-b.filters.star;
			});
			FJSHOTELS.sort(function(a,b){
				return a.filters.star-b.filters.star;
			});
		}else{
			HOTELS.sort(function(a,b){
				return b.filters.star-a.filters.star;
			});
			FJSHOTELS.sort(function(a,b){
				return b.filters.star-a.filters.star;
			});
		}
		BASE_RES.data.hotel.searchRS=HOTELS;
	}
	if("_sortPrice"==type){
		if('asc'==val){
			HOTELS.sort(function(a,b){
				return a.packagePrice-b.packagePrice;
			});
			FJSHOTELS.sort(function(a,b){
				return a.packagePrice-b.packagePrice;
			});
		}else{
			HOTELS.sort(function(a,b){
				return b.packagePrice-a.packagePrice;
			});
			FJSHOTELS.sort(function(a,b){
				return b.packagePrice-a.packagePrice;
			});
		}
		BASE_RES.data.hotel.searchRS=HOTELS;
	}
	if("_recommended"==type){
		BASE_RES.data.hotel.searchRS=BASE_HOTELS;
	}
	fphService.loadTemplate('fph_desktop_hotelresults',BASE_RES,$('.fphResultContainer'),function(){
		pricetagConvert.init();
		BASE_RES.data.hotel.searchRS=BASE_HOTELS;
		//initPackageFilter(BASE_RES,false)
	});
});
//near by hotels
$('body').on('click','.map-wrap a.fph-near-hotels',function(e){

	var $this = $(this);
	var lat=$(this).attr('data-lat');
	var lng=$(this).attr('data-lng');
	var hotel=$(this).attr('data-hname');
	var token = $(this).attr('data_token');
	var echoToken = $(this).attr('data_echotoken');

	var nHotel = $this.parents('section.hotel-info').find('.nearHotel');
	var css = nHotel.attr('style');
	if(typeof css!=='undefined' && css==='display: block;'){
		nHotel.attr("style",'display: none;');
	}
	else{
		var html = '<span class="flaticon-delete30 close nbhClsbtn"></span><p id="nearTxt">'+i18n.t("nearByHotels")+'</p><div class="owl-carousel nearByhotels"></div>';
		nHotel.empty();
		nHotel.append(html);
		var target = $this.parents('section.item').find('.nearByhotels');
		$('.nearHotel').each(function(){
			$(this).attr("style",'display: none;'); 
		});
		$('.nearByhotels').empty();
		setTimeout(function(){
			getClosestFPH(lat,lng,hotel,target,token,echoToken);
			target.parents('.nearHotel').attr("style",'display: block;');
			target.owlCarousel({
				items : 2,
				itemsDesktop: [1199, 2],
				itemsTablet: [866, 2],
				itemsMobile: [767, 1],
				itemsTabletSmall: [639, 1],
				lazyLoad: true,
				navigation: true,
				pagination: false,
				autoPlay: false,
				stopOnHover:false,
				responsive:true,
				rewindNav:false,
				scrollPerPage:true,
				mouseDrag:false
			});
		},500);
	}
	return false;
});
//helper function for near by hotels
function getClosestFPH(lat,lng,hotel,target, token, echoToken){
	for(var i=0;i<BASE_HOTELS.length;i++){
		var distance = latLonToDistance(lat,lng,BASE_HOTELS[i].staticData.lat,BASE_HOTELS[i].staticData.lng);
		BASE_HOTELS[i].staticData.nearest={
				distance:distance,
				hotelName:hotel
		};

	}
	BASE_HOTELS.sort(function(a,b){
		return a.staticData.nearest.distance-b.staticData.nearest.distance;
	});
	fphService.loadTemplate('fph_desktop_nearByHotels',{hotels:BASE_HOTELS,sc:SEARCH_CRITERIA,token:token,echoToken:echoToken,weSearch:BASE_RES.data.hotel.resultsHeader},target,function(){
		pricetagConvert.init();
	});
};

$('body').on('click','a._fph_landMarkAnchor',function(){
	
	var selectedLandMark = $(this).text();
	$("._landmark").children().eq(0).empty();
	$("._landmark").children().eq(0).append(selectedLandMark);
	$(".distanceDropdown").slideUp();
	var lat=$(this).attr("data-lat"),lon=$(this).attr("data-lon"),landMarkName=$(this).text();
	for(var i=0;i<HOTELS.length;i++){
		var distance = latLonToDistance(lat,lon,HOTELS[i].staticData.lat,HOTELS[i].staticData.lng);
		HOTELS[i].landMark={
				name:landMarkName,
				distance:distance
		}
	}	
	BASE_RES.data.hotel.searchRS=HOTELS;
	//initPackageFilter(BASE_RES,true)
	fphService.loadTemplate('fph_desktop_hotelresults',BASE_RES,$('.fphResultContainer'), function(){
		pricetagConvert.init();
	});	
});



var vechTypeClassMap = {};
$(document).ready(function(){
	vechTypeClassMap = {
		"STND":"Standard",
		"PRMEX":"Express",
		"SPCL":"Special",
		"PRM":"Premium",
		"LXR":"Luxury",
		"MNBS":"Minibus",
		"BS":"Bus",
		"BT":"Boat",
		"DSBLD":"Disabled",
		"CRBT":"Car/Boat",
		"MBBT":"Minibus/Boat",
		"CRTRN":"Car/Train",
		"SPDBT":"Speedboat",
		"CTMR":"Catamaran",
		"TRN":"Train",
		"FLGHT":"Flight",
		"SUV":"SUV",
		"LMSN":"Limousine",
		"TRCK":"Truck"
	}

	initTransferDatePickerComponent();


	if($('#revPickUpTime').val()!='' && $('._revPickUpTime').length>0){
		var tpd = $('#revPickUpTime').val().split('T')[0];
		var pT = $('#revPickUpTime').val().split('T')[1].split(':')[0];
		var selRevPickupTime = $('._revPickUpTime').find('option');
		$(selRevPickupTime).each(function () {
			if(('0'+$(this).val()).slice(-2)==pT){
				$(this).attr('selected','selected');
			}
		});
	}
});

	/* Date Pickers for Home Page */
function initTransferDatePickerComponent() {
	var numberOfCalendar = 1;
	var transDDT = '';

	if ($('#transferPickupDate').length > 0) {
		transDDT = $('#transferPickupDate').val().split('T');
		transDDT = $('#transferPickupDate').val().split('T');
		var transTime = parseInt(transDDT[1].split(':')[0]) + 2;
		var nextDate = new Date(transDDT[0]);
		var numberOfDaysToAdd = 1;
		nextDate.setDate(nextDate.getDate() + numberOfDaysToAdd);
		if (transTime == 25) {
			transTime = 1;
			transDDT[0] = moment(nextDate).format('YYYY-MM-DD');
		} else if (transTime == 24) {
			transTime = 0;
			transDDT[0] = moment(nextDate).format('YYYY-MM-DD');
		}
		var selPickUpTime = $('.pickUpTime').find('option');
		$(selPickUpTime).each(function() {
			if (parseInt($(this).val()) == transTime) {
				$(this).attr('selected', '');
			}else{
				$(this).removeAttr('selected');
			}
			if(parseInt($(this).val()) < transTime){
				$(this).attr('disabled', '');
			}
		});
	}
	var dateformat = "DD/MM/YYYY";
	var globalDate = new Date();
	if($('#transferPickupDate').length>0){
		globalDate = new Date(transDDT[0]);
	}

	var right = "right";
	var left = "left";

	var pos1 = right;
	var pos2 = left;
	if($('html').attr('data-lang')=='ar'){
		pos1 = left;
		pos2 = right;		
	}
	/*Date-Picker Cars Home Page*/
	var fromSelector = $('._datepicker.transfersDateFrom');
	var from = [fromSelector[0], pos2, false, false, true, new Date((transDDT != '') ? transDDT[0] : ''), $('#transfersDateFromHidden')];
	loadDatePicker(from,'','', numberOfCalendar, dateformat, 0, globalDate);
	var tpd = '';
	if($('#revPickUpTime').val()!='' && $('._revPickUpTime').length>0){
		tpd = $('#revPickUpTime').val().split('T')[0];
		var pT = $('#revPickUpTime').val().split('T')[1].split(':')[0];
	}	

	/*Date-Picker Transfers review page*/
	if($('._datepicker.arrivalFlightDate').is(':visible') == true && $('._datepicker.departureFlightDate').is(':visible') == true ){
		var arrivalFlightDate = $('._datepicker.arrivalFlightDate');
		var departureFlightDate = $('._datepicker.departureFlightDate');
		var arrivalFlightDP = [arrivalFlightDate[0],pos2,false,false,true,new Date((tpd != '') ? tpd : ''),$('#arrivalFlightHidden')];
		var departureFlightDP = [departureFlightDate[0],((jsUpdateSize(769)===false)? pos2:pos2),true,true,false,new Date((tpd != '') ? tpd : ''),$('#departureFlightHidden')];	
		globalDate = new Date((tpd != '') ? tpd : '');
		loadDatePicker(arrivalFlightDP,departureFlightDP,'',numberOfCalendar,dateformat,0,globalDate);
	}else if($('._datepicker.arrivalFlightDate').is(':visible') == false && $('._datepicker.departureFlightDate').is(':visible') == true ){
		var departureFlightDate = $('._datepicker.departureFlightDate');
		var departureFlightDP = [departureFlightDate[0],((jsUpdateSize(769)===false)? pos2:pos2),true,true,false,new Date((tpd != '') ? tpd : ''),$('#departureFlightHidden')];	
		tpd = $('#transRevDate').val().split('T')[0];
		globalDate = new Date((tpd != '') ? tpd : '');
		loadDatePicker('',departureFlightDP,'',numberOfCalendar,dateformat,0,globalDate);
	}else if($('._datepicker.arrivalFlightDate').is(':visible') == true && $('._datepicker.departureFlightDate').is(':visible') == false ){
		var arrivalFlightDate = $('._datepicker.arrivalFlightDate');
		var arrivalFlightDP = [arrivalFlightDate[0],pos2,false,false,true,new Date((tpd != '') ? tpd : ''),$('#arrivalFlightHidden')];
		globalDate = new Date((tpd != '') ? tpd : '');
		loadDatePicker(arrivalFlightDP,'','',numberOfCalendar,dateformat,0,globalDate);
	}
	if($('#originalProduct').val()=='HOTEL'){
		if(typeof $('#transferPPD').val() !='undefined'){
			var htlInfoObj = $('#transferPPD').val();
			var htlBasicObj = JSON.parse(htlInfoObj);
			var htlName = htlBasicObj.name;
			var htlCity = htlBasicObj.city.name;
			var htlCityId = htlBasicObj.city.id;
			var htlCntName = htlBasicObj.country.name;
			var htlCntCode = htlBasicObj.country.countryCode;
			var htlUnqId = htlBasicObj.uniqueId;
			var prvncName = htlBasicObj.province.name;
			var airportId=htlBasicObj.airport.airportId;
			var airportName=htlBasicObj.airport.airportName?htlBasicObj.airport.airportName.en:'';
			var airportCode=htlBasicObj.airport.airportCode;
			$('._transHotelName').text(unicodeConverter(htlName));
			$('._transPickup').text(unicodeConverter(htlCity)+','+unicodeConverter(htlCntName));
			$('._transdropOff').text(unicodeConverter(htlName));
			$('#pickUpLocation').val(htlCity+', '+htlCntName+', '+'('+airportCode+')'+' -'+airportName);
			$('#pickUpLocation').attr('data-ccode',htlCntCode);
			$('#pickUpSearchKey').val('Airport>>'+airportId+'>>'+airportCode+'>>'+airportName+'>>'+htlCityId+'>>'+htlCntCode+'>>'+htlCity+'>>');
			$('#dropOffLocation').val(htlName+','+htlCity+','+htlCntName);
			$('#dropOffLocation').attr('data-ccode',htlCntCode);
			$('#dropOffSearchKey').val('Hotel>>'+htlUnqId+'>>undefined>>undefined>>'+htlName+'>>'+htlCityId+'>>'+htlCity+'>>'+prvncName+'>>'+htlCntName+'>>'+htlCntCode+'>>');
		}
	}else if($('#originalProduct').val()=='FLIGHT'){
		if(typeof $('#transferPPD').val() !='undefined'){
			var fltInfoObj = $('#transferPPD').val();
			var fltMapObj = JSON.parse(fltInfoObj);
			var fltArrAPId = $('#transArrAPId').val();
			var fltCity = fltMapObj.transCity[fltArrAPId].en;
			var fltCitylang = fltMapObj.transCity[fltArrAPId][$('html').attr('data-lang')];
			var fltCityId = fltMapObj.transCity[fltArrAPId].id;
			var fltCntName = fltMapObj.airportCountryName[fltArrAPId].en;
			var fltCntNamelang = fltMapObj.airportCountryName[fltArrAPId][$('html').attr('data-lang')];
			var fltCntCode = fltMapObj.airportCountryCode[fltArrAPId];
			var fltAirportId = fltMapObj.airportName[fltArrAPId].airportId;
			var fltAirportName = fltMapObj.airportName[fltArrAPId].en;
			var fltAirportNamelang = fltMapObj.airportName[fltArrAPId][$('html').attr('data-lang')];
			$('._transAirportName').text(unicodeConverter(fltAirportNamelang));
			$('._transPickup').text(unicodeConverter(fltAirportNamelang));
			$('._transdropOff').text(unicodeConverter(fltCitylang)+','+unicodeConverter(fltCntNamelang));
			$('#pickUpLocation').val(unicodeConverter(fltCitylang)+','+unicodeConverter(fltCntNamelang)+', ('+fltArrAPId+') - '+unicodeConverter(fltAirportNamelang));
			$('#pickUpLocation').attr('data-ccode',fltCntCode);
			$('#pickUpSearchKey').val('Airport>>'+fltAirportId+'>>'+fltArrAPId+'>>'+fltAirportName+'>>'+fltCityId+'>>'+fltCntCode+'>>'+fltCity+'>>');
			$('#dropOffLocation').val(unicodeConverter(fltCitylang)+','+unicodeConverter(fltCntNamelang));
			$('#dropOffLocation').attr('data-ccode',fltCntCode);
			$('#dropOffSearchKey').val('Hotel>>>>undefined>>undefined>>'+fltCity+','+fltCntName+'>>'+fltCityId+'>>'+fltCity+'>>undefined>>'+fltCntName+'>>'+fltCntCode);
		}
	}else if($('#originalProduct').val()=='FPH'){
		if(typeof $('#transferHPPD').val() !='undefined' && typeof $('#transferFPPD').val() !='undefined'){
			var htlInfoObj = $('#transferHPPD').val();
			var htlBasicObj = JSON.parse(htlInfoObj);
			var fltInfoObj = $('#transferFPPD').val();
			var fltMapObj = JSON.parse(fltInfoObj);
			var htlName = htlBasicObj.name;
			var htlCity = htlBasicObj.city.name;
			var htlCityId = htlBasicObj.city.id;
			var htlCntName = htlBasicObj.country.name;
			var htlCntCode = htlBasicObj.country.countryCode;
			var htlUnqId = htlBasicObj.uniqueId;
			var prvncName = htlBasicObj.province.name;
			var fltArrAPId = $('#transArrAPId').val();
			var fltCity = fltMapObj.transCity[fltArrAPId].en;
			var fltCitylang = fltMapObj.transCity[fltArrAPId][$('html').attr('data-lang')];
			var fltCityId = fltMapObj.transCity[fltArrAPId].id;
			var fltCntName = fltMapObj.airportCountryName[fltArrAPId].en;
			var fltCntNamelang = fltMapObj.airportCountryName[fltArrAPId][$('html').attr('data-lang')];
			var fltCntCode = fltMapObj.airportCountryCode[fltArrAPId];
			var fltAirportId = fltMapObj.airportName[fltArrAPId].airportId;
			var fltAirportName = fltMapObj.airportName[fltArrAPId].en;
			var fltAirportNamelang = fltMapObj.airportName[fltArrAPId][$('html').attr('data-lang')];
			$('._transAirportName').text(unicodeConverter(fltAirportNamelang));
			$('._transPickup').text(unicodeConverter(htlCity)+','+unicodeConverter(htlCntName));
			$('._transdropOff').text(unicodeConverter(htlName));
			$('#pickUpLocation').val(unicodeConverter(fltCitylang)+','+unicodeConverter(fltCntNamelang)+', ('+fltArrAPId+') - '+unicodeConverter(fltAirportNamelang));
			$('#pickUpLocation').attr('data-ccode',fltCntCode);
			$('#pickUpSearchKey').val('Airport>>'+fltAirportId+'>>'+fltArrAPId+'>>'+fltAirportName+'>>'+fltCityId+'>>'+fltCntCode+'>>'+fltCity+'>>');
			$('#dropOffLocation').val(htlName+','+htlCity+','+htlCntName);
			$('#dropOffLocation').attr('data-ccode',htlCntCode);
			$('#dropOffSearchKey').val('Hotel>>'+htlUnqId+'>>undefined>>undefined>>'+htlName+'>>'+htlCityId+'>>'+htlCity+'>>'+prvncName+'>>'+htlCntName+'>>'+htlCntCode+'>>');
		}
	}	
}

$('body').on('change','#transfersDateFrom',function(){
	var selectedDate = moment(moment($(this).val(),'DD/MM/YYYY').format('YYYY-MM-DD'));
	var transDDT = moment($('#transferPickupDate').val().split('T')[0]);
	var transPT = parseInt($('#transferPickupDate').val().split('T')[1].split(':')[0])+2;
	var nextDate = new Date($('#transferPickupDate').val().split('T')[0]);
	var numberOfDaysToAdd = 1;
	nextDate.setDate(nextDate.getDate() + numberOfDaysToAdd);

	if (transPT == 25) {
	    transPT = 1; 
	    transDDT = moment(moment(nextDate).format('YYYY-MM-DD'));
	} else if (transPT == 24) {
	    transPT = 0;
	   	transDDT = moment(moment(nextDate).format('YYYY-MM-DD'));
	}
	var pickupTDD = $('.form-control.pickUpTime').find('option');
	if(selectedDate.diff(transDDT,'days') == 0){
		$(pickupTDD).each(function(){
			if(parseInt($(this).val()) < transPT){
				$(this).attr('disabled', '');
			}
		});
	}else{
		$(pickupTDD).each(function(){
			$(this).removeAttr('disabled');
		});
	}
	
});

var transferService = (function() {
	'user strict';
	return {
		dynamicTemplate:'',

		loadTemplate:function(templateID,data,toUpdate,callback){
			var result;
			//Load the template
			var template = tmpl($(this.dynamicTemplate).filter('#'+templateID).html(),data);
			var r = /\\u([\d\w]{4})/gi;
			template = template.replace(r, function (match, grp) {
			    return String.fromCharCode(parseInt(grp, 16)); } );
			template = unescape(template);
			//Select result container
			if(typeof toUpdate==='object'){			
				result = toUpdate;
			}else{			
				result = $('#'+toUpdate);
			}
			
			if (typeof result !== 'undefined' && result.length > 0) {
				//Empty the result container
				result.empty();
				//Load data to the result container
				result.append(template);
			}
			
			_langGlobal.langInit();
			//userTrackerModule.init();;
			//below script for img lazy load
			var bLazy = new Blazy({
				breakpoints: [{ 
				src: '../img/destinations/call-icon.jpg'
			}]
			  , success: function(element){
				setTimeout(function(){
				var parent = element.parentNode;
				parent.className = parent.className.replace(/\bloading\b/,'');
				}, 200);
				}
		   });
		   
			if(typeof callback==='function')
				return callback();
			
		},
		loadQitafTransfertripSummary : function(args){			
			$.get('/common/themes/v2/tmpl/transfers/transferTripSummary.ejs?v=nd-v0102', {}, function(reviewTermTemplate) {
                loadTemplate('trans-trip-summary', {responseData: args.responseData}, $('#transferTripSummary'), reviewTermTemplate);    
                $('#paymeBtn').val('PAY '+ args.responseData.preBookResponse.transferBookRS.bookInfo.transferAvail.tcprice.cur+ ' ' + args.responseData.qitafObj.updatedTotalPrice);
                var responseData =args.responseData;
                if(responseData.coupondetails && responseData.coupondetails !== null){
                	var rc2 = i18n.t("pay")+' '+i18n.t(responseData.preBookResponse.transferBookRS.bookInfo.transferAvail.tcprice.cur)+' ';
                	var amt = responseData.preBookResponse.transferBookRS.bookInfo.transferAvail.tcprice.tf;
                	var couponDiscount = parseFloat(responseData.coupondetails.deductAmount);
                	var qitafDiscount = parseFloat(responseData.qitafObj.convertedRedeemAmt);
                	var totalDiscount = couponDiscount + qitafDiscount;
                	amt = (parseFloat(amt - totalDiscount)).toFixed(2);
					$('.completeBooking').val(rc2+amt);	
					if(responseData.paymentObj.domainName=='Global'){
						var couponDiscountSAR = (responseData.coupondetails && responseData.coupondetails.deductSarAmount) ? responseData.coupondetails.deductSarAmount : 0; 
						var qitafDiscountSAR =  (responseData.qitafObj && responseData.qitafObj.qitafSuccess) ? responseData.qitafObj.redeemAmount : 0;
						var totalDiscountSAR = parseFloat(couponDiscountSAR) + parseFloat(qitafDiscountSAR);
						$('._sarAmt').text((parseFloat(responseData.paymentObj.sarAmount - totalDiscountSAR).toFixed(2)));
					}else if(responseData.paymentObj.domainName!='Global'){
						var couponDiscountSAR = (responseData.coupondetails && responseData.coupondetails.deductSarAmount) ? responseData.coupondetails.deductSarAmount : 0; 
						var qitafDiscountSAR =  (responseData.qitafObj && responseData.qitafObj.qitafSuccess) ? responseData.qitafObj.redeemAmount : 0;
						var totalDiscountSAR = parseFloat(couponDiscountSAR) + parseFloat(qitafDiscountSAR);
						$('._egpAmt').text((parseFloat(responseData.paymentObj.sarAmount - totalDiscountSAR).toFixed(2)));
					}
					
				    fltSmryTraDrpDwn(); 
				    transReviewSummery();
				    
					/*$('.totalSec li:first-child').after('<li><span class="pull-left">'+
					 i18n.t('couponDiscount')+ '</span><span class="pull-right red-txt">'+'-'+' '+i18n.t(responseData.paymentObj.uc)+'  <elm class="_priceTag">'+responseData.coupondetails.deductAmount+'</elm></span></li>');*/
				}
				pricetagConvert.init();
			});			
		},
		loadTransferLoyaltyData : function(data){
			var responseData = JSON.parse(data);
			$.get('/common/themes/v2/tmpl/transfers/transferTripSummary.ejs?v=nd-v0102', {}, function(reviewTermTemplate) {
				$('.redeemPoints .nav li a').click(function (e) {
					e.preventDefault();
					$(this).tab('show');
				});

				var data = {
					responseData:responseData
				}

				loadTemplate('trans-trip-summary', {responseData: responseData}, $('#transferTripSummary'), reviewTermTemplate); 
				var rc2 = i18n.t("pay")+' '+i18n.t(responseData.preBookResponse.transferBookRS.bookInfo.transferAvail.tcprice.cur)+' ';
				var amt = responseData.preBookResponse.transferBookRS.bookInfo.transferAvail.tcprice.tf;
				if(responseData.coupondetails !== null){
					var couponDiscount = parseFloat(responseData.coupondetails.deductAmount);
					var qitafDiscount = (responseData.qitafObj && responseData.qitafObj.qitafSuccess) ? parseFloat(responseData.qitafObj.convertedRedeemAmt) : 0;
					var totalDiscount = couponDiscount + qitafDiscount;	                
					amt = (parseFloat(amt - totalDiscount)).toFixed(2);
					$('.completeBooking').val(rc2+amt);
				}else{
					var qitafDiscount = (responseData.qitafObj && responseData.qitafObj.qitafSuccess) ? parseFloat(responseData.qitafObj.convertedRedeemAmt) : 0;					  	                
					amt = (parseFloat(amt - qitafDiscount)).toFixed(2);
					$('.completeBooking').val(rc2+amt);
				}	
				if(responseData.paymentObj.domainName=='Global'){
					var couponDiscountSAR = (responseData.coupondetails && responseData.coupondetails.deductSarAmount) ? responseData.coupondetails.deductSarAmount : 0; 
					var qitafDiscountSAR =  (responseData.qitafObj && responseData.qitafObj.qitafSuccess) ? responseData.qitafObj.redeemAmount : 0;
					var totalDiscountSAR = parseFloat(couponDiscountSAR) + parseFloat(qitafDiscountSAR);
					$('._sarAmt').text((parseFloat(responseData.paymentObj.sarAmount - totalDiscountSAR).toFixed(2)));
				}else if(responseData.paymentObj.domainName!='Global'){
					var couponDiscountSAR = (responseData.coupondetails && responseData.coupondetails.deductSarAmount) ? responseData.coupondetails.deductSarAmount : 0; 
					var qitafDiscountSAR =  (responseData.qitafObj && responseData.qitafObj.qitafSuccess) ? responseData.qitafObj.redeemAmount : 0;
					var totalDiscountSAR = parseFloat(couponDiscountSAR) + parseFloat(qitafDiscountSAR);
					$('._egpAmt').text((parseFloat(responseData.paymentObj.sarAmount - totalDiscountSAR).toFixed(2)));
				}
				fltSmryTraDrpDwn();
				transReviewSummery();
				//console.log("=====responseData=====",responseData);
				pricetagConvert.init();
			});
		},
		loadTransferCouponData : function(data){
			var responseData = JSON.parse(data);
			$.get('/common/themes/v2/tmpl/transfers/transferTripSummary.ejs?v=nd-v0102', {}, function(reviewTermTemplate) {
				$('.redeemPoints .nav li a').click(function (e) {
					e.preventDefault();
					$(this).tab('show');
				});

				var data = {
					responseData:responseData
				}

				loadTemplate('trans-trip-summary', {responseData: responseData}, $('#transferTripSummary'), reviewTermTemplate); 
				var rc2 = i18n.t("pay")+' '+i18n.t(responseData.preBookResponse.transferBookRS.bookInfo.transferAvail.tcprice.cur)+' ';
				var amt = responseData.preBookResponse.transferBookRS.bookInfo.transferAvail.tcprice.tf;
				if(responseData.coupondetails !== null){
					var couponDiscount = parseFloat(responseData.coupondetails.deductAmount);
					var qitafDiscount = (responseData.qitafObj && responseData.qitafObj.qitafSuccess) ? parseFloat(responseData.qitafObj.convertedRedeemAmt) : 0;
					var totalDiscount = couponDiscount + qitafDiscount;	                
					amt = (parseFloat(amt - totalDiscount)).toFixed(2);
					$('.completeBooking').val(rc2+amt);
				}else{
					var qitafDiscount = (responseData.qitafObj && responseData.qitafObj.qitafSuccess) ? parseFloat(responseData.qitafObj.convertedRedeemAmt) : 0;					  	                
					amt = (parseFloat(amt - qitafDiscount)).toFixed(2);
					$('.completeBooking').val(rc2+amt);
				}	
				if(responseData.paymentObj.domainName=='Global'){
					var couponDiscountSAR = (responseData.coupondetails && responseData.coupondetails.deductSarAmount) ? responseData.coupondetails.deductSarAmount : 0; 
					var qitafDiscountSAR =  (responseData.qitafObj && responseData.qitafObj.qitafSuccess) ? responseData.qitafObj.redeemAmount : 0;
					var totalDiscountSAR = parseFloat(couponDiscountSAR) + parseFloat(qitafDiscountSAR);
					$('._sarAmt').text((parseFloat(responseData.paymentObj.sarAmount - totalDiscountSAR).toFixed(2)));
				}else if(responseData.paymentObj.domainName!='Global'){
					var couponDiscountSAR = (responseData.coupondetails && responseData.coupondetails.deductSarAmount) ? responseData.coupondetails.deductSarAmount : 0; 
					var qitafDiscountSAR =  (responseData.qitafObj && responseData.qitafObj.qitafSuccess) ? responseData.qitafObj.redeemAmount : 0;
					var totalDiscountSAR = parseFloat(couponDiscountSAR) + parseFloat(qitafDiscountSAR);
					$('._egpAmt').text((parseFloat(responseData.paymentObj.sarAmount - totalDiscountSAR).toFixed(2)));
				}
				fltSmryTraDrpDwn();
				transReviewSummery();
				//console.log("=====responseData=====",responseData);
				pricetagConvert.init();
			});
		}	
	}
}());


$('body').on('click','._addToTrip',function(){
	//open popup immidiatly to avoide popup-blocker
	var popup = window.open('', '_blank');
	popup.location.href="/transfer/revLoader";
	var echoToken=$(this).attr('data_echoToken');
	var index=$(this).attr('data_index');
	var loggerId = $(this).attr('data_loggerId');
	var originalProductId=$('#originalProductId').val();
	var originalProduct=$('#originalProduct').val();
	var crssellBkngRef = $('#transferBkngRef').val();
	var payfort=$('.panel-heading._payment');
	$.get('/transfer/checkAvailability',{echoToken:echoToken,index:index,loggerId:loggerId,originalProductId:originalProductId,originalProduct:originalProduct},function(res){
		
		if( res== null || res=='' || (typeof res.bookingInfoResponse!="undefined" && typeof res.bookingInfoResponse.transferBookingInfoRS.error !="undefined" )){
			
			popup.location.href="/flight/error"; return;
			if (!popup){
			growl_alert(i18n.t('allowpopups'));
			} 
		}
		else{
			var crssellProduct = '';
			if(originalProduct=='FLIGHT'){
				crssellProduct = 'F';
			}else if(originalProduct=='HOTEL'){
				crssellProduct = 'H';
			}else{
				crssellProduct = originalProduct;
			}
			var params={echoToken:echoToken,loggerId:loggerId,productId:res.productId,originalProductId:originalProductId,originalProduct:originalProduct,crssellProduct:crssellProduct,crssellBkngRef:crssellBkngRef};
			$.get('/transfer/transferPreBookRequest',params,function(res){

				if(res.paymentObj.showPayfort){


					if(typeof res.preBookResponse.status !="undefined" && res.preBookResponse.status == "FAILURE"){
					popup.location.href="/flight/error"; return;
					if (!popup){
						growl_alert(i18n.t('allowpopups'));
					} 
				}else{
					$.get('/payment/generateShasign',{pid:res.productId},function(shaResposne){
					popup.location.href = '/transfer/review?pid='+res.productId+'&echoToken='+echoToken+'&loggerId='+loggerId;
					if (!popup){
						growl_alert(i18n.t('allowpopups'));
					}  	
				});
				}
				}
				else if(res.paymentObj.showCheckout){
					var dataCheckout= {PID:res.productId};
					$.post('/payment/checkout/getToken',dataCheckout,function(tokenObj){

					popup.location.href = '/transfer/review?pid='+res.productId+'&echoToken='+echoToken+'&loggerId='+loggerId;
					if (!popup){
						growl_alert(i18n.t('allowpopups'));
					}  	
					});	

				}

				
			});
		}
	});
});


$('body').on('click','._myaccAddToTrip',function(){	
	//open popup immidiatly to avoide popup-blocker
	var popup = window.open('', '_blank');
	popup.location.href="/transfer/revLoader";
	var echoToken=$(this).attr('data_echoToken');
	var index=$(this).attr('data_index');
	var loggerId = $(this).attr('data_loggerId');
	var originalProductId=$('#originalProductId').val();
	var originalProduct=$('#originalProduct').val();
	var crssellBkngRef = $('#transferBkngRef').val();
	var payfort=$('.panel-heading._payment');
	$.get('/transfer/myaccCheckAvailability',{echoToken:echoToken,index:index,loggerId:loggerId,originalProduct:originalProduct},function(res){
		
		if(res==null || res=='' || (typeof res.bookingInfoResponse!="undefined" && typeof res.bookingInfoResponse.transferBookingInfoRS.error !="undefined")){
			popup.location.href="/flight/error"; return;
			if (!popup){
				growl_alert(i18n.t('allowpopups'));
			} 
		}
		else{
			var crssellProduct = '';
			if(originalProduct=='FLIGHT'){
				crssellProduct = 'F';
			}else if(originalProduct=='HOTEL'){
				crssellProduct = 'H';
			}else{
				crssellProduct = originalProduct;
			}

			var params={echoToken:echoToken,loggerId:loggerId,productId:res.productId,originalProductId:originalProductId,originalProduct:originalProduct,crssellProduct:crssellProduct,crssellBkngRef:crssellBkngRef};
			$.get('/transfer/myaccTransferPreBookRequest',params,function(res){
				if(res.paymentObj.showPayfort){
					


					if(typeof res.preBookResponse.status !="undefined" && res.preBookResponse.status == "FAILURE"){
					popup.location.href="/flight/error"; return;
					if (!popup){
						growl_alert(i18n.t('allowpopups'));
					} 
				}else{
					$.get('/payment/generateShasign',{pid:res.productId},function(shaResposne){
					popup.location.href = '/transfer/review?pid='+res.productId+'&echoToken='+echoToken+'&loggerId='+loggerId;
					if (!popup){
						growl_alert(i18n.t('allowpopups'));
					}  	
				});
				}
				}
				else if(res.paymentObj.showCheckout){
					var dataCheckout= {PID:res.productId};
					$.post('/payment/checkout/getToken',dataCheckout,function(tokenObj){

					popup.location.href = '/transfer/review?pid='+res.productId+'&echoToken='+echoToken+'&loggerId='+loggerId;
					if (!popup){
						growl_alert(i18n.t('allowpopups'));
					}  	
					});	

				}

			});
		}
	});
});


$('body').on('click','._transferConfirmation',function(){
	var echoToken=$(this).attr('data_echoToken');
	var productId=$(this).attr('data_productId');
	var crossProductId=$('#_crossProductId').val();
	var params={echoToken:echoToken,productId:productId,crossProductId:crossProductId};
	$.get('/transfer/transferPreBookRequest',params,function(res){
		$.get('/transfer/transferBookRequest',{echoToken:echoToken,productId:productId},function(res){
			window.location.href='/transfer/confirmation?pid='+productId+'&echoToken='+echoToken;
		});
	});
});

function payMeTransfer(args){
	if(args=="PAYFORT" || args==='CHECKOUT'){
		var condition3=validateCardInfo(true);
	}
	/*if(args=="SADAD"){
		var condition3 = validateSadadOLP();
	}*/
	/*if(args=="QUICKPAY"){
		 var cvv;
		 var unique_id;
		 var radio = $('._saveCardHideShow').find('input[type=radio]');
		 radio.each(function(){
		   if($(this).is(':checked')){
		     unique_id = $(this).attr('id');
		     console.log(unique_id);
		     cvvObj =  $(this).parents('li').find('#QUICKPAY_CARD_CVV');
		     cvv =  $(this).parents('li').find('#QUICKPAY_CARD_CVV').val();
		   }
		});
			if((cvv.length < 3)||(!_Nonly(cvv))||(cvv.length > 3)){  
		    growl_alert(i18n.t("enterCVV"));
		    cvvObj.addClass('error');
		    cvvObj.focus();
		    cvvObj.val("");
		    condition1=false;
		}else{
			condition1= true;
		}
	}*/
	var pid = $('#TTDP').attr('data-pid');
	var echoToken = $('#TTDP').attr('data-et');
	var nd = false;
	var transNextDate='';
	var arrTransFTime = parseInt($('#arrTransFTime').val());
	var depTransFTime = parseInt($('#depTransFTime').val());
	var transDate = $('#transRevDate').val().split('T')[0];

	if(depTransFTime<arrTransFTime){
		nd=true;
		var nextDate = new Date(transDate);
		var numberOfDaysToAdd = 1;
		nextDate.setDate(nextDate.getDate() + numberOfDaysToAdd);
		transNextDate = moment(nextDate).format('YYYY-MM-DD');
	}

	var aal=$('#arrAirline').val();
	var afi=$('#arrFlightno').val();

	if(typeof $('#arrTransFTime').val() != 'undefined'){
		var adt=(parseInt($('#arrTransFTime').val())>9 ? transDate+'T'+$('#arrTransFTime').val()+':00:00' : transDate+'T0'+$('#arrTransFTime').val()+':00:00');
	}

	var dal=$('#depAirline').val();
	var dfi=$('#depFilghtno').val();

	if(typeof $('#depTransFTime').val() != 'undefined'){
		var ddt=(parseInt($('#depTransFTime').val())>9 ? (nd ? transNextDate : transDate)+'T'+$('#depTransFTime').val()+':00:00' : (nd ? transNextDate : transDate)+'T0'+$('#depTransFTime').val()+':00:00');
	}
  	
	var extns={
		"aal": aal,
        "afi": afi,
        "adt": adt,
        "dal": dal,
        "dfi": dfi,
        "ddt": ddt
	};

	var gTaHtlArr=[];
	if($('#gtaSrchHtl').is(':checked') && $('#GTrHotlSearchKey').length > 0){
		var gTaHtl = $('#GTrHotlSearchKey').val();
		gTaHtlArr = gTaHtl.split('>>');
	}else if($('#gtaEntHtl').is(':checked') && $('#GTrHotelEnt').length > 0){
		var gTaHtl = $('#GTrHotelEnt').val();
		gTaHtlArr[0] = gTaHtl;
	}


	async.parallel([
		function(callback){
			$.get('/transfer/updateTransferBookRequest',{echoToken:echoToken,pid:pid,extns:extns,gTaHtlArr:gTaHtlArr},function(res){
				if(res==null){
				}else{
					callback(res);
				}
			});
		}
	],
	function(err){
		if(args==='PAYFORT'){

			if(condition3==true){
				btnLoadingAnimation($('#paymeBtn'));
				dontRefreshPopup();
				var device_fingerprint = $('#device_fingerprint').val();
				var data = {
				device_fingerprint:device_fingerprint,
				pid:pid,
				}
				//console.log('device_fingerprint  ===',device_fingerprint);
				$.post('/payment/payfort/saveDeviceFingerPrint', data, function(res) {
				$('#paymentForm').submit();
				});
			}
		}
		if(args==='QUICKPAY'){
			var cvv;
			var unique_id;
			var condition = true;
			var radio = $('._saveCardHideShow').find('input[type=radio]');
			var conditionaaldal = validateaaldal();
			var loggerId = cmnGetURLQueryStr('loggerId');
			if(conditionaaldal){
			radio.each(function(){
				if($(this).is(':checked')){
					unique_id = $(this).attr('id');
					cvvObj =  $(this).closest('li').find('#QUICKPAY_CARD_CVV');
					cvv =  $(this).closest('li').find('#QUICKPAY_CARD_CVV').val();
				}
			});
			if((cvv.length < 3)||(!_Nonly(cvv))||(cvv.length > 3)){  
				growl_alert(i18n.t("enterCVV"));
				cvvObj.addClass('error');
				cvvObj.focus();
				cvvObj.val("");
				condition=false;
			}
			if(condition){
				btnLoadingAnimation($('#paymeBtn'));
				dontRefreshPopup();

				var device_fingerprint = $('#device_fingerprint').val();
				var data = {
					cvv:cvv,
					pid:pid,
					unique_id:unique_id,
					device_fingerprint:device_fingerprint
				}
				$.post('/payment/payfort/quickPay', data, function(res) {
					if(res.status==='success')
					{
						if(res.check_3ds)
						{
							location.href = res.url;
						}
						else{
							if(res.product === 'mfc' || res.product === 'ma'){
								location.href = res.rurl;
							}
							else{
								loadTransferConfirmationPage(res.pid,res.echotoken,loggerId);
							}
						}
					}
					else{
						location.href = '/payment/payfortRetry?pid='+res.pid;
					}	

				});	
			}
		}
	 }
	if (args === 'SADAD') {
		 var sadadFireaaldal = validateaaldal();
		 if(sadadFireaaldal){
		 	sadadFire = validateSadadOLP(args);
		 if(sadadFire){
			 bookingStatusChange({pid:pid});
			 btnLoadingAnimation($('#paymeBtn'));
	     	 dontRefreshPopup();
	         var OLP_ID = $('#SADAD_OLP_ID');        
	         var data = {
	             OLP_ID: OLP_ID.val() || '',
	             PID: pid,
	         }
	         $.post('/payment/sadad', data, function(res) {
	             
	         	if(res.status === "SUCCESS"){
	             	 location.href=res.ibURL;
	            }
	         	else if(res.status === "FAILED"){		
	         		$('#paymeBtn').removeClass('LoadBtn');					
					$('#paymeBtn').val(hotelTemplateVar.payPrice);
	         		$('#sadadErrorMessage').text(res.errorMessage).addClass('validate_error_message');
					$('#dontRefreshPopup').modal('hide');
					var offsetPopTop = $('.payment.opcPayment').offset().top;
					$('html, body').animate({scrollTop:offsetPopTop}, 500);
	             }
	         	else{
	         		location.href = '/common/error';
	         	}
	                        
	         });
		 }
		}
    }
	if (args === 'FORT-SADAD') {
		var sadadFireaaldal = validateaaldal();
		 if(sadadFireaaldal){
		 	sadadFire = validateSadadOLP(args);
		 if(sadadFire){		
			btnLoadingAnimation($('#paymeBtn'));
			var sadad_olp = $('#sadad_olp').val();			
			var data = {
					sadad_olp:sadad_olp,
				    pid:pid,
			}
			$.post('/payment/fortSadad/generateFortSadadDetails',data, function(sadadResposne) {						                
               
                $('._fort-sadad').find('#signature').val(sadadResposne.shaSign);
                $('._fort-sadad').find('#command').val(sadadResposne.command);
                $('._fort-sadad').find('#merchant_identifier').val(sadadResposne.merchant_identifier);
                $('._fort-sadad').find('#access_code').val(sadadResposne.access_code);
                $('._fort-sadad').find('#merchant_reference').val(sadadResposne.merchant_reference);
                $('._fort-sadad').find('#amount').val(sadadResposne.amount);
                $('._fort-sadad').find('#currency').val(sadadResposne.currency);
                $('._fort-sadad').find('#language').val(sadadResposne.language);
                $('._fort-sadad').find('#customer_email').val(sadadResposne.customer_email);
                $('._fort-sadad').find('#payment_option').val(sadadResposne.payment_option);
                $('._fort-sadad').find('#order_description').val(sadadResposne.order_description);
                $('._fort-sadad').find('#customer_ip').val(sadadResposne.customer_ip);
                $('._fort-sadad').find('#eci').val(sadadResposne.eci);
                $('._fort-sadad').find('#customer_name').val(sadadResposne.customer_name);             
				$('._fort-sadad').find('#merchant_extra').val(sadadResposne.merchant_extra);
                $('._fort-sadad').find('#return_url').val(sadadResposne.return_url);
                $('._fort-sadad').find('#fortSadadForm').attr('action', sadadResposne.action_url);

				$('#fortSadadForm').submit();
            });
          }
        }
	  }
	if(args === 'INSTALLMENTS'){
		var installmentsaaldal = validateaaldal();
		if(installmentsaaldal){
		btnLoadingAnimation($('#paymeBtn'));
		dontRefreshPopup();		 
		var data= {pid:pid	}
		$.post('/payment/installments',data,function(res){
			if(res.status==='SUCCESS')
			{
				location.href=res.redirectURL;
			}
			else{
				location.href = '/common/error';
			}			 
		});
	}
}
if(condition3){

			 btnLoadingAnimation($('#paymeBtn'));
			 dontRefreshPopup();
			 $('#checkout-form').submit();
		  
		 }
});
}
function loadTransferConfirmationPage(productId,echoToken,loggerId){

	$.get('/transfer/transferBookRequest',{echoToken:echoToken,loggerId:loggerId,productId:productId},function(res){
		if(res === 'ERROR'){
			window.location.href="/flight/error";
		}else{
			window.location.href='/transfer/confirmation?pid='+productId+'&echoToken='+echoToken;
		}
			//$.get('/transfer/confirmation',{pid:productId,echoToken:echoToken});
		
		});
}	

$('body').on('change','#dropOffLocation',function(){
	if($(this).val()==''){
		$('._dotForTransfer').hide();
	}
});
//**********************Transfers************************
$('body').on('click','._searchTransfer',function(){
	var pickUpSearchKey=$('#pickUpSearchKey').val().split('>>');
	var dropOffSearchKey=$('#dropOffSearchKey').val().split('>>');
	var pdt=null,ddt=null; 
	var $t = $(this);
	var srchTrggr = $($t).attr('data-fire');
	travelDate=moment($('#transfersDateFromHidden').val(), 'YYYY/MM/DD').format('YYYY-MM-DD');
	ptfObj=$('.timepicker .pickUpTime');
	ptf=moment(ptfObj.val(), 'HH:mm').format('HH:mm:ss');
	pdt=travelDate+'T'+ptf;
	dtfObj=$('.timepicker .dropOffTime');
	if($(dtfObj).is(':visible') === true){
		dtf=moment(dtfObj.val(), 'HH:mm').format('HH:mm:ss');
		ddt=travelDate+'T'+dtf;
	}else{
		ddt="";	
	}
	
	var status = validateTransfers();
	if(status){
		$('.loadingFare').show();
		$('.trnsfrSlider').hide();
		$('._noResults').hide();

		var productId=$('#originalProductId').val();
		var product=$('#originalProduct').val();
		var na=$('#transferPCount').val();
		var args={
			pdt:pdt,
			ddt:ddt,
			na:na,
			productId:productId,
			pickUpType:pickUpSearchKey[0][0],
			dropOffType:dropOffSearchKey[0][0],
			pl:buildLocation(pickUpSearchKey),
			dl:buildLocation(dropOffSearchKey),
			originalProduct:product
		}

		$.get('/transferResults', args, function(res) {
			if((res && res.transferSearchRS && res.transferSearchRS.error) || !res){
			$('.loadingFare').hide();	
			if(srchTrggr=='false'){
				$('.transferCrossSeller').hide();
			}else {
				var pickUpkey = $('#pickUpSearchKey').val();
				var pickUpkeyArr = pickUpkey.split('>>');
				var dropOffkey = $('#dropOffSearchKey').val();
				var dropOffkeyArr = dropOffkey.split('>>');
				if(pickUpkeyArr[0][0]=='A'){
					if(pickUpkeyArr[3]=="All Airports"){
						$('._transPickup').text(pickUpkeyArr[3]+','+pickUpkeyArr[6]);
					}else{
						$('._transPickup').text(pickUpkeyArr[3]);
					}
				}else if(pickUpkeyArr[0][0]=='H'){	
					$('._transPickup').text(pickUpkeyArr[4]);
				}
				if(dropOffkeyArr[0][0]=='A'){
					if(dropOffkeyArr[3]=="All Airports"){
						$('._transdropOff').text(dropOffkeyArr[3]+','+dropOffkeyArr[6]);
					}else{
						$('._transdropOff').text(dropOffkeyArr[3]);
					}
				}else if(dropOffkeyArr[0][0]=='H'){	
					$('._transdropOff').text(dropOffkeyArr[4]);
				}
				$('._noResults').show();
			}
				return;
			}
			if(res && res.transferSearchRS && res.transferSearchRS.transAvails){
				var transArray = res.transferSearchRS.transAvails;			
				transArray.sort(function (a, b) {
					return a.tcprice.tf - b.tcprice.tf;
				});
			 if(srchTrggr=='false'){
					$($t).attr('data-fire','true');
				}	
			}
			$.get('/common/themes/v2/tmpl/transfers/transfersResults.ejs',{},function(template){
				transferService.dynamicTemplate = template;
				transferService.loadTemplate('crossTransferTmpl',{res:res},$('.trnsfrSliderBlock'),function(){
					if(res.transferSearchRS.transferCore.pl.desc == "All Airports"){
					$('._transPickup').text(res.transferSearchRS.transferCore.pl.desc+','+res.transferSearchRS.transferCore.pl.cname);
					}else{
						$('._transPickup').text(res.transferSearchRS.transferCore.pl.desc);
					}
					if(res.transferSearchRS.transferCore.dl.desc == "All Airports"){
					$('._transdropOff').text(res.transferSearchRS.transferCore.dl.desc+','+res.transferSearchRS.transferCore.dl.cname);
				}else{
					$('._transdropOff').text(res.transferSearchRS.transferCore.dl.desc);
				}
					//transferService.loadTemplate('crossTransferTmpl',{res:res},$('.trnsfrSliderBlock'));
					pricetagConvert.init();
					$('.loadingFare').hide();
					$('.trnsfrSlider').show();
					var owl = $('.trnsfrSlider');					
					owl.owlCarousel({
						items: 4,
						itemsDesktop: [1199, 4],
						itemsTablet: [980, 3],
						itemsTabletSmall: [639, 2],
						itemsMobile: [478, 1],
						lazyLoad: true,
						navigation: true,
						pagination: true,
						autoPlay: false,
						rewindNav: false,
						stopOnHover: true,
					});		
				});
			});

			setTimeout(function(){
			var owl = $(".trnsfrSlider");
			owl.owlCarousel({
			items: 4,
			itemsDesktop: [1199, 4],
			itemsTablet: [980, 3],
			itemsTabletSmall: [639, 2],
			itemsMobile: [478, 1],
			lazyLoad: true,
			navigation: true,
			pagination: true,
			autoPlay: false,
			rewindNav: false,
			stopOnHover: true,
			});

			},500);
		});
	}
});


    $('body').on('click','._searchMyaccountTransfer',function(){
	/*alert($('#transferPickupDate').val().split("T")[0]);
	alert(moment($('#transfersDateFrom').val().split("T")[0],'DD/MM/YYYY').format('YYYY-MM-DD'));*/
	//console.log($('#dropOffSearchKey').val());
	/*$('.loadingFare').show();
	$('.trnsfrSlider').hide();
	$('._noResults').hide();*/
	$t = $(this);
	var pickUpSearchKey=$('#pickUpSearchKey').val().split('>>');
	var dropOffSearchKey=$('#dropOffSearchKey').val().split('>>');
	var pdt=null,ddt=null; 
	travelDate=moment($('#transfersDateFromHidden').val(), 'YYYY/MM/DD').format('YYYY-MM-DD');
	ptfObj=$('.timepicker .pickUpTime');

	ptf=moment(ptfObj.val(), 'HH:mm').format('HH:mm:ss');
	pdt=travelDate+'T'+ptf;
	//ddf=moment($('#carsDateToHidden').val(), 'YYYY/MM/DD').format('YYYY-MM-DD');
	dtfObj=$('.timepicker .dropOffTime');
	if($(dtfObj).is(':visible') === true){
		dtf=moment(dtfObj.val(), 'HH:mm').format('HH:mm:ss');
		ddt=travelDate+'T'+dtf;
	}else{
		ddt="";	
	}
	//ddt=pdt;
	/*if(pickUpSearchKey[0]=='Airport'){
    	pdt=$('#_pdtHidden').val();
	}if(dropOffSearchKey[0]=='Airport'){
		ddt=$('#_pdtHidden').val();
	}*/
	var status = validateTransfers();
	if(status){
	$('.loadingFare').show();
	$('._transBlkShow').hide();
	$('.trnsfrSlider').hide();
	$('._noResults').hide();
	//var uid=$('#_uidHidden').val();
	var productId=$('#originalProductId').val();
	var product=$('#originalProduct').val();
	var na=$('#noOfAdt').val();
	var nc=$('#noOfChd').val();
	var ni=$('#noOfInf').val();

	var args={
		pdt:pdt,
		ddt:ddt,
		na:na,
		nc:nc,
		ni:ni,
		productId:productId,
		pickUpType:pickUpSearchKey[0][0],
		dropOffType:dropOffSearchKey[0][0],
		pl:buildLocation(pickUpSearchKey),
		dl:buildLocation(dropOffSearchKey),
		originalProduct:product
		
		
	}
	
	$.get('/transferMyaccountResult', args, function(res) {
		if(typeof res.transferSearchRS !== 'undefined' && res.transferSearchRS.error){
			var pickUpkey = $('#pickUpSearchKey').val();
			var pickUpkeyArr = pickUpkey.split('>>');
			var dropOffkey = $('#dropOffSearchKey').val();
			var dropOffkeyArr = dropOffkey.split('>>');
			if(pickUpkeyArr[0][0]=='A'){
				if(pickUpkeyArr[3]=="All Airports"){
					$('._transPickup').text(pickUpkeyArr[3]+','+pickUpkeyArr[6]);
				}else{
				$('._transPickup').text(pickUpkeyArr[3]);}
			}else if(pickUpkeyArr[0][0]=='H'){	
				$('._transPickup').text(pickUpkeyArr[4]);
			}
		if(dropOffkeyArr[0][0]=='A'){
			if(dropOffkeyArr[3]=="All Airports"){
				$('._transdropOff').text(dropOffkeyArr[3]+','+dropOffkeyArr[6]);
			}else{
				$('._transdropOff').text(dropOffkeyArr[3]);}
			}else if(dropOffkeyArr[0][0]=='H'){	
				$('._transdropOff').text(dropOffkeyArr[4]);
			}
			$('._noResults').show();
			$('.loadingFare').hide();
			return;
		}
		if(res && res.transferSearchRS && res.transferSearchRS.transAvails){
			var transArray = res.transferSearchRS.transAvails;			
			transArray.sort(function (a, b) {
				return a.tcprice.tf - b.tcprice.tf;
			});
		}
		$.get('/common/themes/v2/tmpl/myAccount/myTransfersResults.ejs',{},function(template){

			transferService.dynamicTemplate = template;
				transferService.loadTemplate('myaccCrossTransferTmpl',{res:res},$('.trnsfrSliderBlock'),function(){
					//transferService.loadTemplate('crossTransferTmpl',{res:res},$('.trnsfrSliderBlock'));
					if(res.transferSearchRS.transferCore.pl.desc == "All Airports"){
					$('._transPickup').text(res.transferSearchRS.transferCore.pl.desc+','+res.transferSearchRS.transferCore.pl.cname);
					}else{
						$('._transPickup').text(res.transferSearchRS.transferCore.pl.desc);
					}
					if(res.transferSearchRS.transferCore.dl.desc == "All Airports"){
					$('._transdropOff').text(res.transferSearchRS.transferCore.dl.desc+','+res.transferSearchRS.transferCore.dl.cname);
				}else{
					$('._transdropOff').text(res.transferSearchRS.transferCore.dl.desc);
				}
					pricetagConvert.init();
					$('.loadingFare').hide();
	                $('.trnsfrSlider').show();
					var owl = $('.trnsfrSlider');					
					owl.owlCarousel({
			            items: 4,
			            itemsDesktop: [1199, 4],
						itemsTablet: [980, 3],
			            itemsTabletSmall: [639, 2],
						itemsMobile: [478, 1],
			            lazyLoad: true,
			            navigation: true,
			            pagination: true,
			            autoPlay: false,
						rewindNav: false,
			            stopOnHover: true,
			        });		
				});
				//$($t).parants('transferCrossGrid').find('._transPickup').text(res.transferCore.pl.desc);
				//$($t).parants('transferCrossGrid').find('._transdropOff').text(res.transferCore.dl.desc);			
				
			});

		/*setTimeout(function(){
 
        var owl = $(".trnsfrSlider");
        owl.owlCarousel({
            items: 4,
            itemsDesktop: [1199, 4],
			itemsTablet: [980, 3],
            itemsTabletSmall: [639, 2],
			itemsMobile: [478, 1],
            lazyLoad: true,
            navigation: true,
            pagination: true,
            autoPlay: false,
			rewindNav: false,
            stopOnHover: true,
        });
    	 
	},500);*/
	});
}
});

function validateTransfers(){
var status = true;
	if($("#pickUpLocation").val()==""){	
			growl_alert(i18n.t("providePickUpCity"));
			$("#pickUpLocation").addClass('error');
			status = false;
			return status;
		}
		else{
			$("#pickUpLocation").removeClass('error');
		}
		 if($("#dropOffLocation").val()==""){
		 growl_alert(i18n.t("provideDropOffCity"));
		 $("#dropOffLocation").addClass('error');
		 status = false;
			return status;
		 }
		 else{
			$("#dropOffLocation").removeClass('error');
		}
        
		 if($("#transfersDateFrom").val()==""){
		 growl_alert(i18n.t("providePickUpDate"));
		 $("#transfersDateFrom").addClass('error');
		 status = false;
			return status;
		 }
		  else{
			$("#transfersDateFrom").removeClass('error');
		}
		 if($('.timepicker .pickUpTime').val()==""){
		 growl_alert(i18n.t("providePickUpTime"));
		 $(".timepicker .pickUpTime").addClass('error');
		 status = false;
			return status;
		 }
		  else{
			$(".timepicker .pickUpTime").removeClass('error');
		}
		if($('.dropOffTime').is(':visible') && $('.timepicker .dropOffTime').val()==""){
		 growl_alert(i18n.t("provideDropOffTime"));
		 $(".timepicker .dropOffTime").addClass('error');
		 status = false;
			return status;
		 }
		  else{
			$(".timepicker .dropOffTime").removeClass('error');
		}
		if($('.dropOffTime').is(':visible') && parseInt($('.pickUpTime').val()) > parseInt($('.dropOffTime').val())){
			growl_alert(i18n.t("dropOffTCantLesspickupT"));
			status = false;
			return status;
			}	
			else if($('.dropOffTime').is(':visible') && parseInt($('.pickUpTime').val())==parseInt($('.dropOffTime').val())){
		  	growl_alert(i18n.t("pickupTNotDropOffT"));
		  	status = false;
			return status;
			}
			
			/*//for flight confirmation page validation
			 else if($('#flightarrtime').val()> parseInt($('.pickUpTime').val())){
             growl_alert(i18n.t("flight confirmation time cant not be less than pickup time"));
             status = false;
			 return status;
			}
			else if($('#flightarrtime').val()> parseInt($('.dropOffTime').val())){
            growl_alert(i18n.t("flight confirmation time cant not be less than dropoff time"));
            status = false;
			return status;
			}*/
			//for fph confirmation validation
			/* else if(parseInt($('#fphrrtime').val())> parseInt($('.pickUpTime').val())){
             growl_alert(i18n.t("fph confirmation time cant not be less than pickup time"));
             status = false;
			 return status;
			}
			 else if(parseInt($('#fphrrtime').val())> parseInt($('.dropOffTime').val())){
             growl_alert(i18n.t("fph confirmation time cant not be less than dropoff time"));
             status = false;
			 return status;
			}*/
		   var a = moment($('#transferPickupDate').val().split("T")[0]);
		   //var c = moment($('#transferPickupDate').val().split("T")[1]);
           var originalProduct=$('#originalProduct').val();
           var b = moment(moment($('#transfersDateFrom').val().split("T")[0],'DD/MM/YYYY').format('YYYY-MM-DD'));
          
          if(originalProduct=="FLIGHT"){
           if(a.diff(b, 'days')==0 && parseInt($('.pickUpTime').val()) < $('#transferPickupDate').val().split("T")[1].split(":")[0]){
           	 growl_alert(i18n.t("flightTCantLessPickupT"));
           	 ptfObj.addClass("error");
            status = false;
			return status;
           }
           else{
           ptfObj.removeClass("error");
           }
       }
       if(originalProduct=="FPH"){
       	 if(a.diff(b, 'days')==0 && parseInt($('.pickUpTime').val()) < $('#transferPickupDate').val().split("T")[1].split(":")[0]){
           	 growl_alert(i18n.t("flightTCantLessPickupT"));
           	 ptfObj.addClass("error");
            status = false;
			return status;
           }
           else{
           ptfObj.removeClass("error");
           }
       }
       if($("#pickUpLocation").val()==$("#dropOffLocation").val()){
			growl_alert(i18n.t("pickupNotDropOff"));
			 $("#pickUpLocation").addClass('error');
			 $("#dropOffLocation").addClass('error');
			status = false;
			return status;
			 }
			  else{
			$("#pickUpLocation").removeClass('error');
			$("#dropOffLocation").removeClass('error');
		}
		return status;
}
function buildLocation(key){
	var location;
	if(key[0]=='Airport'){
		location= {
				"type": key[0][0],
				"code": key[1],
				"geo": {
					"lat": key[7] || 25.197038,
					"lon": key[8] || 55.274385
				},
				"desc": key[3],
				"address": key[3],
				"cname": key[6],
				"cid": key[4],
				"cc": key[5],
				"zipCode": key[5]
		}

	}
	else if(key[0]=='Hotel'){
		location={
				"type": key[0][0],
				"code": key[1],
				"geo": {
					"lat": key[10] || 25.197038,
					"lon": key[11] || 55.274385
				},
				"desc": key[4],
				"address": key[6],
				"cname": key[6],
				"cid": key[5],
				"cc": key[9],
				"zipCode": key[9]
		}

	}
	return location;
};
//transfer send vocher code.
/*$('body').on('click','._sendtransfervoucher',function(){
	var email=$('._guestEmail').val();
	var bkngRef=$(this).attr('data-bookingRef');
	if(email===''){
		growl_alert(i18n.t("errEmail"));
		$('._guestEmail').addClass('error');
		return false;
	}
	else{
		if(email!==''){
			if(!_evl(email)){
				growl_alert(i18n.t("errEmaiAdd"));
				$('._guestEmail').addClass('error');
				return false;
			}
		}
		$('._guestEmail').removeClass('error');
		if(email !=='' && bkngRef !==null){
			var data={
					email:email,
					bkngRef:bkngRef,
					prdType:'Hotel',
					srvcType:'email_voucher'
			}
			$.post('/transfer/sendVoucher',{data:data},function(res){
				if(res!==null && res.status==="SUCCESS"){
					growl_alert(i18n.t("htlVoucherSuccess"));
					$('.alert_custom').addClass('alert-success');
					//notie.alert(1,'Voucher sent successfully',1);
				} 
				else{
					growl_alert(i18n.t('emailsendingfailed'));
				}
			});
		}
		
	}
});*/
//Email to guist vocher code.
$('body').on('click','._sendtransfervoucher',function(){
	var email=$('._guestEmail').val();
	var bkngRef=$(this).attr('data-bookingRef');
	if(email===''){
		growl_alert(i18n.t("errEmail"));
		$('._guestEmail').addClass('error');
		return false;
	}
	else{
		if(email!==''){
			if(!_evl(email)){
				growl_alert(i18n.t("errEmaiAdd"));
				$('._guestEmail').addClass('error');
				return false;
			}
		}
		$('._guestEmail').removeClass('error');
		if(email !=='' && bkngRef !==null){
			var data={
					email:email,
					bkngRef:bkngRef,
					prdType:'Transfers',
					srvcType:'email_voucher'
			}
			$.post('/transfer/sendVoucher',{data:data},function(res){
				if(res!==null && res.status==="SUCCESS"){
					growl_alert(i18n.t("trnsfrVoucherSuccess"));
					$('.alert_custom').addClass('alert-success');
					//notie.alert(1,'Voucher sent successfully',1);
				} 
				else{
					growl_alert(i18n.t('emailsendingfailed'));
				}
			});
		}
		
	}
});

/*//**********************Transfers************************
$('body').on('click','._searchTransfer',function(){
	console.log($('#dropOffSearchKey').val())
	
	var pickUpArgs=$('#pickUpSearchKey').val().split('>>');
	
	var dropOffArgs=$('#dropOffSearchKey').val().split('>>');
	var airportArgs='';
	var hotelArgs='';
	if(pickUpArgs[0]=='Airport'){
		airportArgs=pickUpArgs;
		hotelArgs=dropOffArgs;
	}else{
		airportArgs=dropOffArgs;
		hotelArgs=pickUpArgs;
	}
	
	$('.loadingFare').show();
	$('.trnsfrSlider').hide();
	var pdt=$('#_pdtHidden').val();
	//var uid=$('#_uidHidden').val();
	var fphProductId=$('#_fphProductId').val();
	var args={
		pdt:pdt,
		uid:hotelArgs[1],
		fphProductId:fphProductId,
		pickUpType:pickUpArgs[0][0],
		dropOffType:dropOffArgs[0][0],
		pickUpArgs:pickUpArgs,
		dropOffArgs:dropOffArgs,
		originalProduct:'FPH'
		
		
	}
	console.log(args);
	
	$.get('/transferResults', args, function(res) {
		console.log(res);
		$.get('/common/themes/v2/tmpl/transfers/transfersResults.ejs',{},function(template){
					//console.log($('.transferCrossSeller'));
					transferService.dynamicTemplate = template;			
					transferService.loadTemplate('crossTransferTmpl',{res},$('.trnsfrSliderBlock'));
					pricetagConvert.init();
					$('.loadingFare').hide();
					$('.trnsfrSlider').show();					
					var owl = $('.trnsfrSlider');					
					owl.owlCarousel({
			            items: 4,
			            itemsDesktop: [1199, 4],
						itemsTablet: [980, 3],
			            itemsTabletSmall: [639, 2],
						itemsMobile: [478, 1],
			            lazyLoad: true,
			            navigation: true,
			            pagination: true,
			            autoPlay: false,
						rewindNav: false,
			            stopOnHover: true,
			        });				
			});

		setTimeout(function(){
 
        var owl = $(".trnsfrSlider");
        owl.owlCarousel({
            items: 4,
            itemsDesktop: [1199, 4],
			itemsTablet: [980, 3],
            itemsTabletSmall: [639, 2],
			itemsMobile: [478, 1],
            lazyLoad: true,
            navigation: true,
            pagination: true,
            autoPlay: false,
			rewindNav: false,
            stopOnHover: true,
        });
    	 
	},500);
	});
});*/

/*
	when search response does not provide cancellation policy, 
	get the cancellation policy from the check availability response. 
*/
$('body').on('mouseover','._cPolicy',function(){
	var $t = $(this);
	var toolTip = $(this).find('.tooltipCustomCont');
	toolTip.show();
	$(toolTip).find('.loadingFare').show();
	var target = $(this).parents('.contView').find('._transCanPolicy');	
	if($t.attr('data_cFlag')=="false"){		
		var arg={
				echoToken:target.attr('data_echoToken'),
				index:target.attr('data_index'),
				loggerId:target.attr('data_loggerId'),
				originalProductId:$('#originalProductId').val(),
				originalProduct:$('#originalProduct').val()
			};
		$.get('/transfer/checkAvailability',arg,function(res){ 
			if(res.bookingInfoResponse && res.bookingInfoResponse.transferBookingInfoRS && res.bookingInfoResponse.transferBookingInfoRS.bookingInfo){
				var bookingInfo=res.bookingInfoResponse.transferBookingInfoRS.bookingInfo;
				transferService.loadTemplate('cancellationPolicy',bookingInfo,toolTip,function(){
				pricetagConvert.init();
				toolTip.show();
				$t.attr('data_cFlag','true');
			});
		}	
		});
	}else{
		toolTip.show();
	}

});
//Function for alphanumeric validations
function AlphaNumericonly(n){
	  var regex = /^[A-Za-z0-9\s]+$/i;
	  return regex.test(n);
}

function validateaaldal(){
	var condition = true;
	// GTA Hotel Validation
	  if($('#gtaSrchHtl').is(':checked')) {	
    	if ($('#GTrHotlSearchKey').val() == "") {
			  growl_alert(i18n.t("PlsEntYourHtlDtl"));
            $("#GTrHotel").addClass('error');
            condition = false;
            return condition;
        } else {
            $("#GTrHotel").removeClass('error');
        }
      }
      if($('#gtaEntHtl').is(':checked')) {     
        if ($('#GTrHotelEnt').val() == "") {
			  growl_alert(i18n.t("PlsEntYourHtlDtl"));
            $("#GTrHotelEnt").addClass('error');
            condition = false;
            return condition;
        } else if(!AlphaNumericonly($('#GTrHotelEnt').val())){
        	 growl_alert(i18n.t("validHtlDetl"));
			$('#GTrHotelEnt').addClass('error');
			condition = false;
			 return condition;
	}
        else {
            $("#GTrHotelEnt").removeClass('error');
        }
      }
        

	//Arrival validations
         if ($('#arrAirline').val() == "") {
			  growl_alert(i18n.t("Pleaseprovidearrivingairlinedetails"));
            $("#arrAirline").addClass('error');
            condition = false;
            return condition;
        } else if(!AlphaNumericonly($('#arrAirline').val())){
        	 growl_alert(i18n.t("validArrFlightDetl"));
			$('#arrAirline').addClass('error');
			condition = false;
			 return condition;
	} else {
            $("#arrAirline").removeClass('error');
        }
        //Arrival Flight Number Details validations
        if ($('#arrFlightno').val() == "") {
			growl_alert(i18n.t("pleaseprovidearrivalflightnumber"));
            $("#arrFlightno").addClass('error');
            condition = false;
            return condition;
        } else if(!AlphaNumericonly($("#arrFlightno").val())){
        	 growl_alert(i18n.t("validArrFlightNum"));
			$("#arrFlightno").addClass('error');
			condition = false;
			 return condition;
	}
        else {
            $("#arrFlightno").removeClass('error');
        }


        if(typeof $('#arrivalFlightHidden').val() != "undefined" && $('#arrivalFlightHidden').val() == ""){
        	growl_alert("plzPrvdArrvFltDate");
            $(".arrivalFlightDate").addClass('error');
            condition = false;
            return condition;
        }else{
        	$(".arrivalFlightDate").removeClass('error');
        }

        //both aar time and dep time validations.
        if (parseInt($('#arrTransFTime').val()) == parseInt($('#depTransFTime').val())) {
			growl_alert(i18n.t("arrivaltimeanddepartingtimecannotbesame"));
            $("#arrTransFTime").addClass('error');
            $("#depTransFTime").addClass('error');
            condition = false;
            return condition;
        } else {
            $("#arrTransFTime").removeClass('error');
            $("#depTransFTime").removeClass('error');
        }

        //flight Departing details validations
        if ($('#depAirline').val() == "") {
			growl_alert(i18n.t("pleaseprovidedepartingairlinedetails"));
            $("#depAirline").addClass('error');
            condition = false;
            return condition;
        }else if(!AlphaNumericonly($("#depAirline").val())){
        	 growl_alert(i18n.t("validDepFlightDetl"));
			$("#depAirline").addClass('error');
			condition = false;
			 return condition;
	    }
         else {
            $("#depAirline").removeClass('error');
        }
        if ($('#depFilghtno').val() == "") {
			growl_alert(i18n.t("pleaseprovidedepartingflightno"));
            $("#depFilghtno").addClass('error');
            condition = false;
            return condition;
        }else if(!AlphaNumericonly($("#depFilghtno").val())){
        	 growl_alert(i18n.t("validDepFlightNum"));
			$("#depFilghtno").addClass('error');
			condition = false;
			 return condition;
	    } 
        else {
            $("#depFilghtno").removeClass('error');
        }
        if(typeof $('#departureFlightHidden').val() != "undefined" && $('#departureFlightHidden').val() == ""){
        	growl_alert("plzPrvdDepFltDate");
            $(".departureFlightDate").addClass('error');
            condition = false;
            return condition;
        }else{
        	$(".departureFlightDate").removeClass('error');
        }
		var departureFlightDate = $('#departureFlightHidden').val();
		var departureFlightTime = $('#depTransFTime').val();
		var departureFlightDT = departureFlightDate+'/'+departureFlightTime;
		var dropOffDate = $('._dropOffDate').val();
		var date1 = moment(dropOffDate,'YYYY/MM/DD/HH:mm').format('DD-MM-YYYY HH:mm');
		var date2 = moment(departureFlightDT,'YYYY/MM/DD/HH:mm').format('DD-MM-YYYY HH:mm');
		var diffMinutes = moment(date2,'DD-MM-YYYY HH:mm').diff(moment(date1,'DD-MM-YYYY HH:mm'),'minutes');
	
		if(typeof departureFlightDate != 'undefined'){
			if(diffMinutes<180){
				growl_alert("Departing airline time should be 3 hours excess than drop-off time");
				$('.departureFlightDate').addClass('error');
				$('#depTransFTime').addClass('error');
				condition = false;
                return condition;			
			}else{
				$('.departureFlightDate').removeClass('error');
				$('#depTransFTime').removeClass('error');
			}
		}
		return condition;	
}

$('body').on('mouseover','._cmyaccPolicy',function(){
	var $t = $(this);
	var toolTip = $(this).find('.tooltipCustomCont');
	toolTip.show();
	$(toolTip).find('.loadingFare').show();
	var target = $(this).parents('.contView').find('._transCanPolicy');	
	if($t.attr('data_cFlag')=="false"){		
		var arg={
				echoToken:target.attr('data_echoToken'),
				index:target.attr('data_index'),
				loggerId:target.attr('data_loggerId'),
				//originalProductId:$('#originalProductId').val(),
				originalProduct:$('#originalProduct').val()
			};
			//$.get('/transfer/myaccCheckAvailability',{echoToken:echoToken,index:index,loggerId:loggerId,originalProduct:originalProduct},function(res){
		$.get('/transfer/myaccCheckAvailability',arg,function(res){ 
			if(res.bookingInfoResponse && res.bookingInfoResponse.transferBookingInfoRS && res.bookingInfoResponse.transferBookingInfoRS.bookingInfo){
				var bookingInfo=res.bookingInfoResponse.transferBookingInfoRS.bookingInfo;
				transferService.loadTemplate('cancellationPolicy',bookingInfo,toolTip,function(){
				pricetagConvert.init();
				toolTip.show();
				$t.attr('data_cFlag','true');
			});
		}	
		});
	}else{
		toolTip.show();
	}

});
// For GTA Hotel Info (radio)  
$('#gtaEntHtl').on('change', function(){
	$(".entHtlSec").show();
	$(".srcHtlSec").hide();
});
$('#gtaSrchHtl').on('change', function(){
	$(".srcHtlSec").show();
	$(".entHtlSec").hide();
});



var lang = $('html').attr('data-lang');

var myTripFlightData,myDashboardData, tripData ,filteredData=[];

$(document).ready(function(){
	console.log($('._rewardsCntr'));
	//loadTranslations();
	 $('._dpSelector').each(function(){
		 var maxAge = $(this).attr('data-maxage');
		 $(this).birthdayPicker({
		 maxAge: maxAge,
		 monthFormat:'short',
	     dateFormat:'littleEndian',
	     callback:function(e){
		    //console.log(e);
		},
	});	
 });
	//facebook integration for desktop application
	window.fbAsyncInit = function() {
		  FB.init({
		    appId      : '1522344411350372',
		    cookie     : true,  // enable cookies to allow the server to access the session
		    xfbml      : true,  // parse social plugins on this page
		    version    : 'v2.2' // use version 2.2
		  });
		  };
		  
		  
	(function(d, s, id) {
			    var js, fjs = d.getElementsByTagName(s)[0];
			    if (d.getElementById(id)) return;
			    js = d.createElement(s); js.id = id;
			    js.src = "//connect.facebook.net/en_US/sdk.js";
			    fjs.parentNode.insertBefore(js, fjs);
	}(document, 'script', 'facebook-jssdk'));
	
	//google plus integration for desktop application
	(function() {
	    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
	    po.src = 'https://apis.google.com/js/client.js?onload=signinCallback';
	    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
	  })();
	  
	  myAccountSerivce.init();
// the franchise loading country and city.
if($('#countyList').length>0 && $('#forCountyList').length>0 && $('#countyListSel').length>0){
	
var $trgtOrgin = $('#countyList');
$($trgtOrgin).empty();
var tempCL = JSON.parse($('#forCountyList').val());
var tempCLSort = sortObject(tempCL);
var cmsCL = [];
var cs = $('#countyListSel').val();
cmsCL.push("<option value=''>Select Location</option>");
for(var i in tempCLSort)
{
	if(tempCLSort[i][1] != ""){
		cmsCL.push("<option value='"+tempCLSort[i][0]+"'"+((+cs.indexOf(tempCLSort[i][0])!= -1)? 'selected=selected':'')+" >"+tempCLSort[i][1]+"</option>");
	}
}
$trgtOrgin.append(cmsCL);
//$("#countyList").select2();
var cityList = {};
if(cs){
	var $trgtOrgin1 = $('#cityList');
	$($trgtOrgin1).empty();
	$.get('/franchise/getCityList/'+ cs,{},function(res){
		for(var i in res){
			cityList[res[i].cityId] = res[i].cityName.en;
		}
		$('#forCityList').val(JSON.stringify(cityList));
		var $trgtOrgin1 = $('#cityList');
		$($trgtOrgin1).empty();
		var tempCL = JSON.parse($('#forCityList').val());
		var cmsCL = [];
		var city = $('#cityListSel').val();
			cmsCL.push("<option value=''>Select Location</option>");
		 for(var i in tempCL)
		{
			cmsCL.push("<option value='"+i+"'"+((+city.indexOf(i)!= -1)? 'selected=selected':'')+"  >"+tempCL[i]+"</option>");
		}
		$trgtOrgin1.append(cmsCL); 
	});
	$("#cityList").select2();
}
}
// the franchise loading country and city.	
	// Loading Data table for My Statement	

	var tableUC;
	var tableUC1;	
	if($('._rewardsCntr')){
		setTimeout(function(){
			tableUC = $('#contList').DataTable();	
			tableUC.destroy();
			var dataTableID = $('#contList').attr('id');
			tableUC = $('#contList').DataTable({
				"ordering": false,
				"pageLength":30,
				"processing": true,
				"lengthChange": false,
				"pagingType": "full_numbers",
				"fnDrawCallback": function() {
					if(($(".paginate_button.current").text()).trim() == "1"){
						if ($('.count_data').val() < 31) {
							$('#'+dataTableID+'_info').hide();
							$('#'+dataTableID+'_paginate').hide();
						}
						else{
							$('#'+dataTableID+'_info').show();
							$('#'+dataTableID+'_paginate').show();
						}
					}
					else if($(".paginate_button.current").length === 0){
						$('#'+dataTableID+'_paginate').hide();
					}
					else{
						$('#'+dataTableID+'_paginate').show();
					}
					if($("#selectAll").is(':checked')){
						$(".checkboxPart").each(function() {
							this.checked = true;                        
						});
					}else{
						$(".checkboxPart").each(function() {
							this.checked = false;                        
						});
					}
				},
				"language": {
					"paginate": {
					  "previous": i18n.t('previous'),
					  "first":  i18n.t('first'),
					  "last":  i18n.t('last'),
					  "next":  i18n.t('next'),
					}
				}
			});	

		if($('#recentTrans').val()==='true'){
				tableUC1 = $('#rcontList').DataTable();	
				tableUC1.destroy();
				var dataTableID = $('#rcontList').attr('id');
				tableUC1 = $('#rcontList').DataTable({
					"ordering": false,
					//"pageLength":30,
					"processing": true,
					"lengthChange": false,
					"pagingType": "full_numbers", 
					"fnDrawCallback": function() {
						$('#'+dataTableID+'_paginate').hide();
						$('#rcontList_info').hide();
						if($("#selectAll").is(':checked')){
							$(".checkboxPart").each(function() {
								this.checked = true;                        
							});
						}else{
							$(".checkboxPart").each(function() {
								this.checked = false;                        
							});
						}
					}
				});
			}			
		},500);		
	}
	 // Add event listener for opening and closing details in My statement
	 $('body').on('click','#contList tr',function(){
	 
	 	var data = JSON.parse($(this).attr('data-info'));
		var mapping = JSON.parse($(this).attr('data-mapData'));
		var booking = $(this).attr('data-booking');
		if($(this).hasClass('shown')){
			// This row is already open - close it

			//$(this).child.hide();
			$(this).find('.pointsBox').hide();
			$(this).removeClass('shown');
			//$(this).html('<i class="flaticon-plus79"></i>');
		}else{
			// Open this row
			//row.child(formatView(data,mapping,booking)).show();
			var html = formatView(data,mapping,booking);
			$(this).append(html);
			$(this).addClass('shown');
			//$(this).html('<i class="flaticon-minus104"></i>');
		}
	 });
	  // Add event listener for opening and closing details in Recent Transaction
	 $('body').on('click','#rcontList tr',function(){
	 
	 	var data = JSON.parse($(this).attr('data-info'));
		var mapping = JSON.parse($(this).attr('data-mapData'));
		var booking = $(this).attr('data-booking');
		if($(this).hasClass('shown')){
			// This row is already open - close it

			//$(this).child.hide();
			$(this).find('.pointsBox').hide();
			$(this).removeClass('shown');
			//$(this).html('<i class="flaticon-plus79"></i>');
		}else{
			// Open this row
			//row.child(formatView(data,mapping,booking)).show();
			var html = formatView(data,mapping,booking);
			$(this).append(html);
			$(this).addClass('shown');
			//$(this).html('<i class="flaticon-minus104"></i>');
		}
	 });
	/*$('#contList tbody').on('click', 'tr', function () { 
		var tr = $(this).closest('tr');
		var row = tableUC.row(tr);
		var data = JSON.parse($(this).attr('data-info'));
		var mapping = JSON.parse($(this).attr('data-mapData'));
		var booking = $(this).attr('data-booking');
		if(tr.hasClass('shown')){
			// This row is already open - close it
			row.child.hide();
			tr.find('.pointsBox').hide();
			tr.removeClass('shown');
			$(this).html('<i class="flaticon-plus79"></i>');
		}else{
			// Open this row
			//row.child(formatView(data,mapping,booking)).show();
			var html = formatView(data,mapping,booking);
			tr.append(html);
			tr.addClass('shown');
			$(this).html('<i class="flaticon-minus104"></i>');
		}
	});*/
	
	/*$('#rcontList tbody').on('click', 'td.details-control', function () {
		var tr = $(this).closest('tr');
		var row = tableUC1.row(tr);
		var data = JSON.parse($(this).attr('data-info'));
		var mapping = JSON.parse($(this).attr('data-mapData'));
		var booking = $(this).attr('data-booking');
		if(tr.hasClass('shown')){
			// This row is already open - close it
			row.child.hide();
			tr.find('.pointsBox').hide();
			tr.removeClass('shown');
			$(this).html('<i class="flaticon-plus79"></i>');
		}else{
			// Open this row
			//row.child(formatView(data,mapping,booking)).show();
			var html = formatView(data,mapping,booking);
			tr.append(html);
			tr.addClass('shown');
			$(this).html('<i class="flaticon-minus104"></i>');
		}
	});*/
	if($('.myCareerNew').length){
		
		clear_form_elements("myCareerNew");
		$('.residentCntry .cSel ._cdd').text('Please select your resident country');	
		$('.preferrecLoct .cSel ._cdd').text('Please select your resident country');	
	}
});



/* Formatting function for row details - modify as you need */
function formatView (responseData,mapping,bookingData) {
    // `d` is the original data object for the row
	var html = '';
    html = '<div class="pointsBox"><div class="clAfter">';
	if(bookingData =="" && responseData.transactions.product.toLowerCase() != "other"){
		html = html +'</small></span>'+ i18n.t("noDataFndForThsRcrd");
	}
	else{
		if(responseData.transactions.product.toLowerCase() == "other"){
	   		html = html +'<div>';
			if(responseData.transactions.earnInfo) {
				if(responseData.transactions.earnInfo.description && typeof responseData.transactions.earnInfo.description!='undefined' ) {
					html = html +'Description:'+responseData.transactions.earnInfo.description;   
				} else {
				 	html = html + i18n.t("noDataFndForThsRcrd");
				}
			}
			html = html +'</div>';
	   	}
		else{
			bookingData = JSON.parse(bookingData);
	   	   	html = html +'<span class="pointsPNR">'+i18n.t("flyinId")+'<small>';
	   	   	html = html + responseData.transactions.bookingCode.replace("B2"," ");
	   	   	if(responseData.transactions.product.toLowerCase() == "flight" && bookingData.flight != undefined) {
	   			html = html +'</small></span><figure class="fltImg"><img src="/img/flights/1x/airline-logos/'+bookingData.flight.airline+'.png" alt=""></figure>';
	   			html = html +'<div class="flightInfos">';
	   			var ddtime=bookingData.flight.departureDate; 
	   			var dtime=moment(ddtime,'DD-MMM-YYYY hh:mm:ss A').format('DD-MM-YYYY');
	   			var adtime=bookingData.flight.arrivalDate;
	   			var atime=moment(adtime,'DD-MMM-YYYY hh:mm:ss A').format('DD-MM-YYYY');
	   			html = html +'<span>'+ mapping.cityNames[bookingData.flight.departureAirport].en +'('+bookingData.flight.departureAirport+')<small>'+ dtime +'</small></span>';
	   			html = html +'<span>'+ mapping.cityNames[bookingData.flight.arrivalAirport].en +'('+bookingData.flight.arrivalAirport+')<small>'+ atime +'</small></span>';
	   			html = html +'</div>';
	   		}
	   	   	else if(responseData.transactions.product.toLowerCase() == "flight" && bookingData.flight == undefined) {
				html = html +'</small></span>'+ i18n.t("noDataFndForThsRcrd");
			}
	   	   	
	   	   	if(responseData.transactions.product.toLowerCase() === "hotel") {
	   			html = html +'</small></span><figure> <img src="'+mapping.hotelNames[bookingData.hotel.uniqueId].image+'" title="'+mapping.hotelNames[bookingData.hotel.uniqueId].hotelName+'" class="figImg" /></figure>';
	   			html = html +'<span class="hotelInfos">';
	   			html = html +'<h5>'+mapping.hotelNames[bookingData.hotel.uniqueId].hotelName+'<elm class="stars star'+mapping.hotelNames[bookingData.hotel.uniqueId].rating+'"></elm></h5>';
	   			html = html +'<p>'+mapping.hotelNames[bookingData.hotel.uniqueId].cityName+', '+mapping.hotelNames[bookingData.hotel.uniqueId].countryName+'</p>';
	   			html = html +'<span class="checkInfo">'+i18n.t("checkIn")+': <elm>'+moment(bookingData.hotel.checkIn,'DD-MMM-YYYY').format('DD-MM-YYYY')+'</elm></span>';
	   			html = html +'<span class="checkInfo">'+i18n.t("checkOut")+': <elm>'+moment(bookingData.hotel.checkOut,'DD-MMM-YYYY').format('DD-MM-YYYY')+'</elm> </span></span>';
	   	   	}
	   	   	
	   	   	if(responseData.transactions.product.toLowerCase() == "fph"){
	   	   		html = html +'</small></span><div class="fphInfos"><div class="fphBlck"><figure class="fltImg"><img src="/img/flights/1x/airline-logos/'+bookingData.flight.airline+'.png" alt=""></figure>';
	   			var departureDate = moment(bookingData.flight.departureDate,'DD-MMM-YYYY hh:mm:ss A');
	   			var arrivalDate = moment(bookingData.flight.arrivalDate,'DD-MMM-YYYY hh:mm:ss A');
	   			html = html +'<div class="flightInfos">';
	   			html = html +'<span>'+mapping.cityNames[bookingData.flight.departureAirport].en+'('+bookingData.flight.departureAirport+')<small><elm>'+departureDate.format("hh:mm A")+'</elm>, '+departureDate.format("ddd, DD MMM YYYY")+'</small></span>';
	   			html = html +'<span>'+mapping.cityNames[bookingData.flight.arrivalAirport].en+'('+bookingData.flight.arrivalAirport+')<small><elm>'+arrivalDate.format("hh:mm A")+'</elm>, '+arrivalDate.format("ddd, DD MMM YYYY")+'</small></span>';
	   			html = html +'</div></div>';
	   			html = html +'<div class="fphBlck"><figure><img src="'+mapping.hotelNames[bookingData.hotel.uniqueId].image+'" alt="" class="figImg"></figure>';
	   			html = html +'<span class="hotelInfos"><h5>'+mapping.hotelNames[bookingData.hotel.uniqueId].hotelName+' <elm class="stars star'+mapping.hotelNames[bookingData.hotel.uniqueId].rating+'"></elm></h5>'; 
	   			html = html +'<p>'+mapping.hotelNames[bookingData.hotel.uniqueId].cityName+', '+mapping.hotelNames[bookingData.hotel.uniqueId].countryName+'</p>';
				html = html +'<span class="checkInfo">'+i18n.t("checkIn")+': <elm>'+moment(bookingData.hotel.checkIn,'DD-MMM-YYYY').format('DD-MM-YYYY')+'</elm></span>';
	   			html = html +'<span class="checkInfo">'+i18n.t("checkOut")+': <elm>'+moment(bookingData.hotel.checkOut,'DD-MMM-YYYY').format('DD-MM-YYYY')+'</elm> </span>';
	   			html = html +'</span></div></div>';
	   	   	}
		}
	}
	
   	html = html +'</div>';
	html = html +'</div>';
	return html;
}



function sortObject(obj) {
    var arr = [];
    var key;
    for (key in obj) {
        if (obj.hasOwnProperty(key)) {
            arr.push([key, obj[key]]);
        }
    }
    arr.sort(function(a, b) {
        var x=(a[1]).replace(/ /g,'').toLowerCase(),
            y=(b[1]).replace(/ /g,'').toLowerCase();
        return x<y ? -1 : x>y ? 1 : 0;
    });
    return arr; // returns array
}
$('body').on('change','#countyList', function(){

	var country = $(this).val();
	var cityList = {};
	var $thisId = $(this).attr("id");
	if(country!='' && country!=null){
		$.get('/franchise/getCityList/'+ country,{},function(res){
			
			for(var i in res){
				cityList[res[i].cityId] = res[i].cityName.en;
			}
			console.log('--cityList--',cityList);
			if($thisId=="countyList"){
				$('#forCityList').val(JSON.stringify(cityList));
				var $trgtOrgin = $('#cityList');
				var tempCL = JSON.parse($('#forCityList').val());
			}
			if($thisId=="countyListFph"){
				$('#forCityListFph').val(JSON.stringify(cityList));
				var $trgtOrgin = $('#cityListFph');
				var tempCL = JSON.parse($('#forCityListFph').val());
			}			
			$($trgtOrgin).empty();
			var tempCLSort = sortObject(tempCL);
			var cmsCL = [];
			for(var i in tempCLSort)
			{
				//console.log(tempCLSort[i][0] , tempCLSort[i][1]);
				if(tempCLSort[i][1] != ""){
					cmsCL.push("<option value='"+tempCLSort[i][0]+"' >"+tempCLSort[i][1]+"</option>");
				}
				//cmsCL.push("<option value='"+i+"' >"+tempCL[i]+"</option>");
			}
			$trgtOrgin.append(cmsCL);
		});
	}else{
		if($thisId=="countyList"){
			$('#cityList').empty();
		}
		
	}
	
});
$('.removeErrorFrgtPwd').on('click',function(){
	
	$('#reset_emailId').removeClass('validate_error_message'); 
	$('#email_id').removeClass('validate_error_message'); 
	$('#account_pwd').removeClass('validate_error_message');
	
});
$('.myAc').on('click',function(){
	$('#reset_emailId').removeClass('validate_error_message'); 
	$('#email_id').removeClass('validate_error_message'); 
	$('#account_pwd').removeClass('validate_error_message'); 
	$('#signup_email').removeClass('validate_error_message');
	$('#signup_pwd').removeClass('validate_error_message'); 
});


/**
 * Generationg Country list drop down with country code and country name
 *  @param obj
 */
function generateCountryCodeSelect(obj){
	var $target= $('body').find('#countries');
	var ccObj = obj.res;
	$target.each(function(){
	var html = [];
		 $(this).empty();
		 
		 if(typeof ccObj!="undefined" && ccObj!=""){
			for(i in ccObj){
				if($("#domainNa").val()=="Global" && ccObj[i].CAC=="966"){
					html.push('<option value="'+ccObj[i].CAC+'" data-image="/common/themes/v1/images/spacer.gif" data-cc-code="'+ccObj[i].CAC+'" data-imagecss="'+ccObj[i].CC+' fnone cc-flag" selected>'+ccObj[i].CN+' + '+ccObj[i].CAC+'</option>');
				}else if($("#domainNa").val()=="Egypt" && ccObj[i].CAC=="20"){
					html.push('<option value="'+ccObj[i].CAC+'" data-image="/common/themes/v1/images/spacer.gif" data-cc-code="'+ccObj[i].CAC+'" data-imagecss="'+ccObj[i].CC+' fnone cc-flag" selected>'+ccObj[i].CN+' + '+ccObj[i].CAC+'</option>');
				}else{
					html.push('<option value="'+ccObj[i].CAC+'" data-image="/common/themes/v1/images/spacer.gif" data-cc-code="'+ccObj[i].CAC+'" data-imagecss="'+ccObj[i].CC+' fnone cc-flag" >'+ccObj[i].CN+' + '+ccObj[i].CAC+'</option>');
				}				
			}
		}
		$(this).append(html.join(''));
	});
}


function getAirportFrom(){
	var search=$('#search');
    var text=search.val();
    //console.log("from "+text);       
    $.get( "/predictive/"+text, {}, function(data) {    	
        var predictiveArr = [];
        for(var i in data){			
			var d = data[i].payload;
			//console.log(d);
			predictiveArr.push('<li><a href="#" id="'+d.pkPredictiveSearchDataId+'" class="autoRes" data-iatacode="'+d.airportCode+'" data-city-name="'+d.cityName+'"  data-country-name="'+d.countryName+'" data-airport-name="'+d.airportName+'"><span>'+d.airportCode+' '+'</span>'+d.airportName+',  '+d.cityName+ ', '  +d.countryName+ '</a></li>');
		}
        
        if(data){
        	$('.predicativeDataMyAcc').show();
        }
       $('.predData').empty();
         /*$('.predData').show();*/
        $('.predData').append(predictiveArr.join(''));
        console.log($('.predData'));         
		if (focus==1) setTimeout(function(){getAirportSuggest()}, 300);
	});
}

$('body').on('click','.autoRes',function(){
	var trgtElm = $(this).parents('.predicativeDataMyAcc').attr('data-predicative');
	var trgtHdn = $(this).parents('.predicativeDataMyAcc').attr('data-iata');
	$('input[name='+trgtElm+']').val($(this).text());
	$('input[name='+trgtHdn+']').val($(this).attr('data-iatacode'));
	//$('.predData').hide();
	$('.predicativeDataMyAcc').hide();
	return false;
});
/**
 * Add traveller
 */
function addTraveller(id){
	console.log('user :'+id);
	var profileID=id;
    var n = new Date().getFullYear();
    var dobStartYear=n-116;
    var expiryYear=n+484;
    var countryList = [];
    var preferences = {};
    var selectedPref = {};
    async.parallel([
			function(callback){
				$.post('/countries',function(res){
					countryList.push(res);
					//console.log(countryList);
					callback();
				});
				
			},function(callback){
				$.get('/getPrefList',{},function(res){
					preferences=res.prefObj;
					selectedPref=res.selectedPref;
					callback();
				});
			}],
			function(){
    		//console.log('htl pre'+JSON.stringify(preferences.fltPref));
				$.get('/common/themes/'+window.templatePath+'/tmpl/myAccount/myProfileEdit.ejs?v=nd-v0102',{},function(template){
					//set the EJS template to myProfileMobile.dynamicTemplate
					myProfileMobile.dynamicTemplate = template;
					//set the data for UI
					 var travellerData = {
					    		profileID:profileID,
					    		countries:countryList,
					    		travellerDetails:{},
					    		passportDetails:{},
					    		preferences:preferences,
								iqamaDetails:{},
								nationalIdDetails:{}
						}
					//Render the template
					 myProfileMobile.loadTemplate('add-traveller-view',travellerData,$('.myAccountContainer'));
					 $("._nationalityDoc").attr("checked","checked");
					 window.history.pushState('forward', null, '#addTraveller');
					 myProfileMobile.hash = window.location.hash.substring(1);
					 $(".airlinePreff,.mealPref,.seatPref,.specialPref,.rateBasis,.starRating,.prefFacilities,.propertyGroup,.FFPairlinePref").select2();
					 $('._dpSelector').each(function(){
							 var maxAge = $(this).attr('data-maxage');
							 $(this).birthdayPicker({
							 maxAge: maxAge,
							 monthFormat:'short',
						     dateFormat:'littleEndian',
						     callback:function(e){
							    //console.log(e);
							},
						});	
					 });
				});	
				
				$.get('/stdCountries',function(res){
					if(res =='ERROR'){
						location.href="/flight/error"; 
						return;
					}
					else{
						generateCountryCodeSelect(res);
						//setCounryFlag();
						return res;
					}
				});
				 var gccList = $('#gccCountryList').val() || "";
				 var gccArr = gccList.split('|');					 
				 $("#nationality ._nationalityIdCntry").find('option').each(function(){
					if($(this)[0].value!="" && gccArr.indexOf($(this)[0].value)==-1){
						$(this).remove();
					}
				});
				 $("#nationality ._natIssuedCountry").find('option').each(function(){
					if($(this)[0].value!="" && gccArr.indexOf($(this)[0].value)==-1){
						$(this).remove();
					}
				});
			}
	);	
}

function populateFFP(){
	var ffp=$('.FFPairlinePref').val();
	var ffpclass=$('.ffpClass').val();
	var ffpObj=JSON.parse(ffpclass);	
	var ffpProgram='';
	for(var i in ffp){
		if(ffpProgram==''){
			ffpProgram = ffpObj[ffp[i]].ffpName.en;
		}else{
			ffpProgram = ffpProgram+', '+ffpObj[ffp[i]].ffpName.en;
		}		
	}
	 $('.ffpPrefName').val(ffpProgram);
}

/**
 * Fetch FFP
 */
function fetchFFP(arg){
	//FFP Name Select Element
	var ffpNameElm = $('#ffpName'),
	//Selected airline code
	airlineCode = arg.options[arg.selectedIndex].value,
	//search request object
	ffpRequest={airline:airlineCode},
	htmlObj = "";
	
	var selectedAirlines = [];
	for(var sel in arg){
		if(sel.selected == true)
		selectedAirlines.push(sel.value);
	}
			//console.log("selected airlines "+JSON.stringify(selectedAirlines));
	//get ffpname list
	$.post('/fetchFFP', {ffpRequest:ffpRequest},function(res){
		//check the response got value
		if(res!=null){
			for(var response in res){
				htmlObj+= '<option value="'+res[response]._id+'">'+res[response].ffpName.en+'</option>'
			}
		}
		//empty and append the html string to select element
		ffpNameElm.empty().append(htmlObj);
		//initialize the select2 module event for the #ffpName
		ffpNameElm.select2();
   });
}

/**
 * Add traveller
 */
function editTraveller(bDetails,passportDetails){
	var basicDetails=JSON.parse(bDetails);
	var passportDetails=JSON.parse(passportDetails);
	var mAreaCode;
    var n = new Date().getFullYear();
    var dobStartYear=n-116;
    var expiryYear=n+484;
    var countryList = [];
    var preferences = {};
    var areaCodeCountry={};
    var selectedPref = {};
    var domainName={};
    var selectedCur;
    var savedCardDetails={};
	var documents={};
    async.parallel([
			function(callback){
				$.post('/countries',function(res){
					countryList.push(res);
					//console.log(countryList);
					callback();
				});
				
			},
			function(callback){
				$.get('/stdCountries',function(res){
					if(res =='ERROR'){
						location.href="/flight/error"; 
						callback();
					}
					else{
						areaCodeCountry = res;
						callback();
					}
				});
				
			},function(callback){
				$.get('/getPrefList',{email:basicDetails.email,profileID:basicDetails.profileID,passportDet:passportDetails},function(res){
					preferences=res.prefObj;
					selectedPref=res.selectedPref;
					domainName=res.domainName;
					selectedCur=res.selectedCur;
					documents=res.documents;
					callback();
				});
				
			},
			function(callback){
				$.get('/getSavedCards',function(res){
					savedCardDetails=res;
					callback();
				});				
			}],
			function(){
    	
				$.get('/common/themes/'+window.templatePath+'/tmpl/myAccount/myProfileEdit.ejs?v=nd-v0102',{},function(template){
					//set the EJS template to myProfileMobile.dynamicTemplate
					myProfileMobile.dynamicTemplate = template;
					//set the data for UI
					 var travellerData = {
							    profileID:basicDetails.profileID,
					    		countries:countryList,
					    		travellerDetails:basicDetails,
					    		passportDetails:documents.passportDetails,
					    		preferences:preferences,
					    		selectedPref:selectedPref,
					    		regUser:basicDetails.regUser,
					    		domainName:domainName,
					    		selectedCur:selectedCur,
					    		savedCardDetails:savedCardDetails,
								nationalIdDetails:documents.nationalIdDetails,
								iqamaDetails:documents.iqamaIdDetails,
								enableRewards:basicDetails.flyinRewardEnable
		
						}
					 var domain_type = "eg.flyin.com";
					 if($("#domainNa").val()=="Global"){
						 domain_type = "flyin.com";
					 }
							 
					//Render the template
					 myProfileMobile.loadTemplate('add-traveller-view',travellerData,$('.myAccountContainer'));
					 generateCountryCodeSelect(areaCodeCountry);
					 if(basicDetails.mobileAreaCode!=undefined){
						 $('._txtCountryAreaCode').val(basicDetails.mobileAreaCode);
					 }else{
						 if($("#domainNa").val()=="Global"){
							 $('._txtCountryAreaCode').val("966");
						 }else{
							 $('._txtCountryAreaCode').val("20");
						 }
					 }					 
					 $('._contactCountry').val(travellerData.travellerDetails.country);
					 $('._passportCountry').val(travellerData.passportDetails.countryIssued);
					 $('._nationality').val(travellerData.passportDetails.nationality);
					 
					 var gccList = $('#gccCountryList').val() || "";
					 var gccArr = gccList.split('|');					 
					 $("#nationality ._nationalityIdCntry").find('option').each(function(){
						if($(this)[0].value!="" && gccArr.indexOf($(this)[0].value)==-1){
							$(this).remove();
						}
					});
					 $("#nationality ._natIssuedCountry").find('option').each(function(){
						if($(this)[0].value!="" && gccArr.indexOf($(this)[0].value)==-1){
							$(this).remove();
						}
					});
					
					 if(travellerData.nationalIdDetails){
						 $('._nationalID').val(travellerData.nationalIdDetails.nationalId);
						 $('._nationalityIdCntry').val(travellerData.nationalIdDetails.nationality);
						 $('._nationalityIdCntry').attr({ placeholder:travellerData.nationalIdDetails.nationality, name:travellerData.nationalIdDetails.nationality});
						 $('._natIssuedCountry').val(travellerData.nationalIdDetails.issuedCountry);
					 }
					 
					 if(travellerData.iqamaDetails){
						 $('.iqamaId').val(travellerData.iqamaDetails.iqamaId);
						 $('._iqamanationality').val(travellerData.iqamaDetails.iqamaNationality);
						 $('._iqamanationality').attr({ placeholder:travellerData.iqamaDetails.iqamaNationality, name:travellerData.iqamaDetails.iqamaNationality});
					 }
					 
					 if(travellerData.nationalIdDetails && travellerData.nationalIdDetails.nationalId !== ''){
						 $('#nationality').show();
						 $('#iqama').hide();
						 $("._nationalityDoc").attr("checked","checked");
					 }
					 else if(travellerData.iqamaDetails && travellerData.iqamaDetails.iqamaId !== ''){
						  $('#nationality').hide();
						  $('#iqama').show();
						  $("._iqamaDoc").attr("checked","checked");
					 }
					 
					 window.history.pushState('forward', null, '#addTraveller');
					 myProfileMobile.hash = window.location.hash.substring(1);
					$('._title').val(travellerData.travellerDetails.title);
					mAreaCode = travellerData.travellerDetails.mobileAreaCode;
					 $('._dpSelector').each(function(){
							 var maxAge = $(this).attr('data-maxage');
							 $(this).birthdayPicker({
							 maxAge: maxAge,
							 monthFormat:'short',
						     dateFormat:'littleEndian',
						     callback:function(e){
							    //console.log(e);								
							},
						});	
					 });

					 //Date Of Birth					  
					 if(travellerData.passportDetails.dateofBirth !='' && travellerData.passportDetails.dateofBirth != null){	 
						 //var dobHidden = moment(travellerData.passportDetails.dateofBirth,"DD-MM-YYYY").format("YYYY-MM-DD");
						 dateOfBirth = travellerData.passportDetails.dateofBirth.split('-');
					     dateOfBirthDay = parseInt(dateOfBirth[2]);
						 dateOfBirthMonth = parseInt(dateOfBirth[1]);
					     dateOfBirthYear = parseInt(dateOfBirth[0]);
						 $('#dp1').find('.birthDate').addClass('dayBirth');
						 $('#dp1').find('.birthMonth').addClass('monthBirth');
						 $('#dp1').find('.birthYear').addClass('yearBirth');
						 $('#dp1').find('.birthDay').val(travellerData.passportDetails.dateofBirth);
						 $('#dp1').find('.dayBirth').val(dateOfBirthDay);
						 $('#dp1').find('.monthBirth').val(dateOfBirthMonth);
						 $('#dp1').find('.yearBirth').val(dateOfBirthYear);						 
					 }
					 
					 //Passport Expiry
					 if(travellerData.passportDetails.expiryDate !='' && travellerData.passportDetails.expiryDate != null){
						 //var expHidden = moment(travellerData.passportDetails.expiryDate).format("YYYY-MM-DD");
						 iqamaExpiryDetails = travellerData.passportDetails.expiryDate.split('-');
	 					 passportExpiryDate = parseInt(iqamaExpiryDetails[2]);
						 passportExpiryMonth = parseInt(iqamaExpiryDetails[1]);
					     passportExpiryYear = parseInt(iqamaExpiryDetails[0]);
						 $('#dp2').find('.birthDate').addClass('passportExpiryDay');
						 $('#dp2').find('.birthMonth').addClass('passportExpiryMonth');
						 $('#dp2').find('.birthYear').addClass('passportExpiryYear');
						 $('#dp2').find('.birthDay').val(travellerData.passportDetails.expiryDate);
						 $('#dp2').find('.passportExpiryDay').val(passportExpiryDate);
						 $('#dp2').find('.passportExpiryMonth').val(passportExpiryMonth);
						 $('#dp2').find('.passportExpiryYear').val(passportExpiryYear);						 
					 }
					 
					//Iqama Expiry Date
					  if(travellerData.iqamaDetails && travellerData.iqamaDetails.iqamaExpirydate !='' && travellerData.iqamaDetails.iqamaExpirydate != null){
						 //var expHidden = moment(travellerData.iqamaDetails.iqamaExpirydate,"DD-MM-YYYY").format("YYYY-MM-DD");
						 passportExpiryDetails = travellerData.iqamaDetails.iqamaExpirydate.split('-');
	 					 passportExpiryDate = parseInt(passportExpiryDetails[2]);
						 passportExpiryMonth = parseInt(passportExpiryDetails[1]);
					     passportExpiryYear = parseInt(passportExpiryDetails[0]);
						 $('#dp').find('.birthDate').addClass('passportExpiryDay');
						 $('#dp').find('.birthMonth').addClass('passportExpiryMonth');
						 $('#dp').find('.birthYear').addClass('passportExpiryYear');
						 $('#dp').find('.birthDay').val(travellerData.iqamaDetails.iqamaExpirydate);
						 
						 $('#dp').find('.passportExpiryDay').val(passportExpiryDate);
						 $('#dp').find('.passportExpiryMonth').val(passportExpiryMonth);
						 $('#dp').find('.passportExpiryYear').val(passportExpiryYear);
						 
					 }
					 
					//select nationality or iqama doctype
					  if(travellerData.passportDetails.docType != undefined && travellerData.passportDetails.docType != ""){
						  if(travellerData.passportDetails.docType == "3"){
							  $('._nationalityDoc').trigger('click');
							  //$("._nationalityDoc").prop("checked","true");
						  }else if(travellerData.passportDetails.docType == "4"){
							  $('._iqamaDoc').trigger('click');
							  //$("._iqamaDoc").prop("checked","true");
						  }
					  }
					 
					 //fill flight and hotel preferences and alhilal if regUser
					 if(travellerData.preferences != null)
					 { 
						 //flight
						
						 $('.seatPref').val(travellerData.selectedPref.fltPref.seatPref);
						 $('.mealPref').val(travellerData.selectedPref.fltPref.mealPref);  
						 $('.airlinePreff').val(travellerData.selectedPref.fltPref.airlinePref);
						 $('.specialPref').val(travellerData.selectedPref.fltPref.specialAssistance);
						 if(typeof travellerData.selectedPref.frequentFlyerPgm!="undefined" && typeof travellerData.selectedPref.frequentFlyerPgm.FFPairlinePref!="undefined" && travellerData.selectedPref.frequentFlyerPgm.FFPairlinePref!=''){
							 $('.FFPairlinePref').val((travellerData.selectedPref.frequentFlyerPgm.FFPairlinePref).split(','));
							 var ffp=travellerData.selectedPref.frequentFlyerPgm.FFPairlinePref.split(",");
							 //console.log("abc3"+ffp);
							 var ffpObj=travellerData.selectedPref.ffpArr;
							 var ffpProgram=[];
								for(var i in ffp){
									ffpProgram.push(ffpObj[ffp[i]].en);
								}
							 $('.ffpPrefName').val(ffpProgram);
							 $('.frequentFlyerNum').val(travellerData.selectedPref.frequentFlyerPgm.frequentFlyerNum);
					 	}						 
						 $('.starRating').val(travellerData.selectedPref.htlPref.starRating);
						 $('.rateBasis').val(travellerData.selectedPref.htlPref.rateBasis);  
						 $('.prefFacilities').val(travellerData.selectedPref.htlPref.prefFacilities);   
						 $('.propertyGroup').val(travellerData.selectedPref.htlPref.propertyGroup);
						 if(travellerData.selectedPref.alhilal){
							 $('#checkboxFC').attr("checked","true");
						 }
					 }					 
					 $(".airlinePreff,.mealPref,.seatPref,.specialPref,.rateBasis,.starRating,.prefFacilities,.propertyGroup,.FFPairlinePref").select2();
					 populateFFP();
					 editProf({
						  "tier":"",
						    "preferred_language": lang,
						    "domain_type": domain_type,
						    "selected_currency": travellerData.selectedCur,
						    "preferred_landing_page": "",
						    "preferred_login_type": "",
						    "city": travellerData.travellerDetails.city || "",
						    "country": travellerData.travellerDetails.country || "",
						    "preferred_star_rating": $('.starRating').val() || "",
						    "preferred_board_basis": $('.rateBasis').val() || "",
						    "preferred_facilities": $('.prefFacilities').val() || "",
						    "preferred_property_group": $('.propertyGroup').val() || "",
						    "home_airport": travellerData.selectedPref.fltPref.homeAirport[0] || "",
						    "seat_preference": $('.seatPref').val() || "",
						    "meal_preference": $('.mealPref').val() || "",
						    "airline_preferences": $('.airlinePreff').val() || "",
						    "special_assistance": $('.specialPref').val() || "",
						    "frequent_flyer_programme": $('.ffpPrefName').val() || "",
						    "preferred_destination": "",
						    "recent_search": "",
						    "date_of_birth": (travellerData.passportDetails.dateofBirth!="")?new Date(travellerData.passportDetails.dateofBirth).toString():""
					});
				});
				
				/*$.get('/stdCountries',function(res){
					if(res =='ERROR'){
						location.href="/flight/error"; 
						return;
					}
					else{
						generateCountryCodeSelect(res);
						$('._txtCountryAreaCode').val(mAreaCode);
						return res;
					}
				});*/				
			}
	);	
}


$('body').on('keyup','._validator',function(){
	$(this).removeClass('error');
	$('._title').removeClass('error');
	//$(this).next('.error').remove();
});

/**
 * Save New Traveller
 */
$('body').on('click','._ffpClass',function(){
	return false;
	ffpData={
			ffpPgm:$('._ffpPgm').val(),
			ffpNo:$('._ffNo').val(),
			email:$(this).attr('ffp-email')
	}
	$.post('/addFFP', {ffpData:ffpData},function(d){
		if(d!=null){
			  notie.alert(1, d.message, 1);
			  //console.log(d.message);
			}		
		location.href= '/myProfile';
    });
});

/**
 * Save New Traveller
 */
$('body').on('click','._saveNewTravellers',function(){
	var $trgtElmValidate = $('._validator');
	var status = true;
	
	if( $trgtElmValidate.hasClass('_dob') && status==true){
		var dobDate = $trgtElmValidate.find('.birthDay').val();
		if(dobDate!=""){
			var currDate=moment().format("MM/DD/YYYY h:mm:ss");
			var days = parseInt(moment(dobDate).diff(moment(currDate), 'days'));
			if(days>0){
				//notie.alert(3, i18n.t("validdob"), 3);
				growl_alert(i18n.t("validdob"));
				$trgtElmValidate.focus();
				status = false;
				return false;
			}
		}
	}
	
	$trgtElmValidate.each(function(){
		var $errorData = $(this).attr('data-err') || "Field is mandate!";
		var $elm = $(this);
		//console.log($elm.hasClass('_title'));
		
		if($elm.hasClass('_title') && status==true){
			//console.log($elm.val());
			if($elm.val()=='Select Title'){
				growl_alert(i18n.t("pleaseProvideTitle"));				
				$elm.addClass('error');
				status = false;
				return false;
			}
		}
		
		/*FF NUMBER validation*/
		if($elm.hasClass('frequentFlyerNum') && status==true){
			var ffnum = $elm.val();			
			if($elm.val()!=""){
				if(!ffnum.match("^[a-zA-Z0-9]*$")){
				growl_alert(i18n.t("pevFFPnum"));			
				$elm.addClass('error');
				status = false;
				return false;
				}
			}
		}

		
		if($elm.hasClass('_fname') && status==true){
			var message = $elm.attr('data-err');
			if($elm.val()==""){
				//notie.alert(3, message, 3);
				growl_alert(i18n.t("errFirstName"));			
				$elm.focus();
				$elm.addClass('error');
				status = false;
				return false;
			}else if(_Aval($elm.val())){								
				//notie.alert(3, i18n.t("namesinenglish"), 3);
				growl_alert(i18n.t("namesinenglish"));			
				$elm.focus();
				$elm.addClass('error');
				status = false;
				return false;
			}else if((!_fnval($elm.val()))||($elm.val().length<=2)){								
				//notie.alert(3, i18n.t("validfirstname"), 3);
				growl_alert(i18n.t("validfirstname"));			
				$elm.focus();
				$elm.addClass('error');
				status = false;
			}else{
				var firstNam = $elm.val();
				var splChar = "-";
				var firstName = firstNam.replace(/ +/g, "");
				for(var i=0;i<firstName.length;i++){
					if((firstName[0] == "-" || firstName[firstName.length-1] == "-") || (typeof firstName[i] !== "undefined") && (typeof firstName[i+1] !== "undefined") && ((splChar == firstName[i]) && (splChar == firstName[i+1]))){
						//notie.alert(3, i18n.t("validfirstname"), 3);
						growl_alert(i18n.t("validfirstname"));
						l.stop();
						$elm.focus();
						$elm.addClass('error');
						status = false;
					}
				}
			}
		}
		
		if($elm.hasClass('_lname') && status==true){
			var message = $elm.attr('data-err');
			if($elm.val()==""){
				//notie.alert(3, message, 3);
				growl_alert(i18n.t("errLastName"));
				$elm.focus();
				$elm.addClass('error');
				status = false;
				return false;
			}else if(_Aval($elm.val())){								
				//notie.alert(3, i18n.t("namesinenglish"), 3);
				growl_alert(i18n.t("namesinenglish"));
				$elm.focus();
				$elm.addClass('error');
				status = false;
				return false;
			}else if((!_lnval($elm.val()))||($elm.val().length<=1)){					
				//notie.alert(3, i18n.t("validlastname"), 3);
				growl_alert(i18n.t("validlastname"));
				$elm.focus();
				$elm.addClass('error');
				status = false;
				return false;
			}else{
				var lastNam = $elm.val();
				var splChar = "-";
				var lastName = lastNam.replace(/ +/g, "");
				for(var i=0;i<lastName.length;i++){
					if((lastName[0] == "-" || lastName[lastName.length-1] == "-") || (typeof lastName[i] !== "undefined") && (typeof lastName[i+1] !== "undefined") && ((splChar == lastName[i]) && (splChar == lastName[i+1]))){
						//notie.alert(3, i18n.t("validlastname"), 3);
						growl_alert(i18n.t("validlastname"));
						$elm.focus();
						$elm.addClass('error');
						status = false;
						return false;
					}
				}
			}
		}
		
		if($elm.hasClass('_email') && status==true){
			var message = $elm.attr('data-err');
			if(!_evl($elm.val())){
				//notie.alert(3, message, 3);
				growl_alert(i18n.t("enteruremail"));
				$elm.addClass('error');
				$elm.focus();
				status = false;
				return false;
			}
		}
		
		if($elm.hasClass('_mobile') && status==true){
			var len = $elm.val().length;
			var message = $elm.attr('data-err');
			if($elm.val()==""){
				//notie.alert(3, message, 3);
				growl_alert(i18n.t("errMobNum"));
				$elm.addClass('error');
				$elm.focus();
				status = false;
				return false;
			}else if(($elm.val()!="" && len<=7)||(!_Nonly($elm.val()))){
				//notie.alert(3,i18n.t("validmobile"), 3);
				growl_alert(i18n.t("validmobile"));
				$elm.focus();
				$elm.addClass('error');
				status = false;
				return false;
			}
		}
		if($('._passportExpiryDate').find('.birthDay').val()!=''){
			var peDate = $('._passportExpiryDate').find('.birthDay').val();
			var convEDate=moment(peDate);
			var currDate=moment().format("MM/DD/YYYY h:mm:ss");
			var days = parseInt(moment(convEDate).diff(moment(currDate), 'days'));
			if(days<0){
			  growl_alert(i18n.t("validexiprydate"));
			  $('._passportExpiryDate').addClass('error');
			  $('._passportExpiryDate').focus();	
			  status = false;
			  return false;
			}  
		}
		
		
		
	});
	var docType;
	var otherDocType;
	if($('._passportCountry').val()!=''){
		docType='2';
	} 
	else{
		docType='';
	}
	
	if($('._nationalityDoc').is(':checked') && $('._nationalID').val() !== ''){
		otherDocType='3';
		//docType='3';
		
	}else if($('._iqamaDoc').is(':checked') && $('.iqamaId').val() !== ''){
		otherDocType='4';
		//docType='4';
	}
	else{
		otherDocType='';
	}
	
//		var $errorData = $(this).attr('data-err') || "Field is mandate!";
//		var $elm = $(this);
//		if($elm.val()==""){
//			$elm.after('<div class="error">'+$errorData+'</div>');
//			$elm.focus();
//			status = false;
//			return false;
//		}
	
	
	/*if(status){
		return true;
	}
	return false;*/
	/*alert("clicked");
	var l = Ladda.create(this);
	l.start();
	var condition = true;
	var targetContainer = $(this).parents('._addEditTraveller');
	var field = targetContainer;
	$('._validator').each(function(e){
		var $this = $(this);
		if($this.hasClass('_fname') && condition==true){
			var message = $this.attr('data-err');
			if($this.val()==""){
				//notie.alert(3, message, 3);
				l.stop();
				$this.focus();
				$this.addClass('error');
				condition = false;
				return false;
			}else if(_Aval($this.val())){								
				notie.alert(3, i18n.t("namesinenglish"), 3);
				l.stop();
				$this.focus();
				$this.addClass('error');
				condition = false;
				return false;
			}else if((!_fnval($this.val()))||($this.val().length<=2)){								
				notie.alert(3, i18n.t("validfirstname"), 3);
				l.stop();
				$this.focus();
				$this.addClass('error');
				condition = false;
			}else{
				var firstNam = $this.val();
				var splChar = "-";
				var firstName = firstNam.replace(/ +/g, "");
				for(var i=0;i<firstName.length;i++){
					if((firstName[0] == "-" || firstName[firstName.length-1] == "-") || (typeof firstName[i] !== "undefined") && (typeof firstName[i+1] !== "undefined") && ((splChar == firstName[i]) && (splChar == firstName[i+1]))){
						notie.alert(3, i18n.t("validfirstname"), 3);
						l.stop();
						$this.focus();
						$this.addClass('error');
						condition = false;
					}
				}
			}
		}
		if($this.hasClass('_mname') && condition==true){
			var message = $this.attr('data-err');
			if(($this.val()!="")&&($this.length>0)){
				if(_Aval($this.val())){								
					notie.alert(3, message, 3);
					l.stop();
					$this.focus();
					$this.addClass('error');
					condition = false;
					return false;
				}
				else if(!_mnval($this.val())){
					notie.alert(3, message, 3);
					l.stop();
					$this.focus();
					$this.addClass('error');
					condition = false;
					return false;
				}
				var splChar = "-";
				var middleName = $this.val().replace(/ +/g, "");
				for(var i=0;i<middleName.length;i++){
					if((middleName[0] == "-" || middleName[middleName.length-1] == "-") || (typeof middleName[i] !== "undefined") && (typeof middleName[i+1] !== "undefined") && ((splChar == middleName[i]) && (splChar == middleName[i+1])) ){
						notie.alert(3, message, 3);
						l.stop();
						$this.focus();
						$this.addClass('error');
						condition = false;
						return false;
					}
			    }
			}
			$this.removeClass('bg-error');
		}
		if($this.hasClass('_lname') && condition==true){
			var message = $this.attr('data-err');
			if($this.val()==""){
				notie.alert(3, message, 3);
				l.stop();
				$this.focus();
				$this.addClass('error');
				condition = false;
				return false;
			}else if(_Aval($this.val())){								
				notie.alert(3, i18n.t("namesinenglish"), 3);
				l.stop();
				$this.focus();
				$this.addClass('error');
				condition = false;
				return false;
			}else if((!_lnval($this.val()))||($this.val().length<=1)){					
				notie.alert(3, i18n.t("validlastname"), 3);
				l.stop();
				$this.focus();
				$this.addClass('error');
				condition = false;
				return false;
			}else{
				var lastNam = $this.val();
				var splChar = "-";
				var lastName = lastNam.replace(/ +/g, "");
				for(var i=0;i<lastName.length;i++){
					if((lastName[0] == "-" || lastName[lastName.length-1] == "-") || (typeof lastName[i] !== "undefined") && (typeof lastName[i+1] !== "undefined") && ((splChar == lastName[i]) && (splChar == lastName[i+1]))){
						notie.alert(3, i18n.t("validlastname"), 3);
						l.stop();
						$this.focus();
						$this.addClass('error');
						condition = false;
						return false;
					}
				}
			}
		}
		if($this.hasClass('_dob') && condition==true){
			var dobDate = $this.find('.birthDay').val();
			if(dobDate!=""){
				var dobDate = moment(dobDate,"YYYY-MM-DD");
				var maxDate = moment(moment(), "MM/DD/YYYY h:mm:ss");	
				var days = parseInt(moment(dobDate).diff(moment(maxDate), 'days'));
				if(days>0){
					notie.alert(3, i18n.t("validdob"), 3);
					$this.focus();
					condition = false;
					l.stop();
					return false;
				}
			}
		}
		if($this.hasClass('_email') && condition==true){
			var message = $this.attr('data-err');
			if(!_evl($this.val())){
				notie.alert(3, message, 3);
				l.stop();
				$this.focus();
				$this.addClass('error');
				condition = false;
				return false;
			}
		}
		if($this.hasClass('_mobile') && condition==true){
			var len = $this.val().length;
			var message = $this.attr('data-err');
			if($this.val()==""){
				notie.alert(3, message, 3);
				l.stop();
				$this.focus();
				$this.addClass('error');
				condition = false;
				return false;
			}else if(($this.val()!="" && len<=7)||(!_Nonly($this.val()))){
				notie.alert(3, i18n.t("validmobile"), 3);
				l.stop();
				$this.focus();
				$this.addClass('error');
				condition = false;
				return false;
			}
		}
		if($this.hasClass('_passportNumber') && condition==true){
			var message = $this.attr('data-err');
			if($this.val() !=="" && $this.val().length<3){				
				notie.alert(3, i18n.t("errPassportNumber"), 3);
				l.stop();				
				$this.focus();
				$this.addClass('error');
				condition = false;
				return false;
			}
		}
		
		
	});*/
	var alhilal,groupType;
	if($("#checkboxFC").is(':checked')){
		 alhilal=true;
		 groupType="ALHILAL";
	} else if(!$("#checkboxFC").is(':checked')){
		 alhilal=false;
		 groupType=null;
	}
	
	if(status==true){
		//console.log(' add travellar page success:')
		
		var travellerData={};
		/*var dobDay=null;
		var passportExpiryDate=null;
		if(field.find('._dob').find('.birthDate').val() !== ''&& field.find('._dob').find('.birthDate').val() !== '0' 
			&& field.find('._dob').find('.birthMonth').val() !== '' && field.find('._dob').find('.birthMonth').val() !== '0'
			&& field.find('._dob').find('.birthYear').val() !== '' && field.find('._dob').find('.birthYear').val() !== '0'){
			 dobDay=field.find('._dob').find('.birthYear').val()+"-"+field.find('._dob').find('.birthMonth ').val()+"-"+field.find('._dob').find('.birthDate').val()+"T00:00:00";
		}
		if(field.find('._passportExpiryDate').find('.birthYear').val() !== '' && field.find('._passportExpiryDate').find('.birthYear').val() !== '0'
		&& field.find('.birthDate').find('.birthMonth').val() !== ''&& field.find('.birthDate').find('.birthMonth').val() !== '0'
		&&field.find('._passportExpiryDate').find('.birthDate').val() !== ''&&field.find('._passportExpiryDate').find('.birthDate').val() !== '0' ){
			passportExpiryDate=field.find('._passportExpiryDate').find('.birthYear').val()+"-"+field.find('._passportExpiryDate').find('.birthMonth').val()+"-"+field.find('._passportExpiryDate').find('.birthDate').val()+"T00:00:00";
		}
		console.log('iqama expiry date',$('._iqamaExpiryDate').find('.birthDay').val());*/
		
		travellerData={
				title:$('._title').val(),
				fname:$('._fname').val(),
				lname:$('._lname').val(),
				mname:$('._mname').val(),
				dob:$('._dob').find('.birthDay').val(),
				passportCountry:$('._passportCountry').val(),
				nationality:$('._nationality').val(),
				passportNumber:$('._passportNumber').val(),
				email:$('._email').val(),
				phone:$('._mobile').val(),
				houseNumber:$('._housenumber').val(),
				address:$('._address').val(),
				country:$('._contactCountry').val(),
				//city:field.find('._city').val(),
				//postalCode:field.find('._postalCode').val(),
				profileID:$('._profileID').val(),
			    expiryDate:$('._passportExpiryDate').find('.birthDay').val(),
				phoneAreaCode:$('._txtCountryAreaCode').val(),
				airlinePreff:$('.airlinePreff').val(),
				specialAssistance:$('.specialPref').val(),
				seatPref:$('.seatPref').val(),
				mealPref:$('.mealPref').val(),
				starRating:$('.starRating').val(),
				rateBasis:$('.rateBasis').val(),
				prefFacilities:$('.prefFacilities').val(),
				propertyGroup:$('.propertyGroup').val(),
				homeAirport:$('.homeAirportVal').val(),
				FFPairlinePref:$('.FFPairlinePref').val(),
				ffpPrefName:$('.ffpPrefName').val(),
				frequentFlyerNum:$('.frequentFlyerNum').val(),
				regUser:$('.regUser').val(),
				groupType:groupType,
				docType:docType	,
				nationalID:$('._nationalID').val(),
				nationalIdCntry:$('._nationalityIdCntry').val(),
				natIdIssuedCountry:$('._natIssuedCountry').val(),
				iqamaId:$('.iqamaId').val(),
				iqmanationality:$('._iqamanationality').val(),
				iqmaExpDate:$('._iqamaExpiryDate').find('.birthDay').val(),
				otherDocType:otherDocType,
				
		}
		if(travellerData.dob!=""){
			travellerData.dob = travellerData.dob+"T00:00:00";
		}
		if(travellerData.expiryDate!=""){
			travellerData.expiryDate = travellerData.expiryDate+"T00:00:00";
		}
		if(travellerData.iqmaExpDate!=""){
			travellerData.iqmaExpDate = travellerData.iqmaExpDate+"T00:00:00";
		}
		var rewards_check;
		if($('#checkboxSubsc').length >0){
			if($('#checkboxSubsc').is(':checked')){
				rewards_check = true;
			} else if(!$('#subscribeRwds').is(':checked')){
				rewards_check = false;
			}
		}
		var rewardJoinDate = undefined;
		if(rewards_check === true){
			rewardJoinDate = moment().format('YYYY-MM-DDTHH:mm:ss');
		}
		if(rewardJoinDate){
			travellerData.rewardJoinDate = rewardJoinDate;
		}
		$.post('/addTraveller', {travellerData:travellerData},function(d){
			
			 if(d.status=="success"){ growl_alert(i18n.t("myAccDetailsUpdate"));  $('.alert_custom').addClass('alert-success'); }
			 if(d.status=="failed" ){ growl_alert(i18n.t("myAccValidRegEmail"));  $('.alert_custom').removeClass('alert-success'); return false; } 
			location.href= '/myProfile';
	    });
	}
	else return false;
});

/**
 * Edit traveller
 */
$('._editTrvBtn').on('click',function(e){
	
	var countryList = [];
	var n = new Date().getFullYear();
	var dobStartYear=n-116;
	var expiryYear=n+484;
	var dob=$(this).attr('data-dob');
	var dateOfBirth=[];
	if(dob !== null && dob !== ''){
		var dobdate=dob.substring(0,dob.indexOf("T"));
		dateOfBirth=dobdate.split("-");		
	}
	
	var expiryDate=$(this).attr('data-expiryDate');
	var passportExpiryDate=[];
	if(expiryDate !== null && expiryDate !== ''){
		var date=expiryDate.substring(0,expiryDate.indexOf("T"));
		passportExpiryDate=date.split("-");
	}
	
	var passportCountry=$(this).attr('data-country');
	var nationality=$(this).attr('data-nationality');
	var title=$(this).attr('data-title');
	var mobileAreaCode=$(this).attr('data-mobileAreaCode');	
	
	  var travellerData={
				title:$(this).attr('data-title'),
				fname:$(this).attr('data-fname'),
				lname:$(this).attr('data-lname'),
				mname:$(this).attr('data-mname'),
				dobDay:dateOfBirth[0],
				passportCountry:$(this).attr('data-countryIssued'),
				nationality:$(this).attr('data-nationality'),
				passportNumber:$(this).attr('data-passportNo'),
				email:$(this).attr('data-email'),
				phone:$(this).attr('data-mobile'),
				//houseNumber:$(this).attr('data-title'),
				mobileAreaCode:$(this).attr('data-mobileAreaCode'),
				address:$(this).attr('data-address'),
				profileID:$(this).attr('data-id')				
		  }
	
	async.series([
	  			function(callback){
	  				$.post('/countries',function(res){
	  					countryList.push(res);
	  					callback();
	  				});
	  				 
	  			}],
	  			function(){
	  				$.get('/common/themes/'+window.templatePath+'/tmpl/myAccount/myProfileEdit.ejs?v=nd-v0102',{},function(template){
	  					//set the EJS template to flightMobile.dynamicTemplate
	  					myProfileMobile.dynamicTemplate = template;
	  						//set the data for UI
	  					 var data={
	  							traveller: travellerData,
	  							countries:countryList
	  					 }	  						
	  						//Render the remplate
	  							 myProfileMobile.loadTemplate('edit-traveller-view',data,$('.myAccountContainer'),template,function(){
	  								
	  								 $('._dpSelector').each(function(){
	  									 var maxAge = $(this).attr('data-maxage');
	  									 $(this).birthdayPicker({
		  									 maxAge: maxAge,
		  									 monthFormat:'short',
		  								     dateFormat:'littleEndian',
		  								     callback:function(e){
		  									    //console.log(e);
		  									},
	  									 });	
	  								 });
	  								 
	  								 var field = $('._editTraveller');
	  								 if(dateOfBirth.length > 0){
	  									field.find('._dob').find('.birthDate').val(parseInt(dateOfBirth[0]));
	  									field.find('._dob').find('.birthMonth').val(parseInt(dateOfBirth[1]));
	  									field.find('._dob').find('.birthYear').val(parseInt(dateOfBirth[2]));
	  								 }
	  								 if(passportExpiryDate.length > 0){
	  									 field.find('._passportExpiryDate').find('.birthDate').val(parseInt(passportExpiryDate[0]));
	  									 field.find('._passportExpiryDate').find('.birthMonth').val(parseInt(passportExpiryDate[1]));
	  									 field.find('._passportExpiryDate').find('.birthYear').val(parseInt(passportExpiryDate[2]));
	  							     }
	  								
	  								 field.find('._passportCountry').val(passportCountry);
	  								 field.find('._nationality').val(nationality);
	  								 field.find('._title').val(title);
	  								 field.find('._txtCountryAreaCode').val(mobileAreaCode);	  								
	  								
	  								 window.history.pushState('forward', 'My profile...', '#editTraveller');
	  								 myProfileMobile.hash = window.location.hash.substring(1); 							 
	  							 });
	  					 
			  					$.get('/stdCountries',function(res){
									if(res =='ERROR'){
										location.href="/flight/error"; 
										return;
									}
									else{
										generateCountryCodeSelect(res);
										setCounryFlag();
										return res;
									}
								});
	  				});	
	  			}
	  	);			  
});


/**
 * Save Existing Traveller
 */
$('body').on('click','._saveTraveller',function(){
	var l = Ladda.create(this);
	l.start();
	var condition = true;
	$('._validator').each(function(e){
		var $this = $(this);
		if($this.hasClass('_fname') && condition==true){
			var message = $this.attr('data-err');
			if($this.val()==""){
				notie.alert(3, message, 3);
				l.stop();
				$this.focus();
				condition = false;
				return false;
			}else if(_Aval($this.val())){								
				//notie.alert(3, i18n.t("namesinenglish"), 3);
				growl_alert(i18n.t("namesinenglish"));
				l.stop();
				$this.focus();
				condition = false;
				return false;
			}else if((!_fnval($this.val()))||($this.val().length<=2)){								
				//notie.alert(3,i18n.t("validfirstname"), 3);
				growl_alert(i18n.t("validfirstname"));
				l.stop();
				$this.focus();
				condition = false;
			}else{
				var firstNam = $this.val();
				var splChar = "-";
				var firstName = firstNam.replace(/ +/g, "");
				for(var i=0;i<firstName.length;i++){
					if((firstName[0] == "-" || firstName[firstName.length-1] == "-") || (typeof firstName[i] !== "undefined") && (typeof firstName[i+1] !== "undefined") && ((splChar == firstName[i]) && (splChar == firstName[i+1]))){
						//notie.alert(3, i18n.t("validfirstname"), 3);
						growl_alert(i18n.t("validfirstname"));
						l.stop();
						$this.focus();
						condition = false;
					}
				}
			}
		}
		
		if($this.hasClass('_mname') && condition==true){
			var message = $this.attr('data-err');
			if(($this.val()!="")&&($this.length>0)){
				if(_Aval($this.val())){								
					notie.alert(3, message, 3);
					l.stop();
					$this.focus();
					condition = false;
					return false;
				}
				else if(!_mnval($this.val())){
					notie.alert(3, message, 3);
					l.stop();
					$this.focus();
					condition = false;
					return false;
				}
				var splChar = "-";
				var middleName = $this.val().replace(/ +/g, "");
				for(var i=0;i<middleName.length;i++){
					if((middleName[0] == "-" || middleName[middleName.length-1] == "-") || (typeof middleName[i] !== "undefined") && (typeof middleName[i+1] !== "undefined") && ((splChar == middleName[i]) && (splChar == middleName[i+1])) ){
						notie.alert(3, message, 3);
						l.stop();
						$this.focus();
						condition = false;
						return false;
					}
			    }
			}
			$this.removeClass('bg-error');
		}
		
		if($this.hasClass('_lname') && condition==true){
			var message = $this.attr('data-err');
			if($this.val()==""){
				notie.alert(3, message, 3);
				l.stop();
				$this.focus();
				condition = false;
				return false;
			}else if(_Aval($this.val())){								
				//notie.alert(3, i18n.t("namesinenglish"), 3);
				growl_alert(i18n.t("namesinenglish"));
				l.stop();
				$this.focus();
				condition = false;
				return false;
			}else if((!_lnval($this.val()))||($this.val().length<=1)){					
				//notie.alert(3, i18n.t("validlastname"), 3);
				growl_alert(i18n.t("validlastname"));
				l.stop();
				$this.focus();
				condition = false;
				return false;
			}else{
				var lastNam = $this.val();
				var splChar = "-";
				var lastName = lastNam.replace(/ +/g, "");
				for(var i=0;i<lastName.length;i++){
					if((lastName[0] == "-" || lastName[lastName.length-1] == "-") || (typeof lastName[i] !== "undefined") && (typeof lastName[i+1] !== "undefined") && ((splChar == lastName[i]) && (splChar == lastName[i+1]))){
						//notie.alert(3, i18n.t("validlastname"), 3);
						growl_alert(i18n.t("validlastname"));
						l.stop();
						$this.focus();
						condition = false;
						return false;
					}
				}
			}
		}
		
		if($this.hasClass('_dob') && condition==true){
			var dobDate = $this.find('.birthDay').val();
			if(dobDate!=""){
				var dobDate = moment(dobDate,"YYYY-MM-DD");
				var maxDate = moment(moment(), "MM/DD/YYYY h:mm:ss");	
				var days = parseInt(moment(dobDate).diff(moment(maxDate), 'days'));
				if(days>0){
					//notie.alert(3, i18n.t("validdob"), 3);
					growl_alert(i18n.t("validdob"));
					$this.focus();
					condition = false;
					l.stop();
					/*$this.addClass('error');
					if(!$this.is(":visible")){
						$this.parents('.travellerTit').find('a.trvlInfo').trigger('click');
					}*/
					return false;
				}
			}
		}
		
		if($this.hasClass('_email') && condition==true){
			var message = $this.attr('data-err');
			if(!_evl($this.val())){
				notie.alert(3, message, 3);
				l.stop();
				$this.focus();
				condition = false;
				return false;
			}
		}
		
		if($this.hasClass('_mobile') && condition==true){
			var len = $this.val().length;
			var message = $this.attr('data-err');
			if($this.val()==""){
				notie.alert(3, message, 3);
				l.stop();
				$this.focus();
				condition = false;
				return false;
			}else if(($this.val()!="" && len<=7)||(!_Nonly($this.val()))){
				//notie.alert(3,i18n.t("validmobile"), 3);
				growl_alert(i18n.t("validmobile"));
				l.stop();
				$this.focus();
				condition = false;
				return false;
			}
		}
		if($this.hasClass('_passportNumber') && condition==true){
			var message = $this.attr('data-err');
			if($this.val() !=="" && $this.val().length<3){				
				//notie.alert(3, i18n.t("errPassportNumber"), 3);
				growl_alert(i18n.t("errPassportNumber"));
				l.stop();
				/*$this.addClass('error');
				if(!$this.is(":visible")){
					$this.parents('.travellerTit').find('a.trvlInfo').trigger('click');
				}*/
				$this.focus();
				condition = false;
				return false;
			}
		}		
		
	});
	
	if(condition==true){
		var travellerData={};
		var targetContainer = $(this).parents('._editTraveller');
		var field = targetContainer;
		var dobDay=null;
		var passportExpiryDate=null;
		
		if(field.find('._dob').find('.birthDate').val() !== ''&& field.find('._dob').find('.birthDate').val() !== '0' && field.find('._dob').find('.birthMonth').val() !== ''&& field.find('._dob').find('.birthMonth').val() !== '0'
				&& field.find('._dob').find('.birthYear').val() !== '' && field.find('._dob').find('.birthYear').val() !== '0'){
			
			dobDay=field.find('._dob').find('.birthYear').val()+"-"+field.find('._dob').find('.birthMonth ').val()+"-"+field.find('._dob').find('.birthDate').val()+"T00:00:00";
		}
		
		if(field.find('._passportExpiryDate').find('.birthYear').val() !== '' && field.find('._passportExpiryDate').find('.birthYear').val() !== '0'
			&& field.find('.birthDate').find('.birthMonth').val() !== '' && field.find('.birthDate').find('.birthMonth').val() !== '0'
				&& field.find('._passportExpiryDate').find('.birthDate').val() !== '' && field.find('._passportExpiryDate').find('.birthDate').val() !== '0' ){
			passportExpiryDate=field.find('._passportExpiryDate').find('.birthYear').val()+"-"+field.find('._passportExpiryDate').find('.birthMonth').val()+"-"+field.find('._passportExpiryDate').find('.birthDate').val()+"T00:00:00";
		}
		
		travellerData={
				title:field.find('._title').val(),
				fname:field.find('._fname').val(),
				lname:field.find('._lname').val(),
				mname:field.find('._mname').val(),
				dob:field.find('._title').val(),
				passportCountry:field.find('._passportCountry').val(),
				nationality:field.find('._nationality').val(),
				passportNumber:field.find('._passportNumber').val(),
				email:field.find('._email').val(),
				phone:field.find('._mobile').val(),
				houseNumber:field.find('._housenumber').val(),
				address:field.find('._address').val(),
				city:field.find('._city').val(),
				postalCode:field.find('._postalCode').val(),
				profileID:field.find('._profileID').val(),
				dob:dobDay,
				expiryDate:passportExpiryDate,
				mobileAreaCode:field.find('._txtCountryAreaCode').val(),
				regUser:field.find('.regUser').val()
		}
		
		$.post('/editSaveTraveller', {travellerData:travellerData},function(d){
			 location.href= '/myProfile';
	    });
	}
});
/**
 * Delete traveller
 */
$('.deleteTraveler').click(function(e){
	var curElm = $(this).parents('.panel.panel-default');
	var id=$(this).attr('data-id');
	var email=$(this).attr('data-email');
	  $.post('/myProfile/deleteTraveller', {profileID:id,email:email},function(d){
		  if(d.status === "failed"){
			  growl_alert(i18n.t("failed"));
		  }
		  else if(d.status === "success"){
			   growl_alert(i18n.t("deleteTravSucess"));
			   $('.alert_custom').addClass('alert-success');
			  curElm.remove();
			  $(".modal-backdrop").toggleClass("modal-backdrop fade out");	
			  $('body').removeClass("modal-open");	
			  $('body').css('padding','0px');
			  $("html, body").animate({scrollTop:0});
		  }
	 });	
	return false;
});

/* [[ my account flight pop up start here ]]*/
	$('body').on('click', '.myAccPopBtn', function(){
		var myID= $(this).attr('href');
		$(myID).modal('show');
	});
/* [[ my account flight pop up end here ]]*/
	
/**
 * Get All My Trips(Bookings)
 */
function myTrips(){
	$.loadingPageAnimation('show','myAccount');
	
	$.post('/myTrips',{},function(res){
		//console.log(JSON.stringify(res));
		var obj={};
		if(res.response !==null){
			obj = res.response;		
			tripData=obj;		
			myTripFlightData=obj.response.bookingDetails.bookings;
		}	

		//if(typeof obj!=='undefined'){
			myProfileMobile.setData(obj);
			$.get('/common/themes/'+window.templatePath+'/tmpl/myAccount/myTrips.ejs?v=nd-v0102',{},function(template){
				//set the EJS template to myProfileMobile.dynamicTemplate
				myProfileMobile.dynamicTemplate = template;
				//set the data for UI
				/*var data = {
					responseData:obj.response,
					maps:obj.maps,
					message:res.message,
					lang:lang
				}*/
				if(!obj){
					obj={};
				}
				var data = {
						responseData:myTripFlightData,
						maps:obj.maps,
						message:res.message,
						lang:lang
					}
				//Render the template
				myProfileMobile.loadTemplate('trips-view',data,$('.myBookingsGrid'));
				$.loadingPageAnimation();
				//userTrackerModule.init();;
				pricetagConvert.init();
				
				$('.passengerSeg').click(function(){
					$(this).toggleClass('active');
					$(this).next().slideToggle();
				})
				
				/* view-hide function*/
				var viewStat=false;
				var pastTrip=null;
				var pastText=null;
				
				/* [[ my account view toggle start here ]]*/
				$('body').on('click', '.viewHide', function(e) {
					e.preventDefault();
					var $this = $(this);
					$this.parents('.myBookings').next('.transferCrossSeller').hide();
					if(viewStat){
						if($this.text() == i18n.t('view')){															
								pastTrip.hide();
								pastText.text(i18n.t('view'));						
							}
					}										
					var curUl = $this.parents('.myBookings').find('.viewHideGrid');					
					if($this.text() == i18n.t('view')) {
						$this.text(i18n.t('hide'));
						viewStat=true;
						pastTrip=curUl;
						pastText=$this;
						curUl.show();
					}else {
						curUl.hide().slice(0,0).show();
						$this.text(i18n.t('view'));
					}
				}); 
				/* [[ my account view toggle end here ]]*/
				
				/* [[ my account view toggle start here ]]*/
				$('body').on('click', '.transfer', function(e) {
					e.preventDefault();
					var $this = $(this);					
					if(viewStat){
						if($this.text() == i18n.t('view')){															
								pastTrip.hide();
								pastText.text(i18n.t('view'));						
							}
					}										
					var curUl = $this.parents('.myBookings').find('.transferGrid');					
					if($this.text() == i18n.t('view')) {
						$this.text(i18n.t('hide'));
						viewStat=true;
						pastTrip=curUl;
						pastText=$this;
						curUl.show();
					}else {
						curUl.hide().slice(0,0).show();
						$this.text(i18n.t('view'));
					}
				}); 
				/* [[ my account view toggle end here ]]*/
				
				/* [[ my account transfer toggle start here ]]*/
				$('body').on('click', '.transferHide', function(event) {
					
					var trgtContainer = $('.transferCrossSeller.transferCrossGrid');
					var container2 = trgtContainer.find('.transferSrchCret');
					var container3 = trgtContainer.find('.trnsfrSliderBlock');
					container2.empty();
					container3.empty();
					trgtContainer.find('._noResults').hide();
					trgtContainer.hide();
					$(this).parents('.myBookings').find('.viewHideGrid').hide();
					$(this).parent().find('.viewHide').text(i18n.t('view'));
					var $t =$(this);
					$(this).parents('.myBookings').next('.transferCrossGrid').show();
					$(this).parents('.myBookings').next('.transferCrossGrid').find('.transPaD').hide();
					$(this).parents('.myBookings').next('.transferCrossGrid').find('._transBlkShow').show();
					var product = $(this).attr('data-product');
					var transferBkngRef = $(this).attr('data-bkngref');
					var uelmObj = $(this).parents('.myBookings').next('.transferCrossGrid').find('.transferSrchCret');

					var transferPickupDate = $(this).attr('data-pdt');
					var transBkngPrtd = {};
					/*$(tranSearchObjArr).each(function(){
						$(this).empty();
						$(this).parents('.transferCrossGrid').hide();
					});*/
					//$(this).toggleClass('active');

					
							var data = {};
							if(product=="HOTEL"){
								data.producttype = 'Hotel';
							}else if(product=="FLIGHT"){
								data.producttype = 'Flight';
							}else if(product=="FPH"){
								data.producttype = 'FPH';
							}
							data.flyincode = transferBkngRef;
							console.log(data);
				$.post('/myAccountTransfer/getRefBookingDetails',{data:data},function(res){
					console.log('/myAccountTransfer/getRefBookingDetails');
					console.log(typeof res);
					if(typeof res != 'undefined' && res!= null && res!=''){
					transBkngPrtd = JSON.parse(res);

					$.get('/common/themes/'+window.templatePath+'/tmpl/myAccount/myTransferSearch.ejs?v=nd-v0102',{},function(template){
					//set the EJS template to myProfileMobile.dynamicTemplate
					myProfileMobile.dynamicTemplate = template;
					//set the data for UI
					var data = {
					originalProduct:product,
					originalProductId:transferBkngRef,
					transferPickupDate:transferPickupDate,
					transferBkngRef:transferBkngRef
					}
					$($t).parents('.myBookings').next('.transferCrossGrid').find('._transferShow').hide();
					//Render the template
					myProfileMobile.loadTemplate('myaccTransferSearch',data,uelmObj,'',function(){


					if(product=="HOTEL"){
					var transDataObj = transBkngPrtd;
					var transData = transDataObj.transferData;
					var htlObj = transDataObj.productrs.hotelbookrq.Booking.BookingRQ.hotel.rc.ht;
					var htlBasicObj = transData;
					var htlName = htlObj.hna;
					var htlCity = htlBasicObj.cityName.en;
					var htlCityId = htlObj.cid;
					var htlCntName = htlBasicObj.countryData.en;
					var htlCntCode = htlBasicObj.countryCode;
					var htlUnqId = htlBasicObj.uniqueId;
					var prvncName = htlBasicObj.provinceData.en;
					var airportId=htlBasicObj.airport.airportId;
					var airportName=htlBasicObj.airport.airportName?htlBasicObj.airport.airportName.en:'';
					var airportCode=htlBasicObj.airport.airportCode;
					$('._transHotelName').text(unicodeConverter(htlName));
					$('._transPickup').text(unicodeConverter(htlCity)+','+unicodeConverter(htlCntName));
					$('._transdropOff').text(unicodeConverter(htlName));
					$('#pickUpLocation').val(htlCity+', '+htlCntName+', '+'('+airportCode+')'+' -'+airportName);
					$('#pickUpLocation').attr('data-ccode',htlCntCode);
					$('#pickUpSearchKey').val('Airport>>'+airportId+'>>'+airportCode+'>>'+airportName+'>>'+htlCityId+'>>'+htlCntCode+'>>'+htlCity+'>>');
					$('#dropOffLocation').val(htlName+','+htlCity+','+htlCntName);
					$('#dropOffLocation').attr('data-ccode',htlCntCode);
					$('#dropOffSearchKey').val('Hotel>>'+htlUnqId+'>>undefined>>undefined>>'+htlName+'>>'+htlCityId+'>>'+htlCity+'>>'+prvncName+'>>'+htlCntName+'>>'+htlCntCode+'>>');
					}else if(product=="FLIGHT"){
					var transDataObj = transBkngPrtd;

					var transData = transDataObj.transferData[0];
					var fltAi = {};
					if(transDataObj.productrs.requesttype=="book"){
						fltAi = transDataObj.productrs.flightBookReq.bookRQ.ai;
					}else if(transDataObj.productrs.requesttype=="fcbook"){
						fltAi = transDataObj.productrs.flightFcBookReq.bookRQ.ai;
					}
					//var arrAPId = fltAi.odos.odo[0].fs[fltAi.odos.odo[0].fs.length-1].aap;
					var fltInfoObj = transData;
					console.log('fltInfoObj');
					var fltMapObj = fltInfoObj;
					console.log(fltMapObj)
					var fltArrAPId = fltMapObj.arrapid[0];
					var fltCity = fltMapObj.cityName.en;
					var fltCitylang = fltMapObj.cityName[$('html').attr('data-lang')];
					var fltCityId = fltMapObj.cityName.id;
					var fltCntName = fltMapObj.countryName.en;
					var fltCntNamelang = fltMapObj.countryName[$('html').attr('data-lang')];
					var fltCntCode = fltMapObj.countryCode;
					var fltAirportId = fltMapObj.airportId;
					var fltAirportName = fltMapObj.name.en;
					var fltAirportNamelang = fltMapObj.name[$('html').attr('data-lang')];
					$('._transAirportName').text(unicodeConverter(fltAirportNamelang));
					$('._transPickup').text(unicodeConverter(fltAirportNamelang));
					$('._transdropOff').text(unicodeConverter(fltCitylang)+','+unicodeConverter(fltCntNamelang));
					$('#pickUpLocation').val(fltCity+','+fltCntName+', ('+fltArrAPId+') - '+fltAirportName);
					$('#pickUpLocation').attr('data-ccode',fltCntCode);
					$('#pickUpSearchKey').val('Airport>>'+fltAirportId+'>>'+fltArrAPId+'>>'+fltAirportName+'>>'+fltCityId+'>>'+fltCntCode+'>>'+fltCity+'>>');
					$('#dropOffLocation').val(fltCity+','+fltCntName);
					$('#dropOffLocation').attr('data-ccode',fltCntCode);
					$('#dropOffSearchKey').val('Hotel>>>>undefined>>undefined>>'+fltCity+','+fltCntName+'>>'+fltCityId+'>>'+fltCity+'>>undefined>>'+fltCntName+'>>'+fltCntCode);
					/*  'Hotel>>>>undefined>>undefined>>'+htlName+'>>'+htlCityId+'>>'+htlCity+'>>'+prvncName+'>>'+htlCntName+'>>'+htlCntCode+'>>'
					Hotel>>AE000122>>undefined>>undefined>>Fortune Grand Hotel>>50257>>Dubai>>Dubai Emirate>>United Arab Emirates>>undefined>>
					Hotel>>>>LHR>>London Heathrow Airport>>50522>>GB>>London */
					}else if(product=="FPH"){
					var transDataObj = transBkngPrtd;
					var transhData = transDataObj.transferhData;
					var htlObj = transDataObj.productrs.hotelPreBookReq.BookingInfoRQ.hotel.rc.ht;
					console.log('htlOBJ');
					console.log(htlObj);
					var transfData = transDataObj.transferfData[0];
					var fltAi = transDataObj.productrs.flightBookReq.bookRQ.ai;
					var htlBasicObj = transhData;
					var fltMapObj = transfData;
					var htlName = htlObj.hna;
					var htlCity = htlBasicObj.cityName.en;
					var htlCityId = htlObj.cid;
					var htlCntName = htlBasicObj.countryData.en;
					var htlCntCode = htlBasicObj.countryCode;
					var htlUnqId = htlBasicObj.uniqueId;
					var prvncName = htlBasicObj.provinceData.en;
					var fltArrAPId = fltMapObj.arrapid[0];
					var fltCity = fltMapObj.cityName.en;
					var fltCitylang = fltMapObj.cityName[$('html').attr('data-lang')];
					var fltCityId = fltMapObj.cityName.id;
					var fltCntName = fltMapObj.countryName.en;
					var fltCntNamelang = fltMapObj.countryName[$('html').attr('data-lang')];
					var fltCntCode = fltMapObj.countryCode;
					var fltAirportId = fltMapObj.airportId;
					var fltAirportName = fltMapObj.name.en;
					var fltAirportNamelang = fltMapObj.name[$('html').attr('data-lang')];
					$('._transAirportName').text(unicodeConverter(fltAirportNamelang));
					$('._transPickup').text(unicodeConverter(htlCity)+','+unicodeConverter(htlCntName));
					$('._transdropOff').text(unicodeConverter(htlName));
					$('#pickUpLocation').val(unicodeConverter(fltCitylang)+','+unicodeConverter(fltCntNamelang)+', ('+fltArrAPId+') - '+unicodeConverter(fltAirportNamelang));
					$('#pickUpLocation').attr('data-ccode',fltCntCode);
					$('#pickUpSearchKey').val('Airport>>'+fltAirportId+'>>'+fltArrAPId+'>>'+fltAirportName+'>>'+fltCityId+'>>'+fltCntCode+'>>'+fltCity+'>>');
					$('#dropOffLocation').val(htlName+','+htlCity+','+htlCntName);
					$('#dropOffLocation').attr('data-ccode',htlCntCode);
					$('#dropOffSearchKey').val('Hotel>>'+htlUnqId+'>>undefined>>undefined>>'+htlName+'>>'+htlCityId+'>>'+htlCity+'>>'+prvncName+'>>'+htlCntName+'>>'+htlCntCode+'>>');
					}
					myAccountSerivce.initTransPredSearchComponent();
					initTransferDatePickerComponent();
					$($t).parents('.myBookings').next('.transferCrossGrid').find('._searchMyaccountTransfer').trigger('click');
					$($t).parents('.myBookings').next('.transferCrossGrid').find('._transBlkShow').hide();
					$($t).parents('.myBookings').next('.transferCrossGrid').find('.transPaD').show();
					$($t).parents('.myBookings').next('.transferCrossGrid').find('._transferShow').show();

					});

					});					
					
				}
				});
				event.preventDefault();
				});
				$('body').on('click','.closeTransfer',function(event){
					event.preventDefault();
					var trgtContainer = $(this).parents('.transferCrossSeller.transferCrossGrid');
					var container2 = trgtContainer.find('.transferSrchCret');
					var container3 = trgtContainer.find('.trnsfrSliderBlock');
					container2.empty();
					container3.empty();
					trgtContainer.hide();
				});
				
				/* [[ my account transfer toggle end here ]]*/
				/* [[ my account slider start here ]]*/
				/*$(function() {
					var owl = $(".trnsfrSlider");
					owl.owlCarousel({
						items: 4,
						itemsDesktop: [1199, 4],
						itemsTablet: [980, 3],
						itemsTabletSmall: [639, 2],
						itemsMobile: [478, 1],
						lazyLoad: true,
						navigation: true,
						pagination: true,
						autoPlay: true,
						rewindNav: false,
						stopOnHover: true,
					});
				});*/
				/* [[ my account slider  end here ]]*/
				
				/* [[ my account open window start here ]]*/
				function popitup(url) {
					newwindow=window.open(url,'name','height=570,width=800,scrollbars=1');
					if (window.focus) {newwindow.focus()}
					return false;
				}
				/* [[ my account open window end here ]]*/
				
			});
		//}
		/*else{			
			$.get('/common/themes/'+window.templatePath+'/tmpl/myAccount/myTrips.ejs?v=nd-v0102',{},function(template){
				//set the EJS template to myProfileMobile.dynamicTemplate
				myProfileMobile.dynamicTemplate = template;
				//set the data for UI
				var data = {
					message:res.message,
					 lang:lang
				}
				//Render the template
				myProfileMobile.loadTemplate('trips-view',data,$('.myBookingsGrid'));
				$.loadingPageAnimation();
			});
		}*/
			
	});	 
}

/**
 * My Trips Filter by PNRNumber
 */
$('body').on('keyup','#pnrNumber',function(){
	var currentTab=$("ul#tabs li.current label").text();
	var pnr=$('#pnrNumber').val();
		var data={
				currentTab:currentTab,
				pnr:pnr
		}
		var res=myProfileMobile.filterByPNR(data);
		$.get('/common/themes/'+window.templatePath+'/tmpl/myAccount/myTrips.ejs?v=nd-v0102',{},function(template){
				//set the EJS template to myProfileMobile.dynamicTemplate
				myProfileMobile.dynamicTemplate = template;
				//set the data for UI
				var data = {
					responseData:res,
					maps:myProfileMobile.hashmap,
					lang:lang
				}
				//Render the template
				myProfileMobile.loadTemplate('filtered-trips-view',data,$('.tripsummary'));
			
				$("ul#tabs li.current").removeClass("current");
				
				$("ul#tabs li").each(function(){
					if(currentTab===$(this).find('label').text()){
						if (!$(this).hasClass("current")) {
							var tabNum = $(this).index();
							var nthChild = tabNum+1;
							$("ul#tabs li.current").removeClass("current");
							$(this).addClass("current");
							$("#tab div.current").removeClass("current");
							$("#tab div:nth-child("+nthChild+")").addClass("current");
						}
					}
				});
				
		});
});

var myProfileMobile = (function() {
    'user strict';    
    return {
    	hashmap: '',
    	response:'',
    	totalres:'',
    	/**
		*@description Set the base object data across category
		*@params Array (Response Object)
		*@return null
		*/
		setData: function(res) {
			var obj = res;
			if(!obj){
				obj={};
			}
			this.hashmap = obj.maps;
			this.response=obj.response;
			this.totalres=obj;
			
		},
		
		/**
		*@description PNR/Booking ref Filter Function
		*@params Object('B2C163122') 
		*@return null
		*/
		filterByPNR: function(value){
			
			var i, item, array = this.totalres.response,
			reArray = [],
			response={},
			bookingDetails={},
			pnr,tripId, dPoint;
			if(value.pnr !==''){
				for (i in array.bookingDetails.bookings){
					dPoint = false;
					item = array.bookingDetails.bookings[i];
					if(value.currentTab ===i18n.t("flights")){
						if(item.entityDetails.flightDetails !== null && item.entityDetails.hotelDetails == null){
							pnr = item.entityDetails.flightDetails.gdsPnr;
							tripId=item.generalDetails.flyinCode;
							if (typeof value !== "undefined" && ((pnr!== null && pnr!=='' && pnr.toString().toLowerCase().indexOf(value.pnr.toString().toLowerCase()) !== -1) || (tripId !== null && tripId.toString().toLowerCase().indexOf(value.pnr.toString().toLowerCase()) !== -1))) {
								reArray.push(item);
							} 
					    }
						if(item.entityDetails.hotelDetails !== null && item.entityDetails.flightDetails == null){
								   reArray.push(item);
				       }
					}
					else if(value.currentTab ===i18n.t("hotels")){
						if(item.entityDetails.flightDetails !== null && item.entityDetails.hotelDetails == null){
								reArray.push(item);
					    }
						if(item.entityDetails.hotelDetails !== null && item.entityDetails.flightDetails == null){
							tripId=item.generalDetails.flyinCode;
							if (typeof value !== "undefined" && (tripId !== null && tripId.toLowerCase().indexOf(value.pnr.toLowerCase()) !== -1)) {
								   reArray.push(item);
							} 
				       }
					}
			   }					
			}
			else{
				reArray=this.totalres.response.bookingDetails.bookings;
			}
			
			bookingDetails={
					bookings:reArray
			};
			response={
					bookingDetails:bookingDetails,	
			};
			return response;
			
		},
		
		render: function(render,callback) {
			var $t = this;
			//get the base object which we got from the search response
			var base = JSON.stringify($t.totalres);
			//Set the base object to flightServiceLayer to process the filtration request.
			$t.filterData = JSON.parse(base);
			var renderedData = JSON.parse(JSON.stringify($t.filterData));
			return callback(renderedData);
		},
		
      /**
  	   *@description Load template Content
  	   *@param HTML Selector [dynamicTemplate(Dynamic template to Loaded)]
  	   *@param String [templateID (Template ID)]
  	   *@param data Array/Object [data(Json Data)]
  	   *@param HTML Selector [toUpdate(Template to update)]
  	   *@return 
  	  */
  	  loadTemplate:function(templateID,data,toUpdate,template,callback){	
  		//loadTranslations();
  		var result;
  		if(typeof template=="undefined" || template==""){
  			template = $(this.dynamicTemplate);
  		}else{
  			template = $(template);
  		}
  		//Load the template
  		var template = tmpl(template.filter('#'+templateID).html(),data);
  		
  	   //Fix for Unicode Escaped Character for Handling Unicode Arabic String
  	   var r = /\\u([\d\w]{4})/gi;
  	   template = template.replace(r, function (match, grp) {
  	       return String.fromCharCode(parseInt(grp, 16)); 
  	       });
  	   template = unescape(template);
  	   
  		//Select result container
  		if(typeof toUpdate==='object'){			
  			result = toUpdate;
  		}else{			
  			result = $('#'+toUpdate);
  		}
  		//Empty the result container
  		result.empty();
		
		//below script for img lazy load
		var bLazy = new Blazy({
			breakpoints: [{ 
			src: '../img/destinations/call-icon.jpg'
		}]
		  , success: function(element){
			setTimeout(function(){
			var parent = element.parentNode;
			parent.className = parent.className.replace(/\bloading\b/,'');
			}, 200);
			}
	   });
		
  		//Load data to the result container
  		result.append(template);
  		_langGlobal.langInit();
  		if(typeof callback==='function')
  			return callback();
  	  }
    }
}());

 /**
  *Function Load Trip Details - Flight
  */
  function loadTripDetails(pnr){
	 $.loadingPageAnimation('show','myAccount');
	var $tripListContainer = $('.review-dis');
	var $tripDetailsContainer = $('._tripDetails');
	$.get('/common/themes/'+window.templatePath+'/tmpl/myAccount/myTripsFlightDetails.ejs?v=nd-v0102',{},function(template){
	//set the EJS template to myProfileMobile.dynamicTemplate
	myProfileMobile.dynamicTemplate = template;		
		myProfileMobile.render(false,function(renderedData){
			var response=renderedData.response;
			var filterRes;
			for(var i in response.bookingDetails.bookings){
				var index=response.bookingDetails.bookings[i].entityDetails.flightDetails.gdsPnr;
				if(index == pnr){					
					filterRes=response.bookingDetails.bookings[i];
					break;
				}
			}
			//set the data for UI
			 var tripData = {
					  response:filterRes,
					  maps:myProfileMobile.hashmap,
					  lang:lang
			 }
			//Render the template
			 myProfileMobile.loadTemplate('trip-summary-view',tripData,$('._tripDetails'));
			 myProfileMobile.hash = window.location.hash.substring(1);
			 //hide the list view
			 $tripListContainer.hide();
			 //show the detail view
			 $tripDetailsContainer.show();
			 window.history.pushState('forward', null, '#'+pnr);
			 $.loadingPageAnimation();//pricetagConvert.init();
		});			
	});	
  }
  
  /**
   *Function Load Trip Details - Hotel
   */
   function loadHotelBookingDetails(refNum){
 	 $.loadingPageAnimation('show','myAccount');
 	var $tripListContainer = $('.review-dis');
 	var $tripDetailsContainer = $('._tripDetails');
 	$.get('/common/themes/'+window.templatePath+'/tmpl/myAccount/myTripsHotelDetails.ejs?v=nd-v0102',{},function(template){
 	//set the EJS template to myProfileMobile.dynamicTemplate
 	myProfileMobile.dynamicTemplate = template;		
 		myProfileMobile.render(false,function(renderedData){
 			var response=renderedData.response;
 			var filterRes;
 			for(var i in response.bookingDetails.bookings){
 				if(response.bookingDetails.bookings[i].entityDetails.hotelDetails !== null){
 					var index=response.bookingDetails.bookings[i].entityDetails.hotelDetails.hotel.referenceNo;
 	 				if(index == refNum){					
 	 					filterRes=response.bookingDetails.bookings[i];
 	 					break;
 	 				}
 				}
 			}
 			//set the data for UI
 			 var tripData = {
 					  response:filterRes,
 					  maps:myProfileMobile.hashmap,
 					  lang:lang
 			 }
 			//Render the template
 			 myProfileMobile.loadTemplate('hotel-trips-view',tripData,$('._tripDetails'));
 			 myProfileMobile.hash = window.location.hash.substring(1);
 			 //hide the list view
 			 $tripListContainer.hide();
 			 //show the detail view
 			 $tripDetailsContainer.show();
 			 window.history.pushState('forward', null, '#'+refNum);
 			 $.loadingPageAnimation();
			//pricetagConvert.init();
 		});			
 	});	
   }
  
/**
 *Show flight trip detials on click
 */
$('body').on('click','.mytriplink', function(){
	var $this = $(this);
	var pnr = $this.attr('data-pnr');
	loadTripDetails(pnr);	
});

/**
 *Show hotel trip detials on click
 */
$('body').on('click','.myHotelBookingLink', function(){
	var $this = $(this);
	var refNum = $this.attr('data-refNum');
	loadHotelBookingDetails(refNum);	
});

/**
 *All The Dom Ready function should go below
 */
$(document).ready(function(){
console.log($('._signin').is(":disabled"));	
});

$(window).on('popstate', function(){
	if(myProfileMobile.hash=='addTraveller'|| myProfileMobile.hash=='editTraveller'){
		location.href= '/myProfile';
	}
});



/**
 * Send feedback email
 * @param t
 * @returns {Boolean}
 */
function submitFeedback(){

	var targetContainer = $('.myFormSec.feedBackForm');
	var firstName=targetContainer.find('._firstNamefd').val();
	var lastName=targetContainer.find('._lastNamefd').val();
	var email=targetContainer.find('._emailfd').val();
	var phone=targetContainer.find('._phonefd').val();
	var stdCode=targetContainer.find('._stdCodefd').val();
	var message=targetContainer.find('._messagefd').val();
	//$.loadingPageAnimation('show','myAccount');
	var condition = true;
	if(firstName==""){
		//notie.alert(3, i18n.t("errFirstName"), 3);
		growl_alert(i18n.t("errFirstName"));
		condition = false;
		targetContainer.find('._firstNamefd').focus();
		targetContainer.find('._firstNamefd').addClass('error');
		$('.loading_popup_flight').remove();		
		return false;
	}else if(_Aval(firstName)){
		//notie.alert(3, i18n.t("namesinenglish"), 3);
		growl_alert(i18n.t("namesinenglish"));
		targetContainer.find('._firstNamefd').focus();
		targetContainer.find('._firstNamefd').addClass('error');
		$('.loading_popup_flight').remove();
		condition = false;
		return false;
	}else if((!_fnval(firstName))||(firstName.length<=2)){
		//notie.alert(3, i18n.t("validfirstname"), 3);
		growl_alert(i18n.t("validfirstname"));
		targetContainer.find('._firstNamefd').focus();
		targetContainer.find('._firstNamefd').addClass('error');
		$('.loading_popup_flight').remove();
		condition = false;
		return false;
	}else{
		var firstNam = firstName;
		var splChar = "-";
		var firstName = firstNam.replace(/ +/g, "");
		for(var i=0;i<firstName.length;i++){
			if((firstName[0] == "-" || firstName[firstName.length-1] == "-") || (typeof firstName[i] !== "undefined") && (typeof firstName[i+1] !== "undefined") && ((splChar == firstName[i]) && (splChar == firstName[i+1]))){
				//notie.alert(3, i18n.t("validfirstname"), 3);
				growl_alert(i18n.t("validfirstname"));
				targetContainer.find('._firstNamefd').focus();
				targetContainer.find('._firstNamefd').addClass('error');
				$('.loading_popup_flight').remove();
				condition = false;
				return false;
			}
		}
		targetContainer.find('._firstNamefd').removeClass('error');
	 }

	if(lastName==""){
		//notie.alert(3, i18n.t("errLastName"), 3);
		growl_alert(i18n.t("errLastName"));
		targetContainer.find('._lastNamefd').focus();
		targetContainer.find('._lastNamefd').addClass('error');
		condition = false;
		$('.loading_popup_flight').remove();
		return false;
	}else if(_Aval(lastName)){
		//notie.alert(3, i18n.t("namesinenglish"), 3);
		growl_alert(i18n.t("namesinenglish"));
		targetContainer.find('._lastNamefd').focus();
		targetContainer.find('._lastNamefd').addClass('error');
		$('.loading_popup_flight').remove();
		condition = false;
		return false;
	}else if((!_fnval(lastName))||(lastName.length<=2)){
		//notie.alert(3, i18n.t("validlastname"), 3);
		growl_alert(i18n.t("validlastname"));
		targetContainer.find('._lastNamefd').focus();
		targetContainer.find('._lastNamefd').addClass('error');
		$('.loading_popup_flight').remove();
		condition = false;
		return false;
	}else{
		var lastNam = lastName;
		var splChar = "-";
		var lastName = lastNam.replace(/ +/g, "");
		for(var i=0;i<lastName.length;i++){
			if((lastName[0] == "-" || lastName[lastName.length-1] == "-") || (typeof lastName[i] !== "undefined") && (typeof lastName[i+1] !== "undefined") && ((splChar == lastName[i]) && (splChar == lastName[i+1]))){
				//notie.alert(3, i18n.t("validlastname"), 3);
				growl_alert(i18n.t("validlastname"));
				$('.loading_popup_flight').remove();
				condition = false;
				return false;
			}
		}
		targetContainer.find('._lastNamefd').removeClass('error');
	 }
	
	if(email == ""){
		//notie.alert(3, i18n.t("errEmail"), 3);
		growl_alert(i18n.t("errEmail"));
		targetContainer.find('._emailfd').focus();
		targetContainer.find('._emailfd').addClass('error');
		condition = false;
		$('.loading_popup_flight').remove();
		return false;
	}
	else if(!_evl(email)){
			//notie.alert(3, i18n.t("errEmaiAdd"), 3);
			growl_alert(i18n.t("errEmaiAdd"));
			targetContainer.find('._emailfd').focus();
			targetContainer.find('._emailfd').addClass('error');
			$('.loading_popup_flight').remove();
			condition = false;
			return false;
	}
	else{
		targetContainer.find('._emailfd').removeClass('error');
	}
	if(phone==""){
		//notie.alert(3, i18n.t("errMobNum"), 3);
		growl_alert(i18n.t("errMobNum"));
		targetContainer.find('._phonefd').focus();
		targetContainer.find('._phonefd').addClass('error');
		$('.loading_popup_flight').remove();
		condition = false;
		return false;
	}else if((phone!="" && phone.length<=7)||(!_Nonly(phone))){
		//notie.alert(3, i18n.t("validmobile"), 3);
		growl_alert(i18n.t("validmobile"));
		targetContainer.find('._phonefd').focus();
		targetContainer.find('._phonefd').addClass('error');
		$('.loading_popup_flight').remove();
		condition = false;
		return false;
	}
	else{
		targetContainer.find('._phonefd').removeClass('error');
	}
	if(message==""){
		//notie.alert(3, i18n.t("errmsg"), 3);
		growl_alert(i18n.t("errmsg"));
		targetContainer.find('._messagefd').focus();
		targetContainer.find('._messagefd').addClass('error');
		$('.loading_popup_flight').remove();
		condition = false;
		return false;
	}
	else{
		targetContainer.find('._messagefd').removeClass('error');
	}
	if(condition==true){		
		var feedbackdata={
			firstName:firstName,
			lastName:lastName,
			email:email,
			phone:phone,
			message:message,
			stdCode:stdCode,
			subject:'Flyin Feedback Survey'
		}
		
		if(feedbackdata != null)
		{
			btnLoadingAnimation($('._feedbackBtn'));
			$.post('/sendFeedbackMail',{data:feedbackdata},function(res){
			$('.loading_popup_flight').remove();
			//notie.alert(1, 'Feedback mail sent successfully', 3);
			growl_alert(i18n.t("feedbackSentSuccess"));
			$('.alert_custom').addClass('alert-success');
			setTimeout(function(){ window.location.reload(false);}, 1000);
					
		});
		}
	}
	
}

function validateContact(){
	var targetContainer = $('.contact-form');
	var firstName=targetContainer.find('#firstName').val();
	var lastName=targetContainer.find('#lastName').val();
	var email=targetContainer.find('#email').val();
	var phone=targetContainer.find('#phoneNo').val();
	var stdCode=targetContainer.find('#phoneCountryCode').val();
	var subject=targetContainer.find('.subject').val();
	var message=targetContainer.find('#message').val();
	var popupHtml = '<div class="loading_popup_flight "><div id="cssload-contain"><img src="https://www.flyin.com/common/themes/v1/images/fareLoader.gif"/><span>'+i18n.t('pleaseWait')+'</span></div></div>';
	$('body').find('.contact-form').prepend(popupHtml);
	var condition = true;
	if(firstName==""){
		growl_alert(i18n.t("errFirstName"));
		//notie.alert(3, i18n.t("errFirstName"), 3);
		condition = false;
		targetContainer.find('#firstName').focus();
		targetContainer.find('#firstName').addClass('error');
		$('html, body').animate({scrollTop: $('#firstName').offset().top - 130});
		$('.loading_popup_flight').remove();
		return false;
	}else if(_Aval(firstName)){	
		growl_alert(i18n.t("namesinenglish"));	
		//notie.alert(3, i18n.t("namesinenglish"), 3);
		$('html, body').animate({scrollTop: $('#firstName').offset().top - 130});
		$('.loading_popup_flight').remove();
		condition = false;
		return false;
	}else if((!_fnval(firstName))||(firstName.length<=2)){
		growl_alert(i18n.t("validfirstname"));		
		//notie.alert(3, i18n.t("validfirstname"), 3);
		$('html, body').animate({scrollTop: $('#firstName').offset().top - 130});
		$('.loading_popup_flight').remove();
		condition = false;
		return false;
	}else{
		var firstNam = firstName;
		var splChar = "-";
		var firstName = firstNam.replace(/ +/g, "");
		for(var i=0;i<firstName.length;i++){
			if((firstName[0] == "-" || firstName[firstName.length-1] == "-") || (typeof firstName[i] !== "undefined") && (typeof firstName[i+1] !== "undefined") && ((splChar == firstName[i]) && (splChar == firstName[i+1]))){
				//notie.alert(3, i18n.t("validfirstname"), 3);
				growl_alert(i18n.t("validfirstname"));
				$('html, body').animate({scrollTop: $('#firstName').offset().top - 130});
				$('.loading_popup_flight').remove();
				condition = false;
				return false;
			}
		}		
		targetContainer.find('#firstName').removeClass('error');
	 }

	if(lastName==""){
		growl_alert(i18n.t("errLastName"));	
		//notie.alert(3, i18n.t("errLastName"), 3);
		condition = false;
		targetContainer.find('#lastName').focus();
		targetContainer.find('#lastName').addClass('error');
		$('html, body').animate({scrollTop: $('#lastName').offset().top - 130});
		$('.loading_popup_flight').remove();
		return false;
	}else if(_Aval(lastName)){
		growl_alert(i18n.t("namesinenglish"));	
		//notie.alert(3, i18n.t("namesinenglish"), 3);
		$('html, body').animate({scrollTop: $('#lastName').offset().top - 130});
		$('.loading_popup_flight').remove();
		condition = false;
		return false;
	}else if((!_fnval(lastName))||(lastName.length<=2)){
		growl_alert(i18n.t("validlastname"));		
		//notie.alert(3, i18n.t("validlastname"), 3);
		$('html, body').animate({scrollTop: $('#lastName').offset().top - 130});
		$('.loading_popup_flight').remove();
		condition = false;
		return false;
	}else{
		var lastNam = lastName;
		var splChar = "-";
		var lastName = lastNam.replace(/ +/g, "");
		for(var i=0;i<lastName.length;i++){
			if((lastName[0] == "-" || lastName[lastName.length-1] == "-") || (typeof lastName[i] !== "undefined") && (typeof lastName[i+1] !== "undefined") && ((splChar == lastName[i]) && (splChar == lastName[i+1]))){
				//notie.alert(3, i18n.t("validlastname"), 3);
				growl_alert(i18n.t("validlastname"));
				$('html, body').animate({scrollTop: $('#lastName').offset().top - 130});
				$('.loading_popup_flight').remove();
				condition = false;
				return false;
			}
		}
		targetContainer.find('#lastName').removeClass('error');
	 }
	
	if(email == ""){
		growl_alert(i18n.t("errEmail"));	
		//notie.alert(3, i18n.t("errEmail"), 3);
		condition = false;
		targetContainer.find('#email').focus();
		targetContainer.find('#email').addClass('error');
		$('html, body').animate({scrollTop: $('.contact-form #email').offset().top - 130});
		$('.loading_popup_flight').remove();
		return false;
	}
	else if(!_evl(email)){
			growl_alert(i18n.t("errEmaiAdd"));
			//notie.alert(3, i18n.t("errEmaiAdd"), 3);
			$('.loading_popup_flight').remove();
			condition = false;
			targetContainer.find('#email').focus();
			targetContainer.find('#email').addClass('error');
			$('html, body').animate({scrollTop: $('.contact-form #email').offset().top - 130});
			return false;
	}
	else{
		targetContainer.find('#email').removeClass('error');	
	}
	if(phone==""){
		growl_alert(i18n.t("errMobNum"));
		//notie.alert(3, i18n.t("errMobNum"), 3);
		$('.loading_popup_flight').remove();
		condition = false;
		targetContainer.find('#phoneNo').focus();
		targetContainer.find('#phoneNo').addClass('error');
		$('html, body').animate({scrollTop: $('#phoneNo').offset().top - 130});
		return false;
	}else if((phone!="" && phone.length<=7)||(!_Nonly(phone))){
		growl_alert(i18n.t("validmobile"));
		//notie.alert(3, i18n.t("validmobile"), 3);
		$('.loading_popup_flight').remove();
		condition = false;
		targetContainer.find('#phoneNo').focus();
		targetContainer.find('#phoneNo').addClass('error');
		$('html, body').animate({scrollTop: $('#phoneNo').offset().top - 130});
		return false;
	}
	else{
		targetContainer.find('#phoneNo').removeClass('error');	
	}
	
	if(subject == ""){
		growl_alert(i18n.t("errsubject"));
		//notie.alert(3, i18n.t("errsubject"), 3);
		condition = false;
		targetContainer.find('.subject').addClass('error');
		$('html, body').animate({scrollTop: $('.subject').offset().top - 130});
		$('.loading_popup_flight').remove();
		return false;
	}	
	else{
		targetContainer.find('.subject').removeClass('error');
	}
	
	
	if(message==""){
		growl_alert(i18n.t("errmsg"));
		//notie.alert(3, i18n.t("errmsg"), 3);
		$('.loading_popup_flight').remove();
		condition = false;
		targetContainer.find('#message').focus();
		targetContainer.find('#message').addClass('error');
		$('html, body').animate({scrollTop: $('#message').offset().top - 130});
		return false;
	}
	else{
		targetContainer.find('#message').removeClass('error');
	}
	
	if(condition==true){		
		var feedbackdata={
			firstName:firstName,
			lastName:lastName,
			email:email,
			phone:phone,
			stdCode:stdCode,
			subject:subject,
			message:message
		}
		$.post('/sendFeedbackMail',{data:feedbackdata},function(res){
			$('.loading_popup_flight').remove();
			growl_alert(i18n.t("contactSentSucc"));
			//notie.alert(1, 'ContactUs mail sent successfully', 3);
			clear_form_elements("contact-form");
			$('.alert_custom').addClass('alert-success');
		});
	}
}

function clear_form_elements(class_name) {
	  jQuery("."+class_name).find(':input').each(function() {
	    switch(this.type) {
	        case 'password':
	        case 'text':
	        case 'textarea':
	        case 'file':
	        case 'select-one':
	        case 'select-multiple':
	            jQuery(this).val('');
	            break;
	        case 'checkbox':
	        case 'radio':
	            this.checked = false;
	    }
	  });
	}

/**
 *cancel flight booking on click
 */
$('body').on('click','.canCel',function(){
	var id = $(this).parents('.myBookings').attr('data-id');
	var bId=$(this).attr('data-bookId');
	var cPopBid = '#'+bId;
	$(cPopBid).attr('data-toupdate',id);
});

$('body').on('click','.modifyBooking', function(){
	$.loadingPageAnimation('show','myAccount');
	var bookingId = $(this).attr('data-bookingId');
	var bookingType=$(this).attr('data-bookingType');
	var leadPax=$(this).attr('data-leadPax');
	var taskType=$(this).attr('data-taskType');
	var custId=$(this).attr('data-customerId');
	var bnpl=$(this).attr('data-bnpl');
	var cnclremark= $("input[name='canceRsn']:checked").val();
	var cPopBid = '#cancelPop'+bookingId;
	var statToUpdate = $(cPopBid).attr('data-toupdate');
	var hotelBNPLRowElm = $('.myBookings');
	
	//for closing pop up after clicking yes
	$('.modal').modal('hide');
	
	var cancelData={
			bookingId:bookingId,
			bookingType:bookingType,
			leadPax:leadPax,
			taskType:taskType,
			custId:custId,
			bnpl:bnpl,
			cnclremark:cnclremark
	}
	$.post('/cancelFlight',{data:cancelData},function(res){
		
		if(bnpl==="true"){
			if(res.status==="success"){
				var elm = hotelBNPLRowElm.map(function(k,v){
					if($(v).attr('data-id')===statToUpdate){
						return v;
					}
				});
				var bookingStatusElm = elm.find('em.booked');
				var cancleBtnElm = elm.find('a.canCel');
				var payPending = elm.find('span.payPending');
				var infoColr = elm.find('p.infoColr');
				bookingStatusElm.text('Cancelled');
				bookingStatusElm.removeClass('booked').addClass('payPending');
				cancleBtnElm.remove();
				payPending.remove();
				infoColr.remove();
			}
		}
		growl_alert(res.message);
		$('.alert_custom').addClass('alert-success');
       //notie.alert(1, res.message, 3);
		$.loadingPageAnimation();	
	});
   	
});

/**
 *Change Password on click
 */
$('body').on('click','#changePwd', function(){	
	var oldPwd = $('#oldpassword').val();
	var newPwd = $('#newpassword').val();
	var retypePwd =$('#retypepassword').val();	
	var targetContainer = $('.changePwdBlock');	
	var condition=true;
	
	if(oldPwd==""){
		//notie.alert(3, i18n.t("erroldpwd"), 3);
		growl_alert(i18n.t("erroldpwd"));
		$('#oldpassword').addClass('error');
		$('#oldpassword').focus();
		condition = false;		
		return false;
	}
	else{
		$('#oldpassword').removeClass('error');
	}
	
	if(newPwd==""){
		//notie.alert(3, i18n.t("errnewpwd"), 3);
		growl_alert(i18n.t("errnewpwd"));
		$('#newpassword').addClass('error');
		$('#newpassword').focus();
		condition = false;		
		return false;
	}
	else{
		$('#newpassword').removeClass('error');
	}
	
	if(retypePwd==""){
		//notie.alert(3, i18n.t("errretypepwd"), 3);
		growl_alert(i18n.t("errretypepwd"));
		$('#retypepassword').addClass('error');
		$('#retypepassword').focus();
		condition = false;		
		return false;
	}
	else{
		$('#retypepassword').removeClass('error');
	}
	
	if(newPwd==oldPwd){
		//notie.alert(3, i18n.t("newPwdnOldPwdSame"), 3);
		growl_alert(i18n.t("newPwdnOldPwdSame"));
		$('#newpassword').addClass('error');
		$('#oldpassword').addClass('error');
		condition = false;
		return false;
	}
	if(newPwd!=retypePwd){
		//notie.alert(3, i18n.t("newPwdnRePwd"), 3);
		growl_alert(i18n.t("newPwdnRePwd"));
		$('#newpassword').addClass('error');
		$('#retypepassword').addClass('error');
		condition = false;
		return false;		
	} 
	
	var changePwdData={
			oldPwd:oldPwd,
			newPwd:newPwd,
			retypePwd:retypePwd
	}
	
	if(condition==true){
	var popupHtml = '<div class="loading_popup_flight "><div id="cssload-contain"><img src="https://www.flyin.com/common/themes/v1/images/fareLoader.gif"/><span>'+i18n.t('pleaseWait')+'</span></div></div>';
	$('body').find('.changePwdSection').prepend(popupHtml);		
	$.post('/changePassword',{changePwdData:changePwdData},function(res){
	
		if(res.status==='failed'){
			if(res.message.toString().indexOf('ERR_UM08') !== -1){
				growl_alert(i18n.t("invalidpwd"));
				$('#oldpassword').addClass('error');
			} else { 
				growl_alert(i18n.t("eitherUserIdOrPwdWrng"));
				$('#oldpassword').addClass('error');
			}		
		}else{			
			//notie.alert(1, res.message, 3);
			growl_alert(i18n.t("pwdChangeSucces"));
			$('.alert_custom').addClass('alert-success');
			setTimeout(function(){ window.location.reload(false);}, 1000);
		}
		$('.loading_popup_flight').remove();
	});
	}
	
});


/**
 * 
 * for sign-in
**/
function validateLogin(elm){
	var email_id;
	var account_pwd;
	var rewards_check;
	if($(elm).parents('#signupbox').length){
		email_id = $(elm).parents('#signupbox').find('#email_id');
		account_pwd = $(elm).parents('#signupbox').find('#account_pwd');
	}else if($(elm).parents('#loginbox').length){
		email_id = $(elm).parents('#loginbox').find('#email_id');
		account_pwd = $(elm).parents('#loginbox').find('#account_pwd');
	}else{
		email_id = $('#email_id');
		account_pwd = $('#account_pwd');
	}
	if($('#subscribe').length >0 && $('#subscribe').is(':checked')){
		rewards_check = true;
	} else if($('#subscribe').length >0 && !$('#subscribe').is(':checked')){
		rewards_check = false;
	}
	
	//empty mail validation
	if(email_id.val()==""){
		growl_alert(i18n.t("errEmail"));
		email_id.addClass('validate_error_message');
		email_id.focus();
		return false;
	}else{
		email_id.removeClass('validate_error_message');
	}	
	//proper mail id validation
	if(!isEmail(email_id.val())){
		$('._emailAlert').show();
		growl_alert(i18n.t("pleaseentervalidemail"));
		email_id.addClass('validate_error_message');
		return false;
	}else{
		email_id.removeClass('validate_error_message');
	}
	//empty password validation
	if(account_pwd.val()==""){
		growl_alert(i18n.t("homesigninenterpassword"));
		account_pwd.addClass('validate_error_message');
		account_pwd.focus();
		return false;
	}else{
		account_pwd.removeClass('validate_error_message');
	}
	$("#header-sign-in").val(i18n.t("processingTxt"));
	btnLoadingAnimation($('#header-sign-in'));
	setTimeout(function(){
		//$("#header-sign-in").attr("disabled", "disabled");
	},200);
	if(true){
		var loc = window.location.href;
		$.post('/home/signin',{username:email_id.val(),password:account_pwd.val(),rewards:rewards_check},function(d){
			if(d==null ||d.status=="failed" || d.status=="FAILURE" ){
				$("#header-sign-in").val(i18n.t("signin"));
				growl_alert(i18n.t("loginFailed"));
				$('#header-sign-in').removeAttr("disabled");
				$('#header-sign-in').removeClass("LoadBtn");
				return false;
			}else{
				userLogin(d.userUniqueId);
				userLoginESP(d.userUniqueId);
				//$("#header-sign-in").val(i18n.t("signin"));
				growl_alert(i18n.t("loginsuccess"));
				location.href= loc.split('#')[0];
				$('.alert_custom').addClass('alert-success');
				//$('.alert_custom').find('strong').text('Success');
			}
		});
		return false;	
	}
	
}

/**
 * signup
 * @param emailAddress
 * @returns
 */

function validateSignup(elm){
	var $t = $(elm);
	var email_id;
	var account_pwd;
	var groupType;
	var alhilalB;
	var rewards_check;
	if($(elm).parents('#loginbox').length){
		email_id = $(elm).parents('#loginbox').find('#signup_email');
		account_pwd = $(elm).parents('#loginbox').find('#signup_pwd');
		alhilalB=true;
		groupType='ALHILAL';
	}else{
		email_id = $('#signup_email');
		account_pwd = $('#signup_pwd');
		if($('#checkboxFBC').is(':checked')){
			alhilalB=true;
			groupType='ALHILAL';
		} else if(!$('#checkboxFBC').is(':checked')){
			alhilalB=false;
			groupType='null';
		}
		if($('#subscribeSingup').is(':checked')){
			rewards_check = true;
		} else if(!$('#subscribeSingup').is(':checked')){
			rewards_check = false;
		}
		if($('#checkbox2').prop('checked')){		
		}else{
			growl_alert(i18n.t("acceptTerms"));
			return false;
		}
	}
	if(email_id.val()==""){
		growl_alert(i18n.t("errEmail"));
		email_id.addClass('validate_error_message');
		email_id.focus();
		return false;
	}else{				
		email_id.removeClass('validate_error_message');
	}
	//proper mail id validation
	if(!isEmail(email_id.val())){
		growl_alert(i18n.t("pleaseentervalidemail"));
		$('.emailErrorMessage').show();		
		email_id.addClass('validate_error_message');
		return false;
	}else{
		email_id.removeClass('validate_error_message');
		$('.emailErrorMessage').hide();
	}
	
	if(account_pwd.val()==""){
		growl_alert(i18n.t("homesigninenterpassword"));
		account_pwd.addClass('validate_error_message');
		account_pwd.focus();
		return false;
	}else{
		account_pwd.removeClass('validate_error_message');
	}

	/*if(!agree_terms.is(':checked')){	
	
		//alert("checkbox not checked");
		//$(".agreement").css('backgroundColor','#000');
		$('#termsErrorMessage').show();
		return false;
	}else{
		$('#termsErrorMessage').hide();
	}*/
	
	$("#header-sign-up").val(i18n.t("processingTxt"));
	btnLoadingAnimation($('#header-sign-up'));
	setTimeout(function(){
		//$("#header-sign-up").attr("disabled", "disabled");
	},200);
	
 	if(true){
		var loc = window.location.href;
		$.post('/home/signup',{username:email_id.val(),password:account_pwd.val(),groupType:groupType,rewards:rewards_check},function(d){			
			if(d.status=="failed"){
				//notie.alert(3, d.message, 3); // needs to be added
				//location.href= '/home';
				growl_alert(i18n.t("userAlreadyRegistered"));
				$("#header-sign-up").val(i18n.t("signup"));
				$("#header-sign-up").removeAttr("disabled");
				$("#header-sign-up").removeClass("LoadBtn");
				return false;
			}else{
				userSignUp(d.userUniqueId);
				userLogin(d.userUniqueId);
				userLoginESP(d.userUniqueId);
				//notie.alert(1, d.message, 3);
				growl_alert(i18n.t("regSuccess"));
				$('.alert_custom').addClass('alert-success');
				$t.addClass('rSuccess');
				location.href= loc.split('#')[0];
				
			}
		});
		return false;	
	} 
	
}

function isEmail(emailAddress) {
	var pattern = new RegExp(/^(("[\w-\s]+")|([\w-]+(?:\.[\w-]+)*)|("[\w-\s]+")([\w-]+(?:\.[\w-]+)*))(@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$)|(@\[?((25[0-5]\.|2[0-4][0-9]\.|1[0-9]{2}\.|[0-9]{1,2}\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\]?$)/i);
	return pattern.test(emailAddress);
}

function validateRetrieveBooking() {
	var email_id = $('#email');
	var iternaryNo = $('#iternaryNo');
	
	if (email_id.val() == "") {
		growl_alert(i18n.t("errEmail"));
		email_id.addClass('validate_error_message');
		email_id.focus();
		return false;
	} else {
		email_id.removeClass('validate_error_message');
	}
	if (!isEmail(email_id.val())) {
		growl_alert(i18n.t("pleaseentervalidemail"));
		$('.emailErrorMessage').show();
		email_id.addClass('validate_error_message');
		return false;
	} else {
		email_id.removeClass('validate_error_message');
		$('.emailErrorMessage').hide();
	}
	if (iternaryNo.val() == "") {
		growl_alert(i18n.t("errreferenceno"));
		iternaryNo.addClass('validate_error_message');
		iternaryNo.focus();
		return false;
	} else {
		iternaryNo.removeClass('validate_error_message');
	}
	var str = iternaryNo.val(),
		re = new RegExp("^[\cC]{1}[0-9]{6,8}$", 'g');
	if (re.test(str) != true) {
		growl_alert(i18n.t("validreferenceno"));
		iternaryNo.addClass('validate_error_message');
		return false;
	} else {
		iternaryNo.removeClass('validate_error_message');
	}
	var req = {
		email: email_id.val(),
		iternaryNo: iternaryNo.val()
	};
	$.post('/managedBooking', req, function(res) {
		if (res.status == "FAILURE") {
			$("#header-sign-in1").val(i18n.t("retrieveBooking"));
			growl_alert(i18n.t("noDataFound"));
			//notie.alert(3, res.msg, 3);
			// needs to be added			
			return false;
		}
		if (res.status == "SUCCESS") {				
			window.location.href = res.url;
		}
	});
	return false;
}

function validatesendIternary(){
	   $("#sendIternary").val(i18n.t("processingTxt"));
		
		var email_id = $('#forgot_emailId'); 
	  	 if ($("#forgot_emailId").val()== "") {
	  		$("#sendIternary").val(i18n.t("send"));
	  		 growl_alert(i18n.t("errEmail"));	  		
	  		email_id.addClass('validate_error_message');
	  		email_id.focus();
				return false;
			}
			else{
				email_id.removeClass('validate_error_message');	
			}
	 	//proper mail id validation
	 	if(!isEmail($("#forgot_emailId").val())){
	 		$("#sendIternary").val(i18n.t("send"));
	 		growl_alert(i18n.t("pleaseentervalidemail"));
	 		$('.emailErrorMessage').show();		
	 		email_id.addClass('validate_error_message');
	 		return false;
	 	}else{
	 		email_id.removeClass('validate_error_message');
	 		$('.emailErrorMessage').hide();
	 	}
	  	 
	  	if(true){
			var loc = window.location.href;
			$.post('/managedBooking',{username:$("#forgot_emailId").val(),referenceNo:'undefined'},function(d){
				if(d.status=="FAILURE"){
					$("#sendIternary").val(i18n.t("send"));
					notie.alert(3, d.message, 3);// needs to be added
					//location.href= '/home';
					return false;
				}else{
					$("#sendIternary").val(i18n.t("send"));
					//notie.alert(3, d.message, 3);
					growl_alert(i18n.t("itinerarySentSuccess"));
					$('.alert_custom').addClass('alert-success');
					location.href= loc.split('#')[0];
					
				}
			});
			return false;	
		}
	 }
	  
		
// facebook login starts here
function fbLogin(){
	 FB.login(function(response) {
	        if (response.authResponse) 
	        {
	             getUserInfo(); // Get User Information.

	         } else
	         {
	        	 growl_alert("Authorization failed.");
	         }
	},{scope: 'public_profile,email'});
}

function getUserInfo() {
    FB.api('/me', function(response) {
   	 postFBLogin(response);
     });
}

function postFBLogin(req){
	var loc = window.location.href;
	 $.post('/home/facebookLogin',req,function(d){
  		
  		if(d.status=="failed"){
  			 growl_alert(d.message);
			//notie.alert(3, d.message, 3);
  			//location.href= '/home';
  		}else{
  			if(d.status == 'reqemail'){
  				var email=openEmailPopup();
  				req.email = email;
  				postFBLogin(req);
  			}else if(d.status == 'success'){
  				 growl_alert(d.message);
  				$('.alert_custom').addClass('alert-success');
				//notie.alert(1, d.message, 3);
  	   			//location.href= '/myProfile';
				location.href= loc.split('#')[0];
  			}
  		}
  	});
}

// google plus sign in function start here
/**
 *@description Google plus sign in function
 *@author Madhavi
 *@date
 */
function gPlusSigninBtn(){
	  var myParams = {
	    'clientid' : '61769657816-rjifbcliumgurg7r6n5thip0877glbrq.apps.googleusercontent.com',
	    'cookiepolicy' : 'single_host_origin',
	    'callback' : 'signinCallback',
	    'approvalprompt':'force',
	    'scope' : 'https://www.googleapis.com/auth/plus.profile.emails.read'
	  };
	  gapi.auth.signIn(myParams);
};


/**
 *@description Google plus sign in call back function
 *@params authResult(Login status)
 *@return 
 *@author Madhavi
 *@date
 */
function signinCallback(authResult) {	
    if (typeof authResult !== 'undefined' && authResult['status']['signed_in']) {
    	 gapi.client.load('plus', 'v1', function() {
    	      var request = gapi.client.plus.people.get({
    	        'userId': 'me'
    	      });
    	      request.execute(function (resp){
    	        postGoogleLogin(resp);
    	      });
    	   });
    } else {
    	if(typeof authResult !== 'undefined')
		notie.alert(3, authResult['error'], 3);
    }
}



/**
 *@description Google Plus login post method invoke 
 *@params req
 *@return redirect location
 *@date
 */
function postGoogleLogin(req){
	var loc = window.location.href;
	 $.post('/home/googlePlusLogin',req,function(d){
   		
   		if(d.status=="failed"){
			notie.alert(3, d.message, 3);   			
   		}else{
   			if(d.status == 'reqemail'){
   				var email=openEmailPopup();
   				req.emails[0].value = email;
   				postGoogleLogin(req);
   			}else if(d.status == 'success'){
   	   			//location.href= '/myProfile';
   				location.href= loc.split('#')[0];
   			}
   		}
   	});
}

function logout()
{
    gapi.auth.signOut();
    location.reload();
}


function openEmailPopup(){
    var x;
    var email=prompt("Please enter your email id");
    if (email!=null){
      return email;
    }
}

function signOut(){	
	 $.get('/myProfile/logout',{v:Math.random()}, function(d){
		if(d.status === "success"){
			/*if(location.href.indexOf('myProfile') > -1){
				console.log('linn'+location.href);
				console.log('lin1'+location.href.indexOf('myProfile'));
				//location.href = '/';
			}else{
				console.log('lirn'+location.href);
				console.log('lin2'+location.href.indexOf('myProfile'));*/
			    var url = window.location.href;
			    if(url.indexOf(d.groupType)>-1){
			    	window.location.href = "/";
			    }
			    else window.location.reload(true);
			/*}*/
			return false;
		}
		else{
			return false;
		}
	 });	 
}

/**
 * 
 */
function bookingFilter() {		
	
	filteredData = []; 
	  var filterFlight;
	  for( var i in tripData.response.bookingDetails.bookings ) {		  
		  if( (($('#bookingType').val()==='flight' &&  tripData.response.bookingDetails.bookings[i].entityDetails.flightDetails !== null &&  tripData.response.bookingDetails.bookings[i].entityDetails.hotelDetails === null &&  tripData.response.bookingDetails.bookings[i].entityDetails.transferDetails === null) 
				  ||  ($('#bookingType').val()==='hotel' &&  tripData.response.bookingDetails.bookings[i].entityDetails.hotelDetails !== null &&  tripData.response.bookingDetails.bookings[i].entityDetails.flightDetails === null &&  tripData.response.bookingDetails.bookings[i].entityDetails.transferDetails === null)
				  ||  ($('#bookingType').val()==='flights+hotels' &&  tripData.response.bookingDetails.bookings[i].entityDetails.hotelDetails !== null &&  tripData.response.bookingDetails.bookings[i].entityDetails.flightDetails !== null &&  tripData.response.bookingDetails.bookings[i].entityDetails.transferDetails === null)
				  ||  ($('#bookingType').val()==='transfer' &&  ((tripData.response.bookingDetails.bookings[i].entityDetails.hotelDetails !== null && tripData.response.bookingDetails.bookings[i].entityDetails.transferDetails !== null) || (tripData.response.bookingDetails.bookings[i].entityDetails.flightDetails !== null && tripData.response.bookingDetails.bookings[i].entityDetails.transferDetails !== null) || (tripData.response.bookingDetails.bookings[i].entityDetails.flightDetails !== null && tripData.response.bookingDetails.bookings[i].entityDetails.hotelDetails !== null && tripData.response.bookingDetails.bookings[i].entityDetails.transferDetails !== null)))
				  ||  ($('#bookingType').val()==='')) && (tripData.response.bookingDetails.bookings[i].generalDetails.bookingStatus === $('#statustype').val() || $('#statustype').val()==='')
		            ){	
						filteredData.push(tripData.response.bookingDetails.bookings[i]);			  
		            }
	  }
	  filterFlight = filteredData.toString();
	 $.get('/common/themes/'+window.templatePath+'/tmpl/myAccount/myTrips.ejs?v=nd-v0102',{},function(template){
		
		 //set the EJS template to myProfileMobile.dynamicTemplate
		myProfileMobile.dynamicTemplate = template;
		
		//set the data for UI
		var data = {
			responseData:filteredData, 
			maps:myProfileMobile.hashmap,
			lang:lang
		}
			
		myProfileMobile.loadTemplate('trips-view',data,$('.myBookingsGrid'));
		pricetagConvert.init();
		 $('.passengerSeg').click(function(){
				$(this).toggleClass('active');
				$(this).next().slideToggle();
			})

			/* [[ my account open window start here ]]*/
			function popitup(url) {
				newwindow=window.open(url,'name','height=570,width=800,scrollbars=1');
				if (window.focus) {newwindow.focus()}
				return false;
			}
			/* [[ my account open window end here ]]*/
			
	 });
	 	

}

function viewAllFunction() {
	$('#bookingType').val('');
	$('#statustype').val('');	
	bookingFilter();	
}

function validateReset(elm) {
		var forgotPassword;
		if($(elm).parents('#forgotPass').length){
			forgotPassword = $(elm).parents('#forgotPass').find("#reset_emailId");
		}else{
			$("#reset_Password").val(i18n.t("processingTxt")).addClass('LoadBtn');
			forgotPassword = $("#reset_emailId");
		}
		if (forgotPassword.val()== "") {
			$("#reset_Password").val(i18n.t("reset")).removeClass('LoadBtn');
			forgotPassword.addClass('validate_error_message');
			forgotPassword.focus();
			return false;
		}
		else{
			forgotPassword.removeClass('validate_error_message');				
		}
		
		if(!isEmail(forgotPassword.val())){
			growl_alert(i18n.t("pleaseentervalidemail"));
			forgotPassword.addClass('validate_error_message');
			$('#reset_Password').val(i18n.t("reset")).removeClass('LoadBtn');
			return false;
		}else{
			forgotPassword.removeClass('validate_error_message');
		}
		
		if(true){			
			$.get('/home/forgotPwd/' + forgotPassword.val(), function(fpassword) {
				//$("#reset_Password").prop('disabled', true);				
				if (fpassword.status === 'success') {
					$('#reset_Password').val(i18n.t("reset")).removeClass('LoadBtn');
					//growl_alert(i18n.t("retrivePassword"));
					$('.alert_custom').addClass('alert-success');
					setTimeout(function(){ window.location.reload(false);}, 1000);
					growl_alert(i18n.t("retrivePassword"));					
					return false;					
				} else {
					$('#reset_Password').val(i18n.t("reset")).removeClass('LoadBtn');
					//growl_alert(i18n.t("emailIncorrect"));
					forgotPassword.addClass('error');
					growl_alert(i18n.t("emailIncorrect"));
					return false;
				}				
			});
			return false;
		}		
}


/**
 * @description Send voucher on click
 */
$('body').on('click','._sendmails',function(){
	var funType=$(this).attr('data-funType');
	var bkngRef=$(this).attr('data-bookingRef');
	var prdType=$(this).attr('data-prdType');
	var srvcType=$(this).attr('data-srvcType');
	var email = "";
	
	if( funType != "" &&  funType=="print"){
		email=$(this).attr('data-customerId');		
	}else{
		if(prdType==="Hotel"){
			var heiEmail=$(this).parents('.mDialogPop').find('._heiEmail').val();
			var hevEmail=$(this).parents('.mDialogPop').find('._hevEmail').val();
			
			var fphevEmail=$(this).parents('.mDialogPop').find('._fphevEmail').val();
			
			if( heiEmail !== ''  &&  heiEmail !== null && srvcType==="email_invoice"){
				var email=heiEmail;			
			}
			if( hevEmail !== '' &&  hevEmail !== null && srvcType==="email_voucher"){
				var email=hevEmail;			
			} 
			if(typeof fphevEmail!=="undefined" && fphevEmail !== '' &&  fphevEmail !== null && srvcType==="email_voucher"){				
				email=fphevEmail;	
			}
		}
		
		if(prdType==="Flight"){
			//var feiEmail=$('._feiEmail').val();
			//var feeEmail=$('._feeEmail').val();
			var feiEmail=$(this).parents('.mDialogPop').find('._feiEmail').val();			
			var feeEmail=$(this).parents('.mDialogPop').find('._feeEmail').val();
			
			var fpheeEmail=$(this).parents('.mDialogPop').find('._fpheeEmail').val();
										
			if(typeof feiEmail!=="undefined" && feiEmail !== '' && feiEmail !== null && srvcType==="email_invoice"){
				email=feiEmail;	
			}
			if(typeof feeEmail!=="undefined" && feeEmail !== '' && feeEmail !== null && srvcType==="email_eticket"){				
				email=feeEmail;				
			}			
			if(typeof fpheeEmail!=="undefined" && fpheeEmail !== '' &&  fpheeEmail !== null && srvcType==="email_eticket"){				
				email=fpheeEmail;	
			}					
		}
				
		if(prdType==="Flight+Hotel"){			
			var fpheiEmail=$(this).parents('.mDialogPop').find('._fpheiEmail').val();				
			if(typeof fpheiEmail!=="undefined" && fpheiEmail !== '' && fpheiEmail !== null && srvcType==="email_invoice"){
				email=fpheiEmail;	
			}
		}

		if(prdType==="Transfers"){
			var heiEmail=$(this).parents('.mDialogPop').find('._heiEmail').val();
			var hevEmail=$(this).parents('.mDialogPop').find('._hevEmail').val();
			
			var fphevEmail=$(this).parents('.mDialogPop').find('._fphevEmail').val();
			
			if( heiEmail !== ''  &&  heiEmail !== null && srvcType==="email_invoice"){
				var email=heiEmail;			
			}
			if( hevEmail !== '' &&  hevEmail !== null && srvcType==="email_voucher"){
				var email=hevEmail;			
			} 
			if(typeof fphevEmail!=="undefined" && fphevEmail !== '' &&  fphevEmail !== null && srvcType==="email_voucher"){				
				email=fphevEmail;	
			}
		}				
	}	

	if(email===''){
		growl_alert(i18n.t("errEmail"));
		return false;
	}
	else{
		if(email !==''){
			if(!_evl(email)){
				growl_alert(i18n.t("errEmaiAdd"));
				return false;
			}
		}
		$('.modal').modal('hide');
		if(email !=='' && bkngRef !==null){
			$('.alert_custom').removeClass('alert-success');	
			var data={
					email:email,
					bkngRef:bkngRef,
					prdType:prdType,
					srvcType:srvcType,
					funType:funType
			}
			console.log(JSON.stringify(data));
			$.post('/hotel/sendVoucher',{data:data},function(res){
				if(funType==="print"){
					if(typeof res=='string')
					res = JSON.parse(res)					
					//var s=res.status;
					if(res.status=="SUCCESS"){						
						var w = window.open("", "Print-Invoice", "width=1000,height=1000,status=1,resizable=1,scrollbars=1");
						var html = res.msg[0];					
						$(w.document.body).html(html);		
						 //window.print();
					}else{
						growl_alert('No data found for this booking');
					}
				}else{
				if(res!==null && res.status==="SUCCESS"){
					if(srvcType=="email_voucher"){
					  growl_alert(i18n.t("Vouchersentsuccess"));	
					}else if(srvcType=="email_eticket"){
						growl_alert(i18n.t("eticketsentsuccess"));
					}else{
						growl_alert(i18n.t("invoicesentsucess"));
					}	
					$('.alert_custom').addClass('alert-success');					
				}
				else{
					growl_alert(i18n.t("failed"));
				}
				}
			});
		}
		
	}
});
$(function() {
    $(".predata").hide();
    var data = '';
    $("input[name='airlinesP']").keyup(function() {
        var airlineCode = $(this).val();
        setTimeout(function() {
            $(".predata ul").empty();
            $.get('/cms/flight/topAirline/get/' + airlineCode, {}, function(res) {
                data = res;
                for (var i = 0; i < data.length; i++) {
                    //console.log(data[i].longName);
                    $(".predata ul").append("<li><a href='javascript:void(0)' data-code='" + data[i].code + "' data-name-en='" + data[i].longName.en + "'data-name-ar='" + data[i].longName.ar + "'>" + data[i].code + " " + data[i].longName.en + "</a></li>");
                }
					$(".predata").show();

                $(".predata a").click(function() {
					/*var airlineCode = $(this).attr("data-code");
                    var airlineNameEn = $(this).attr("data-name-en");
                    var airlineNameAr = $(this).attr("data-name-ar");

                    $("input[name='topAirlineCode']").val(airlineCode);
                    $("input[name='airlineName']").val(airlineCode+" "+airlineNameEn);
                    $("input[name='airlineNameAr']").val(airlineNameAr);*/
                    $(".predata").hide();
                })
            })
            //console.log($(".predata").is(":visible"));		
        }, 2000)
    });  
});


$('body').on('click', '.myAccTabs li', function(){
var $t = $(this).parents('.myAccTabs');
	$t.each(function(){		
		$(this).find('li').removeClass('active');
	});
	$(this).addClass('active');
});


/*$('body').on('click','._paynow',function(){
	var bkngRef=$(this).attr('data-bookingRef');
	var req = {
			procId : bkngRef	
	};
	$.get('/process',req,function(res){
	});
	
});*/


var myAccountSerivce = {
	dynamicTemplate: null,
	data: null,
	init: function() {
		var $findKey = $('.myAccount').attr('data-bind');
		var $t = this;
		if (typeof $findKey != "undefined" && $findKey != "") {
			if ($findKey == "myDashboard") {
				this.myDashboard(function() {
					$t.tabChange('upComingTrips');
					$('body').on('click', '._dashboardTabChange', function(e) {
						var action = $(this).attr('data-item') || null;
						$t.tabChange(action);
						e.preventDefault();
					});
				});
			} else if ($findKey == "myTrip") {
				$('#bookingType').val('');
				$('#statustype').val('');
				myTrips();
			}
		}
	},
	myDashboard: function(cb) {
		var $t = this;
		$.loadingPageAnimation('show','myAccount');
		$.post('/myDashboard', {}, function(res) {
			$.get('/common/themes/' + window.templatePath + '/tmpl/myAccount/myDashboard.ejs?v=nd-v0102', {}, function(template) {				
				if(typeof res.responseData !="undefined"){
					//set the EJS template to myProfileMobile.dynamicTemplate
					$t.dynamicTemplate = template;
					$t.data = res;
					$t.loadTemplate('dashboard-view', $t.data, $('._dashboardMyAcc'));
					$.loadingPageAnimation();
					return cb();
				}else{
					$t.dynamicTemplate = template;
					$t.data = "fail";
					$t.loadTemplate('dashboard-view', $t.data, $('._dashboardMyAcc'));
					$.loadingPageAnimation();					
				}
			});
		});
	},
	  tabChange: function(args) {
		  var data = {};
	  data.responseData = this.data.responseData;  
	  if(typeof data.responseData !="undefined"){
	   if (args === 'upComingTrips') {
	    data.trips = this.data.responseData.upComingTrips;
	    data.selectedTab='upComingTrips';
	   } else if (args === 'newBooking') {
	    data.trips = this.data.responseData.newTrips;
	    data.selectedTab='newBooking';
	   } else if (args === 'paymentpending') {
	    data.trips = this.data.responseData.paymentPendingTrips;
	    data.selectedTab='paymentpending';
	   } else if (args === 'cancelledBookings') {
	    data.trips = this.data.responseData.cancelledTrips;
	    data.selectedTab='cancelledBookings';
	   }
	   this.loadTemplate('myAccTabs-content', data, $('.myAccTabs-content'));
	  }
	 },
	 
	/**
	 *@description Load template Content
	 *@param HTML Selector [dynamicTemplate(Dynamic template to Loaded)]
	 *@param String [templateID (Template ID)]
	 *@param data Array/Object [data(Json Data)]
	 *@param HTML Selector [toUpdate(Template to update)]
	 *@return 
	 */
	loadTemplate: function(templateID, data, toUpdate, template, callback) {
		//loadTranslations();
		var result;
		if (typeof template == "undefined" || template == "") {
			template = $(this.dynamicTemplate);
		} else {
			template = $(template);
		}
		//Load the template
		var template = tmpl(template.filter('#' + templateID).html(), data);

		//Fix for Unicode Escaped Character for Handling Unicode Arabic String
		var r = /\\u([\d\w]{4})/gi;
		template = template.replace(r, function(match, grp) {
			return String.fromCharCode(parseInt(grp, 16));
		});
		template = unescape(template);
		//Select result container
		if (typeof toUpdate === 'object') {
			result = toUpdate;
		} else {
			result = $('#' + toUpdate);
		}
		//Empty the result container
		result.empty();
		//Load data to the result container
		result.append(template);
		_langGlobal.langInit();
		//userTrackerModule.init();;
		if (typeof callback === 'function')
			return callback();
		//below script for img lazy load
		var bLazy = new Blazy({
			breakpoints: [{ 
			src: '../img/destinations/call-icon.jpg'
		}]
		  , success: function(element){
			setTimeout(function(){
			var parent = element.parentNode;
			parent.className = parent.className.replace(/\bloading\b/,'');
			}, 200);
			}
	   });
	},
	initTransPredSearchComponent: function(){
		console.log('initTransPredSearchComponent');
		autoCompleteHotel('#pickUpLocation','','searchTr-ul','pickUpSearchKey');
		autoCompleteHotel('#dropOffLocation','','searchTrDo-ul','dropOffSearchKey');
	}
}

//Has the expiry date and birth date are no mandatory fields, handled with the conditions.@p Start
$('body').on('change','.birthDayPick',function(){
	if($(".dayBirth").val()==0 && $(".dayBirth").val()==0 && $(".dayBirth").val()==0){
		$('.birthDay').val("");
		$('.birthDayPick').val("");
	}
}); 
$('body').on('change','.expiryDayPick',function(){
	if($(".dayBirth").val()==0 && $(".dayBirth").val()==0 && $(".dayBirth").val()==0){
		$('.birthDay').val("");
		$('.birthDayPick').val("");
	}
});
//Has the expiry date and birth date are no mandatory fields, handled with the conditions.@p End

/**
* validations while uploading the image, one is file size shldnt be more than 2MB
* validate file format.	 @p  
 */
function validatePhotoMB() {	 
	//check whether browser fully supports all File API
    if (window.File && window.FileReader && window.FileList && window.Blob) 
    {
		if(typeof $('#imageFile')[0].files[0]!=="undefined"){
			var fsize = $('#imageFile')[0].files[0].size; //get the file size and file type from file input field
			if(fsize>2202009) //do something if file size more than 2 mb (2097152)
			{
				growl_alert("file size should be less than 2MB");
				$("#imageFile").val("");
			}
		}
    }else{
        alert("Please upgrade your browser, because your current browser lacks some new features we need!");
    }
} 

function validateFormat(file) {
		var ext = file.split(".");
		var arrayExtensions = ["jpg","gif","png","JPG","GIF","PNG"];
		if(arrayExtensions.indexOf(ext[1].toLowerCase())== -1	){
			growl_alert("Supported image file format: jpg, gif, png");
			$("#imageFile").val("");
		}
} 

function validateifFIle(condition){ 
	// to validate when no image is selected and clicked on submit@p
	if(typeof $('#imageFile')[0].files[0]==="undefined"){
	growl_alert("Please choose an image file");
	return false;
	}
}
//end @p

/**
 * Delete saved card
 */
$('body').on('click','.deleteSavedCard',function(){
	
	var curElm = $(this).parents('.panel.panel-default');
	var id=$(this).attr('data-id');
	  $.post('/myProfile/deleteSavedCard', {uniqueID:id},function(d){
		  if(d.nModified === 0){
			  growl_alert(i18n.t("failed"));
		  }
		  else if(d.nModified === 1){
			   /*growl_alert(i18n.t("deleteTravSucess"));*/
			   growl_alert(i18n.t("cardDltdSucss"));
			  $('.alert_custom').addClass('alert-success');
			  curElm.remove();
			  $(".modal-backdrop").toggleClass("modal-backdrop fade out");	
			  $('body').removeClass("modal-open");	
			  $('body').css('padding','0px');
			  $("html, body").animate({scrollTop:0});
		  }

	 });
	 $(this).parents('.peCont').find('.savedCardBlock li.active').remove();	
		setTimeout(function(){  
			if($('.savedCardBlock li').length <=1){ 
			 $('.savedCardBlock').parents('.peBlock').hide();
			}
		},1000);
	 
	 
	return false;
});


$('body').on('click', '.delSavCrd',function(){	
	if(!$(this).hasClass('active')){
		$(this).parents('.peCont .savedCardBlock li').addClass('active');
	}else{
		$(this).parents('.peCont .savedCardBlock li').removeClass('active')
	}
});

$('body').on('click','._nationalityDoc',function(){
	$('#nationality').show();
	$('#iqama').hide();
});
$('body').on('click','._iqamaDoc',function(){
	$('#nationality').hide();
	$('#iqama').show();
});


/**
 * Register New Travel Agent
 */
$('body').on('click','._franchiseRegister',function(){

	var $trgtElmValidate = $('._validator');
	var status = true;
	
	$trgtElmValidate.each(function(){

		var $errorData = $(this).attr('data-err') || "Field is mandate!";
		var $elm = $(this);

		if($elm.hasClass('_taname') && status==true){
			var message = $elm.attr('data-err');
			if($elm.val()==""){
				// notie.alert(3, i18n.t("franchiseValidname"), 3);
				growl_alert(i18n.t("franchiseValidname"));			
				$elm.focus();
				$elm.addClass('error');
				status = false;
				return false;
			}else if(_Aval($elm.val())){								
				growl_alert(i18n.t("namesinenglish"));			
				$elm.focus();
				$elm.addClass('error');
				status = false;
				return false;
			}else if((!_fnval($elm.val()))||($elm.val().length<=2)){								
				growl_alert(i18n.t("franchiseValidname"));			
				$elm.focus();
				$elm.addClass('error');
				status = false;
			}else{
				var firstNam = $elm.val();
				var splChar = "-";
				var firstName = firstNam.replace(/ +/g, "");
				for(var i=0;i<firstName.length;i++){
					if((firstName[0] == "-" || firstName[firstName.length-1] == "-") || (typeof firstName[i] !== "undefined") && (typeof firstName[i+1] !== "undefined") && ((splChar == firstName[i]) && (splChar == firstName[i+1]))){
						//notie.alert(3, i18n.t("validfirstname"), 3);
						growl_alert(i18n.t("franchiseValidname"));
						l.stop();
						$elm.focus();
						$elm.addClass('error');
						status = false;
					}
				}
			}
		}



		if($elm.hasClass('_taemail') && status==true){
			var message = $elm.attr('data-err');
			if(!_evl($elm.val())){
				//notie.alert(3, message, 3);
				growl_alert(i18n.t("enteruremail"));
				$elm.addClass('error');
				$elm.focus();
				status = false;
				return false;
			}
		}


	/*if($elm.hasClass('_agencyName') && status==true){
			var message = $elm.attr('data-err');
			if($elm.val()==""){
				growl_alert(i18n.t("franchiseValidagencyname"));			
				$elm.focus();
				$elm.addClass('error');
				status = false;
				return false;
			}else if(_Aval($elm.val())){								
				growl_alert(i18n.t("franchiseValidagencyname"));			
				$elm.focus();
				$elm.addClass('error');
				status = false;
				return false;
			}else if((!_fnval($elm.val()))||($elm.val().length<=2)){								
				growl_alert(i18n.t("franchiseValidagencyname"));			
				$elm.focus();
				$elm.addClass('error');
				status = false;
			}else{
				var firstNam = $elm.val();
				var splChar = "-";
				var firstName = firstNam.replace(/ +/g, "");
				for(var i=0;i<firstName.length;i++){
					if((firstName[0] == "-" || firstName[firstName.length-1] == "-") || (typeof firstName[i] !== "undefined") && (typeof firstName[i+1] !== "undefined") && ((splChar == firstName[i]) && (splChar == firstName[i+1]))){
						//notie.alert(3, i18n.t("validfirstname"), 3);
						growl_alert(i18n.t("franchiseValidagencyname"));
						l.stop();
						$elm.focus();
						$elm.addClass('error');
						status = false;
					}
				}
			}
		}*/




		if($elm.hasClass('_tamobile') && status==true){
			var len = $elm.val().length;
			var message = $elm.attr('data-err');
			if($elm.val()==""){
				//notie.alert(3, message, 3);
				growl_alert(i18n.t("errMobNum"));
				$elm.addClass('error');
				$elm.focus();
				status = false;
				return false;
			}else if(($elm.val()!="" && len<=7)||(!_Nonly($elm.val()))){
				//notie.alert(3,i18n.t("validmobile"), 3);
				growl_alert(i18n.t("validmobile"));
				$elm.focus();
				$elm.addClass('error');
				status = false;
				return false;
			}
		}

		/*if($elm.hasClass('_taComments') && status==true){
			var message = $elm.attr('data-err');
			if($elm.val()==""){
				growl_alert(i18n.t("franchiseComments"));			
				$elm.focus();
				$elm.addClass('error');
				status = false;
				return false;
			}
		}*/
		
		/*if($("#countyList option:selected").text()=='Select Location' || $("#countyList option:selected").text()=='' ){
			var message = $elm.attr('data-err');
			if($elm.val()==""){
				growl_alert(i18n.t("franchiseValidlocation"));	
				$elm.focus();
				$elm.addClass('error');
				status = false;
				return false;
			}
		}*/
		
		/*if($("#cityList option:selected").text()=='' ){
			var message = $elm.attr('data-err');
			if($elm.val()==""){
				growl_alert(i18n.t("franchiseValidcity"));	
				$elm.focus();
				$elm.addClass('error');
				status = false;
				return false;
			}
		}*/


	});

	
	if(status==true){
		data={
			taname:$('._taname').val(),
			taemail:$('._taemail').val(),
			agencyName:$('._agencyName').val(),
			taLocation:$("#countyList option:selected").text(),
			taCity:$("#cityList option:selected").text(), 
			taCountryCode:$('._txtCountryAreaCode').val(),
			taphoneNum:$('._tamobile').val(),
			taComments:$('._taComments').val(),

		}
		$.post('/sendFranchiseDetails',{data:data},function(res){
			
			if(res.status=="Success"){
			growl_alert("Mail sent Successfully");
			$('.alert_custom').addClass('alert-success');
			location.href="/franchise/joinUs";
			}  else {
				growl_alert("Error while sending mail");
			}
				
					
		});

	}
	else return false;

});
//$.post('/sendFeedbackMail',{data:feedbackdata},function(res){
/*$('body').on('click','._sendata',function(){
	myData={
		my = $("#myData").val();
	}
	$.post('/sendFeedbackMail',myData,function(res){
					alert('hi');
					//console.log(countryList);
					//callback();
				});

});*/
var sendClaimPointsData=function(e){

	$('.alert_custom').removeClass('alert-success');
	var claimdata = $("#myData").val();
	if(claimdata==""){
		growl_alert(i18n.t("plsBookRefNumber"));
	}else if(!(/^[a-zA-Z0-9]{7,10}$/.test(claimdata)) || (/\s/.test(claimdata))){
		growl_alert(i18n.t("plsValBookRefNumber"));
	} else{
		$.post('/rewardclaimpoints',{claimdata:claimdata},function(res){
			if(res.status=="Success"){
				growl_alert(i18n.t("reqEmailSentSuccessfully"));
				$('.alert_custom').addClass('alert-success');
				$("#myData").val("");
			}else {
				growl_alert(i18n.t("errSendMail"));
			}
		});	
//		$.post('/rewardClaimpointsAdmin',{claimdata:claimdata},function(res){
//			console.log("Mail sent to the admin");
//		});	
	}
}
$('body').on('click','._sendClaimData',function(){
	sendClaimPointsData();
});
$("#myData").keypress(function(e) {
    if(e.which == 13) {
    e.preventDefault();    	
     sendClaimPointsData();
    }
});

$('body').on('click','._fltClkId',function(){
	
	/*alert();
	$.get('/common/themes/v2/tmpl/myAccount/managedBooking.ejs?v=nd-v0102',{},function(template){
				myProfileMobile.dynamicTemplate = template;
				//myProfileMobile.loadTemplate('add-traveller-view',travellerData,$('#managed-booking-view'));
				myProfileMobile.loadTemplate('managed-nahl-view',{},$('#managed-booking-view'));
			});

*/


	
	var req = {
		email: $("._hEmailId").val(),
		iternaryNo: $("._hb2cId").val()
	};
	$.post('/mangBooking', req, function(res) {
			$.get('/common/themes/v2/tmpl/myAccount/managedBooking.ejs?v=nd-v0102',{},function(template){
				//set the EJS template to myProfileMobile.dynamicTemplate add-traveller-view
				myProfileMobile.dynamicTemplate = template;
				//myProfileMobile.loadTemplate('add-traveller-view',travellerData,$('#managed-booking-view'));
				myProfileMobile.loadTemplate('crossmanaged_booking_view',res,$('#managed_booking_view'));
			});
	});
});

$('body').on('click','#subscribeBtn', function(){
	if ($('#subscribeRwd').is(':checked')) {
		$.post('/registerForRewards', {rewards:true}, function(res) {
			if(res.status="success"){
				$("body").find('.modal').hide();
				$("body").find('.fade').hide();
				$("body").find('.in').hide();
				growl_alert(i18n.t('mailSentSuccessfully'));
				$('.alert_custom').addClass('alert-success');
			} else {
				growl_alert(i18n.t('errSendMail'));
			}
			window.location.reload(false);
		});
		
	}
	else {
		growl_alert(i18n.t('agreeTrmCond'));
	}
});

var jobPositionTitle= $("#jobPositionTitle").html();
$("#jobPositionValue").val(jobPositionTitle);
	
function validateCareerNew() {
	
    var targetContainer = $('.careerNewApplication');
    var fullName = targetContainer.find('#fullName').val();
    var email = targetContainer.find('#email').val();
    var phone = targetContainer.find('#phoneNo').val();
    var stdCode = targetContainer.find('#phoneCountryCode').val();
    var residentCountry = targetContainer.find('.residentCountry').val();
    var preferredLocation = targetContainer.find('.preferredLocation').val();
    var currentexperienceY = targetContainer.find('.currentexperienceY').val();
    var currentexperienceM = targetContainer.find('.currentexperienceM').val();
    var fileToUpload = targetContainer.find('#fileToUpload').val();
    var currentCompany = targetContainer.find('.currentCompany').val();
    var currentDesignation = targetContainer.find('.currentDesignation').val();
    var functionalArea = targetContainer.find('.functionalArea').val();
    var industry = targetContainer.find('.industry').val();
    var keySkills = targetContainer.find('.keySkills').val();
	var jobPositionTitle= $("#jobTitlePosition").html();
	var jobPositionValue = targetContainer.find('#jobPositionValue').val();
	
    var popupHtml = '<div class="loading_popup_flight "><div id="cssload-contain"><img src="https://www.flyin.com/common/themes/v1/images/fareLoader.gif"/><span>' + i18n.t('pleaseWait') + '</span></div></div>';
    $('body').find('.careerNewApplication').prepend(popupHtml);

	
	
    var condition = true;		
		//Validation of Full Name		
		if (fullName == "") {
        growl_alert(i18n.t("Please enter your Full Name"));
        condition = false;
        targetContainer.find('#fullName').focus();
        targetContainer.find('#fullName').addClass('error');
        $('html, body').animate({
            scrollTop: $('#fullName').offset().top - 130
        });        
        return false;
    } else if (_Aval(fullName)) {
        growl_alert(i18n.t("namesinenglish"));
        $('html, body').animate({
            scrollTop: $('#fullName').offset().top - 130
        });       
        condition = false;
        return false;
    } else if ((!_fnval(fullName)) || (fullName.length <= 2)) {
        growl_alert(i18n.t("Please enter your Full Name"));
        $('html, body').animate({
            scrollTop: $('#fullName').offset().top - 130
        });       
        condition = false;
        return false;
    } else {
        var fullNam = fullName;
        var splChar = "-";
        for (var i = 0; i < fullName.length; i++) {
            if ((fullName[0] == "-" || fullName[fullName.length - 1] == "-") || (typeof fullName[i] !== "undefined") && (typeof fullName[i + 1] !== "undefined") && ((splChar == fullName[i]) && (splChar == fullName[i + 1]))) {
                growl_alert(i18n.t("Hey Dude"));
                $('html, body').animate({
                    scrollTop: $('#fullName').offset().top - 130
                });               
                condition = false;
                return false;
            }
        }
        targetContainer.find('#fullName').removeClass('error');
    }
	
	//Validation of Email address	
    if (email == "") {
        growl_alert(i18n.t("Please enter your correct email address"));
        condition = false;
        targetContainer.find('#email').focus();
        targetContainer.find('#email').addClass('error');
        $('html, body').animate({
            scrollTop: $('.careerNewApplication #email').offset().top - 130
        });
        $('.loading_popup_flight').remove();
        return false;
    } else if (!_evl(email)) {
        growl_alert(i18n.t("Please enter your correct email address"));        
        condition = false;
        targetContainer.find('#email').focus();
        targetContainer.find('#email').addClass('error');
        $('html, body').animate({
            scrollTop: $('.careerNewApplication #email').offset().top - 130
        });
        return false;
    } else {
        targetContainer.find('#email').removeClass('error');
    }
	
	//Validation of Phone number
	
    if (phone == "") {
        growl_alert(i18n.t("errMobNum"));
        $('.loading_popup_flight').remove();
        condition = false;
        targetContainer.find('#phoneNo').focus();
        targetContainer.find('#phoneNo').addClass('error');
        $('html, body').animate({
            scrollTop: $('#phoneNo').offset().top - 130
        });
        return false;
    } else if ((phone != "" && phone.length <= 7) || (!_Nonly(phone))) {
        growl_alert(i18n.t("validmobile"));       
        condition = false;
        targetContainer.find('#phoneNo').focus();
        targetContainer.find('#phoneNo').addClass('error');
        $('html, body').animate({
            scrollTop: $('#phoneNo').offset().top - 130
        });
        return false;
    } else {
        targetContainer.find('#phoneNo').removeClass('error');
    }
	
	// Validation of Resident Country	
    if (residentCountry == "") {
        growl_alert(i18n.t("Please enter your Resident Country"));
        condition = false;
        targetContainer.find('.residentCntry .cSel').addClass('brderZero');	
		targetContainer.find('.residentCntry .cSel a').addClass('error');
        $('html, body').animate({
            scrollTop: $('.residentCntry').offset().top - 250
        });      
        return false;
    } else {
        targetContainer.find('.residentCntry .cSel').removeClass('brderZero');
        targetContainer.find('.residentCntry .cSel a').removeClass('error');
    }
	
	// Validation of Preferred Location	
    if (preferredLocation == "") {
        growl_alert(i18n.t("Please enter your Preferred Location"));

        condition = false;
        targetContainer.find('.preferrecLoct .cSel').addClass('brderZero');	
		targetContainer.find('.preferrecLoct .cSel a').addClass('error');	
        $('html, body').animate({
            scrollTop: $('.preferrecLoct').offset().top - 250
        });
       
        return false;
    } else {
		targetContainer.find('.preferrecLoct .cSel').removeClass('brderZero');
        targetContainer.find('.preferrecLoct .cSel a').removeClass('error');
    }
		
	//Validation of Current Experience	
    if (currentexperienceY == "") {
        growl_alert(i18n.t("Please enter your current experience"));
        condition = false;
        targetContainer.find('.currentexperienceY').addClass('error');
        $('html, body').animate({
            scrollTop: $('.currentexperienceY').offset().top - 250
        });       
        return false;
    } else {
        targetContainer.find('.currentexperienceY').removeClass('error');
    }
	
	//Validation of File Upload	
    if (fileToUpload == "") {
        growl_alert(i18n.t("Please upload your CV"));
        condition = false;
        targetContainer.find('#fileToUpload').addClass('error');
        $('html, body').animate({
            scrollTop: $('#fileToUpload').offset().top - 250
        });       
        return false;
    } else {
        targetContainer.find('#fileToUpload').removeClass('error');
    }
		
		//Validation of Currenty Company
        if (currentCompany == "") {
            growl_alert(i18n.t("Please enter your current company name"));
            condition = false;
            targetContainer.find('.currentCompany').addClass('error');
            $('html, body').animate({
                scrollTop: $('.currentCompany').offset().top - 300
            });           
            return false;
        } else {
            targetContainer.find('.currentCompany').removeClass('error');
        }
		
		//Validation of Currenty Designation
        if (currentDesignation == "") {
            growl_alert(i18n.t("Please enter your current designation"));
            condition = false;
            targetContainer.find('.currentDesignation').addClass('error');
            $('html, body').animate({
                scrollTop: $('.currentDesignation').offset().top - 300
            });          
            return false;
        } 
		else {
            targetContainer.find('.currentDesignation').removeClass('error');
        }
   
	
	

	//Checking if all required fields are filled
	 if (condition == true) {		
			targetContainer.find('.apply_btnGrid input.btn.orange').addClass('LoadBtn');
			targetContainer.find('.apply_btnGrid input.btn.orange').val('Processing.....');
			setTimeout(function(){
				targetContainer.find('.apply_btnGrid input.btn.orange').attr("disabled", "disabled");
			},300);			
			
			
		}
	}

//Function for validating file type on Career Page
function validateFileFormat(file) {
    var ext = file.split(".");
    var arrayExtensions = ["doc", "pdf", "rtf", "docx", "DOC", "PDF", "RTF", "docx"];
    if (arrayExtensions.indexOf(ext[1].toLowerCase()) == -1) {
        growl_alert("Supported file format: doc, pdf, rtf or docx");
        $("#fileToUpload").val("");
    }
}

//Function for validating file size on Career Page
function validateFileSize() {
    //check whether browser fully supports all File API
    if (window.File && window.FileReader && window.FileList && window.Blob) {
        if (typeof $('#fileToUpload')[0].files[0] !== "undefined") {
            var fsize = $('#fileToUpload')[0].files[0].size; //get the file size and file type from file input field
            if (fsize > 2202009) //do something if file size more than 2 mb (2097152)
            {
                growl_alert("file size should be less than 2MB");
                $("#fileToUpload").val("");
            }
        }
    } else {
        alert("Please upgrade your browser, because your current browser lacks some new features we need!");
    }
}
/*
var lastPartofURL = window.location.href.split("/").pop();
$(".includeThis").html(lastPartofURL);
console.log('--------------------',lastPartofURL);
if ( (lastPartofURL === 'ui') || (lastPartofURL === 'ui?lng=en')) {	
	lastPartofURL = "UI Designer";	
}
else if ( (lastPartofURL === 'java') || (lastPartofURL === 'java?lng=en')) {	
	lastPartofURL = "Java Developer";	
}

else if ( (lastPartofURL === 'ux') || (lastPartofURL === 'ux?lng=en')) {	
	lastPartofURL = "Ux Designer";	
}

$(".includeThis").html(lastPartofURL);

*/
jQuery(document).ready(function(){
	$('body').on('change','#_sortSelectBBC',function(){
		var url = window.location.origin+window.location.pathname+$(this).val();
		location.href = url;
	});
	var asceDesc=window.location.href.split('?');
	$('#_sortSelectBBC').val('?'+asceDesc[1]); 
	$('.youHaveFiltered').hide();
	ULlessMore(['_accType_filter_template','_area_filter_template','_hotelChain_filter_template']);
	//$("#pagination").pagination(paginationConfig());
	viewHotelMapBbc();
});

/*  function paginationConfig(){
			//var opt = {callback:hpageselectCallback};
			var opt={};
			var items = {
				items_per_page:30,
				num_display_entries:6,
				num_edge_entries:2,
				prev_text: i18n.t("previous"),
				next_text: i18n.t("next")
			};	
			for(var key in items){
				opt[key] = items[key];
			}
			//return opt;
}  */
function viewHotelMapBbc(){
	$('body').on('click','.results-show-mapBBc', function(event) {
		google.maps.visualRefresh = false;
		event.preventDefault();
		event.stopPropagation();
		var target = $(this).attr('id');
		var Lat = $(this).attr('data-lat');
		var Lng = $(this).attr('data-lng');
		var Hname = $(this).attr('data-hname');
		var Hadd = $(this).attr('data-hadd');
		var Hstar = $(this).attr('data-hstar');
		var myLatlng = new google.maps.LatLng(Lat, Lng);
		var mapOptions = {
			center: myLatlng,
			zoom: 15,
			disableDefaultUI: false,
			zoomControl: true,
			scaleControl: true,
			scrollwheel: true,
			mapTypeControl: true,
			mapTypeControlOptions: {
		    	style: google.maps.MapTypeControlStyle.DROPDOWN_MENU
		  	},
		  	scaleControl: true,
		  	scaleControlOptions: {
		        position: google.maps.ControlPosition.BOTTOM_LEFT
		    }
		};
		$('#'+target).parents('.hotelName').find('div.hotelMap').show();
		$('#'+target).parents('.hotelName').find('a.custom-map-close').show();
		var mapTarget = $('#'+target).parents('.hotelName').find('div.hotelMap').attr('id');
		var map = new google.maps.Map(document.getElementById(mapTarget),
			mapOptions);
		var marker = new google.maps.Marker({
			position: myLatlng,
			map: map,
			icon: '/common/themes/v2/img/markers/hotel-marker.png'
		});
		var contentString ='<div class="googleMapInfoWindow">'+
				    	    '<h2 class="gmHeading">'+Hname+'</h2>'+
				    	    '<div class="gmContent">'+
				    	    '<p>'+Hadd+'</p>'+
							'<div class="stars star'+Hstar+'"></div>'+
				    	    '</div>'+
				    	    '</div>';

		var infowindow = new google.maps.InfoWindow({
			content: contentString
		});
        google.maps.event.addListener(marker, 'click'
        		, function() {
		  infowindow.open(map,marker);
		});
	});
	$('body').on('click', '.custom-map-close', function(event) {
		event.preventDefault();
		$(this).parents('.hotelName').find('div.hotelMap').hide();
		$(this).parents('.hotelName').find('a.custom-map-close').hide();
	});
}

$('.BbcModifySearch').click(function(){
	var disp=$("#countrycityhotel").attr('data-val');
	$('#countrycityhotel').val(disp);
	var hiddenSearchKeyDataval=$('#hotelsearchKey').attr('data-val');
	$('#hotelsearchKey').val(hiddenSearchKeyDataval);
	var currentDateChIn=moment().format("DD/MM/YYYY");
	$('._datepicker.hBbcChIn').val(currentDateChIn);
	var currentDate1ChIn=moment().format("YYYY/MM/DD")
	$('#hBbcChInHidden').val(currentDate1ChIn);
	var new_date = moment().add('days',2);
	var currentDateChOut=moment(new_date).format("DD/MM/YYYY");
	$('._datepicker.hBbcChOut').val(currentDateChOut);
	var currentDate1ChOut=moment(new_date).format("YYYY/MM/DD");
	$('#hBbcChOutHidden').val(currentDate1ChOut);
	$('.nights-count').val(2);
	
});

function validateBbcMS(){
	var countrycityhotel = $('#countrycityhotel');
	var hotelsearchKey = $('#hotelsearchKey');
	var hkeyHiddenAlter = $('#hkeyHiddenAlter');
	var hkeyTotalGHiddenAlter = $('#hkeyTotalGHiddenAlter');
	var checkin = $("._datepicker.hBbcChIn");
	var checkout=$("._datepicker.hBbcChOut");
	var date1 = $('#hBbcChInHidden');
	var date2 = $('#hBbcChOutHidden');
	if(countrycityhotel.val()==""){
		scrollTopValidation();
		countrycityhotel.addClass('error');
		growl_alert(i18n.t("errDestination"));	
		countrycityhotel.focus();
		return false;
	}else{
		countrycityhotel.removeClass('error');
	} 
	
	if(hotelsearchKey.val()==""){
		scrollTopValidation();
		growl_alert(i18n.t("errDestination"));	
		return false;		
	}
	
	if(date1.val()===date2.val()){
		checkin.addClass('error');
		checkout.addClass('error');
		scrollTopValidation();
		growl_alert(i18n.t('errSameDates'));
		checkin.focus();
		checkout.focus();
		return false;
	}
	if(hkeyTotalGHiddenAlter.val()>9){
		scrollTopValidation();
		growl_alert(i18n.t("errMorePax"));	
		return false;
	}
	var searchType=$('#hotelsearchKey').val().split('>>')[0];
	var date1D = new Date($("#hBbcChInHidden").val());
	var date2D = new Date($("#hBbcChOutHidden").val());
	var timeDiff = Math.abs(date2D.getTime() - date1D.getTime());
	var nights = Math.ceil(timeDiff / (1000 * 3600 * 24)); 
	if(nights>30){
		growl_alert(i18n.t('errbkngperiod'));
		condition = false;
		return false;
	}
	var hotelRooms = $('#hotelRooms').val();
	var adults = $("#hiddena").val();
	var children = $("#hiddenc").val();
	var age = $( "#hiddenca").val();
	 var opt={
			hotelSearchType:searchType,
			checkInDate:date1.val().replace(/\//g,'-'),
			checkOutDate:date2.val().replace(/\//g,'-'),
			nights:nights,
			noOfRooms:hotelRooms || 1,
			noOfAdults:adults || 1,
			noOfChildren:children || 0,
			childrenAges:age, 
			provinceName:"",
			criteria:null,
			predictiveId:"",
			starType:"",
			checkBreakfastSelected:false,
			resultsViewType:"List",
			language:'en_GB',
			hotelClass:null,
			searchFrom:"Predictive"
	};
	 if("City"===searchType){
		opt.cityId=$('#hotelsearchKey').val().split('>>')[1]
		opt.cityName=$('#hotelsearchKey').val().split('>>')[2]
		opt.provinceName = $('#hotelsearchKey').val().split('>>')[3]
		opt.countryName=$('#hotelsearchKey').val().split('>>')[4]
		opt.predictiveId=$('#hotelsearchKey').val().split('>>')[1]
		opt.lat=$('#hotelsearchKey').val().split('>>')[5]
		opt.long=$('#hotelsearchKey').val().split('>>')[6]
	}
	else if("Hotel"===searchType){
		opt.hotelId=$('#hotelsearchKey').val().split('>>')[1]
		opt.hotelName=$('#hotelsearchKey').val().split('>>')[4]
		opt.cityId=$('#hotelsearchKey').val().split('>>')[5]
		opt.cityName=$('#hotelsearchKey').val().split('>>')[6]
		opt.provinceName = $('#hotelsearchKey').val().split('>>')[7]
		opt.countryName=$('#hotelsearchKey').val().split('>>')[8]
		opt.predictiveId=$('#hotelsearchKey').val().split('>>')[1]
		opt.uniqueId=opt.hotelId
	}else if("Airport"===searchType){
		opt.cityId=$('#hotelsearchKey').val().split('>>')[2]
		opt.cityName=$('#hotelsearchKey').val().split('>>')[3]
		opt.countryName=$('#hotelsearchKey').val().split('>>')[4]
		opt.hotelSearchType='City'
	}
	generateHotelURL(opt); 
	
}
$('body').on('change','.hBbcChIn,.hBbcChOut',function(){
	if($('.hBbcChIn').val()!="" && $('.hBbcChOut').val()!=""){
		var dateFirst = $('.hBbcChIn').val().split('/');
		var dateSecond = $('.hBbcChOut').val().split('/');
		var month1 = dateFirst[1]-1;
		var month2 = dateSecond[1]-1;
		var firstDate = new Date(dateFirst[2], month1, dateFirst[0]);
		var secondDate = new Date(dateSecond[2], month2, dateSecond[0]);
		var timeDiff = Math.abs(secondDate.getTime() - firstDate.getTime());
		var daysDiff = Math.ceil(timeDiff / (1000 * 3600 * 24));
		$('.nights-count').val(daysDiff);
	}
});
//Bbc modify search.@p start
$('body').on('click','.selectRoomsOptions.bbcRooms',function(event){ 
	event.preventDefault();
	$(this).toggleClass('active');
	$('#changesearch-options').slideToggle("fast");
});

var minimized_elements = $('small.minimize');
    	_langGlobal.langRender(function(){	
		minimized_elements.each(function(){    
        var t = $(this).text(); 		
        if(t.length < 50) return;
        
        $(this).html(
            t.slice(0,65)+'<span>... </span><a href="#" class="more">'+ i18n.t('more')+'</a>'+
            '<span style="display:none;">'+ t.slice(65,t.length)+' <a href="#" class="less">'+ i18n.t('less')+'</a></span>'
        );
        
    }); 
    
    $('a.more', minimized_elements).click(function(event){
        event.preventDefault();
        $(this).hide().prev().hide();
        $(this).next().show();        
    });
    
    $('a.less', minimized_elements).click(function(event){
        event.preventDefault();
        $(this).parent().hide().prev().show().prev().show();    
    });
});


	
!function(t,i,s,o){var e=0,h=function(){var i=o.userAgent,s=/msie\s\d+/i;return 0<i.search(s)&&(i=s.exec(i).toString(),i=i.split(" ")[1],9>i)?(t("html").addClass("lt-ie9"),!0):!1}();Function.prototype.bind||(Function.prototype.bind=function(t){var i=this,s=[].slice;if("function"!=typeof i)throw new TypeError;var o=s.call(arguments,1),e=function(){if(this instanceof e){var h=function(){};h.prototype=i.prototype;var h=new h,r=i.apply(h,o.concat(s.call(arguments)));return Object(r)===r?r:h}return i.apply(t,o.concat(s.call(arguments)))};return e}),Array.prototype.indexOf||(Array.prototype.indexOf=function(t,i){var s;if(null==this)throw new TypeError('"this" is null or not defined');var o=Object(this),e=o.length>>>0;if(0===e)return-1;if(s=+i||0,1/0===Math.abs(s)&&(s=0),s>=e)return-1;for(s=Math.max(s>=0?s:e-Math.abs(s),0);e>s;){if(s in o&&o[s]===t)return s;s++}return-1});var r=function(o,e,h){this.VERSION="2.0.6",this.input=o,this.plugin_count=h,this.old_to=this.old_from=this.calc_count=this.current_plugin=0,this.raf_id=null,this.is_update=this.is_key=this.force_redraw=this.dragging=!1,this.is_start=!0,this.is_click=this.is_resize=this.is_active=!1,this.$cache={win:t(s),body:t(i.body),input:t(o),cont:null,rs:null,min:null,max:null,from:null,to:null,single:null,bar:null,line:null,s_single:null,s_from:null,s_to:null,shad_single:null,shad_from:null,shad_to:null,grid:null,grid_labels:[]},h=this.$cache.input,o={type:h.data("type"),min:h.data("min"),max:h.data("max"),from:h.data("from"),to:h.data("to"),step:h.data("step"),min_interval:h.data("minInterval"),max_interval:h.data("maxInterval"),drag_interval:h.data("dragInterval"),values:h.data("values"),from_fixed:h.data("fromFixed"),from_min:h.data("fromMin"),from_max:h.data("fromMax"),from_shadow:h.data("fromShadow"),to_fixed:h.data("toFixed"),to_min:h.data("toMin"),to_max:h.data("toMax"),to_shadow:h.data("toShadow"),prettify_enabled:h.data("prettifyEnabled"),prettify_separator:h.data("prettifySeparator"),force_edges:h.data("forceEdges"),keyboard:h.data("keyboard"),keyboard_step:h.data("keyboardStep"),grid:h.data("grid"),grid_margin:h.data("gridMargin"),grid_num:h.data("gridNum"),grid_snap:h.data("gridSnap"),hide_min_max:h.data("hideMinMax"),hide_from_to:h.data("hideFromTo"),prefix:h.data("prefix"),postfix:h.data("postfix"),max_postfix:h.data("maxPostfix"),decorate_both:h.data("decorateBoth"),values_separator:h.data("valuesSeparator"),disable:h.data("disable")},o.values=o.values&&o.values.split(","),e=t.extend(o,e),(h=h.prop("value"))&&(h=h.split(";"),h[0]&&h[0]==+h[0]&&(h[0]=+h[0]),h[1]&&h[1]==+h[1]&&(h[1]=+h[1]),e.values&&e.values.length?(o.from=h[0]&&e.values.indexOf(h[0]),o.to=h[1]&&e.values.indexOf(h[1])):(o.from=h[0]&&+h[0],o.to=h[1]&&+h[1])),this.options=t.extend({type:"single",min:10,max:100,from:null,to:null,step:1,min_interval:0,max_interval:0,drag_interval:!1,values:[],p_values:[],from_fixed:!1,from_min:null,from_max:null,from_shadow:!1,to_fixed:!1,to_min:null,to_max:null,to_shadow:!1,prettify_enabled:!0,prettify_separator:"",prettify:null,force_edges:!1,keyboard:!1,keyboard_step:5,grid:!1,grid_margin:!0,grid_num:4,grid_snap:!1,hide_min_max:!1,hide_from_to:!1,prefix:"",postfix:"",max_postfix:"",decorate_both:!0,values_separator:" â€” ",disable:!1,onStart:null,onChange:null,onFinish:null,onUpdate:null},e),this.validate(),this.result={input:this.$cache.input,slider:null,min:this.options.min,max:this.options.max,from:this.options.from,from_percent:0,from_value:null,to:this.options.to,to_percent:0,to_value:null},this.coords={x_gap:0,x_pointer:0,w_rs:0,w_rs_old:0,w_handle:0,p_gap:0,p_gap_left:0,p_gap_right:0,p_step:0,p_pointer:0,p_handle:0,p_single:0,p_single_real:0,p_from:0,p_from_real:0,p_to:0,p_to_real:0,p_bar_x:0,p_bar_w:0,grid_gap:0,big_num:0,big:[],big_w:[],big_p:[],big_x:[]},this.labels={w_min:0,w_max:0,w_from:0,w_to:0,w_single:0,p_min:0,p_max:0,p_from:0,p_from_left:0,p_to:0,p_to_left:0,p_single:0,p_single_left:0},this.init()};r.prototype={init:function(t){this.coords.p_step=this.options.step/((this.options.max-this.options.min)/100),this.target="base",this.toggleInput(),this.append(),this.setMinMax(),t?(this.force_redraw=!0,this.calc(!0),this.options.onUpdate&&"function"==typeof this.options.onUpdate&&this.options.onUpdate(this.result)):(this.force_redraw=!0,this.calc(!0),this.options.onStart&&"function"==typeof this.options.onStart&&this.options.onStart(this.result)),this.updateScene(),this.raf_id=requestAnimationFrame(this.updateScene.bind(this))},append:function(){this.$cache.input.before('<span class="irs js-irs-'+this.plugin_count+'"></span>'),this.$cache.input.prop("readonly",!0),this.$cache.cont=this.$cache.input.prev(),this.result.slider=this.$cache.cont,this.$cache.cont.html('<span class="irs"><span class="irs-line" tabindex="-1"><span class="irs-line-left"></span><span class="irs-line-mid"></span><span class="irs-line-right"></span></span><span class="irs-min">0</span><span class="irs-max">1</span><span class="irs-from">0</span><span class="irs-to">0</span><span class="irs-single">0</span></span><span class="irs-grid"></span><span class="irs-bar"></span>'),this.$cache.rs=this.$cache.cont.find(".irs"),this.$cache.min=this.$cache.cont.find(".irs-min"),this.$cache.max=this.$cache.cont.find(".irs-max"),this.$cache.from=this.$cache.cont.find(".irs-from"),this.$cache.to=this.$cache.cont.find(".irs-to"),this.$cache.single=this.$cache.cont.find(".irs-single"),this.$cache.bar=this.$cache.cont.find(".irs-bar"),this.$cache.line=this.$cache.cont.find(".irs-line"),this.$cache.grid=this.$cache.cont.find(".irs-grid"),"single"===this.options.type?(this.$cache.cont.append('<span class="irs-bar-edge"></span><span class="irs-shadow shadow-single"></span><span class="irs-slider single"></span>'),this.$cache.s_single=this.$cache.cont.find(".single"),this.$cache.from[0].style.visibility="hidden",this.$cache.to[0].style.visibility="hidden",this.$cache.shad_single=this.$cache.cont.find(".shadow-single")):(this.$cache.cont.append('<span class="irs-shadow shadow-from"></span><span class="irs-shadow shadow-to"></span><span class="irs-slider from"></span><span class="irs-slider to"></span>'),this.$cache.s_from=this.$cache.cont.find(".from"),this.$cache.s_to=this.$cache.cont.find(".to"),this.$cache.shad_from=this.$cache.cont.find(".shadow-from"),this.$cache.shad_to=this.$cache.cont.find(".shadow-to")),this.options.hide_from_to&&(this.$cache.from[0].style.display="none",this.$cache.to[0].style.display="none",this.$cache.single[0].style.display="none"),this.appendGrid(),this.options.disable?(this.appendDisableMask(),this.$cache.input[0].disabled=!0):(this.$cache.cont.removeClass("irs-disabled"),this.$cache.input[0].disabled=!1,this.bindEvents())},appendDisableMask:function(){this.$cache.cont.append('<span class="irs-disable-mask"></span>'),this.$cache.cont.addClass("irs-disabled")},remove:function(){this.$cache.cont.remove(),this.$cache.cont=null,this.$cache.line.off("keydown.irs_"+this.plugin_count),this.$cache.body.off("touchmove.irs_"+this.plugin_count),this.$cache.body.off("mousemove.irs_"+this.plugin_count),this.$cache.win.off("touchend.irs_"+this.plugin_count),this.$cache.win.off("mouseup.irs_"+this.plugin_count),h&&(this.$cache.body.off("mouseup.irs_"+this.plugin_count),this.$cache.body.off("mouseleave.irs_"+this.plugin_count)),this.$cache.grid_labels=[],this.coords.big=[],this.coords.big_w=[],this.coords.big_p=[],this.coords.big_x=[],cancelAnimationFrame(this.raf_id)},bindEvents:function(){this.$cache.body.on("touchmove.irs_"+this.plugin_count,this.pointerMove.bind(this)),this.$cache.body.on("mousemove.irs_"+this.plugin_count,this.pointerMove.bind(this)),this.$cache.win.on("touchend.irs_"+this.plugin_count,this.pointerUp.bind(this)),this.$cache.win.on("mouseup.irs_"+this.plugin_count,this.pointerUp.bind(this)),this.$cache.line.on("touchstart.irs_"+this.plugin_count,this.pointerClick.bind(this,"click")),this.$cache.line.on("mousedown.irs_"+this.plugin_count,this.pointerClick.bind(this,"click")),this.options.drag_interval&&"double"===this.options.type?(this.$cache.bar.on("touchstart.irs_"+this.plugin_count,this.pointerDown.bind(this,"both")),this.$cache.bar.on("mousedown.irs_"+this.plugin_count,this.pointerDown.bind(this,"both"))):(this.$cache.bar.on("touchstart.irs_"+this.plugin_count,this.pointerClick.bind(this,"click")),this.$cache.bar.on("mousedown.irs_"+this.plugin_count,this.pointerClick.bind(this,"click"))),"single"===this.options.type?(this.$cache.s_single.on("touchstart.irs_"+this.plugin_count,this.pointerDown.bind(this,"single")),this.$cache.shad_single.on("touchstart.irs_"+this.plugin_count,this.pointerClick.bind(this,"click")),this.$cache.s_single.on("mousedown.irs_"+this.plugin_count,this.pointerDown.bind(this,"single")),this.$cache.shad_single.on("mousedown.irs_"+this.plugin_count,this.pointerClick.bind(this,"click"))):(this.$cache.s_from.on("touchstart.irs_"+this.plugin_count,this.pointerDown.bind(this,"from")),this.$cache.s_to.on("touchstart.irs_"+this.plugin_count,this.pointerDown.bind(this,"to")),this.$cache.shad_from.on("touchstart.irs_"+this.plugin_count,this.pointerClick.bind(this,"click")),this.$cache.shad_to.on("touchstart.irs_"+this.plugin_count,this.pointerClick.bind(this,"click")),this.$cache.s_from.on("mousedown.irs_"+this.plugin_count,this.pointerDown.bind(this,"from")),this.$cache.s_to.on("mousedown.irs_"+this.plugin_count,this.pointerDown.bind(this,"to")),this.$cache.shad_from.on("mousedown.irs_"+this.plugin_count,this.pointerClick.bind(this,"click")),this.$cache.shad_to.on("mousedown.irs_"+this.plugin_count,this.pointerClick.bind(this,"click"))),this.options.keyboard&&this.$cache.line.on("keydown.irs_"+this.plugin_count,this.key.bind(this,"keyboard")),h&&(this.$cache.body.on("mouseup.irs_"+this.plugin_count,this.pointerUp.bind(this)),this.$cache.body.on("mouseleave.irs_"+this.plugin_count,this.pointerUp.bind(this)))},pointerMove:function(t){this.dragging&&(this.coords.x_pointer=(t.pageX||t.originalEvent.touches&&t.originalEvent.touches[0].pageX)-this.coords.x_gap,this.calc())},pointerUp:function(i){if(this.current_plugin===this.plugin_count&&this.is_active){this.is_active=!1;var s=this.options.onFinish&&"function"==typeof this.options.onFinish;i=t.contains(this.$cache.cont[0],i.target)||this.dragging,s&&i&&this.options.onFinish(this.result),this.$cache.cont.find(".state_hover").removeClass("state_hover"),this.force_redraw=!0,this.dragging=!1,h&&t("*").prop("unselectable",!1)}},pointerDown:function(i,s){s.preventDefault();var o=s.pageX||s.originalEvent.touches&&s.originalEvent.touches[0].pageX;if(2!==s.button){switch(this.current_plugin=this.plugin_count,this.target=i,this.dragging=this.is_active=!0,this.coords.x_gap=this.$cache.rs.offset().left,this.coords.x_pointer=o-this.coords.x_gap,this.calcPointer(),i){case"single":this.coords.p_gap=this.toFixed(this.coords.p_pointer-this.coords.p_single);break;case"from":this.coords.p_gap=this.toFixed(this.coords.p_pointer-this.coords.p_from),this.$cache.s_from.addClass("state_hover"),this.$cache.s_from.addClass("type_last"),this.$cache.s_to.removeClass("type_last");break;case"to":this.coords.p_gap=this.toFixed(this.coords.p_pointer-this.coords.p_to),this.$cache.s_to.addClass("state_hover"),this.$cache.s_to.addClass("type_last"),this.$cache.s_from.removeClass("type_last");break;case"both":this.coords.p_gap_left=this.toFixed(this.coords.p_pointer-this.coords.p_from),this.coords.p_gap_right=this.toFixed(this.coords.p_to-this.coords.p_pointer),this.$cache.s_to.removeClass("type_last"),this.$cache.s_from.removeClass("type_last")}h&&t("*").prop("unselectable",!0),this.$cache.line.trigger("focus")}},pointerClick:function(t,i){i.preventDefault();var s=i.pageX||i.originalEvent.touches&&i.originalEvent.touches[0].pageX;2!==i.button&&(this.current_plugin=this.plugin_count,this.target=t,this.is_click=!0,this.coords.x_gap=this.$cache.rs.offset().left,this.coords.x_pointer=+(s-this.coords.x_gap).toFixed(),this.force_redraw=!0,this.calc(),this.$cache.line.trigger("focus"))},key:function(t,i){if(!(this.current_plugin!==this.plugin_count||i.altKey||i.ctrlKey||i.shiftKey||i.metaKey)){switch(i.which){case 83:case 65:case 40:case 37:i.preventDefault(),this.moveByKey(!1);break;case 87:case 68:case 38:case 39:i.preventDefault(),this.moveByKey(!0)}return!0}},moveByKey:function(t){var i=this.coords.p_pointer,i=t?i+this.options.keyboard_step:i-this.options.keyboard_step;this.coords.x_pointer=this.toFixed(this.coords.w_rs/100*i),this.is_key=!0,this.calc()},setMinMax:function(){this.options&&(this.options.hide_min_max?(this.$cache.min[0].style.display="none",this.$cache.max[0].style.display="none"):(this.options.values.length?(this.$cache.min.html(this.decorate(this.options.p_values[this.options.min])),this.$cache.max.html(this.decorate(this.options.p_values[this.options.max]))):(this.$cache.min.html(this.decorate(this._prettify(this.options.min),this.options.min)),this.$cache.max.html(this.decorate(this._prettify(this.options.max),this.options.max))),this.labels.w_min=this.$cache.min.outerWidth(!1),this.labels.w_max=this.$cache.max.outerWidth(!1)))},calc:function(t){if(this.options&&(this.calc_count++,(10===this.calc_count||t)&&(this.calc_count=0,this.coords.w_rs=this.$cache.rs.outerWidth(!1),this.coords.w_handle="single"===this.options.type?this.$cache.s_single.outerWidth(!1):this.$cache.s_from.outerWidth(!1)),this.coords.w_rs)){this.calcPointer(),this.coords.p_handle=this.toFixed(this.coords.w_handle/this.coords.w_rs*100),t=100-this.coords.p_handle;var i=this.toFixed(this.coords.p_pointer-this.coords.p_gap);switch("click"===this.target&&(i=this.toFixed(this.coords.p_pointer-this.coords.p_handle/2),this.target=this.chooseHandle(i)),0>i?i=0:i>t&&(i=t),this.target){case"base":i=(this.options.max-this.options.min)/100,t=(this.result.from-this.options.min)/i,i=(this.result.to-this.options.min)/i,this.coords.p_single_real=this.toFixed(t),this.coords.p_from_real=this.toFixed(t),this.coords.p_to_real=this.toFixed(i),this.coords.p_single_real=this.checkDiapason(this.coords.p_single_real,this.options.from_min,this.options.from_max),this.coords.p_from_real=this.checkDiapason(this.coords.p_from_real,this.options.from_min,this.options.from_max),this.coords.p_to_real=this.checkDiapason(this.coords.p_to_real,this.options.to_min,this.options.to_max),this.coords.p_single=this.toFixed(t-this.coords.p_handle/100*t),this.coords.p_from=this.toFixed(t-this.coords.p_handle/100*t),this.coords.p_to=this.toFixed(i-this.coords.p_handle/100*i),this.target=null;break;case"single":if(this.options.from_fixed)break;this.coords.p_single_real=this.calcWithStep(i/t*100),this.coords.p_single_real=this.checkDiapason(this.coords.p_single_real,this.options.from_min,this.options.from_max),this.coords.p_single=this.toFixed(this.coords.p_single_real/100*t);break;case"from":if(this.options.from_fixed)break;this.coords.p_from_real=this.calcWithStep(i/t*100),this.coords.p_from_real>this.coords.p_to_real&&(this.coords.p_from_real=this.coords.p_to_real),this.coords.p_from_real=this.checkDiapason(this.coords.p_from_real,this.options.from_min,this.options.from_max),this.coords.p_from_real=this.checkMinInterval(this.coords.p_from_real,this.coords.p_to_real,"from"),this.coords.p_from_real=this.checkMaxInterval(this.coords.p_from_real,this.coords.p_to_real,"from"),this.coords.p_from=this.toFixed(this.coords.p_from_real/100*t);break;case"to":if(this.options.to_fixed)break;this.coords.p_to_real=this.calcWithStep(i/t*100),this.coords.p_to_real<this.coords.p_from_real&&(this.coords.p_to_real=this.coords.p_from_real),this.coords.p_to_real=this.checkDiapason(this.coords.p_to_real,this.options.to_min,this.options.to_max),this.coords.p_to_real=this.checkMinInterval(this.coords.p_to_real,this.coords.p_from_real,"to"),this.coords.p_to_real=this.checkMaxInterval(this.coords.p_to_real,this.coords.p_from_real,"to"),this.coords.p_to=this.toFixed(this.coords.p_to_real/100*t);break;case"both":i=this.toFixed(i+.1*this.coords.p_handle),this.coords.p_from_real=this.calcWithStep((i-this.coords.p_gap_left)/t*100),this.coords.p_from_real=this.checkDiapason(this.coords.p_from_real,this.options.from_min,this.options.from_max),this.coords.p_from_real=this.checkMinInterval(this.coords.p_from_real,this.coords.p_to_real,"from"),this.coords.p_from=this.toFixed(this.coords.p_from_real/100*t),this.coords.p_to_real=this.calcWithStep((i+this.coords.p_gap_right)/t*100),this.coords.p_to_real=this.checkDiapason(this.coords.p_to_real,this.options.to_min,this.options.to_max),this.coords.p_to_real=this.checkMinInterval(this.coords.p_to_real,this.coords.p_from_real,"to"),this.coords.p_to=this.toFixed(this.coords.p_to_real/100*t)}"single"===this.options.type?(this.coords.p_bar_x=this.coords.p_handle/2,this.coords.p_bar_w=this.coords.p_single,this.result.from_percent=this.coords.p_single_real,this.result.from=this.calcReal(this.coords.p_single_real),this.options.values.length&&(this.result.from_value=this.options.values[this.result.from])):(this.coords.p_bar_x=this.toFixed(this.coords.p_from+this.coords.p_handle/2),this.coords.p_bar_w=this.toFixed(this.coords.p_to-this.coords.p_from),this.result.from_percent=this.coords.p_from_real,this.result.from=this.calcReal(this.coords.p_from_real),this.result.to_percent=this.coords.p_to_real,this.result.to=this.calcReal(this.coords.p_to_real),this.options.values.length&&(this.result.from_value=this.options.values[this.result.from],this.result.to_value=this.options.values[this.result.to])),this.calcMinMax(),this.calcLabels()}},calcPointer:function(){this.coords.w_rs?(0>this.coords.x_pointer||isNaN(this.coords.x_pointer)?this.coords.x_pointer=0:this.coords.x_pointer>this.coords.w_rs&&(this.coords.x_pointer=this.coords.w_rs),this.coords.p_pointer=this.toFixed(this.coords.x_pointer/this.coords.w_rs*100)):this.coords.p_pointer=0},chooseHandle:function(t){return"single"===this.options.type?"single":t>=this.coords.p_from_real+(this.coords.p_to_real-this.coords.p_from_real)/2?"to":"from"},calcMinMax:function(){this.coords.w_rs&&(this.labels.p_min=this.labels.w_min/this.coords.w_rs*100,this.labels.p_max=this.labels.w_max/this.coords.w_rs*100)},calcLabels:function(){this.coords.w_rs&&!this.options.hide_from_to&&("single"===this.options.type?(this.labels.w_single=this.$cache.single.outerWidth(!1),this.labels.p_single=this.labels.w_single/this.coords.w_rs*100,this.labels.p_single_left=this.coords.p_single+this.coords.p_handle/2-this.labels.p_single/2):(this.labels.w_from=this.$cache.from.outerWidth(!1),this.labels.p_from=this.labels.w_from/this.coords.w_rs*100,this.labels.p_from_left=this.coords.p_from+this.coords.p_handle/2-this.labels.p_from/2,this.labels.p_from_left=this.toFixed(this.labels.p_from_left),this.labels.p_from_left=this.checkEdges(this.labels.p_from_left,this.labels.p_from),this.labels.w_to=this.$cache.to.outerWidth(!1),this.labels.p_to=this.labels.w_to/this.coords.w_rs*100,this.labels.p_to_left=this.coords.p_to+this.coords.p_handle/2-this.labels.p_to/2,this.labels.p_to_left=this.toFixed(this.labels.p_to_left),this.labels.p_to_left=this.checkEdges(this.labels.p_to_left,this.labels.p_to),this.labels.w_single=this.$cache.single.outerWidth(!1),this.labels.p_single=this.labels.w_single/this.coords.w_rs*100,this.labels.p_single_left=(this.labels.p_from_left+this.labels.p_to_left+this.labels.p_to)/2-this.labels.p_single/2,this.labels.p_single_left=this.toFixed(this.labels.p_single_left)),this.labels.p_single_left=this.checkEdges(this.labels.p_single_left,this.labels.p_single))},updateScene:function(){this.options&&(this.drawHandles(),this.raf_id=requestAnimationFrame(this.updateScene.bind(this)))},drawHandles:function(){this.coords.w_rs=this.$cache.rs.outerWidth(!1),this.coords.w_rs&&(this.coords.w_rs!==this.coords.w_rs_old&&(this.target="base",this.is_resize=!0),(this.coords.w_rs!==this.coords.w_rs_old||this.force_redraw)&&(this.setMinMax(),this.calc(!0),this.drawLabels(),this.options.grid&&(this.calcGridMargin(),this.calcGridLabels()),this.force_redraw=!0,this.coords.w_rs_old=this.coords.w_rs,this.drawShadow()),this.coords.w_rs&&(this.dragging||this.force_redraw||this.is_key)&&((this.old_from!==this.result.from||this.old_to!==this.result.to||this.force_redraw||this.is_key)&&(this.drawLabels(),this.$cache.bar[0].style.left=this.coords.p_bar_x+"%",this.$cache.bar[0].style.width=this.coords.p_bar_w+"%","single"===this.options.type?(this.$cache.s_single[0].style.left=this.coords.p_single+"%",this.$cache.single[0].style.left=this.labels.p_single_left+"%",this.options.values.length?(this.$cache.input.prop("value",this.result.from_value),this.$cache.input.data("from",this.result.from_value)):(this.$cache.input.prop("value",this.result.from),this.$cache.input.data("from",this.result.from))):(this.$cache.s_from[0].style.left=this.coords.p_from+"%",this.$cache.s_to[0].style.left=this.coords.p_to+"%",(this.old_from!==this.result.from||this.force_redraw)&&(this.$cache.from[0].style.left=this.labels.p_from_left+"%"),(this.old_to!==this.result.to||this.force_redraw)&&(this.$cache.to[0].style.left=this.labels.p_to_left+"%"),this.$cache.single[0].style.left=this.labels.p_single_left+"%",this.options.values.length?(this.$cache.input.prop("value",this.result.from_value+";"+this.result.to_value),this.$cache.input.data("from",this.result.from_value),this.$cache.input.data("to",this.result.to_value)):(this.$cache.input.prop("value",this.result.from+";"+this.result.to),this.$cache.input.data("from",this.result.from),this.$cache.input.data("to",this.result.to))),this.old_from===this.result.from&&this.old_to===this.result.to||this.is_start||this.$cache.input.trigger("change"),this.old_from=this.result.from,this.old_to=this.result.to,!this.options.onChange||"function"!=typeof this.options.onChange||this.is_resize||this.is_update||this.is_start||this.options.onChange(this.result),this.options.onFinish&&"function"==typeof this.options.onFinish&&(this.is_key||this.is_click)&&this.options.onFinish(this.result),this.is_resize=this.is_update=!1),this.force_redraw=this.is_click=this.is_key=this.is_start=!1))},drawLabels:function(){if(this.options){var t,i=this.options.values.length,s=this.options.p_values;if(!this.options.hide_from_to)if("single"===this.options.type)i=i?this.decorate(s[this.result.from]):this.decorate(this._prettify(this.result.from),this.result.from),this.$cache.single.html(i),this.calcLabels(),this.$cache.min[0].style.visibility=this.labels.p_single_left<this.labels.p_min+1?"hidden":"visible",this.$cache.max[0].style.visibility=this.labels.p_single_left+this.labels.p_single>100-this.labels.p_max-1?"hidden":"visible";else{i?(this.options.decorate_both?(i=this.decorate(s[this.result.from]),i+=this.options.values_separator,i+=this.decorate(s[this.result.to])):i=this.decorate(s[this.result.from]+this.options.values_separator+s[this.result.to]),t=this.decorate(s[this.result.from]),s=this.decorate(s[this.result.to])):(this.options.decorate_both?(i=this.decorate(this._prettify(this.result.from)),i+=this.options.values_separator,i+=this.decorate(this._prettify(this.result.to))):i=this.decorate(this._prettify(this.result.from)+this.options.values_separator+this._prettify(this.result.to),this.result.from),t=this.decorate(this._prettify(this.result.from),this.result.from),s=this.decorate(this._prettify(this.result.to),this.result.to)),this.$cache.single.html(i),this.$cache.from.html(t),this.$cache.to.html(s),this.calcLabels(),s=Math.min(this.labels.p_single_left,this.labels.p_from_left),i=this.labels.p_single_left+this.labels.p_single,t=this.labels.p_to_left+this.labels.p_to;var o=Math.max(i,t);this.labels.p_from_left+this.labels.p_from>=this.labels.p_to_left?(this.$cache.from[0].style.visibility="hidden",this.$cache.to[0].style.visibility="hidden",this.$cache.single[0].style.visibility="visible",this.result.from===this.result.to?(this.$cache.from[0].style.visibility="visible",this.$cache.single[0].style.visibility="hidden",o=t):(this.$cache.from[0].style.visibility="hidden",this.$cache.single[0].style.visibility="visible",o=Math.max(i,t))):(this.$cache.from[0].style.visibility="visible",this.$cache.to[0].style.visibility="visible",this.$cache.single[0].style.visibility="hidden"),this.$cache.min[0].style.visibility=s<this.labels.p_min+1?"hidden":"visible",this.$cache.max[0].style.visibility=o>100-this.labels.p_max-1?"hidden":"visible"}}},drawShadow:function(){var t=this.options,i=this.$cache,s="number"==typeof t.from_min&&!isNaN(t.from_min),o="number"==typeof t.from_max&&!isNaN(t.from_max),e="number"==typeof t.to_min&&!isNaN(t.to_min),h="number"==typeof t.to_max&&!isNaN(t.to_max);"single"===t.type?t.from_shadow&&(s||o)?(s=this.calcPercent(t.from_min||t.min),o=this.calcPercent(t.from_max||t.max)-s,s=this.toFixed(s-this.coords.p_handle/100*s),o=this.toFixed(o-this.coords.p_handle/100*o),s+=this.coords.p_handle/2,i.shad_single[0].style.display="block",i.shad_single[0].style.left=s+"%",i.shad_single[0].style.width=o+"%"):i.shad_single[0].style.display="none":(t.from_shadow&&(s||o)?(s=this.calcPercent(t.from_min||t.min),o=this.calcPercent(t.from_max||t.max)-s,s=this.toFixed(s-this.coords.p_handle/100*s),o=this.toFixed(o-this.coords.p_handle/100*o),s+=this.coords.p_handle/2,i.shad_from[0].style.display="block",i.shad_from[0].style.left=s+"%",i.shad_from[0].style.width=o+"%"):i.shad_from[0].style.display="none",t.to_shadow&&(e||h)?(e=this.calcPercent(t.to_min||t.min),t=this.calcPercent(t.to_max||t.max)-e,e=this.toFixed(e-this.coords.p_handle/100*e),t=this.toFixed(t-this.coords.p_handle/100*t),e+=this.coords.p_handle/2,i.shad_to[0].style.display="block",i.shad_to[0].style.left=e+"%",i.shad_to[0].style.width=t+"%"):i.shad_to[0].style.display="none")},toggleInput:function(){this.$cache.input.toggleClass("irs-hidden-input")},calcPercent:function(t){return this.toFixed((t-this.options.min)/((this.options.max-this.options.min)/100))},calcReal:function(t){var i=this.options.min,s=this.options.max,o=0;return 0>i&&(o=Math.abs(i),i+=o,s+=o),t=(s-i)/100*t+i,(i=this.options.step.toString().split(".")[1])?t=+t.toFixed(i.length):(t/=this.options.step,t*=this.options.step,t=+t.toFixed(0)),o&&(t-=o),t<this.options.min?t=this.options.min:t>this.options.max&&(t=this.options.max),i?+t.toFixed(i.length):this.toFixed(t)},calcWithStep:function(t){var i=Math.round(t/this.coords.p_step)*this.coords.p_step;return i>100&&(i=100),100===t&&(i=100),this.toFixed(i)},checkMinInterval:function(t,i,s){var o=this.options;return o.min_interval?(t=this.calcReal(t),i=this.calcReal(i),"from"===s?i-t<o.min_interval&&(t=i-o.min_interval):t-i<o.min_interval&&(t=i+o.min_interval),this.calcPercent(t)):t},checkMaxInterval:function(t,i,s){var o=this.options;return o.max_interval?(t=this.calcReal(t),i=this.calcReal(i),"from"===s?i-t>o.max_interval&&(t=i-o.max_interval):t-i>o.max_interval&&(t=i+o.max_interval),this.calcPercent(t)):t},checkDiapason:function(t,i,s){t=this.calcReal(t);var o=this.options;return i&&"number"==typeof i||(i=o.min),s&&"number"==typeof s||(s=o.max),i>t&&(t=i),t>s&&(t=s),this.calcPercent(t)},toFixed:function(t){return t=t.toFixed(5),+t},_prettify:function(t){return this.options.prettify_enabled?this.options.prettify&&"function"==typeof this.options.prettify?this.options.prettify(t):this.prettify(t):t},prettify:function(t){return t.toString().replace(/(\d{1,3}(?=(?:\d\d\d)+(?!\d)))/g,"$1"+this.options.prettify_separator)},checkEdges:function(t,i){return this.options.force_edges?(0>t?t=0:t>100-i&&(t=100-i),this.toFixed(t)):this.toFixed(t)},validate:function(){var t,i,s=this.options,o=this.result,e=s.values,h=e.length;if("string"==typeof s.min&&(s.min=+s.min),"string"==typeof s.max&&(s.max=+s.max),"string"==typeof s.from&&(s.from=+s.from),"string"==typeof s.to&&(s.to=+s.to),"string"==typeof s.step&&(s.step=+s.step),"string"==typeof s.from_min&&(s.from_min=+s.from_min),"string"==typeof s.from_max&&(s.from_max=+s.from_max),"string"==typeof s.to_min&&(s.to_min=+s.to_min),"string"==typeof s.to_max&&(s.to_max=+s.to_max),"string"==typeof s.keyboard_step&&(s.keyboard_step=+s.keyboard_step),"string"==typeof s.grid_num&&(s.grid_num=+s.grid_num),s.max<=s.min&&(s.max=s.min?2*s.min:s.min+1,s.step=1),h)for(s.p_values=[],s.min=0,s.max=h-1,s.step=1,s.grid_num=s.max,s.grid_snap=!0,i=0;h>i;i++)t=+e[i],isNaN(t)?t=e[i]:(e[i]=t,t=this._prettify(t)),s.p_values.push(t);("number"!=typeof s.from||isNaN(s.from))&&(s.from=s.min),("number"!=typeof s.to||isNaN(s.from))&&(s.to=s.max),(s.from<s.min||s.from>s.max)&&(s.from=s.min),(s.to>s.max||s.to<s.min)&&(s.to=s.max),"double"===s.type&&s.from>s.to&&(s.from=s.to),("number"!=typeof s.step||isNaN(s.step)||!s.step||0>s.step)&&(s.step=1),("number"!=typeof s.keyboard_step||isNaN(s.keyboard_step)||!s.keyboard_step||0>s.keyboard_step)&&(s.keyboard_step=5),s.from_min&&s.from<s.from_min&&(s.from=s.from_min),s.from_max&&s.from>s.from_max&&(s.from=s.from_max),s.to_min&&s.to<s.to_min&&(s.to=s.to_min),s.to_max&&s.from>s.to_max&&(s.to=s.to_max),o&&(o.min!==s.min&&(o.min=s.min),o.max!==s.max&&(o.max=s.max),(o.from<o.min||o.from>o.max)&&(o.from=s.from),(o.to<o.min||o.to>o.max)&&(o.to=s.to)),("number"!=typeof s.min_interval||isNaN(s.min_interval)||!s.min_interval||0>s.min_interval)&&(s.min_interval=0),("number"!=typeof s.max_interval||isNaN(s.max_interval)||!s.max_interval||0>s.max_interval)&&(s.max_interval=0),s.min_interval&&s.min_interval>s.max-s.min&&(s.min_interval=s.max-s.min),s.max_interval&&s.max_interval>s.max-s.min&&(s.max_interval=s.max-s.min)},decorate:function(t,i){var s="",o=this.options;return o.prefix&&(s+=o.prefix),s+=t,o.max_postfix&&(o.values.length&&t===o.p_values[o.max]?(s+=o.max_postfix,o.postfix&&(s+="")):i===o.max&&(s+=o.max_postfix,o.postfix&&(s+=""))),o.postfix&&(s+=o.postfix),s},updateFrom:function(){this.result.from=this.options.from,this.result.from_percent=this.calcPercent(this.result.from),this.options.values&&(this.result.from_value=this.options.values[this.result.from])},updateTo:function(){this.result.to=this.options.to,this.result.to_percent=this.calcPercent(this.result.to),this.options.values&&(this.result.to_value=this.options.values[this.result.to])},updateResult:function(){this.result.min=this.options.min,this.result.max=this.options.max,this.updateFrom(),this.updateTo()},appendGrid:function(){if(this.options.grid){var t,i,s=this.options;t=s.max-s.min;var o,e,h=s.grid_num,r=0,a=0,n=4,c=0,l="";for(this.calcGridMargin(),s.grid_snap?(h=t/s.step,r=this.toFixed(s.step/(t/100))):r=this.toFixed(100/h),h>4&&(n=3),h>7&&(n=2),h>14&&(n=1),h>28&&(n=0),t=0;h+1>t;t++){for(o=n,a=this.toFixed(r*t),a>100&&(a=100,o-=2,0>o&&(o=0)),this.coords.big[t]=a,e=(a-r*(t-1))/(o+1),i=1;o>=i&&0!==a;i++)c=this.toFixed(a-e*i),l+='<span class="irs-grid-pol small" style="left: '+c+'%"></span>';l+='<span class="irs-grid-pol" style="left: '+a+'%"></span>',c=this.calcReal(a),c=s.values.length?s.p_values[c]:this._prettify(c),l+='<span class="irs-grid-text js-grid-text-'+t+'" style="left: '+a+'%">'+c+"</span>"}this.coords.big_num=Math.ceil(h+1),this.$cache.cont.addClass("irs-with-grid"),this.$cache.grid.html(l),this.cacheGridLabels()}},cacheGridLabels:function(){var t,i,s=this.coords.big_num;for(i=0;s>i;i++)t=this.$cache.grid.find(".js-grid-text-"+i),this.$cache.grid_labels.push(t);this.calcGridLabels()},calcGridLabels:function(){var t,i;i=[];var s=[],o=this.coords.big_num;for(t=0;o>t;t++)this.coords.big_w[t]=this.$cache.grid_labels[t].outerWidth(!1),this.coords.big_p[t]=this.toFixed(this.coords.big_w[t]/this.coords.w_rs*100),this.coords.big_x[t]=this.toFixed(this.coords.big_p[t]/2),i[t]=this.toFixed(this.coords.big[t]-this.coords.big_x[t]),s[t]=this.toFixed(i[t]+this.coords.big_p[t]);for(this.options.force_edges&&(i[0]<this.coords.grid_gap&&(i[0]=this.coords.grid_gap,s[0]=this.toFixed(i[0]+this.coords.big_p[0]),this.coords.big_x[0]=this.coords.grid_gap),s[o-1]>100-this.coords.grid_gap&&(s[o-1]=100-this.coords.grid_gap,i[o-1]=this.toFixed(s[o-1]-this.coords.big_p[o-1]),this.coords.big_x[o-1]=this.toFixed(this.coords.big_p[o-1]-this.coords.grid_gap))),this.calcGridCollision(2,i,s),this.calcGridCollision(4,i,s),t=0;o>t;t++)i=this.$cache.grid_labels[t][0],i.style.marginLeft=-this.coords.big_x[t]+"%"
},calcGridCollision:function(t,i,s){var o,e,h,r=this.coords.big_num;for(o=0;r>o&&(e=o+t/2,!(e>=r));o+=t)h=this.$cache.grid_labels[e][0],h.style.visibility=s[o]<=i[e]?"visible":"hidden"},calcGridMargin:function(){this.options.grid_margin&&(this.coords.w_rs=this.$cache.rs.outerWidth(!1),this.coords.w_rs&&(this.coords.w_handle="single"===this.options.type?this.$cache.s_single.outerWidth(!1):this.$cache.s_from.outerWidth(!1),this.coords.p_handle=this.toFixed(this.coords.w_handle/this.coords.w_rs*100),this.coords.grid_gap=this.toFixed(this.coords.p_handle/2-.1),this.$cache.grid[0].style.width=this.toFixed(100-this.coords.p_handle)+"%",this.$cache.grid[0].style.left=this.coords.grid_gap+"%"))},update:function(i){this.input&&(this.is_update=!0,this.options.from=this.result.from,this.options.to=this.result.to,this.options=t.extend(this.options,i),this.validate(),this.updateResult(i),this.toggleInput(),this.remove(),this.init(!0))},reset:function(){this.input&&(this.updateResult(),this.update())},destroy:function(){this.input&&(this.toggleInput(),this.$cache.input.prop("readonly",!1),t.data(this.input,"ionRangeSlider",null),this.remove(),this.options=this.input=null)}},t.fn.ionRangeSlider=function(i){return this.each(function(){t.data(this,"ionRangeSlider")||t.data(this,"ionRangeSlider",new r(this,i,e++))})},function(){for(var t=0,i=["ms","moz","webkit","o"],o=0;o<i.length&&!s.requestAnimationFrame;++o)s.requestAnimationFrame=s[i[o]+"RequestAnimationFrame"],s.cancelAnimationFrame=s[i[o]+"CancelAnimationFrame"]||s[i[o]+"CancelRequestAnimationFrame"];s.requestAnimationFrame||(s.requestAnimationFrame=function(i){var o=(new Date).getTime(),e=Math.max(0,16-(o-t)),h=s.setTimeout(function(){i(o+e)},e);return t=o+e,h}),s.cancelAnimationFrame||(s.cancelAnimationFrame=function(t){clearTimeout(t)})}()}(jQuery,document,window,navigator);
var countDown = {
  timeOut:null,
  displayItem:null,
  min:'',
  sec:'',
  first:true,
  startTimer:function(duration, display,cb){
    var timer = duration, minutes, seconds, that = this;
	if(timer<0){
		timer = 0;
	}	
    that.generateCountDown();
    if(that.timeOut==null){
      this.timeOut = setInterval(function () {
        minutes = parseInt(timer / 60, 10);
        seconds = parseInt(timer % 60, 10);
        minutes = minutes < 10 ? "0" + minutes : minutes;
        seconds = seconds < 10 ? "0" + seconds : seconds;
        that.compareTime(that.min,minutes,'countMinutes');
        that.compareTime(that.sec,seconds,'countSeconds');
        that.min = minutes;
        that.sec = seconds;
        display.textContent = minutes + ":" + seconds;
        if(timer==0){
        	that.stopTimer();
          if(typeof cb==='function'){
          	return cb();
          }
        }
        if (--timer < 0) {
          timer = duration;
        }
      }, 1000);
    }
  },
  stopTimer:function() {
    clearInterval(this.timeOut);
    this.timeOut = null;
    this.min = '';
    this.sec = '';
  },
  compareTime:function(arg1, time, className){
    var that = this;    
    var con1 = arg1.toString().split('') || time.toString().split('');
    var con2 = time.toString().split('');
    var result = [];
    if(arg1===''){
      result.push([0,con2[0]]);
      result.push([1,con2[1]]);
      var elm = that.displayItem.find('.'+className);
      result.map(function(k,v){
        var d = $(elm.find('.digit')[k[0]]);
        that.animateElm(d,k[1]);        
      });
    }
    result = [];
    if(con1[0]!=con2[0]){
      result.push([0,con2[0]]);
    }
    if(con1[1]!=con2[1]){
      result.push([1,con2[1]]);
    }
    var elm = that.displayItem.find('.'+className);
    result.map(function(k,v){
      var d = $(elm.find('.digit')[k[0]]);
      if (d.is(":animated")) return !1;
      if (d.text() == k[1]) return !1;
      that.animateElm(d,k[1]);        
    });
  },
  generateCountDown:function(){
    var that = this;
    that.displayItem.empty();
    $.each(["Minutes", "Seconds"], function(k,v) {
      $('<span class="count' + v + '">').html(
        '<span class="position"><span class="digit static">0</span></span>'+
        '<span class="position"><span class="digit static">0</span>'+
        '</span>').appendTo(that.displayItem);
      "Seconds" != v && that.displayItem.append('<span class="countDiv countDiv' + k + '"></span>');
    });
  },
  animateElm:function(elm,text){
    elm.css({
      top: "2.5em",
      opacity: 0
    });
    elm.animate({
      top: "-2.1em",
      opacity: 0
    },'fast',function(){
      elm.text(text).animate({
        top: 0,
        opacity: 1
      },'fast');    
    })
  }
};

/*$('body').on('click','#stopTimer',function(){  
  countDown.stopTimer();
});
$('body').on('click','#startTimer',function(){
  var fiveMinutes = 10, display = document.querySelector('#time');
  countDown.displayItem = $('#new');
  countDown.startTimer(fiveMinutes, display,function(){
  	alert('completed!');
  });
});*/
var router;
var globalData = {};
var reloadCon = false;
var routing = function () {
  router = new Navigo(null, false);
  router.on({	
  'cars/result*': function() {
		dynamicJsCssLoading('landing.css','/common/themes/v2/css/results.css','css');
		dynamicJsCssLoading('reviewPage'+(i18n.options.lng == "en" ?"":'-'+i18n.options.lng)+'.css','/common/themes/v2/css/results'+(i18n.options.lng == "en"?"":'-'+i18n.options.lng)+'.css','css');
		carsResultRender(window.location.href);
	},
	'cars/review*': function() {
		dynamicJsCssLoading('landing.css','/common/themes/v2/css/reviewPage.css','css');
		dynamicJsCssLoading('results'+(i18n.options.lng == "en" ?"":'-'+i18n.options.lng)+'.css','/common/themes/v2/css/reviewPage'+(i18n.options.lng == "en"?"":'-'+i18n.options.lng)+'.css','css');
		dynamicJsCssLoading('confirmation'+(i18n.options.lng == "en" ?"":'-'+i18n.options.lng)+'.css','/common/themes/v2/css/reviewPage'+(i18n.options.lng == "en"?"":'-'+i18n.options.lng)+'.css','css');
		if(reloadCon===true){
			carsBookingReviewRender(window.location.href);
		}
		// Qitaf config
		var configuration = {
			mobileElm:'QITAF_MOBILE_NO',
			genOtpBtn:'QITAF_GRNOTP_BTN',
			pid:'CTDP',
			product:'CTDP',
			amount:'QITAF_AMOUNT_TO_BE_REDEEM',
			pin:'QITAF_PIN_NO',
			redeemPointBtn:'QITAF_REDEEM_POINT_BTN',
			earnGenOtpBtn:'QITAF_EARN_GRNOTP_BTN',
			earnMobileNum:'QITAF_EARN_MOBILE_NO',
			earnMessage:'earnMessage',
			optForm:'optForm',
			optPhone:'optPhone',
      optEPhone:'optEPhone',
			messageContainer:'errorMessage',
			redeemContainer:'redeemErrorMessage',
			successClass:'validate_success_message',
			errorClass:'validate_error_message',
		};
		QitafService.init(configuration);
	},
	'cars/confirmation*': function() {
		dynamicJsCssLoading('landing.css','/common/themes/v2/css/confirmation.css','css');
		dynamicJsCssLoading('reviewPage'+(i18n.options.lng == "en" ?"":'-'+i18n.options.lng)+'.css','/common/themes/v2/css/confirmation'+(i18n.options.lng == "en"?"":'-'+i18n.options.lng)+'.css','css');
		if(reloadCon===true){
			carsConfirmationRender(window.location.href);
		}
	},
	'cars/printConfirmation*': function() {
		carsPrintConfirmationRender(window.location.href);
	},
  'transfer/review*': function(){
    var configuration = {
      mobileElm:'QITAF_MOBILE_NO', 
      genOtpBtn:'QITAF_GRNOTP_BTN',
      pid:'TTDP',
      product:'TTDP',
      amount:'QITAF_AMOUNT_TO_BE_REDEEM',
      pin:'QITAF_PIN_NO',
      redeemPointBtn:'QITAF_REDEEM_POINT_BTN',
      reGenerateOTP:'QITAF_RE_GENERATE_OTP_BTN',
      earnGenOtpBtn:'QITAF_EARN_GRNOTP_BTN',
	  earnMobileNum:'QITAF_EARN_MOBILE_NO',
	  earnMessage:'earnMessage',
      optForm:'optForm',
      optPhone:'optPhone',
      optEPhone:'optEPhone',
      messageContainer:'errorMessage',
      redeemContainer:'redeemMessage',
      successClass:'validate_success_message',
      errorClass:'validate_error_message',
    }; 
    QitafService.init(configuration);
    //offerWidgetFlyin.init();
  },
    'flight/result*': function () {
    	dynamicJsCssLoading('landing.css','/common/themes/v2/css/results.css','css');
    	dynamicJsCssLoading('tistahel.css','/common/themes/v2/css/results.css','css');
    	dynamicJsCssLoading('landing-ar.css','/common/themes/v2/css/results-ar.css','css');
    	dynamicJsCssLoading('tistahel-ar.css','/common/themes/v2/css/results-ar.css','css');
    	dynamicJsCssLoading('dynamic-css','/common/themes/v2/css/results'+(i18n.options.lng == "en" ?"":'-'+i18n.options.lng)+'.css','style');
    	dynamicJsCssLoading('reviewPage.css','/common/themes/v2/css/results.css','css');		
    	dynamicJsCssLoading('reviewPage-ar.css','/common/themes/v2/css/results-ar.css','css');		
		flyinCountDown.destroyCountDown();
    	resultRender(window.location.href);
		//For offer Banner
		offerWidgetFlyin.init();
		if(flightComboSerVar){		// deactivate fareCombo && re-initialize data
			flightComboSerVar.isActive=false; 
			flightSerVar.fareComboData = {};
		}
	},
	
    '/flight/review*': function () {
    	if(reloadCon===true){
			flyinCountDown.destroyCountDown();
			if(typeof flightComboSerVar!="undefined" && flightComboSerVar.isActive===true){
				flightSerVar.fareComboSelected=true;
				$('.fcTimeoutPopUp').html('');
				fcReviewRender(window.location.href);    
			}else{
				$('#_bodyContainer').empty();
				dynamicJsCssLoading('results'+(i18n.options.lng == "en" ?"":'-'+i18n.options.lng)+'.css','/common/themes/v2/css/reviewPage'+(i18n.options.lng == "en"?"":'-'+i18n.options.lng)+'.css','css',function(){
					reviewRender();
				});
			}		
    	}		
    	
    	var configuration = {
    			  mobileElm:'QITAF_MOBILE_NO', 
    			  genOtpBtn:'QITAF_GRNOTP_BTN',
    			  pid:'FTDP',
    			  product:'FTDP',
    			  amount:'QITAF_AMOUNT_TO_BE_REDEEM',
    			  pin:'QITAF_PIN_NO',
    			  redeemPointBtn:'QITAF_REDEEM_POINT_BTN',
    			  reGenerateOTP:'QITAF_RE_GENERATE_OTP_BTN',
    			  earnGenOtpBtn:'QITAF_EARN_GRNOTP_BTN',
    			  earnMobileNum:'QITAF_EARN_MOBILE_NO',
    			  earnMessage:'earnMessage',
    			  optForm:'optForm',
    			  optPhone:'optPhone',
            optEPhone:'optEPhone',
    			  messageContainer:'errorMessage',
    			  redeemContainer:'redeemMessage',
    			  successClass:'validate_success_message',
    			  errorClass:'validate_error_message',
    	}; 
    			QitafService.init(configuration);
    			offerWidgetFlyin.init();
    },
    
    '/flight/confirmation*': function () {
        	if(reloadCon===true){
        		confirmationRender(window.location.href);
        	}
        	offerWidgetFlyin.init();
      },

      '/fph/search*&page=flights*':function(){
      dynamicJsCssLoading('landing.css','/common/themes/v2/css/results.css','css');
      dynamicJsCssLoading('dynamic-css','/common/themes/v2/css/results'+(i18n.options.lng == "en" ?"":'-'+i18n.options.lng)+'.css','style');
      fphFlightsRender();
      offerWidgetFlyin.init();
     }, 
      
     '/fph/search*':function(){
    	dynamicJsCssLoading('landing.css','/common/themes/v2/css/results.css','css');
    	dynamicJsCssLoading('dynamic-css','/common/themes/v2/css/results'+(i18n.options.lng == "en" ?"":'-'+i18n.options.lng)+'.css','style');
    	fphResultrender(window.location.href);
    	offerWidgetFlyin.init();
     },    
     
     '/fph/review*': function () { 
    	 if(reloadCon===true){
     		reviewRender(window.location.href);
     	}
 		var configuration = {
 		  mobileElm:'QITAF_MOBILE_NO', 
 		  genOtpBtn:'QITAF_GRNOTP_BTN',
 		  pid:'FPHTDP',
 		  product:'FPHTDP',
 		  amount:'QITAF_AMOUNT_TO_BE_REDEEM',
 		  pin:'QITAF_PIN_NO',
 		  redeemPointBtn:'QITAF_REDEEM_POINT_BTN',
 		  reGenerateOTP:'QITAF_RE_GENERATE_OTP_BTN',
 		  earnGenOtpBtn:'QITAF_EARN_GRNOTP_BTN',
		  earnMobileNum:'QITAF_EARN_MOBILE_NO',
		  earnMessage:'earnMessage',
 		  optForm:'optForm',
 		  optPhone:'optPhone',
      optEPhone:'optEPhone',
 		  messageContainer:'errorMessage',
 		  redeemContainer:'redeemMessage',
 		  successClass:'validate_success_message',
 		  errorClass:'validate_error_message',
 		}; 
 		QitafService.init(configuration); 		
     },
     
     'payment/expreessCheckOut*':function () {     	
  		var configuration = {
  	 		  mobileElm:'QITAF_MOBILE_NO', 
  	 		  genOtpBtn:'QITAF_GRNOTP_BTN',
  	 		  pid:'CPP',
  	 		  product:'CPP',
  	 		  amount:'QITAF_AMOUNT_TO_BE_REDEEM',
  	 		  pin:'QITAF_PIN_NO',
  	 		  redeemPointBtn:'QITAF_REDEEM_POINT_BTN',
  	 		  reGenerateOTP:'QITAF_RE_GENERATE_OTP_BTN',
  	 		  earnGenOtpBtn:'QITAF_EARN_GRNOTP_BTN',
  	 		  earnMobileNum:'QITAF_EARN_MOBILE_NO',
  	 		  earnMessage:'earnMessage',
  	 		  optForm:'optForm',
  	 		  optPhone:'optPhone',
          optEPhone:'optEPhone',
  	 		  messageContainer:'errorMessage',
  	 		  redeemContainer:'redeemMessage',
  	 		  successClass:'validate_success_message',
  	 		  errorClass:'validate_error_message',
  	 		}; 
  	 		QitafService.init(configuration); 		
  	     },
  	     
  	   'payment/mobilePayment*':function () {     	
  	  		var configuration = {
  	  	 		  mobileElm:'QITAF_MOBILE_NO', 
  	  	 		  genOtpBtn:'QITAF_GRNOTP_BTN',
  	  	 		  pid:'CPP',
  	  	 		  product:'CPP',
  	  	 		  amount:'QITAF_AMOUNT_TO_BE_REDEEM',
  	  	 		  pin:'QITAF_PIN_NO',
  	  	 		  redeemPointBtn:'QITAF_REDEEM_POINT_BTN',
  	  	 		  reGenerateOTP:'QITAF_RE_GENERATE_OTP_BTN',
  	  	 		  earnGenOtpBtn:'QITAF_EARN_GRNOTP_BTN',
  	  	 		  earnMobileNum:'QITAF_EARN_MOBILE_NO',
  	  	 		  earnMessage:'earnMessage',
  	  	 		  optForm:'optForm',
  	  	 		  optPhone:'optPhone',
              optEPhone:'optEPhone',
  	  	 		  messageContainer:'errorMessage',
  	  	 		  redeemContainer:'redeemMessage',
  	  	 		  successClass:'validate_success_message',
  	  	 		  errorClass:'validate_error_message',
  	  	 		}; 
  	  	 		QitafService.init(configuration); 		
  	  	     },
  	  	 'payment/mobileAppPayment*':function () {     	
   	  		var configuration = {
   	  	 		  mobileElm:'QITAF_MOBILE_NO', 
   	  	 		  genOtpBtn:'QITAF_GRNOTP_BTN',
   	  	 		  pid:'CPP',
   	  	 		  product:'CPP',
   	  	 		  amount:'QITAF_AMOUNT_TO_BE_REDEEM',
   	  	 		  pin:'QITAF_PIN_NO',
   	  	 		  redeemPointBtn:'QITAF_REDEEM_POINT_BTN',
   	  	 		  reGenerateOTP:'QITAF_RE_GENERATE_OTP_BTN',
   	  	 		  earnGenOtpBtn:'QITAF_EARN_GRNOTP_BTN',
   	  	 		  earnMobileNum:'QITAF_EARN_MOBILE_NO',
   	  	 		  earnMessage:'earnMessage',
   	  	 		  optForm:'optForm',
   	  	 		  optPhone:'optPhone',
              optEPhone:'optEPhone',
   	  	 		  messageContainer:'errorMessage',
   	  	 		  redeemContainer:'redeemMessage',
   	  	 		  successClass:'validate_success_message',
   	  	 		  errorClass:'validate_error_message',
   	  	 		}; 
   	  	 		QitafService.init(configuration); 		
   	  	     },

	'/hotel/searchHotels*': function () {
		dynamicJsCssLoading('bbcStyle.css','/common/themes/v2/css/results.css','css');
		dynamicJsCssLoading('dynamic-css','/common/themes/v2/css/results'+(i18n.options.lng == "en" ?"":'-'+i18n.options.lng)+'.css','style');
		hotelResultsRender(window.location.href);
		offerWidgetFlyin.init();
    },
    'searchHotels*': function () {		
		hotelResultsRender(window.location.href);
		offerWidgetFlyin.init();
		
    },
    '/hotel/hotelGuestDetails*': function () {    	
		var configuration = {
		  mobileElm:'QITAF_MOBILE_NO', 
		  genOtpBtn:'QITAF_GRNOTP_BTN',
		  pid:'HTDP',
		  product:'HTDP',
		  amount:'QITAF_AMOUNT_TO_BE_REDEEM',
		  pin:'QITAF_PIN_NO',
		  redeemPointBtn:'QITAF_REDEEM_POINT_BTN',
		  reGenerateOTP:'QITAF_RE_GENERATE_OTP_BTN',
		  earnGenOtpBtn:'QITAF_EARN_GRNOTP_BTN',
		  earnMobileNum:'QITAF_EARN_MOBILE_NO',
		  earnMessage:'earnMessage',
		  optForm:'optForm',
		  optPhone:'optPhone',
      optEPhone:'optEPhone',
		  messageContainer:'errorMessage',
		  redeemContainer:'redeemMessage',
		  successClass:'validate_success_message',
		  errorClass:'validate_error_message',
		}; 
		QitafService.init(configuration);
		offerWidgetFlyin.init();
		
    },
    '/review*': function () {
    	if(reloadCon===true){
			dynamicJsCssLoading('results.css','/common/themes/v2/css/reviewPage.css','css');		
			dynamicJsCssLoading('results-ar.css','/common/themes/v2/css/reviewPage-ar.css','css');
    		reviewRender(window.location.href);
    		offerWidgetFlyin.init();
    	}
		
		
    },

    '/fcReview*': function () {
		console.log('routes.js /fcReview*');
		
		flightSerVar.fareComboSelected=true;
    	if(reloadCon===true){
    		fcReviewRender(window.location.href);
    	}
    	offerWidgetFlyin.init();
		
		
    },
    '/result*': function() {

		console.log('car result.......');

		dynamicJsCssLoading('landing.css','/common/themes/v2/css/results.css','css');
		dynamicJsCssLoading('reviewPage.css','/common/themes/v2/css/results.css','css');
		carsResultRender(window.location.href);
	},
	'payment/retry*':function () {  
		
  		var configuration = {	  	 		
  	 		  pid:'PRP',	  	 		
  	 		  reversePointBtn:'QITAF_REVERSE_POINT_BTN',	  	 		  
  	 	};   		
  	 	QitafService.initReversal(configuration); 		
	 },
	 'payment/payfortRetry*':function () {  
			
	  		var configuration = {	  	 		
	  	 		  pid:'PRP',	  	 		
	  	 		  reversePointBtn:'QITAF_REVERSE_POINT_BTN',	  	 		  
	  	 	};   		
	  	 	QitafService.initReversal(configuration); 		
	},
	 
    '/': function () {
		if($('.modifySearch').is(':visible')){
			window.location.href = "/";
		}
	}
  });
};
var loadTemplate = function(templateID,data,toUpdate,template){
	var result;
	if(typeof template=="undefined" || template==""){
		template = $(this.dynamicTemplate);
	}else{
		template = $(template);
	}
	//Load the template
	template = unescape(tmpl(template.filter('#'+templateID).html(),data));
	
	//Fix for Unicode Escaped Character for Handling Unicode Arabic String
	var r = /\\u([\d\w]{4})/gi;
	template = template.replace(r, function (match, grp) {
		return String.fromCharCode(parseInt(grp, 16)); } );
	template = unescape(template);	
	
	//Select result container
	if(typeof toUpdate==='object'){			
		result = toUpdate;
	}else{			
		result = $('#'+toUpdate);
	}
	//Empty the result container
	result.empty();
	//Load data to the result container
	result.append(template);
}
var init = function (){	
	if(typeof router!=null){
		routing();
	}
};

function dynamicJsCssLoading(oldFile, newFile, fileType,next){
	 var targetElement=(fileType=="js")? "script" : (fileType=="css")? "link" : (fileType == "style")? "style":"none"; //determine element type to create nodelist using
	    var targetAttr=(fileType=="js")? "src" : (fileType=="css")? "href" : (fileType=="style")? "id" : "none"; //determine corresponding attribute to test for
    var elements=document.getElementsByTagName(targetElement);
    for (var i=elements.length; i>=0; i--){ //search backwards within nodelist for matching elements to remove
        if (elements[i] && elements[i].getAttribute(targetAttr)!=null && elements[i].getAttribute(targetAttr).indexOf(oldFile)!=-1){
            var newElement=createJsCssfile(newFile, fileType);
            elements[i].parentNode.replaceChild(newElement, elements[i]);
        }
    }
	if(typeof next==='function')
		return next();
}
function createJsCssfile(fileName, fileType){
    if (fileType=="js"){ //if filename is a external JavaScript file
        var fileRef=document.createElement('script');
        fileRef.setAttribute("type","text/javascript");
        fileRef.setAttribute("src", fileName);
    }
    else if (fileType=="css"){ //if filename is an external CSS file
        var fileRef=document.createElement("link");
        fileRef.setAttribute("rel", "stylesheet");
        fileRef.setAttribute("type", "text/css");
        fileRef.setAttribute("href", fileName);
    }
    else if (fileType=="style"){ //if filename is an external CSS file
        var fileRef=document.createElement("link");
        fileRef.setAttribute("rel", "stylesheet");
        fileRef.setAttribute("type", "text/css");
        fileRef.setAttribute("href", fileName);
        
    }
    return fileRef
}
window.onload = init;
/*!
 * ClockPicker v0.0.7 (http://weareoutman.github.io/clockpicker/)
 * Copyright 2014 Wang Shenwei.
 * Licensed under MIT (https://github.com/weareoutman/clockpicker/blob/master/LICENSE)
 */
!function(){function t(t){return document.createElementNS(a,t)}function i(t){return(10>t?"0":"")+t}function e(t){var i=++v+"";return t?t+i:i}function s(s,n){function a(t,i){var e=h.offset(),s=/^touch/.test(t.type),c=e.left+m,a=e.top+m,l=(s?t.originalEvent.touches[0]:t).pageX-c,u=(s?t.originalEvent.touches[0]:t).pageY-a,f=Math.sqrt(l*l+u*u),v=!1;if(!i||!(g-w>f||f>g+w)){t.preventDefault();var b=setTimeout(function(){o.addClass("clockpicker-moving")},200);p&&h.append(H.canvas),H.setHand(l,u,!i,!0),r.off(k).on(k,function(t){t.preventDefault();var i=/^touch/.test(t.type),e=(i?t.originalEvent.touches[0]:t).pageX-c,s=(i?t.originalEvent.touches[0]:t).pageY-a;(v||e!==l||s!==u)&&(v=!0,H.setHand(e,s,!1,!0))}),r.off(d).on(d,function(t){r.off(d),t.preventDefault();var e=/^touch/.test(t.type),s=(e?t.originalEvent.changedTouches[0]:t).pageX-c,p=(e?t.originalEvent.changedTouches[0]:t).pageY-a;(i||v)&&s===l&&p===u&&H.setHand(s,p),"hours"===H.currentView?H.toggleView("minutes",M/2):n.autoclose&&(H.minutesView.addClass("clockpicker-dial-out"),setTimeout(function(){H.done()},M/2)),h.prepend(O),clearTimeout(b),o.removeClass("clockpicker-moving"),r.off(k)})}}var l=c(A),h=l.find(".clockpicker-plate"),f=l.find(".clockpicker-hours"),v=l.find(".clockpicker-minutes"),T=l.find(".clockpicker-am-pm-block"),V="INPUT"===s.prop("tagName"),C=V?s:s.find("input"),P=s.find(".input-group-addon"),H=this;if(this.id=e("cp"),this.element=s,this.options=n,this.isAppended=!1,this.isShown=!1,this.currentView="hours",this.isInput=V,this.input=C,this.addon=P,this.popover=l,this.plate=h,this.hoursView=f,this.minutesView=v,this.amPmBlock=T,this.spanHours=l.find(".clockpicker-span-hours"),this.spanMinutes=l.find(".clockpicker-span-minutes"),this.spanAmPm=l.find(".clockpicker-span-am-pm"),this.amOrPm="PM",n.twelvehour){{var x=['<div class="clockpicker-am-pm-block">','<button type="button" class="btn btn-sm btn-default clockpicker-button clockpicker-am-button">',"AM</button>",'<button type="button" class="btn btn-sm btn-default clockpicker-button clockpicker-pm-button">',"PM</button>","</div>"].join("");c(x)}c('<button type="button" class="btn btn-sm btn-default clockpicker-button am-button">AM</button>').on("click",function(){H.amOrPm="AM",c(".clockpicker-span-am-pm").empty().append("AM")}).appendTo(this.amPmBlock),c('<button type="button" class="btn btn-sm btn-default clockpicker-button pm-button">PM</button>').on("click",function(){H.amOrPm="PM",c(".clockpicker-span-am-pm").empty().append("PM")}).appendTo(this.amPmBlock)}n.autoclose||c('<button type="button" class="btn btn-sm btn-default btn-block clockpicker-button">'+n.donetext+"</button>").click(c.proxy(this.done,this)).appendTo(l),"top"!==n.placement&&"bottom"!==n.placement||"top"!==n.align&&"bottom"!==n.align||(n.align="left"),"left"!==n.placement&&"right"!==n.placement||"left"!==n.align&&"right"!==n.align||(n.align="top"),l.addClass(n.placement),l.addClass("clockpicker-align-"+n.align),this.spanHours.click(c.proxy(this.toggleView,this,"hours")),this.spanMinutes.click(c.proxy(this.toggleView,this,"minutes")),C.on("focus.clockpicker click.clockpicker",c.proxy(this.show,this)),P.on("click.clockpicker",c.proxy(this.toggle,this));var E,S,I,D=c('<div class="clockpicker-tick"></div>');if(n.twelvehour)for(E=1;13>E;E+=1){S=D.clone(),I=E/6*Math.PI;var B=g;S.css("font-size","120%"),S.css({left:m+Math.sin(I)*B-w,top:m-Math.cos(I)*B-w}),S.html(0===E?"00":E),f.append(S),S.on(u,a)}else for(E=0;24>E;E+=1){S=D.clone(),I=E/6*Math.PI;var z=E>0&&13>E,B=z?b:g;S.css({left:m+Math.sin(I)*B-w,top:m-Math.cos(I)*B-w}),z&&S.css("font-size","120%"),S.html(0===E?"00":E),f.append(S),S.on(u,a)}for(E=0;60>E;E+=5)S=D.clone(),I=E/30*Math.PI,S.css({left:m+Math.sin(I)*g-w,top:m-Math.cos(I)*g-w}),S.css("font-size","120%"),S.html(i(E)),v.append(S),S.on(u,a);if(h.on(u,function(t){0===c(t.target).closest(".clockpicker-tick").length&&a(t,!0)}),p){var O=l.find(".clockpicker-canvas"),j=t("svg");j.setAttribute("class","clockpicker-svg"),j.setAttribute("width",y),j.setAttribute("height",y);var L=t("g");L.setAttribute("transform","translate("+m+","+m+")");var U=t("circle");U.setAttribute("class","clockpicker-canvas-bearing"),U.setAttribute("cx",0),U.setAttribute("cy",0),U.setAttribute("r",2);var W=t("line");W.setAttribute("x1",0),W.setAttribute("y1",0);var N=t("circle");N.setAttribute("class","clockpicker-canvas-bg"),N.setAttribute("r",w);var X=t("circle");X.setAttribute("class","clockpicker-canvas-fg"),X.setAttribute("r",3.5),L.appendChild(W),L.appendChild(N),L.appendChild(X),L.appendChild(U),j.appendChild(L),O.append(j),this.hand=W,this.bg=N,this.fg=X,this.bearing=U,this.g=L,this.canvas=O}}var o,c=window.jQuery,n=c(window),r=c(document),a="http://www.w3.org/2000/svg",p="SVGAngle"in window&&function(){var t,i=document.createElement("div");return i.innerHTML="<svg/>",t=(i.firstChild&&i.firstChild.namespaceURI)==a,i.innerHTML="",t}(),l=function(){var t=document.createElement("div").style;return"transition"in t||"WebkitTransition"in t||"MozTransition"in t||"msTransition"in t||"OTransition"in t}(),h="ontouchstart"in window,u="mousedown"+(h?" touchstart":""),k="mousemove.clockpicker"+(h?" touchmove.clockpicker":""),d="mouseup.clockpicker"+(h?" touchend.clockpicker":""),f=navigator.vibrate?"vibrate":navigator.webkitVibrate?"webkitVibrate":null,v=0,m=100,g=80,b=54,w=13,y=2*m,M=l?350:1,A=['<div class="popover clockpicker-popover">','<div class="arrow"></div>','<div class="popover-title">','<span class="clockpicker-span-hours text-primary"></span>'," : ",'<span class="clockpicker-span-minutes"></span>','<span class="clockpicker-span-am-pm"></span>',"</div>",'<div class="popover-content">','<div class="clockpicker-plate">','<div class="clockpicker-canvas"></div>','<div class="clockpicker-dial clockpicker-hours"></div>','<div class="clockpicker-dial clockpicker-minutes clockpicker-dial-out"></div>',"</div>",'<span class="clockpicker-am-pm-block">',"</span>","</div>","</div>"].join("");s.DEFAULTS={"default":"",fromnow:0,placement:"bottom",align:"left",donetext:"å®Œæˆ",autoclose:!1,twelvehour:!1,vibrate:!0},s.prototype.toggle=function(){this[this.isShown?"hide":"show"]()},s.prototype.locate=function(){var t=this.element,i=this.popover,e=t.offset(),s=t.outerWidth(),o=t.outerHeight(),c=this.options.placement,n=this.options.align,r={};switch(i.show(),c){case"bottom":r.top=e.top+o;break;case"right":r.left=e.left+s;break;case"top":r.top=e.top-i.outerHeight();break;case"left":r.left=e.left-i.outerWidth()}switch(n){case"left":r.left=e.left;break;case"right":r.left=e.left+s-i.outerWidth();break;case"top":r.top=e.top;break;case"bottom":r.top=e.top+o-i.outerHeight()}i.css(r)},s.prototype.show=function(){if(!this.isShown){var t=this;this.isAppended||(o=c(document.body).append(this.popover),n.on("resize.clockpicker"+this.id,function(){t.isShown&&t.locate()}),this.isAppended=!0);var e=((this.input.prop("value")||this.options["default"]||"")+"").split(":");if("now"===e[0]){var s=new Date(+new Date+this.options.fromnow);e=[s.getHours(),s.getMinutes()]}this.hours=+e[0]||0,this.minutes=+e[1]||0,this.spanHours.html(i(this.hours)),this.spanMinutes.html(i(this.minutes)),this.toggleView("hours"),this.locate(),this.isShown=!0,r.on("click.clockpicker."+this.id+" focusin.clockpicker."+this.id,function(i){var e=c(i.target);0===e.closest(t.popover).length&&0===e.closest(t.addon).length&&0===e.closest(t.input).length&&t.hide()}),r.on("keyup.clockpicker."+this.id,function(i){27===i.keyCode&&t.hide()})}},s.prototype.hide=function(){this.isShown=!1,r.off("click.clockpicker."+this.id+" focusin.clockpicker."+this.id),r.off("keyup.clockpicker."+this.id),this.popover.hide()},s.prototype.toggleView=function(t,i){var e="hours"===t,s=e?this.hoursView:this.minutesView,o=e?this.minutesView:this.hoursView;this.currentView=t,this.spanHours.toggleClass("text-primary",e),this.spanMinutes.toggleClass("text-primary",!e),o.addClass("clockpicker-dial-out"),s.css("visibility","visible").removeClass("clockpicker-dial-out"),this.resetClock(i),clearTimeout(this.toggleViewTimer),this.toggleViewTimer=setTimeout(function(){o.css("visibility","hidden")},M)},s.prototype.resetClock=function(t){var i=this.currentView,e=this[i],s="hours"===i,o=Math.PI/(s?6:30),c=e*o,n=s&&e>0&&13>e?b:g,r=Math.sin(c)*n,a=-Math.cos(c)*n,l=this;p&&t?(l.canvas.addClass("clockpicker-canvas-out"),setTimeout(function(){l.canvas.removeClass("clockpicker-canvas-out"),l.setHand(r,a)},t)):this.setHand(r,a)},s.prototype.setHand=function(t,e,s,o){var n,r=Math.atan2(t,-e),a="hours"===this.currentView,l=Math.PI/(a||s?6:30),h=Math.sqrt(t*t+e*e),u=this.options,k=a&&(g+b)/2>h,d=k?b:g;if(u.twelvehour&&(d=g),0>r&&(r=2*Math.PI+r),n=Math.round(r/l),r=n*l,u.twelvehour?a?0===n&&(n=12):(s&&(n*=5),60===n&&(n=0)):a?(12===n&&(n=0),n=k?0===n?12:n:0===n?0:n+12):(s&&(n*=5),60===n&&(n=0)),this[this.currentView]!==n&&f&&this.options.vibrate&&(this.vibrateTimer||(navigator[f](10),this.vibrateTimer=setTimeout(c.proxy(function(){this.vibrateTimer=null},this),100))),this[this.currentView]=n,this[a?"spanHours":"spanMinutes"].html(i(n)),!p)return void this[a?"hoursView":"minutesView"].find(".clockpicker-tick").each(function(){var t=c(this);t.toggleClass("active",n===+t.html())});o||!a&&n%5?(this.g.insertBefore(this.hand,this.bearing),this.g.insertBefore(this.bg,this.fg),this.bg.setAttribute("class","clockpicker-canvas-bg clockpicker-canvas-bg-trans")):(this.g.insertBefore(this.hand,this.bg),this.g.insertBefore(this.fg,this.bg),this.bg.setAttribute("class","clockpicker-canvas-bg"));var v=Math.sin(r)*d,m=-Math.cos(r)*d;this.hand.setAttribute("x2",v),this.hand.setAttribute("y2",m),this.bg.setAttribute("cx",v),this.bg.setAttribute("cy",m),this.fg.setAttribute("cx",v),this.fg.setAttribute("cy",m)},s.prototype.done=function(){this.hide();var t=this.input.prop("value"),e=i(this.hours)+":"+i(this.minutes);this.options.twelvehour&&(e+=this.amOrPm),this.input.prop("value",e),e!==t&&(this.input.triggerHandler("change"),this.isInput||this.element.trigger("change")),this.options.autoclose&&this.input.trigger("blur")},s.prototype.remove=function(){this.element.removeData("clockpicker"),this.input.off("focus.clockpicker click.clockpicker"),this.addon.off("click.clockpicker"),this.isShown&&this.hide(),this.isAppended&&(n.off("resize.clockpicker"+this.id),this.popover.remove())},c.fn.clockpicker=function(t){var i=Array.prototype.slice.call(arguments,1);return this.each(function(){var e=c(this),o=e.data("clockpicker");if(o)"function"==typeof o[t]&&o[t].apply(o,i);else{var n=c.extend({},s.DEFAULTS,e.data(),"object"==typeof t&&t);e.data("clockpicker",new s(e,n))}})}}();
/* store.js - Copyright (c) 2010-2017 Marcus Westin */
!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var t;t="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,t.store=e()}}(function(){var define,module,exports;return function e(t,r,n){function o(u,a){if(!r[u]){if(!t[u]){var s="function"==typeof require&&require;if(!a&&s)return s(u,!0);if(i)return i(u,!0);var c=new Error("Cannot find module '"+u+"'");throw c.code="MODULE_NOT_FOUND",c}var f=r[u]={exports:{}};t[u][0].call(f.exports,function(e){var r=t[u][1][e];return o(r?r:e)},f,f.exports,e,t,r,n)}return r[u].exports}for(var i="function"==typeof require&&require,u=0;u<n.length;u++)o(n[u]);return o}({1:[function(e,t,r){"use strict";var n=e("../src/store-engine"),o=e("../storages/all"),i=[e("../plugins/json2")];t.exports=n.createStore(o,i)},{"../plugins/json2":2,"../src/store-engine":4,"../storages/all":6}],2:[function(e,t,r){"use strict";function n(){return e("./lib/json2"),{}}t.exports=n},{"./lib/json2":3}],3:[function(require,module,exports){"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};"object"!==("undefined"==typeof JSON?"undefined":_typeof(JSON))&&(JSON={}),function(){function f(e){return e<10?"0"+e:e}function this_value(){return this.valueOf()}function quote(e){return rx_escapable.lastIndex=0,rx_escapable.test(e)?'"'+e.replace(rx_escapable,function(e){var t=meta[e];return"string"==typeof t?t:"\\u"+("0000"+e.charCodeAt(0).toString(16)).slice(-4)})+'"':'"'+e+'"'}function str(e,t){var r,n,o,i,u,a=gap,s=t[e];switch(s&&"object"===("undefined"==typeof s?"undefined":_typeof(s))&&"function"==typeof s.toJSON&&(s=s.toJSON(e)),"function"==typeof rep&&(s=rep.call(t,e,s)),"undefined"==typeof s?"undefined":_typeof(s)){case"string":return quote(s);case"number":return isFinite(s)?String(s):"null";case"boolean":case"null":return String(s);case"object":if(!s)return"null";if(gap+=indent,u=[],"[object Array]"===Object.prototype.toString.apply(s)){for(i=s.length,r=0;r<i;r+=1)u[r]=str(r,s)||"null";return o=0===u.length?"[]":gap?"[\n"+gap+u.join(",\n"+gap)+"\n"+a+"]":"["+u.join(",")+"]",gap=a,o}if(rep&&"object"===("undefined"==typeof rep?"undefined":_typeof(rep)))for(i=rep.length,r=0;r<i;r+=1)"string"==typeof rep[r]&&(n=rep[r],o=str(n,s),o&&u.push(quote(n)+(gap?": ":":")+o));else for(n in s)Object.prototype.hasOwnProperty.call(s,n)&&(o=str(n,s),o&&u.push(quote(n)+(gap?": ":":")+o));return o=0===u.length?"{}":gap?"{\n"+gap+u.join(",\n"+gap)+"\n"+a+"}":"{"+u.join(",")+"}",gap=a,o}}var rx_one=/^[\],:{}\s]*$/,rx_two=/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,rx_three=/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,rx_four=/(?:^|:|,)(?:\s*\[)+/g,rx_escapable=/[\\"\u0000-\u001f\u007f-\u009f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,rx_dangerous=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;"function"!=typeof Date.prototype.toJSON&&(Date.prototype.toJSON=function(){return isFinite(this.valueOf())?this.getUTCFullYear()+"-"+f(this.getUTCMonth()+1)+"-"+f(this.getUTCDate())+"T"+f(this.getUTCHours())+":"+f(this.getUTCMinutes())+":"+f(this.getUTCSeconds())+"Z":null},Boolean.prototype.toJSON=this_value,Number.prototype.toJSON=this_value,String.prototype.toJSON=this_value);var gap,indent,meta,rep;"function"!=typeof JSON.stringify&&(meta={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"},JSON.stringify=function(e,t,r){var n;if(gap="",indent="","number"==typeof r)for(n=0;n<r;n+=1)indent+=" ";else"string"==typeof r&&(indent=r);if(rep=t,t&&"function"!=typeof t&&("object"!==("undefined"==typeof t?"undefined":_typeof(t))||"number"!=typeof t.length))throw new Error("JSON.stringify");return str("",{"":e})}),"function"!=typeof JSON.parse&&(JSON.parse=function(text,reviver){function walk(e,t){var r,n,o=e[t];if(o&&"object"===("undefined"==typeof o?"undefined":_typeof(o)))for(r in o)Object.prototype.hasOwnProperty.call(o,r)&&(n=walk(o,r),void 0!==n?o[r]=n:delete o[r]);return reviver.call(e,t,o)}var j;if(text=String(text),rx_dangerous.lastIndex=0,rx_dangerous.test(text)&&(text=text.replace(rx_dangerous,function(e){return"\\u"+("0000"+e.charCodeAt(0).toString(16)).slice(-4)})),rx_one.test(text.replace(rx_two,"@").replace(rx_three,"]").replace(rx_four,"")))return j=eval("("+text+")"),"function"==typeof reviver?walk({"":j},""):j;throw new SyntaxError("JSON.parse")})}()},{}],4:[function(e,t,r){"use strict";function n(e,t){var r={_seenPlugins:[],_namespacePrefix:"",_namespaceRegexp:null,_legalNamespace:/^[a-zA-Z0-9_\-]+$/,_storage:function(){if(!this.enabled)throw new Error("store.js: No supported storage has been added! Add one (e.g store.addStorage(require('store/storages/cookieStorage')) or use a build with more built-in storages (e.g https://github.com/marcuswestin/store.js/tree/master/dist/store.legacy.min.js)");return this._storage.resolved},_testStorage:function(e){try{var t="__storejs__test__";e.write(t,t);var r=e.read(t)===t;return e.remove(t),r}catch(n){return!1}},_assignPluginFnProp:function(e,t){var r=this[t];this[t]=function(){function t(){if(r){var e=r.apply(o,t.args);return delete t.args,e}}var n=Array.prototype.slice.call(arguments,0),o=this,i=[t].concat(n);return t.args=n,e.apply(o,i)}},_serialize:function(e){return JSON.stringify(e)},_deserialize:function(e,t){if(!e)return t;var r="";try{r=JSON.parse(e)}catch(n){r=e}return void 0!==r?r:t}},n=a(r,l);return u(e,function(e){n.addStorage(e)}),u(t,function(e){n.addPlugin(e)}),n}var o=e("./util"),i=o.pluck,u=o.each,a=o.create,s=o.isList,c=o.isFunction,f=o.isObject;t.exports={createStore:n};var l={version:"2.0.3",enabled:!1,storage:null,addStorage:function(e){this.enabled||this._testStorage(e)&&(this._storage.resolved=e,this.enabled=!0,this.storage=e.name)},addPlugin:function(e){var t=this;if(s(e))return void u(e,function(e){t.addPlugin(e)});var r=i(this._seenPlugins,function(t){return e===t});if(!r){if(this._seenPlugins.push(e),!c(e))throw new Error("Plugins must be function values that return objects");var n=e.call(this);if(!f(n))throw new Error("Plugins must return an object of function properties");u(n,function(r,n){if(!c(r))throw new Error("Bad plugin property: "+n+" from plugin "+e.name+". Plugins should only return functions.");t._assignPluginFnProp(r,n)})}},get:function(e,t){var r=this._storage().read(this._namespacePrefix+e);return this._deserialize(r,t)},set:function(e,t){return void 0===t?this.remove(e):(this._storage().write(this._namespacePrefix+e,this._serialize(t)),t)},remove:function(e){this._storage().remove(this._namespacePrefix+e)},each:function(e){var t=this;this._storage().each(function(r,n){e(t._deserialize(r),n.replace(t._namespaceRegexp,""))})},clearAll:function(){this._storage().clearAll()},hasNamespace:function(e){return this._namespacePrefix=="__storejs_"+e+"_"},namespace:function(e){if(!this._legalNamespace.test(e))throw new Error("store.js namespaces can only have alhpanumerics + underscores and dashes");var t="__storejs_"+e+"_";return a(this,{_namespacePrefix:t,_namespaceRegexp:t?new RegExp("^"+t):null})},createStore:function(e,t){return n(e,t)}}},{"./util":5}],5:[function(e,t,r){(function(e){"use strict";function r(){return Object.assign?Object.assign:function(e,t,r,n){for(var o=1;o<arguments.length;o++)a(Object(arguments[o]),function(t,r){e[r]=t});return e}}function n(){if(Object.create)return function(e,t,r,n){var o=u(arguments,1);return g.apply(this,[Object.create(e)].concat(o))};var e=function(){};return function(t,r,n,o){var i=u(arguments,1);return e.prototype=t,g.apply(this,[new e].concat(i))}}function o(){return String.prototype.trim?function(e){return String.prototype.trim.call(e)}:function(e){return e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"")}}function i(e,t){return function(){return t.apply(e,Array.prototype.slice.call(arguments,0))}}function u(e,t){return Array.prototype.slice.call(e,t||0)}function a(e,t){c(e,function(e,r){return t(e,r),!1})}function s(e,t){var r=f(e)?[]:{};return c(e,function(e,n){return r[n]=t(e,n),!1}),r}function c(e,t){if(f(e)){for(var r=0;r<e.length;r++)if(t(e[r],r))return e[r]}else for(var n in e)if(e.hasOwnProperty(n)&&t(e[n],n))return e[n]}function f(e){return null!=e&&"function"!=typeof e&&"number"==typeof e.length}function l(e){return e&&"[object Function]"==={}.toString.call(e)}function p(e){return e&&"[object Object]"==={}.toString.call(e)}var g=r(),d=n(),v=o(),h="undefined"!=typeof window?window:e;t.exports={assign:g,create:d,trim:v,bind:i,slice:u,each:a,map:s,pluck:c,isList:f,isFunction:l,isObject:p,Global:h}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],6:[function(e,t,r){"use strict";t.exports={localStorage:e("./localStorage"),"oldFF-globalStorage":e("./oldFF-globalStorage"),"oldIE-userDataStorage":e("./oldIE-userDataStorage"),cookieStorage:e("./cookieStorage"),sessionStorage:e("./sessionStorage"),memoryStorage:e("./memoryStorage")}},{"./cookieStorage":7,"./localStorage":8,"./memoryStorage":9,"./oldFF-globalStorage":10,"./oldIE-userDataStorage":11,"./sessionStorage":12}],7:[function(e,t,r){"use strict";function n(e){if(!e||!s(e))return null;var t="(?:^|.*;\\s*)"+escape(e).replace(/[\-\.\+\*]/g,"\\$&")+"\\s*\\=\\s*((?:[^;](?!;))*[^;]?).*";return unescape(p.cookie.replace(new RegExp(t),"$1"))}function o(e){for(var t=p.cookie.split(/; ?/g),r=t.length-1;r>=0;r--)if(l(t[r])){var n=t[r].split("="),o=unescape(n[0]),i=unescape(n[1]);e(i,o)}}function i(e,t){e&&(p.cookie=escape(e)+"="+escape(t)+"; expires=Tue, 19 Jan 2038 03:14:07 GMT; path=/")}function u(e){e&&s(e)&&(p.cookie=escape(e)+"=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/")}function a(){o(function(e,t){u(t)})}function s(e){return new RegExp("(?:^|;\\s*)"+escape(e).replace(/[\-\.\+\*]/g,"\\$&")+"\\s*\\=").test(p.cookie)}var c=e("../src/util"),f=c.Global,l=c.trim;t.exports={name:"cookieStorage",read:n,write:i,each:o,remove:u,clearAll:a};var p=f.document},{"../src/util":5}],8:[function(e,t,r){"use strict";function n(){return f.localStorage}function o(e){return n().getItem(e)}function i(e,t){return n().setItem(e,t)}function u(e){for(var t=n().length-1;t>=0;t--){var r=n().key(t);e(o(r),r)}}function a(e){return n().removeItem(e)}function s(){return n().clear()}var c=e("../src/util"),f=c.Global;t.exports={name:"localStorage",read:o,write:i,each:u,remove:a,clearAll:s}},{"../src/util":5}],9:[function(e,t,r){"use strict";function n(e){return s[e]}function o(e,t){s[e]=t}function i(e){for(var t in s)s.hasOwnProperty(t)&&e(s[t],t)}function u(e){delete s[e]}function a(e){s={}}t.exports={name:"memoryStorage",read:n,write:o,each:i,remove:u,clearAll:a};var s={}},{}],10:[function(e,t,r){"use strict";function n(e){return f[e]}function o(e,t){f[e]=t}function i(e){for(var t=f.length-1;t>=0;t--){var r=f.key(t);e(f[r],r)}}function u(e){return f.removeItem(e)}function a(){i(function(e,t){delete f[e]})}var s=e("../src/util"),c=s.Global;t.exports={name:"oldFF-globalStorage",read:n,write:o,each:i,remove:u,clearAll:a};var f=c.globalStorage},{"../src/util":5}],11:[function(e,t,r){"use strict";function n(e,t){if(!v){var r=s(e);d(function(e){e.setAttribute(r,t),e.save(p)})}}function o(e){if(!v){var t=s(e),r=null;return d(function(e){r=e.getAttribute(t)}),r}}function i(e){d(function(t){for(var r=t.XMLDocument.documentElement.attributes,n=r.length-1;n>=0;n--){var o=r[n];e(t.getAttribute(o.name),o.name)}})}function u(e){var t=s(e);d(function(e){e.removeAttribute(t),e.save(p)})}function a(){d(function(e){var t=e.XMLDocument.documentElement.attributes;e.load(p);for(var r=t.length-1;r>=0;r--)e.removeAttribute(t[r].name);e.save(p)})}function s(e){return e.replace(/^d/,"___$&").replace(h,"___")}function c(){if(!g||!g.documentElement||!g.documentElement.addBehavior)return null;var e,t,r,n="script";try{t=new ActiveXObject("htmlfile"),t.open(),t.write("<"+n+">document.w=window</"+n+'><iframe src="/favicon.ico"></iframe>'),t.close(),e=t.w.frames[0].document,r=e.createElement("div")}catch(o){r=g.createElement("div"),e=g.body}return function(t){var n=[].slice.call(arguments,0);n.unshift(r),e.appendChild(r),r.addBehavior("#default#userData"),r.load(p),t.apply(this,n),e.removeChild(r)}}var f=e("../src/util"),l=f.Global;t.exports={name:"oldIE-userDataStorage",write:n,read:o,each:i,remove:u,clearAll:a};var p="storejs",g=l.document,d=c(),v=(l.navigator?l.navigator.userAgent:"").match(/ (MSIE 8|MSIE 9|MSIE 10)\./),h=new RegExp("[!\"#$%&'()*+,/\\\\:;<=>?@[\\]^`{|}~]","g")},{"../src/util":5}],12:[function(e,t,r){"use strict";function n(){return f.sessionStorage}function o(e){return n().getItem(e)}function i(e,t){return n().setItem(e,t)}function u(e){for(var t=n().length-1;t>=0;t--){var r=n().key(t);e(o(r),r)}}function a(e){return n().removeItem(e)}function s(){return n().clear()}var c=e("../src/util"),f=c.Global;t.exports={name:"sessionStorage",read:o,write:i,each:u,remove:a,clearAll:s}},{"../src/util":5}]},{},[1])(1)});
/*
 * International Telephone Input v8.5.2
 * https://github.com/jackocnr/intl-tel-input.git
 * Licensed under the MIT license
 */
!function(a){"function"==typeof define&&define.amd?define(["jquery"],function(b){a(b,window,document)}):"object"==typeof module&&module.exports?module.exports=a(require("jquery"),window,document):a(jQuery,window,document)}(function(a,b,c,d){"use strict";function e(b,c){this.a=a(b),c&&(a.extend(c,c,{a:c.allowDropdown,b:c.autoHideDialCode,c:c.autoPlaceholder,c2:c.customPlaceholder,d:c.dropdownContainer,e:c.excludeCountries,f:c.formatOnInit,g:c.geoIpLookup,h:c.initialCountry,i:c.nationalMode,j:c.numberType,k:c.onlyCountries,l:c.preferredCountries,m:c.separateDialCode,n:c.utilsScript})),this.b=a.extend({},h,c),this.ns="."+f+g++,this.d=Boolean(b.setSelectionRange),this.e=Boolean(a(b).attr("placeholder"))}var f="intlTelInput",g=1,h={a:!0,b:!0,c:!0,c2:null,d:"",e:[],f:!0,g:null,h:"",i:!0,j:"MOBILE",k:[],l:["us","gb"],m:!1,n:""},i={b:38,c:40,d:13,e:27,f:43,A:65,Z:90,j:32,k:9};a(b).load(function(){a.fn[f].windowLoaded=!0}),e.prototype={_a:function(){return this.b.i&&(this.b.b=!1),this.b.m&&(this.b.b=this.b.i=!1,this.b.a=!0),this.g=/Android.+Mobile|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),this.g&&(a("body").addClass("iti-mobile"),this.b.d||(this.b.d="body")),this.h=new a.Deferred,this.i=new a.Deferred,this._b(),this._f(),this._h(),this._i(),this._i2(),[this.h,this.i]},_b:function(){this._d(),this._d2(),this._e()},_c:function(a,b,c){b in this.q||(this.q[b]=[]);var d=c||0;this.q[b][d]=a},_c2:function(b,c){var d;for(d=0;d<b.length;d++)b[d]=b[d].toLowerCase();for(this.p=[],d=0;d<j.length;d++)c(a.inArray(j[d].iso2,b))&&this.p.push(j[d])},_d:function(){this.b.k.length?this._c2(this.b.k,function(a){return-1!=a}):this.b.e.length?this._c2(this.b.e,function(a){return-1==a}):this.p=j},_d2:function(){this.q={};for(var a=0;a<this.p.length;a++){var b=this.p[a];if(this._c(b.iso2,b.dialCode,b.priority),b.areaCodes)for(var c=0;c<b.areaCodes.length;c++)this._c(b.iso2,b.dialCode+b.areaCodes[c])}},_e:function(){this.r=[];for(var a=0;a<this.b.l.length;a++){var b=this.b.l[a].toLowerCase(),c=this._y(b,!1,!0);c&&this.r.push(c)}},_f:function(){this.a.attr("autocomplete","off");var b="intl-tel-input";this.b.a&&(b+=" allow-dropdown"),this.b.m&&(b+=" separate-dial-code"),this.a.wrap(a("<div>",{"class":b})),this.k=a("<div>",{"class":"flag-container"}).insertBefore(this.a);var c=a("<div>",{"class":"selected-flag"});c.appendTo(this.k),this.l=a("<div>",{"class":"iti-flag"}).appendTo(c),this.b.m&&(this.t=a("<div>",{"class":"selected-dial-code"}).appendTo(c)),this.b.a?(c.attr("tabindex","0"),a("<div>",{"class":"iti-arrow"}).appendTo(c),this.m=a("<ul>",{"class":"country-list hide"}),this.r.length&&(this._g(this.r,"preferred"),a("<li>",{"class":"divider"}).appendTo(this.m)),this._g(this.p,""),this.o=this.m.children(".country"),this.b.d?this.dropdown=a("<div>",{"class":"intl-tel-input iti-container"}).append(this.m):this.m.appendTo(this.k)):this.o=a()},_g:function(a,b){for(var c="",d=0;d<a.length;d++){var e=a[d];c+="<li class='country "+b+"' data-dial-code='"+e.dialCode+"' data-country-code='"+e.iso2+"'>",c+="<div class='flag-box'><div class='iti-flag "+e.iso2+"'></div></div>",c+="<span class='country-name'>"+e.name+"</span>",c+="<span class='dial-code'>+"+e.dialCode+"</span>",c+="</li>"}this.m.append(c)},_h:function(){var a=this.a.val();this._af(a)?this._v(a,!0):"auto"!==this.b.h&&(this.b.h?this._z(this.b.h,!0):(this.j=this.r.length?this.r[0].iso2:this.p[0].iso2,a||this._z(this.j,!0)),a||this.b.i||this.b.b||this.b.m||this.a.val("+"+this.s.dialCode)),a&&this._u(a,this.b.f)},_i:function(){this._j(),this.b.b&&this._l(),this.b.a&&this._i1()},_i1:function(){var a=this,b=this.a.closest("label");b.length&&b.on("click"+this.ns,function(b){a.m.hasClass("hide")?a.a.focus():b.preventDefault()});var c=this.l.parent();c.on("click"+this.ns,function(b){!a.m.hasClass("hide")||a.a.prop("disabled")||a.a.prop("readonly")||a._n()}),this.k.on("keydown"+a.ns,function(b){var c=a.m.hasClass("hide");!c||b.which!=i.b&&b.which!=i.c&&b.which!=i.j&&b.which!=i.d||(b.preventDefault(),b.stopPropagation(),a._n()),b.which==i.k&&a._ac()})},_i2:function(){var c=this;this.b.n?a.fn[f].windowLoaded?a.fn[f].loadUtils(this.b.n,this.i):a(b).load(function(){a.fn[f].loadUtils(c.b.n,c.i)}):this.i.resolve(),"auto"===this.b.h?this._i3():this.h.resolve()},_i3:function(){var c=b.Cookies?Cookies.get("itiAutoCountry"):"";c&&(a.fn[f].autoCountry=c),a.fn[f].autoCountry?this.handleAutoCountry():a.fn[f].startedLoadingAutoCountry||(a.fn[f].startedLoadingAutoCountry=!0,"function"==typeof this.b.g&&this.b.g(function(c){a.fn[f].autoCountry=c.toLowerCase(),b.Cookies&&Cookies.set("itiAutoCountry",a.fn[f].autoCountry,{path:"/"}),setTimeout(function(){a(".intl-tel-input input").intlTelInput("handleAutoCountry")})}))},_j:function(){var a=this;this.a.on("keyup"+this.ns,function(){a._v(a.a.val())}),this.a.on("cut"+this.ns+" paste"+this.ns+" keyup"+this.ns,function(){setTimeout(function(){a._v(a.a.val())})})},_j2:function(a){var b=this.a.attr("maxlength");return b&&a.length>b?a.substr(0,b):a},_l:function(){var b=this;this.a.on("mousedown"+this.ns,function(a){b.a.is(":focus")||b.a.val()||(a.preventDefault(),b.a.focus())}),this.a.on("focus"+this.ns,function(a){b.a.val()||b.a.prop("readonly")||!b.s.dialCode||(b.a.val("+"+b.s.dialCode),b.a.one("keypress.plus"+b.ns,function(a){a.which==i.f&&b.a.val("")}),setTimeout(function(){var a=b.a[0];if(b.d){var c=b.a.val().length;a.setSelectionRange(c,c)}}))});var c=this.a.prop("form");c&&a(c).on("submit"+this.ns,function(){b._removeEmptyDialCode()}),this.a.on("blur"+this.ns,function(){b._removeEmptyDialCode()})},_removeEmptyDialCode:function(){var a=this.a.val(),b="+"==a.charAt(0);if(b){var c=this._m(a);c&&this.s.dialCode!=c||this.a.val("")}this.a.off("keypress.plus"+this.ns)},_m:function(a){return a.replace(/\D/g,"")},_n:function(){this._o();var a=this.m.children(".active");a.length&&(this._x(a),this._ad(a)),this._p(),this.l.children(".iti-arrow").addClass("up")},_o:function(){var c=this;if(this.b.d&&this.dropdown.appendTo(this.b.d),this.n=this.m.removeClass("hide").outerHeight(),!this.g){var d=this.a.offset(),e=d.top,f=a(b).scrollTop(),g=e+this.a.outerHeight()+this.n<f+a(b).height(),h=e-this.n>f;if(this.m.toggleClass("dropup",!g&&h),this.b.d){var i=!g&&h?0:this.a.innerHeight();this.dropdown.css({top:e+i,left:d.left}),a(b).on("scroll"+this.ns,function(){c._ac()})}}},_p:function(){var b=this;this.m.on("mouseover"+this.ns,".country",function(c){b._x(a(this))}),this.m.on("click"+this.ns,".country",function(c){b._ab(a(this))});var d=!0;a("html").on("click"+this.ns,function(a){d||b._ac(),d=!1});var e="",f=null;a(c).on("keydown"+this.ns,function(a){a.preventDefault(),a.which==i.b||a.which==i.c?b._q(a.which):a.which==i.d?b._r():a.which==i.e?b._ac():(a.which>=i.A&&a.which<=i.Z||a.which==i.j)&&(f&&clearTimeout(f),e+=String.fromCharCode(a.which),b._s(e),f=setTimeout(function(){e=""},1e3))})},_q:function(a){var b=this.m.children(".highlight").first(),c=a==i.b?b.prev():b.next();c.length&&(c.hasClass("divider")&&(c=a==i.b?c.prev():c.next()),this._x(c),this._ad(c))},_r:function(){var a=this.m.children(".highlight").first();a.length&&this._ab(a)},_s:function(a){for(var b=0;b<this.p.length;b++)if(this._t(this.p[b].name,a)){var c=this.m.children("[data-country-code="+this.p[b].iso2+"]").not(".preferred");this._x(c),this._ad(c,!0);break}},_t:function(a,b){return a.substr(0,b.length).toUpperCase()==b},_u:function(c,d,e){d&&b.intlTelInputUtils&&this.s&&(a.isNumeric(e)||(e=this.b.m||!this.b.i&&"+"==c.charAt(0)?intlTelInputUtils.numberFormat.INTERNATIONAL:intlTelInputUtils.numberFormat.NATIONAL),c=intlTelInputUtils.formatNumber(c,this.s.iso2,e)),c=this._ah(c),this.a.val(c)},_v:function(b,c){b&&this.b.i&&this.s&&"1"==this.s.dialCode&&"+"!=b.charAt(0)&&("1"!=b.charAt(0)&&(b="1"+b),b="+"+b);var d=this._af(b),e=null;if(d){var f=this.q[this._m(d)],g=this.s&&-1!=a.inArray(this.s.iso2,f);if(!g||this._w(b,d))for(var h=0;h<f.length;h++)if(f[h]){e=f[h];break}}else"+"==b.charAt(0)&&this._m(b).length?e="":b&&"+"!=b||(e=this.j);null!==e&&this._z(e,c)},_w:function(a,b){return"+1"==b&&this._m(a).length>=4},_x:function(a){this.o.removeClass("highlight"),a.addClass("highlight")},_y:function(a,b,c){for(var d=b?j:this.p,e=0;e<d.length;e++)if(d[e].iso2==a)return d[e];if(c)return null;throw new Error("No country data for '"+a+"'")},_z:function(a,b){var c=this.s&&this.s.iso2?this.s:{};this.s=a?this._y(a,!1,!1):{},this.s.iso2&&(this.j=this.s.iso2),this.l.attr("class","iti-flag "+a);var d=a?this.s.name+": +"+this.s.dialCode:"Unknown";if(this.l.parent().attr("title",d),this.b.m){var e=this.s.dialCode?"+"+this.s.dialCode:"",f=this.a.parent();c.dialCode&&f.removeClass("iti-sdc-"+(c.dialCode.length+1)),e&&f.addClass("iti-sdc-"+e.length),this.t.text(e)}this._aa(),this.o.removeClass("active"),a&&this.o.find(".iti-flag."+a).first().closest(".country").addClass("active"),b||c.iso2===a||this.a.trigger("countrychange",this.s)},_aa:function(){if(b.intlTelInputUtils&&!this.e&&this.b.c&&this.s){var a=intlTelInputUtils.numberType[this.b.j],c=this.s.iso2?intlTelInputUtils.getExampleNumber(this.s.iso2,this.b.i,a):"";c=this._ah(c),"function"==typeof this.b.c2&&(c=this.b.c2(c,this.s)),this.a.attr("placeholder",c)}},_ab:function(a){if(this._z(a.attr("data-country-code")),this._ac(),this._ae(a.attr("data-dial-code"),!0),this.a.focus(),this.d){var b=this.a.val().length;this.a[0].setSelectionRange(b,b)}},_ac:function(){this.m.addClass("hide"),this.l.children(".iti-arrow").removeClass("up"),a(c).off(this.ns),a("html").off(this.ns),this.m.off(this.ns),this.b.d&&(this.g||a(b).off("scroll"+this.ns),this.dropdown.detach())},_ad:function(a,b){var c=this.m,d=c.height(),e=c.offset().top,f=e+d,g=a.outerHeight(),h=a.offset().top,i=h+g,j=h-e+c.scrollTop(),k=d/2-g/2;if(e>h)b&&(j-=k),c.scrollTop(j);else if(i>f){b&&(j+=k);var l=d-g;c.scrollTop(j-l)}},_ae:function(a,b){var c,d=this.a.val();if(a="+"+a,"+"==d.charAt(0)){var e=this._af(d);c=e?d.replace(e,a):a}else{if(this.b.i||this.b.m)return;if(d)c=a+d;else{if(!b&&this.b.b)return;c=a}}this.a.val(c)},_af:function(b){var c="";if("+"==b.charAt(0))for(var d="",e=0;e<b.length;e++){var f=b.charAt(e);if(a.isNumeric(f)&&(d+=f,this.q[d]&&(c=b.substr(0,e+1)),4==d.length))break}return c},_ag:function(){var a=this.b.m?"+"+this.s.dialCode:"";return a+this.a.val()},_ah:function(a){if(this.b.m){var b=this._af(a);if(b){null!==this.s.areaCodes&&(b="+"+this.s.dialCode);var c=" "===a[b.length]||"-"===a[b.length]?b.length+1:b.length;a=a.substr(c)}}return this._j2(a)},handleAutoCountry:function(){"auto"===this.b.h&&(this.j=a.fn[f].autoCountry,this.a.val()||this.setCountry(this.j),this.h.resolve())},destroy:function(){if(this.allowDropdown&&(this._ac(),this.l.parent().off(this.ns),this.a.closest("label").off(this.ns)),this.b.b){var b=this.a.prop("form");b&&a(b).off(this.ns)}this.a.off(this.ns);var c=this.a.parent();c.before(this.a).remove()},getExtension:function(){return b.intlTelInputUtils?intlTelInputUtils.getExtension(this._ag(),this.s.iso2):""},getNumber:function(a){return b.intlTelInputUtils?intlTelInputUtils.formatNumber(this._ag(),this.s.iso2,a):""},getNumberType:function(){return b.intlTelInputUtils?intlTelInputUtils.getNumberType(this._ag(),this.s.iso2):-99},getSelectedCountryData:function(){return this.s||{}},getValidationError:function(){return b.intlTelInputUtils?intlTelInputUtils.getValidationError(this._ag(),this.s.iso2):-99},isValidNumber:function(){var c=a.trim(this._ag()),d=this.b.i?this.s.iso2:"";return b.intlTelInputUtils?intlTelInputUtils.isValidNumber(c,d):null},setCountry:function(a){a=a.toLowerCase(),this.l.hasClass(a)||(this._z(a),this._ae(this.s.dialCode,!1))},setNumber:function(b,c){this._v(b),this._u(b,a.isNumeric(c),c)},handleUtils:function(){b.intlTelInputUtils&&(this.a.val()&&this._u(this.a.val(),this.b.f),this._aa()),this.i.resolve()}},a.fn[f]=function(b){var c=arguments;if(b===d||"object"==typeof b){var g=[];return this.each(function(){if(!a.data(this,"plugin_"+f)){var c=new e(this,b),d=c._a();g.push(d[0]),g.push(d[1]),a.data(this,"plugin_"+f,c)}}),a.when.apply(null,g)}if("string"==typeof b&&"_"!==b[0]){var h;return this.each(function(){var d=a.data(this,"plugin_"+f);d instanceof e&&"function"==typeof d[b]&&(h=d[b].apply(d,Array.prototype.slice.call(c,1))),"destroy"===b&&a.data(this,"plugin_"+f,null)}),h!==d?h:this}},a.fn[f].getCountryData=function(){return j},a.fn[f].loadUtils=function(b,c){a.fn[f].loadedUtilsScript?c&&c.resolve():(a.fn[f].loadedUtilsScript=!0,a.ajax({url:b,complete:function(){a(".intl-tel-input input").intlTelInput("handleUtils")},dataType:"script",cache:!0}))},a.fn[f].version="8.5.2";for(var j=[["Afghanistan (â€«Ø§ÙØºØ§Ù†Ø³ØªØ§Ù†â€¬â€Ž)","af","93"],["Albania (ShqipÃ«ri)","al","355"],["Algeria (â€«Ø§Ù„Ø¬Ø²Ø§Ø¦Ø±â€¬â€Ž)","dz","213"],["American Samoa","as","1684"],["Andorra","ad","376"],["Angola","ao","244"],["Anguilla","ai","1264"],["Antigua and Barbuda","ag","1268"],["Argentina","ar","54"],["Armenia (Õ€Õ¡ÕµÕ¡Õ½Õ¿Õ¡Õ¶)","am","374"],["Aruba","aw","297"],["Australia","au","61",0],["Austria (Ã–sterreich)","at","43"],["Azerbaijan (AzÉ™rbaycan)","az","994"],["Bahamas","bs","1242"],["Bahrain (â€«Ø§Ù„Ø¨Ø­Ø±ÙŠÙ†â€¬â€Ž)","bh","973"],["Bangladesh (à¦¬à¦¾à¦‚à¦²à¦¾à¦¦à§‡à¦¶)","bd","880"],["Barbados","bb","1246"],["Belarus (Ð‘ÐµÐ»Ð°Ñ€ÑƒÑÑŒ)","by","375"],["Belgium (BelgiÃ«)","be","32"],["Belize","bz","501"],["Benin (BÃ©nin)","bj","229"],["Bermuda","bm","1441"],["Bhutan (à½ à½–à¾²à½´à½‚)","bt","975"],["Bolivia","bo","591"],["Bosnia and Herzegovina (Ð‘Ð¾ÑÐ½Ð° Ð¸ Ð¥ÐµÑ€Ñ†ÐµÐ³Ð¾Ð²Ð¸Ð½Ð°)","ba","387"],["Botswana","bw","267"],["Brazil (Brasil)","br","55"],["British Indian Ocean Territory","io","246"],["British Virgin Islands","vg","1284"],["Brunei","bn","673"],["Bulgaria (Ð‘ÑŠÐ»Ð³Ð°Ñ€Ð¸Ñ)","bg","359"],["Burkina Faso","bf","226"],["Burundi (Uburundi)","bi","257"],["Cambodia (áž€áž˜áŸ’áž–áž»áž‡áž¶)","kh","855"],["Cameroon (Cameroun)","cm","237"],["Canada","ca","1",1,["204","226","236","249","250","289","306","343","365","387","403","416","418","431","437","438","450","506","514","519","548","579","581","587","604","613","639","647","672","705","709","742","778","780","782","807","819","825","867","873","902","905"]],["Cape Verde (Kabu Verdi)","cv","238"],["Caribbean Netherlands","bq","599",1],["Cayman Islands","ky","1345"],["Central African Republic (RÃ©publique centrafricaine)","cf","236"],["Chad (Tchad)","td","235"],["Chile","cl","56"],["China (ä¸­å›½)","cn","86"],["Christmas Island","cx","61",2],["Cocos (Keeling) Islands","cc","61",1],["Colombia","co","57"],["Comoros (â€«Ø¬Ø²Ø± Ø§Ù„Ù‚Ù…Ø±â€¬â€Ž)","km","269"],["Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)","cd","243"],["Congo (Republic) (Congo-Brazzaville)","cg","242"],["Cook Islands","ck","682"],["Costa Rica","cr","506"],["CÃ´te dâ€™Ivoire","ci","225"],["Croatia (Hrvatska)","hr","385"],["Cuba","cu","53"],["CuraÃ§ao","cw","599",0],["Cyprus (ÎšÏÏ€ÏÎ¿Ï‚)","cy","357"],["Czech Republic (ÄŒeskÃ¡ republika)","cz","420"],["Denmark (Danmark)","dk","45"],["Djibouti","dj","253"],["Dominica","dm","1767"],["Dominican Republic (RepÃºblica Dominicana)","do","1",2,["809","829","849"]],["Ecuador","ec","593"],["Egypt (â€«Ù…ØµØ±â€¬â€Ž)","eg","20"],["El Salvador","sv","503"],["Equatorial Guinea (Guinea Ecuatorial)","gq","240"],["Eritrea","er","291"],["Estonia (Eesti)","ee","372"],["Ethiopia","et","251"],["Falkland Islands (Islas Malvinas)","fk","500"],["Faroe Islands (FÃ¸royar)","fo","298"],["Fiji","fj","679"],["Finland (Suomi)","fi","358",0],["France","fr","33"],["French Guiana (Guyane franÃ§aise)","gf","594"],["French Polynesia (PolynÃ©sie franÃ§aise)","pf","689"],["Gabon","ga","241"],["Gambia","gm","220"],["Georgia (áƒ¡áƒáƒ¥áƒáƒ áƒ—áƒ•áƒ”áƒšáƒ)","ge","995"],["Germany (Deutschland)","de","49"],["Ghana (Gaana)","gh","233"],["Gibraltar","gi","350"],["Greece (Î•Î»Î»Î¬Î´Î±)","gr","30"],["Greenland (Kalaallit Nunaat)","gl","299"],["Grenada","gd","1473"],["Guadeloupe","gp","590",0],["Guam","gu","1671"],["Guatemala","gt","502"],["Guernsey","gg","44",1],["Guinea (GuinÃ©e)","gn","224"],["Guinea-Bissau (GuinÃ© Bissau)","gw","245"],["Guyana","gy","592"],["Haiti","ht","509"],["Honduras","hn","504"],["Hong Kong (é¦™æ¸¯)","hk","852"],["Hungary (MagyarorszÃ¡g)","hu","36"],["Iceland (Ãsland)","is","354"],["India (à¤­à¤¾à¤°à¤¤)","in","91"],["Indonesia","id","62"],["Iran (â€«Ø§ÛŒØ±Ø§Ù†â€¬â€Ž)","ir","98"],["Iraq (â€«Ø§Ù„Ø¹Ø±Ø§Ù‚â€¬â€Ž)","iq","964"],["Ireland","ie","353"],["Isle of Man","im","44",2],["Israel (â€«×™×©×¨××œâ€¬â€Ž)","il","972"],["Italy (Italia)","it","39",0],["Jamaica","jm","1876"],["Japan (æ—¥æœ¬)","jp","81"],["Jersey","je","44",3],["Jordan (â€«Ø§Ù„Ø£Ø±Ø¯Ù†â€¬â€Ž)","jo","962"],["Kazakhstan (ÐšÐ°Ð·Ð°Ñ…ÑÑ‚Ð°Ð½)","kz","7",1],["Kenya","ke","254"],["Kiribati","ki","686"],["Kuwait (â€«Ø§Ù„ÙƒÙˆÙŠØªâ€¬â€Ž)","kw","965"],["Kyrgyzstan (ÐšÑ‹Ñ€Ð³Ñ‹Ð·ÑÑ‚Ð°Ð½)","kg","996"],["Laos (àº¥àº²àº§)","la","856"],["Latvia (Latvija)","lv","371"],["Lebanon (â€«Ù„Ø¨Ù†Ø§Ù†â€¬â€Ž)","lb","961"],["Lesotho","ls","266"],["Liberia","lr","231"],["Libya (â€«Ù„ÙŠØ¨ÙŠØ§â€¬â€Ž)","ly","218"],["Liechtenstein","li","423"],["Lithuania (Lietuva)","lt","370"],["Luxembourg","lu","352"],["Macau (æ¾³é–€)","mo","853"],["Macedonia (FYROM) (ÐœÐ°ÐºÐµÐ´Ð¾Ð½Ð¸Ñ˜Ð°)","mk","389"],["Madagascar (Madagasikara)","mg","261"],["Malawi","mw","265"],["Malaysia","my","60"],["Maldives","mv","960"],["Mali","ml","223"],["Malta","mt","356"],["Marshall Islands","mh","692"],["Martinique","mq","596"],["Mauritania (â€«Ù…ÙˆØ±ÙŠØªØ§Ù†ÙŠØ§â€¬â€Ž)","mr","222"],["Mauritius (Moris)","mu","230"],["Mayotte","yt","262",1],["Mexico (MÃ©xico)","mx","52"],["Micronesia","fm","691"],["Moldova (Republica Moldova)","md","373"],["Monaco","mc","377"],["Mongolia (ÐœÐ¾Ð½Ð³Ð¾Ð»)","mn","976"],["Montenegro (Crna Gora)","me","382"],["Montserrat","ms","1664"],["Morocco (â€«Ø§Ù„Ù…ØºØ±Ø¨â€¬â€Ž)","ma","212",0],["Mozambique (MoÃ§ambique)","mz","258"],["Myanmar (Burma) (á€™á€¼á€”á€ºá€™á€¬)","mm","95"],["Namibia (NamibiÃ«)","na","264"],["Nauru","nr","674"],["Nepal (à¤¨à¥‡à¤ªà¤¾à¤²)","np","977"],["Netherlands (Nederland)","nl","31"],["New Caledonia (Nouvelle-CalÃ©donie)","nc","687"],["New Zealand","nz","64"],["Nicaragua","ni","505"],["Niger (Nijar)","ne","227"],["Nigeria","ng","234"],["Niue","nu","683"],["Norfolk Island","nf","672"],["North Korea (ì¡°ì„  ë¯¼ì£¼ì£¼ì˜ ì¸ë¯¼ ê³µí™”êµ­)","kp","850"],["Northern Mariana Islands","mp","1670"],["Norway (Norge)","no","47",0],["Oman (â€«Ø¹ÙÙ…Ø§Ù†â€¬â€Ž)","om","968"],["Pakistan (â€«Ù¾Ø§Ú©Ø³ØªØ§Ù†â€¬â€Ž)","pk","92"],["Palau","pw","680"],["Palestine (â€«ÙÙ„Ø³Ø·ÙŠÙ†â€¬â€Ž)","ps","970"],["Panama (PanamÃ¡)","pa","507"],["Papua New Guinea","pg","675"],["Paraguay","py","595"],["Peru (PerÃº)","pe","51"],["Philippines","ph","63"],["Poland (Polska)","pl","48"],["Portugal","pt","351"],["Puerto Rico","pr","1",3,["787","939"]],["Qatar (â€«Ù‚Ø·Ø±â€¬â€Ž)","qa","974"],["RÃ©union (La RÃ©union)","re","262",0],["Romania (RomÃ¢nia)","ro","40"],["Russia (Ð Ð¾ÑÑÐ¸Ñ)","ru","7",0],["Rwanda","rw","250"],["Saint BarthÃ©lemy (Saint-BarthÃ©lemy)","bl","590",1],["Saint Helena","sh","290"],["Saint Kitts and Nevis","kn","1869"],["Saint Lucia","lc","1758"],["Saint Martin (Saint-Martin (partie franÃ§aise))","mf","590",2],["Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)","pm","508"],["Saint Vincent and the Grenadines","vc","1784"],["Samoa","ws","685"],["San Marino","sm","378"],["SÃ£o TomÃ© and PrÃ­ncipe (SÃ£o TomÃ© e PrÃ­ncipe)","st","239"],["Saudi Arabia (â€«Ø§Ù„Ù…Ù…Ù„ÙƒØ© Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© Ø§Ù„Ø³Ø¹ÙˆØ¯ÙŠØ©â€¬â€Ž)","sa","966"],["Senegal (SÃ©nÃ©gal)","sn","221"],["Serbia (Ð¡Ñ€Ð±Ð¸Ñ˜Ð°)","rs","381"],["Seychelles","sc","248"],["Sierra Leone","sl","232"],["Singapore","sg","65"],["Sint Maarten","sx","1721"],["Slovakia (Slovensko)","sk","421"],["Slovenia (Slovenija)","si","386"],["Solomon Islands","sb","677"],["Somalia (Soomaaliya)","so","252"],["South Africa","za","27"],["South Korea (ëŒ€í•œë¯¼êµ­)","kr","82"],["South Sudan (â€«Ø¬Ù†ÙˆØ¨ Ø§Ù„Ø³ÙˆØ¯Ø§Ù†â€¬â€Ž)","ss","211"],["Spain (EspaÃ±a)","es","34"],["Sri Lanka (à·à·Šâ€à¶»à·“ à¶½à¶‚à¶šà·à·€)","lk","94"],["Sudan (â€«Ø§Ù„Ø³ÙˆØ¯Ø§Ù†â€¬â€Ž)","sd","249"],["Suriname","sr","597"],["Svalbard and Jan Mayen","sj","47",1],["Swaziland","sz","268"],["Sweden (Sverige)","se","46"],["Switzerland (Schweiz)","ch","41"],["Syria (â€«Ø³ÙˆØ±ÙŠØ§â€¬â€Ž)","sy","963"],["Taiwan (å°ç£)","tw","886"],["Tajikistan","tj","992"],["Tanzania","tz","255"],["Thailand (à¹„à¸—à¸¢)","th","66"],["Timor-Leste","tl","670"],["Togo","tg","228"],["Tokelau","tk","690"],["Tonga","to","676"],["Trinidad and Tobago","tt","1868"],["Tunisia (â€«ØªÙˆÙ†Ø³â€¬â€Ž)","tn","216"],["Turkey (TÃ¼rkiye)","tr","90"],["Turkmenistan","tm","993"],["Turks and Caicos Islands","tc","1649"],["Tuvalu","tv","688"],["U.S. Virgin Islands","vi","1340"],["Uganda","ug","256"],["Ukraine (Ð£ÐºÑ€Ð°Ñ—Ð½Ð°)","ua","380"],["United Arab Emirates (â€«Ø§Ù„Ø¥Ù…Ø§Ø±Ø§Øª Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© Ø§Ù„Ù…ØªØ­Ø¯Ø©â€¬â€Ž)","ae","971"],["United Kingdom","gb","44",0],["United States","us","1",0],["Uruguay","uy","598"],["Uzbekistan (OÊ»zbekiston)","uz","998"],["Vanuatu","vu","678"],["Vatican City (CittÃ  del Vaticano)","va","39",1],["Venezuela","ve","58"],["Vietnam (Viá»‡t Nam)","vn","84"],["Wallis and Futuna","wf","681"],["Western Sahara (â€«Ø§Ù„ØµØ­Ø±Ø§Ø¡ Ø§Ù„ØºØ±Ø¨ÙŠØ©â€¬â€Ž)","eh","212",1],["Yemen (â€«Ø§Ù„ÙŠÙ…Ù†â€¬â€Ž)","ye","967"],["Zambia","zm","260"],["Zimbabwe","zw","263"],["Ã…land Islands","ax","358",1]],k=0;k<j.length;k++){var l=j[k];j[k]={name:l[0],iso2:l[1],dialCode:l[2],priority:l[3]||0,areaCodes:l[4]||null}}});
(function(){var k,aa=this;function m(a,b){var c=a.split("."),d=aa;c[0]in d||!d.execScript||d.execScript("var "+c[0]);for(var e;c.length&&(e=c.shift());)c.length||void 0===b?d=d[e]?d[e]:d[e]={}:d[e]=b}function n(a,b){function c(){}c.prototype=b.prototype;a.ba=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.ha=function(a,c,f){for(var g=Array(arguments.length-2),h=2;h<arguments.length;h++)g[h-2]=arguments[h];return b.prototype[c].apply(a,g)}};function ba(a,b){a.sort(b||ca)}function ca(a,b){return a>b?1:a<b?-1:0};function q(a,b,c){this.e=b;this.s=c.name;this.o=!!c.u;this.i=c.a;this.t=c.type;this.p=!1;switch(this.i){case da:case ea:case fa:case ga:case ha:case ia:case ja:this.p=!0}this.k=c.defaultValue}var ja=1,ia=2,da=3,ea=4,fa=6,ga=16,ha=18;q.prototype.getName=function(){return this.s};function ka(a){var b=[],c=0,d;for(d in a)b[c++]=a[d];return b};function r(a,b,c){this.w=a;this.s=b.name||null;this.h={};for(a=0;a<c.length;a++)b=c[a],this.h[b.e]=b}r.prototype.getName=function(){return this.s};function la(a){a=ka(a.h);ba(a,function(a,c){return a.e-c.e});return a};function t(){this.b={};this.h=this.c().h;this.d=this.r=null}k=t.prototype;k.c=function(){var a=this.constructor;return a.aa||(a.aa=u(a,a.ia))};k.has=function(a){return null!=this.b[a.e]};k.get=function(a,b){return w(this,a.e,b)};k.set=function(a,b){x(this,a.e,b)};k.add=function(a,b){ma(this,a.e,b)};k.clear=function(a){na(this,a.e)};
function pa(a,b){for(var c=la(a.c()),d=0;d<c.length;d++){var e=c[d],f=e.e;if(null!=b.b[f]){a.d&&delete a.d[e.e];var g=11==e.i||10==e.i;if(e.o)for(var e=y(b,f)||[],h=0;h<e.length;h++)ma(a,f,g?e[h].clone():e[h]);else e=y(b,f),g?(g=y(a,f))?pa(g,e):x(a,f,e.clone()):x(a,f,e)}}}k.clone=function(){var a=new this.constructor;a!=this&&(a.b={},a.d&&(a.d={}),pa(a,this));return a};
function y(a,b){var c=a.b[b];if(null==c)return null;if(a.r){if(!(b in a.d)){var d=a.r,e=a.h[b];if(null!=c)if(e.o){for(var f=[],g=0;g<c.length;g++)f[g]=d.n(e,c[g]);c=f}else c=d.n(e,c);return a.d[b]=c}return a.d[b]}return c}function w(a,b,c){var d=y(a,b);return a.h[b].o?d[c||0]:d}function z(a,b){var c;if(null!=a.b[b])c=w(a,b,void 0);else a:{c=a.h[b];if(void 0===c.k){var d=c.t;if(d===Boolean)c.k=!1;else if(d===Number)c.k=0;else if(d===String)c.k=c.p?"0":"";else{c=new d;break a}}c=c.k}return c}
function x(a,b,c){a.b[b]=c;a.d&&(a.d[b]=c)}function ma(a,b,c){a.b[b]||(a.b[b]=[]);a.b[b].push(c);a.d&&delete a.d[b]}function na(a,b){delete a.b[b];a.d&&delete a.d[b]}function u(a,b){var c=[],d=b[0],e;for(e in b)0!=e&&c.push(new q(0,e,b[e]));return new r(a,d,c)};function A(){}A.prototype.l=function(a){new a.w;throw Error("Unimplemented");};A.prototype.n=function(a,b){if(11==a.i||10==a.i)return b instanceof t?b:this.l(a.t.c(),b);if(14==a.i||!a.p)return b;var c=a.t;if(c===String){if("number"==typeof b)return String(b)}else if(c===Number&&"string"==typeof b&&("Infinity"===b||"-Infinity"===b||"NaN"===b||/^-?[0-9]+$/.test(b)))return Number(b);return b};function B(){}n(B,A);B.prototype.l=function(a,b){var c=new a.w;c.r=this;c.b=b;c.d={};return c};function C(){}n(C,B);C.prototype.ca=!1;C.prototype.n=function(a,b){return 8==a.i?!!b:A.prototype.n.apply(this,arguments)};C.prototype.l=function(a,b){var c=b;if(this.ca){var c=[],d;for(d in b)c[parseInt(d,10)+1]=b[d]}return C.ba.l.call(this,a,c)};function D(a,b){null!=a&&this.append.apply(this,arguments)}k=D.prototype;k.f="";k.set=function(a){this.f=""+a};k.append=function(a,b,c){this.f+=a;if(null!=b)for(var d=1;d<arguments.length;d++)this.f+=arguments[d];return this};k.clear=function(){this.f=""};k.toString=function(){return this.f};/*

 Protocol Buffer 2 Copyright 2008 Google Inc.
 All other code copyright its respective owners.
 Copyright (C) 2010 The Libphonenumber Authors

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/
function E(){t.call(this)}var F;n(E,t);function G(){t.call(this)}var H;n(G,t);function I(){t.call(this)}var J;n(I,t);I.prototype.g=function(){return z(this,10)};I.prototype.m=function(a){x(this,10,a)};
E.prototype.c=function(){F||(F=u(E,{0:{name:"NumberFormat",q:"i18n.phonenumbers.NumberFormat"},1:{name:"pattern",required:!0,a:9,type:String},2:{name:"format",required:!0,a:9,type:String},3:{name:"leading_digits_pattern",u:!0,a:9,type:String},4:{name:"national_prefix_formatting_rule",a:9,type:String},6:{name:"national_prefix_optional_when_formatting",a:8,type:Boolean},5:{name:"domestic_carrier_code_formatting_rule",a:9,type:String}}));return F};E.ctor=E;E.ctor.c=E.prototype.c;
G.prototype.c=function(){H||(H=u(G,{0:{name:"PhoneNumberDesc",q:"i18n.phonenumbers.PhoneNumberDesc"},2:{name:"national_number_pattern",a:9,type:String},3:{name:"possible_number_pattern",a:9,type:String},6:{name:"example_number",a:9,type:String},7:{name:"national_number_matcher_data",a:12,type:String},8:{name:"possible_number_matcher_data",a:12,type:String}}));return H};G.ctor=G;G.ctor.c=G.prototype.c;
I.prototype.c=function(){J||(J=u(I,{0:{name:"PhoneMetadata",q:"i18n.phonenumbers.PhoneMetadata"},1:{name:"general_desc",a:11,type:G},2:{name:"fixed_line",a:11,type:G},3:{name:"mobile",a:11,type:G},4:{name:"toll_free",a:11,type:G},5:{name:"premium_rate",a:11,type:G},6:{name:"shared_cost",a:11,type:G},7:{name:"personal_number",a:11,type:G},8:{name:"voip",a:11,type:G},21:{name:"pager",a:11,type:G},25:{name:"uan",a:11,type:G},27:{name:"emergency",a:11,type:G},28:{name:"voicemail",a:11,type:G},24:{name:"no_international_dialling",
a:11,type:G},9:{name:"id",required:!0,a:9,type:String},10:{name:"country_code",a:5,type:Number},11:{name:"international_prefix",a:9,type:String},17:{name:"preferred_international_prefix",a:9,type:String},12:{name:"national_prefix",a:9,type:String},13:{name:"preferred_extn_prefix",a:9,type:String},15:{name:"national_prefix_for_parsing",a:9,type:String},16:{name:"national_prefix_transform_rule",a:9,type:String},18:{name:"same_mobile_and_fixed_line_pattern",a:8,defaultValue:!1,type:Boolean},19:{name:"number_format",
u:!0,a:11,type:E},20:{name:"intl_number_format",u:!0,a:11,type:E},22:{name:"main_country_for_code",a:8,defaultValue:!1,type:Boolean},23:{name:"leading_digits",a:9,type:String},26:{name:"leading_zero_possible",a:8,defaultValue:!1,type:Boolean}}));return J};I.ctor=I;I.ctor.c=I.prototype.c;/*

 Protocol Buffer 2 Copyright 2008 Google Inc.
 All other code copyright its respective owners.
 Copyright (C) 2010 The Libphonenumber Authors

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/
function K(){t.call(this)}var L;n(K,t);K.prototype.g=function(){return z(this,1)};K.prototype.m=function(a){x(this,1,a)};K.prototype.getExtension=function(){return w(this,3)};var qa={ga:1,fa:5,ea:10,da:20};
K.prototype.c=function(){L||(L=u(K,{0:{name:"PhoneNumber",q:"i18n.phonenumbers.PhoneNumber"},1:{name:"country_code",required:!0,a:5,type:Number},2:{name:"national_number",required:!0,a:4,type:Number},3:{name:"extension",a:9,type:String},4:{name:"italian_leading_zero",a:8,type:Boolean},8:{name:"number_of_leading_zeros",a:5,defaultValue:1,type:Number},5:{name:"raw_input",a:9,type:String},6:{name:"country_code_source",a:14,defaultValue:1,type:qa},7:{name:"preferred_domestic_carrier_code",a:9,type:String}}));
return L};K.ctor=K;K.ctor.c=K.prototype.c;/*

 Copyright (C) 2010 The Libphonenumber Authors

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/
var M={1:"US AG AI AS BB BM BS CA DM DO GD GU JM KN KY LC MP MS PR SX TC TT VC VG VI".split(" "),7:["RU","KZ"],20:["EG"],27:["ZA"],30:["GR"],31:["NL"],32:["BE"],33:["FR"],34:["ES"],36:["HU"],39:["IT","VA"],40:["RO"],41:["CH"],43:["AT"],44:["GB","GG","IM","JE"],45:["DK"],46:["SE"],47:["NO","SJ"],48:["PL"],49:["DE"],51:["PE"],52:["MX"],53:["CU"],54:["AR"],55:["BR"],56:["CL"],57:["CO"],58:["VE"],60:["MY"],61:["AU","CC","CX"],62:["ID"],63:["PH"],64:["NZ"],65:["SG"],66:["TH"],81:["JP"],82:["KR"],84:["VN"],
86:["CN"],90:["TR"],91:["IN"],92:["PK"],93:["AF"],94:["LK"],95:["MM"],98:["IR"],211:["SS"],212:["MA","EH"],213:["DZ"],216:["TN"],218:["LY"],220:["GM"],221:["SN"],222:["MR"],223:["ML"],224:["GN"],225:["CI"],226:["BF"],227:["NE"],228:["TG"],229:["BJ"],230:["MU"],231:["LR"],232:["SL"],233:["GH"],234:["NG"],235:["TD"],236:["CF"],237:["CM"],238:["CV"],239:["ST"],240:["GQ"],241:["GA"],242:["CG"],243:["CD"],244:["AO"],245:["GW"],246:["IO"],247:["AC"],248:["SC"],249:["SD"],250:["RW"],251:["ET"],252:["SO"],
253:["DJ"],254:["KE"],255:["TZ"],256:["UG"],257:["BI"],258:["MZ"],260:["ZM"],261:["MG"],262:["RE","YT"],263:["ZW"],264:["NA"],265:["MW"],266:["LS"],267:["BW"],268:["SZ"],269:["KM"],290:["SH","TA"],291:["ER"],297:["AW"],298:["FO"],299:["GL"],350:["GI"],351:["PT"],352:["LU"],353:["IE"],354:["IS"],355:["AL"],356:["MT"],357:["CY"],358:["FI","AX"],359:["BG"],370:["LT"],371:["LV"],372:["EE"],373:["MD"],374:["AM"],375:["BY"],376:["AD"],377:["MC"],378:["SM"],380:["UA"],381:["RS"],382:["ME"],385:["HR"],386:["SI"],
387:["BA"],389:["MK"],420:["CZ"],421:["SK"],423:["LI"],500:["FK"],501:["BZ"],502:["GT"],503:["SV"],504:["HN"],505:["NI"],506:["CR"],507:["PA"],508:["PM"],509:["HT"],590:["GP","BL","MF"],591:["BO"],592:["GY"],593:["EC"],594:["GF"],595:["PY"],596:["MQ"],597:["SR"],598:["UY"],599:["CW","BQ"],670:["TL"],672:["NF"],673:["BN"],674:["NR"],675:["PG"],676:["TO"],677:["SB"],678:["VU"],679:["FJ"],680:["PW"],681:["WF"],682:["CK"],683:["NU"],685:["WS"],686:["KI"],687:["NC"],688:["TV"],689:["PF"],690:["TK"],691:["FM"],
692:["MH"],800:["001"],808:["001"],850:["KP"],852:["HK"],853:["MO"],855:["KH"],856:["LA"],870:["001"],878:["001"],880:["BD"],881:["001"],882:["001"],883:["001"],886:["TW"],888:["001"],960:["MV"],961:["LB"],962:["JO"],963:["SY"],964:["IQ"],965:["KW"],966:["SA"],967:["YE"],968:["OM"],970:["PS"],971:["AE"],972:["IL"],973:["BH"],974:["QA"],975:["BT"],976:["MN"],977:["NP"],979:["001"],992:["TJ"],993:["TM"],994:["AZ"],995:["GE"],996:["KG"],998:["UZ"]},ra={AC:[,[,,"[46]\\d{4}|[01589]\\d{5}","\\d{5,6}"],
[,,"6[2-467]\\d{3}","\\d{5}",,,"62889"],[,,"4\\d{4}","\\d{5}",,,"40123"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"AC",247,"00",,,,,,,,,,[,,"NA","NA"],,,[,,"NA","NA"],[,,"[01589]\\d{5}","\\d{6}",,,"542011"],,,[,,"NA","NA"]],AD:[,[,,"(?:[346-9]|180)\\d{5}","\\d{6,8}"],[,,"[78]\\d{5}","\\d{6}",,,"712345"],[,,"[346]\\d{5}","\\d{6}",,,"312345"],[,,"180[02]\\d{4}","\\d{8}",,,"18001234"],[,,"9\\d{5}","\\d{6}",,,"912345"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"AD",376,"00",
,,,,,,,[[,"(\\d{3})(\\d{3})","$1 $2",["[346-9]"]],[,"(180[02])(\\d{4})","$1 $2",["1"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],AE:[,[,,"[2-79]\\d{7,8}|800\\d{2,9}","\\d{5,12}"],[,,"[2-4679][2-8]\\d{6}","\\d{7,8}",,,"22345678"],[,,"5[0256]\\d{7}","\\d{9}",,,"501234567"],[,,"400\\d{6}|800\\d{2,9}","\\d{5,12}",,,"800123456"],[,,"900[02]\\d{5}","\\d{9}",,,"900234567"],[,,"700[05]\\d{5}","\\d{9}",,,"700012345"],[,,"NA","NA"],[,,"NA","NA"],"AE",971,"00","0",,,"0",,,,[[,"([2-4679])(\\d{3})(\\d{4})",
"$1 $2 $3",["[2-4679][2-8]"],"0$1"],[,"(5[0256])(\\d{3})(\\d{4})","$1 $2 $3",["5"],"0$1"],[,"([479]00)(\\d)(\\d{5})","$1 $2 $3",["[479]0"],"$1"],[,"([68]00)(\\d{2,9})","$1 $2",["60|8"],"$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"600[25]\\d{5}","\\d{9}",,,"600212345"],,,[,,"NA","NA"]],AF:[,[,,"[2-7]\\d{8}","\\d{7,9}"],[,,"(?:[25][0-8]|[34][0-4]|6[0-5])[2-9]\\d{6}","\\d{7,9}",,,"234567890"],[,,"7(?:[014-9]\\d{7}|2[89]\\d{6})","\\d{9}",,,"701234567"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],
[,,"NA","NA"],"AF",93,"00","0",,,"0",,,,[[,"([2-7]\\d)(\\d{3})(\\d{4})","$1 $2 $3",["[2-7]"],"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],AG:[,[,,"[2589]\\d{9}","\\d{7}(?:\\d{3})?"],[,,"268(?:4(?:6[0-38]|84)|56[0-2])\\d{4}","\\d{7}(?:\\d{3})?",,,"2684601234"],[,,"268(?:464|7(?:2[0-9]|64|7[0-689]|8[02-68]))\\d{4}","\\d{10}",,,"2684641234"],[,,"8(?:00|44|55|66|77|88)[2-9]\\d{6}","\\d{10}",,,"8002123456"],[,,"900[2-9]\\d{6}","\\d{10}",,,"9002123456"],[,,"NA","NA"],[,,"5(?:00|33|44|66|77|88)[2-9]\\d{6}",
"\\d{10}",,,"5002345678"],[,,"26848[01]\\d{4}","\\d{10}",,,"2684801234"],"AG",1,"011","1",,,"1",,,,,,[,,"26840[69]\\d{4}","\\d{10}",,,"2684061234"],,"268",[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],AI:[,[,,"[2589]\\d{9}","\\d{7}(?:\\d{3})?"],[,,"2644(?:6[12]|9[78])\\d{4}","\\d{7}(?:\\d{3})?",,,"2644612345"],[,,"264(?:235|476|5(?:3[6-9]|8[1-4])|7(?:29|72))\\d{4}","\\d{10}",,,"2642351234"],[,,"8(?:00|44|55|66|77|88)[2-9]\\d{6}","\\d{10}",,,"8002123456"],[,,"900[2-9]\\d{6}","\\d{10}",,,"9002123456"],
[,,"NA","NA"],[,,"5(?:00|33|44|66|77|88)[2-9]\\d{6}","\\d{10}",,,"5002345678"],[,,"NA","NA"],"AI",1,"011","1",,,"1",,,,,,[,,"NA","NA"],,"264",[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],AL:[,[,,"[2-57]\\d{7}|6\\d{8}|8\\d{5,7}|9\\d{5}","\\d{5,9}"],[,,"(?:2(?:[168][1-9]|[247]\\d|9[1-7])|3(?:1[1-3]|[2-6]\\d|[79][1-8]|8[1-9])|4\\d{2}|5(?:1[1-4]|[2-578]\\d|6[1-5]|9[1-7])|8(?:[19][1-5]|[2-6]\\d|[78][1-7]))\\d{5}","\\d{5,8}",,,"22345678"],[,,"6[6-9]\\d{7}","\\d{9}",,,"661234567"],[,,"800\\d{4}","\\d{7}",
,,"8001234"],[,,"900\\d{3}","\\d{6}",,,"900123"],[,,"808\\d{3}","\\d{6}",,,"808123"],[,,"700\\d{5}","\\d{8}",,,"70012345"],[,,"NA","NA"],"AL",355,"00","0",,,"0",,,,[[,"(4)(\\d{3})(\\d{4})","$1 $2 $3",["4[0-6]"],"0$1"],[,"(6[6-9])(\\d{3})(\\d{4})","$1 $2 $3",["6"],"0$1"],[,"(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[2358][2-5]|4[7-9]"],"0$1"],[,"(\\d{3})(\\d{3,5})","$1 $2",["[235][16-9]|8[016-9]|[79]"],"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],AM:[,[,,"[1-9]\\d{7}","\\d{5,8}"],
[,,"(?:1[01]\\d|2(?:2[2-46]|3[1-8]|4[2-69]|5[2-7]|6[1-9]|8[1-7])|3[12]2|47\\d)\\d{5}","\\d{5,8}",,,"10123456"],[,,"(?:4[139]|55|77|9[1-9])\\d{6}","\\d{8}",,,"77123456"],[,,"800\\d{5}","\\d{8}",,,"80012345"],[,,"90[016]\\d{5}","\\d{8}",,,"90012345"],[,,"80[1-4]\\d{5}","\\d{8}",,,"80112345"],[,,"NA","NA"],[,,"60[2-6]\\d{5}","\\d{8}",,,"60271234"],"AM",374,"00","0",,,"0",,,,[[,"(\\d{2})(\\d{6})","$1 $2",["1|47"],"(0$1)"],[,"(\\d{2})(\\d{6})","$1 $2",["4[139]|[5-7]|9[1-9]"],"0$1"],[,"(\\d{3})(\\d{5})",
"$1 $2",["[23]"],"(0$1)"],[,"(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3",["8|90"],"0 $1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],AO:[,[,,"[29]\\d{8}","\\d{9}"],[,,"2\\d(?:[26-9]\\d|\\d[26-9])\\d{5}","\\d{9}",,,"222123456"],[,,"9[1-49]\\d{7}","\\d{9}",,,"923123456"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"AO",244,"00",,,,,,,,[[,"(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],AR:[,[,,"11\\d{8}|[2368]\\d{9}|9\\d{10}",
"\\d{6,11}"],[,,"11\\d{8}|(?:2(?:2(?:[013]\\d|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[067]\\d)|4(?:7[3-8]|9\\d)|6(?:[01346]\\d|2[24-6]|5[15-8])|80\\d|9(?:[0124789]\\d|3[1-6]|5[234]|6[2-46]))|3(?:3(?:2[79]|6\\d|8[2578])|4(?:[78]\\d|0[0124-9]|[1-35]\\d|4[24-7]|6[02-9]|9[123678])|5(?:[138]\\d|2[1245]|4[1-9]|6[2-4]|7[1-6])|6[24]\\d|7(?:[0469]\\d|1[1568]|2[013-9]|3[145]|5[14-8]|7[2-57]|8[0-24-9])|8(?:[013578]\\d|2[15-7]|4[13-6]|6[1-357-9]|9[124]))|670\\d)\\d{6}",
"\\d{6,10}",,,"1123456789"],[,,"675\\d{7}|9(?:11[2-9]\\d{7}|(?:2(?:2[013]|3[067]|49|6[01346]|80|9[147-9])|3(?:36|4[12358]|5[138]|6[24]|7[069]|8[013578]))[2-9]\\d{6}|\\d{4}[2-9]\\d{5})","\\d{6,11}",,,"91123456789"],[,,"800\\d{7}","\\d{10}",,,"8001234567"],[,,"60[04579]\\d{7}","\\d{10}",,,"6001234567"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"AR",54,"00","0",,,"0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))?15)?",
"9$1",,,[[,"([68]\\d{2})(\\d{3})(\\d{4})","$1-$2-$3",["[68]"],"0$1"],[,"(\\d{2})(\\d{4})","$1-$2",["[2-9]"],"$1"],[,"(\\d{3})(\\d{4})","$1-$2",["[2-9]"],"$1"],[,"(\\d{4})(\\d{4})","$1-$2",["[2-9]"],"$1"],[,"(9)(11)(\\d{4})(\\d{4})","$2 15-$3-$4",["911"],"0$1"],[,"(9)(\\d{3})(\\d{3})(\\d{4})","$2 15-$3-$4",["9(?:2[234689]|3[3-8])","9(?:2(?:2[013]|3[067]|49|6[01346]|80|9[147-9])|3(?:36|4[1-358]|5[138]|6[24]|7[069]|8[013578]))","9(?:2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3[456]|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45])))",
"9(?:2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3(?:4|5[014]|6[1239])|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45])))"],"0$1"],[,"(9)(\\d{4})(\\d{2})(\\d{4})","$2 15-$3-$4",["9[23]"],"0$1"],[,"(11)(\\d{4})(\\d{4})","$1 $2-$3",["1"],"0$1",,1],[,"(\\d{3})(\\d{3})(\\d{4})","$1 $2-$3",["2(?:2[013]|3[067]|49|6[01346]|80|9[147-9])|3(?:36|4[1-358]|5[138]|6[24]|7[069]|8[013578])","2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3[456]|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45]))",
"2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3(?:4|5[014]|6[1239])|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45]))"],"0$1",,1],[,"(\\d{4})(\\d{2})(\\d{4})","$1 $2-$3",["[23]"],"0$1",,1],[,"(\\d{3})","$1",["1[012]|911"],"$1"]],[[,"([68]\\d{2})(\\d{3})(\\d{4})","$1-$2-$3",["[68]"],"0$1"],[,"(9)(11)(\\d{4})(\\d{4})","$1 $2 $3-$4",["911"]],[,"(9)(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3-$4",["9(?:2[234689]|3[3-8])","9(?:2(?:2[013]|3[067]|49|6[01346]|80|9[147-9])|3(?:36|4[1-358]|5[138]|6[24]|7[069]|8[013578]))",
"9(?:2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3[456]|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45])))","9(?:2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3(?:4|5[014]|6[1239])|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45])))"]],[,"(9)(\\d{4})(\\d{2})(\\d{4})","$1 $2 $3-$4",["9[23]"]],[,"(11)(\\d{4})(\\d{4})","$1 $2-$3",["1"],"0$1",
,1],[,"(\\d{3})(\\d{3})(\\d{4})","$1 $2-$3",["2(?:2[013]|3[067]|49|6[01346]|80|9[147-9])|3(?:36|4[1-358]|5[138]|6[24]|7[069]|8[013578])","2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3[456]|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45]))","2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3(?:4|5[014]|6[1239])|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45]))"],
"0$1",,1],[,"(\\d{4})(\\d{2})(\\d{4})","$1 $2-$3",["[23]"],"0$1",,1]],[,,"NA","NA"],,,[,,"810\\d{7}","\\d{10}",,,"8101234567"],[,,"810\\d{7}","\\d{10}",,,"8101234567"],,,[,,"NA","NA"]],AS:[,[,,"[5689]\\d{9}","\\d{7}(?:\\d{3})?"],[,,"6846(?:22|33|44|55|77|88|9[19])\\d{4}","\\d{7}(?:\\d{3})?",,,"6846221234"],[,,"684(?:2(?:5[2468]|72)|7(?:3[13]|70))\\d{4}","\\d{10}",,,"6847331234"],[,,"8(?:00|44|55|66|77|88)[2-9]\\d{6}","\\d{10}",,,"8002123456"],[,,"900[2-9]\\d{6}","\\d{10}",,,"9002123456"],[,,"NA",
"NA"],[,,"5(?:00|33|44|66|77|88)[2-9]\\d{6}","\\d{10}",,,"5002345678"],[,,"NA","NA"],"AS",1,"011","1",,,"1",,,,,,[,,"NA","NA"],,"684",[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],AT:[,[,,"[1-9]\\d{3,12}","\\d{3,13}"],[,,"1\\d{3,12}|(?:2(?:1[467]|2[13-8]|5[2357]|6[1-46-8]|7[1-8]|8[124-7]|9[1458])|3(?:1[1-8]|3[23568]|4[5-7]|5[1378]|6[1-38]|8[3-68])|4(?:2[1-8]|35|63|7[1368]|8[2457])|5(?:12|2[1-8]|3[357]|4[147]|5[12578]|6[37])|6(?:13|2[1-47]|4[1-35-8]|5[468]|62)|7(?:2[1-8]|3[25]|4[13478]|5[68]|6[16-8]|7[1-6]|9[45]))\\d{3,10}",
"\\d{3,13}",,,"1234567890"],[,,"6(?:5[0-3579]|6[013-9]|[7-9]\\d)\\d{4,10}","\\d{7,13}",,,"664123456"],[,,"800\\d{6,10}","\\d{9,13}",,,"800123456"],[,,"(?:9(?:0[01]|3[019]))\\d{6,10}","\\d{9,13}",,,"900123456"],[,,"8(?:10\\d|2(?:[01]\\d|8\\d?))\\d{5,9}","\\d{8,13}",,,"810123456"],[,,"NA","NA"],[,,"780\\d{6,10}","\\d{9,13}",,,"780123456"],"AT",43,"00","0",,,"0",,,,[[,"(116\\d{3})","$1",["116"],"$1"],[,"(1)(\\d{3,12})","$1 $2",["1"],"0$1"],[,"(5\\d)(\\d{3,5})","$1 $2",["5[079]"],"0$1"],[,"(5\\d)(\\d{3})(\\d{3,4})",
"$1 $2 $3",["5[079]"],"0$1"],[,"(5\\d)(\\d{4})(\\d{4,7})","$1 $2 $3",["5[079]"],"0$1"],[,"(\\d{3})(\\d{3,10})","$1 $2",["316|46|51|732|6(?:5[0-3579]|[6-9])|7(?:[28]0)|[89]"],"0$1"],[,"(\\d{4})(\\d{3,9})","$1 $2",["2|3(?:1[1-578]|[3-8])|4[2378]|5[2-6]|6(?:[12]|4[1-9]|5[468])|7(?:2[1-8]|35|4[1-8]|[5-79])"],"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"5(?:(?:0[1-9]|17)\\d{2,10}|[79]\\d{3,11})|720\\d{6,10}","\\d{5,13}",,,"50123"],,,[,,"NA","NA"]],AU:[,[,,"[1-578]\\d{5,9}","\\d{6,10}"],[,,"[237]\\d{8}|8(?:[68]\\d{3}|7[0-69]\\d{2}|9(?:[02-9]\\d{2}|1(?:[0-57-9]\\d|6[0135-9])))\\d{4}",
"\\d{8,9}",,,"212345678"],[,,"14(?:5\\d|71)\\d{5}|4(?:[0-2]\\d|3[0-57-9]|4[47-9]|5[0-25-9]|6[6-9]|7[02-9]|8[147-9]|9[017-9])\\d{6}","\\d{9}",,,"412345678"],[,,"180(?:0\\d{3}|2)\\d{3}","\\d{7,10}",,,"1800123456"],[,,"190[0126]\\d{6}","\\d{10}",,,"1900123456"],[,,"13(?:00\\d{2})?\\d{4}","\\d{6,10}",,,"1300123456"],[,,"500\\d{6}","\\d{9}",,,"500123456"],[,,"550\\d{6}","\\d{9}",,,"550123456"],"AU",61,"(?:14(?:1[14]|34|4[17]|[56]6|7[47]|88))?001[14-689]","0",,,"0",,"0011",,[[,"([2378])(\\d{4})(\\d{4})",
"$1 $2 $3",["[2378]"],"(0$1)"],[,"(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[45]|14"],"0$1"],[,"(16)(\\d{3})(\\d{2,4})","$1 $2 $3",["16"],"0$1"],[,"(1[389]\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["1(?:[38]0|90)","1(?:[38]00|90)"],"$1"],[,"(180)(2\\d{3})","$1 $2",["180","1802"],"$1"],[,"(19\\d)(\\d{3})","$1 $2",["19[13]"],"$1"],[,"(19\\d{2})(\\d{4})","$1 $2",["19[67]"],"$1"],[,"(13)(\\d{2})(\\d{2})","$1 $2 $3",["13[1-9]"],"$1"]],,[,,"16\\d{3,7}","\\d{5,9}",,,"1612345"],1,,[,,"1(?:3(?:\\d{4}|00\\d{6})|80(?:0\\d{6}|2\\d{3}))",
"\\d{6,10}",,,"1300123456"],[,,"NA","NA"],,,[,,"NA","NA"]],AW:[,[,,"[25-9]\\d{6}","\\d{7}"],[,,"5(?:2\\d|8[1-9])\\d{4}","\\d{7}",,,"5212345"],[,,"(?:5(?:6\\d|9[2-478])|6(?:[039]0|22|4[01]|6[0-2])|7[34]\\d|9(?:6[45]|9[4-8]))\\d{4}","\\d{7}",,,"5601234"],[,,"800\\d{4}","\\d{7}",,,"8001234"],[,,"900\\d{4}","\\d{7}",,,"9001234"],[,,"NA","NA"],[,,"NA","NA"],[,,"28\\d{5}|501\\d{4}","\\d{7}",,,"5011234"],"AW",297,"00",,,,,,,,[[,"(\\d{3})(\\d{4})","$1 $2"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,
[,,"NA","NA"]],AX:[,[,,"[135]\\d{5,9}|[27]\\d{4,9}|4\\d{5,10}|6\\d{7,8}|8\\d{6,9}","\\d{5,12}"],[,,"18[1-8]\\d{3,9}","\\d{6,12}",,,"1812345678"],[,,"4\\d{5,10}|50\\d{4,8}","\\d{6,11}",,,"412345678"],[,,"800\\d{4,7}","\\d{7,10}",,,"8001234567"],[,,"[67]00\\d{5,6}","\\d{8,9}",,,"600123456"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"AX",358,"00|99[049]","0",,,"0",,,,,,[,,"NA","NA"],,,[,,"[13]00\\d{3,7}|2(?:0(?:0\\d{3,7}|2[023]\\d{1,6}|9[89]\\d{1,6}))|60(?:[12]\\d{5,6}|6\\d{7})|7(?:1\\d{7}|3\\d{8}|5[03-9]\\d{2,7})",
"\\d{5,10}",,,"100123"],[,,"[13]0\\d{4,8}|2(?:0(?:[016-8]\\d{3,7}|[2-59]\\d{2,7})|9\\d{4,8})|60(?:[12]\\d{5,6}|6\\d{7})|7(?:1\\d{7}|3\\d{8}|5[03-9]\\d{2,7})","\\d{5,10}",,,"10112345"],,,[,,"NA","NA"]],AZ:[,[,,"[1-9]\\d{8}","\\d{7,9}"],[,,"(?:1[28]\\d|2(?:02|1[24]|2[2-4]|33|[45]2|6[23])|365)\\d{6}","\\d{7,9}",,,"123123456"],[,,"(?:4[04]|5[015]|60|7[07])\\d{7}","\\d{9}",,,"401234567"],[,,"88\\d{7}","\\d{9}",,,"881234567"],[,,"900200\\d{3}","\\d{9}",,,"900200123"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA",
"NA"],"AZ",994,"00","0",,,"0",,,,[[,"(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["(?:1[28]|2(?:[45]2|[0-36])|365)"],"(0$1)"],[,"(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[4-8]"],"0$1"],[,"(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["9"],"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],BA:[,[,,"[3-9]\\d{7,8}","\\d{6,9}"],[,,"(?:[35]\\d|49)\\d{6}","\\d{6,8}",,,"30123456"],[,,"6(?:03|44|71|[1-356])\\d{6}","\\d{8,9}",,,"61123456"],[,,"8[08]\\d{6}","\\d{8}",,,"80123456"],
[,,"9[0246]\\d{6}","\\d{8}",,,"90123456"],[,,"8[12]\\d{6}","\\d{8}",,,"82123456"],[,,"NA","NA"],[,,"NA","NA"],"BA",387,"00","0",,,"0",,,,[[,"(\\d{2})(\\d{3})(\\d{3})","$1 $2-$3",["[3-5]"],"0$1"],[,"(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["6[1-356]|[7-9]"],"0$1"],[,"(\\d{2})(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3 $4",["6[047]"],"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"70[23]\\d{5}","\\d{8}",,,"70223456"],,,[,,"NA","NA"]],BB:[,[,,"[2589]\\d{9}","\\d{7}(?:\\d{3})?"],[,,"246(?:2(?:2[78]|7[0-4])|4(?:1[024-6]|2\\d|3[2-9])|5(?:20|[34]\\d|54|7[1-3])|6(?:2\\d|38)|7(?:37|57)|9(?:1[89]|63))\\d{4}",
"\\d{7}(?:\\d{3})?",,,"2464123456"],[,,"246(?:2(?:[356]\\d|4[0-57-9]|8[0-79])|45\\d|8(?:[2-5]\\d|83))\\d{4}","\\d{10}",,,"2462501234"],[,,"8(?:00|44|55|66|77|88)[2-9]\\d{6}","\\d{10}",,,"8002123456"],[,,"900\\d{7}|246976\\d{4}","\\d{10}",,,"9002123456"],[,,"NA","NA"],[,,"5(?:00|33|44|66|77|88)[2-9]\\d{6}","\\d{10}",,,"5002345678"],[,,"24631\\d{5}","\\d{10}",,,"2463101234"],"BB",1,"011","1",,,"1",,,,,,[,,"NA","NA"],,"246",[,,"NA","NA"],[,,"246(?:292|41[7-9]|43[01])\\d{4}","\\d{10}",,,"2464301234"],
,,[,,"NA","NA"]],BD:[,[,,"[2-79]\\d{5,9}|1\\d{9}|8[0-7]\\d{4,8}","\\d{6,10}"],[,,"2(?:550\\d|7(?:1[0-267]|2[0-289]|3[0-29]|[46][01]|5[1-3]|7[017]|91)|8(?:0[125]|[139][1-6]|2[0157-9]|6[1-35]|7[1-5]|8[1-8]|90)|9(?:0[0-2]|1[0-4]|2[568]|3[3-6]|5[5-7]|6[0167]|7[15]|8[0146-8]))\\d{4}|3(?:12?[5-7]\\d{2}|0(?:2(?:[025-79]\\d|[348]\\d{1,2})|3(?:[2-4]\\d|[56]\\d?))|2(?:1\\d{2}|2(?:[12]\\d|[35]\\d{1,2}|4\\d?))|3(?:1\\d{2}|2(?:[2356]\\d|4\\d{1,2}))|4(?:1\\d{2}|2(?:2\\d{1,2}|[47]|5\\d{2}))|5(?:1\\d{2}|29)|[67]1\\d{2}|8(?:1\\d{2}|2(?:2\\d{2}|3|4\\d)))\\d{3}|4(?:0(?:2(?:[09]\\d|7)|33\\d{2})|1\\d{3}|2(?:1\\d{2}|2(?:[25]\\d?|[348]\\d|[67]\\d{1,2}))|3(?:1\\d{2}(?:\\d{2})?|2(?:[045]\\d|[236-9]\\d{1,2})|32\\d{2})|4(?:[18]\\d{2}|2(?:[2-46]\\d{2}|3)|5[25]\\d{2})|5(?:1\\d{2}|2(?:3\\d|5))|6(?:[18]\\d{2}|2(?:3(?:\\d{2})?|[46]\\d{1,2}|5\\d{2}|7\\d)|5(?:3\\d?|4\\d|[57]\\d{1,2}|6\\d{2}|8))|71\\d{2}|8(?:[18]\\d{2}|23\\d{2}|54\\d{2})|9(?:[18]\\d{2}|2[2-5]\\d{2}|53\\d{1,2}))\\d{3}|5(?:02[03489]\\d{2}|1\\d{2}|2(?:1\\d{2}|2(?:2(?:\\d{2})?|[457]\\d{2}))|3(?:1\\d{2}|2(?:[37](?:\\d{2})?|[569]\\d{2}))|4(?:1\\d{2}|2[46]\\d{2})|5(?:1\\d{2}|26\\d{1,2})|6(?:[18]\\d{2}|2|53\\d{2})|7(?:1|24)\\d{2}|8(?:1|26)\\d{2}|91\\d{2})\\d{3}|6(?:0(?:1\\d{2}|2(?:3\\d{2}|4\\d{1,2}))|2(?:2[2-5]\\d{2}|5(?:[3-5]\\d{2}|7)|8\\d{2})|3(?:1|2[3478])\\d{2}|4(?:1|2[34])\\d{2}|5(?:1|2[47])\\d{2}|6(?:[18]\\d{2}|6(?:2(?:2\\d|[34]\\d{2})|5(?:[24]\\d{2}|3\\d|5\\d{1,2})))|72[2-5]\\d{2}|8(?:1\\d{2}|2[2-5]\\d{2})|9(?:1\\d{2}|2[2-6]\\d{2}))\\d{3}|7(?:(?:02|[3-589]1|6[12]|72[24])\\d{2}|21\\d{3}|32)\\d{3}|8(?:(?:4[12]|[5-7]2|1\\d?)|(?:0|3[12]|[5-7]1|217)\\d)\\d{4}|9(?:[35]1|(?:[024]2|81)\\d|(?:1|[24]1)\\d{2})\\d{3}",
"\\d{6,9}",,,"27111234"],[,,"(?:1[13-9]\\d|(?:3[78]|44)[02-9]|6(?:44|6[02-9]))\\d{7}","\\d{10}",,,"1812345678"],[,,"80[03]\\d{7}","\\d{10}",,,"8001234567"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"96(?:0[49]|1[0-4]|6[69])\\d{6}","\\d{10}",,,"9604123456"],"BD",880,"00[12]?","0",,,"0",,"00",,[[,"(2)(\\d{7,8})","$1-$2",["2"],"0$1"],[,"(\\d{2})(\\d{4,6})","$1-$2",["[3-79]1"],"0$1"],[,"(\\d{4})(\\d{3,6})","$1-$2",["1|3(?:0|[2-58]2)|4(?:0|[25]2|3[23]|[4689][25])|5(?:[02-578]2|6[25])|6(?:[0347-9]2|[26][25])|7[02-9]2|8(?:[023][23]|[4-7]2)|9(?:[02][23]|[458]2|6[016])"],
"0$1"],[,"(\\d{3})(\\d{3,7})","$1-$2",["[3-79][2-9]|8"],"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],BE:[,[,,"[1-9]\\d{7,8}","\\d{8,9}"],[,,"(?:1[0-69]|[23][2-8]|4[23]|5\\d|6[013-57-9]|71|8[1-79]|9[2-4])\\d{6}|80[2-8]\\d{5}","\\d{8}",,,"12345678"],[,,"4(?:6[0135-8]|[79]\\d|8[3-9])\\d{6}","\\d{9}",,,"470123456"],[,,"800\\d{5}","\\d{8}",,,"80012345"],[,,"(?:70[2-467]|90[0-79])\\d{5}","\\d{8}",,,"90123456"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"BE",32,"00","0",,,"0",,,,
[[,"(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["4[6-9]"],"0$1"],[,"(\\d)(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[23]|4[23]|9[2-4]"],"0$1"],[,"(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[156]|7[018]|8(?:0[1-9]|[1-79])"],"0$1"],[,"(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3",["(?:80|9)0"],"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"78\\d{6}","\\d{8}",,,"78123456"],,,[,,"NA","NA"]],BF:[,[,,"[267]\\d{7}","\\d{8}"],[,,"2(?:0(?:49|5[23]|9[016-9])|4(?:4[569]|5[4-6]|7[0179])|5(?:[34]\\d|50))\\d{4}",
"\\d{8}",,,"20491234"],[,,"6(?:[0-689]\\d|7[0-5])\\d{5}|7\\d{7}","\\d{8}",,,"70123456"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"BF",226,"00",,,,,,,,[[,"(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],BG:[,[,,"[23567]\\d{5,7}|[489]\\d{6,8}","\\d{5,9}"],[,,"2(?:[0-8]\\d{5,6}|9\\d{4,6})|(?:[36]\\d|5[1-9]|8[1-6]|9[1-7])\\d{5,6}|(?:4(?:[124-7]\\d|3[1-6])|7(?:0[1-9]|[1-9]\\d))\\d{4,5}","\\d{5,8}",,,"2123456"],
[,,"(?:8[7-9]\\d|9(?:8\\d|99))\\d{6}|4(?:3[0789]|8\\d)\\d{5}","\\d{8,9}",,,"48123456"],[,,"800\\d{5}","\\d{8}",,,"80012345"],[,,"90\\d{6}","\\d{8}",,,"90123456"],[,,"NA","NA"],[,,"700\\d{5}","\\d{5,9}",,,"70012345"],[,,"NA","NA"],"BG",359,"00","0",,,"0",,,,[[,"(2)(\\d{5})","$1 $2",["29"],"0$1"],[,"(2)(\\d{3})(\\d{3,4})","$1 $2 $3",["2"],"0$1"],[,"(\\d{3})(\\d{4})","$1 $2",["43[124-7]|70[1-9]"],"0$1"],[,"(\\d{3})(\\d{3})(\\d{2})","$1 $2 $3",["43[124-7]|70[1-9]"],"0$1"],[,"(\\d{3})(\\d{2})(\\d{3})",
"$1 $2 $3",["[78]00"],"0$1"],[,"(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["999"],"0$1"],[,"(\\d{2})(\\d{3})(\\d{2,3})","$1 $2 $3",["[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]"],"0$1"],[,"(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["48|8[7-9]|9[08]"],"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],BH:[,[,,"[136-9]\\d{7}","\\d{8}"],[,,"(?:1(?:3[1356]|6[0156]|7\\d)\\d|6(?:1[16]\\d|500|6(?:0\\d|3[12]|44|7[7-9])|9[69][69])|7(?:1(?:11|78)|7\\d{2}))\\d{4}","\\d{8}",,,"17001234"],[,,"(?:3(?:[1-4679]\\d|5[013569]|8[0-47-9])\\d|6(?:3(?:00|33|6[16])|6(?:[69]\\d|3[03-9]|7[0-6])))\\d{4}",
"\\d{8}",,,"36001234"],[,,"80\\d{6}","\\d{8}",,,"80123456"],[,,"(?:87|9[014578])\\d{6}","\\d{8}",,,"90123456"],[,,"84\\d{6}","\\d{8}",,,"84123456"],[,,"NA","NA"],[,,"NA","NA"],"BH",973,"00",,,,,,,,[[,"(\\d{4})(\\d{4})","$1 $2"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],BI:[,[,,"[267]\\d{7}","\\d{8}"],[,,"22\\d{6}","\\d{8}",,,"22201234"],[,,"(?:29|6[189]|7[124-9])\\d{6}","\\d{8}",,,"79561234"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"BI",257,"00",
,,,,,,,[[,"(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],BJ:[,[,,"[2689]\\d{7}|7\\d{3}","\\d{4,8}"],[,,"2(?:02|1[037]|2[45]|3[68])\\d{5}","\\d{8}",,,"20211234"],[,,"(?:6[1-8]|9[03-9])\\d{6}","\\d{8}",,,"90011234"],[,,"7[3-5]\\d{2}","\\d{4}",,,"7312"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"857[58]\\d{4}","\\d{8}",,,"85751234"],"BJ",229,"00",,,,,,,,[[,"(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4"]],,[,,"NA","NA"],,,[,,"NA",
"NA"],[,,"81\\d{6}","\\d{8}",,,"81123456"],,,[,,"NA","NA"]],BL:[,[,,"[56]\\d{8}","\\d{9}"],[,,"590(?:2[7-9]|5[12]|87)\\d{4}","\\d{9}",,,"590271234"],[,,"690(?:0[0-7]|[1-9]\\d)\\d{4}","\\d{9}",,,"690301234"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"BL",590,"00","0",,,"0",,,,,,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],BM:[,[,,"[4589]\\d{9}","\\d{7}(?:\\d{3})?"],[,,"441(?:2(?:02|23|61|[3479]\\d)|[46]\\d{2}|5(?:4\\d|60|89)|824)\\d{4}","\\d{7}(?:\\d{3})?",
,,"4412345678"],[,,"441(?:[37]\\d|5[0-39])\\d{5}","\\d{10}",,,"4413701234"],[,,"8(?:00|44|55|66|77|88)[2-9]\\d{6}","\\d{10}",,,"8002123456"],[,,"900[2-9]\\d{6}","\\d{10}",,,"9002123456"],[,,"NA","NA"],[,,"5(?:00|33|44|66|77|88)[2-9]\\d{6}","\\d{10}",,,"5002345678"],[,,"NA","NA"],"BM",1,"011","1",,,"1",,,,,,[,,"NA","NA"],,"441",[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],BN:[,[,,"[2-578]\\d{6}","\\d{7}"],[,,"2(?:[013-9]\\d|2[0-7])\\d{4}|[3-5]\\d{6}","\\d{7}",,,"2345678"],[,,"22[89]\\d{4}|[78]\\d{6}",
"\\d{7}",,,"7123456"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"BN",673,"00",,,,,,,,[[,"([2-578]\\d{2})(\\d{4})","$1 $2"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],BO:[,[,,"[23467]\\d{7}","\\d{7,8}"],[,,"(?:2(?:2\\d{2}|5(?:11|[258]\\d|9[67])|6(?:12|2\\d|9[34])|8(?:2[34]|39|62))|3(?:3\\d{2}|4(?:6\\d|8[24])|8(?:25|42|5[257]|86|9[25])|9(?:2\\d|3[234]|4[248]|5[24]|6[2-6]|7\\d))|4(?:4\\d{2}|6(?:11|[24689]\\d|72)))\\d{4}","\\d{7,8}",,,"22123456"],[,,"[67]\\d{7}",
"\\d{8}",,,"71234567"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"BO",591,"00(1\\d)?","0",,,"0(1\\d)?",,,,[[,"([234])(\\d{7})","$1 $2",["[234]"],,"0$CC $1"],[,"([67]\\d{7})","$1",["[67]"],,"0$CC $1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],BQ:[,[,,"[347]\\d{6}","\\d{7}"],[,,"(?:318[023]|416[023]|7(?:1[578]|50)\\d)\\d{3}","\\d{7}",,,"7151234"],[,,"(?:318[14-68]|416[15-9]|7(?:0[01]|7[07]|[89]\\d)\\d)\\d{3}","\\d{7}",,,"3181234"],[,,"NA","NA"],[,,"NA",
"NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"BQ",599,"00",,,,,,,,,,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],BR:[,[,,"[1-46-9]\\d{7,10}|5\\d{8,9}","\\d{8,11}"],[,,"1[1-9][2-5]\\d{7}|(?:[4689][1-9]|2[12478]|3[1-578]|5[1-5]|7[13-579])[2-5]\\d{7}","\\d{8,11}",,,"1123456789"],[,,"1[1-9](?:7|9\\d)\\d{7}|(?:2[12478]|3[1-578]|7[13-579]|[89][1-9])9?[6-9]\\d{7}|(?:[46][1-9]|5[1-5])[6-9]\\d{7}","\\d{10,11}",,,"11961234567"],[,,"800\\d{6,7}","\\d{8,11}",,,"800123456"],[,,"[359]00\\d{6,7}",
"\\d{8,11}",,,"300123456"],[,,"(?:300\\d|40(?:0\\d|20))\\d{4}","\\d{8}",,,"40041234"],[,,"NA","NA"],[,,"NA","NA"],"BR",55,"00(?:1[245]|2[1-35]|31|4[13]|[56]5|99)","0",,,"0(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\d{10,11}))?","$2",,,[[,"(\\d{4})(\\d{4})","$1-$2",["[2-9](?:[1-9]|0[1-9])"],"$1"],[,"(\\d{5})(\\d{4})","$1-$2",["9(?:[1-9]|0[1-9])"],"$1"],[,"(\\d{3,5})","$1",["1[125689]"],"$1"],[,"(\\d{2})(\\d{5})(\\d{4})","$1 $2-$3",["(?:[189][1-9]|2[12478]|3[1-578]|7[13-579])9"],"($1)","0 $CC ($1)"],[,
"(\\d{2})(\\d{4})(\\d{4})","$1 $2-$3",["[1-9][1-9]"],"($1)","0 $CC ($1)"],[,"(\\d{4})(\\d{4})","$1-$2",["(?:300|40(?:0|20))"]],[,"([3589]00)(\\d{2,3})(\\d{4})","$1 $2 $3",["[3589]00"],"0$1"]],[[,"(\\d{2})(\\d{5})(\\d{4})","$1 $2-$3",["(?:[189][1-9]|2[12478]|3[1-578]|7[13-579])9"],"($1)","0 $CC ($1)"],[,"(\\d{2})(\\d{4})(\\d{4})","$1 $2-$3",["[1-9][1-9]"],"($1)","0 $CC ($1)"],[,"(\\d{4})(\\d{4})","$1-$2",["(?:300|40(?:0|20))"]],[,"([3589]00)(\\d{2,3})(\\d{4})","$1 $2 $3",["[3589]00"],"0$1"]],[,,"NA",
"NA"],,,[,,"(?:300\\d|40(?:0\\d|20))\\d{4}","\\d{8}",,,"40041234"],[,,"NA","NA"],,,[,,"NA","NA"]],BS:[,[,,"[2589]\\d{9}","\\d{7}(?:\\d{3})?"],[,,"242(?:3(?:02|[236][1-9]|4[0-24-9]|5[0-68]|7[3467]|8[0-4]|9[2-467])|461|502|6(?:0[1-3]|12|7[67]|8[78]|9[89])|7(?:02|88))\\d{4}","\\d{7}(?:\\d{3})?",,,"2423456789"],[,,"242(?:3(?:5[79]|[79]5)|4(?:[2-4][1-9]|5[1-8]|6[2-8]|7\\d|81)|5(?:2[45]|3[35]|44|5[1-9]|65|77)|6[34]6|727)\\d{4}","\\d{10}",,,"2423591234"],[,,"242300\\d{4}|8(?:00|44|55|66|77|88)[2-9]\\d{6}",
"\\d{10}",,,"8002123456"],[,,"900[2-9]\\d{6}","\\d{10}",,,"9002123456"],[,,"NA","NA"],[,,"5(?:00|33|44|66|77|88)[2-9]\\d{6}","\\d{10}",,,"5002345678"],[,,"NA","NA"],"BS",1,"011","1",,,"1",,,,,,[,,"NA","NA"],,"242",[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],BT:[,[,,"[1-8]\\d{6,7}","\\d{6,8}"],[,,"(?:2[3-6]|[34][5-7]|5[236]|6[2-46]|7[246]|8[2-4])\\d{5}","\\d{6,7}",,,"2345678"],[,,"(?:1[67]|77)\\d{6}","\\d{8}",,,"17123456"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"BT",
975,"00",,,,,,,,[[,"(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["1|77"]],[,"([2-8])(\\d{3})(\\d{3})","$1 $2 $3",["[2-68]|7[246]"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],BW:[,[,,"[2-79]\\d{6,7}","\\d{7,8}"],[,,"(?:2(?:4[0-48]|6[0-24]|9[0578])|3(?:1[0235-9]|55|[69]\\d|7[01])|4(?:6[03]|7[1267]|9[0-5])|5(?:3[0389]|4[0489]|7[1-47]|88|9[0-49])|6(?:2[1-35]|5[149]|8[067]))\\d{4}","\\d{7}",,,"2401234"],[,,"7(?:[1-6]\\d|7[014-8])\\d{5}","\\d{8}",,,"71123456"],[,,"NA","NA"],[,,
"90\\d{5}","\\d{7}",,,"9012345"],[,,"NA","NA"],[,,"NA","NA"],[,,"79[12][01]\\d{4}","\\d{8}",,,"79101234"],"BW",267,"00",,,,,,,,[[,"(\\d{3})(\\d{4})","$1 $2",["[2-6]"]],[,"(7\\d)(\\d{3})(\\d{3})","$1 $2 $3",["7"]],[,"(90)(\\d{5})","$1 $2",["9"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],BY:[,[,,"[1-4]\\d{8}|800\\d{3,7}|[89]\\d{9,10}","\\d{6,11}"],[,,"(?:1(?:5(?:1[1-5]|[24]\\d|6[2-4]|9[1-7])|6(?:[235]\\d|4[1-7])|7\\d{2})|2(?:1(?:[246]\\d|3[0-35-9]|5[1-9])|2(?:[235]\\d|4[0-8])|3(?:[26]\\d|3[02-79]|4[024-7]|5[03-7])))\\d{5}",
"\\d{6,11}",,,"152450911"],[,,"(?:2(?:5[5679]|9[1-9])|33\\d|44\\d)\\d{6}","\\d{9}",,,"294911911"],[,,"8(?:0[13]|20\\d)\\d{7}|800\\d{3,7}","\\d{6,11}",,,"8011234567"],[,,"(?:810|902)\\d{7}","\\d{10}",,,"9021234567"],[,,"NA","NA"],[,,"NA","NA"],[,,"249\\d{6}","\\d{9}",,,"249123456"],"BY",375,"810","8",,,"8?0?",,"8~10",,[[,"(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2-$3-$4",["17[0-3589]|2[4-9]|[34]","17(?:[02358]|1[0-2]|9[0189])|2[4-9]|[34]"],"8 0$1"],[,"(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2-$3-$4",
["1(?:5[24]|6[235]|7[467])|2(?:1[246]|2[25]|3[26])","1(?:5[24]|6(?:2|3[04-9]|5[0346-9])|7(?:[46]|7[37-9]))|2(?:1[246]|2[25]|3[26])"],"8 0$1"],[,"(\\d{4})(\\d{2})(\\d{3})","$1 $2-$3",["1(?:5[169]|6[3-5]|7[179])|2(?:1[35]|2[34]|3[3-5])","1(?:5[169]|6(?:3[1-3]|4|5[125])|7(?:1[3-9]|7[0-24-6]|9[2-7]))|2(?:1[35]|2[34]|3[3-5])"],"8 0$1"],[,"([89]\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["8[01]|9"],"8 $1"],[,"(82\\d)(\\d{4})(\\d{4})","$1 $2 $3",["82"],"8 $1"],[,"(800)(\\d{3})","$1 $2",["800"],"8 $1"],[,"(800)(\\d{2})(\\d{2,4})",
"$1 $2 $3",["800"],"8 $1"]],,[,,"NA","NA"],,,[,,"8(?:[013]|[12]0)\\d{8}|800\\d{3,7}|902\\d{7}","\\d{6,11}",,,"82012345678"],[,,"NA","NA"],,,[,,"NA","NA"]],BZ:[,[,,"[2-8]\\d{6}|0\\d{10}","\\d{7}(?:\\d{4})?"],[,,"[234578][02]\\d{5}","\\d{7}",,,"2221234"],[,,"6[0-35-7]\\d{5}","\\d{7}",,,"6221234"],[,,"0800\\d{7}","\\d{11}",,,"08001234123"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"BZ",501,"00",,,,,,,,[[,"(\\d{3})(\\d{4})","$1-$2",["[2-8]"]],[,"(0)(800)(\\d{4})(\\d{3})","$1-$2-$3-$4",["0"]]],
,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],1,,[,,"NA","NA"]],CA:[,[,,"[2-9]\\d{9}|3\\d{6}","\\d{7}(?:\\d{3})?"],[,,"(?:2(?:04|[23]6|[48]9|50)|3(?:06|43|65)|4(?:03|1[68]|3[178]|50)|5(?:06|1[49]|48|79|8[17])|6(?:0[04]|13|22|39|47)|7(?:0[59]|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\d{6}|310\\d{4}","\\d{7}(?:\\d{3})?",,,"2042345678"],[,,"(?:2(?:04|[23]6|[48]9|50)|3(?:06|43|65)|4(?:03|1[68]|3[178]|50)|5(?:06|1[49]|48|79|8[17])|6(?:0[04]|13|22|39|47)|7(?:0[59]|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\d{6}",
"\\d{7}(?:\\d{3})?",,,"2042345678"],[,,"8(?:00|44|55|66|77|88)[2-9]\\d{6}|310\\d{4}","\\d{7}(?:\\d{3})?",,,"8002123456"],[,,"900[2-9]\\d{6}","\\d{10}",,,"9002123456"],[,,"NA","NA"],[,,"5(?:00|33|44|66|77|88)[2-9]\\d{6}","\\d{10}",,,"5002345678"],[,,"NA","NA"],"CA",1,"011","1",,,"1",,,,,,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],CC:[,[,,"[1458]\\d{5,9}","\\d{6,10}"],[,,"89162\\d{4}","\\d{8,9}",,,"891621234"],[,,"14(?:5\\d|71)\\d{5}|4(?:[0-2]\\d|3[0-57-9]|4[47-9]|5[0-25-9]|6[6-9]|7[02-9]|8[147-9]|9[017-9])\\d{6}",
"\\d{9}",,,"412345678"],[,,"180(?:0\\d{3}|2)\\d{3}","\\d{7,10}",,,"1800123456"],[,,"190[0126]\\d{6}","\\d{10}",,,"1900123456"],[,,"13(?:00\\d{2})?\\d{4}","\\d{6,10}",,,"1300123456"],[,,"500\\d{6}","\\d{9}",,,"500123456"],[,,"550\\d{6}","\\d{9}",,,"550123456"],"CC",61,"(?:14(?:1[14]|34|4[17]|[56]6|7[47]|88))?001[14-689]","0",,,"0",,"0011",,,,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],CD:[,[,,"[2-6]\\d{6}|[18]\\d{6,8}|9\\d{8}","\\d{7,9}"],[,,"1(?:2\\d{7}|\\d{6})|[2-6]\\d{6}","\\d{7,9}",
,,"1234567"],[,,"8(?:[0-2459]\\d{2}|8)\\d{5}|9[7-9]\\d{7}","\\d{7,9}",,,"991234567"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"CD",243,"00","0",,,"0",,,,[[,"(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["12"],"0$1"],[,"([89]\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["8[0-2459]|9"],"0$1"],[,"(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3",["88"],"0$1"],[,"(\\d{2})(\\d{5})","$1 $2",["[1-6]"],"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],CF:[,[,,"[278]\\d{7}","\\d{8}"],[,
,"2[12]\\d{6}","\\d{8}",,,"21612345"],[,,"7[0257]\\d{6}","\\d{8}",,,"70012345"],[,,"NA","NA"],[,,"8776\\d{4}","\\d{8}",,,"87761234"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"CF",236,"00",,,,,,,,[[,"(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],CG:[,[,,"[028]\\d{8}","\\d{9}"],[,,"222[1-589]\\d{5}","\\d{9}",,,"222123456"],[,,"0[14-6]\\d{7}","\\d{9}",,,"061234567"],[,,"NA","NA"],[,,"800\\d{6}","\\d{9}",,,"800123456"],[,,"NA","NA"],[,
,"NA","NA"],[,,"NA","NA"],"CG",242,"00",,,,,,,,[[,"(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[02]"]],[,"(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["8"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],1,,[,,"NA","NA"]],CH:[,[,,"[2-9]\\d{8}|860\\d{9}","\\d{9}(?:\\d{3})?"],[,,"(?:2[12467]|3[1-4]|4[134]|5[256]|6[12]|[7-9]1)\\d{7}","\\d{9}",,,"212345678"],[,,"7[5-9]\\d{7}","\\d{9}",,,"781234567"],[,,"800\\d{6}","\\d{9}",,,"800123456"],[,,"90[016]\\d{6}","\\d{9}",,,"900123456"],[,,"84[0248]\\d{6}","\\d{9}",,,"840123456"],
[,,"878\\d{6}","\\d{9}",,,"878123456"],[,,"NA","NA"],"CH",41,"00","0",,,"0",,,,[[,"([2-9]\\d)(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[2-7]|[89]1"],"0$1"],[,"([89]\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["8[047]|90"],"0$1"],[,"(\\d{3})(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4 $5",["860"],"0$1"]],,[,,"74[0248]\\d{6}","\\d{9}",,,"740123456"],,,[,,"NA","NA"],[,,"5[18]\\d{7}","\\d{9}",,,"581234567"],,,[,,"860\\d{9}","\\d{12}",,,"860123456789"]],CI:[,[,,"[02-8]\\d{7}","\\d{8}"],[,,"(?:2(?:0[023]|1[02357]|[23][045]|4[03-5])|3(?:0[06]|1[069]|[2-4][07]|5[09]|6[08]))\\d{5}",
"\\d{8}",,,"21234567"],[,,"(?:0[1-9]|4\\d|5[14-9]|6[015-79]|7[578]|87)\\d{6}","\\d{8}",,,"01234567"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"CI",225,"00",,,,,,,,[[,"(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],1,,[,,"NA","NA"]],CK:[,[,,"[2-8]\\d{4}","\\d{5}"],[,,"(?:2\\d|3[13-7]|4[1-5])\\d{3}","\\d{5}",,,"21234"],[,,"[5-8]\\d{4}","\\d{5}",,,"71234"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],
"CK",682,"00",,,,,,,,[[,"(\\d{2})(\\d{3})","$1 $2"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],CL:[,[,,"(?:[2-9]|600|123)\\d{7,8}","\\d{7,11}"],[,,"2(?:1962\\d{4}|2\\d{7}|32[0-2]\\d{5})|(?:3[2-5]|[47][1-35]|5[1-3578]|6[13-57])\\d{7}","\\d{7,9}",,,"221234567"],[,,"9[4-9]\\d{7}","\\d{8,9}",,,"961234567"],[,,"800\\d{6}|1230\\d{7}","\\d{9,11}",,,"800123456"],[,,"NA","NA"],[,,"600\\d{7,8}","\\d{10,11}",,,"6001234567"],[,,"NA","NA"],[,,"44\\d{7}","\\d{9}",,,"441234567"],"CL",56,"(?:0|1(?:1[0-69]|2[0-57]|5[13-58]|69|7[0167]|8[018]))0",
"0",,,"0|(1(?:1[0-69]|2[0-57]|5[13-58]|69|7[0167]|8[018]))",,,,[[,"(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["2[23]"],"($1)","$CC ($1)"],[,"(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[357]|4[1-35]|6[13-57]"],"($1)","$CC ($1)"],[,"(9)(\\d{4})(\\d{4})","$1 $2 $3",["9"],"0$1"],[,"(44)(\\d{3})(\\d{4})","$1 $2 $3",["44"],"0$1"],[,"([68]00)(\\d{3})(\\d{3,4})","$1 $2 $3",["60|8"],"$1"],[,"(600)(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3 $4",["60"],"$1"],[,"(1230)(\\d{3})(\\d{4})","$1 $2 $3",["1"],"$1"],[,"(\\d{5})(\\d{4})",
"$1 $2",["219"],"($1)","$CC ($1)"],[,"(\\d{4,5})","$1",["[1-9]"],"$1"]],[[,"(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["2[23]"],"($1)","$CC ($1)"],[,"(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[357]|4[1-35]|6[13-57]"],"($1)","$CC ($1)"],[,"(9)(\\d{4})(\\d{4})","$1 $2 $3",["9"],"0$1"],[,"(44)(\\d{3})(\\d{4})","$1 $2 $3",["44"],"0$1"],[,"([68]00)(\\d{3})(\\d{3,4})","$1 $2 $3",["60|8"],"$1"],[,"(600)(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3 $4",["60"],"$1"],[,"(1230)(\\d{3})(\\d{4})","$1 $2 $3",["1"],"$1"],[,"(\\d{5})(\\d{4})",
"$1 $2",["219"],"($1)","$CC ($1)"]],[,,"NA","NA"],,,[,,"600\\d{7,8}","\\d{10,11}",,,"6001234567"],[,,"NA","NA"],,,[,,"NA","NA"]],CM:[,[,,"[2368]\\d{7,8}","\\d{8,9}"],[,,"2(?:22|33|4[23])\\d{6}","\\d{9}",,,"222123456"],[,,"6[5-9]\\d{7}","\\d{9}",,,"671234567"],[,,"800\\d{5}","\\d{8}",,,"80012345"],[,,"88\\d{6}","\\d{8}",,,"88012345"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"CM",237,"00",,,,,,,,[[,"([26])(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4 $5",["[26]"]],[,"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
"$1 $2 $3 $4",["[23]|88"]],[,"(800)(\\d{2})(\\d{3})","$1 $2 $3",["80"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],CN:[,[,,"[1-7]\\d{6,11}|8[0-357-9]\\d{6,9}|9\\d{7,10}","\\d{4,12}"],[,,"21(?:100\\d{2}|95\\d{3,4}|\\d{8,10})|(?:10|2[02-57-9]|3(?:11|7[179])|4(?:[15]1|3[1-35])|5(?:1\\d|2[37]|3[12]|51|7[13-79]|9[15])|7(?:31|5[457]|6[09]|91)|8(?:[57]1|98))(?:100\\d{2}|95\\d{3,4}|\\d{8})|(?:3(?:1[02-9]|35|49|5\\d|7[02-68]|9[1-68])|4(?:1[02-9]|2[179]|3[3-9]|5[2-9]|6[4789]|7\\d|8[23])|5(?:3[03-9]|4[36]|5[02-9]|6[1-46]|7[028]|80|9[2-46-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[17]\\d|2[248]|3[04-9]|4[3-6]|5[0-4689]|6[2368]|9[02-9])|8(?:078|1[236-8]|2[5-7]|3\\d|5[1-9]|7[02-9]|8[3678]|9[1-7])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))(?:100\\d{2}|95\\d{3,4}|\\d{7})|80(?:29|6[03578]|7[018]|81)\\d{4}",
"\\d{4,12}",,,"1012345678"],[,,"1(?:[38]\\d|4[57]|5[0-35-9]|7[036-8])\\d{8}","\\d{11}",,,"13123456789"],[,,"(?:10)?800\\d{7}","\\d{10,12}",,,"8001234567"],[,,"16[08]\\d{5}","\\d{8}",,,"16812345"],[,,"400\\d{7}|950\\d{7,8}|(?:10|2[0-57-9]|3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[4789]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[14-9]|8[3678]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))96\\d{3,4}",
"\\d{7,11}",,,"4001234567"],[,,"NA","NA"],[,,"NA","NA"],"CN",86,"(1(?:[129]\\d{3}|79\\d{2}))?00","0",,,"(1(?:[129]\\d{3}|79\\d{2}))|0",,"00",,[[,"(80\\d{2})(\\d{4})","$1 $2",["80[2678]"],"0$1","$CC $1",1],[,"([48]00)(\\d{3})(\\d{4})","$1 $2 $3",["[48]00"]],[,"(\\d{5,6})","$1",["100|95"]],[,"(\\d{2})(\\d{5,6})","$1 $2",["(?:10|2\\d)[19]","(?:10|2\\d)(?:10|9[56])","(?:10|2\\d)(?:100|9[56])"],"0$1","$CC $1"],[,"(\\d{3})(\\d{5,6})","$1 $2",["[3-9]","[3-9]\\d{2}[19]","[3-9]\\d{2}(?:10|9[56])"],"0$1","$CC $1"],
[,"(\\d{3,4})(\\d{4})","$1 $2",["[2-9]"]],[,"(21)(\\d{4})(\\d{4,6})","$1 $2 $3",["21"],"0$1","$CC $1",1],[,"([12]\\d)(\\d{4})(\\d{4})","$1 $2 $3",["10[1-9]|2[02-9]","10[1-9]|2[02-9]","10(?:[1-79]|8(?:[1-9]|0[1-9]))|2[02-9]"],"0$1","$CC $1",1],[,"(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["3(?:1[02-9]|35|49|5|7[02-68]|9[1-68])|4(?:1[02-9]|2[179]|[35][2-9]|6[4789]|7\\d|8[23])|5(?:3[03-9]|4[36]|5[02-9]|6[1-46]|7[028]|80|9[2-46-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[04-9]|4[3-6]|6[2368])|8(?:1[236-8]|2[5-7]|3|5[1-9]|7[02-9]|8[3678]|9[1-7])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])"],
"0$1","$CC $1",1],[,"(\\d{3})(\\d{4})(\\d{4})","$1 $2 $3",["3(?:11|7[179])|4(?:[15]1|3[1-35])|5(?:1|2[37]|3[12]|51|7[13-79]|9[15])|7(?:31|5[457]|6[09]|91)|8(?:[57]1|98)"],"0$1","$CC $1",1],[,"(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["807","8078"],"0$1","$CC $1",1],[,"(\\d{3})(\\d{4})(\\d{4})","$1 $2 $3",["1[3-578]"],,"$CC $1"],[,"(10800)(\\d{3})(\\d{4})","$1 $2 $3",["108","1080","10800"]],[,"(\\d{3})(\\d{7,8})","$1 $2",["950"]]],[[,"(80\\d{2})(\\d{4})","$1 $2",["80[2678]"],"0$1","$CC $1",1],[,"([48]00)(\\d{3})(\\d{4})",
"$1 $2 $3",["[48]00"]],[,"(\\d{2})(\\d{5,6})","$1 $2",["(?:10|2\\d)[19]","(?:10|2\\d)(?:10|9[56])","(?:10|2\\d)(?:100|9[56])"],"0$1","$CC $1"],[,"(\\d{3})(\\d{5,6})","$1 $2",["[3-9]","[3-9]\\d{2}[19]","[3-9]\\d{2}(?:10|9[56])"],"0$1","$CC $1"],[,"(21)(\\d{4})(\\d{4,6})","$1 $2 $3",["21"],"0$1","$CC $1",1],[,"([12]\\d)(\\d{4})(\\d{4})","$1 $2 $3",["10[1-9]|2[02-9]","10[1-9]|2[02-9]","10(?:[1-79]|8(?:[1-9]|0[1-9]))|2[02-9]"],"0$1","$CC $1",1],[,"(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["3(?:1[02-9]|35|49|5|7[02-68]|9[1-68])|4(?:1[02-9]|2[179]|[35][2-9]|6[4789]|7\\d|8[23])|5(?:3[03-9]|4[36]|5[02-9]|6[1-46]|7[028]|80|9[2-46-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[04-9]|4[3-6]|6[2368])|8(?:1[236-8]|2[5-7]|3|5[1-9]|7[02-9]|8[3678]|9[1-7])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])"],
"0$1","$CC $1",1],[,"(\\d{3})(\\d{4})(\\d{4})","$1 $2 $3",["3(?:11|7[179])|4(?:[15]1|3[1-35])|5(?:1|2[37]|3[12]|51|7[13-79]|9[15])|7(?:31|5[457]|6[09]|91)|8(?:[57]1|98)"],"0$1","$CC $1",1],[,"(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["807","8078"],"0$1","$CC $1",1],[,"(\\d{3})(\\d{4})(\\d{4})","$1 $2 $3",["1[3-578]"],,"$CC $1"],[,"(10800)(\\d{3})(\\d{4})","$1 $2 $3",["108","1080","10800"]],[,"(\\d{3})(\\d{7,8})","$1 $2",["950"]]],[,,"NA","NA"],,,[,,"(?:4|(?:10)?8)00\\d{7}|950\\d{7,8}","\\d{10,12}",,,
"4001234567"],[,,"NA","NA"],,,[,,"NA","NA"]],CO:[,[,,"(?:[13]\\d{0,3}|[24-8])\\d{7}","\\d{7,11}"],[,,"[124-8][2-9]\\d{6}","\\d{8}",,,"12345678"],[,,"3(?:0[0-5]|1\\d|2[0-2]|5[01])\\d{7}","\\d{10}",,,"3211234567"],[,,"1800\\d{7}","\\d{11}",,,"18001234567"],[,,"19(?:0[01]|4[78])\\d{7}","\\d{11}",,,"19001234567"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"CO",57,"00(?:4(?:[14]4|56)|[579])","0",,,"0([3579]|4(?:44|56))?",,,,[[,"(\\d)(\\d{7})","$1 $2",["1(?:8[2-9]|9[0-3]|[2-7])|[24-8]","1(?:8[2-9]|9(?:09|[1-3])|[2-7])|[24-8]"],
"($1)","0$CC $1"],[,"(\\d{3})(\\d{7})","$1 $2",["3"],,"0$CC $1"],[,"(1)(\\d{3})(\\d{7})","$1-$2-$3",["1(?:80|9[04])","1(?:800|9(?:0[01]|4[78]))"],"0$1"]],[[,"(\\d)(\\d{7})","$1 $2",["1(?:8[2-9]|9[0-3]|[2-7])|[24-8]","1(?:8[2-9]|9(?:09|[1-3])|[2-7])|[24-8]"],"($1)","0$CC $1"],[,"(\\d{3})(\\d{7})","$1 $2",["3"],,"0$CC $1"],[,"(1)(\\d{3})(\\d{7})","$1 $2 $3",["1(?:80|9[04])","1(?:800|9(?:0[01]|4[78]))"]]],[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],CR:[,[,,"[24-9]\\d{7,9}","\\d{8,10}"],
[,,"2[0-24-7]\\d{6}","\\d{8}",,,"22123456"],[,,"5(?:0[01]|7[0-3])\\d{5}|(?:[67][0-3]|8[3-9])\\d{6}","\\d{8}",,,"83123456"],[,,"800\\d{7}","\\d{10}",,,"8001234567"],[,,"90[059]\\d{7}","\\d{10}",,,"9001234567"],[,,"NA","NA"],[,,"NA","NA"],[,,"210[0-6]\\d{4}|4\\d{7}|5100\\d{4}","\\d{8}",,,"40001234"],"CR",506,"00",,,,"(19(?:0[012468]|1[09]|20|66|77|99))",,,,[[,"(\\d{4})(\\d{4})","$1 $2",["[24-7]|8[3-9]"],,"$CC $1"],[,"(\\d{3})(\\d{3})(\\d{4})","$1-$2-$3",["[89]0"],,"$CC $1"]],,[,,"NA","NA"],,,[,,"NA",
"NA"],[,,"NA","NA"],,,[,,"NA","NA"]],CU:[,[,,"[2-57]\\d{5,7}","\\d{4,8}"],[,,"2[1-4]\\d{5,6}|3(?:1\\d{6}|[23]\\d{4,6})|4(?:[125]\\d{5,6}|[36]\\d{6}|[78]\\d{4,6})|7\\d{6,7}","\\d{4,8}",,,"71234567"],[,,"5\\d{7}","\\d{8}",,,"51234567"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"CU",53,"119","0",,,"0",,,,[[,"(\\d)(\\d{6,7})","$1 $2",["7"],"(0$1)"],[,"(\\d{2})(\\d{4,6})","$1 $2",["[2-4]"],"(0$1)"],[,"(\\d)(\\d{7})","$1 $2",["5"],"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA",
"NA"],,,[,,"NA","NA"]],CV:[,[,,"[259]\\d{6}","\\d{7}"],[,,"2(?:2[1-7]|3[0-8]|4[12]|5[1256]|6\\d|7[1-3]|8[1-5])\\d{4}","\\d{7}",,,"2211234"],[,,"(?:9\\d|59)\\d{5}","\\d{7}",,,"9911234"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"CV",238,"0",,,,,,,,[[,"(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],CW:[,[,,"[169]\\d{6,7}","\\d{7,8}"],[,,"9(?:[48]\\d{2}|50\\d|7(?:2[0-24]|[34]\\d|6[35-7]|77|8[7-9]))\\d{4}","\\d{7,8}",,,
"94151234"],[,,"9(?:5(?:[12467]\\d|3[01])|6(?:[15-9]\\d|3[01]))\\d{4}","\\d{7,8}",,,"95181234"],[,,"NA","NA"],[,,"NA","NA"],[,,"60[0-2]\\d{4}","\\d{7}",,,"6001234"],[,,"NA","NA"],[,,"NA","NA"],"CW",599,"00",,,,,,,,[[,"(\\d{3})(\\d{4})","$1 $2",["[13-7]"]],[,"(9)(\\d{3})(\\d{4})","$1 $2 $3",["9"]]],,[,,"955\\d{5}","\\d{7,8}",,,"95581234"],1,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],CX:[,[,,"[1458]\\d{5,9}","\\d{6,10}"],[,,"89164\\d{4}","\\d{8,9}",,,"891641234"],[,,"14(?:5\\d|71)\\d{5}|4(?:[0-2]\\d|3[0-57-9]|4[47-9]|5[0-25-9]|6[6-9]|7[02-9]|8[147-9]|9[017-9])\\d{6}",
"\\d{9}",,,"412345678"],[,,"180(?:0\\d{3}|2)\\d{3}","\\d{7,10}",,,"1800123456"],[,,"190[0126]\\d{6}","\\d{10}",,,"1900123456"],[,,"13(?:00\\d{2})?\\d{4}","\\d{6,10}",,,"1300123456"],[,,"500\\d{6}","\\d{9}",,,"500123456"],[,,"550\\d{6}","\\d{9}",,,"550123456"],"CX",61,"(?:14(?:1[14]|34|4[17]|[56]6|7[47]|88))?001[14-689]","0",,,"0",,"0011",,,,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],CY:[,[,,"[257-9]\\d{7}","\\d{8}"],[,,"2[2-6]\\d{6}","\\d{8}",,,"22345678"],[,,"9[4-79]\\d{6}","\\d{8}",
,,"96123456"],[,,"800\\d{5}","\\d{8}",,,"80001234"],[,,"90[09]\\d{5}","\\d{8}",,,"90012345"],[,,"80[1-9]\\d{5}","\\d{8}",,,"80112345"],[,,"700\\d{5}","\\d{8}",,,"70012345"],[,,"NA","NA"],"CY",357,"00",,,,,,,,[[,"(\\d{2})(\\d{6})","$1 $2"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"(?:50|77)\\d{6}","\\d{8}",,,"77123456"],,,[,,"NA","NA"]],CZ:[,[,,"[2-8]\\d{8}|9\\d{8,11}","\\d{9,12}"],[,,"2\\d{8}|(?:3[1257-9]|4[16-9]|5[13-9])\\d{7}","\\d{9,12}",,,"212345678"],[,,"(?:60[1-8]|7(?:0[2-5]|[2379]\\d))\\d{6}","\\d{9,12}",
,,"601123456"],[,,"800\\d{6}","\\d{9,12}",,,"800123456"],[,,"9(?:0[05689]|76)\\d{6}","\\d{9,12}",,,"900123456"],[,,"8[134]\\d{7}","\\d{9,12}",,,"811234567"],[,,"70[01]\\d{6}","\\d{9,12}",,,"700123456"],[,,"9[17]0\\d{6}","\\d{9,12}",,,"910123456"],"CZ",420,"00",,,,,,,,[[,"([2-9]\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[2-8]|9[015-7]"]],[,"(96\\d)(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["96"]],[,"(9\\d)(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["9[36]"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"9(?:5\\d|7[234])\\d{6}",
"\\d{9,12}",,,"972123456"],,,[,,"9(?:3\\d{9}|6\\d{7,10})","\\d{9,12}",,,"93123456789"]],DE:[,[,,"[1-35-9]\\d{3,14}|4(?:[0-8]\\d{4,12}|9(?:[0-37]\\d|4(?:[1-35-8]|4\\d?)|5\\d{1,2}|6[1-8]\\d?)\\d{2,8})","\\d{2,15}"],[,,"[246]\\d{5,13}|3(?:0\\d{3,13}|2\\d{9}|[3-9]\\d{4,13})|5(?:0[2-8]|[1256]\\d|[38][0-8]|4\\d{0,2}|[79][0-7])\\d{3,11}|7(?:0[2-8]|[1-9]\\d)\\d{3,10}|8(?:0[2-9]|[1-9]\\d)\\d{3,10}|9(?:0[6-9]\\d{3,10}|1\\d{4,12}|[2-9]\\d{4,11})","\\d{2,15}",,,"30123456"],[,,"1(?:5[0-25-9]\\d{8}|6[023]\\d{7,8}|7(?:[0-57-9]\\d?|6\\d)\\d{7})",
"\\d{10,11}",,,"15123456789"],[,,"800\\d{7,12}","\\d{10,15}",,,"8001234567890"],[,,"137[7-9]\\d{6}|900(?:[135]\\d{6}|9\\d{7})","\\d{10,11}",,,"9001234567"],[,,"1(?:3(?:7[1-6]\\d{6}|8\\d{4})|80\\d{5,11})","\\d{7,14}",,,"18012345"],[,,"700\\d{8}","\\d{11}",,,"70012345678"],[,,"NA","NA"],"DE",49,"00","0",,,"0",,,,[[,"(1\\d{2})(\\d{7,8})","$1 $2",["1[67]"],"0$1"],[,"(15\\d{3})(\\d{6})","$1 $2",["15[0568]"],"0$1"],[,"(1\\d{3})(\\d{7})","$1 $2",["15"],"0$1"],[,"(\\d{2})(\\d{3,11})","$1 $2",["3[02]|40|[68]9"],
"0$1"],[,"(\\d{3})(\\d{3,11})","$1 $2",["2(?:\\d1|0[2389]|1[24]|28|34)|3(?:[3-9][15]|40)|[4-8][1-9]1|9(?:06|[1-9]1)"],"0$1"],[,"(\\d{4})(\\d{2,11})","$1 $2",["[24-6]|[7-9](?:\\d[1-9]|[1-9]\\d)|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])","[24-6]|[7-9](?:\\d[1-9]|[1-9]\\d)|3(?:3(?:0[1-467]|2[127-9]|3[124578]|[46][1246]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|3[1357]|4[13578]|6[1246]|7[1356]|9[1346])|5(?:0[14]|2[1-3589]|3[1357]|4[1246]|6[1-4]|7[1346]|8[13568]|9[1246])|6(?:0[356]|2[1-489]|3[124-6]|4[1347]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|3[1357]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|4[1347]|6[0135-9]|7[1467]|8[136])|9(?:0[12479]|2[1358]|3[1357]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))"],
"0$1"],[,"(3\\d{4})(\\d{1,10})","$1 $2",["3"],"0$1"],[,"(800)(\\d{7,12})","$1 $2",["800"],"0$1"],[,"(\\d{3})(\\d)(\\d{4,10})","$1 $2 $3",["(?:18|90)0|137","1(?:37|80)|900[1359]"],"0$1"],[,"(1\\d{2})(\\d{5,11})","$1 $2",["181"],"0$1"],[,"(18\\d{3})(\\d{6})","$1 $2",["185","1850","18500"],"0$1"],[,"(18\\d{2})(\\d{7})","$1 $2",["18[68]"],"0$1"],[,"(18\\d)(\\d{8})","$1 $2",["18[2-579]"],"0$1"],[,"(700)(\\d{4})(\\d{4})","$1 $2 $3",["700"],"0$1"],[,"(138)(\\d{4})","$1 $2",["138"],"0$1"],[,"(15[013-68])(\\d{2})(\\d{8})",
"$1 $2 $3",["15[013-68]"],"0$1"],[,"(15[279]\\d)(\\d{2})(\\d{7})","$1 $2 $3",["15[279]"],"0$1"],[,"(1[67]\\d)(\\d{2})(\\d{7,8})","$1 $2 $3",["1(?:6[023]|7)"],"0$1"]],,[,,"16(?:4\\d{1,10}|[89]\\d{1,11})","\\d{4,14}",,,"16412345"],,,[,,"NA","NA"],[,,"18(?:1\\d{5,11}|[2-9]\\d{8})","\\d{8,14}",,,"18500123456"],,,[,,"1(?:5(?:(?:2\\d55|7\\d99|9\\d33)\\d{7}|(?:[034568]00|113)\\d{8})|6(?:013|255|399)\\d{7,8}|7(?:[015]13|[234]55|[69]33|[78]99)\\d{7,8})","\\d{12,13}",,,"177991234567"]],DJ:[,[,,"[27]\\d{7}",
"\\d{8}"],[,,"2(?:1[2-5]|7[45])\\d{5}","\\d{8}",,,"21360003"],[,,"77[0-26-8]\\d{5}","\\d{8}",,,"77831001"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"DJ",253,"00",,,,,,,,[[,"(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],DK:[,[,,"[2-9]\\d{7}","\\d{8}"],[,,"(?:[2-7]\\d|8[126-9]|9[1-36-9])\\d{6}","\\d{8}",,,"32123456"],[,,"(?:[2-7]\\d|8[126-9]|9[1-36-9])\\d{6}","\\d{8}",,,"20123456"],[,,"80\\d{6}","\\d{8}",
,,"80123456"],[,,"90\\d{6}","\\d{8}",,,"90123456"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"DK",45,"00",,,,,,,1,[[,"(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],DM:[,[,,"[57-9]\\d{9}","\\d{7}(?:\\d{3})?"],[,,"767(?:2(?:55|66)|4(?:2[01]|4[0-25-9])|50[0-4]|70[1-3])\\d{4}","\\d{7}(?:\\d{3})?",,,"7674201234"],[,,"767(?:2(?:[234689]5|7[5-7])|31[5-7]|61[2-7])\\d{4}","\\d{10}",,,"7672251234"],[,,"8(?:00|44|55|66|77|88)[2-9]\\d{6}","\\d{10}",
,,"8002123456"],[,,"900[2-9]\\d{6}","\\d{10}",,,"9002123456"],[,,"NA","NA"],[,,"5(?:00|33|44|66|77|88)[2-9]\\d{6}","\\d{10}",,,"5002345678"],[,,"NA","NA"],"DM",1,"011","1",,,"1",,,,,,[,,"NA","NA"],,"767",[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],DO:[,[,,"[589]\\d{9}","\\d{7}(?:\\d{3})?"],[,,"8(?:[04]9[2-9]\\d{6}|29(?:2(?:[0-59]\\d|6[04-9]|7[0-27]|8[0237-9])|3(?:[0-35-9]\\d|4[7-9])|[45]\\d{2}|6(?:[0-27-9]\\d|[3-5][1-9]|6[0135-8])|7(?:0[013-9]|[1-37]\\d|4[1-35689]|5[1-4689]|6[1-57-9]|8[1-79]|9[1-8])|8(?:0[146-9]|1[0-48]|[248]\\d|3[1-79]|5[01589]|6[013-68]|7[124-8]|9[0-8])|9(?:[0-24]\\d|3[02-46-9]|5[0-79]|60|7[0169]|8[57-9]|9[02-9]))\\d{4})",
"\\d{7}(?:\\d{3})?",,,"8092345678"],[,,"8[024]9[2-9]\\d{6}","\\d{7}(?:\\d{3})?",,,"8092345678"],[,,"8(?:00|44|55|66|77|88)[2-9]\\d{6}","\\d{10}",,,"8002123456"],[,,"900[2-9]\\d{6}","\\d{10}",,,"9002123456"],[,,"NA","NA"],[,,"5(?:00|33|44|66|77|88)[2-9]\\d{6}","\\d{10}",,,"5002345678"],[,,"NA","NA"],"DO",1,"011","1",,,"1",,,,,,[,,"NA","NA"],,"8[024]9",[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],DZ:[,[,,"(?:[1-4]|[5-9]\\d)\\d{7}","\\d{8,9}"],[,,"(?:1\\d|2[013-79]|3[0-8]|4[0135689])\\d{6}|9619\\d{5}",
"\\d{8,9}",,,"12345678"],[,,"(?:5[4-6]|7[7-9])\\d{7}|6(?:[569]\\d|7[0-6])\\d{6}","\\d{9}",,,"551234567"],[,,"800\\d{6}","\\d{9}",,,"800123456"],[,,"80[3-689]1\\d{5}","\\d{9}",,,"808123456"],[,,"80[12]1\\d{5}","\\d{9}",,,"801123456"],[,,"NA","NA"],[,,"98[23]\\d{6}","\\d{9}",,,"983123456"],"DZ",213,"00","0",,,"0",,,,[[,"([1-4]\\d)(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[1-4]"],"0$1"],[,"([5-8]\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[5-8]"],"0$1"],[,"(9\\d)(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",
["9"],"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],EC:[,[,,"1\\d{9,10}|[2-8]\\d{7}|9\\d{8}","\\d{7,11}"],[,,"[2-7][2-7]\\d{6}","\\d{7,8}",,,"22123456"],[,,"9(?:39|[45][89]|[67][7-9]|[89]\\d)\\d{6}","\\d{9}",,,"991234567"],[,,"1800\\d{6,7}","\\d{10,11}",,,"18001234567"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"[2-7]890\\d{4}","\\d{8}",,,"28901234"],"EC",593,"00","0",,,"0",,,,[[,"(\\d)(\\d{3})(\\d{4})","$1 $2-$3",["[247]|[356][2-8]"],"(0$1)"],[,"(\\d{2})(\\d{3})(\\d{4})",
"$1 $2 $3",["9"],"0$1"],[,"(1800)(\\d{3})(\\d{3,4})","$1 $2 $3",["1"],"$1"]],[[,"(\\d)(\\d{3})(\\d{4})","$1-$2-$3",["[247]|[356][2-8]"]],[,"(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["9"],"0$1"],[,"(1800)(\\d{3})(\\d{3,4})","$1 $2 $3",["1"],"$1"]],[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],EE:[,[,,"1\\d{3,4}|[3-9]\\d{6,7}|800\\d{6,7}","\\d{4,10}"],[,,"(?:3[23589]|4[3-8]|6\\d|7[1-9]|88)\\d{5}","\\d{7}",,,"3212345"],[,,"(?:5\\d|8[1-5])\\d{6}|5(?:[02]\\d{2}|1(?:[0-8]\\d|95)|5[0-478]\\d|64[0-4]|65[1-589])\\d{3}",
"\\d{7,8}",,,"51234567"],[,,"800(?:0\\d{3}|1\\d|[2-9])\\d{3}","\\d{7,10}",,,"80012345"],[,,"(?:40\\d{2}|900)\\d{4}","\\d{7,8}",,,"9001234"],[,,"NA","NA"],[,,"70[0-2]\\d{5}","\\d{8}",,,"70012345"],[,,"NA","NA"],"EE",372,"00",,,,,,,,[[,"([3-79]\\d{2})(\\d{4})","$1 $2",["[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]","[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]"]],[,"(70)(\\d{2})(\\d{4})","$1 $2 $3",["70"]],[,"(8000)(\\d{3})(\\d{3})","$1 $2 $3",["800","8000"]],[,"([458]\\d{3})(\\d{3,4})",
"$1 $2",["40|5|8(?:00|[1-5])","40|5|8(?:00[1-9]|[1-5])"]]],,[,,"NA","NA"],,,[,,"1\\d{3,4}|800[2-9]\\d{3}","\\d{4,7}",,,"8002123"],[,,"1(?:2[01245]|3[0-6]|4[1-489]|5[0-59]|6[1-46-9]|7[0-27-9]|8[189]|9[012])\\d{1,2}","\\d{4,5}",,,"12123"],,,[,,"NA","NA"]],EG:[,[,,"1\\d{4,9}|[2456]\\d{8}|3\\d{7}|[89]\\d{8,9}","\\d{5,10}"],[,,"(?:1(?:3[23]\\d|5(?:[23]|9\\d))|2[2-4]\\d{2}|3\\d{2}|4(?:0[2-5]|[578][23]|64)\\d|5(?:0[2-7]|[57][23])\\d|6[24-689]3\\d|8(?:2[2-57]|4[26]|6[237]|8[2-4])\\d|9(?:2[27]|3[24]|52|6[2356]|7[2-4])\\d)\\d{5}|1[69]\\d{3}",
"\\d{5,9}",,,"234567890"],[,,"1(?:0[0-269]|1[0-245]|2[0-278])\\d{7}","\\d{10}",,,"1001234567"],[,,"800\\d{7}","\\d{10}",,,"8001234567"],[,,"900\\d{7}","\\d{10}",,,"9001234567"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"EG",20,"00","0",,,"0",,,,[[,"(\\d)(\\d{7,8})","$1 $2",["[23]"],"0$1"],[,"(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["1[012]|[89]00"],"0$1"],[,"(\\d{2})(\\d{6,7})","$1 $2",["1[35]|[4-6]|[89][2-9]"],"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],EH:[,[,,"[5689]\\d{8}",
"\\d{9}"],[,,"528[89]\\d{5}","\\d{9}",,,"528812345"],[,,"6(?:0[0-8]|[12-79]\\d|8[017])\\d{6}","\\d{9}",,,"650123456"],[,,"80\\d{7}","\\d{9}",,,"801234567"],[,,"89\\d{7}","\\d{9}",,,"891234567"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"EH",212,"00","0",,,"0",,,,,,[,,"NA","NA"],,"528[89]",[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],ER:[,[,,"[178]\\d{6}","\\d{6,7}"],[,,"1(?:1[12568]|20|40|55|6[146])\\d{4}|8\\d{6}","\\d{6,7}",,,"8370362"],[,,"17[1-3]\\d{4}|7\\d{6}","\\d{7}",,,"7123456"],[,,"NA","NA"],
[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"ER",291,"00","0",,,"0",,,,[[,"(\\d)(\\d{3})(\\d{3})","$1 $2 $3",,"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],ES:[,[,,"[5-9]\\d{8}","\\d{9}"],[,,"8(?:[13]0|[28][0-8]|[47][1-9]|5[01346-9]|6[0457-9])\\d{6}|9(?:[1238][0-8]\\d{6}|4[1-9]\\d{6}|5\\d{7}|6(?:[0-8]\\d{6}|9(?:0(?:[0-57-9]\\d{4}|6(?:0[0-8]|1[1-9]|[2-9]\\d)\\d{2})|[1-9]\\d{5}))|7(?:[124-9]\\d{2}|3(?:[0-8]\\d|9[1-9]))\\d{4})","\\d{9}",,,"810123456"],[,,"(?:6\\d{6}|7[1-4]\\d{5}|9(?:6906(?:09|10)|7390\\d{2}))\\d{2}",
"\\d{9}",,,"612345678"],[,,"[89]00\\d{6}","\\d{9}",,,"800123456"],[,,"80[367]\\d{6}","\\d{9}",,,"803123456"],[,,"90[12]\\d{6}","\\d{9}",,,"901123456"],[,,"70\\d{7}","\\d{9}",,,"701234567"],[,,"NA","NA"],"ES",34,"00",,,,,,,,[[,"([89]00)(\\d{3})(\\d{3})","$1 $2 $3",["[89]00"]],[,"([5-9]\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[568]|[79][0-8]"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"51\\d{7}","\\d{9}",,,"511234567"],,,[,,"NA","NA"]],ET:[,[,,"[1-59]\\d{8}","\\d{7,9}"],[,,"(?:11(?:1(?:1[124]|2[2-57]|3[1-5]|5[5-8]|8[6-8])|2(?:13|3[6-8]|5[89]|7[05-9]|8[2-6])|3(?:2[01]|3[0-289]|4[1289]|7[1-4]|87)|4(?:1[69]|3[2-49]|4[0-3]|6[5-8])|5(?:1[578]|44|5[0-4])|6(?:18|2[69]|4[5-7]|5[1-5]|6[0-59]|8[015-8]))|2(?:2(?:11[1-9]|22[0-7]|33\\d|44[1467]|66[1-68])|5(?:11[124-6]|33[2-8]|44[1467]|55[14]|66[1-3679]|77[124-79]|880))|3(?:3(?:11[0-46-8]|22[0-6]|33[0134689]|44[04]|55[0-6]|66[01467])|4(?:44[0-8]|55[0-69]|66[0-3]|77[1-5]))|4(?:6(?:22[0-24-7]|33[1-5]|44[13-69]|55[14-689]|660|88[1-4])|7(?:11[1-9]|22[1-9]|33[13-7]|44[13-6]|55[1-689]))|5(?:7(?:227|55[05]|(?:66|77)[14-8])|8(?:11[149]|22[013-79]|33[0-68]|44[013-8]|550|66[1-5]|77\\d)))\\d{4}",
"\\d{7,9}",,,"111112345"],[,,"9(?:[1-4]\\d|5[89]|66)\\d{6}","\\d{9}",,,"911234567"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"ET",251,"00","0",,,"0",,,,[[,"([1-59]\\d)(\\d{3})(\\d{4})","$1 $2 $3",,"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],FI:[,[,,"1\\d{4,11}|[2-9]\\d{4,10}","\\d{5,12}"],[,,"1(?:[3569][1-8]\\d{3,9}|[47]\\d{5,10})|2[1-8]\\d{3,9}|3(?:[1-8]\\d{3,9}|9\\d{4,8})|[5689][1-8]\\d{3,9}","\\d{5,12}",,,"1312345678"],[,,"4\\d{5,10}|50\\d{4,8}",
"\\d{6,11}",,,"412345678"],[,,"800\\d{4,7}","\\d{7,10}",,,"8001234567"],[,,"[67]00\\d{5,6}","\\d{8,9}",,,"600123456"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"FI",358,"00|99[049]","0",,,"0",,,,[[,"(\\d{3})(\\d{3,7})","$1 $2",["(?:[1-3]00|[6-8]0)"],"0$1"],[,"(116\\d{3})","$1",["116"],"$1"],[,"(\\d{2})(\\d{4,10})","$1 $2",["[14]|2[09]|50|7[135]"],"0$1"],[,"(\\d)(\\d{4,11})","$1 $2",["[25689][1-8]|3"],"0$1"]],,[,,"NA","NA"],1,,[,,"[13]00\\d{3,7}|2(?:0(?:0\\d{3,7}|2[023]\\d{1,6}|9[89]\\d{1,6}))|60(?:[12]\\d{5,6}|6\\d{7})|7(?:1\\d{7}|3\\d{8}|5[03-9]\\d{2,7})",
"\\d{5,10}",,,"100123"],[,,"[13]0\\d{4,8}|2(?:0(?:[016-8]\\d{3,7}|[2-59]\\d{2,7})|9\\d{4,8})|60(?:[12]\\d{5,6}|6\\d{7})|7(?:1\\d{7}|3\\d{8}|5[03-9]\\d{2,7})","\\d{5,10}",,,"10112345"],,,[,,"NA","NA"]],FJ:[,[,,"[36-9]\\d{6}|0\\d{10}","\\d{7}(?:\\d{4})?"],[,,"(?:3[0-5]|6[25-7]|8[58])\\d{5}","\\d{7}",,,"3212345"],[,,"(?:7[0-8]|8[034679]|9\\d)\\d{5}","\\d{7}",,,"7012345"],[,,"0800\\d{7}","\\d{11}",,,"08001234567"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"FJ",679,"0(?:0|52)",,,,,,"00",
,[[,"(\\d{3})(\\d{4})","$1 $2",["[36-9]"]],[,"(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["0"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],1,,[,,"NA","NA"]],FK:[,[,,"[2-7]\\d{4}","\\d{5}"],[,,"[2-47]\\d{4}","\\d{5}",,,"31234"],[,,"[56]\\d{4}","\\d{5}",,,"51234"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"FK",500,"00",,,,,,,,,,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],FM:[,[,,"[39]\\d{6}","\\d{7}"],[,,"3[2357]0[1-9]\\d{3}|9[2-6]\\d{5}","\\d{7}",,,"3201234"],
[,,"3[2357]0[1-9]\\d{3}|9[2-7]\\d{5}","\\d{7}",,,"3501234"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"FM",691,"00",,,,,,,,[[,"(\\d{3})(\\d{4})","$1 $2"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],FO:[,[,,"[2-9]\\d{5}","\\d{6}"],[,,"(?:20|[3-4]\\d|8[19])\\d{4}","\\d{6}",,,"201234"],[,,"(?:[27][1-9]|5\\d)\\d{4}","\\d{6}",,,"211234"],[,,"80[257-9]\\d{3}","\\d{6}",,,"802123"],[,,"90(?:[1345][15-7]|2[125-7]|99)\\d{2}","\\d{6}",,,"901123"],[,,"NA","NA"],
[,,"NA","NA"],[,,"(?:6[0-36]|88)\\d{4}","\\d{6}",,,"601234"],"FO",298,"00",,,,"(10(?:01|[12]0|88))",,,,[[,"(\\d{6})","$1",,,"$CC $1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],FR:[,[,,"[1-9]\\d{8}","\\d{9}"],[,,"[1-5]\\d{8}","\\d{9}",,,"123456789"],[,,"6\\d{8}|7(?:00\\d{6}|[3-9]\\d{7})","\\d{9}",,,"612345678"],[,,"80\\d{7}","\\d{9}",,,"801234567"],[,,"89[1-37-9]\\d{6}","\\d{9}",,,"891123456"],[,,"8(?:1[019]|2[0156]|84|90)\\d{6}","\\d{9}",,,"810123456"],[,,"NA","NA"],[,,"9\\d{8}",
"\\d{9}",,,"912345678"],"FR",33,"00","0",,,"0",,,,[[,"([1-79])(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4 $5",["[1-79]"],"0$1"],[,"(1\\d{2})(\\d{3})","$1 $2",["11"],"$1"],[,"(8\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"],"0 $1"]],[[,"([1-79])(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4 $5",["[1-79]"],"0$1"],[,"(8\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"],"0 $1"]],[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],GA:[,[,,"0?\\d{7}","\\d{7,8}"],[,,"01\\d{6}","\\d{8}",
,,"01441234"],[,,"0?[2-7]\\d{6}","\\d{7,8}",,,"06031234"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"GA",241,"00",,,,,,,,[[,"(\\d)(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[2-7]"],"0$1"],[,"(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["0"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],1,,[,,"NA","NA"]],GB:[,[,,"\\d{7,10}","\\d{4,10}"],[,,"2(?:0[01378]|3[0189]|4[017]|8[0-46-9]|9[012])\\d{7}|1(?:(?:1(?:3[0-48]|[46][0-4]|5[012789]|7[0-49]|8[01349])|21[0-7]|31[0-8]|[459]1\\d|61[0-46-9]))\\d{6}|1(?:2(?:0[024-9]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-4789]|7[013-9]|9\\d)|3(?:0\\d|[25][02-9]|3[02-579]|[468][0-46-9]|7[1235679]|9[24578])|4(?:0[03-9]|[28][02-5789]|[37]\\d|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1235-9]|2[024-9]|3[015689]|4[02-9]|5[03-9]|6\\d|7[0-35-9]|8[0-468]|9[0-5789])|6(?:0[034689]|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0124578])|7(?:0[0246-9]|2\\d|3[023678]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-5789]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\d|8[02-9]|9[02569])|9(?:0[02-589]|2[02-689]|3[1-5789]|4[2-9]|5[0-579]|6[234789]|7[0124578]|8\\d|9[2-57]))\\d{6}|1(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-4789]|8[345])))|3(?:638[2-5]|647[23]|8(?:47[04-9]|64[015789]))|4(?:044[1-7]|20(?:2[23]|8\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[123]))|5(?:24(?:3[2-79]|6\\d)|276\\d|6(?:26[06-9]|686))|6(?:06(?:4\\d|7[4-79])|295[567]|35[34]\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|955[0-4])|7(?:26(?:6[13-9]|7[0-7])|442\\d|50(?:2[0-3]|[3-68]2|76))|8(?:27[56]\\d|37(?:5[2-5]|8[239])|84(?:3[2-58]))|9(?:0(?:0(?:6[1-8]|85)|52\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\d{3}|176888[234678]\\d{2}|16977[23]\\d{3}",
"\\d{4,10}",,,"1212345678"],[,,"7(?:[1-4]\\d\\d|5(?:0[0-8]|[13-9]\\d|2[0-35-9])|7(?:0[1-9]|[1-7]\\d|8[02-9]|9[0-689])|8(?:[014-9]\\d|[23][0-8])|9(?:[04-9]\\d|1[02-9]|2[0-35-9]|3[0-689]))\\d{6}","\\d{10}",,,"7400123456"],[,,"80(?:0(?:1111|\\d{6,7})|8\\d{7})|500\\d{6}","\\d{7}(?:\\d{2,3})?",,,"8001234567"],[,,"(?:87[123]|9(?:[01]\\d|8[2349]))\\d{7}","\\d{10}",,,"9012345678"],[,,"8(?:4(?:5464\\d|[2-5]\\d{7})|70\\d{7})","\\d{7}(?:\\d{3})?",,,"8431234567"],[,,"70\\d{8}","\\d{10}",,,"7012345678"],[,,"56\\d{8}",
"\\d{10}",,,"5612345678"],"GB",44,"00","0"," x",,"0",,,,[[,"(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["2|5[56]|7(?:0|6[013-9])","2|5[56]|7(?:0|6(?:[013-9]|2[0-35-9]))"],"0$1"],[,"(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["1(?:1|\\d1)|3|9[018]"],"0$1"],[,"(\\d{5})(\\d{4,5})","$1 $2",["1(?:38|5[23]|69|76|94)","1(?:387|5(?:24|39)|697|768|946)","1(?:3873|5(?:242|39[456])|697[347]|768[347]|9467)"],"0$1"],[,"(1\\d{3})(\\d{5,6})","$1 $2",["1"],"0$1"],[,"(7\\d{3})(\\d{6})","$1 $2",["7(?:[1-5789]|62)","7(?:[1-5789]|624)"],
"0$1"],[,"(800)(\\d{4})","$1 $2",["800","8001","80011","800111","8001111"],"0$1"],[,"(845)(46)(4\\d)","$1 $2 $3",["845","8454","84546","845464"],"0$1"],[,"(8\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["8(?:4[2-5]|7[0-3])"],"0$1"],[,"(80\\d)(\\d{3})(\\d{4})","$1 $2 $3",["80"],"0$1"],[,"([58]00)(\\d{6})","$1 $2",["[58]00"],"0$1"]],,[,,"76(?:0[012]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\d{6}","\\d{10}",,,"7640123456"],1,,[,,"NA","NA"],[,,"(?:3[0347]|55)\\d{8}","\\d{10}",,,"5512345678"],,,[,,"NA","NA"]],
GD:[,[,,"[4589]\\d{9}","\\d{7}(?:\\d{3})?"],[,,"473(?:2(?:3[0-2]|69)|3(?:2[89]|86)|4(?:[06]8|3[5-9]|4[0-49]|5[5-79]|68|73|90)|63[68]|7(?:58|84)|800|938)\\d{4}","\\d{7}(?:\\d{3})?",,,"4732691234"],[,,"473(?:4(?:0[2-79]|1[04-9]|20|58)|5(?:2[01]|3[3-8])|901)\\d{4}","\\d{10}",,,"4734031234"],[,,"8(?:00|44|55|66|77|88)[2-9]\\d{6}","\\d{10}",,,"8002123456"],[,,"900[2-9]\\d{6}","\\d{10}",,,"9002123456"],[,,"NA","NA"],[,,"5(?:00|33|44|66|77|88)[2-9]\\d{6}","\\d{10}",,,"5002345678"],[,,"NA","NA"],"GD",1,"011",
"1",,,"1",,,,,,[,,"NA","NA"],,"473",[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],GE:[,[,,"[34578]\\d{8}","\\d{6,9}"],[,,"(?:3(?:[256]\\d|4[124-9]|7[0-4])|4(?:1\\d|2[2-7]|3[1-79]|4[2-8]|7[239]|9[1-7]))\\d{6}","\\d{6,9}",,,"322123456"],[,,"5(?:14|5[01578]|68|7[0147-9]|9[0-35-9])\\d{6}","\\d{9}",,,"555123456"],[,,"800\\d{6}","\\d{9}",,,"800123456"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"706\\d{6}","\\d{9}",,,"706123456"],"GE",995,"00","0",,,"0",,,,[[,"(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",
["[348]"],"0$1"],[,"(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["7"],"0$1"],[,"(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["5"],"$1"]],,[,,"NA","NA"],,,[,,"706\\d{6}","\\d{9}",,,"706123456"],[,,"NA","NA"],,,[,,"NA","NA"]],GF:[,[,,"[56]\\d{8}","\\d{9}"],[,,"594(?:10|2[012457-9]|3[0-57-9]|4[3-9]|5[7-9]|6[0-3]|9[014])\\d{4}","\\d{9}",,,"594101234"],[,,"694(?:[04][0-7]|1[0-5]|3[018]|[29]\\d)\\d{4}","\\d{9}",,,"694201234"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"GF",594,"00",
"0",,,"0",,,,[[,"(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",,"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],GG:[,[,,"[135789]\\d{6,9}","\\d{6,10}"],[,,"1481\\d{6}","\\d{6,10}",,,"1481456789"],[,,"7(?:781|839|911)\\d{6}","\\d{10}",,,"7781123456"],[,,"80(?:0(?:1111|\\d{6,7})|8\\d{7})|500\\d{6}","\\d{7}(?:\\d{2,3})?",,,"8001234567"],[,,"(?:87[123]|9(?:[01]\\d|8[0-3]))\\d{7}","\\d{10}",,,"9012345678"],[,,"8(?:4(?:5464\\d|[2-5]\\d{7})|70\\d{7})","\\d{7}(?:\\d{3})?",,,"8431234567"],
[,,"70\\d{8}","\\d{10}",,,"7012345678"],[,,"56\\d{8}","\\d{10}",,,"5612345678"],"GG",44,"00","0"," x",,"0",,,,,,[,,"76(?:0[012]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\d{6}","\\d{10}",,,"7640123456"],,,[,,"NA","NA"],[,,"(?:3[0347]|55)\\d{8}","\\d{10}",,,"5512345678"],,,[,,"NA","NA"]],GH:[,[,,"[235]\\d{8}|8\\d{7}","\\d{7,9}"],[,,"3(?:0[237]\\d|[167](?:2[0-6]|7\\d)|2(?:2[0-5]|7\\d)|3(?:2[0-3]|7\\d)|4(?:2[013-9]|3[01]|7\\d)|5(?:2[0-7]|7\\d)|8(?:2[0-2]|7\\d)|9(?:20|7\\d))\\d{5}","\\d{7,9}",,,"302345678"],
[,,"(?:2[034678]\\d|5(?:[047]\\d|5[3-6]|6[01]))\\d{6}","\\d{9}",,,"231234567"],[,,"800\\d{5}","\\d{8}",,,"80012345"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"GH",233,"00","0",,,"0",,,,[[,"(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[235]"],"0$1"],[,"(\\d{3})(\\d{5})","$1 $2",["8"],"0$1"]],,[,,"NA","NA"],,,[,,"800\\d{5}","\\d{8}",,,"80012345"],[,,"NA","NA"],,,[,,"NA","NA"]],GI:[,[,,"[2568]\\d{7}","\\d{8}"],[,,"2(?:00\\d|1(?:6[24-7]|9\\d)|2(?:00|2[2457]))\\d{4}","\\d{8}",,,"20012345"],[,
,"(?:5[46-8]|62)\\d{6}","\\d{8}",,,"57123456"],[,,"80\\d{6}","\\d{8}",,,"80123456"],[,,"8[1-689]\\d{6}","\\d{8}",,,"88123456"],[,,"87\\d{6}","\\d{8}",,,"87123456"],[,,"NA","NA"],[,,"NA","NA"],"GI",350,"00",,,,,,,,[[,"(\\d{3})(\\d{5})","$1 $2",["2"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],GL:[,[,,"[1-689]\\d{5}","\\d{6}"],[,,"(?:19|3[1-6]|6[14689]|8[14-79]|9\\d)\\d{4}","\\d{6}",,,"321000"],[,,"[245][2-9]\\d{4}","\\d{6}",,,"221234"],[,,"80\\d{4}","\\d{6}",,,"801234"],[,,"NA",
"NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"3[89]\\d{4}","\\d{6}",,,"381234"],"GL",299,"00",,,,,,,,[[,"(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],GM:[,[,,"[2-9]\\d{6}","\\d{7}"],[,,"(?:4(?:[23]\\d{2}|4(?:1[024679]|[6-9]\\d))|5(?:54[0-7]|6(?:[67]\\d)|7(?:1[04]|2[035]|3[58]|48))|8\\d{3})\\d{3}","\\d{7}",,,"5661234"],[,,"[23679]\\d{6}","\\d{7}",,,"3012345"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"GM",220,"00",,,,,,,,[[,
"(\\d{3})(\\d{4})","$1 $2"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],GN:[,[,,"[367]\\d{7,8}","\\d{8,9}"],[,,"30(?:24|3[12]|4[1-35-7]|5[13]|6[189]|[78]1|9[1478])\\d{4}","\\d{8}",,,"30241234"],[,,"6[02356]\\d{7}","\\d{9}",,,"601123456"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"722\\d{6}","\\d{9}",,,"722123456"],"GN",224,"00",,,,,,,,[[,"(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["3"]],[,"(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[67]"]]],,[,,"NA",
"NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],GP:[,[,,"[56]\\d{8}","\\d{9}"],[,,"590(?:0[13468]|1[012]|2[0-68]|3[28]|4[0-8]|5[579]|6[0189]|70|8[0-689]|9\\d)\\d{4}","\\d{9}",,,"590201234"],[,,"690(?:0[0-7]|[1-9]\\d)\\d{4}","\\d{9}",,,"690301234"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"GP",590,"00","0",,,"0",,,,[[,"([56]90)(\\d{2})(\\d{4})","$1 $2-$3",,"0$1"]],,[,,"NA","NA"],1,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],GQ:[,[,,"[23589]\\d{8}","\\d{9}"],[,,"3(?:3(?:3\\d[7-9]|[0-24-9]\\d[46])|5\\d{2}[7-9])\\d{4}",
"\\d{9}",,,"333091234"],[,,"(?:222|55[15])\\d{6}","\\d{9}",,,"222123456"],[,,"80\\d[1-9]\\d{5}","\\d{9}",,,"800123456"],[,,"90\\d[1-9]\\d{5}","\\d{9}",,,"900123456"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"GQ",240,"00",,,,,,,,[[,"(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[235]"]],[,"(\\d{3})(\\d{6})","$1 $2",["[89]"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],GR:[,[,,"[26-9]\\d{9}","\\d{10}"],[,,"2(?:1\\d{2}|2(?:2[1-46-9]|3[1-8]|4[1-7]|5[1-4]|6[1-8]|7[1-5]|[89][1-9])|3(?:1\\d|2[1-57]|[35][1-3]|4[13]|7[1-7]|8[124-6]|9[1-79])|4(?:1\\d|2[1-8]|3[1-4]|4[13-5]|6[1-578]|9[1-5])|5(?:1\\d|[29][1-4]|3[1-5]|4[124]|5[1-6])|6(?:1\\d|3[1245]|4[1-7]|5[13-9]|[269][1-6]|7[14]|8[1-5])|7(?:1\\d|2[1-5]|3[1-6]|4[1-7]|5[1-57]|6[135]|9[125-7])|8(?:1\\d|2[1-5]|[34][1-4]|9[1-57]))\\d{6}",
"\\d{10}",,,"2123456789"],[,,"69\\d{8}","\\d{10}",,,"6912345678"],[,,"800\\d{7}","\\d{10}",,,"8001234567"],[,,"90[19]\\d{7}","\\d{10}",,,"9091234567"],[,,"8(?:0[16]|12|25)\\d{7}","\\d{10}",,,"8011234567"],[,,"70\\d{8}","\\d{10}",,,"7012345678"],[,,"NA","NA"],"GR",30,"00",,,,,,,,[[,"([27]\\d)(\\d{4})(\\d{4})","$1 $2 $3",["21|7"]],[,"(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["2[2-9]1|[689]"]],[,"(2\\d{3})(\\d{6})","$1 $2",["2[2-9][02-9]"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],
GT:[,[,,"[2-7]\\d{7}|1[89]\\d{9}","\\d{8}(?:\\d{3})?"],[,,"[267][2-9]\\d{6}","\\d{8}",,,"22456789"],[,,"[345]\\d{7}","\\d{8}",,,"51234567"],[,,"18[01]\\d{8}","\\d{11}",,,"18001112222"],[,,"19\\d{9}","\\d{11}",,,"19001112222"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"GT",502,"00",,,,,,,,[[,"(\\d{4})(\\d{4})","$1 $2",["[2-7]"]],[,"(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["1"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],GU:[,[,,"[5689]\\d{9}","\\d{7}(?:\\d{3})?"],[,,"671(?:3(?:00|3[39]|4[349]|55|6[26])|4(?:56|7[1-9]|8[236-9])|5(?:55|6[2-5]|88)|6(?:3[2-578]|4[24-9]|5[34]|78|8[5-9])|7(?:[079]7|2[0167]|3[45]|8[789])|8(?:[2-5789]8|6[48])|9(?:2[29]|6[79]|7[179]|8[789]|9[78]))\\d{4}",
"\\d{7}(?:\\d{3})?",,,"6713001234"],[,,"671(?:3(?:00|3[39]|4[349]|55|6[26])|4(?:56|7[1-9]|8[236-9])|5(?:55|6[2-5]|88)|6(?:3[2-578]|4[24-9]|5[34]|78|8[5-9])|7(?:[079]7|2[0167]|3[45]|8[789])|8(?:[2-5789]8|6[48])|9(?:2[29]|6[79]|7[179]|8[789]|9[78]))\\d{4}","\\d{7}(?:\\d{3})?",,,"6713001234"],[,,"8(?:00|44|55|66|77|88)[2-9]\\d{6}","\\d{10}",,,"8002123456"],[,,"900[2-9]\\d{6}","\\d{10}",,,"9002123456"],[,,"NA","NA"],[,,"5(?:00|33|44|66|77|88)[2-9]\\d{6}","\\d{10}",,,"5002345678"],[,,"NA","NA"],"GU",1,
"011","1",,,"1",,,1,,,[,,"NA","NA"],,"671",[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],GW:[,[,,"(?:4(?:0\\d{5}|4\\d{7})|9\\d{8})","\\d{7,9}"],[,,"443(?:2[0125]|3[1245]|4[12]|5[1-4]|70|9[1-467])\\d{4}","\\d{7,9}",,,"443201234"],[,,"9(?:55\\d|6(?:6\\d|9[012])|77\\d)\\d{5}","\\d{7,9}",,,"955012345"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"40\\d{5}","\\d{7,9}",,,"4012345"],"GW",245,"00",,,,,,,,[[,"(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["44|9[567]"]],[,"(\\d{3})(\\d{4})","$1 $2",["40"]]],
,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],GY:[,[,,"[2-4679]\\d{6}","\\d{7}"],[,,"(?:2(?:1[6-9]|2[0-35-9]|3[1-4]|5[3-9]|6\\d|7[0-24-79])|3(?:2[25-9]|3\\d)|4(?:4[0-24]|5[56])|77[1-57])\\d{4}","\\d{7}",,,"2201234"],[,,"6\\d{6}","\\d{7}",,,"6091234"],[,,"(?:289|862)\\d{4}","\\d{7}",,,"2891234"],[,,"9008\\d{3}","\\d{7}",,,"9008123"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"GY",592,"001",,,,,,,,[[,"(\\d{3})(\\d{4})","$1 $2"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA",
"NA"]],HK:[,[,,"[235-7]\\d{7}|8\\d{7,8}|9\\d{4,10}","\\d{5,11}"],[,,"(?:[23]\\d|58)\\d{6}","\\d{8}",,,"21234567"],[,,"(?:5[1-79]\\d|6\\d{2}|8[4-79]\\d|9(?:0[1-9]|[1-8]\\d))\\d{5}","\\d{8}",,,"51234567"],[,,"800\\d{6}","\\d{9}",,,"800123456"],[,,"900(?:[0-24-9]\\d{7}|3\\d{1,4})","\\d{5,11}",,,"90012345678"],[,,"NA","NA"],[,,"8[1-3]\\d{6}","\\d{8}",,,"81123456"],[,,"NA","NA"],"HK",852,"00",,,,,,,,[[,"(\\d{4})(\\d{4})","$1 $2",["[235-7]|[89](?:0[1-9]|[1-9])"]],[,"(800)(\\d{3})(\\d{3})","$1 $2 $3",["800"]],
[,"(900)(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3 $4",["900"]],[,"(900)(\\d{2,5})","$1 $2",["900"]]],,[,,"7\\d{7}","\\d{8}",,,"71234567"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],HN:[,[,,"[237-9]\\d{7}","\\d{8}"],[,,"2(?:2(?:0[019]|1[1-36]|[23]\\d|4[056]|5[57]|7[01389]|8[0146-9]|9[012])|4(?:2[3-59]|3[13-689]|4[0-68]|5[1-35])|5(?:4[3-5]|5\\d|6[56]|74)|6(?:[056]\\d|3[04]|4[0-378]|[78][0-8]|9[01])|7(?:6[46-9]|7[02-9]|8[34])|8(?:79|8[0-35789]|9[1-57-9]))\\d{4}","\\d{8}",,,"22123456"],[,,"[37-9]\\d{7}",
"\\d{8}",,,"91234567"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"HN",504,"00",,,,,,,,[[,"(\\d{4})(\\d{4})","$1-$2"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],HR:[,[,,"[1-7]\\d{5,8}|[89]\\d{6,11}","\\d{6,12}"],[,,"1\\d{7}|(?:2[0-3]|3[1-5]|4[02-47-9]|5[1-3])\\d{6,7}","\\d{6,9}",,,"12345678"],[,,"9(?:[1-9]\\d{6,10}|01\\d{6,9})","\\d{8,12}",,,"912345678"],[,,"80[01]\\d{4,7}","\\d{7,10}",,,"8001234567"],[,,"6(?:[01459]\\d{4,7})","\\d{6,9}",,,"611234"],
[,,"NA","NA"],[,,"7[45]\\d{4,7}","\\d{6,9}",,,"741234567"],[,,"NA","NA"],"HR",385,"00","0",,,"0",,,,[[,"(1)(\\d{4})(\\d{3})","$1 $2 $3",["1"],"0$1"],[,"(6[09])(\\d{4})(\\d{3})","$1 $2 $3",["6[09]"],"0$1"],[,"([67]2)(\\d{3})(\\d{3,4})","$1 $2 $3",["[67]2"],"0$1"],[,"([2-5]\\d)(\\d{3})(\\d{3,4})","$1 $2 $3",["[2-5]"],"0$1"],[,"(9\\d)(\\d{3})(\\d{3,4})","$1 $2 $3",["9"],"0$1"],[,"(9\\d)(\\d{4})(\\d{4})","$1 $2 $3",["9"],"0$1"],[,"(9\\d)(\\d{3,4})(\\d{3})(\\d{3})","$1 $2 $3 $4",["9"],"0$1"],[,"(\\d{2})(\\d{2})(\\d{2,3})",
"$1 $2 $3",["6[0145]|7"],"0$1"],[,"(\\d{2})(\\d{3,4})(\\d{3})","$1 $2 $3",["6[0145]|7"],"0$1"],[,"(80[01])(\\d{2})(\\d{2,3})","$1 $2 $3",["8"],"0$1"],[,"(80[01])(\\d{3,4})(\\d{3})","$1 $2 $3",["8"],"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"[76]2\\d{6,7}","\\d{8,9}",,,"62123456"],,,[,,"NA","NA"]],HT:[,[,,"[2-489]\\d{7}","\\d{8}"],[,,"2(?:[248]\\d|5[1-5]|94)\\d{5}","\\d{8}",,,"22453300"],[,,"(?:3[1-9]\\d|4\\d{2}|9(?:8[0-35]|9[5-9]))\\d{5}","\\d{8}",,,"34101234"],[,,"8\\d{7}","\\d{8}",,,"80012345"],
[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"98[89]\\d{5}","\\d{8}",,,"98901234"],"HT",509,"00",,,,,,,,[[,"(\\d{2})(\\d{2})(\\d{4})","$1 $2 $3"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],HU:[,[,,"[1-9]\\d{7,8}","\\d{6,9}"],[,,"(?:1\\d|2(?:1\\d|[2-9])|3(?:[2-7]|8\\d)|4[24-9]|5[2-79]|6[23689]|7(?:1\\d|[2-9])|8[2-57-9]|9[2-69])\\d{6}","\\d{6,9}",,,"12345678"],[,,"(?:[257]0|3[01])\\d{7}","\\d{9}",,,"201234567"],[,,"80\\d{6}","\\d{8}",,,"80123456"],[,,"9[01]\\d{6}","\\d{8}",,,"90123456"],
[,,"40\\d{6}","\\d{8}",,,"40123456"],[,,"NA","NA"],[,,"NA","NA"],"HU",36,"00","06",,,"06",,,,[[,"(1)(\\d{3})(\\d{4})","$1 $2 $3",["1"],"($1)"],[,"(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[2-9]"],"($1)"]],,[,,"NA","NA"],,,[,,"[48]0\\d{6}","\\d{8}",,,"80123456"],[,,"NA","NA"],,,[,,"NA","NA"]],ID:[,[,,"(?:[1-79]\\d{6,10}|8\\d{7,11})","\\d{5,12}"],[,,"2(?:1(?:14\\d{3}|[0-8]\\d{6,7}|500\\d{3}|9\\d{6})|2\\d{6,8}|4\\d{7,8})|(?:2(?:[35][1-4]|6[0-8]|7[1-6]|8\\d|9[1-8])|3(?:1|[25][1-8]|3[1-68]|4[1-3]|6[1-3568]|7[0-469]|8\\d)|4(?:0[1-589]|1[01347-9]|2[0-36-8]|3[0-24-68]|43|5[1-378]|6[1-5]|7[134]|8[1245])|5(?:1[1-35-9]|2[25-8]|3[124-9]|4[1-3589]|5[1-46]|6[1-8])|6(?:19?|[25]\\d|3[1-69]|4[1-6])|7(?:02|[125][1-9]|[36]\\d|4[1-8]|7[0-36-9])|9(?:0[12]|1[013-8]|2[0-479]|5[125-8]|6[23679]|7[159]|8[01346]))\\d{5,8}",
"\\d{5,11}",,,"612345678"],[,,"(?:2(?:1(?:3[145]|4[01]|5[1-469]|60|8[0359]|9\\d)|2(?:88|9[1256])|3[1-4]9|4(?:36|91)|5(?:1[349]|[2-4]9)|6[0-7]9|7(?:[1-36]9|4[39])|8[1-5]9|9[1-48]9)|3(?:19[1-3]|2[12]9|3[13]9|4(?:1[69]|39)|5[14]9|6(?:1[69]|2[89])|709)|4[13]19|5(?:1(?:19|8[39])|4[129]9|6[12]9)|6(?:19[12]|2(?:[23]9|77))|7(?:1[13]9|2[15]9|419|5(?:1[89]|29)|6[15]9|7[178]9))\\d{5,6}|8[1-35-9]\\d{7,10}","\\d{9,12}",,,"812345678"],[,,"177\\d{6,8}|800\\d{5,7}","\\d{8,11}",,,"8001234567"],[,,"809\\d{7}","\\d{10}",
,,"8091234567"],[,,"804\\d{7}","\\d{10}",,,"8041234567"],[,,"NA","NA"],[,,"NA","NA"],"ID",62,"0(?:0[1789]|10(?:00|1[67]))","0",,,"0",,,,[[,"(\\d{2})(\\d{5,8})","$1 $2",["2[124]|[36]1"],"(0$1)"],[,"(\\d{3})(\\d{5,8})","$1 $2",["[4579]|2[035-9]|[36][02-9]"],"(0$1)"],[,"(8\\d{2})(\\d{3,4})(\\d{3,5})","$1-$2-$3",["8[1-35-9]"],"0$1"],[,"(1)(500)(\\d{3})","$1 $2 $3",["15"],"$1"],[,"(177)(\\d{6,8})","$1 $2",["17"],"0$1"],[,"(800)(\\d{5,7})","$1 $2",["800"],"0$1"],[,"(804)(\\d{3})(\\d{4})","$1 $2 $3",["804"],
"0$1"],[,"(80\\d)(\\d)(\\d{3})(\\d{3})","$1 $2 $3 $4",["80[79]"],"0$1"]],,[,,"NA","NA"],,,[,,"8071\\d{6}","\\d{10}",,,"8071123456"],[,,"1500\\d{3}|8071\\d{6}","\\d{7,10}",,,"8071123456"],,,[,,"NA","NA"]],IE:[,[,,"[124-9]\\d{6,9}","\\d{5,10}"],[,,"1\\d{7,8}|2(?:1\\d{6,7}|3\\d{7}|[24-9]\\d{5})|4(?:0[24]\\d{5}|[1-469]\\d{7}|5\\d{6}|7\\d{5}|8[0-46-9]\\d{7})|5(?:0[45]\\d{5}|1\\d{6}|[23679]\\d{7}|8\\d{5})|6(?:1\\d{6}|[237-9]\\d{5}|[4-6]\\d{7})|7[14]\\d{7}|9(?:1\\d{6}|[04]\\d{7}|[35-9]\\d{5})","\\d{5,10}",
,,"2212345"],[,,"8(?:22\\d{6}|[35-9]\\d{7})","\\d{9}",,,"850123456"],[,,"1800\\d{6}","\\d{10}",,,"1800123456"],[,,"15(?:1[2-8]|[2-8]0|9[089])\\d{6}","\\d{10}",,,"1520123456"],[,,"18[59]0\\d{6}","\\d{10}",,,"1850123456"],[,,"700\\d{6}","\\d{9}",,,"700123456"],[,,"76\\d{7}","\\d{9}",,,"761234567"],"IE",353,"00","0",,,"0",,,,[[,"(1)(\\d{3,4})(\\d{4})","$1 $2 $3",["1"],"(0$1)"],[,"(\\d{2})(\\d{5})","$1 $2",["2[24-9]|47|58|6[237-9]|9[35-9]"],"(0$1)"],[,"(\\d{3})(\\d{5})","$1 $2",["40[24]|50[45]"],"(0$1)"],
[,"(48)(\\d{4})(\\d{4})","$1 $2 $3",["48"],"(0$1)"],[,"(818)(\\d{3})(\\d{3})","$1 $2 $3",["81"],"(0$1)"],[,"(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[24-69]|7[14]"],"(0$1)"],[,"([78]\\d)(\\d{3,4})(\\d{4})","$1 $2 $3",["76|8[35-9]"],"0$1"],[,"(700)(\\d{3})(\\d{3})","$1 $2 $3",["70"],"0$1"],[,"(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["1(?:8[059]|5)","1(?:8[059]0|5)"],"$1"]],,[,,"NA","NA"],,,[,,"18[59]0\\d{6}","\\d{10}",,,"1850123456"],[,,"818\\d{6}","\\d{9}",,,"818123456"],,,[,,"8[35-9]\\d{8}","\\d{10}",
,,"8501234567"]],IL:[,[,,"[17]\\d{6,9}|[2-589]\\d{3}(?:\\d{3,6})?|6\\d{3}","\\d{4,10}"],[,,"[2-489]\\d{7}","\\d{7,8}",,,"21234567"],[,,"5(?:[02-47-9]\\d{2}|5(?:01|2[23]|3[2-4]|4[45]|5[5689]|6[67]|7[0178]|8[6-9]|9[5-9])|6[2-9]\\d)\\d{5}","\\d{9}",,,"501234567"],[,,"1(?:80[019]\\d{3}|255)\\d{3}","\\d{7,10}",,,"1800123456"],[,,"1(?:212|(?:9(?:0[01]|19)|200)\\d{2})\\d{4}","\\d{8,10}",,,"1919123456"],[,,"1700\\d{6}","\\d{10}",,,"1700123456"],[,,"NA","NA"],[,,"7(?:18\\d|2[23]\\d|3[237]\\d|47\\d|6(?:5\\d|8[0168])|7\\d{2}|8(?:2\\d|33|55|77|81)|9[29]\\d)\\d{5}",
"\\d{9}",,,"771234567"],"IL",972,"0(?:0|1[2-9])","0",,,"0",,,,[[,"([2-489])(\\d{3})(\\d{4})","$1-$2-$3",["[2-489]"],"0$1"],[,"([57]\\d)(\\d{3})(\\d{4})","$1-$2-$3",["[57]"],"0$1"],[,"(1)([7-9]\\d{2})(\\d{3})(\\d{3})","$1-$2-$3-$4",["1[7-9]"],"$1"],[,"(1255)(\\d{3})","$1-$2",["125"],"$1"],[,"(1200)(\\d{3})(\\d{3})","$1-$2-$3",["120"],"$1"],[,"(1212)(\\d{2})(\\d{2})","$1-$2-$3",["121"],"$1"],[,"(1599)(\\d{6})","$1-$2",["15"],"$1"],[,"(\\d{4})","*$1",["[2-689]"],"$1"]],,[,,"NA","NA"],,,[,,"1700\\d{6}|[2-689]\\d{3}",
"\\d{4,10}",,,"1700123456"],[,,"[2-689]\\d{3}|1599\\d{6}","\\d{4}(?:\\d{6})?",,,"1599123456"],,,[,,"NA","NA"]],IM:[,[,,"[135789]\\d{6,9}","\\d{6,10}"],[,,"1624\\d{6}","\\d{6,10}",,,"1624456789"],[,,"7[569]24\\d{6}","\\d{10}",,,"7924123456"],[,,"808162\\d{4}","\\d{10}",,,"8081624567"],[,,"(?:872299|90[0167]624)\\d{4}","\\d{10}",,,"9016247890"],[,,"8(?:4(?:40[49]06|5624\\d)|70624\\d)\\d{3}","\\d{10}",,,"8456247890"],[,,"70\\d{8}","\\d{10}",,,"7012345678"],[,,"56\\d{8}","\\d{10}",,,"5612345678"],"IM",
44,"00","0"," x",,"0",,,,,,[,,"NA","NA"],,,[,,"NA","NA"],[,,"3(?:08162\\d|3\\d{5}|4(?:40[49]06|5624\\d)|7(?:0624\\d|2299\\d))\\d{3}|55\\d{8}","\\d{10}",,,"5512345678"],,,[,,"NA","NA"]],IN:[,[,,"1\\d{7,12}|[2-9]\\d{9,10}","\\d{6,13}"],[,,"(?:11|2[02]|33|4[04]|79)[2-7]\\d{7}|80[2-467]\\d{7}|(?:1(?:2[0-249]|3[0-25]|4[145]|[59][14]|6[014]|7[1257]|8[01346])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|[36][25]|22|4[28]|5[12]|[78]1|9[15])|6(?:12|[2345]1|57|6[13]|7[14]|80)|7(?:12|2[14]|3[134]|4[47]|5[15]|[67]1|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91))[2-7]\\d{6}|(?:(?:1(?:2[35-8]|3[346-9]|4[236-9]|[59][0235-9]|6[235-9]|7[34689]|8[257-9])|2(?:1[134689]|3[24-8]|4[2-8]|5[25689]|6[2-4679]|7[13-79]|8[2-479]|9[235-9])|3(?:01|1[79]|2[1-5]|4[25-8]|5[125689]|6[235-7]|7[157-9]|8[2-467])|4(?:1[14578]|2[5689]|3[2-467]|5[4-7]|6[35]|73|8[2689]|9[2389])|5(?:[16][146-9]|2[14-8]|3[1346]|4[14-69]|5[46]|7[2-4]|8[2-8]|9[246])|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|[57][2-689]|6[24-578]|8[1-6])|8(?:1[1357-9]|2[235-8]|3[03-57-9]|4[0-24-9]|5\\d|6[2457-9]|7[1-6]|8[1256]|9[2-4]))\\d|7(?:(?:1[013-9]|2[0235-9]|3[2679]|4[1-35689]|5[2-46-9]|[67][02-9]|9\\d)\\d|8(?:2[0-6]|[013-8]\\d)))[2-7]\\d{5}",
"\\d{6,10}",,,"1123456789"],[,,"(?:7(?:0\\d{2}|2(?:[0235679]\\d|[14][017-9]|8[0-59]|9[389])|3(?:[05-8]\\d|1[09]|2[5-8]|3[17-9]|4[789]|9[01689])|4(?:0[1-9]|1[015-9]|[29][89]|39|8[389])|5(?:[034678]\\d|2[03-9]|5[017-9]|9[7-9])|6(?:0[0-47]|1[0-257-9]|2[0-4]|3[19]|5[4589]|[6-9]\\d)|7(?:0[2-9]|[1-79]\\d|8[1-9])|8[0-79]\\d)|8(?:0(?:[01589]\\d|6[67])|1(?:[02-57-9]\\d|1[0135-9])|2(?:[236-9]\\d|5[1-9])|3(?:[0357-9]\\d|4[1-9])|[45]\\d{2}|6[02457-9]\\d|7(?:07|[1-69]\\d)|8(?:[0-26-9]\\d|44|5[2-9])|9(?:[035-9]\\d|2[2-9]|4[0-8]))|9\\d{3})\\d{6}",
"\\d{10}",,,"9123456789"],[,,"1(?:600\\d{6}|80(?:0\\d{4,9}|3\\d{9}))","\\d{8,13}",,,"1800123456"],[,,"186[12]\\d{9}","\\d{13}",,,"1861123456789"],[,,"1860\\d{7}","\\d{11}",,,"18603451234"],[,,"NA","NA"],[,,"NA","NA"],"IN",91,"00","0",,,"0",,,,[[,"(\\d{5})(\\d{5})","$1 $2",["7(?:[02357]|4[0-389]|6[0-35-9]|8[0-79])|8(?:0[015689]|1[0-57-9]|2[2356-9]|3[0-57-9]|[45]|6[02457-9]|7[01-69]|8[0-24-9]|9[02-9])|9","7(?:0|2(?:[0235679]|[14][017-9]|8[0-59]|9[389])|3(?:[05-8]|1[09]|2[5-8]|3[17-9]|4[789]|9[01689])|4(?:0[1-9]|1[015-9]|[29][89]|39|8[389])|5(?:[034678]|2[03-9]|5[017-9]|9[7-9])|6(?:0[0-47]|1[0-257-9]|2[0-4]|3[19]|5[4589]|[6-9])|7(?:0[2-9]|[1-79]|8[1-9])|8[0-79])|8(?:0(?:[01589]|6[67])|1(?:[02-57-9]|1[0135-9])|2(?:[236-9]|5[1-9])|3(?:[0357-9]|4[1-9])|[45]|6[02457-9]|7(?:07|[1-69])|8(?:[0-26-9]|44|5[2-9])|9(?:[035-9]|2[2-9]|4[0-8]))|9"],
"0$1",,1],[,"(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["11|2[02]|33|4[04]|79|80[2-46]"],"0$1",,1],[,"(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["1(?:2[0-249]|3[0-25]|4[145]|[569][14]|7[1257]|8[1346]|[68][1-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|[36][25]|22|4[28]|5[12]|[78]1|9[15])|6(?:12|[2345]1|57|6[13]|7[14]|80)"],"0$1",,1],[,"(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",
["7(?:12|2[14]|3[134]|4[47]|5[15]|[67]1|88)","7(?:12|2[14]|3[134]|4[47]|5(?:1|5[2-6])|[67]1|88)"],"0$1",,1],[,"(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)"],"0$1",,1],[,"(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["1(?:[23579]|[468][1-9])|[2-8]"],"0$1",,1],[,"(1600)(\\d{2})(\\d{4})","$1 $2 $3",["160","1600"],"$1",,1],[,"(1800)(\\d{4,5})","$1 $2",["180","1800"],"$1",,1],[,"(18[06]0)(\\d{2,4})(\\d{4})","$1 $2 $3",["18[06]","18[06]0"],"$1",,1],[,"(140)(\\d{3})(\\d{4})",
"$1 $2 $3",["140"],"$1",,1],[,"(\\d{4})(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["18[06]","18(?:0[03]|6[12])"],"$1",,1]],,[,,"NA","NA"],,,[,,"1(?:600\\d{6}|8(?:0(?:0\\d{4,9}|3\\d{9})|6(?:0\\d{7}|[12]\\d{9})))","\\d{8,13}",,,"1800123456"],[,,"140\\d{7}","\\d{10}",,,"1409305260"],,,[,,"NA","NA"]],IO:[,[,,"3\\d{6}","\\d{7}"],[,,"37\\d{5}","\\d{7}",,,"3709100"],[,,"38\\d{5}","\\d{7}",,,"3801234"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"IO",246,"00",,,,,,,,[[,"(\\d{3})(\\d{4})",
"$1 $2"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],IQ:[,[,,"[1-7]\\d{7,9}","\\d{6,10}"],[,,"1\\d{7}|(?:2[13-5]|3[02367]|4[023]|5[03]|6[026])\\d{6,7}","\\d{6,9}",,,"12345678"],[,,"7[3-9]\\d{8}","\\d{10}",,,"7912345678"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"IQ",964,"00","0",,,"0",,,,[[,"(1)(\\d{3})(\\d{4})","$1 $2 $3",["1"],"0$1"],[,"([2-6]\\d)(\\d{3})(\\d{3,4})","$1 $2 $3",["[2-6]"],"0$1"],[,"(7\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["7"],"0$1"]],
,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],IR:[,[,,"[1-8]\\d{9}|9(?:[0-4]\\d{8}|9\\d{2,8})","\\d{4,10}"],[,,"(?:1[137]|2[13-68]|3[1458]|4[145]|5[146-8]|6[146]|7[1467]|8[13467])\\d{8}","\\d{10}",,,"2123456789"],[,,"9(?:0[1-3]|[13]\\d|2[0-2]|90)\\d{7}","\\d{10}",,,"9123456789"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"(?:[2-6]0\\d|993)\\d{7}","\\d{10}",,,"9932123456"],"IR",98,"00","0",,,"0",,,,[[,"(21)(\\d{3,5})","$1 $2",["21"],"0$1"],[,"(\\d{2})(\\d{4})(\\d{4})",
"$1 $2 $3",["[1-8]"],"0$1"],[,"(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["9"],"0$1"],[,"(\\d{3})(\\d{2})(\\d{2,3})","$1 $2 $3",["9"],"0$1"],[,"(\\d{3})(\\d{3})","$1 $2",["9"],"0$1"]],,[,,"943\\d{7}","\\d{10}",,,"9432123456"],,,[,,"NA","NA"],[,,"9990\\d{0,6}","\\d{4,10}",,,"9990123456"],,,[,,"NA","NA"]],IS:[,[,,"[4-9]\\d{6}|38\\d{7}","\\d{7,9}"],[,,"(?:4(?:1[0-24-6]|2[0-7]|[37][0-8]|4[0-245]|5[0-68]|6\\d|8[0-36-8])|5(?:05|[156]\\d|2[02578]|3[013-79]|4[03-7]|7[0-2578]|8[0-35-9]|9[013-689])|87[23])\\d{4}",
"\\d{7}",,,"4101234"],[,,"38[589]\\d{6}|(?:6(?:1[1-8]|2[056]|3[089]|4[0167]|5[0159]|[67][0-69]|9\\d)|7(?:5[057]|6[0-2]|[78]\\d)|8(?:2[0-59]|3[0-4]|[469]\\d|5[1-9]))\\d{4}","\\d{7,9}",,,"6111234"],[,,"800\\d{4}","\\d{7}",,,"8001234"],[,,"90\\d{5}","\\d{7}",,,"9011234"],[,,"NA","NA"],[,,"NA","NA"],[,,"49\\d{5}","\\d{7}",,,"4921234"],"IS",354,"1(?:0(?:01|10|20)|100)|00",,,,,,"00",,[[,"(\\d{3})(\\d{4})","$1 $2",["[4-9]"]],[,"(3\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["3"]]],,[,,"NA","NA"],,,[,,"NA","NA"],
[,,"809\\d{4}","\\d{7}",,,"8091234"],,,[,,"(?:6(?:2[1-478]|49|8\\d)|8(?:7[0189]|80)|95[48])\\d{4}","\\d{7}",,,"6211234"]],IT:[,[,,"[01589]\\d{5,10}|3(?:[12457-9]\\d{8}|[36]\\d{7,9})","\\d{6,11}"],[,,"0(?:[26]\\d{4,9}|(?:1(?:[0159]\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|3(?:[0159]\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|7(?:[0159]\\d|2[12]|3[1-7]|4[2346]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\d|2[34578]|3[1-356]|[6-8][1-5])|9(?:[0159]\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\d{2,7})",
"\\d{6,11}",,,"0212345678"],[,,"3(?:[12457-9]\\d{8}|6\\d{7,8}|3\\d{7,9})","\\d{9,11}",,,"3123456789"],[,,"80(?:0\\d{6}|3\\d{3})","\\d{6,9}",,,"800123456"],[,,"0878\\d{5}|1(?:44|6[346])\\d{6}|89(?:2\\d{3}|4(?:[0-4]\\d{2}|[5-9]\\d{4})|5(?:[0-4]\\d{2}|[5-9]\\d{6})|9\\d{6})","\\d{6,10}",,,"899123456"],[,,"84(?:[08]\\d{6}|[17]\\d{3})","\\d{6,9}",,,"848123456"],[,,"1(?:78\\d|99)\\d{6}","\\d{9,10}",,,"1781234567"],[,,"55\\d{8}","\\d{10}",,,"5512345678"],"IT",39,"00",,,,,,,,[[,"(\\d{2})(\\d{3,4})(\\d{4})",
"$1 $2 $3",["0[26]|55"]],[,"(0[26])(\\d{4})(\\d{5})","$1 $2 $3",["0[26]"]],[,"(0[26])(\\d{4,6})","$1 $2",["0[26]"]],[,"(0\\d{2})(\\d{3,4})(\\d{4})","$1 $2 $3",["0[13-57-9][0159]"]],[,"(\\d{3})(\\d{3,6})","$1 $2",["0[13-57-9][0159]|8(?:03|4[17]|9[245])","0[13-57-9][0159]|8(?:03|4[17]|9(?:2|[45][0-4]))"]],[,"(0\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["0[13-57-9][2-46-8]"]],[,"(0\\d{3})(\\d{2,6})","$1 $2",["0[13-57-9][2-46-8]"]],[,"(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["[13]|8(?:00|4[08]|9[59])","[13]|8(?:00|4[08]|9(?:5[5-9]|9))"]],
[,"(\\d{4})(\\d{4})","$1 $2",["894","894[5-9]"]],[,"(\\d{3})(\\d{4})(\\d{4})","$1 $2 $3",["3"]]],,[,,"NA","NA"],1,,[,,"848\\d{6}","\\d{9}",,,"848123456"],[,,"NA","NA"],1,,[,,"NA","NA"]],JE:[,[,,"[135789]\\d{6,9}","\\d{6,10}"],[,,"1534\\d{6}","\\d{6,10}",,,"1534456789"],[,,"7(?:509|7(?:00|97)|829|937)\\d{6}","\\d{10}",,,"7797123456"],[,,"80(?:07(?:35|81)|8901)\\d{4}","\\d{10}",,,"8007354567"],[,,"(?:871206|90(?:066[59]|1810|71(?:07|55)))\\d{4}","\\d{10}",,,"9018105678"],[,,"8(?:4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|70002)\\d{4}",
"\\d{10}",,,"8447034567"],[,,"701511\\d{4}","\\d{10}",,,"7015115678"],[,,"56\\d{8}","\\d{10}",,,"5612345678"],"JE",44,"00","0"," x",,"0",,,,,,[,,"76(?:0[012]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\d{6}","\\d{10}",,,"7640123456"],,,[,,"NA","NA"],[,,"3(?:0(?:07(?:35|81)|8901)|3\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))\\d{4}|55\\d{8}","\\d{10}",,,"5512345678"],,,[,,"NA","NA"]],JM:[,[,,"[589]\\d{9}","\\d{7}(?:\\d{3})?"],[,,"876(?:5(?:0[12]|1[0-468]|2[35]|63)|6(?:0[1-3579]|1[027-9]|[23]\\d|40|5[06]|6[2-589]|7[05]|8[04]|9[4-9])|7(?:0[2-689]|[1-6]\\d|8[056]|9[45])|9(?:0[1-8]|1[02378]|[2-8]\\d|9[2-468]))\\d{4}",
"\\d{7}(?:\\d{3})?",,,"8765123456"],[,,"876(?:2[16-9]\\d|[348]\\d{2}|5(?:0[3-9]|27|6[0-24-9]|[3-578]\\d)|7(?:0[07]|7\\d|8[1-47-9]|9[0-36-9])|9(?:[01]9|9[0579]))\\d{4}","\\d{10}",,,"8762101234"],[,,"8(?:00|44|55|66|77|88)[2-9]\\d{6}","\\d{10}",,,"8002123456"],[,,"900[2-9]\\d{6}","\\d{10}",,,"9002123456"],[,,"NA","NA"],[,,"5(?:00|33|44|66|77|88)[2-9]\\d{6}","\\d{10}",,,"5002345678"],[,,"NA","NA"],"JM",1,"011","1",,,"1",,,,,,[,,"NA","NA"],,"876",[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],JO:[,[,,"[235-9]\\d{7,8}",
"\\d{8,9}"],[,,"(?:2(?:6(?:2[0-35-9]|3[0-57-8]|4[24-7]|5[0-24-8]|[6-8][023]|9[0-3])|7(?:0[1-79]|10|2[014-7]|3[0-689]|4[019]|5[0-3578]))|32(?:0[1-69]|1[1-35-7]|2[024-7]|3\\d|4[0-3]|[57][023]|6[03])|53(?:0[0-3]|[13][023]|2[0-59]|49|5[0-35-9]|6[15]|7[45]|8[1-6]|9[0-36-9])|6(?:2[50]0|3(?:00|33)|4(?:0[0125]|1[2-7]|2[0569]|[38][07-9]|4[025689]|6[0-589]|7\\d|9[0-2])|5(?:[01][056]|2[034]|3[0-57-9]|4[17-8]|5[0-69]|6[0-35-9]|7[1-379]|8[0-68]|9[02-39]))|87(?:[02]0|7[08]|90))\\d{4}","\\d{8}",,,"62001234"],[,
,"7(?:55|7[025-9]|8[015-9]|9[0-25-9])\\d{6}","\\d{9}",,,"790123456"],[,,"80\\d{6}","\\d{8}",,,"80012345"],[,,"900\\d{5}","\\d{8}",,,"90012345"],[,,"85\\d{6}","\\d{8}",,,"85012345"],[,,"70\\d{7}","\\d{9}",,,"700123456"],[,,"NA","NA"],"JO",962,"00","0",,,"0",,,,[[,"(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["[2356]|87"],"(0$1)"],[,"(7)(\\d{4})(\\d{4})","$1 $2 $3",["7[457-9]"],"0$1"],[,"(\\d{3})(\\d{5,6})","$1 $2",["70|8[0158]|9"],"0$1"]],,[,,"74(?:66|77)\\d{5}","\\d{9}",,,"746612345"],,,[,,"NA","NA"],[,,"8(?:10|8\\d)\\d{5}",
"\\d{8}",,,"88101234"],,,[,,"NA","NA"]],JP:[,[,,"[1-9]\\d{8,9}|00(?:[36]\\d{7,14}|7\\d{5,7}|8\\d{7})","\\d{8,17}"],[,,"(?:1(?:1[235-8]|2[3-6]|3[3-9]|4[2-6]|[58][2-8]|6[2-7]|7[2-9]|9[1-9])|2[2-9]\\d|[36][1-9]\\d|4(?:6[02-8]|[2-578]\\d|9[2-59])|5(?:6[1-9]|7[2-8]|[2-589]\\d)|7(?:3[4-9]|4[02-9]|[25-9]\\d)|8(?:3[2-9]|4[5-9]|5[1-9]|8[03-9]|[2679]\\d)|9(?:[679][1-9]|[2-58]\\d))\\d{6}","\\d{9}",,,"312345678"],[,,"[7-9]0[1-9]\\d{7}","\\d{10}",,,"9012345678"],[,,"120\\d{6}|800\\d{7}|00(?:37\\d{6,13}|66\\d{6,13}|777(?:[01]\\d{2}|5\\d{3}|8\\d{4})|882[1245]\\d{4})",
"\\d{8,17}",,,"120123456"],[,,"990\\d{6}","\\d{9}",,,"990123456"],[,,"NA","NA"],[,,"60\\d{7}","\\d{9}",,,"601234567"],[,,"50[1-9]\\d{7}","\\d{10}",,,"5012345678"],"JP",81,"010","0",,,"0",,,,[[,"(\\d{3})(\\d{3})(\\d{3})","$1-$2-$3",["(?:12|57|99)0"],"0$1"],[,"(\\d{3})(\\d{3})(\\d{4})","$1-$2-$3",["800"],"0$1"],[,"(\\d{4})(\\d{4})","$1-$2",["0077"],"$1"],[,"(\\d{4})(\\d{2})(\\d{3,4})","$1-$2-$3",["0077"],"$1"],[,"(\\d{4})(\\d{2})(\\d{4})","$1-$2-$3",["0088"],"$1"],[,"(\\d{4})(\\d{3})(\\d{3,4})","$1-$2-$3",
["00(?:37|66)"],"$1"],[,"(\\d{4})(\\d{4})(\\d{4,5})","$1-$2-$3",["00(?:37|66)"],"$1"],[,"(\\d{4})(\\d{5})(\\d{5,6})","$1-$2-$3",["00(?:37|66)"],"$1"],[,"(\\d{4})(\\d{6})(\\d{6,7})","$1-$2-$3",["00(?:37|66)"],"$1"],[,"(\\d{2})(\\d{4})(\\d{4})","$1-$2-$3",["[2579]0|80[1-9]"],"0$1"],[,"(\\d{4})(\\d)(\\d{4})","$1-$2-$3",["1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|5(?:76|97)|499|746|8(?:3[89]|63|47|51)|9(?:49|80|9[16])","1(?:267|3(?:7[247]|9[278])|4(?:5[67]|66)|5(?:47|58|64|8[67])|6(?:3[245]|48|5[4-68]))|5(?:76|97)9|499[2468]|7468|8(?:3(?:8[78]|96)|636|477|51[24])|9(?:496|802|9(?:1[23]|69))",
"1(?:267|3(?:7[247]|9[278])|4(?:5[67]|66)|5(?:47|58|64|8[67])|6(?:3[245]|48|5[4-68]))|5(?:769|979[2-69])|499[2468]|7468|8(?:3(?:8[78]|96[2457-9])|636[2-57-9]|477|51[24])|9(?:496|802|9(?:1[23]|69))"],"0$1"],[,"(\\d{3})(\\d{2})(\\d{4})","$1-$2-$3",["1(?:2[3-6]|3[3-9]|4[2-6]|5[2-8]|[68][2-7]|7[2-689]|9[1-578])|2(?:2[03-689]|3[3-58]|4[0-468]|5[04-8]|6[013-8]|7[06-9]|8[02-57-9]|9[13])|4(?:2[28]|3[689]|6[035-7]|7[05689]|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9[4-9])|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9[014-9])|8(?:2[49]|3[3-8]|4[5-8]|5[2-9]|6[35-9]|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9[3-7])",
"1(?:2[3-6]|3[3-9]|4[2-6]|5(?:[236-8]|[45][2-69])|[68][2-7]|7[2-689]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:5[78]|7[2-4]|[0468][2-9])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9(?:[89][2-8]|[4-7]))|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9[2-8])|3(?:7[2-6]|[3-6][2-9]|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5[4-7]|6[2-9]|8[2-8]|9[236-9])|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3[34]|[4-7]))",
"1(?:2[3-6]|3[3-9]|4[2-6]|5(?:[236-8]|[45][2-69])|[68][2-7]|7[2-689]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:5[78]|7[2-4]|[0468][2-9])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9(?:[89][2-8]|[4-7]))|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9(?:[3578]|20|4[04-9]|6[56]))|3(?:7(?:[2-5]|6[0-59])|[3-6][2-9]|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5(?:[467]|5[014-9])|6(?:[2-8]|9[02-69])|8[2-8]|9(?:[236-8]|9[23]))|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3(?:3[02-9]|4[0-24689])|4[2-69]|[5-7]))",
"1(?:2[3-6]|3[3-9]|4[2-6]|5(?:[236-8]|[45][2-69])|[68][2-7]|7[2-689]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:5[78]|7[2-4]|[0468][2-9])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9(?:[89][2-8]|[4-7]))|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9(?:[3578]|20|4[04-9]|6(?:5[25]|60)))|3(?:7(?:[2-5]|6[0-59])|[3-6][2-9]|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5(?:[467]|5[014-9])|6(?:[2-8]|9[02-69])|8[2-8]|9(?:[236-8]|9[23]))|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3(?:3[02-9]|4[0-24689])|4[2-69]|[5-7]))"],
"0$1"],[,"(\\d{2})(\\d{3})(\\d{4})","$1-$2-$3",["1|2(?:2[37]|5[5-9]|64|78|8[39]|91)|4(?:2[2689]|64|7[347])|5(?:[2-589]|39)|60|8(?:[46-9]|3[279]|2[124589])|9(?:[235-8]|93)","1|2(?:2[37]|5(?:[57]|[68]0|9[19])|64|78|8[39]|917)|4(?:2(?:[68]|20|9[178])|64|7[347])|5(?:[2-589]|39[67])|60|8(?:[46-9]|3[279]|2[124589])|9(?:[235-8]|93[34])","1|2(?:2[37]|5(?:[57]|[68]0|9(?:17|99))|64|78|8[39]|917)|4(?:2(?:[68]|20|9[178])|64|7[347])|5(?:[2-589]|39[67])|60|8(?:[46-9]|3[279]|2[124589])|9(?:[235-8]|93(?:31|4))"],
"0$1"],[,"(\\d{3})(\\d{2})(\\d{4})","$1-$2-$3",["2(?:9[14-79]|74|[34]7|[56]9)|82|993"],"0$1"],[,"(\\d)(\\d{4})(\\d{4})","$1-$2-$3",["3|4(?:2[09]|7[01])|6[1-9]"],"0$1"],[,"(\\d{2})(\\d{3})(\\d{4})","$1-$2-$3",["[2479][1-9]"],"0$1"]],[[,"(\\d{3})(\\d{3})(\\d{3})","$1-$2-$3",["(?:12|57|99)0"],"0$1"],[,"(\\d{3})(\\d{3})(\\d{4})","$1-$2-$3",["800"],"0$1"],[,"(\\d{2})(\\d{4})(\\d{4})","$1-$2-$3",["[2579]0|80[1-9]"],"0$1"],[,"(\\d{4})(\\d)(\\d{4})","$1-$2-$3",["1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|5(?:76|97)|499|746|8(?:3[89]|63|47|51)|9(?:49|80|9[16])",
"1(?:267|3(?:7[247]|9[278])|4(?:5[67]|66)|5(?:47|58|64|8[67])|6(?:3[245]|48|5[4-68]))|5(?:76|97)9|499[2468]|7468|8(?:3(?:8[78]|96)|636|477|51[24])|9(?:496|802|9(?:1[23]|69))","1(?:267|3(?:7[247]|9[278])|4(?:5[67]|66)|5(?:47|58|64|8[67])|6(?:3[245]|48|5[4-68]))|5(?:769|979[2-69])|499[2468]|7468|8(?:3(?:8[78]|96[2457-9])|636[2-57-9]|477|51[24])|9(?:496|802|9(?:1[23]|69))"],"0$1"],[,"(\\d{3})(\\d{2})(\\d{4})","$1-$2-$3",["1(?:2[3-6]|3[3-9]|4[2-6]|5[2-8]|[68][2-7]|7[2-689]|9[1-578])|2(?:2[03-689]|3[3-58]|4[0-468]|5[04-8]|6[013-8]|7[06-9]|8[02-57-9]|9[13])|4(?:2[28]|3[689]|6[035-7]|7[05689]|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9[4-9])|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9[014-9])|8(?:2[49]|3[3-8]|4[5-8]|5[2-9]|6[35-9]|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9[3-7])",
"1(?:2[3-6]|3[3-9]|4[2-6]|5(?:[236-8]|[45][2-69])|[68][2-7]|7[2-689]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:5[78]|7[2-4]|[0468][2-9])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9(?:[89][2-8]|[4-7]))|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9[2-8])|3(?:7[2-6]|[3-6][2-9]|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5[4-7]|6[2-9]|8[2-8]|9[236-9])|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3[34]|[4-7]))",
"1(?:2[3-6]|3[3-9]|4[2-6]|5(?:[236-8]|[45][2-69])|[68][2-7]|7[2-689]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:5[78]|7[2-4]|[0468][2-9])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9(?:[89][2-8]|[4-7]))|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9(?:[3578]|20|4[04-9]|6[56]))|3(?:7(?:[2-5]|6[0-59])|[3-6][2-9]|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5(?:[467]|5[014-9])|6(?:[2-8]|9[02-69])|8[2-8]|9(?:[236-8]|9[23]))|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3(?:3[02-9]|4[0-24689])|4[2-69]|[5-7]))",
"1(?:2[3-6]|3[3-9]|4[2-6]|5(?:[236-8]|[45][2-69])|[68][2-7]|7[2-689]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:5[78]|7[2-4]|[0468][2-9])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9(?:[89][2-8]|[4-7]))|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9(?:[3578]|20|4[04-9]|6(?:5[25]|60)))|3(?:7(?:[2-5]|6[0-59])|[3-6][2-9]|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5(?:[467]|5[014-9])|6(?:[2-8]|9[02-69])|8[2-8]|9(?:[236-8]|9[23]))|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3(?:3[02-9]|4[0-24689])|4[2-69]|[5-7]))"],
"0$1"],[,"(\\d{2})(\\d{3})(\\d{4})","$1-$2-$3",["1|2(?:2[37]|5[5-9]|64|78|8[39]|91)|4(?:2[2689]|64|7[347])|5(?:[2-589]|39)|60|8(?:[46-9]|3[279]|2[124589])|9(?:[235-8]|93)","1|2(?:2[37]|5(?:[57]|[68]0|9[19])|64|78|8[39]|917)|4(?:2(?:[68]|20|9[178])|64|7[347])|5(?:[2-589]|39[67])|60|8(?:[46-9]|3[279]|2[124589])|9(?:[235-8]|93[34])","1|2(?:2[37]|5(?:[57]|[68]0|9(?:17|99))|64|78|8[39]|917)|4(?:2(?:[68]|20|9[178])|64|7[347])|5(?:[2-589]|39[67])|60|8(?:[46-9]|3[279]|2[124589])|9(?:[235-8]|93(?:31|4))"],
"0$1"],[,"(\\d{3})(\\d{2})(\\d{4})","$1-$2-$3",["2(?:9[14-79]|74|[34]7|[56]9)|82|993"],"0$1"],[,"(\\d)(\\d{4})(\\d{4})","$1-$2-$3",["3|4(?:2[09]|7[01])|6[1-9]"],"0$1"],[,"(\\d{2})(\\d{3})(\\d{4})","$1-$2-$3",["[2479][1-9]"],"0$1"]],[,,"20\\d{8}","\\d{10}",,,"2012345678"],,,[,,"00(?:37\\d{6,13}|66\\d{6,13}|777(?:[01]\\d{2}|5\\d{3}|8\\d{4})|882[1245]\\d{4})","\\d{8,17}",,,"00777012"],[,,"570\\d{6}","\\d{9}",,,"570123456"],1,,[,,"NA","NA"]],KE:[,[,,"20\\d{6,7}|[4-9]\\d{6,9}","\\d{7,10}"],[,,"20\\d{6,7}|4(?:[0136]\\d{7}|[245]\\d{5,7})|5(?:[08]\\d{7}|[1-79]\\d{5,7})|6(?:[01457-9]\\d{5,7}|[26]\\d{7})",
"\\d{7,9}",,,"202012345"],[,,"7(?:[0-36]\\d|5[0-6]|[79][0-7]|8[0-25-9])\\d{6}","\\d{9}",,,"712123456"],[,,"800[24-8]\\d{5,6}","\\d{9,10}",,,"800223456"],[,,"900[02-9]\\d{5}","\\d{9}",,,"900223456"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"KE",254,"000","0",,,"005|0",,,,[[,"(\\d{2})(\\d{5,7})","$1 $2",["[24-6]"],"0$1"],[,"(\\d{3})(\\d{6})","$1 $2",["7"],"0$1"],[,"(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["[89]"],"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],KG:[,[,,"[235-8]\\d{8,9}",
"\\d{5,10}"],[,,"(?:3(?:1(?:[256]\\d|3[1-9]|47)|2(?:22|3[0-479]|6[0-7])|4(?:22|5[6-9]|6\\d)|5(?:22|3[4-7]|59|6\\d)|6(?:22|5[35-7]|6\\d)|7(?:22|3[468]|4[1-9]|59|[67]\\d)|9(?:22|4[1-8]|6\\d))|6(?:09|12|2[2-4])\\d)\\d{5}","\\d{5,10}",,,"312123456"],[,,"(?:20[0-35]|5[124-7]\\d|7[07]\\d)\\d{6}","\\d{9}",,,"700123456"],[,,"800\\d{6,7}","\\d{9,10}",,,"800123456"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"KG",996,"00","0",,,"0",,,,[[,"(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[25-7]|31[25]"],
"0$1"],[,"(\\d{4})(\\d{5})","$1 $2",["3(?:1[36]|[2-9])"],"0$1"],[,"(\\d{3})(\\d{3})(\\d)(\\d{3})","$1 $2 $3 $4",["8"],"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],KH:[,[,,"[1-9]\\d{7,9}","\\d{6,10}"],[,,"(?:2[3-6]|3[2-6]|4[2-4]|[5-7][2-5])(?:[237-9]|4[56]|5\\d|6\\d?)\\d{5}|23(?:4[234]|8\\d{2})\\d{4}","\\d{6,9}",,,"23756789"],[,,"(?:1(?:[013-79]|[28]\\d?)|3[18]\\d|6[016-9]|7(?:[07-9]|[16]\\d)|8(?:[013-79]|8\\d)|9(?:6\\d|7\\d?|[0-589]))\\d{6}","\\d{8,9}",,,"91234567"],[,,"1800(?:1\\d|2[019])\\d{4}",
"\\d{10}",,,"1800123456"],[,,"1900(?:1\\d|2[09])\\d{4}","\\d{10}",,,"1900123456"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"KH",855,"00[14-9]","0",,,"0",,,,[[,"(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["1\\d[1-9]|[2-9]"],"0$1"],[,"(1[89]00)(\\d{3})(\\d{3})","$1 $2 $3",["1[89]0"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],KI:[,[,,"[2458]\\d{4}|3\\d{4,7}|7\\d{7}","\\d{5,8}"],[,,"(?:[24]\\d|3[1-9]|50|8[0-5])\\d{3}","\\d{5}",,,"31234"],[,,"7\\d{7}","\\d{8}",,,"72012345"],[,,"NA","NA"],
[,,"3001\\d{4}","\\d{5,8}",,,"30010000"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"KI",686,"00",,,,"0",,,,,,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],KM:[,[,,"[379]\\d{6}","\\d{7}"],[,,"7(?:6[0-37-9]|7[0-57-9])\\d{4}","\\d{7}",,,"7712345"],[,,"3[234]\\d{5}","\\d{7}",,,"3212345"],[,,"NA","NA"],[,,"(?:39[01]|9[01]0)\\d{4}","\\d{7}",,,"9001234"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"KM",269,"00",,,,,,,,[[,"(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3"]],,[,,"NA","NA"],,,[,,"NA","NA"],
[,,"NA","NA"],,,[,,"NA","NA"]],KN:[,[,,"[589]\\d{9}","\\d{7}(?:\\d{3})?"],[,,"869(?:2(?:29|36)|302|4(?:6[015-9]|70))\\d{4}","\\d{7}(?:\\d{3})?",,,"8692361234"],[,,"869(?:5(?:5[6-8]|6[5-7])|66\\d|76[02-6])\\d{4}","\\d{10}",,,"8697652917"],[,,"8(?:00|44|55|66|77|88)[2-9]\\d{6}","\\d{10}",,,"8002123456"],[,,"900[2-9]\\d{6}","\\d{10}",,,"9002123456"],[,,"NA","NA"],[,,"5(?:00|33|44|66|77|88)[2-9]\\d{6}","\\d{10}",,,"5002345678"],[,,"NA","NA"],"KN",1,"011","1",,,"1",,,,,,[,,"NA","NA"],,"869",[,,"NA","NA"],
[,,"NA","NA"],,,[,,"NA","NA"]],KP:[,[,,"1\\d{9}|[28]\\d{7}","\\d{6,8}|\\d{10}"],[,,"2\\d{7}|85\\d{6}","\\d{6,8}",,,"21234567"],[,,"19[123]\\d{7}","\\d{10}",,,"1921234567"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"KP",850,"00|99","0",,,"0",,,,[[,"(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["1"],"0$1"],[,"(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["2"],"0$1"],[,"(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["8"],"0$1"]],,[,,"NA","NA"],,,[,,"2(?:[0-24-9]\\d{2}|3(?:[0-79]\\d|8[02-9]))\\d{4}",
"\\d{8}",,,"23821234"],[,,"NA","NA"],,,[,,"NA","NA"]],KR:[,[,,"[1-7]\\d{3,9}|8\\d{8}","\\d{4,10}"],[,,"(?:2|3[1-3]|[46][1-4]|5[1-5])(?:1\\d{2,3}|[1-9]\\d{6,7})","\\d{4,10}",,,"22123456"],[,,"1[0-26-9]\\d{7,8}","\\d{9,10}",,,"1000000000"],[,,"80\\d{7}","\\d{9}",,,"801234567"],[,,"60[2-9]\\d{6}","\\d{9}",,,"602345678"],[,,"NA","NA"],[,,"50\\d{8}","\\d{10}",,,"5012345678"],[,,"70\\d{8}","\\d{10}",,,"7012345678"],"KR",82,"00(?:[124-68]|[37]\\d{2})","0",,,"0(8[1-46-8]|85\\d{2})?",,,,[[,"(\\d{2})(\\d{4})(\\d{4})",
"$1-$2-$3",["1(?:0|1[19]|[69]9|5[458])|[57]0","1(?:0|1[19]|[69]9|5(?:44|59|8))|[57]0"],"0$1","0$CC-$1"],[,"(\\d{2})(\\d{3,4})(\\d{4})","$1-$2-$3",["1(?:[01]|5[1-4]|6[2-8]|[7-9])|[68]0|[3-6][1-9][1-9]","1(?:[01]|5(?:[1-3]|4[56])|6[2-8]|[7-9])|[68]0|[3-6][1-9][1-9]"],"0$1","0$CC-$1"],[,"(\\d{3})(\\d)(\\d{4})","$1-$2-$3",["131","1312"],"0$1","0$CC-$1"],[,"(\\d{3})(\\d{2})(\\d{4})","$1-$2-$3",["131","131[13-9]"],"0$1","0$CC-$1"],[,"(\\d{3})(\\d{3})(\\d{4})","$1-$2-$3",["13[2-9]"],"0$1","0$CC-$1"],[,"(\\d{2})(\\d{2})(\\d{3})(\\d{4})",
"$1-$2-$3-$4",["30"],"0$1","0$CC-$1"],[,"(\\d)(\\d{3,4})(\\d{4})","$1-$2-$3",["2[1-9]"],"0$1","0$CC-$1"],[,"(\\d)(\\d{3,4})","$1-$2",["21[0-46-9]"],"0$1","0$CC-$1"],[,"(\\d{2})(\\d{3,4})","$1-$2",["[3-6][1-9]1","[3-6][1-9]1(?:[0-46-9])"],"0$1","0$CC-$1"],[,"(\\d{4})(\\d{4})","$1-$2",["1(?:5[46-9]|6[04678]|8[0579])","1(?:5(?:44|66|77|88|99)|6(?:00|44|6[16]|70|88)|8(?:00|55|77|99))"],"$1","0$CC-$1"]],,[,,"15\\d{7,8}","\\d{9,10}",,,"1523456789"],,,[,,"NA","NA"],[,,"1(?:5(?:44|66|77|88|99)|6(?:00|44|6[16]|70|88)|8(?:00|55|77|99))\\d{4}",
"\\d{8}",,,"15441234"],,,[,,"NA","NA"]],KW:[,[,,"[12569]\\d{6,7}","\\d{7,8}"],[,,"(?:18\\d|2(?:[23]\\d{2}|4(?:[1-35-9]\\d|44)|5(?:0[034]|[2-46]\\d|5[1-3]|7[1-7])))\\d{4}","\\d{7,8}",,,"22345678"],[,,"(?:5(?:[05]\\d{2}|1[0-7]\\d|2(?:22|5[25]))|6(?:0[034679]\\d|5[015-9]\\d|6\\d{2}|7[067]\\d|9[0369]\\d)|9(?:0[09]\\d|22\\d|4[01479]\\d|55\\d|6[0679]\\d|[79]\\d{2}|8[057-9]\\d))\\d{4}","\\d{8}",,,"50012345"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"KW",965,"00",,,,,,,,[[,"(\\d{4})(\\d{3,4})",
"$1 $2",["[16]|2(?:[0-35-9]|4[0-35-9])|9[024-9]|52[25]"]],[,"(\\d{3})(\\d{5})","$1 $2",["244|5[015]"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],KY:[,[,,"[3589]\\d{9}","\\d{7}(?:\\d{3})?"],[,,"345(?:2(?:22|44)|444|6(?:23|38|40)|7(?:4[35-79]|6[6-9]|77)|8(?:00|1[45]|25|[48]8)|9(?:14|4[035-9]))\\d{4}","\\d{7}(?:\\d{3})?",,,"3452221234"],[,,"345(?:32[1-9]|5(?:1[67]|2[5-7]|4[6-8]|76)|9(?:1[67]|2[2-9]|3[689]))\\d{4}","\\d{10}",,,"3453231234"],[,,"8(?:00|44|55|66|77|88)[2-9]\\d{6}",
"\\d{10}",,,"8002345678"],[,,"900[2-9]\\d{6}|345976\\d{4}","\\d{10}",,,"9002345678"],[,,"NA","NA"],[,,"5(?:00|33|44|66|77|88)[2-9]\\d{6}","\\d{10}",,,"5002345678"],[,,"NA","NA"],"KY",1,"011","1",,,"1",,,,,,[,,"345849\\d{4}","\\d{10}",,,"3458491234"],,"345",[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],KZ:[,[,,"(?:33\\d|7\\d{2}|80[09])\\d{7}","\\d{10}"],[,,"33622\\d{5}|7(?:1(?:0(?:[23]\\d|4[023]|59|63)|1(?:[23]\\d|4[0-79]|59)|2(?:[23]\\d|59)|3(?:2\\d|3[1-79]|4[0-35-9]|59)|4(?:2\\d|3[013-79]|4[0-8]|5[1-79])|5(?:2\\d|3[1-8]|4[1-7]|59)|6(?:[234]\\d|5[19]|61)|72\\d|8(?:[27]\\d|3[1-46-9]|4[0-5]))|2(?:1(?:[23]\\d|4[46-9]|5[3469])|2(?:2\\d|3[0679]|46|5[12679])|3(?:[234]\\d|5[139])|4(?:2\\d|3[1235-9]|59)|5(?:[23]\\d|4[01246-8]|59|61)|6(?:2\\d|3[1-9]|4[0-4]|59)|7(?:[237]\\d|40|5[279])|8(?:[23]\\d|4[0-3]|59)|9(?:2\\d|3[124578]|59)))\\d{5}",
"\\d{10}",,,"7123456789"],[,,"7(?:0[012578]|47|6[02-4]|7[15-8]|85)\\d{7}","\\d{10}",,,"7710009998"],[,,"800\\d{7}","\\d{10}",,,"8001234567"],[,,"809\\d{7}","\\d{10}",,,"8091234567"],[,,"NA","NA"],[,,"NA","NA"],[,,"751\\d{7}","\\d{10}",,,"7511234567"],"KZ",7,"810","8",,,"8",,"8~10",,,,[,,"NA","NA"],,,[,,"751\\d{7}","\\d{10}",,,"7511234567"],[,,"NA","NA"],,,[,,"NA","NA"]],LA:[,[,,"[2-8]\\d{7,9}","\\d{6,10}"],[,,"(?:2[13]|3(?:0\\d|[14])|[5-7][14]|41|8[1468])\\d{6}","\\d{6,9}",,,"21212862"],[,,"20(?:2[2389]|5[4-689]|7[6-8]|9[15-9])\\d{6}",
"\\d{10}",,,"2023123456"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"LA",856,"00","0",,,"0",,,,[[,"(20)(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3 $4",["20"],"0$1"],[,"([2-8]\\d)(\\d{3})(\\d{3})","$1 $2 $3",["2[13]|3[14]|[4-8]"],"0$1"],[,"(30)(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3 $4",["30"],"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],LB:[,[,,"[13-9]\\d{6,7}","\\d{7,8}"],[,,"(?:[14-6]\\d{2}|7(?:[2-57]\\d|62|8[0-7]|9[04-9])|8[02-9]\\d|9\\d{2})\\d{4}","\\d{7}",
,,"1123456"],[,,"(?:3\\d|7(?:[01]\\d|6[013-9]|8[89]|9[1-3])|81\\d)\\d{5}","\\d{7,8}",,,"71123456"],[,,"NA","NA"],[,,"9[01]\\d{6}","\\d{8}",,,"90123456"],[,,"80\\d{6}","\\d{8}",,,"80123456"],[,,"NA","NA"],[,,"NA","NA"],"LB",961,"00","0",,,"0",,,,[[,"(\\d)(\\d{3})(\\d{3})","$1 $2 $3",["[13-6]|7(?:[2-57]|62|8[0-7]|9[04-9])|8[02-9]|9"],"0$1"],[,"([7-9]\\d)(\\d{3})(\\d{3})","$1 $2 $3",["[89][01]|7(?:[01]|6[013-9]|8[89]|9[1-3])"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],LC:[,[,,"[5789]\\d{9}",
"\\d{7}(?:\\d{3})?"],[,,"758(?:4(?:30|5[0-9]|6[2-9]|8[0-2])|57[0-2]|638)\\d{4}","\\d{7}(?:\\d{3})?",,,"7584305678"],[,,"758(?:28[4-7]|384|4(?:6[01]|8[4-9])|5(?:1[89]|20|84)|7(?:1[2-9]|2[0-8]))\\d{4}","\\d{10}",,,"7582845678"],[,,"8(?:00|44|55|66|77|88)[2-9]\\d{6}","\\d{10}",,,"8002123456"],[,,"900[2-9]\\d{6}","\\d{10}",,,"9002123456"],[,,"NA","NA"],[,,"5(?:00|33|44|66|77|88)[2-9]\\d{6}","\\d{10}",,,"5002345678"],[,,"NA","NA"],"LC",1,"011","1",,,"1",,,,,,[,,"NA","NA"],,"758",[,,"NA","NA"],[,,"NA",
"NA"],,,[,,"NA","NA"]],LI:[,[,,"6\\d{8}|[23789]\\d{6}","\\d{7,9}"],[,,"(?:2(?:01|1[27]|3\\d|6[02-578]|96)|3(?:7[0135-7]|8[048]|9[0269]))\\d{4}","\\d{7}",,,"2345678"],[,,"6(?:51[01]|6(?:0[0-6]|2[016-9]|39))\\d{5}|7(?:[37-9]\\d|42|56)\\d{4}","\\d{7,9}",,,"660234567"],[,,"80(?:02[28]|9\\d{2})\\d{2}","\\d{7}",,,"8002222"],[,,"90(?:02[258]|1(?:23|3[14])|66[136])\\d{2}","\\d{7}",,,"9002222"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"LI",423,"00","0",,,"0",,,,[[,"(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3",["[23789]"]],
[,"(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["6[56]"]],[,"(69)(7\\d{2})(\\d{4})","$1 $2 $3",["697"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"870(?:28|87)\\d{2}","\\d{7}",,,"8702812"],,,[,,"697(?:42|56|[7-9]\\d)\\d{4}","\\d{9}",,,"697861234"]],LK:[,[,,"[1-9]\\d{8}","\\d{7,9}"],[,,"(?:[189]1|2[13-7]|3[1-8]|4[157]|5[12457]|6[35-7])[2-57]\\d{6}","\\d{7,9}",,,"112345678"],[,,"7[0125-8]\\d{7}","\\d{9}",,,"712345678"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"LK",94,"00","0",,,"0",,
,,[[,"(\\d{2})(\\d{1})(\\d{6})","$1 $2 $3",["[1-689]"],"0$1"],[,"(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["7"],"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],LR:[,[,,"2\\d{7,8}|[37-9]\\d{8}|4\\d{6}|5\\d{6,8}","\\d{7,9}"],[,,"2\\d{7}","\\d{8}",,,"21234567"],[,,"(?:330\\d|4[67]|5\\d|77\\d{2}|88\\d{2}|994\\d)\\d{5}|(?:20\\d{3}|33(?:0\\d{2}|2(?:02|5\\d))|555\\d{2}|77[0567]\\d{2}|88[068]\\d{2}|994\\d{2})\\d{4}","\\d{7,9}",,,"770123456"],[,,"NA","NA"],[,,"90[03]\\d{6}","\\d{9}",,,"900123456"],
[,,"NA","NA"],[,,"NA","NA"],[,,"332(?:0[02]|5\\d)\\d{4}","\\d{9}",,,"332001234"],"LR",231,"00","0",,,"0",,,,[[,"(2\\d)(\\d{3})(\\d{3})","$1 $2 $3",["2"],"0$1"],[,"(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[2579]"],"0$1"],[,"([4-6])(\\d{3})(\\d{3})","$1 $2 $3",["[4-6]"],"0$1"],[,"(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[38]"],"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],LS:[,[,,"[2568]\\d{7}","\\d{8}"],[,,"2\\d{7}","\\d{8}",,,"22123456"],[,,"[56]\\d{7}","\\d{8}",,,"50123456"],
[,,"800[256]\\d{4}","\\d{8}",,,"80021234"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"LS",266,"00",,,,,,,,[[,"(\\d{4})(\\d{4})","$1 $2"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],LT:[,[,,"[3-9]\\d{7}","\\d{8}"],[,,"(?:3[1478]|4[124-6]|52)\\d{6}","\\d{8}",,,"31234567"],[,,"6\\d{7}","\\d{8}",,,"61234567"],[,,"800\\d{5}","\\d{8}",,,"80012345"],[,,"9(?:0[0239]|10)\\d{5}","\\d{8}",,,"90012345"],[,,"808\\d{5}","\\d{8}",,,"80812345"],[,,"700\\d{5}","\\d{8}",,,"70012345"],
[,,"NA","NA"],"LT",370,"00","8",,,"[08]",,,,[[,"([34]\\d)(\\d{6})","$1 $2",["37|4(?:1|5[45]|6[2-4])"],"(8-$1)",,1],[,"([3-6]\\d{2})(\\d{5})","$1 $2",["3[148]|4(?:[24]|6[09])|528|6"],"(8-$1)",,1],[,"([7-9]\\d{2})(\\d{2})(\\d{3})","$1 $2 $3",["[7-9]"],"8 $1",,1],[,"(5)(2\\d{2})(\\d{4})","$1 $2 $3",["52[0-79]"],"(8-$1)",,1]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"70[67]\\d{5}","\\d{8}",,,"70712345"],,,[,,"NA","NA"]],LU:[,[,,"[24-9]\\d{3,10}|3(?:[0-46-9]\\d{2,9}|5[013-9]\\d{1,8})","\\d{4,11}"],[,,"(?:2[2-9]\\d{2,9}|(?:[3457]\\d{2}|8(?:0[2-9]|[13-9]\\d)|9(?:0[89]|[2-579]\\d))\\d{1,8})",
"\\d{4,11}",,,"27123456"],[,,"6[2679][18]\\d{6}","\\d{9}",,,"628123456"],[,,"800\\d{5}","\\d{8}",,,"80012345"],[,,"90[015]\\d{5}","\\d{8}",,,"90012345"],[,,"801\\d{5}","\\d{8}",,,"80112345"],[,,"70\\d{6}","\\d{8}",,,"70123456"],[,,"20(?:1\\d{5}|[2-689]\\d{1,7})","\\d{4,10}",,,"20201234"],"LU",352,"00",,,,"(15(?:0[06]|1[12]|35|4[04]|55|6[26]|77|88|99)\\d)",,,,[[,"(\\d{2})(\\d{3})","$1 $2",["[2-5]|7[1-9]|[89](?:[1-9]|0[2-9])"],,"$CC $1"],[,"(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3",["[2-5]|7[1-9]|[89](?:[1-9]|0[2-9])"],
,"$CC $1"],[,"(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3",["20"],,"$CC $1"],[,"(\\d{2})(\\d{2})(\\d{2})(\\d{1,2})","$1 $2 $3 $4",["2(?:[0367]|4[3-8])"],,"$CC $1"],[,"(\\d{2})(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3 $4",["20"],,"$CC $1"],[,"(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{1,2})","$1 $2 $3 $4 $5",["2(?:[0367]|4[3-8])"],,"$CC $1"],[,"(\\d{2})(\\d{2})(\\d{2})(\\d{1,4})","$1 $2 $3 $4",["2(?:[12589]|4[12])|[3-5]|7[1-9]|8(?:[1-9]|0[2-9])|9(?:[1-9]|0[2-46-9])"],,"$CC $1"],[,"(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3",
["70|80[01]|90[015]"],,"$CC $1"],[,"(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["6"],,"$CC $1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],LV:[,[,,"[2689]\\d{7}","\\d{8}"],[,,"6[3-8]\\d{6}","\\d{8}",,,"63123456"],[,,"2\\d{7}","\\d{8}",,,"21234567"],[,,"80\\d{6}","\\d{8}",,,"80123456"],[,,"90\\d{6}","\\d{8}",,,"90123456"],[,,"81\\d{6}","\\d{8}",,,"81123456"],[,,"NA","NA"],[,,"NA","NA"],"LV",371,"00",,,,,,,,[[,"([2689]\\d)(\\d{3})(\\d{3})","$1 $2 $3"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,
,"NA","NA"],,,[,,"NA","NA"]],LY:[,[,,"[25679]\\d{8}","\\d{7,9}"],[,,"(?:2[1345]|5[1347]|6[123479]|71)\\d{7}","\\d{7,9}",,,"212345678"],[,,"9[1-6]\\d{7}","\\d{9}",,,"912345678"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"LY",218,"00","0",,,"0",,,,[[,"([25679]\\d)(\\d{7})","$1-$2",,"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],MA:[,[,,"[5689]\\d{8}","\\d{9}"],[,,"5(?:2(?:(?:[015-7]\\d|2[02-9]|3[2-57]|4[2-8]|8[235-7])\\d|9(?:0\\d|[89]0))|3(?:(?:[0-4]\\d|[57][2-9]|6[235-8]|9[3-9])\\d|8(?:0\\d|[89]0)))\\d{4}",
"\\d{9}",,,"520123456"],[,,"6(?:0[0-8]|[12-79]\\d|8[017])\\d{6}","\\d{9}",,,"650123456"],[,,"80\\d{7}","\\d{9}",,,"801234567"],[,,"89\\d{7}","\\d{9}",,,"891234567"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"MA",212,"00","0",,,"0",,,,[[,"([56]\\d{2})(\\d{6})","$1-$2",["5(?:2[015-7]|3[0-4])|6"],"0$1"],[,"([58]\\d{3})(\\d{5})","$1-$2",["5(?:2[2-489]|3[5-9])|892","5(?:2(?:[2-48]|90)|3(?:[5-79]|80))|892"],"0$1"],[,"(5\\d{4})(\\d{4})","$1-$2",["5(?:29|38)","5(?:29|38)[89]"],"0$1"],[,"(8[09])(\\d{7})",
"$1-$2",["8(?:0|9[013-9])"],"0$1"]],,[,,"NA","NA"],1,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],MC:[,[,,"[4689]\\d{7,8}","\\d{8,9}"],[,,"870\\d{5}|9[2-47-9]\\d{6}","\\d{8}",,,"99123456"],[,,"6\\d{8}|4(?:4\\d|5[1-9])\\d{5}","\\d{8,9}",,,"612345678"],[,,"90\\d{6}","\\d{8}",,,"90123456"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"MC",377,"00","0",,,"0",,,,[[,"(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["9"],"$1"],[,"(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["4"],"0$1"],[,"(6)(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
"$1 $2 $3 $4 $5",["6"],"0$1"],[,"(\\d{3})(\\d{3})(\\d{2})","$1 $2 $3",["8"],"$1"]],,[,,"NA","NA"],,,[,,"8\\d{7}","\\d{8}"],[,,"NA","NA"],,,[,,"NA","NA"]],MD:[,[,,"[235-9]\\d{7}","\\d{8}"],[,,"(?:2(?:1[0569]|2\\d|3[015-7]|4[1-46-9]|5[0-24689]|6[2-589]|7[1-37]|9[1347-9])|5(?:33|5[257]))\\d{5}","\\d{8}",,,"22212345"],[,,"(?:562\\d|6(?:[089]\\d{2}|[12][01]\\d|7(?:[1-6]\\d|7[0-4]))|7(?:6[07]|7[457-9]|[89]\\d)\\d)\\d{4}","\\d{8}",,,"62112345"],[,,"800\\d{5}","\\d{8}",,,"80012345"],[,,"90[056]\\d{5}","\\d{8}",
,,"90012345"],[,,"808\\d{5}","\\d{8}",,,"80812345"],[,,"NA","NA"],[,,"3[08]\\d{6}","\\d{8}",,,"30123456"],"MD",373,"00","0",,,"0",,,,[[,"(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["22|3"],"0$1"],[,"([25-7]\\d{2})(\\d{2})(\\d{3})","$1 $2 $3",["2[13-79]|[5-7]"],"0$1"],[,"([89]\\d{2})(\\d{5})","$1 $2",["[89]"],"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"8(?:03|14)\\d{5}","\\d{8}",,,"80312345"],,,[,,"NA","NA"]],ME:[,[,,"[2-9]\\d{7,8}","\\d{6,9}"],[,,"(?:20[2-8]|3(?:0[2-7]|[12][35-7]|3[4-7])|4(?:0[2367]|1[267])|5(?:0[467]|1[267]|2[367]))\\d{5}",
"\\d{6,8}",,,"30234567"],[,,"6(?:00\\d|32\\d|[89]\\d{2}|61\\d|7(?:[0-8]\\d|9(?:[3-9]|[0-2]\\d)))\\d{4}","\\d{8,9}",,,"67622901"],[,,"80\\d{6}","\\d{8}",,,"80080002"],[,,"(?:9(?:4[1568]|5[178]))\\d{5}","\\d{8}",,,"94515151"],[,,"NA","NA"],[,,"NA","NA"],[,,"78[1-9]\\d{5}","\\d{8}",,,"78108780"],"ME",382,"00","0",,,"0",,,,[[,"(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[2-57-9]|6[036-9]","[2-57-9]|6(?:[03689]|7(?:[0-8]|9[3-9]))"],"0$1"],[,"(67)(9)(\\d{3})(\\d{3})","$1 $2 $3 $4",["679","679[0-2]"],"0$1"]],
,[,,"NA","NA"],,,[,,"NA","NA"],[,,"77\\d{6}","\\d{8}",,,"77273012"],,,[,,"NA","NA"]],MF:[,[,,"[56]\\d{8}","\\d{9}"],[,,"590(?:[02][79]|13|5[0-268]|[78]7)\\d{4}","\\d{9}",,,"590271234"],[,,"690(?:0[0-7]|[1-9]\\d)\\d{4}","\\d{9}",,,"690301234"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"MF",590,"00","0",,,"0",,,,,,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],MG:[,[,,"[23]\\d{8}","\\d{7,9}"],[,,"20(?:2\\d{2}|4[47]\\d|5[3467]\\d|6[279]\\d|7(?:2[29]|[35]\\d)|8[268]\\d|9[245]\\d)\\d{4}",
"\\d{7,9}",,,"202123456"],[,,"3[2-49]\\d{7}","\\d{9}",,,"321234567"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"22\\d{7}","\\d{9}",,,"221234567"],"MG",261,"00","0",,,"0",,,,[[,"([23]\\d)(\\d{2})(\\d{3})(\\d{2})","$1 $2 $3 $4",,"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],MH:[,[,,"[2-6]\\d{6}","\\d{7}"],[,,"(?:247|528|625)\\d{4}","\\d{7}",,,"2471234"],[,,"(?:235|329|45[56]|545)\\d{4}","\\d{7}",,,"2351234"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA",
"NA"],[,,"635\\d{4}","\\d{7}",,,"6351234"],"MH",692,"011","1",,,"1",,,,[[,"(\\d{3})(\\d{4})","$1-$2"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],MK:[,[,,"[2-578]\\d{7}","\\d{8}"],[,,"(?:2(?:[23]\\d|5[124578]|6[01])|3(?:1[3-6]|[23][2-6]|4[2356])|4(?:[23][2-6]|4[3-6]|5[256]|6[25-8]|7[24-6]|8[4-6]))\\d{5}","\\d{6,8}",,,"22212345"],[,,"7(?:[0-25-8]\\d{2}|32\\d|421)\\d{4}","\\d{8}",,,"72345678"],[,,"800\\d{5}","\\d{8}",,,"80012345"],[,,"5[02-9]\\d{6}","\\d{8}",,,"50012345"],[,,"8(?:0[1-9]|[1-9]\\d)\\d{5}",
"\\d{8}",,,"80123456"],[,,"NA","NA"],[,,"NA","NA"],"MK",389,"00","0",,,"0",,,,[[,"(2)(\\d{3})(\\d{4})","$1 $2 $3",["2"],"0$1"],[,"([347]\\d)(\\d{3})(\\d{3})","$1 $2 $3",["[347]"],"0$1"],[,"([58]\\d{2})(\\d)(\\d{2})(\\d{2})","$1 $2 $3 $4",["[58]"],"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],ML:[,[,,"[246-9]\\d{7}","\\d{8}"],[,,"(?:2(?:0(?:2[0-589]|7\\d)|1(?:2[5-7]|[3-689]\\d|7[2-4689]))|44[239]\\d)\\d{4}","\\d{8}",,,"20212345"],[,,"(?:[67]\\d|8[23]|9[0-25-9])\\d{6}","\\d{8}",
,,"65012345"],[,,"800\\d{5}","\\d{8}",,,"80012345"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"ML",223,"00",,,,,,,,[[,"(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[246-9]"]],[,"(\\d{4})","$1",["67|74"]]],[[,"(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[246-9]"]]],[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],MM:[,[,,"[14578]\\d{5,7}|[26]\\d{5,8}|9(?:2\\d{0,2}|[58]|3\\d|4\\d{1,2}|6\\d?|[79]\\d{0,2})\\d{6}","\\d{5,10}"],[,,"1(?:2\\d{1,2}|[3-5]\\d|6\\d?|[89][0-6]\\d)\\d{4}|2(?:2(?:000\\d{3}|\\d{4})|3\\d{4}|4(?:0\\d{5}|\\d{4})|5(?:1\\d{3,6}|[02-9]\\d{3,5})|[6-9]\\d{4})|4(?:2[245-8]|[346][2-6]|5[3-5])\\d{4}|5(?:2(?:20?|[3-8])|3[2-68]|4(?:21?|[4-8])|5[23]|6[2-4]|7[2-8]|8[24-7]|9[2-7])\\d{4}|6(?:0[23]|1[2356]|[24][2-6]|3[24-6]|5[2-4]|6[2-8]|7(?:[2367]|4\\d|5\\d?|8[145]\\d)|8[245]|9[24])\\d{4}|7(?:[04][24-8]|[15][2-7]|22|3[2-4])\\d{4}|8(?:1(?:2\\d{1,2}|[3-689]\\d)|2(?:2\\d|3(?:\\d|20)|[4-8]\\d)|3[24]\\d|4[24-7]\\d|5[245]\\d|6[23]\\d)\\d{3}",
"\\d{5,9}",,,"1234567"],[,,"17[01]\\d{4}|9(?:2(?:[0-4]|5\\d{2}|6[0-5]\\d)|3[0-36]\\d|4(?:0[0-4]\\d|[1379]\\d|2\\d{2}|4[0-589]\\d|5\\d{2}|88)|5[0-6]|61?\\d|7(?:3\\d|[789]\\d{2})|8\\d|9(?:1\\d|[67]\\d{2}|[089]))\\d{5}","\\d{7,10}",,,"92123456"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"1333\\d{4}","\\d{8}",,,"13331234"],"MM",95,"00","0",,,"0",,,,[[,"(\\d)(\\d{3})(\\d{3,4})","$1 $2 $3",["1|2[245]"],"0$1"],[,"(2)(\\d{4})(\\d{4})","$1 $2 $3",["251"],"0$1"],[,"(\\d)(\\d{2})(\\d{3})","$1 $2 $3",
["16|2"],"0$1"],[,"(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["67|81"],"0$1"],[,"(\\d{2})(\\d{2})(\\d{3,4})","$1 $2 $3",["[4-8]"],"0$1"],[,"(9)(\\d{3})(\\d{4,6})","$1 $2 $3",["9(?:2[0-4]|[35-9]|4[137-9])"],"0$1"],[,"(9)([34]\\d{4})(\\d{4})","$1 $2 $3",["9(?:3[0-36]|4[0-57-9])"],"0$1"],[,"(9)(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["92[56]"],"0$1"],[,"(9)(\\d{3})(\\d{3})(\\d{2})","$1 $2 $3 $4",["93"],"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],MN:[,[,,"[12]\\d{7,9}|[57-9]\\d{7}",
"\\d{6,10}"],[,,"[12](?:1\\d|2(?:[1-3]\\d?|7\\d)|3[2-8]\\d{1,2}|4[2-68]\\d{1,2}|5[1-4689]\\d{1,2})\\d{5}|5[0568]\\d{6}","\\d{6,10}",,,"50123456"],[,,"(?:8(?:[05689]\\d|3[01])|9[013-9]\\d)\\d{5}","\\d{8}",,,"88123456"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"7[05-8]\\d{6}","\\d{8}",,,"75123456"],"MN",976,"001","0",,,"0",,,,[[,"([12]\\d)(\\d{2})(\\d{4})","$1 $2 $3",["[12]1"],"0$1"],[,"([12]2\\d)(\\d{5,6})","$1 $2",["[12]2[1-3]"],"0$1"],[,"([12]\\d{3})(\\d{5})","$1 $2",["[12](?:27|[3-5])",
"[12](?:27|[3-5]\\d)2"],"0$1"],[,"(\\d{4})(\\d{4})","$1 $2",["[57-9]"],"$1"],[,"([12]\\d{4})(\\d{4,5})","$1 $2",["[12](?:27|[3-5])","[12](?:27|[3-5]\\d)[4-9]"],"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],MO:[,[,,"[268]\\d{7}","\\d{8}"],[,,"(?:28[2-57-9]|8[2-57-9]\\d)\\d{5}","\\d{8}",,,"28212345"],[,,"6(?:[2356]\\d|8[158])\\d{5}","\\d{8}",,,"66123456"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"MO",853,"00",,,,,,,,[[,"([268]\\d{3})(\\d{4})","$1 $2"]],
,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],MP:[,[,,"[5689]\\d{9}","\\d{7}(?:\\d{3})?"],[,,"670(?:2(?:3[3-7]|56|8[5-8])|32[1238]|4(?:33|8[348])|5(?:32|55|88)|6(?:64|70|82)|78[589]|8[3-9]8|989)\\d{4}","\\d{7}(?:\\d{3})?",,,"6702345678"],[,,"670(?:2(?:3[3-7]|56|8[5-8])|32[1238]|4(?:33|8[348])|5(?:32|55|88)|6(?:64|70|82)|78[589]|8[3-9]8|989)\\d{4}","\\d{7}(?:\\d{3})?",,,"6702345678"],[,,"8(?:00|44|55|66|77|88)[2-9]\\d{6}","\\d{10}",,,"8002123456"],[,,"900[2-9]\\d{6}","\\d{10}",,,"9002123456"],
[,,"NA","NA"],[,,"5(?:00|33|44|66|77|88)[2-9]\\d{6}","\\d{10}",,,"5002345678"],[,,"NA","NA"],"MP",1,"011","1",,,"1",,,1,,,[,,"NA","NA"],,"670",[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],MQ:[,[,,"[56]\\d{8}","\\d{9}"],[,,"596(?:0[2-5]|[12]0|3[05-9]|4[024-8]|[5-7]\\d|89|9[4-8])\\d{4}","\\d{9}",,,"596301234"],[,,"696(?:[0-479]\\d|5[01]|8[0-689])\\d{4}","\\d{9}",,,"696201234"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"MQ",596,"00","0",,,"0",,,,[[,"(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
"$1 $2 $3 $4",,"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],MR:[,[,,"[2-48]\\d{7}","\\d{8}"],[,,"25[08]\\d{5}|35\\d{6}|45[1-7]\\d{5}","\\d{8}",,,"35123456"],[,,"[234][0-46-9]\\d{6}","\\d{8}",,,"22123456"],[,,"800\\d{5}","\\d{8}",,,"80012345"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"MR",222,"00",,,,,,,,[[,"([2-48]\\d)(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],MS:[,[,,"[5689]\\d{9}","\\d{7}(?:\\d{3})?"],
[,,"664491\\d{4}","\\d{7}(?:\\d{3})?",,,"6644912345"],[,,"66449[2-6]\\d{4}","\\d{10}",,,"6644923456"],[,,"8(?:00|44|55|66|77|88)[2-9]\\d{6}","\\d{10}",,,"8002123456"],[,,"900[2-9]\\d{6}","\\d{10}",,,"9002123456"],[,,"NA","NA"],[,,"5(?:00|33|44|66|77|88)[2-9]\\d{6}","\\d{10}",,,"5002345678"],[,,"NA","NA"],"MS",1,"011","1",,,"1",,,,,,[,,"NA","NA"],,"664",[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],MT:[,[,,"[2357-9]\\d{7}","\\d{8}"],[,,"2(?:0(?:1[0-6]|3[1-4]|[69]\\d)|[1-357]\\d{2})\\d{4}","\\d{8}",
,,"21001234"],[,,"(?:7(?:210|[79]\\d{2})|9(?:2(?:1[01]|31)|696|8(?:1[1-3]|89|97)|9\\d{2}))\\d{4}","\\d{8}",,,"96961234"],[,,"800[3467]\\d{4}","\\d{8}",,,"80071234"],[,,"5(?:0(?:0(?:37|43)|6\\d{2}|70\\d|9[0168])|[12]\\d0[1-5])\\d{3}","\\d{8}",,,"50037123"],[,,"NA","NA"],[,,"NA","NA"],[,,"3550\\d{4}","\\d{8}",,,"35501234"],"MT",356,"00",,,,,,,,[[,"(\\d{4})(\\d{4})","$1 $2"]],,[,,"7117\\d{4}","\\d{8}",,,"71171234"],,,[,,"NA","NA"],[,,"501\\d{5}","\\d{8}",,,"50112345"],,,[,,"NA","NA"]],MU:[,[,,"[2-9]\\d{6,7}",
"\\d{7,8}"],[,,"(?:2(?:[03478]\\d|1[0-7]|6[1-69])|4(?:[013568]\\d|2[4-7])|5(?:44\\d|471)|6\\d{2}|8(?:14|3[129]))\\d{4}","\\d{7,8}",,,"2012345"],[,,"5(?:2[59]\\d|4(?:2[1-389]|4\\d|7[1-9]|9\\d)|7\\d{2}|8(?:[0-2568]\\d|7[15-8])|9[0-8]\\d)\\d{4}","\\d{8}",,,"52512345"],[,,"80[012]\\d{4}","\\d{7}",,,"8001234"],[,,"30\\d{5}","\\d{7}",,,"3012345"],[,,"NA","NA"],[,,"NA","NA"],[,,"3(?:20|9\\d)\\d{4}","\\d{7}",,,"3201234"],"MU",230,"0(?:0|[2-7]0|33)",,,,,,"020",,[[,"([2-46-9]\\d{2})(\\d{4})","$1 $2",["[2-46-9]"]],
[,"(5\\d{3})(\\d{4})","$1 $2",["5"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],MV:[,[,,"[3467]\\d{6}|9(?:00\\d{7}|\\d{6})","\\d{7,10}"],[,,"(?:3(?:0[01]|3[0-59])|6(?:[567][02468]|8[024689]|90))\\d{4}","\\d{7}",,,"6701234"],[,,"(?:46[46]|7[3-9]\\d|9[15-9]\\d)\\d{4}","\\d{7}",,,"7712345"],[,,"NA","NA"],[,,"900\\d{7}","\\d{10}",,,"9001234567"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"MV",960,"0(?:0|19)",,,,,,"00",,[[,"(\\d{3})(\\d{4})","$1-$2",["[3467]|9(?:[1-9]|0[1-9])"]],[,"(\\d{3})(\\d{3})(\\d{4})",
"$1 $2 $3",["900"]]],,[,,"781\\d{4}","\\d{7}",,,"7812345"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],MW:[,[,,"(?:1(?:\\d{2})?|[2789]\\d{2})\\d{6}","\\d{7,9}"],[,,"(?:1[2-9]|21\\d{2})\\d{5}","\\d{7,9}",,,"1234567"],[,,"(?:111|77\\d|88\\d|99\\d)\\d{6}","\\d{9}",,,"991234567"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"MW",265,"00","0",,,"0",,,,[[,"(\\d)(\\d{3})(\\d{3})","$1 $2 $3",["1"],"0$1"],[,"(2\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["2"],"0$1"],[,"(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
"$1 $2 $3 $4",["[1789]"],"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],MX:[,[,,"[1-9]\\d{9,10}","\\d{7,11}"],[,,"(?:33|55|81)\\d{8}|(?:2(?:0[01]|2[2-9]|3[1-35-8]|4[13-9]|7[1-689]|8[1-578]|9[467])|3(?:1[1-79]|[2458][1-9]|7[1-8]|9[1-5])|4(?:1[1-57-9]|[24-6][1-9]|[37][1-8]|8[1-35-9]|9[2-689])|5(?:88|9[1-79])|6(?:1[2-68]|[234][1-9]|5[1-3689]|6[12457-9]|7[1-7]|8[67]|9[4-8])|7(?:[13467][1-9]|2[1-8]|5[13-9]|8[1-69]|9[17])|8(?:2[13-689]|3[1-6]|4[124-6]|6[1246-9]|7[1-378]|9[12479])|9(?:1[346-9]|2[1-4]|3[2-46-8]|5[1348]|[69][1-9]|7[12]|8[1-8]))\\d{7}",
"\\d{7,10}",,,"2221234567"],[,,"1(?:(?:33|55|81)\\d{8}|(?:2(?:2[2-9]|3[1-35-8]|4[13-9]|7[1-689]|8[1-578]|9[467])|3(?:1[1-79]|[2458][1-9]|7[1-8]|9[1-5])|4(?:1[1-57-9]|[24-6][1-9]|[37][1-8]|8[1-35-9]|9[2-689])|5(?:88|9[1-79])|6(?:1[2-68]|[2-4][1-9]|5[1-3689]|6[12457-9]|7[1-7]|8[67]|9[4-8])|7(?:[13467][1-9]|2[1-8]|5[13-9]|8[1-69]|9[17])|8(?:2[13-689]|3[1-6]|4[124-6]|6[1246-9]|7[1-378]|9[12479])|9(?:1[346-9]|2[1-4]|3[2-46-8]|5[1348]|[69][1-9]|7[12]|8[1-8]))\\d{7})","\\d{11}",,,"12221234567"],[,,"8(?:00|88)\\d{7}",
"\\d{10}",,,"8001234567"],[,,"900\\d{7}","\\d{10}",,,"9001234567"],[,,"300\\d{7}","\\d{10}",,,"3001234567"],[,,"500\\d{7}","\\d{10}",,,"5001234567"],[,,"NA","NA"],"MX",52,"0[09]","01",,,"0[12]|04[45](\\d{10})","1$1",,,[[,"([358]\\d)(\\d{4})(\\d{4})","$1 $2 $3",["33|55|81"],"01 $1",,1],[,"(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["[2467]|3[0-2457-9]|5[089]|8[02-9]|9[0-35-9]"],"01 $1",,1],[,"(1)([358]\\d)(\\d{4})(\\d{4})","044 $2 $3 $4",["1(?:33|55|81)"],"$1",,1],[,"(1)(\\d{3})(\\d{3})(\\d{4})","044 $2 $3 $4",
["1(?:[2467]|3[0-2457-9]|5[089]|8[2-9]|9[1-35-9])"],"$1",,1]],[[,"([358]\\d)(\\d{4})(\\d{4})","$1 $2 $3",["33|55|81"],"01 $1",,1],[,"(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["[2467]|3[0-2457-9]|5[089]|8[02-9]|9[0-35-9]"],"01 $1",,1],[,"(1)([358]\\d)(\\d{4})(\\d{4})","$1 $2 $3 $4",["1(?:33|55|81)"]],[,"(1)(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3 $4",["1(?:[2467]|3[0-2457-9]|5[089]|8[2-9]|9[1-35-9])"]]],[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],1,,[,,"NA","NA"]],MY:[,[,,"[13-9]\\d{7,9}","\\d{6,10}"],[,,"(?:3[2-9]\\d|[4-9][2-9])\\d{6}",
"\\d{6,9}",,,"323456789"],[,,"1(?:1[1-5]\\d{2}|[02-4679][2-9]\\d|59\\d{2}|8(?:1[23]|[2-9]\\d))\\d{5}","\\d{9,10}",,,"123456789"],[,,"1[378]00\\d{6}","\\d{10}",,,"1300123456"],[,,"1600\\d{6}","\\d{10}",,,"1600123456"],[,,"NA","NA"],[,,"NA","NA"],[,,"154\\d{7}","\\d{10}",,,"1541234567"],"MY",60,"00","0",,,"0",,,,[[,"([4-79])(\\d{3})(\\d{4})","$1-$2 $3",["[4-79]"],"0$1"],[,"(3)(\\d{4})(\\d{4})","$1-$2 $3",["3"],"0$1"],[,"([18]\\d)(\\d{3})(\\d{3,4})","$1-$2 $3",["1[02-46-9][1-9]|8"],"0$1"],[,"(1)([36-8]00)(\\d{2})(\\d{4})",
"$1-$2-$3-$4",["1[36-8]0"]],[,"(11)(\\d{4})(\\d{4})","$1-$2 $3",["11"],"0$1"],[,"(15[49])(\\d{3})(\\d{4})","$1-$2 $3",["15"],"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],MZ:[,[,,"[28]\\d{7,8}","\\d{8,9}"],[,,"2(?:[1346]\\d|5[0-2]|[78][12]|93)\\d{5}","\\d{8}",,,"21123456"],[,,"8[23467]\\d{7}","\\d{9}",,,"821234567"],[,,"800\\d{6}","\\d{9}",,,"800123456"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"MZ",258,"00",,,,,,,,[[,"([28]\\d)(\\d{3})(\\d{3,4})","$1 $2 $3",
["2|8[2-7]"]],[,"(80\\d)(\\d{3})(\\d{3})","$1 $2 $3",["80"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],NA:[,[,,"[68]\\d{7,8}","\\d{8,9}"],[,,"6(?:1(?:17|2(?:[0189]\\d|[2-6]|7\\d?)|3(?:[01378]|2\\d)|4(?:[024]|10?|3[15]?)|69|7[014])|2(?:17|5(?:[0-36-8]|4\\d?)|69|70)|3(?:17|2(?:[0237]\\d?|[14-689])|34|6[289]|7[01]|81)|4(?:17|2(?:[012]|7?)|4(?:[06]|1\\d?)|5(?:[01357]|[25]\\d?)|69|7[01])|5(?:17|2(?:[0459]|[23678]\\d?)|69|7[01])|6(?:17|2(?:5|6\\d?)|38|42|69|7[01])|7(?:17|2(?:[569]|[234]\\d?)|3(?:0\\d?|[13])|69|7[01]))\\d{4}",
"\\d{8,9}",,,"61221234"],[,,"(?:60|8[125])\\d{7}","\\d{9}",,,"811234567"],[,,"NA","NA"],[,,"8701\\d{5}","\\d{9}",,,"870123456"],[,,"NA","NA"],[,,"NA","NA"],[,,"8(?:3\\d{2}|86)\\d{5}","\\d{8,9}",,,"88612345"],"NA",264,"00","0",,,"0",,,,[[,"(8\\d)(\\d{3})(\\d{4})","$1 $2 $3",["8[1235]"],"0$1"],[,"(6\\d)(\\d{3})(\\d{3,4})","$1 $2 $3",["6"],"0$1"],[,"(88)(\\d{3})(\\d{3})","$1 $2 $3",["88"],"0$1"],[,"(870)(\\d{3})(\\d{3})","$1 $2 $3",["870"],"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA",
"NA"]],NC:[,[,,"[2-57-9]\\d{5}","\\d{6}"],[,,"(?:2[03-9]|3[0-5]|4[1-7]|88)\\d{4}","\\d{6}",,,"201234"],[,,"(?:5[0-4]|[79]\\d|8[0-79])\\d{4}","\\d{6}",,,"751234"],[,,"NA","NA"],[,,"36\\d{4}","\\d{6}",,,"366711"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"NC",687,"00",,,,,,,,[[,"(\\d{2})(\\d{2})(\\d{2})","$1.$2.$3",["[2-46-9]|5[0-4]"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],NE:[,[,,"[0289]\\d{7}","\\d{8}"],[,,"2(?:0(?:20|3[1-7]|4[134]|5[14]|6[14578]|7[1-578])|1(?:4[145]|5[14]|6[14-68]|7[169]|88))\\d{4}",
"\\d{8}",,,"20201234"],[,,"(?:8[089]|9\\d)\\d{6}","\\d{8}",,,"93123456"],[,,"08\\d{6}","\\d{8}",,,"08123456"],[,,"09\\d{6}","\\d{8}",,,"09123456"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"NE",227,"00",,,,,,,,[[,"(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[289]|09"]],[,"(08)(\\d{3})(\\d{3})","$1 $2 $3",["08"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],1,,[,,"NA","NA"]],NF:[,[,,"[13]\\d{5}","\\d{5,6}"],[,,"(?:1(?:06|17|28|39)|3[012]\\d)\\d{3}","\\d{5,6}",,,"106609"],[,,"3[58]\\d{4}","\\d{5,6}",
,,"381234"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"NF",672,"00",,,,,,,,[[,"(\\d{2})(\\d{4})","$1 $2",["1"]],[,"(\\d)(\\d{5})","$1 $2",["3"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],NG:[,[,,"[1-6]\\d{5,8}|9\\d{5,9}|[78]\\d{5,13}","\\d{5,14}"],[,,"[12]\\d{6,7}|9(?:0[3-9]|[1-9]\\d)\\d{5}|(?:3\\d|4[023568]|5[02368]|6[02-469]|7[4-69]|8[2-9])\\d{6}|(?:4[47]|5[14579]|6[1578]|7[0-357])\\d{5,6}|(?:78|41)\\d{5}","\\d{5,9}",,,"12345678"],[,,"(?:1(?:7[34]\\d|8(?:04|[124579]\\d|8[0-3])|95\\d)|287[0-7]|3(?:18[1-8]|88[0-7]|9(?:8[5-9]|6[1-5]))|4(?:28[0-2]|6(?:7[1-9]|8[02-47])|88[0-2])|5(?:2(?:7[7-9]|8\\d)|38[1-79]|48[0-7]|68[4-7])|6(?:2(?:7[7-9]|8\\d)|4(?:3[7-9]|[68][129]|7[04-69]|9[1-8])|58[0-2]|98[7-9])|7(?:38[0-7]|69[1-8]|78[2-4])|8(?:28[3-9]|38[0-2]|4(?:2[12]|3[147-9]|5[346]|7[4-9]|8[014-689]|90)|58[1-8]|78[2-9]|88[5-7])|98[07]\\d)\\d{4}|(?:70[1-689]\\d|8(?:0(?:1[01]|[2-9]\\d)|1(?:[0-8]\\d|9[01]))|90[23589]\\d)\\d{6}",
"\\d{8,10}",,,"8021234567"],[,,"800\\d{7,11}","\\d{10,14}",,,"80017591759"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"NG",234,"009","0",,,"0",,,,[[,"(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["70|8[01]|90[23589]"],"0$1"],[,"(\\d)(\\d{3})(\\d{3,4})","$1 $2 $3",["[12]|9(?:0[3-9]|[1-9])"],"0$1"],[,"(\\d{2})(\\d{3})(\\d{2,3})","$1 $2 $3",["[3-6]|7(?:[1-79]|0[1-9])|8[2-9]"],"0$1"],[,"([78]00)(\\d{4})(\\d{4,5})","$1 $2 $3",["[78]00"],"0$1"],[,"([78]00)(\\d{5})(\\d{5,6})","$1 $2 $3",["[78]00"],
"0$1"],[,"(78)(\\d{2})(\\d{3})","$1 $2 $3",["78"],"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"700\\d{7,11}","\\d{10,14}",,,"7001234567"],,,[,,"NA","NA"]],NI:[,[,,"[12578]\\d{7}","\\d{8}"],[,,"2\\d{7}","\\d{8}",,,"21234567"],[,,"5(?:5[0-7]\\d{5}|[78]\\d{6})|7[5-8]\\d{6}|8\\d{7}","\\d{8}",,,"81234567"],[,,"1800\\d{4}","\\d{8}",,,"18001234"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"NI",505,"00",,,,,,,,[[,"(\\d{4})(\\d{4})","$1 $2"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA",
"NA"]],NL:[,[,,"1\\d{4,8}|[2-7]\\d{8}|[89]\\d{6,9}","\\d{5,10}"],[,,"(?:1[0135-8]|2[02-69]|3[0-68]|4[0135-9]|[57]\\d|8[478])\\d{7}","\\d{9}",,,"101234567"],[,,"6[1-58]\\d{7}","\\d{9}",,,"612345678"],[,,"800\\d{4,7}","\\d{7,10}",,,"8001234"],[,,"90[069]\\d{4,7}","\\d{7,10}",,,"9061234"],[,,"NA","NA"],[,,"NA","NA"],[,,"85\\d{7}","\\d{9}",,,"851234567"],"NL",31,"00","0",,,"0",,,,[[,"([1-578]\\d)(\\d{3})(\\d{4})","$1 $2 $3",["1[035]|2[0346]|3[03568]|4[0356]|5[0358]|7|8[4578]"],"0$1"],[,"([1-5]\\d{2})(\\d{3})(\\d{3})",
"$1 $2 $3",["1[16-8]|2[259]|3[124]|4[17-9]|5[124679]"],"0$1"],[,"(6)(\\d{8})","$1 $2",["6[0-57-9]"],"0$1"],[,"(66)(\\d{7})","$1 $2",["66"],"0$1"],[,"(14)(\\d{3,4})","$1 $2",["14"],"$1"],[,"([89]0\\d)(\\d{4,7})","$1 $2",["80|9"],"0$1"]],,[,,"66\\d{7}","\\d{9}",,,"662345678"],,,[,,"14\\d{3,4}","\\d{5,6}"],[,,"140(?:1(?:[035]|[16-8]\\d)|2(?:[0346]|[259]\\d)|3(?:[03568]|[124]\\d)|4(?:[0356]|[17-9]\\d)|5(?:[0358]|[124679]\\d)|7\\d|8[458])","\\d{5,6}",,,"14020"],,,[,,"NA","NA"]],NO:[,[,,"0\\d{4}|[2-9]\\d{7}",
"\\d{5}(?:\\d{3})?"],[,,"(?:2[1-4]|3[1-3578]|5[1-35-7]|6[1-4679]|7[0-8])\\d{6}","\\d{8}",,,"21234567"],[,,"(?:4[015-9]|5[89]|9\\d)\\d{6}","\\d{8}",,,"40612345"],[,,"80[01]\\d{5}","\\d{8}",,,"80012345"],[,,"82[09]\\d{5}","\\d{8}",,,"82012345"],[,,"810(?:0[0-6]|[2-8]\\d)\\d{3}","\\d{8}",,,"81021234"],[,,"880\\d{5}","\\d{8}",,,"88012345"],[,,"85[0-5]\\d{5}","\\d{8}",,,"85012345"],"NO",47,"00",,,,,,,,[[,"([489]\\d{2})(\\d{2})(\\d{3})","$1 $2 $3",["[489]"]],[,"([235-7]\\d)(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",
["[235-7]"]]],,[,,"NA","NA"],1,,[,,"NA","NA"],[,,"0\\d{4}|81(?:0(?:0[7-9]|1\\d)|5\\d{2})\\d{3}","\\d{5}(?:\\d{3})?",,,"01234"],1,,[,,"81[23]\\d{5}","\\d{8}",,,"81212345"]],NP:[,[,,"[1-8]\\d{7}|9(?:[1-69]\\d{6,8}|7[2-6]\\d{5,7}|8\\d{8})","\\d{6,10}"],[,,"(?:1[0-6]\\d|2[13-79][2-6]|3[135-8][2-6]|4[146-9][2-6]|5[135-7][2-6]|6[13-9][2-6]|7[15-9][2-6]|8[1-46-9][2-6]|9[1-79][2-6])\\d{5}","\\d{6,8}",,,"14567890"],[,,"9(?:6[013]|7[245]|8[0-24-6])\\d{7}","\\d{10}",,,"9841234567"],[,,"NA","NA"],[,,"NA","NA"],
[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"NP",977,"00","0",,,"0",,,,[[,"(1)(\\d{7})","$1-$2",["1[2-6]"],"0$1"],[,"(\\d{2})(\\d{6})","$1-$2",["1[01]|[2-8]|9(?:[1-69]|7[15-9])"],"0$1"],[,"(9\\d{2})(\\d{7})","$1-$2",["9(?:6[013]|7[245]|8)"],"$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],NR:[,[,,"[458]\\d{6}","\\d{7}"],[,,"(?:444|888)\\d{4}","\\d{7}",,,"4441234"],[,,"55[5-9]\\d{4}","\\d{7}",,,"5551234"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"NR",
674,"00",,,,,,,,[[,"(\\d{3})(\\d{4})","$1 $2"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],NU:[,[,,"[1-5]\\d{3}","\\d{4}"],[,,"[34]\\d{3}","\\d{4}",,,"4002"],[,,"[125]\\d{3}","\\d{4}",,,"1234"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"NU",683,"00",,,,,,,,,,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],NZ:[,[,,"6[235-9]\\d{6}|[2-57-9]\\d{7,10}","\\d{7,11}"],[,,"(?:3[2-79]|[49][2-9]|6[235-9]|7[2-57-9])\\d{6}|24099\\d{3}","\\d{7,8}",,,"32345678"],
[,,"2(?:[028]\\d{7,8}|1(?:[03]\\d{5,7}|[12457]\\d{5,6}|[689]\\d{5})|[79]\\d{7})","\\d{8,10}",,,"211234567"],[,,"508\\d{6,7}|80\\d{6,8}","\\d{8,10}",,,"800123456"],[,,"90\\d{7,9}","\\d{9,11}",,,"900123456"],[,,"NA","NA"],[,,"70\\d{7}","\\d{9}",,,"701234567"],[,,"NA","NA"],"NZ",64,"0(?:0|161)","0",,,"0",,"00",,[[,"([34679])(\\d{3})(\\d{4})","$1-$2 $3",["[346]|7[2-57-9]|9[1-9]"],"0$1"],[,"(24099)(\\d{3})","$1 $2",["240","2409","24099"],"0$1"],[,"(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["21"],"0$1"],[,"(\\d{2})(\\d{3})(\\d{3,5})",
"$1 $2 $3",["2(?:1[1-9]|[69]|7[0-35-9])|70|86"],"0$1"],[,"(2\\d)(\\d{3,4})(\\d{4})","$1 $2 $3",["2[028]"],"0$1"],[,"(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["2(?:10|74)|5|[89]0"],"0$1"]],,[,,"[28]6\\d{6,7}","\\d{8,9}",,,"26123456"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],OM:[,[,,"(?:5|[279]\\d)\\d{6}|800\\d{5,6}","\\d{7,9}"],[,,"2[2-6]\\d{6}","\\d{8}",,,"23123456"],[,,"7[19]\\d{6}|9(?:0[1-9]|[1-9]\\d)\\d{5}","\\d{8}",,,"92123456"],[,,"8007\\d{4,5}|500\\d{4}","\\d{7,9}",,,"80071234"],[,,"900\\d{5}",
"\\d{8}",,,"90012345"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"OM",968,"00",,,,,,,,[[,"(2\\d)(\\d{6})","$1 $2",["2"]],[,"([79]\\d{3})(\\d{4})","$1 $2",["[79]"]],[,"([58]00)(\\d{4,6})","$1 $2",["[58]"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],PA:[,[,,"[1-9]\\d{6,7}","\\d{7,8}"],[,,"(?:1(?:0[0-8]|1[49]|2[37]|3[0137]|4[147]|5[05]|6[58]|7[0167]|8[58]|9[139])|2(?:[0235679]\\d|1[0-7]|4[04-9]|8[028])|3(?:[09]\\d|1[014-7]|2[0-3]|3[03]|4[03-57]|55|6[068]|7[06-8]|8[06-9])|4(?:3[013-69]|4\\d|7[0-589])|5(?:[01]\\d|2[0-7]|[56]0|79)|7(?:0[09]|2[0-267]|3[06]|[469]0|5[06-9]|7[0-24-79]|8[7-9])|8(?:09|[34]\\d|5[0134]|8[02])|9(?:0[6-9]|1[016-8]|2[036-8]|3[3679]|40|5[0489]|6[06-9]|7[046-9]|8[36-8]|9[1-9]))\\d{4}",
"\\d{7}",,,"2001234"],[,,"(?:1[16]1|21[89]|8(?:1[01]|7[23]))\\d{4}|6(?:[024-9]\\d|1[0-5]|3[0-24-9])\\d{5}","\\d{7,8}",,,"60012345"],[,,"80[09]\\d{4}","\\d{7}",,,"8001234"],[,,"(?:779|8(?:55|60|7[78])|9(?:00|81))\\d{4}","\\d{7}",,,"8601234"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"PA",507,"00",,,,,,,,[[,"(\\d{3})(\\d{4})","$1-$2",["[1-57-9]"]],[,"(\\d{4})(\\d{4})","$1-$2",["6"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],PE:[,[,,"[14-9]\\d{7,8}","\\d{6,9}"],[,,"(?:1\\d|4[1-4]|5[1-46]|6[1-7]|7[2-46]|8[2-4])\\d{6}",
"\\d{6,8}",,,"11234567"],[,,"9\\d{8}","\\d{9}",,,"912345678"],[,,"800\\d{5}","\\d{8}",,,"80012345"],[,,"805\\d{5}","\\d{8}",,,"80512345"],[,,"801\\d{5}","\\d{8}",,,"80112345"],[,,"80[24]\\d{5}","\\d{8}",,,"80212345"],[,,"NA","NA"],"PE",51,"19(?:1[124]|77|90)00","0"," Anexo ",,"0",,,,[[,"(1)(\\d{7})","$1 $2",["1"],"(0$1)"],[,"([4-8]\\d)(\\d{6})","$1 $2",["[4-7]|8[2-4]"],"(0$1)"],[,"(\\d{3})(\\d{5})","$1 $2",["80"],"(0$1)"],[,"(9\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["9"],"$1"]],,[,,"NA","NA"],,,[,,"NA",
"NA"],[,,"NA","NA"],,,[,,"NA","NA"]],PF:[,[,,"4\\d{5,7}|8\\d{7}","\\d{6}(?:\\d{2})?"],[,,"4(?:[09][45689]\\d|4)\\d{4}","\\d{6}(?:\\d{2})?",,,"40412345"],[,,"8[79]\\d{6}","\\d{8}",,,"87123456"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"PF",689,"00",,,,,,,,[[,"(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["4[09]|8[79]"]],[,"(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3",["44"]]],,[,,"NA","NA"],,,[,,"44\\d{4}","\\d{6}",,,"441234"],[,,"NA","NA"],,,[,,"NA","NA"]],PG:[,[,,"[1-9]\\d{6,7}",
"\\d{7,8}"],[,,"(?:3[0-2]\\d|4[25]\\d|5[34]\\d|64[1-9]|77(?:[0-24]\\d|30)|85[02-46-9]|9[78]\\d)\\d{4}","\\d{7}",,,"3123456"],[,,"(?:20150|68\\d{2}|7(?:[0-689]\\d|75)\\d{2})\\d{3}","\\d{7,8}",,,"6812345"],[,,"180\\d{4}","\\d{7}",,,"1801234"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"275\\d{4}","\\d{7}",,,"2751234"],"PG",675,"00",,,,,,,,[[,"(\\d{3})(\\d{4})","$1 $2",["[13-689]|27"]],[,"(\\d{4})(\\d{4})","$1 $2",["20|7"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],PH:[,[,,"2\\d{5,7}|[3-9]\\d{7,9}|1800\\d{7,9}",
"\\d{5,13}"],[,,"2\\d{5}(?:\\d{2})?|(?:3[2-68]|4[2-9]|5[2-6]|6[2-58]|7[24578]|8[2-8])\\d{7}|88(?:22\\d{6}|42\\d{4})","\\d{5,10}",,,"21234567"],[,,"(?:81[37]|9(?:0[5-9]|1[024-9]|2[0-35-9]|3[02-9]|4[236-9]|50|7[34-79]|89|9[4-9]))\\d{7}","\\d{10}",,,"9051234567"],[,,"1800\\d{7,9}","\\d{11,13}",,,"180012345678"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"PH",63,"00","0",,,"0",,,,[[,"(2)(\\d{3})(\\d{4})","$1 $2 $3",["2"],"(0$1)"],[,"(2)(\\d{5})","$1 $2",["2"],"(0$1)"],[,"(\\d{4})(\\d{4,6})",
"$1 $2",["3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|5(?:22|44)|642|8(?:62|8[245])","3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))"],"(0$1)"],[,"(\\d{5})(\\d{4})","$1 $2",["346|4(?:27|9[35])|883","3469|4(?:279|9(?:30|56))|8834"],"(0$1)"],[,"([3-8]\\d)(\\d{3})(\\d{4})","$1 $2 $3",["[3-8]"],"(0$1)"],[,"(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["81|9"],"0$1"],[,"(1800)(\\d{3})(\\d{4})","$1 $2 $3",["1"]],[,"(1800)(\\d{1,2})(\\d{3})(\\d{4})",
"$1 $2 $3 $4",["1"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],PK:[,[,,"1\\d{8}|[2-8]\\d{5,11}|9(?:[013-9]\\d{4,9}|2\\d(?:111\\d{6}|\\d{3,7}))","\\d{6,12}"],[,,"(?:21|42)[2-9]\\d{7}|(?:2[25]|4[0146-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]\\d{6}|(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:1|2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8]))[2-9]\\d{5,6}|58[126]\\d{7}","\\d{6,10}",,,"2123456789"],[,,"3(?:0\\d|1[0-6]|2[0-5]|3[0-7]|4[0-8]|55|64)\\d{7}",
"\\d{10}",,,"3012345678"],[,,"800\\d{5}","\\d{8}",,,"80012345"],[,,"900\\d{5}","\\d{8}",,,"90012345"],[,,"NA","NA"],[,,"122\\d{6}","\\d{9}",,,"122044444"],[,,"NA","NA"],"PK",92,"00","0",,,"0",,,,[[,"(\\d{2})(111)(\\d{3})(\\d{3})","$1 $2 $3 $4",["(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)1","(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)11","(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)111"],"(0$1)"],[,"(\\d{3})(111)(\\d{3})(\\d{3})","$1 $2 $3 $4",["2[349]|45|54|60|72|8[2-5]|9[2-9]",
"(?:2[349]|45|54|60|72|8[2-5]|9[2-9])\\d1","(?:2[349]|45|54|60|72|8[2-5]|9[2-9])\\d11","(?:2[349]|45|54|60|72|8[2-5]|9[2-9])\\d111"],"(0$1)"],[,"(\\d{2})(\\d{7,8})","$1 $2",["(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]"],"(0$1)"],[,"(\\d{3})(\\d{6,7})","$1 $2",["2[349]|45|54|60|72|8[2-5]|9[2-9]","(?:2[349]|45|54|60|72|8[2-5]|9[2-9])\\d[2-9]"],"(0$1)"],[,"(3\\d{2})(\\d{7})","$1 $2",["3"],"0$1"],[,"([15]\\d{3})(\\d{5,6})","$1 $2",["58[12]|1"],"(0$1)"],[,"(586\\d{2})(\\d{5})","$1 $2",
["586"],"(0$1)"],[,"([89]00)(\\d{3})(\\d{2})","$1 $2 $3",["[89]00"],"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"(?:2(?:[125]|3[2358]|4[2-4]|9[2-8])|4(?:[0-246-9]|5[3479])|5(?:[1-35-7]|4[2-467])|6(?:[1-8]|0[468])|7(?:[14]|2[236])|8(?:[16]|2[2-689]|3[23578]|4[3478]|5[2356])|9(?:1|22|3[27-9]|4[2-6]|6[3569]|9[2-7]))111\\d{6}","\\d{11,12}",,,"21111825888"],,,[,,"NA","NA"]],PL:[,[,,"[12]\\d{6,8}|[3-57-9]\\d{8}|6\\d{5,8}","\\d{6,9}"],[,,"(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])\\d{7}|[12]2\\d{5}",
"\\d{6,9}",,,"123456789"],[,,"(?:5[0137]|6[069]|7[2389]|88)\\d{7}","\\d{9}",,,"512345678"],[,,"800\\d{6}","\\d{9}",,,"800123456"],[,,"70\\d{7}","\\d{9}",,,"701234567"],[,,"801\\d{6}","\\d{9}",,,"801234567"],[,,"NA","NA"],[,,"39\\d{7}","\\d{9}",,,"391234567"],"PL",48,"00",,,,,,,,[[,"(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[14]|2[0-57-9]|3[2-4]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145]"]],[,"(\\d{2})(\\d{1})(\\d{4})","$1 $2 $3",["[12]2"]],[,"(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["26|39|5[0137]|6[0469]|7[02389]|8[08]"]],
[,"(\\d{3})(\\d{2})(\\d{2,3})","$1 $2 $3",["64"]],[,"(\\d{3})(\\d{3})","$1 $2",["64"]]],,[,,"64\\d{4,7}","\\d{6,9}",,,"641234567"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],PM:[,[,,"[45]\\d{5}","\\d{6}"],[,,"41\\d{4}","\\d{6}",,,"411234"],[,,"55\\d{4}","\\d{6}",,,"551234"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"PM",508,"00","0",,,"0",,,,[[,"([45]\\d)(\\d{2})(\\d{2})","$1 $2 $3",,"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],PR:[,[,,"[5789]\\d{9}",
"\\d{7}(?:\\d{3})?"],[,,"(?:787|939)[2-9]\\d{6}","\\d{7}(?:\\d{3})?",,,"7872345678"],[,,"(?:787|939)[2-9]\\d{6}","\\d{7}(?:\\d{3})?",,,"7872345678"],[,,"8(?:00|44|55|66|77|88)[2-9]\\d{6}","\\d{10}",,,"8002345678"],[,,"900[2-9]\\d{6}","\\d{10}",,,"9002345678"],[,,"NA","NA"],[,,"5(?:00|33|44|66|77|88)[2-9]\\d{6}","\\d{10}",,,"5002345678"],[,,"NA","NA"],"PR",1,"011","1",,,"1",,,1,,,[,,"NA","NA"],,"787|939",[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],PS:[,[,,"[24589]\\d{7,8}|1(?:[78]\\d{8}|[49]\\d{2,3})",
"\\d{4,10}"],[,,"(?:22[234789]|42[45]|82[01458]|92[369])\\d{5}","\\d{7,8}",,,"22234567"],[,,"5[69]\\d{7}","\\d{9}",,,"599123456"],[,,"1800\\d{6}","\\d{10}",,,"1800123456"],[,,"1(?:4|9\\d)\\d{2}","\\d{4,5}",,,"19123"],[,,"1700\\d{6}","\\d{10}",,,"1700123456"],[,,"NA","NA"],[,,"NA","NA"],"PS",970,"00","0",,,"0",,,,[[,"([2489])(2\\d{2})(\\d{4})","$1 $2 $3",["[2489]"],"0$1"],[,"(5[69]\\d)(\\d{3})(\\d{3})","$1 $2 $3",["5"],"0$1"],[,"(1[78]00)(\\d{3})(\\d{3})","$1 $2 $3",["1[78]"],"$1"]],,[,,"NA","NA"],
,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],PT:[,[,,"[2-46-9]\\d{8}","\\d{9}"],[,,"2(?:[12]\\d|[35][1-689]|4[1-59]|6[1-35689]|7[1-9]|8[1-69]|9[1256])\\d{6}","\\d{9}",,,"212345678"],[,,"9(?:[1236]\\d{2}|480)\\d{5}","\\d{9}",,,"912345678"],[,,"80[02]\\d{6}","\\d{9}",,,"800123456"],[,,"6(?:0[178]|4[68])\\d{6}|76(?:0[1-57]|1[2-47]|2[237])\\d{5}","\\d{9}",,,"760123456"],[,,"80(?:8\\d|9[1579])\\d{5}","\\d{9}",,,"808123456"],[,,"884[0-4689]\\d{5}","\\d{9}",,,"884123456"],[,,"30\\d{7}","\\d{9}",,,"301234567"],
"PT",351,"00",,,,,,,,[[,"(2\\d)(\\d{3})(\\d{4})","$1 $2 $3",["2[12]"]],[,"([2-46-9]\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["2[3-9]|[346-9]"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"7(?:0(?:7\\d|8[17]))\\d{5}","\\d{9}",,,"707123456"],,,[,,"600\\d{6}","\\d{9}",,,"600110000"]],PW:[,[,,"[2-8]\\d{6}","\\d{7}"],[,,"2552255|(?:277|345|488|5(?:35|44|87)|6(?:22|54|79)|7(?:33|47)|8(?:24|55|76))\\d{4}","\\d{7}",,,"2771234"],[,,"(?:6[234689]0|77[45789])\\d{4}","\\d{7}",,,"6201234"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA",
"NA"],[,,"NA","NA"],[,,"NA","NA"],"PW",680,"01[12]",,,,,,,,[[,"(\\d{3})(\\d{4})","$1 $2"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],PY:[,[,,"5[0-5]\\d{4,7}|[2-46-9]\\d{5,8}","\\d{5,9}"],[,,"(?:[26]1|3[289]|4[124678]|7[123]|8[1236])\\d{5,7}|(?:2(?:2[4568]|7[15]|9[1-5])|3(?:18|3[167]|4[2357]|51)|4(?:18|2[45]|3[12]|5[13]|64|71|9[1-47])|5(?:[1-4]\\d|5[0234])|6(?:3[1-3]|44|7[1-4678])|7(?:17|4[0-4]|6[1-578]|75|8[0-8])|858)\\d{5,6}","\\d{5,9}",,,"212345678"],[,,"9(?:6[12]|[78][1-6]|9[1-5])\\d{6}",
"\\d{9}",,,"961456789"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"8700[0-4]\\d{4}","\\d{9}",,,"870012345"],"PY",595,"00","0",,,"0",,,,[[,"(\\d{2})(\\d{5,7})","$1 $2",["(?:[26]1|3[289]|4[124678]|7[123]|8[1236])"],"($1)"],[,"(\\d{3})(\\d{3,6})","$1 $2",["[2-9]0"],"0$1"],[,"(\\d{3})(\\d{6})","$1 $2",["9[1-9]"],"0$1"],[,"(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["8700"]],[,"(\\d{3})(\\d{4,6})","$1 $2",["[2-8][1-9]"],"($1)"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"[2-9]0\\d{4,7}","\\d{6,9}",
,,"201234567"],,,[,,"NA","NA"]],QA:[,[,,"[2-8]\\d{6,7}","\\d{7,8}"],[,,"4[04]\\d{6}","\\d{7,8}",,,"44123456"],[,,"[3567]\\d{7}","\\d{7,8}",,,"33123456"],[,,"800\\d{4}","\\d{7,8}",,,"8001234"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"QA",974,"00",,,,,,,,[[,"([28]\\d{2})(\\d{4})","$1 $2",["[28]"]],[,"([3-7]\\d{3})(\\d{4})","$1 $2",["[3-7]"]]],,[,,"2(?:[12]\\d|61)\\d{4}","\\d{7}",,,"2123456"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],RE:[,[,,"[268]\\d{8}","\\d{9}"],[,,"262\\d{6}",
"\\d{9}",,,"262161234"],[,,"6(?:9[23]|47)\\d{6}","\\d{9}",,,"692123456"],[,,"80\\d{7}","\\d{9}",,,"801234567"],[,,"89[1-37-9]\\d{6}","\\d{9}",,,"891123456"],[,,"8(?:1[019]|2[0156]|84|90)\\d{6}","\\d{9}",,,"810123456"],[,,"NA","NA"],[,,"NA","NA"],"RE",262,"00","0",,,"0",,,,[[,"([268]\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",,"0$1"]],,[,,"NA","NA"],1,"262|6[49]|8",[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],RO:[,[,,"2\\d{5,8}|[37-9]\\d{8}","\\d{6,9}"],[,,"2(?:1(?:\\d{7}|9\\d{3})|[3-6](?:\\d{7}|\\d9\\d{2}))|3[13-6]\\d{7}",
"\\d{6,9}",,,"211234567"],[,,"7(?:[0-8]\\d{2}|99\\d)\\d{5}","\\d{9}",,,"712345678"],[,,"800\\d{6}","\\d{9}",,,"800123456"],[,,"90[036]\\d{6}","\\d{9}",,,"900123456"],[,,"801\\d{6}","\\d{9}",,,"801123456"],[,,"802\\d{6}","\\d{9}",,,"802123456"],[,,"NA","NA"],"RO",40,"00","0"," int ",,"0",,,,[[,"(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[23]1"],"0$1"],[,"(21)(\\d{4})","$1 $2",["21"],"0$1"],[,"(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[23][3-7]|[7-9]"],"0$1"],[,"(2\\d{2})(\\d{3})","$1 $2",["2[3-6]"],"0$1"]],
,[,,"NA","NA"],,,[,,"NA","NA"],[,,"37\\d{7}","\\d{9}",,,"372123456"],,,[,,"NA","NA"]],RS:[,[,,"[126-9]\\d{4,11}|3(?:[0-79]\\d{3,10}|8[2-9]\\d{2,9})","\\d{5,12}"],[,,"(?:1(?:[02-9][2-9]|1[1-9])\\d|2(?:[0-24-7][2-9]\\d|[389](?:0[2-9]|[2-9]\\d))|3(?:[0-8][2-9]\\d|9(?:[2-9]\\d|0[2-9])))\\d{3,8}","\\d{5,12}",,,"10234567"],[,,"6(?:[0-689]|7\\d)\\d{6,7}","\\d{8,10}",,,"601234567"],[,,"800\\d{3,9}","\\d{6,12}",,,"80012345"],[,,"(?:90[0169]|78\\d)\\d{3,7}","\\d{6,12}",,,"90012345"],[,,"NA","NA"],[,,"NA","NA"],
[,,"NA","NA"],"RS",381,"00","0",,,"0",,,,[[,"([23]\\d{2})(\\d{4,9})","$1 $2",["(?:2[389]|39)0"],"0$1"],[,"([1-3]\\d)(\\d{5,10})","$1 $2",["1|2(?:[0-24-7]|[389][1-9])|3(?:[0-8]|9[1-9])"],"0$1"],[,"(6\\d)(\\d{6,8})","$1 $2",["6"],"0$1"],[,"([89]\\d{2})(\\d{3,9})","$1 $2",["[89]"],"0$1"],[,"(7[26])(\\d{4,9})","$1 $2",["7[26]"],"0$1"],[,"(7[08]\\d)(\\d{4,9})","$1 $2",["7[08]"],"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"7[06]\\d{4,10}","\\d{6,12}",,,"700123456"],,,[,,"NA","NA"]],RU:[,[,,"[3489]\\d{9}",
"\\d{10}"],[,,"(?:3(?:0[12]|4[1-35-79]|5[1-3]|65|8[1-58]|9[0145])|4(?:01|1[1356]|2[13467]|7[1-5]|8[1-7]|9[1-689])|8(?:1[1-8]|2[01]|3[13-6]|4[0-8]|5[15]|6[1-35-79]|7[1-37-9]))\\d{7}","\\d{10}",,,"3011234567"],[,,"9\\d{9}","\\d{10}",,,"9123456789"],[,,"80[04]\\d{7}","\\d{10}",,,"8001234567"],[,,"80[39]\\d{7}","\\d{10}",,,"8091234567"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"RU",7,"810","8",,,"8",,"8~10",,[[,"(\\d{3})(\\d{2})(\\d{2})","$1-$2-$3",["[1-79]"],"$1",,1],[,"([3489]\\d{2})(\\d{3})(\\d{2})(\\d{2})",
"$1 $2-$3-$4",["[34689]"],"8 ($1)",,1],[,"(7\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["7"],"8 ($1)",,1]],[[,"([3489]\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2-$3-$4",["[34689]"],"8 ($1)",,1],[,"(7\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["7"],"8 ($1)",,1]],[,,"NA","NA"],1,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],RW:[,[,,"[027-9]\\d{7,8}","\\d{8,9}"],[,,"2[258]\\d{7}|06\\d{6}","\\d{8,9}",,,"250123456"],[,,"7[238]\\d{7}","\\d{9}",,,"720123456"],[,,"800\\d{6}","\\d{9}",,,"800123456"],[,,"900\\d{6}","\\d{9}",
,,"900123456"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"RW",250,"00","0",,,"0",,,,[[,"(2\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["2"],"$1"],[,"([7-9]\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[7-9]"],"0$1"],[,"(0\\d)(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["0"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],1,,[,,"NA","NA"]],SA:[,[,,"1\\d{7,8}|(?:[2-467]|92)\\d{7}|5\\d{8}|8\\d{9}","\\d{7,10}"],[,,"11\\d{7}|1?(?:2[24-8]|3[35-8]|4[3-68]|6[2-5]|7[235-7])\\d{6}","\\d{7,9}",,,"112345678"],[,,"(?:5(?:[013-689]\\d|7[0-26-8])|811\\d)\\d{6}",
"\\d{9,10}",,,"512345678"],[,,"800\\d{7}","\\d{10}",,,"8001234567"],[,,"NA","NA"],[,,"92[05]\\d{6}","\\d{9}",,,"920012345"],[,,"NA","NA"],[,,"NA","NA"],"SA",966,"00","0",,,"0",,,,[[,"([1-467])(\\d{3})(\\d{4})","$1 $2 $3",["[1-467]"],"0$1"],[,"(1\\d)(\\d{3})(\\d{4})","$1 $2 $3",["1[1-467]"],"0$1"],[,"(5\\d)(\\d{3})(\\d{4})","$1 $2 $3",["5"],"0$1"],[,"(92\\d{2})(\\d{5})","$1 $2",["92"],"$1"],[,"(800)(\\d{3})(\\d{4})","$1 $2 $3",["80"],"$1"],[,"(811)(\\d{3})(\\d{3,4})","$1 $2 $3",["81"],"0$1"]],,[,,
"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],SB:[,[,,"[1-9]\\d{4,6}","\\d{5,7}"],[,,"(?:1[4-79]|[23]\\d|4[0-2]|5[03]|6[0-37])\\d{3}","\\d{5}",,,"40123"],[,,"48\\d{3}|7(?:30|[46-8]\\d|5[025-9]|9[0-5])\\d{4}|8[4-8]\\d{5}|9(?:1[2-9]|2[013-9]|3[0-2]|[46]\\d|5[0-46-9]|7[0-689]|8[0-79]|9[0-8])\\d{4}","\\d{5,7}",,,"7421234"],[,,"1[38]\\d{3}","\\d{5}",,,"18123"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"5[12]\\d{3}","\\d{5}",,,"51123"],"SB",677,"0[01]",,,,,,,,[[,"(\\d{2})(\\d{5})","$1 $2",
["[7-9]"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],SC:[,[,,"[2468]\\d{5,6}","\\d{6,7}"],[,,"4[2-46]\\d{5}","\\d{7}",,,"4217123"],[,,"2[5-8]\\d{5}","\\d{7}",,,"2510123"],[,,"8000\\d{2}","\\d{6}",,,"800000"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"64\\d{5}","\\d{7}",,,"6412345"],"SC",248,"0[0-2]",,,,,,"00",,[[,"(\\d{3})(\\d{3})","$1 $2",["8"]],[,"(\\d)(\\d{3})(\\d{3})","$1 $2 $3",["[246]"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],SD:[,[,,"[19]\\d{8}",
"\\d{9}"],[,,"1(?:[125]\\d|8[3567])\\d{6}","\\d{9}",,,"121231234"],[,,"9[0-3569]\\d{7}","\\d{9}",,,"911231234"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"SD",249,"00","0",,,"0",,,,[[,"(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",,"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],SE:[,[,,"[1-35-9]\\d{5,11}|4\\d{6,8}","\\d{6,12}"],[,,"1(?:0[1-8]\\d{6}|[136]\\d{5,7}|(?:2[0-35]|4[0-4]|5[0-25-9]|7[13-6]|[89]\\d)\\d{5,6})|2(?:[136]\\d{5,7}|(?:2[0-7]|4[0136-8]|5[0138]|7[018]|8[01]|9[0-57])\\d{5,6})|3(?:[356]\\d{5,7}|(?:0[0-4]|1\\d|2[0-25]|4[056]|7[0-2]|8[0-3]|9[023])\\d{5,6})|4(?:[0246]\\d{5,7}|(?:1[013-8]|3[0135]|5[14-79]|7[0-246-9]|8[0156]|9[0-689])\\d{5,6})|5(?:0[0-6]|[15][0-5]|2[0-68]|3[0-4]|4\\d|6[03-5]|7[013]|8[0-79]|9[01])\\d{5,6}|6(?:[03]\\d{5,7}|(?:1[1-3]|2[0-4]|4[02-57]|5[0-37]|6[0-3]|7[0-2]|8[0247]|9[0-356])\\d{5,6})|8\\d{6,8}|9(?:0[1-9]\\d{4,6}|(?:1[0-68]|2\\d|3[02-5]|4[0-3]|5[0-4]|[68][01]|7[0135-8])\\d{5,6})",
"\\d{7,9}",,,"8123456"],[,,"7[02369]\\d{7}","\\d{9}",,,"701234567"],[,,"20\\d{4,7}","\\d{6,9}",,,"20123456"],[,,"649\\d{6}|9(?:00|39|44)[1-8]\\d{3,6}","\\d{7,10}",,,"9001234567"],[,,"77(?:0\\d{3}(?:\\d{3})?|[1-7]\\d{6})","\\d{6}(?:\\d{3})?",,,"771234567"],[,,"75[1-8]\\d{6}","\\d{9}",,,"751234567"],[,,"NA","NA"],"SE",46,"00","0",,,"0",,,,[[,"(8)(\\d{2,3})(\\d{2,3})(\\d{2})","$1-$2 $3 $4",["8"],"0$1"],[,"([1-69]\\d)(\\d{2,3})(\\d{2})(\\d{2})","$1-$2 $3 $4",["1[013689]|2[0136]|3[1356]|4[0246]|54|6[03]|90"],
"0$1"],[,"([1-469]\\d)(\\d{3})(\\d{2})","$1-$2 $3",["1[136]|2[136]|3[356]|4[0246]|6[03]|90"],"0$1"],[,"(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1-$2 $3 $4",["1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[0-5]|4[0-3])"],"0$1"],[,"(\\d{3})(\\d{2,3})(\\d{2})","$1-$2 $3",["1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[0-5]|4[0-3])"],"0$1"],[,"(7\\d)(\\d{3})(\\d{2})(\\d{2})","$1-$2 $3 $4",["7"],"0$1"],[,"(77)(\\d{2})(\\d{2})",
"$1-$2$3",["7"],"0$1"],[,"(20)(\\d{2,3})(\\d{2})","$1-$2 $3",["20"],"0$1"],[,"(9[034]\\d)(\\d{2})(\\d{2})(\\d{3})","$1-$2 $3 $4",["9[034]"],"0$1"],[,"(9[034]\\d)(\\d{4})","$1-$2",["9[034]"],"0$1"],[,"(\\d{3})(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1-$2 $3 $4 $5",["25[245]|67[3-6]"],"0$1"]],[[,"(8)(\\d{2,3})(\\d{2,3})(\\d{2})","$1 $2 $3 $4",["8"]],[,"([1-69]\\d)(\\d{2,3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["1[013689]|2[0136]|3[1356]|4[0246]|54|6[03]|90"]],[,"([1-469]\\d)(\\d{3})(\\d{2})","$1 $2 $3",["1[136]|2[136]|3[356]|4[0246]|6[03]|90"]],
[,"(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[0-5]|4[0-3])"]],[,"(\\d{3})(\\d{2,3})(\\d{2})","$1 $2 $3",["1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[0-5]|4[0-3])"]],[,"(7\\d)(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["7"]],[,"(77)(\\d{2})(\\d{2})","$1 $2 $3",["7"]],[,"(20)(\\d{2,3})(\\d{2})","$1 $2 $3",["20"]],[,"(9[034]\\d)(\\d{2})(\\d{2})(\\d{3})",
"$1 $2 $3 $4",["9[034]"]],[,"(9[034]\\d)(\\d{4})","$1 $2",["9[034]"]],[,"(\\d{3})(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4 $5",["25[245]|67[3-6]"]]],[,,"74[02-9]\\d{6}","\\d{9}",,,"740123456"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"(?:25[245]|67[3-6])\\d{9}","\\d{12}",,,"254123456789"]],SG:[,[,,"[36]\\d{7}|[17-9]\\d{7,10}","\\d{8,11}"],[,,"6[1-9]\\d{6}","\\d{8}",,,"61234567"],[,,"(?:8[1-8]|9[0-8])\\d{6}","\\d{8}",,,"81234567"],[,,"1?800\\d{7}","\\d{10,11}",,,"18001234567"],[,,"1900\\d{7}","\\d{11}",
,,"19001234567"],[,,"NA","NA"],[,,"NA","NA"],[,,"3[12]\\d{6}","\\d{8}",,,"31234567"],"SG",65,"0[0-3]\\d",,,,,,,,[[,"([3689]\\d{3})(\\d{4})","$1 $2",["[369]|8[1-9]"]],[,"(1[89]00)(\\d{3})(\\d{4})","$1 $2 $3",["1[89]"]],[,"(7000)(\\d{4})(\\d{3})","$1 $2 $3",["70"]],[,"(800)(\\d{3})(\\d{4})","$1 $2 $3",["80"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"7000\\d{7}","\\d{11}",,,"70001234567"],,,[,,"NA","NA"]],SH:[,[,,"[256]\\d{4}","\\d{4,5}"],[,,"2(?:[0-57-9]\\d|6[4-9])\\d{2}","\\d{5}",,,"22158"],[,,"[56]\\d{4}",
"\\d{5}"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"262\\d{2}","\\d{5}"],"SH",290,"00",,,,,,,,,,[,,"NA","NA"],1,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],SI:[,[,,"[1-7]\\d{6,7}|[89]\\d{4,7}","\\d{5,8}"],[,,"(?:1\\d|[25][2-8]|3[24-8]|4[24-8]|7[3-8])\\d{6}","\\d{7,8}",,,"11234567"],[,,"(?:[37][01]|4[0139]|51|6[48])\\d{6}","\\d{8}",,,"31234567"],[,,"80\\d{4,6}","\\d{6,8}",,,"80123456"],[,,"90\\d{4,6}|89[1-3]\\d{2,5}","\\d{5,8}",,,"90123456"],[,,"NA","NA"],[,,"NA","NA"],[,,"(?:59|8[1-3])\\d{6}",
"\\d{8}",,,"59012345"],"SI",386,"00","0",,,"0",,,,[[,"(\\d)(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[12]|3[24-8]|4[24-8]|5[2-8]|7[3-8]"],"(0$1)"],[,"([3-7]\\d)(\\d{3})(\\d{3})","$1 $2 $3",["[37][01]|4[0139]|51|6"],"0$1"],[,"([89][09])(\\d{3,6})","$1 $2",["[89][09]"],"0$1"],[,"([58]\\d{2})(\\d{5})","$1 $2",["59|8[1-3]"],"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],SJ:[,[,,"0\\d{4}|[4789]\\d{7}","\\d{5}(?:\\d{3})?"],[,,"79\\d{6}","\\d{8}",,,"79123456"],[,,"(?:4[015-8]|5[89]|9\\d)\\d{6}",
"\\d{8}",,,"41234567"],[,,"80[01]\\d{5}","\\d{8}",,,"80012345"],[,,"82[09]\\d{5}","\\d{8}",,,"82012345"],[,,"810(?:0[0-6]|[2-8]\\d)\\d{3}","\\d{8}",,,"81021234"],[,,"880\\d{5}","\\d{8}",,,"88012345"],[,,"85[0-5]\\d{5}","\\d{8}",,,"85012345"],"SJ",47,"00",,,,,,,,,,[,,"NA","NA"],,,[,,"NA","NA"],[,,"0\\d{4}|81(?:0(?:0[7-9]|1\\d)|5\\d{2})\\d{3}","\\d{5}(?:\\d{3})?",,,"01234"],1,,[,,"81[23]\\d{5}","\\d{8}",,,"81212345"]],SK:[,[,,"(?:[2-68]\\d{5,8}|9\\d{6,8})","\\d{6,9}"],[,,"2(?:16\\d{3,4}|\\d{8})|[3-5](?:[1-8]16\\d{2,3}|\\d{8})",
"\\d{6,9}",,,"212345678"],[,,"9(?:0[1-8]|1[0-24-9]|4[0489]|50)\\d{6}","\\d{9}",,,"912123456"],[,,"800\\d{6}","\\d{9}",,,"800123456"],[,,"9(?:[78]\\d{7}|00\\d{6})","\\d{9}",,,"900123456"],[,,"8[5-9]\\d{7}","\\d{9}",,,"850123456"],[,,"NA","NA"],[,,"6(?:02|5[0-4]|9[0-6])\\d{6}","\\d{9}",,,"690123456"],"SK",421,"00","0",,,"0",,,,[[,"(2)(16)(\\d{3,4})","$1 $2 $3",["216"],"0$1"],[,"([3-5]\\d)(16)(\\d{2,3})","$1 $2 $3",["[3-5]"],"0$1"],[,"(2)(\\d{3})(\\d{3})(\\d{2})","$1/$2 $3 $4",["2"],"0$1"],[,"([3-5]\\d)(\\d{3})(\\d{2})(\\d{2})",
"$1/$2 $3 $4",["[3-5]"],"0$1"],[,"([689]\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[689]"],"0$1"],[,"(9090)(\\d{3})","$1 $2",["9090"],"0$1"]],,[,,"9090\\d{3}","\\d{7}",,,"9090123"],,,[,,"(?:602|8(?:00|[5-9]\\d)|9(?:00|[78]\\d))\\d{6}|9090\\d{3}","\\d{7,9}",,,"800123456"],[,,"96\\d{7}","\\d{9}",,,"961234567"],,,[,,"NA","NA"]],SL:[,[,,"[2-9]\\d{7}","\\d{6,8}"],[,,"[235]2[2-4][2-9]\\d{4}","\\d{6,8}",,,"22221234"],[,,"(?:2[15]|3[03-5]|4[04]|5[05]|66|7[6-9]|88|99)\\d{6}","\\d{6,8}",,,"25123456"],[,,"NA","NA"],
[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"SL",232,"00","0",,,"0",,,,[[,"(\\d{2})(\\d{6})","$1 $2",,"(0$1)"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],SM:[,[,,"[05-7]\\d{7,9}","\\d{6,10}"],[,,"0549(?:8[0157-9]|9\\d)\\d{4}","\\d{6,10}",,,"0549886377"],[,,"6[16]\\d{6}","\\d{8}",,,"66661212"],[,,"NA","NA"],[,,"7[178]\\d{6}","\\d{8}",,,"71123456"],[,,"NA","NA"],[,,"NA","NA"],[,,"5[158]\\d{6}","\\d{8}",,,"58001110"],"SM",378,"00",,,,"(?:0549)?([89]\\d{5})","0549$1",,
,[[,"(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[5-7]"]],[,"(0549)(\\d{6})","$1 $2",["0"]],[,"(\\d{6})","0549 $1",["[89]"]]],[[,"(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[5-7]"]],[,"(0549)(\\d{6})","($1) $2",["0"]],[,"(\\d{6})","(0549) $1",["[89]"]]],[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],1,,[,,"NA","NA"]],SN:[,[,,"[3789]\\d{8}","\\d{9}"],[,,"3(?:0(?:1[0-2]|80)|282|3(?:8[1-9]|9[3-9])|611|90[1-5])\\d{5}","\\d{9}",,,"301012345"],[,,"7(?:[067]\\d|21|8[0-26]|90)\\d{6}","\\d{9}",,
,"701234567"],[,,"800\\d{6}","\\d{9}",,,"800123456"],[,,"88[4689]\\d{6}","\\d{9}",,,"884123456"],[,,"81[02468]\\d{6}","\\d{9}",,,"810123456"],[,,"NA","NA"],[,,"3392\\d{5}|93330\\d{4}","\\d{9}",,,"933301234"],"SN",221,"00",,,,,,,,[[,"(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[379]"]],[,"(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],SO:[,[,,"[1-79]\\d{6,8}","\\d{7,9}"],[,,"(?:1\\d|2[0-79]|3[0-46-8]|4[0-7]|59)\\d{5}","\\d{7}",
,,"4012345"],[,,"(?:15\\d|2(?:4\\d|8)|6[1-35-9]?\\d{2}|7(?:[1-8]\\d|99?\\d)|9(?:0[67]|[2-9])\\d)\\d{5}","\\d{7,9}",,,"71123456"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"SO",252,"00","0",,,"0",,,,[[,"(\\d)(\\d{6})","$1 $2",["2[0-79]|[13-5]"]],[,"(\\d)(\\d{7})","$1 $2",["24|[67]"]],[,"(\\d{2})(\\d{5,7})","$1 $2",["15|28|6[1-35-9]|799|9[2-9]"]],[,"(90\\d)(\\d{3})(\\d{3})","$1 $2 $3",["90"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],SR:[,[,,"[2-8]\\d{5,6}",
"\\d{6,7}"],[,,"(?:2[1-3]|3[0-7]|4\\d|5[2-58]|68\\d)\\d{4}","\\d{6,7}",,,"211234"],[,,"(?:7[124-7]|8[1-9])\\d{5}","\\d{7}",,,"7412345"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"5(?:6\\d{4}|90[0-4]\\d{3})","\\d{6,7}",,,"561234"],"SR",597,"00",,,,,,,,[[,"(\\d{3})(\\d{3})","$1-$2",["[2-4]|5[2-58]"]],[,"(\\d{2})(\\d{2})(\\d{2})","$1-$2-$3",["56"]],[,"(\\d{3})(\\d{4})","$1-$2",["59|[6-8]"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],SS:[,[,,"[19]\\d{8}","\\d{9}"],
[,,"18\\d{7}","\\d{9}",,,"181234567"],[,,"(?:12|9[1257])\\d{7}","\\d{9}",,,"977123456"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"SS",211,"00","0",,,"0",,,,[[,"(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",,"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],ST:[,[,,"[29]\\d{6}","\\d{7}"],[,,"22\\d{5}","\\d{7}",,,"2221234"],[,,"9(?:0(?:0[5-9]|[1-9]\\d)|[89]\\d{2})\\d{3}","\\d{7}",,,"9812345"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],
"ST",239,"00",,,,,,,,[[,"(\\d{3})(\\d{4})","$1 $2"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],SV:[,[,,"[267]\\d{7}|[89]\\d{6}(?:\\d{4})?","\\d{7,8}|\\d{11}"],[,,"2[1-6]\\d{6}","\\d{8}",,,"21234567"],[,,"[67]\\d{7}","\\d{8}",,,"70123456"],[,,"800\\d{4}(?:\\d{4})?","\\d{7}(?:\\d{4})?",,,"8001234"],[,,"900\\d{4}(?:\\d{4})?","\\d{7}(?:\\d{4})?",,,"9001234"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"SV",503,"00",,,,,,,,[[,"(\\d{4})(\\d{4})","$1 $2",["[267]"]],[,"(\\d{3})(\\d{4})",
"$1 $2",["[89]"]],[,"(\\d{3})(\\d{4})(\\d{4})","$1 $2 $3",["[89]"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],SX:[,[,,"[5789]\\d{9}","\\d{7}(?:\\d{3})?"],[,,"7215(?:4[2-8]|8[239]|9[056])\\d{4}","\\d{7}(?:\\d{3})?",,,"7215425678"],[,,"7215(?:1[02]|2\\d|5[034679]|8[014-8])\\d{4}","\\d{10}",,,"7215205678"],[,,"8(?:00|44|55|66|77|88)[2-9]\\d{6}","\\d{10}",,,"8002123456"],[,,"900[2-9]\\d{6}","\\d{10}",,,"9002123456"],[,,"NA","NA"],[,,"5(?:00|33|44|66|77|88)[2-9]\\d{6}","\\d{10}",,
,"5002345678"],[,,"NA","NA"],"SX",1,"011","1",,,"1",,,,,,[,,"NA","NA"],,"721",[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],SY:[,[,,"[1-59]\\d{7,8}","\\d{6,9}"],[,,"(?:1(?:1\\d?|4\\d|[2356])|2(?:1\\d?|[235])|3(?:[13]\\d|4)|4[13]|5[1-3])\\d{6}","\\d{6,9}",,,"112345678"],[,,"9(?:22|[35][0-8]|4\\d|6[024-9]|88|9[0-489])\\d{6}","\\d{9}",,,"944567890"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"SY",963,"00","0",,,"0",,,,[[,"(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[1-5]"],"0$1",
,1],[,"(9\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["9"],"0$1",,1]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],SZ:[,[,,"[027]\\d{7}","\\d{8}"],[,,"2[2-5]\\d{6}","\\d{8}",,,"22171234"],[,,"7[6-8]\\d{6}","\\d{8}",,,"76123456"],[,,"0800\\d{4}","\\d{8}",,,"08001234"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"SZ",268,"00",,,,,,,,[[,"(\\d{4})(\\d{4})","$1 $2",["[027]"]]],,[,,"NA","NA"],,,[,,"0800\\d{4}","\\d{8}",,,"08001234"],[,,"NA","NA"],1,,[,,"NA","NA"]],TA:[,[,,"8\\d{3}",
"\\d{4}"],[,,"8\\d{3}","\\d{4}",,,"8999"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"TA",290,"00",,,,,,,,,,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],TC:[,[,,"[5689]\\d{9}","\\d{7}(?:\\d{3})?"],[,,"649(?:712|9(?:4\\d|50))\\d{4}","\\d{7}(?:\\d{3})?",,,"6497121234"],[,,"649(?:2(?:3[129]|4[1-7])|3(?:3[1-389]|4[1-7])|4[34][1-3])\\d{4}","\\d{10}",,,"6492311234"],[,,"8(?:00|44|55|66|77|88)[2-9]\\d{6}","\\d{10}",,,"8002345678"],[,,"900[2-9]\\d{6}",
"\\d{10}",,,"9002345678"],[,,"NA","NA"],[,,"5(?:00|33|44|66|77|88)[2-9]\\d{6}","\\d{10}",,,"5002345678"],[,,"64971[01]\\d{4}","\\d{10}",,,"6497101234"],"TC",1,"011","1",,,"1",,,,,,[,,"NA","NA"],,"649",[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],TD:[,[,,"[2679]\\d{7}","\\d{8}"],[,,"22(?:[3789]0|5[0-5]|6[89])\\d{4}","\\d{8}",,,"22501234"],[,,"(?:6[023568]\\d|77\\d|9\\d{2})\\d{5}","\\d{8}",,,"63012345"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"TD",235,"00|16",,,,,,"00",
,[[,"(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],TG:[,[,,"[29]\\d{7}","\\d{8}"],[,,"2(?:2[2-7]|3[23]|44|55|66|77)\\d{5}","\\d{8}",,,"22212345"],[,,"9[0-389]\\d{6}","\\d{8}",,,"90112345"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"TG",228,"00",,,,,,,,[[,"(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],TH:[,[,,"[2-9]\\d{7,8}|1\\d{3}(?:\\d{5,6})?",
"\\d{4}|\\d{8,10}"],[,,"(?:2\\d|3[2-9]|4[2-5]|5[2-6]|7[3-7])\\d{6}","\\d{8}",,,"21234567"],[,,"(?:14|6[1-3]|[89]\\d)\\d{7}","\\d{9}",,,"812345678"],[,,"1800\\d{6}","\\d{10}",,,"1800123456"],[,,"1900\\d{6}","\\d{10}",,,"1900123456"],[,,"NA","NA"],[,,"NA","NA"],[,,"6[08]\\d{7}","\\d{9}",,,"601234567"],"TH",66,"00","0",,,"0",,,,[[,"(2)(\\d{3})(\\d{4})","$1 $2 $3",["2"],"0$1"],[,"([13-9]\\d)(\\d{3})(\\d{3,4})","$1 $2 $3",["14|[3-9]"],"0$1"],[,"(1[89]00)(\\d{3})(\\d{3})","$1 $2 $3",["1"],"$1"]],,[,,"NA",
"NA"],,,[,,"1\\d{3}","\\d{4}",,,"1100"],[,,"1\\d{3}","\\d{4}",,,"1100"],,,[,,"NA","NA"]],TJ:[,[,,"[3-59]\\d{8}","\\d{3,9}"],[,,"(?:3(?:1[3-5]|2[245]|3[12]|4[24-7]|5[25]|72)|4(?:46|74|87))\\d{6}","\\d{3,9}",,,"372123456"],[,,"(?:50[125]|9[0-35-9]\\d)\\d{6}","\\d{9}",,,"917123456"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"TJ",992,"810","8",,,"8",,"8~10",,[[,"([349]\\d{2})(\\d{2})(\\d{4})","$1 $2 $3",["[34]7|91[78]"],"(8) $1",,1],[,"([459]\\d)(\\d{3})(\\d{4})","$1 $2 $3",
["4[48]|5|9(?:1[59]|[0235-9])"],"(8) $1",,1],[,"(331700)(\\d)(\\d{2})","$1 $2 $3",["331","3317","33170","331700"],"(8) $1",,1],[,"(\\d{4})(\\d)(\\d{4})","$1 $2 $3",["3[1-5]","3(?:[1245]|3(?:[02-9]|1[0-589]))"],"(8) $1",,1]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],TK:[,[,,"[2-47]\\d{3,6}","\\d{4,7}"],[,,"(?:2[2-4]|[34]\\d)\\d{2,5}","\\d{4,7}",,,"3101"],[,,"7[2-4]\\d{2,5}","\\d{4,7}",,,"7290"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"TK",690,"00",
,,,,,,,,,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],TL:[,[,,"[2-489]\\d{6}|7\\d{6,7}","\\d{7,8}"],[,,"(?:2[1-5]|3[1-9]|4[1-4])\\d{5}","\\d{7}",,,"2112345"],[,,"7[3-8]\\d{6}","\\d{8}",,,"77212345"],[,,"80\\d{5}","\\d{7}",,,"8012345"],[,,"90\\d{5}","\\d{7}",,,"9012345"],[,,"NA","NA"],[,,"70\\d{5}","\\d{7}",,,"7012345"],[,,"NA","NA"],"TL",670,"00",,,,,,,,[[,"(\\d{3})(\\d{4})","$1 $2",["[2-489]"]],[,"(\\d{4})(\\d{4})","$1 $2",["7"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,
,"NA","NA"]],TM:[,[,,"[1-6]\\d{7}","\\d{8}"],[,,"(?:1(?:2\\d|3[1-9])|2(?:22|4[0-35-8])|3(?:22|4[03-9])|4(?:22|3[128]|4\\d|6[15])|5(?:22|5[7-9]|6[014-689]))\\d{5}","\\d{8}",,,"12345678"],[,,"6[1-9]\\d{6}","\\d{8}",,,"66123456"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"TM",993,"810","8",,,"8",,"8~10",,[[,"(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2-$3-$4",["12"],"(8 $1)"],[,"(\\d{2})(\\d{6})","$1 $2",["6"],"8 $1"],[,"(\\d{3})(\\d)(\\d{2})(\\d{2})","$1 $2-$3-$4",["13|[2-5]"],
"(8 $1)"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],TN:[,[,,"[2-57-9]\\d{7}","\\d{8}"],[,,"3(?:[012]\\d|6[0-4]|91)\\d{5}|7\\d{7}|81200\\d{3}","\\d{8}",,,"71234567"],[,,"(?:[259]\\d|4[0-6])\\d{6}","\\d{8}",,,"20123456"],[,,"8010\\d{4}","\\d{8}",,,"80101234"],[,,"88\\d{6}","\\d{8}",,,"88123456"],[,,"8[12]10\\d{4}","\\d{8}",,,"81101234"],[,,"NA","NA"],[,,"NA","NA"],"TN",216,"00",,,,,,,,[[,"(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA",
"NA"]],TO:[,[,,"[02-8]\\d{4,6}","\\d{5,7}"],[,,"(?:2\\d|3[1-8]|4[1-4]|[56]0|7[0149]|8[05])\\d{3}","\\d{5}",,,"20123"],[,,"(?:7[578]|8[47-9])\\d{5}","\\d{7}",,,"7715123"],[,,"0800\\d{3}","\\d{7}",,,"0800222"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"TO",676,"00",,,,,,,,[[,"(\\d{2})(\\d{3})","$1-$2",["[1-6]|7[0-4]|8[05]"]],[,"(\\d{3})(\\d{4})","$1 $2",["7[5-9]|8[47-9]"]],[,"(\\d{4})(\\d{3})","$1 $2",["0"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],1,,[,,"NA","NA"]],TR:[,[,,"[2-589]\\d{9}|444\\d{4}",
"\\d{7,10}"],[,,"(?:2(?:[13][26]|[28][2468]|[45][268]|[67][246])|3(?:[13][28]|[24-6][2468]|[78][02468]|92)|4(?:[16][246]|[23578][2468]|4[26]))\\d{7}","\\d{10}",,,"2123456789"],[,,"5(?:0[1-7]|22|[34]\\d|5[1-59]|9[246])\\d{7}","\\d{10}",,,"5012345678"],[,,"800\\d{7}","\\d{10}",,,"8001234567"],[,,"900\\d{7}","\\d{10}",,,"9001234567"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"TR",90,"00","0",,,"0",,,,[[,"(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["[23]|4(?:[0-35-9]|4[0-35-9])"],"(0$1)",,1],[,"(\\d{3})(\\d{3})(\\d{4})",
"$1 $2 $3",["[589]"],"0$1",,1],[,"(444)(\\d{1})(\\d{3})","$1 $2 $3",["444"]]],,[,,"512\\d{7}","\\d{10}",,,"5123456789"],,,[,,"444\\d{4}","\\d{7}",,,"4441444"],[,,"444\\d{4}|850\\d{7}","\\d{7,10}",,,"4441444"],,,[,,"NA","NA"]],TT:[,[,,"[589]\\d{9}","\\d{7}(?:\\d{3})?"],[,,"868(?:2(?:01|2[1-6]|3[1-5])|6(?:0[79]|1[02-8]|2[1-9]|[3-69]\\d|7[0-79])|82[124])\\d{4}","\\d{7}(?:\\d{3})?",,,"8682211234"],[,,"868(?:2(?:[789]\\d)|3(?:0[1-9]|1[02-9]|[2-9]\\d)|4[6-9]\\d|6(?:20|78|8\\d)|7(?:0[1-9]|1[02-9]|[2-9]\\d))\\d{4}",
"\\d{10}",,,"8682911234"],[,,"8(?:00|44|55|66|77|88)[2-9]\\d{6}","\\d{10}",,,"8002345678"],[,,"900[2-9]\\d{6}","\\d{10}",,,"9002345678"],[,,"NA","NA"],[,,"5(?:00|33|44|66|77|88)[2-9]\\d{6}","\\d{10}",,,"5002345678"],[,,"NA","NA"],"TT",1,"011","1",,,"1",,,,,,[,,"NA","NA"],,"868",[,,"NA","NA"],[,,"NA","NA"],,,[,,"868619\\d{4}","\\d{10}"]],TV:[,[,,"[279]\\d{4,6}","\\d{5,7}"],[,,"2[02-9]\\d{3}","\\d{5}",,,"20123"],[,,"(?:70\\d|90)\\d{4}","\\d{6,7}",,,"901234"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],
[,,"NA","NA"],[,,"NA","NA"],"TV",688,"00",,,,,,,,,,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],TW:[,[,,"[2-689]\\d{7,8}|7\\d{7,9}","\\d{8,10}"],[,,"[2-8]\\d{7,8}","\\d{8,9}",,,"21234567"],[,,"9\\d{8}","\\d{9}",,,"912345678"],[,,"800\\d{6}","\\d{9}",,,"800123456"],[,,"900\\d{6}","\\d{9}",,,"900123456"],[,,"NA","NA"],[,,"NA","NA"],[,,"70\\d{8}","\\d{10}",,,"7012345678"],"TW",886,"0(?:0[25679]|19)","0","#",,"0",,,,[[,"([2-8])(\\d{3,4})(\\d{4})","$1 $2 $3",["[2-6]|[78][1-9]"],"0$1"],
[,"([89]\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["80|9"],"0$1"],[,"(70)(\\d{4})(\\d{4})","$1 $2 $3",["70"],"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],TZ:[,[,,"\\d{9}","\\d{7,9}"],[,,"2[2-8]\\d{7}","\\d{7,9}",,,"222345678"],[,,"(?:6[25-8]|7[13-9])\\d{7}","\\d{9}",,,"621234567"],[,,"80[08]\\d{6}","\\d{9}",,,"800123456"],[,,"90\\d{7}","\\d{9}",,,"900123456"],[,,"8(?:40|6[01])\\d{6}","\\d{9}",,,"840123456"],[,,"NA","NA"],[,,"41\\d{7}","\\d{9}",,,"412345678"],"TZ",255,"00[056]",
"0",,,"0",,,,[[,"([24]\\d)(\\d{3})(\\d{4})","$1 $2 $3",["[24]"],"0$1"],[,"([67]\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[67]"],"0$1"],[,"([89]\\d{2})(\\d{2})(\\d{4})","$1 $2 $3",["[89]"],"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],UA:[,[,,"[3-9]\\d{8}","\\d{5,9}"],[,,"(?:3[1-8]|4[13-8]|5[1-7]|6[12459])\\d{7}","\\d{5,9}",,,"311234567"],[,,"(?:39|50|6[36-8]|73|9[1-9])\\d{7}","\\d{9}",,,"391234567"],[,,"800\\d{6}","\\d{9}",,,"800123456"],[,,"900\\d{6}","\\d{9}",,,"900123456"],
[,,"NA","NA"],[,,"NA","NA"],[,,"89\\d{7}","\\d{9}",,,"891234567"],"UA",380,"00","0",,,"0",,"0~0",,[[,"([3-9]\\d)(\\d{3})(\\d{4})","$1 $2 $3",["[38]9|4(?:[45][0-5]|87)|5(?:0|6[37]|7[37])|6[36-8]|73|9[1-9]","[38]9|4(?:[45][0-5]|87)|5(?:0|6(?:3[14-7]|7)|7[37])|6[36-8]|73|9[1-9]"],"0$1"],[,"([3-689]\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["3[1-8]2|4[13678]2|5(?:[12457]2|6[24])|6(?:[49]2|[12][29]|5[24])|8[0-8]|90","3(?:[1-46-8]2[013-9]|52)|4(?:[1378]2|62[013-9])|5(?:[12457]2|6[24])|6(?:[49]2|[12][29]|5[24])|8[0-8]|90"],
"0$1"],[,"([3-6]\\d{3})(\\d{5})","$1 $2",["3(?:5[013-9]|[1-46-8])|4(?:[137][013-9]|6|[45][6-9]|8[4-6])|5(?:[1245][013-9]|6[0135-9]|3|7[4-6])|6(?:[49][013-9]|5[0135-9]|[12][13-8])","3(?:5[013-9]|[1-46-8](?:22|[013-9]))|4(?:[137][013-9]|6(?:[013-9]|22)|[45][6-9]|8[4-6])|5(?:[1245][013-9]|6(?:3[02389]|[015689])|3|7[4-6])|6(?:[49][013-9]|5[0135-9]|[12][13-8])"],"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],UG:[,[,,"\\d{9}","\\d{5,9}"],[,,"20(?:[0147]\\d{2}|2(?:40|[5-9]\\d)|3[23]\\d|5[0-4]\\d|6[03]\\d|8[0-2]\\d)\\d{4}|[34]\\d{8}",
"\\d{5,9}",,,"312345678"],[,,"2030\\d{5}|7(?:0[0-7]|[15789]\\d|2[03]|30|[46][0-4])\\d{6}","\\d{9}",,,"712345678"],[,,"800[123]\\d{5}","\\d{9}",,,"800123456"],[,,"90[123]\\d{6}","\\d{9}",,,"901123456"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"UG",256,"00[057]","0",,,"0",,,,[[,"(\\d{3})(\\d{6})","$1 $2",["[7-9]|20(?:[013-8]|2[5-9])|4(?:6[45]|[7-9])"],"0$1"],[,"(\\d{2})(\\d{7})","$1 $2",["3|4(?:[1-5]|6[0-36-9])"],"0$1"],[,"(2024)(\\d{5})","$1 $2",["2024"],"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,
"NA","NA"],,,[,,"NA","NA"]],US:[,[,,"[2-9]\\d{9}","\\d{7}(?:\\d{3})?"],[,,"(?:2(?:0[1-35-9]|1[02-9]|2[04589]|3[149]|4[08]|5[1-46]|6[0279]|7[026]|8[13])|3(?:0[1-57-9]|1[02-9]|2[0135]|3[014679]|4[67]|5[12]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[0235]|58|69|7[0589]|8[04])|5(?:0[1-57-9]|1[0235-8]|20|3[0149]|4[01]|5[19]|6[1-37]|7[013-5]|8[056])|6(?:0[1-35-9]|1[024-9]|2[03689]|3[016]|4[16]|5[017]|6[0-279]|78|8[12])|7(?:0[1-46-8]|1[02-9]|2[0457]|3[1247]|4[07]|5[47]|6[02359]|7[02-59]|8[156])|8(?:0[1-68]|1[02-8]|28|3[0-25]|4[3578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[01678]|4[0179]|5[12469]|7[0-3589]|8[0459]))[2-9]\\d{6}",
"\\d{7}(?:\\d{3})?",,,"2015555555"],[,,"(?:2(?:0[1-35-9]|1[02-9]|2[04589]|3[149]|4[08]|5[1-46]|6[0279]|7[026]|8[13])|3(?:0[1-57-9]|1[02-9]|2[0135]|3[014679]|4[67]|5[12]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[0235]|58|69|7[0589]|8[04])|5(?:0[1-57-9]|1[0235-8]|20|3[0149]|4[01]|5[19]|6[1-37]|7[013-5]|8[056])|6(?:0[1-35-9]|1[024-9]|2[03689]|3[016]|4[16]|5[017]|6[0-279]|78|8[12])|7(?:0[1-46-8]|1[02-9]|2[0457]|3[1247]|4[07]|5[47]|6[02359]|7[02-59]|8[156])|8(?:0[1-68]|1[02-8]|28|3[0-25]|4[3578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[01678]|4[0179]|5[12469]|7[0-3589]|8[0459]))[2-9]\\d{6}",
"\\d{7}(?:\\d{3})?",,,"2015555555"],[,,"8(?:00|44|55|66|77|88)[2-9]\\d{6}","\\d{10}",,,"8002345678"],[,,"900[2-9]\\d{6}","\\d{10}",,,"9002345678"],[,,"NA","NA"],[,,"5(?:00|33|44|66|77|88)[2-9]\\d{6}","\\d{10}",,,"5002345678"],[,,"NA","NA"],"US",1,"011","1",,,"1",,,1,[[,"(\\d{3})(\\d{4})","$1-$2",,,,1],[,"(\\d{3})(\\d{3})(\\d{4})","($1) $2-$3",,,,1]],[[,"(\\d{3})(\\d{3})(\\d{4})","$1-$2-$3"]],[,,"NA","NA"],1,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],UY:[,[,,"[2489]\\d{6,7}","\\d{7,8}"],[,,"2\\d{7}|4[2-7]\\d{6}",
"\\d{7,8}",,,"21231234"],[,,"9[1-9]\\d{6}","\\d{8}",,,"94231234"],[,,"80[05]\\d{4}","\\d{7}",,,"8001234"],[,,"90[0-8]\\d{4}","\\d{7}",,,"9001234"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"UY",598,"0(?:1[3-9]\\d|0)","0"," int. ",,"0",,"00",,[[,"(\\d{4})(\\d{4})","$1 $2",["[24]"]],[,"(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["9[1-9]"],"0$1"],[,"(\\d{3})(\\d{4})","$1 $2",["[89]0"],"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],UZ:[,[,,"[679]\\d{8}","\\d{7,9}"],[,,"(?:6(?:1(?:22|3[124]|4[1-4]|5[123578]|64)|2(?:22|3[0-57-9]|41)|5(?:22|3[3-7]|5[024-8])|6\\d{2}|7(?:[23]\\d|7[69])|9(?:22|4[1-8]|6[135]))|7(?:0(?:5[4-9]|6[0146]|7[12456]|9[135-8])|1[12]\\d|2(?:22|3[1345789]|4[123579]|5[14])|3(?:2\\d|3[1578]|4[1-35-7]|5[1-57]|61)|4(?:2\\d|3[1-579]|7[1-79])|5(?:22|5[1-9]|6[1457])|6(?:22|3[12457]|4[13-8])|9(?:22|5[1-9])))\\d{5}",
"\\d{7,9}",,,"662345678"],[,,"6(?:1(?:2(?:98|2[01])|35[0-4]|50\\d|61[23]|7(?:[01][017]|4\\d|55|9[5-9]))|2(?:11\\d|2(?:[12]1|9[01379])|5(?:[126]\\d|3[0-4])|7\\d{2})|5(?:19[01]|2(?:27|9[26])|30\\d|59\\d|7\\d{2})|6(?:2(?:1[5-9]|2[0367]|38|41|52|60)|3[79]\\d|4(?:56|83)|7(?:[07]\\d|1[017]|3[07]|4[047]|5[057]|67|8[0178]|9[79])|9[0-3]\\d)|7(?:2(?:24|3[237]|4[5-9]|7[15-8])|5(?:7[12]|8[0589])|7(?:0\\d|[39][07])|9(?:0\\d|7[079]))|9(?:2(?:1[1267]|5\\d|3[01]|7[0-4])|5[67]\\d|6(?:2[0-26]|8\\d)|7\\d{2}))\\d{4}|7(?:0\\d{3}|1(?:13[01]|6(?:0[47]|1[67]|66)|71[3-69]|98\\d)|2(?:2(?:2[79]|95)|3(?:2[5-9]|6[0-6])|57\\d|7(?:0\\d|1[17]|2[27]|3[37]|44|5[057]|66|88))|3(?:2(?:1[0-6]|21|3[469]|7[159])|33\\d|5(?:0[0-4]|5[579]|9\\d)|7(?:[0-3579]\\d|4[0467]|6[67]|8[078])|9[4-6]\\d)|4(?:2(?:29|5[0257]|6[0-7]|7[1-57])|5(?:1[0-4]|8\\d|9[5-9])|7(?:0\\d|1[024589]|2[0127]|3[0137]|[46][07]|5[01]|7[5-9]|9[079])|9(?:7[015-9]|[89]\\d))|5(?:112|2(?:0\\d|2[29]|[49]4)|3[1568]\\d|52[6-9]|7(?:0[01578]|1[017]|[23]7|4[047]|[5-7]\\d|8[78]|9[079]))|6(?:2(?:2[1245]|4[2-4])|39\\d|41[179]|5(?:[349]\\d|5[0-2])|7(?:0[017]|[13]\\d|22|44|55|67|88))|9(?:22[128]|3(?:2[0-4]|7\\d)|57[05629]|7(?:2[05-9]|3[37]|4\\d|60|7[2579]|87|9[07])))\\d{4}|9[0-57-9]\\d{7}",
"\\d{7,9}",,,"912345678"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"UZ",998,"810","8",,,"8",,"8~10",,[[,"([679]\\d)(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",,"8 $1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],VA:[,[,,"(?:0(?:878\\d{5}|6698\\d{5})|[1589]\\d{5,10}|3(?:[12457-9]\\d{8}|[36]\\d{7,9}))","\\d{6,11}"],[,,"06698\\d{5}","\\d{10}",,,"0669812345"],[,,"3(?:[12457-9]\\d{8}|6\\d{7,8}|3\\d{7,9})","\\d{9,11}",,,"3123456789"],[,,"80(?:0\\d{6}|3\\d{3})",
"\\d{6,9}",,,"800123456"],[,,"0878\\d{5}|1(?:44|6[346])\\d{6}|89(?:2\\d{3}|4(?:[0-4]\\d{2}|[5-9]\\d{4})|5(?:[0-4]\\d{2}|[5-9]\\d{6})|9\\d{6})","\\d{6,10}",,,"899123456"],[,,"84(?:[08]\\d{6}|[17]\\d{3})","\\d{6,9}",,,"848123456"],[,,"1(?:78\\d|99)\\d{6}","\\d{9,10}",,,"1781234567"],[,,"55\\d{8}","\\d{10}",,,"5512345678"],"VA",39,"00",,,,,,,,,,[,,"NA","NA"],,,[,,"848\\d{6}","\\d{9}",,,"848123456"],[,,"NA","NA"],1,,[,,"NA","NA"]],VC:[,[,,"[5789]\\d{9}","\\d{7}(?:\\d{3})?"],[,,"784(?:266|3(?:6[6-9]|7\\d|8[0-24-6])|4(?:38|5[0-36-8]|8[0-8])|5(?:55|7[0-2]|93)|638|784)\\d{4}",
"\\d{7}(?:\\d{3})?",,,"7842661234"],[,,"784(?:4(?:3[0-4]|5[45]|89|9[0-58])|5(?:2[6-9]|3[0-4]))\\d{4}","\\d{10}",,,"7844301234"],[,,"8(?:00|44|55|66|77|88)[2-9]\\d{6}","\\d{10}",,,"8002345678"],[,,"900[2-9]\\d{6}","\\d{10}",,,"9002345678"],[,,"NA","NA"],[,,"5(?:00|33|44|66|77|88)[2-9]\\d{6}","\\d{10}",,,"5002345678"],[,,"NA","NA"],"VC",1,"011","1",,,"1",,,,,,[,,"NA","NA"],,"784",[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],VE:[,[,,"[24589]\\d{9}","\\d{7,10}"],[,,"(?:2(?:12|3[457-9]|[58][1-9]|[467]\\d|9[1-6])|50[01])\\d{7}",
"\\d{7,10}",,,"2121234567"],[,,"4(?:1[24-8]|2[46])\\d{7}","\\d{10}",,,"4121234567"],[,,"800\\d{7}","\\d{10}",,,"8001234567"],[,,"900\\d{7}","\\d{10}",,,"9001234567"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"VE",58,"00","0",,,"0",,,,[[,"(\\d{3})(\\d{7})","$1-$2",,"0$1","$CC $1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],VG:[,[,,"[2589]\\d{9}","\\d{7}(?:\\d{3})?"],[,,"284(?:(?:229|4(?:22|9[45])|774|8(?:52|6[459]))\\d{4}|496[0-5]\\d{3})","\\d{7}(?:\\d{3})?",,,"2842291234"],[,,
"284(?:(?:3(?:0[0-3]|4[0-367]|94)|4(?:4[0-6]|68|99)|54[0-57])\\d{4}|496[6-9]\\d{3})","\\d{10}",,,"2843001234"],[,,"8(?:00|44|55|66|77|88)[2-9]\\d{6}","\\d{10}",,,"8002345678"],[,,"900[2-9]\\d{6}","\\d{10}",,,"9002345678"],[,,"NA","NA"],[,,"5(?:00|33|44|66|77|88)[2-9]\\d{6}","\\d{10}",,,"5002345678"],[,,"NA","NA"],"VG",1,"011","1",,,"1",,,,,,[,,"NA","NA"],,"284",[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],VI:[,[,,"[3589]\\d{9}","\\d{7}(?:\\d{3})?"],[,,"340(?:2(?:01|2[0678]|44|77)|3(?:32|44)|4(?:22|7[34])|5(?:1[34]|55)|6(?:26|4[23]|77|9[023])|7(?:1[2-589]|27|7\\d)|884|998)\\d{4}",
"\\d{7}(?:\\d{3})?",,,"3406421234"],[,,"340(?:2(?:01|2[0678]|44|77)|3(?:32|44)|4(?:22|7[34])|5(?:1[34]|55)|6(?:26|4[23]|77|9[023])|7(?:1[2-589]|27|7\\d)|884|998)\\d{4}","\\d{7}(?:\\d{3})?",,,"3406421234"],[,,"8(?:00|44|55|66|77|88)[2-9]\\d{6}","\\d{10}",,,"8002345678"],[,,"900[2-9]\\d{6}","\\d{10}",,,"9002345678"],[,,"NA","NA"],[,,"5(?:00|33|44|66|77|88)[2-9]\\d{6}","\\d{10}",,,"5002345678"],[,,"NA","NA"],"VI",1,"011","1",,,"1",,,1,,,[,,"NA","NA"],,"340",[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],
VN:[,[,,"[17]\\d{6,9}|[2-69]\\d{7,9}|8\\d{6,8}","\\d{7,10}"],[,,"(?:2(?:[025-79]|1[0189]|[348][01])|3(?:[0136-9]|[25][01])|4\\d|5(?:[01][01]|[2-9])|6(?:[0-46-8]|5[01])|7(?:[02-79]|[18][01]))\\d{7}|8(?:[1-57]\\d|[689][0-79])\\d{6}","\\d{9,10}",,,"2101234567"],[,,"(?:9\\d|1(?:2\\d|6[2-9]|8[68]|99))\\d{7}|8[689]8\\d{6}","\\d{9,10}",,,"912345678"],[,,"1800\\d{4,6}","\\d{8,10}",,,"1800123456"],[,,"1900\\d{4,6}","\\d{8,10}",,,"1900123456"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"VN",84,"00","0",,,"0",
,,,[[,"([17]99)(\\d{4})","$1 $2",["[17]99"],"0$1",,1],[,"([48])(\\d{4})(\\d{4})","$1 $2 $3",["4|8(?:[1-57]|[689][0-79])"],"0$1",,1],[,"([235-7]\\d)(\\d{4})(\\d{3})","$1 $2 $3",["2[025-79]|3[0136-9]|5[2-9]|6[0-46-8]|7[02-79]"],"0$1",,1],[,"(80)(\\d{5})","$1 $2",["80"],"0$1",,1],[,"(69\\d)(\\d{4,5})","$1 $2",["69"],"0$1",,1],[,"([235-7]\\d{2})(\\d{4})(\\d{3})","$1 $2 $3",["2[1348]|3[25]|5[01]|65|7[18]"],"0$1",,1],[,"([89]\\d)(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8[689]8|9"],"0$1",,1],[,"(1[2689]\\d)(\\d{3})(\\d{4})",
"$1 $2 $3",["1(?:[26]|8[68]|99)"],"0$1",,1],[,"(1[89]00)(\\d{4,6})","$1 $2",["1[89]0"],"$1",,1]],,[,,"NA","NA"],,,[,,"[17]99\\d{4}|69\\d{5,6}","\\d{7,8}",,,"1992000"],[,,"[17]99\\d{4}|69\\d{5,6}|80\\d{5}","\\d{7,8}",,,"1992000"],,,[,,"NA","NA"]],VU:[,[,,"[2-57-9]\\d{4,6}","\\d{5,7}"],[,,"(?:2[02-9]\\d|3(?:[5-7]\\d|8[0-8])|48[4-9]|88\\d)\\d{2}","\\d{5}",,,"22123"],[,,"(?:5(?:7[2-5]|[0-689]\\d)|7[013-7]\\d)\\d{4}","\\d{7}",,,"5912345"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA",
"NA"],"VU",678,"00",,,,,,,,[[,"(\\d{3})(\\d{4})","$1 $2",["[579]"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"3[03]\\d{3}|900\\d{4}","\\d{5,7}",,,"30123"],,,[,,"NA","NA"]],WF:[,[,,"[4-8]\\d{5}","\\d{6}"],[,,"(?:50|68|72)\\d{4}","\\d{6}",,,"501234"],[,,"(?:50|68|72|8[23])\\d{4}","\\d{6}",,,"501234"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"WF",681,"00",,,,,,,,[[,"(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"[48]0\\d{4}","\\d{6}",
,,"401234"]],WS:[,[,,"[2-8]\\d{4,6}","\\d{5,7}"],[,,"(?:[2-5]\\d|6[1-9]|84\\d{2})\\d{3}","\\d{5,7}",,,"22123"],[,,"(?:60|7[25-7]\\d)\\d{4}","\\d{6,7}",,,"601234"],[,,"800\\d{3}","\\d{6}",,,"800123"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"WS",685,"0",,,,,,,,[[,"(8\\d{2})(\\d{3,4})","$1 $2",["8"]],[,"(7\\d)(\\d{5})","$1 $2",["7"]],[,"(\\d{5})","$1",["[2-6]"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],YE:[,[,,"[1-7]\\d{6,8}","\\d{6,9}"],[,,"(?:1(?:7\\d|[2-68])|2[2-68]|3[2358]|4[2-58]|5[2-6]|6[3-58]|7[24-68])\\d{5}",
"\\d{6,8}",,,"1234567"],[,,"7[0137]\\d{7}","\\d{9}",,,"712345678"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"YE",967,"00","0",,,"0",,,,[[,"([1-7])(\\d{3})(\\d{3,4})","$1 $2 $3",["[1-6]|7[24-68]"],"0$1"],[,"(7\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["7[0137]"],"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],YT:[,[,,"[268]\\d{8}","\\d{9}"],[,,"269(?:6[0-4]|50)\\d{4}","\\d{9}",,,"269601234"],[,,"639\\d{6}","\\d{9}",,,"639123456"],[,,"80\\d{7}","\\d{9}",
,,"801234567"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"YT",262,"00","0",,,"0",,,,,,[,,"NA","NA"],,"269|63",[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],ZA:[,[,,"[1-79]\\d{8}|8(?:[067]\\d{7}|[1-4]\\d{3,7})","\\d{5,9}"],[,,"(?:1[0-8]|2[0-378]|3[1-69]|4\\d|5[1346-8])\\d{7}","\\d{9}",,,"101234567"],[,,"(?:6[0-5]|7[0-46-9])\\d{7}|8[1-4]\\d{3,7}","\\d{5,9}",,,"711234567"],[,,"80\\d{7}","\\d{9}",,,"801234567"],[,,"86[2-9]\\d{6}|90\\d{7}","\\d{9}",,,"862345678"],[,,"860\\d{6}","\\d{9}",,
,"860123456"],[,,"NA","NA"],[,,"87\\d{7}","\\d{9}",,,"871234567"],"ZA",27,"00","0",,,"0",,,,[[,"(860)(\\d{3})(\\d{3})","$1 $2 $3",["860"],"0$1"],[,"(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[1-79]|8(?:[0-47]|6[1-9])"],"0$1"],[,"(\\d{2})(\\d{3,4})","$1 $2",["8[1-4]"],"0$1"],[,"(\\d{2})(\\d{3})(\\d{2,3})","$1 $2 $3",["8[1-4]"],"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"861\\d{6}","\\d{9}",,,"861123456"],,,[,,"NA","NA"]],ZM:[,[,,"[289]\\d{8}","\\d{9}"],[,,"21[1-8]\\d{6}","\\d{9}",,,"211234567"],[,,"9(?:5[05]|6\\d|7[1-9])\\d{6}",
"\\d{9}",,,"955123456"],[,,"800\\d{6}","\\d{9}",,,"800123456"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"ZM",260,"00","0",,,"0",,,,[[,"([29]\\d)(\\d{7})","$1 $2",["[29]"],"0$1"],[,"(800)(\\d{3})(\\d{3})","$1 $2 $3",["8"],"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],ZW:[,[,,"2(?:[012457-9]\\d{3,8}|6(?:[14]\\d{7}|\\d{4}))|[13-79]\\d{4,9}|8[06]\\d{8}","\\d{3,10}"],[,,"(?:2(?:0(?:4\\d|5\\d{2})|2[278]\\d|48\\d|7(?:[1-7]\\d|[089]\\d{2})|8(?:[2-57-9]|[146]\\d{2})|98)|3(?:08|17|3[78]|7(?:[19]|[56]\\d)|8[37]|98)|5[15][78]|6(?:28\\d{2}|[36]7|75\\d|[69]8|8(?:7\\d|8)))\\d{3}|(?:2(?:1[39]|2[0157]|6[14]|7[35]|84)|329)\\d{7}|(?:1(?:3\\d{2}|9\\d|[4-8])|2(?:0\\d{2}|[569]\\d)|3(?:[26]|[013459]\\d)|5(?:0|5\\d{2}|[689]\\d)|6(?:[39]|[01246]\\d|[78]\\d{2}))\\d{3}|(?:29\\d|39|54)\\d{6}|(?:(?:25|54)83|2582\\d)\\d{3}|(?:4\\d{6,7}|9[2-9]\\d{4,5})",
"\\d{3,10}",,,"1312345"],[,,"7[1378]\\d{7}","\\d{9}",,,"711234567"],[,,"800\\d{7}","\\d{10}",,,"8001234567"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"86(?:1[12]|30|44|55|77|8[367]|99)\\d{6}","\\d{10}",,,"8686123456"],"ZW",263,"00","0",,,"0",,,,[[,"([49])(\\d{3})(\\d{2,4})","$1 $2 $3",["4|9[2-9]"],"0$1"],[,"(7\\d)(\\d{3})(\\d{3,4})","$1 $2 $3",["7"],"0$1"],[,"(86\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["86[24]"],"0$1"],[,"([2356]\\d{2})(\\d{3,5})","$1 $2",["2(?:0[45]|2[278]|[49]8|[78])|3(?:08|17|3[78]|7[1569]|8[37]|98)|5[15][78]|6(?:[29]8|[38]7|6[78]|75|[89]8)"],
"0$1"],[,"(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["2(?:1[39]|2[0157]|6[14]|7[35]|84)|329"],"0$1"],[,"([1-356]\\d)(\\d{3,5})","$1 $2",["1[3-9]|2[0569]|3[0-69]|5[05689]|6[0-46-9]"],"0$1"],[,"([235]\\d)(\\d{3})(\\d{3,4})","$1 $2 $3",["[23]9|54"],"0$1"],[,"([25]\\d{3})(\\d{3,5})","$1 $2",["(?:25|54)8","258[23]|5483"],"0$1"],[,"(8\\d{3})(\\d{6})","$1 $2",["86"],"0$1"],[,"(80\\d)(\\d{3})(\\d{4})","$1 $2 $3",["80"],"0$1"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],800:[,[,,"\\d{8}","\\d{8}",
,,"12345678"],[,,"NA","NA",,,"12345678"],[,,"NA","NA",,,"12345678"],[,,"\\d{8}","\\d{8}",,,"12345678"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"001",800,,,,,,,,1,[[,"(\\d{4})(\\d{4})","$1 $2"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],1,,[,,"NA","NA"]],808:[,[,,"\\d{8}","\\d{8}",,,"12345678"],[,,"NA","NA",,,"12345678"],[,,"NA","NA",,,"12345678"],[,,"NA","NA"],[,,"NA","NA"],[,,"\\d{8}","\\d{8}",,,"12345678"],[,,"NA","NA"],[,,"NA","NA"],"001",808,,,,,,,,1,[[,"(\\d{4})(\\d{4})","$1 $2"]],
,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],1,,[,,"NA","NA"]],870:[,[,,"[35-7]\\d{8}","\\d{9}",,,"301234567"],[,,"NA","NA",,,"301234567"],[,,"(?:[356]\\d|7[6-8])\\d{7}","\\d{9}",,,"301234567"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"001",870,,,,,,,,,[[,"(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],878:[,[,,"1\\d{11}","\\d{12}",,,"101234567890"],[,,"NA","NA",,,"101234567890"],[,,"NA","NA",,,"101234567890"],[,,"NA",
"NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"10\\d{10}","\\d{12}",,,"101234567890"],"001",878,,,,,,,,1,[[,"(\\d{2})(\\d{5})(\\d{5})","$1 $2 $3"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],881:[,[,,"[67]\\d{8}","\\d{9}",,,"612345678"],[,,"NA","NA",,,"612345678"],[,,"[67]\\d{8}","\\d{9}",,,"612345678"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"001",881,,,,,,,,,[[,"(\\d)(\\d{3})(\\d{5})","$1 $2 $3",["[67]"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA",
"NA"],,,[,,"NA","NA"]],882:[,[,,"[13]\\d{6,11}","\\d{7,12}",,,"3451234567"],[,,"NA","NA",,,"3451234567"],[,,"3(?:2\\d{3}|37\\d{2}|4(?:2|7\\d{3}))\\d{4}","\\d{7,10}",,,"3451234567"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"1(?:3(?:0[0347]|[13][0139]|2[035]|4[013568]|6[0459]|7[06]|8[15678]|9[0689])\\d{4}|6\\d{5,10})|345\\d{7}","\\d{7,12}",,,"3451234567"],"001",882,,,,,,,,,[[,"(\\d{2})(\\d{4})(\\d{3})","$1 $2 $3",["3[23]"]],[,"(\\d{2})(\\d{5})","$1 $2",["16|342"]],[,"(\\d{2})(\\d{4})(\\d{4})",
"$1 $2 $3",["34[57]"]],[,"(\\d{3})(\\d{4})(\\d{4})","$1 $2 $3",["348"]],[,"(\\d{2})(\\d{2})(\\d{4})","$1 $2 $3",["1"]],[,"(\\d{2})(\\d{3,4})(\\d{4})","$1 $2 $3",["16"]],[,"(\\d{2})(\\d{4,5})(\\d{5})","$1 $2 $3",["16"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"348[57]\\d{7}","\\d{11}",,,"3451234567"]],883:[,[,,"51\\d{7}(?:\\d{3})?","\\d{9}(?:\\d{3})?",,,"510012345"],[,,"NA","NA",,,"510012345"],[,,"NA","NA",,,"510012345"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"51(?:00\\d{5}(?:\\d{3})?|[13]0\\d{8})",
"\\d{9}(?:\\d{3})?",,,"510012345"],"001",883,,,,,,,,1,[[,"(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["510"]],[,"(\\d{3})(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["510"]],[,"(\\d{4})(\\d{4})(\\d{4})","$1 $2 $3",["51[13]"]]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],,,[,,"NA","NA"]],888:[,[,,"\\d{11}","\\d{11}",,,"12345678901"],[,,"NA","NA",,,"12345678901"],[,,"NA","NA",,,"12345678901"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"001",888,,,,,,,,1,[[,"(\\d{3})(\\d{3})(\\d{5})",
"$1 $2 $3"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"\\d{11}","\\d{11}",,,"12345678901"],1,,[,,"NA","NA"]],979:[,[,,"\\d{9}","\\d{9}",,,"123456789"],[,,"NA","NA",,,"123456789"],[,,"NA","NA",,,"123456789"],[,,"NA","NA"],[,,"\\d{9}","\\d{9}",,,"123456789"],[,,"NA","NA"],[,,"NA","NA"],[,,"NA","NA"],"001",979,,,,,,,,1,[[,"(\\d)(\\d{4})(\\d{4})","$1 $2 $3"]],,[,,"NA","NA"],,,[,,"NA","NA"],[,,"NA","NA"],1,,[,,"NA","NA"]]};/*

 Copyright (C) 2010 The Libphonenumber Authors.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/
function N(){this.$={}}N.j=function(){return N.v?N.v:N.v=new N};
var sa={0:"0",1:"1",2:"2",3:"3",4:"4",5:"5",6:"6",7:"7",8:"8",9:"9","\uff10":"0","\uff11":"1","\uff12":"2","\uff13":"3","\uff14":"4","\uff15":"5","\uff16":"6","\uff17":"7","\uff18":"8","\uff19":"9","\u0660":"0","\u0661":"1","\u0662":"2","\u0663":"3","\u0664":"4","\u0665":"5","\u0666":"6","\u0667":"7","\u0668":"8","\u0669":"9","\u06f0":"0","\u06f1":"1","\u06f2":"2","\u06f3":"3","\u06f4":"4","\u06f5":"5","\u06f6":"6","\u06f7":"7","\u06f8":"8","\u06f9":"9"},ta={0:"0",1:"1",2:"2",3:"3",4:"4",5:"5",6:"6",
7:"7",8:"8",9:"9","\uff10":"0","\uff11":"1","\uff12":"2","\uff13":"3","\uff14":"4","\uff15":"5","\uff16":"6","\uff17":"7","\uff18":"8","\uff19":"9","\u0660":"0","\u0661":"1","\u0662":"2","\u0663":"3","\u0664":"4","\u0665":"5","\u0666":"6","\u0667":"7","\u0668":"8","\u0669":"9","\u06f0":"0","\u06f1":"1","\u06f2":"2","\u06f3":"3","\u06f4":"4","\u06f5":"5","\u06f6":"6","\u06f7":"7","\u06f8":"8","\u06f9":"9",A:"2",B:"2",C:"2",D:"3",E:"3",F:"3",G:"4",H:"4",I:"4",J:"5",K:"5",L:"5",M:"6",N:"6",O:"6",P:"7",
Q:"7",R:"7",S:"7",T:"8",U:"8",V:"8",W:"9",X:"9",Y:"9",Z:"9"},O=RegExp("^[+\uff0b]+"),ua=RegExp("([0-9\uff10-\uff19\u0660-\u0669\u06f0-\u06f9])"),va=RegExp("[+\uff0b0-9\uff10-\uff19\u0660-\u0669\u06f0-\u06f9]"),wa=/[\\\/] *x/,xa=RegExp("[^0-9\uff10-\uff19\u0660-\u0669\u06f0-\u06f9A-Za-z#]+$"),ya=/(?:.*?[A-Za-z]){3}.*/,za=RegExp("(?:;ext=([0-9\uff10-\uff19\u0660-\u0669\u06f0-\u06f9]{1,7})|[ \u00a0\\t,]*(?:e?xt(?:ensi(?:o\u0301?|\u00f3))?n?|\uff45?\uff58\uff54\uff4e?|[,x\uff58#\uff03~\uff5e]|int|anexo|\uff49\uff4e\uff54)[:\\.\uff0e]?[ \u00a0\\t,-]*([0-9\uff10-\uff19\u0660-\u0669\u06f0-\u06f9]{1,7})#?|[- ]+([0-9\uff10-\uff19\u0660-\u0669\u06f0-\u06f9]{1,5})#)$",
"i"),Aa=RegExp("^[0-9\uff10-\uff19\u0660-\u0669\u06f0-\u06f9]{2}$|^[+\uff0b]*(?:[-x\u2010-\u2015\u2212\u30fc\uff0d-\uff0f \u00a0\u00ad\u200b\u2060\u3000()\uff08\uff09\uff3b\uff3d.\\[\\]/~\u2053\u223c\uff5e*]*[0-9\uff10-\uff19\u0660-\u0669\u06f0-\u06f9]){3,}[-x\u2010-\u2015\u2212\u30fc\uff0d-\uff0f \u00a0\u00ad\u200b\u2060\u3000()\uff08\uff09\uff3b\uff3d.\\[\\]/~\u2053\u223c\uff5e*A-Za-z0-9\uff10-\uff19\u0660-\u0669\u06f0-\u06f9]*(?:;ext=([0-9\uff10-\uff19\u0660-\u0669\u06f0-\u06f9]{1,7})|[ \u00a0\\t,]*(?:e?xt(?:ensi(?:o\u0301?|\u00f3))?n?|\uff45?\uff58\uff54\uff4e?|[,x\uff58#\uff03~\uff5e]|int|anexo|\uff49\uff4e\uff54)[:\\.\uff0e]?[ \u00a0\\t,-]*([0-9\uff10-\uff19\u0660-\u0669\u06f0-\u06f9]{1,7})#?|[- ]+([0-9\uff10-\uff19\u0660-\u0669\u06f0-\u06f9]{1,5})#)?$",
"i"),Ba=/(\$\d)/;function Ca(a){var b=a.search(va);0<=b?(a=a.substring(b),a=a.replace(xa,""),b=a.search(wa),0<=b&&(a=a.substring(0,b))):a="";return a}function Da(a){return 2>a.length?!1:P(Aa,a)}function Ea(a){return P(ya,a)?Q(a,ta):Q(a,sa)}function Fa(a){var b=Ea(a.toString());a.clear();a.append(b)}function Q(a,b){for(var c=new D,d,e=a.length,f=0;f<e;++f)d=a.charAt(f),d=b[d.toUpperCase()],null!=d&&c.append(d);return c.toString()}function R(a){return null!=a&&isNaN(a)&&a.toUpperCase()in ra}
N.prototype.format=function(a,b){if(0==w(a,2)&&null!=a.b[5]){var c=z(a,5);if(0<c.length)return c}var c=a.g(),d=S(a);if(0==b)return Ga(c,0,d,"");if(!(c in M))return d;var e=T(this,c,U(c)),f;f=null!=a.b[3]&&0!=a.getExtension().length?3==b?";ext="+a.getExtension():null!=e.b[13]?w(e,13)+z(a,3):" ext. "+z(a,3):"";a:{for(var e=0==(y(e,20)||[]).length||2==b?y(e,19)||[]:y(e,20)||[],g,h=e.length,l=0;l<h;++l){g=e[l];var p=g.h[3].o?null!=g.b[3]?g.b[3].length:0:null!=g.b[3]?1:0;if(0==p||0==d.search(w(g,3,p-1)))if(p=
new RegExp(w(g,1)),P(p,d)){e=g;break a}}e=null}null!=e&&(h=e,e=z(h,2),g=new RegExp(w(h,1)),z(h,5),l="",h=z(h,4),l=2==b&&null!=h&&0<h.length?d.replace(g,e.replace(Ba,h)):d.replace(g,e),3==b&&(l=l.replace(RegExp("^[-x\u2010-\u2015\u2212\u30fc\uff0d-\uff0f \u00a0\u00ad\u200b\u2060\u3000()\uff08\uff09\uff3b\uff3d.\\[\\]/~\u2053\u223c\uff5e]+"),""),l=l.replace(RegExp("[-x\u2010-\u2015\u2212\u30fc\uff0d-\uff0f \u00a0\u00ad\u200b\u2060\u3000()\uff08\uff09\uff3b\uff3d.\\[\\]/~\u2053\u223c\uff5e]+","g"),"-")),
d=l);return Ga(c,b,d,f)};function T(a,b,c){return"001"==c?V(a,""+b):V(a,c)}function S(a){var b=""+w(a,2);return null!=a.b[4]&&w(a,4)?Array(z(a,8)+1).join("0")+b:b}function Ga(a,b,c,d){switch(b){case 0:return"+"+a+c+d;case 1:return"+"+a+" "+c+d;case 3:return"tel:+"+a+"-"+c+d;default:return c+d}}
function Ha(a,b){switch(b){case 4:return w(a,5);case 3:return w(a,4);case 1:return w(a,3);case 0:case 2:return w(a,2);case 5:return w(a,6);case 6:return w(a,8);case 7:return w(a,7);case 8:return w(a,21);case 9:return w(a,25);case 10:return w(a,28);default:return w(a,1)}}function W(a,b){return X(a,w(b,1))?X(a,w(b,5))?4:X(a,w(b,4))?3:X(a,w(b,6))?5:X(a,w(b,8))?6:X(a,w(b,7))?7:X(a,w(b,21))?8:X(a,w(b,25))?9:X(a,w(b,28))?10:X(a,w(b,2))?w(b,18)||X(a,w(b,3))?2:0:!w(b,18)&&X(a,w(b,3))?1:-1:-1}
function V(a,b){if(null==b)return null;b=b.toUpperCase();var c=a.$[b];if(null==c){c=ra[b];if(null==c)return null;c=(new C).l(I.c(),c);a.$[b]=c}return c}function X(a,b){return P(z(b,3),a)&&P(z(b,2),a)}function Ia(a,b){if(null==b)return null;var c=b.g(),c=M[c];if(null==c)c=null;else if(1==c.length)c=c[0];else a:{for(var d=S(b),e,f=c.length,g=0;g<f;g++){e=c[g];var h=V(a,e);if(null!=h.b[23]){if(0==d.search(w(h,23))){c=e;break a}}else if(-1!=W(d,h)){c=e;break a}}c=null}return c}
function U(a){a=M[a];return null==a?"ZZ":a[0]}function Y(a,b){return P(a,b)?0:0==b.search(a)?3:2}
function Ja(a,b,c,d,e){if(0==a.length)return 0;a=new D(a);var f;null!=b&&(f=w(b,11));null==f&&(f="NonMatch");var g=a.toString();if(0==g.length)f=20;else if(O.test(g))g=g.replace(O,""),a.clear(),a.append(Ea(g)),f=1;else{g=new RegExp(f);Fa(a);f=a.toString();if(0==f.search(g)){var g=f.match(g)[0].length,h=f.substring(g).match(ua);h&&null!=h[1]&&0<h[1].length&&"0"==Q(h[1],sa)?f=!1:(a.clear(),a.append(f.substring(g)),f=!0)}else f=!1;f=f?5:20}d&&x(e,6,f);if(20!=f){if(2>=a.f.length)throw"Phone number too short after IDD";
a:{d=a.toString();if(0!=d.length&&"0"!=d.charAt(0))for(b=d.length,f=1;3>=f&&f<=b;++f)if(a=parseInt(d.substring(0,f),10),a in M){c.append(d.substring(f));c=a;break a}c=0}if(0!=c)return e.m(c),c;throw"Invalid country calling code";}if(null!=b&&(f=b.g(),g=""+f,h=a.toString(),0==h.lastIndexOf(g,0))){var l=new D(h.substring(g.length)),h=w(b,1),g=new RegExp(z(h,2));Ka(l,b,null);b=l.toString();h=z(h,3);if(!P(g,a.toString())&&P(g,b)||3==Y(h,a.toString()))return c.append(b),d&&x(e,6,10),e.m(f),f}e.m(0);return 0}
function Ka(a,b,c){var d=a.toString(),e=d.length,f=w(b,15);if(0!=e&&null!=f&&0!=f.length&&(f=new RegExp("^(?:"+f+")"),e=f.exec(d))){var g=RegExp,h;h=w(b,1);h=z(h,2);g=new g(h);h=P(g,d);var l=e.length-1;b=w(b,16);if(null==b||0==b.length||null==e[l]||0==e[l].length){if(!h||P(g,d.substring(e[0].length)))null!=c&&0<l&&null!=e[l]&&c.append(e[1]),a.set(d.substring(e[0].length))}else if(d=d.replace(f,b),!h||P(g,d))null!=c&&0<l&&c.append(e[1]),a.set(d)}}
N.prototype.parse=function(a,b){return La(this,a,b,!1)};function Z(a,b,c){if(!R(c)&&0<b.length&&"+"!=b.charAt(0))throw"Invalid country calling code";return La(a,b,c,!0)}
function La(a,b,c,d){if(null==b)throw"The string supplied did not seem to be a phone number";if(250<b.length)throw"The string supplied is too long to be a phone number";var e=new D,f=b.indexOf(";phone-context=");if(0<f){var g=f+15;if("+"==b.charAt(g)){var h=b.indexOf(";",g);0<h?e.append(b.substring(g,h)):e.append(b.substring(g))}g=b.indexOf("tel:");e.append(b.substring(0<=g?g+4:0,f))}else e.append(Ca(b));f=e.toString();g=f.indexOf(";isub=");0<g&&(e.clear(),e.append(f.substring(0,g)));if(!Da(e.toString()))throw"The string supplied did not seem to be a phone number";
f=e.toString();if(!(R(c)||null!=f&&0<f.length&&O.test(f)))throw"Invalid country calling code";f=new K;d&&x(f,5,b);a:{b=e.toString();g=b.search(za);if(0<=g&&Da(b.substring(0,g)))for(var h=b.match(za),l=h.length,p=1;p<l;++p)if(null!=h[p]&&0<h[p].length){e.clear();e.append(b.substring(0,g));b=h[p];break a}b=""}0<b.length&&x(f,3,b);g=V(a,c);b=new D;h=0;l=e.toString();try{h=Ja(l,g,b,d,f)}catch(v){if("Invalid country calling code"==v&&O.test(l)){if(l=l.replace(O,""),h=Ja(l,g,b,d,f),0==h)throw v;}else throw v;
}0!=h?(e=U(h),e!=c&&(g=T(a,h,e))):(Fa(e),b.append(e.toString()),null!=c?(h=g.g(),f.m(h)):d&&na(f,6));if(2>b.f.length)throw"The string supplied is too short to be a phone number";null!=g&&(a=new D,c=new D(b.toString()),Ka(c,g,a),e=c.toString(),g=w(g,1),g=z(g,3),2!=Y(g,e)&&(b=c,d&&x(f,7,a.toString())));d=b.toString();a=d.length;if(2>a)throw"The string supplied is too short to be a phone number";if(17<a)throw"The string supplied is too long to be a phone number";if(1<d.length&&"0"==d.charAt(0)){x(f,
4,!0);for(a=1;a<d.length-1&&"0"==d.charAt(a);)a++;1!=a&&x(f,8,a)}x(f,2,parseInt(d,10));return f}function P(a,b){var c="string"==typeof a?b.match("^(?:"+a+")$"):b.match(a);return c&&c[0].length==b.length?!0:!1};m("intlTelInputUtils",{});m("intlTelInputUtils.formatNumber",function(a,b,c){try{var d=N.j(),e=Z(d,a,b);return d.format(e,"undefined"==typeof c?0:c)}catch(f){return a}});m("intlTelInputUtils.getExampleNumber",function(a,b,c){try{var d=N.j(),e;a:{if(R(a)){var f=Ha(V(d,a),c);try{if(null!=f.b[6]){e=d.parse(z(f,6),a);break a}}catch(g){}}e=null}return d.format(e,b?2:1)}catch(h){return""}});m("intlTelInputUtils.getExtension",function(a,b){try{return Z(N.j(),a,b).getExtension()}catch(c){return""}});
m("intlTelInputUtils.getNumberType",function(a,b){try{var c=N.j(),d;var e=Z(c,a,b),f=Ia(c,e),g=T(c,e.g(),f);if(null==g)d=-1;else{var h=S(e);d=W(h,g)}return d}catch(l){return-99}});
m("intlTelInputUtils.getValidationError",function(a,b){try{var c=N.j(),d;var e=Z(c,a,b),f=S(e),g=e.g();if(g in M){var h,l=T(c,g,U(g));h=w(l,1);var p=z(h,3);d=Y(p,f)}else d=1;return d}catch(v){return"Invalid country calling code"==v?1:"The string supplied did not seem to be a phone number"==v?4:"Phone number too short after IDD"==v||"The string supplied is too short to be a phone number"==v?2:"The string supplied is too long to be a phone number"==v?3:-99}});
m("intlTelInputUtils.isValidNumber",function(a,b){try{var c=N.j(),d=Z(c,a,b),e;var f=Ia(c,d),g=d.g(),h=T(c,g,f),l;if(!(l=null==h)){var p;if(p="001"!=f){var v,oa=V(c,f);if(null==oa)throw"Invalid region code: "+f;v=oa.g();p=g!=v}l=p}if(l)e=!1;else{var Ma=S(d);e=-1!=W(Ma,h)}return e}catch(Na){return!1}});m("intlTelInputUtils.numberFormat",{E164:0,INTERNATIONAL:1,NATIONAL:2,RFC3966:3});
m("intlTelInputUtils.numberType",{FIXED_LINE:0,MOBILE:1,FIXED_LINE_OR_MOBILE:2,TOLL_FREE:3,PREMIUM_RATE:4,SHARED_COST:5,VOIP:6,PERSONAL_NUMBER:7,PAGER:8,UAN:9,VOICEMAIL:10,UNKNOWN:-1});m("intlTelInputUtils.validationError",{IS_POSSIBLE:0,INVALID_COUNTRY_CODE:1,TOO_SHORT:2,TOO_LONG:3,NOT_A_NUMBER:4});})();

/// <reference path="Jssor.js" />

/*
* Jssor.Slider 19.0
* http://www.jssor.com/
*
* Licensed under the MIT license:
* http://www.opensource.org/licenses/MIT
* 
* TERMS OF USE - Jssor.Slider
* 
* Copyright 2014 Jssor
*
* Permission is hereby granted, free of charge, to any person obtaining
* a copy of this software and associated documentation files (the
* "Software"), to deal in the Software without restriction, including
* without limitation the rights to use, copy, modify, merge, publish,
* distribute, sublicense, and/or sell copies of the Software, and to
* permit persons to whom the Software is furnished to do so, subject to
* the following conditions:
* 
* The above copyright notice and this permission notice shall be
* included in all copies or substantial portions of the Software.
* 
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/


var $JssorSlideshowFormations$ = window.$JssorSlideshowFormations$ = new function () {
    var _This = this;

    //Constants +++++++

    var COLUMN_INCREASE = 0;
    var COLUMN_DECREASE = 1;
    var ROW_INCREASE = 2;
    var ROW_DECREASE = 3;

    var DIRECTION_HORIZONTAL = 0x0003;
    var DIRECTION_VERTICAL = 0x000C;

    var TO_LEFT = 0x0001;
    var TO_RIGHT = 0x0002;
    var TO_TOP = 0x0004;
    var TO_BOTTOM = 0x0008;

    var FROM_LEFT = 0x0100;
    var FROM_TOP = 0x0200;
    var FROM_RIGHT = 0x0400;
    var FROM_BOTTOM = 0x0800;

    var ASSEMBLY_BOTTOM_LEFT = FROM_BOTTOM + TO_LEFT;
    var ASSEMBLY_BOTTOM_RIGHT = FROM_BOTTOM + TO_RIGHT;
    var ASSEMBLY_TOP_LEFT = FROM_TOP + TO_LEFT;
    var ASSEMBLY_TOP_RIGHT = FROM_TOP + TO_RIGHT;
    var ASSEMBLY_LEFT_TOP = FROM_LEFT + TO_TOP;
    var ASSEMBLY_LEFT_BOTTOM = FROM_LEFT + TO_BOTTOM;
    var ASSEMBLY_RIGHT_TOP = FROM_RIGHT + TO_TOP;
    var ASSEMBLY_RIGHT_BOTTOM = FROM_RIGHT + TO_BOTTOM;

    //Constants -------

    //Formation Definition +++++++
    function isToLeft(roadValue) {
        return (roadValue & TO_LEFT) == TO_LEFT;
    }

    function isToRight(roadValue) {
        return (roadValue & TO_RIGHT) == TO_RIGHT;
    }

    function isToTop(roadValue) {
        return (roadValue & TO_TOP) == TO_TOP;
    }

    function isToBottom(roadValue) {
        return (roadValue & TO_BOTTOM) == TO_BOTTOM;
    }

    function PushFormationOrder(arr, order, formationItem) {
        formationItem.push(order);
        arr[order] = arr[order] || [];
        arr[order].push(formationItem);
    }

    _This.$FormationStraight = function (transition) {
        var cols = transition.$Cols;
        var rows = transition.$Rows;
        var formationDirection = transition.$Assembly;
        var count = transition.$Count;
        var a = [];
        var i = 0;
        var col = 0;
        var r = 0;
        var cl = cols - 1;
        var rl = rows - 1;
        var il = count - 1;
        var cr;
        var order;
        for (r = 0; r < rows; r++) {
            for (col = 0; col < cols; col++) {
                cr = r + ',' + col;
                switch (formationDirection) {
                    case ASSEMBLY_BOTTOM_LEFT:
                        order = il - (col * rows + (rl - r));
                        break;
                    case ASSEMBLY_RIGHT_TOP:
                        order = il - (r * cols + (cl - col));
                        break;
                    case ASSEMBLY_TOP_LEFT:
                        order = il - (col * rows + r);
                    case ASSEMBLY_LEFT_TOP:
                        order = il - (r * cols + col);
                        break;
                    case ASSEMBLY_BOTTOM_RIGHT:
                        order = col * rows + r;
                        break;
                    case ASSEMBLY_LEFT_BOTTOM:
                        order = r * cols + (cl - col);
                        break;
                    case ASSEMBLY_TOP_RIGHT:
                        order = col * rows + (rl - r);
                        break;
                    default:
                        order = r * cols + col;
                        break; //ASSEMBLY_RIGHT_BOTTOM
                }
                PushFormationOrder(a, order, [r, col]);
            }
        }

        return a;
    };

    _This.$FormationSwirl = function (transition) {
        var cols = transition.$Cols;
        var rows = transition.$Rows;
        var formationDirection = transition.$Assembly;
        var count = transition.$Count;
        var a = [];
        var hit = [];
        var i = 0;
        var col = 0;
        var r = 0;
        var cl = cols - 1;
        var rl = rows - 1;
        var il = count - 1;
        var cr;
        var courses;
        var course = 0;
        switch (formationDirection) {
            case ASSEMBLY_BOTTOM_LEFT:
                col = cl;
                r = 0;
                courses = [ROW_INCREASE, COLUMN_DECREASE, ROW_DECREASE, COLUMN_INCREASE];
                break;
            case ASSEMBLY_RIGHT_TOP:
                col = 0;
                r = rl;
                courses = [COLUMN_INCREASE, ROW_DECREASE, COLUMN_DECREASE, ROW_INCREASE];
                break;
            case ASSEMBLY_TOP_LEFT:
                col = cl;
                r = rl;
                courses = [ROW_DECREASE, COLUMN_DECREASE, ROW_INCREASE, COLUMN_INCREASE];
                break;
            case ASSEMBLY_LEFT_TOP:
                col = cl;
                r = rl;
                courses = [COLUMN_DECREASE, ROW_DECREASE, COLUMN_INCREASE, ROW_INCREASE];
                break;
            case ASSEMBLY_BOTTOM_RIGHT:
                col = 0;
                r = 0;
                courses = [ROW_INCREASE, COLUMN_INCREASE, ROW_DECREASE, COLUMN_DECREASE];
                break;
            case ASSEMBLY_LEFT_BOTTOM:
                col = cl;
                r = 0;
                courses = [COLUMN_DECREASE, ROW_INCREASE, COLUMN_INCREASE, ROW_DECREASE];
                break;
            case ASSEMBLY_TOP_RIGHT:
                col = 0;
                r = rl;
                courses = [ROW_DECREASE, COLUMN_INCREASE, ROW_INCREASE, COLUMN_DECREASE];
                break;
            default:
                col = 0;
                r = 0;
                courses = [COLUMN_INCREASE, ROW_INCREASE, COLUMN_DECREASE, ROW_DECREASE];
                break; //ASSEMBLY_RIGHT_BOTTOM
        }
        i = 0;
        while (i < count) {
            cr = r + ',' + col;
            if (col >= 0 && col < cols && r >= 0 && r < rows && !hit[cr]) {
                //a[cr] = i++;
                hit[cr] = true;
                PushFormationOrder(a, i++, [r, col]);
            }
            else {
                switch (courses[course++ % courses.length]) {
                    case COLUMN_INCREASE:
                        col--;
                        break;
                    case ROW_INCREASE:
                        r--;
                        break;
                    case COLUMN_DECREASE:
                        col++;
                        break;
                    case ROW_DECREASE:
                        r++;
                        break;
                }
            }

            switch (courses[course % courses.length]) {
                case COLUMN_INCREASE:
                    col++;
                    break;
                case ROW_INCREASE:
                    r++;
                    break;
                case COLUMN_DECREASE:
                    col--;
                    break;
                case ROW_DECREASE:
                    r--;
                    break;
            }
        }
        return a;
    };

    _This.$FormationZigZag = function (transition) {
        var cols = transition.$Cols;
        var rows = transition.$Rows;
        var formationDirection = transition.$Assembly;
        var count = transition.$Count;
        var a = [];
        var i = 0;
        var col = 0;
        var r = 0;
        var cl = cols - 1;
        var rl = rows - 1;
        var il = count - 1;
        var cr;
        var courses;
        var course = 0;
        switch (formationDirection) {
            case ASSEMBLY_BOTTOM_LEFT:
                col = cl;
                r = 0;
                courses = [ROW_INCREASE, COLUMN_DECREASE, ROW_DECREASE, COLUMN_DECREASE];
                break;
            case ASSEMBLY_RIGHT_TOP:
                col = 0;
                r = rl;
                courses = [COLUMN_INCREASE, ROW_DECREASE, COLUMN_DECREASE, ROW_DECREASE];
                break;
            case ASSEMBLY_TOP_LEFT:
                col = cl;
                r = rl;
                courses = [ROW_DECREASE, COLUMN_DECREASE, ROW_INCREASE, COLUMN_DECREASE];
                break;
            case ASSEMBLY_LEFT_TOP:
                col = cl;
                r = rl;
                courses = [COLUMN_DECREASE, ROW_DECREASE, COLUMN_INCREASE, ROW_DECREASE];
                break;
            case ASSEMBLY_BOTTOM_RIGHT:
                col = 0;
                r = 0;
                courses = [ROW_INCREASE, COLUMN_INCREASE, ROW_DECREASE, COLUMN_INCREASE];
                break;
            case ASSEMBLY_LEFT_BOTTOM:
                col = cl;
                r = 0;
                courses = [COLUMN_DECREASE, ROW_INCREASE, COLUMN_INCREASE, ROW_INCREASE];
                break;
            case ASSEMBLY_TOP_RIGHT:
                col = 0;
                r = rl;
                courses = [ROW_DECREASE, COLUMN_INCREASE, ROW_INCREASE, COLUMN_INCREASE];
                break;
            default:
                col = 0;
                r = 0;
                courses = [COLUMN_INCREASE, ROW_INCREASE, COLUMN_DECREASE, ROW_INCREASE];
                break; //ASSEMBLY_RIGHT_BOTTOM
        }
        i = 0;
        while (i < count) {
            cr = r + ',' + col;
            if (col >= 0 && col < cols && r >= 0 && r < rows && typeof (a[cr]) == 'undefined') {
                PushFormationOrder(a, i++, [r, col]);
                //a[cr] = i++;
                switch (courses[course % courses.length]) {
                    case COLUMN_INCREASE:
                        col++;
                        break;
                    case ROW_INCREASE:
                        r++;
                        break;
                    case COLUMN_DECREASE:
                        col--;
                        break;
                    case ROW_DECREASE:
                        r--;
                        break;
                }
            }
            else {
                switch (courses[course++ % courses.length]) {
                    case COLUMN_INCREASE:
                        col--;
                        break;
                    case ROW_INCREASE:
                        r--;
                        break;
                    case COLUMN_DECREASE:
                        col++;
                        break;
                    case ROW_DECREASE:
                        r++;
                        break;
                }
                switch (courses[course++ % courses.length]) {
                    case COLUMN_INCREASE:
                        col++;
                        break;
                    case ROW_INCREASE:
                        r++;
                        break;
                    case COLUMN_DECREASE:
                        col--;
                        break;
                    case ROW_DECREASE:
                        r--;
                        break;
                }
            }
        }
        return a;
    };

    _This.$FormationStraightStairs = function (transition) {
        var cols = transition.$Cols;
        var rows = transition.$Rows;
        var formationDirection = transition.$Assembly;
        var count = transition.$Count;
        var a = [];
        var i = 0;
        var col = 0;
        var r = 0;
        var cl = cols - 1;
        var rl = rows - 1;
        var il = count - 1;
        var cr;
        switch (formationDirection) {
            case ASSEMBLY_BOTTOM_LEFT:
            case ASSEMBLY_TOP_RIGHT:
            case ASSEMBLY_TOP_LEFT:
            case ASSEMBLY_BOTTOM_RIGHT:
                var C = 0;
                var R = 0;
                break;
            case ASSEMBLY_LEFT_BOTTOM:
            case ASSEMBLY_RIGHT_TOP:
            case ASSEMBLY_LEFT_TOP:
            case ASSEMBLY_RIGHT_BOTTOM:
                var C = cl;
                var R = 0;
                break;
            default:
                formationDirection = ASSEMBLY_RIGHT_BOTTOM;
                var C = cl;
                var R = 0;
                break;
        }
        col = C;
        r = R;
        while (i < count) {
            cr = r + ',' + col;
            if (isToTop(formationDirection) || isToRight(formationDirection)) {
                PushFormationOrder(a, il - i++, [r, col]);
                //a[cr] = il - i++;
            }
            else {
                PushFormationOrder(a, i++, [r, col]);
                //a[cr] = i++;
            }
            switch (formationDirection) {
                case ASSEMBLY_BOTTOM_LEFT:
                case ASSEMBLY_TOP_RIGHT:
                    col--;
                    r++;
                    break;
                case ASSEMBLY_TOP_LEFT:
                case ASSEMBLY_BOTTOM_RIGHT:
                    col++;
                    r--;
                    break;
                case ASSEMBLY_LEFT_BOTTOM:
                case ASSEMBLY_RIGHT_TOP:
                    col--;
                    r--;
                    break;
                case ASSEMBLY_RIGHT_BOTTOM:
                case ASSEMBLY_LEFT_TOP:
                default:
                    col++;
                    r++;
                    break;
            }
            if (col < 0 || r < 0 || col > cl || r > rl) {
                switch (formationDirection) {
                    case ASSEMBLY_BOTTOM_LEFT:
                    case ASSEMBLY_TOP_RIGHT:
                        C++;
                        break;
                    case ASSEMBLY_LEFT_BOTTOM:
                    case ASSEMBLY_RIGHT_TOP:
                    case ASSEMBLY_TOP_LEFT:
                    case ASSEMBLY_BOTTOM_RIGHT:
                        R++;
                        break;
                    case ASSEMBLY_RIGHT_BOTTOM:
                    case ASSEMBLY_LEFT_TOP:
                    default:
                        C--;
                        break;
                }
                if (C < 0 || R < 0 || C > cl || R > rl) {
                    switch (formationDirection) {
                        case ASSEMBLY_BOTTOM_LEFT:
                        case ASSEMBLY_TOP_RIGHT:
                            C = cl;
                            R++;
                            break;
                        case ASSEMBLY_TOP_LEFT:
                        case ASSEMBLY_BOTTOM_RIGHT:
                            R = rl;
                            C++;
                            break;
                        case ASSEMBLY_LEFT_BOTTOM:
                        case ASSEMBLY_RIGHT_TOP: R = rl; C--;
                            break;
                        case ASSEMBLY_RIGHT_BOTTOM:
                        case ASSEMBLY_LEFT_TOP:
                        default:
                            C = 0;
                            R++;
                            break;
                    }
                    if (R > rl)
                        R = rl;
                    else if (R < 0)
                        R = 0;
                    else if (C > cl)
                        C = cl;
                    else if (C < 0)
                        C = 0;
                }
                r = R;
                col = C;
            }
        }
        return a;
    };

    _This.$FormationSquare = function (transition) {
        var cols = transition.$Cols || 1;
        var rows = transition.$Rows || 1;
        var arr = [];
        var i = 0;
        var col;
        var r;
        var dc;
        var dr;
        var cr;
        dc = cols < rows ? (rows - cols) / 2 : 0;
        dr = cols > rows ? (cols - rows) / 2 : 0;
        cr = Math.round(Math.max(cols / 2, rows / 2)) + 1;
        for (col = 0; col < cols; col++) {
            for (r = 0; r < rows; r++)
                PushFormationOrder(arr, cr - Math.min(col + 1 + dc, r + 1 + dr, cols - col + dc, rows - r + dr), [r, col]);
        }
        return arr;
    };

    _This.$FormationRectangle = function (transition) {
        var cols = transition.$Cols || 1;
        var rows = transition.$Rows || 1;
        var arr = [];
        var i = 0;
        var col;
        var r;
        var cr;
        cr = Math.round(Math.min(cols / 2, rows / 2)) + 1;
        for (col = 0; col < cols; col++) {
            for (r = 0; r < rows; r++)
                PushFormationOrder(arr, cr - Math.min(col + 1, r + 1, cols - col, rows - r), [r, col]);
        }
        return arr;
    };

    _This.$FormationRandom = function (transition) {
        var a = [];
        var r, col, i;
        for (r = 0; r < transition.$Rows; r++) {
            for (col = 0; col < transition.$Cols; col++)
                PushFormationOrder(a, Math.ceil(100000 * Math.random()) % 13, [r, col]);
        }

        return a;
    };

    _This.$FormationCircle = function (transition) {
        var cols = transition.$Cols || 1;
        var rows = transition.$Rows || 1;
        var arr = [];
        var i = 0;
        var col;
        var r;
        var hc = cols / 2 - 0.5;
        var hr = rows / 2 - 0.5;
        for (col = 0; col < cols; col++) {
            for (r = 0; r < rows; r++)
                PushFormationOrder(arr, Math.round(Math.sqrt(Math.pow(col - hc, 2) + Math.pow(r - hr, 2))), [r, col]);
        }
        return arr;
    };

    _This.$FormationCross = function (transition) {
        var cols = transition.$Cols || 1;
        var rows = transition.$Rows || 1;
        var arr = [];
        var i = 0;
        var col;
        var r;
        var hc = cols / 2 - 0.5;
        var hr = rows / 2 - 0.5;
        for (col = 0; col < cols; col++) {
            for (r = 0; r < rows; r++)
                PushFormationOrder(arr, Math.round(Math.min(Math.abs(col - hc), Math.abs(r - hr))), [r, col]);
        }
        return arr;
    };

    _This.$FormationRectangleCross = function (transition) {
        var cols = transition.$Cols || 1;
        var rows = transition.$Rows || 1;
        var arr = [];
        var i = 0;
        var col;
        var r;
        var hc = cols / 2 - 0.5;
        var hr = rows / 2 - 0.5;
        var cr = Math.max(hc, hr) + 1;
        for (col = 0; col < cols; col++) {
            for (r = 0; r < rows; r++)
                PushFormationOrder(arr, Math.round(cr - Math.max(hc - Math.abs(col - hc), hr - Math.abs(r - hr))) - 1, [r, col]);
        }
        return arr;
    };
};

var $JssorSlideshowRunner$ = window.$JssorSlideshowRunner$ = function (slideContainer, slideContainerWidth, slideContainerHeight, slideshowOptions, isTouchDevice) {

    var _SelfSlideshowRunner = this;

    //var _State = 0; //-1 fullfill, 0 clean, 1 initializing, 2 stay, 3 playing
    var _EndTime;

    var _SliderFrameCount;

    var _SlideshowPlayerBelow;
    var _SlideshowPlayerAbove;

    var _PrevItem;
    var _SlideItem;

    var _TransitionIndex = 0;
    var _TransitionsOrder = slideshowOptions.$TransitionsOrder;

    var _SlideshowTransition;

    var _SlideshowPerformance = 8;

    //#region Private Methods
    function EnsureTransitionInstance(options, slideshowInterval) {

        var slideshowTransition = {
            $Interval: slideshowInterval,  //Delay to play next frame
            $Duration: 1, //Duration to finish the entire transition
            $Delay: 0,  //Delay to assembly blocks
            $Cols: 1,   //Number of columns
            $Rows: 1,   //Number of rows
            $Opacity: 0,   //Fade block or not
            $Zoom: 0,   //Zoom block or not
            $Clip: 0,   //Clip block or not
            $Move: false,   //Move block or not
            $SlideOut: false,   //Slide the previous slide out to display next slide instead
            //$FlyDirection: 0,   //Specify fly transform with direction
            $Reverse: false,    //Reverse the assembly or not
            $Formation: $JssorSlideshowFormations$.$FormationRandom,    //Shape that assembly blocks as
            $Assembly: 0x0408,   //The way to assembly blocks ASSEMBLY_RIGHT_BOTTOM
            $ChessMode: { $Column: 0, $Row: 0 },    //Chess move or fly direction
            $Easing: $JssorEasing$.$EaseSwing,  //Specify variation of speed during transition
            $Round: {},
            $Blocks: [],
            $During: {}
        };

        $Jssor$.$Extend(slideshowTransition, options);

        slideshowTransition.$Count = slideshowTransition.$Cols * slideshowTransition.$Rows;
        if ($Jssor$.$IsFunction(slideshowTransition.$Easing))
            slideshowTransition.$Easing = { $Default: slideshowTransition.$Easing };

        slideshowTransition.$FramesCount = Math.ceil(slideshowTransition.$Duration / slideshowTransition.$Interval);

        slideshowTransition.$GetBlocks = function (width, height) {
            width /= slideshowTransition.$Cols;
            height /= slideshowTransition.$Rows;
            var wh = width + 'x' + height;
            if (!slideshowTransition.$Blocks[wh]) {
                slideshowTransition.$Blocks[wh] = { $Width: width, $Height: height };
                for (var col = 0; col < slideshowTransition.$Cols; col++) {
                    for (var r = 0; r < slideshowTransition.$Rows; r++)
                        slideshowTransition.$Blocks[wh][r + ',' + col] = { $Top: r * height, $Right: col * width + width, $Bottom: r * height + height, $Left: col * width };
                }
            }

            return slideshowTransition.$Blocks[wh];
        };

        if (slideshowTransition.$Brother) {
            slideshowTransition.$Brother = EnsureTransitionInstance(slideshowTransition.$Brother, slideshowInterval);
            slideshowTransition.$SlideOut = true;
        }

        return slideshowTransition;
    }
    //#endregion

    //#region Private Classes
    function JssorSlideshowPlayer(slideContainer, slideElement, slideTransition, beginTime, slideContainerWidth, slideContainerHeight) {
        var _Self = this;

        var _Block;
        var _StartStylesArr = {};
        var _AnimationStylesArrs = {};
        var _AnimationBlockItems = [];
        var _StyleStart;
        var _StyleEnd;
        var _StyleDif;
        var _ChessModeColumn = slideTransition.$ChessMode.$Column || 0;
        var _ChessModeRow = slideTransition.$ChessMode.$Row || 0;

        var _Blocks = slideTransition.$GetBlocks(slideContainerWidth, slideContainerHeight);
        var _FormationInstance = GetFormation(slideTransition);
        var _MaxOrder = _FormationInstance.length - 1;
        var _Period = slideTransition.$Duration + slideTransition.$Delay * _MaxOrder;
        var _EndTime = beginTime + _Period;

        var _SlideOut = slideTransition.$SlideOut;
        var _IsIn;

        //_EndTime += $Jssor$.$IsBrowserChrome() ? 260 : 50;
        _EndTime += 50;

        //#region Private Methods

        function GetFormation(transition) {

            var formationInstance = transition.$Formation(transition);

            return transition.$Reverse ? formationInstance.reverse() : formationInstance;

        }
        //#endregion

        _Self.$EndTime = _EndTime;

        _Self.$ShowFrame = function (time) {
            time -= beginTime;

            var isIn = time < _Period;

            if (isIn || _IsIn) {
                _IsIn = isIn;

                if (!_SlideOut)
                    time = _Period - time;

                var frameIndex = Math.ceil(time / slideTransition.$Interval);

                $Jssor$.$Each(_AnimationStylesArrs, function (value, index) {

                    var itemFrameIndex = Math.max(frameIndex, value.$Min);
                    itemFrameIndex = Math.min(itemFrameIndex, value.length - 1);

                    if (value.$LastFrameIndex != itemFrameIndex) {
                        if (!value.$LastFrameIndex && !_SlideOut) {
                            $Jssor$.$ShowElement(_AnimationBlockItems[index]);
                        }
                        else if (itemFrameIndex == value.$Max && _SlideOut) {
                            $Jssor$.$HideElement(_AnimationBlockItems[index]);
                        }
                        value.$LastFrameIndex = itemFrameIndex;
                        $Jssor$.$SetStylesEx(_AnimationBlockItems[index], value[itemFrameIndex]);
                    }
                });
            }
        };

        //constructor
        {
            slideElement = $Jssor$.$CloneNode(slideElement);
            //$Jssor$.$RemoveAttribute(slideElement, "id");
            if ($Jssor$.$IsBrowserIe9Earlier()) {
                var hasImage = !slideElement["no-image"];
                var slideChildElements = $Jssor$.$FindChildrenByTag(slideElement);
                $Jssor$.$Each(slideChildElements, function (slideChildElement) {
                    if (hasImage || slideChildElement["jssor-slider"])
                        $Jssor$.$CssOpacity(slideChildElement, $Jssor$.$CssOpacity(slideChildElement), true);
                });
            }

            $Jssor$.$Each(_FormationInstance, function (formationItems, order) {
                $Jssor$.$Each(formationItems, function (formationItem) {
                    var row = formationItem[0];
                    var col = formationItem[1];
                    {
                        var columnRow = row + ',' + col;

                        var chessHorizontal = false;
                        var chessVertical = false;
                        var chessRotate = false;

                        if (_ChessModeColumn && col % 2) {
                            if (_ChessModeColumn & 3/*$JssorDirection$.$IsHorizontal(_ChessModeColumn)*/) {
                                chessHorizontal = !chessHorizontal;
                            }
                            if (_ChessModeColumn & 12/*$JssorDirection$.$IsVertical(_ChessModeColumn)*/) {
                                chessVertical = !chessVertical;
                            }

                            if (_ChessModeColumn & 16)
                                chessRotate = !chessRotate;
                        }

                        if (_ChessModeRow && row % 2) {
                            if (_ChessModeRow & 3/*$JssorDirection$.$IsHorizontal(_ChessModeRow)*/) {
                                chessHorizontal = !chessHorizontal;
                            }
                            if (_ChessModeRow & 12/*$JssorDirection$.$IsVertical(_ChessModeRow)*/) {
                                chessVertical = !chessVertical;
                            }
                            if (_ChessModeRow & 16)
                                chessRotate = !chessRotate;
                        }

                        slideTransition.$Top = slideTransition.$Top || (slideTransition.$Clip & 4);
                        slideTransition.$Bottom = slideTransition.$Bottom || (slideTransition.$Clip & 8);
                        slideTransition.$Left = slideTransition.$Left || (slideTransition.$Clip & 1);
                        slideTransition.$Right = slideTransition.$Right || (slideTransition.$Clip & 2);

                        var topBenchmark = chessVertical ? slideTransition.$Bottom : slideTransition.$Top;
                        var bottomBenchmark = chessVertical ? slideTransition.$Top : slideTransition.$Bottom;
                        var leftBenchmark = chessHorizontal ? slideTransition.$Right : slideTransition.$Left;
                        var rightBenchmark = chessHorizontal ? slideTransition.$Left : slideTransition.$Right;

                        slideTransition.$Clip = topBenchmark || bottomBenchmark || leftBenchmark || rightBenchmark;

                        _StyleDif = {};
                        _StyleEnd = { $Top: 0, $Left: 0, $Opacity: 1, $Width: slideContainerWidth, $Height: slideContainerHeight };
                        _StyleStart = $Jssor$.$Extend({}, _StyleEnd);
                        _Block = $Jssor$.$Extend({}, _Blocks[columnRow]);

                        if (slideTransition.$Opacity) {
                            _StyleEnd.$Opacity = 2 - slideTransition.$Opacity;
                        }

                        if (slideTransition.$ZIndex) {
                            _StyleEnd.$ZIndex = slideTransition.$ZIndex;
                            _StyleStart.$ZIndex = 0;
                        }

                        var allowClip = slideTransition.$Cols * slideTransition.$Rows > 1 || slideTransition.$Clip;

                        if (slideTransition.$Zoom || slideTransition.$Rotate) {
                            var allowRotate = true;
                            if ($Jssor$.$IsBrowserIe9Earlier()) {
                                if (slideTransition.$Cols * slideTransition.$Rows > 1)
                                    allowRotate = false;
                                else
                                    allowClip = false;
                            }

                            if (allowRotate) {
                                _StyleEnd.$Zoom = slideTransition.$Zoom ? slideTransition.$Zoom - 1 : 1;
                                _StyleStart.$Zoom = 1;

                                if ($Jssor$.$IsBrowserIe9Earlier() || $Jssor$.$IsBrowserOpera())
                                    _StyleEnd.$Zoom = Math.min(_StyleEnd.$Zoom, 2);

                                var rotate = slideTransition.$Rotate;

                                _StyleEnd.$Rotate = rotate * 360 * ((chessRotate) ? -1 : 1);
                                _StyleStart.$Rotate = 0;
                            }
                        }

                        if (allowClip) {
                            if (slideTransition.$Clip) {
                                var clipScale = slideTransition.$ScaleClip || 1;
                                var blockOffset = _Block.$Offset = {};
                                if (topBenchmark && bottomBenchmark) {
                                    blockOffset.$Top = _Blocks.$Height / 2 * clipScale;
                                    blockOffset.$Bottom = -blockOffset.$Top;
                                }
                                else if (topBenchmark) {
                                    blockOffset.$Bottom = -_Blocks.$Height * clipScale;
                                }
                                else if (bottomBenchmark) {
                                    blockOffset.$Top = _Blocks.$Height * clipScale;
                                }

                                if (leftBenchmark && rightBenchmark) {
                                    blockOffset.$Left = _Blocks.$Width / 2 * clipScale;
                                    blockOffset.$Right = -blockOffset.$Left;
                                }
                                else if (leftBenchmark) {
                                    blockOffset.$Right = -_Blocks.$Width * clipScale;
                                }
                                else if (rightBenchmark) {
                                    blockOffset.$Left = _Blocks.$Width * clipScale;
                                }
                            }

                            _StyleDif.$Clip = _Block;
                            _StyleStart.$Clip = _Blocks[columnRow];
                        }

                        //fly
                        {
                            var chessHor = chessHorizontal ? 1 : -1;
                            var chessVer = chessVertical ? 1 : -1;

                            if (slideTransition.x)
                                _StyleEnd.$Left += slideContainerWidth * slideTransition.x * chessHor;

                            if (slideTransition.y)
                                _StyleEnd.$Top += slideContainerHeight * slideTransition.y * chessVer;
                        }

                        $Jssor$.$Each(_StyleEnd, function (propertyEnd, property) {
                            if ($Jssor$.$IsNumeric(propertyEnd)) {
                                if (propertyEnd != _StyleStart[property]) {
                                    _StyleDif[property] = propertyEnd - _StyleStart[property];
                                }
                            }
                        });

                        _StartStylesArr[columnRow] = _SlideOut ? _StyleStart : _StyleEnd;

                        var animationStylesArr = [];
                        var framesCount = slideTransition.$FramesCount;
                        var virtualFrameCount = Math.round(order * slideTransition.$Delay / slideTransition.$Interval);
                        _AnimationStylesArrs[columnRow] = new Array(virtualFrameCount);
                        _AnimationStylesArrs[columnRow].$Min = virtualFrameCount;
                        _AnimationStylesArrs[columnRow].$Max = virtualFrameCount + framesCount - 1;

                        for (var frameN = 0; frameN <= framesCount; frameN++) {
                            var styleFrameN = $Jssor$.$Cast(_StyleStart, _StyleDif, frameN / framesCount, slideTransition.$Easing, slideTransition.$During, slideTransition.$Round, { $Move: slideTransition.$Move, $OriginalWidth: slideContainerWidth, $OriginalHeight: slideContainerHeight })

                            styleFrameN.$ZIndex = styleFrameN.$ZIndex || 1;

                            _AnimationStylesArrs[columnRow].push(styleFrameN);
                        }

                    } //for
                });
            });

            _FormationInstance.reverse();
            $Jssor$.$Each(_FormationInstance, function (formationItems) {
                $Jssor$.$Each(formationItems, function (formationItem) {
                    var row = formationItem[0];
                    var col = formationItem[1];

                    var columnRow = row + ',' + col;

                    var image = slideElement;
                    if (col || row)
                        image = $Jssor$.$CloneNode(slideElement);

                    $Jssor$.$SetStyles(image, _StartStylesArr[columnRow]);
                    $Jssor$.$CssOverflow(image, "hidden");

                    $Jssor$.$CssPosition(image, "absolute");
                    slideContainer.$AddClipElement(image);
                    _AnimationBlockItems[columnRow] = image;
                    $Jssor$.$ShowElement(image, !_SlideOut);
                });
            });
        }
    }

    function SlideshowProcessor() {
        var _SelfSlideshowProcessor = this;
        var _CurrentTime = 0;

        $JssorAnimator$.call(_SelfSlideshowProcessor, 0, _EndTime);

        _SelfSlideshowProcessor.$OnPositionChange = function (oldPosition, newPosition) {
            if ((newPosition - _CurrentTime) > _SlideshowPerformance) {
                _CurrentTime = newPosition;

                _SlideshowPlayerAbove && _SlideshowPlayerAbove.$ShowFrame(newPosition);
                _SlideshowPlayerBelow && _SlideshowPlayerBelow.$ShowFrame(newPosition);
            }
        };

        _SelfSlideshowProcessor.$Transition = _SlideshowTransition;
    }
    //#endregion

    //member functions
    _SelfSlideshowRunner.$GetTransition = function (slideCount) {
        var n = 0;

        var transitions = slideshowOptions.$Transitions;

        var transitionCount = transitions.length;

        if (_TransitionsOrder) { /*Sequence*/
            //if (transitionCount > slideCount && ($Jssor$.$IsBrowserChrome() || $Jssor$.$IsBrowserSafari() || $Jssor$.$IsBrowserFireFox())) {
            //    transitionCount -= transitionCount % slideCount;
            //}
            n = _TransitionIndex++ % transitionCount;
        }
        else { /*Random*/
            n = Math.floor(Math.random() * transitionCount);
        }

        transitions[n] && (transitions[n].$Index = n);

        return transitions[n];
    };

    _SelfSlideshowRunner.$Initialize = function (slideIndex, prevIndex, slideItem, prevItem, slideshowTransition) {
        $JssorDebug$.$Execute(function () {
            if (_SlideshowPlayerBelow) {
                $JssorDebug$.$Fail("slideshow runner has not been cleared.");
            }
        });

        _SlideshowTransition = slideshowTransition;

        slideshowTransition = EnsureTransitionInstance(slideshowTransition, _SlideshowPerformance);

        _SlideItem = slideItem;
        _PrevItem = prevItem;

        var prevSlideElement = prevItem.$Item;
        var currentSlideElement = slideItem.$Item;
        prevSlideElement["no-image"] = !prevItem.$Image;
        currentSlideElement["no-image"] = !slideItem.$Image;

        var slideElementAbove = prevSlideElement;
        var slideElementBelow = currentSlideElement;

        var slideTransitionAbove = slideshowTransition;
        var slideTransitionBelow = slideshowTransition.$Brother || EnsureTransitionInstance({}, _SlideshowPerformance);

        if (!slideshowTransition.$SlideOut) {
            slideElementAbove = currentSlideElement;
            slideElementBelow = prevSlideElement;
        }

        var shift = slideTransitionBelow.$Shift || 0;

        _SlideshowPlayerBelow = new JssorSlideshowPlayer(slideContainer, slideElementBelow, slideTransitionBelow, Math.max(shift - slideTransitionBelow.$Interval, 0), slideContainerWidth, slideContainerHeight);
        _SlideshowPlayerAbove = new JssorSlideshowPlayer(slideContainer, slideElementAbove, slideTransitionAbove, Math.max(slideTransitionBelow.$Interval - shift, 0), slideContainerWidth, slideContainerHeight);

        _SlideshowPlayerBelow.$ShowFrame(0);
        _SlideshowPlayerAbove.$ShowFrame(0);

        _EndTime = Math.max(_SlideshowPlayerBelow.$EndTime, _SlideshowPlayerAbove.$EndTime);

        _SelfSlideshowRunner.$Index = slideIndex;
    };

    _SelfSlideshowRunner.$Clear = function () {
        slideContainer.$Clear();
        _SlideshowPlayerBelow = null;
        _SlideshowPlayerAbove = null;
    };

    _SelfSlideshowRunner.$GetProcessor = function () {
        var slideshowProcessor = null;

        if (_SlideshowPlayerAbove)
            slideshowProcessor = new SlideshowProcessor();

        return slideshowProcessor;
    };

    //Constructor
    {
        if ($Jssor$.$IsBrowserIe9Earlier() || $Jssor$.$IsBrowserOpera() || (isTouchDevice && $Jssor$.$WebKitVersion() < 537)) {
            _SlideshowPerformance = 16;
        }

        $JssorObject$.call(_SelfSlideshowRunner);
        $JssorAnimator$.call(_SelfSlideshowRunner, -10000000, 10000000);
    }
};

var $JssorSlider$ = window.$JssorSlider$ = function (elmt, options) {
    var _SelfSlider = this;

    //#region Private Classes
    //Conveyor
    function Conveyor() {
        var _SelfConveyor = this;
        $JssorAnimator$.call(_SelfConveyor, -100000000, 200000000);

        _SelfConveyor.$GetCurrentSlideInfo = function () {
            var positionDisplay = _SelfConveyor.$GetPosition_Display();
            var virtualIndex = Math.floor(positionDisplay);
            var slideIndex = GetRealIndex(virtualIndex);
            var slidePosition = positionDisplay - Math.floor(positionDisplay);

            return { $Index: slideIndex, $VirtualIndex: virtualIndex, $Position: slidePosition };
        };

        _SelfConveyor.$OnPositionChange = function (oldPosition, newPosition) {

            var index = Math.floor(newPosition);
            if (index != newPosition && newPosition > oldPosition)
                index++;

            ResetNavigator(index, true);

            _SelfSlider.$TriggerEvent($JssorSlider$.$EVT_POSITION_CHANGE, GetRealIndex(newPosition), GetRealIndex(oldPosition), newPosition, oldPosition);
        };
    }
    //Conveyor

    //Carousel
    function Carousel() {
        var _SelfCarousel = this;

        $JssorAnimator$.call(_SelfCarousel, 0, 0, { $LoopLength: _SlideCount });

        //Carousel Constructor
        {
            $Jssor$.$Each(_SlideItems, function (slideItem) {
                (_Loop & 1) && slideItem.$SetLoopLength(_SlideCount);
                _SelfCarousel.$Chain(slideItem);
                slideItem.$Shift(_ParkingPosition / _StepLength);
            });
        }
    }
    //Carousel

    //Slideshow
    function Slideshow() {
        var _SelfSlideshow = this;
        var _Wrapper = _SlideContainer.$Elmt;

        $JssorAnimator$.call(_SelfSlideshow, -1, 2, { $Easing: $JssorEasing$.$EaseLinear, $Setter: { $Position: SetPosition }, $LoopLength: _SlideCount }, _Wrapper, { $Position: 1 }, { $Position: -2 });

        _SelfSlideshow.$Wrapper = _Wrapper;

        //Slideshow Constructor
        {
            $JssorDebug$.$Execute(function () {
                $Jssor$.$Attribute(_SlideContainer.$Elmt, "debug-id", "slide_container");
            });
        }
    }
    //Slideshow

    //CarouselPlayer
    function CarouselPlayer(carousel, slideshow) {
        var _SelfCarouselPlayer = this;
        var _FromPosition;
        var _ToPosition;
        var _Duration;
        var _StandBy;
        var _StandByPosition;

        $JssorAnimator$.call(_SelfCarouselPlayer, -100000000, 200000000, { $IntervalMax: 100 });

        _SelfCarouselPlayer.$OnStart = function () {
            _IsSliding = true;
            _LoadingTicket = null;

            //EVT_SWIPE_START
            _SelfSlider.$TriggerEvent($JssorSlider$.$EVT_SWIPE_START, GetRealIndex(_Conveyor.$GetPosition()), _Conveyor.$GetPosition());
        };

        _SelfCarouselPlayer.$OnStop = function () {

            _IsSliding = false;
            _StandBy = false;

            var currentSlideInfo = _Conveyor.$GetCurrentSlideInfo();

            //EVT_SWIPE_END
            _SelfSlider.$TriggerEvent($JssorSlider$.$EVT_SWIPE_END, GetRealIndex(_Conveyor.$GetPosition()), _Conveyor.$GetPosition());

            if (!currentSlideInfo.$Position) {
                OnPark(currentSlideInfo.$VirtualIndex, _CurrentSlideIndex);
            }
        };

        _SelfCarouselPlayer.$OnPositionChange = function (oldPosition, newPosition) {

            var toPosition;

            if (_StandBy)
                toPosition = _StandByPosition;
            else {
                toPosition = _ToPosition;

                if (_Duration) {
                    var interPosition = newPosition / _Duration;
                    toPosition = _Options.$SlideEasing(interPosition) * (_ToPosition - _FromPosition) + _FromPosition;
                }
            }

            _Conveyor.$GoToPosition(toPosition);
        };

        _SelfCarouselPlayer.$PlayCarousel = function (fromPosition, toPosition, duration, callback) {
            $JssorDebug$.$Execute(function () {
                if (_SelfCarouselPlayer.$IsPlaying())
                    $JssorDebug$.$Fail("The carousel is already playing.");
            });

            _FromPosition = fromPosition;
            _ToPosition = toPosition;
            _Duration = duration;

            _Conveyor.$GoToPosition(fromPosition);
            _SelfCarouselPlayer.$GoToPosition(0);

            _SelfCarouselPlayer.$PlayToPosition(duration, callback);
        };

        _SelfCarouselPlayer.$StandBy = function (standByPosition) {
            _StandBy = true;
            _StandByPosition = standByPosition;
            _SelfCarouselPlayer.$Play(standByPosition, null, true);
        };

        _SelfCarouselPlayer.$SetStandByPosition = function (standByPosition) {
            _StandByPosition = standByPosition;
        };

        _SelfCarouselPlayer.$MoveCarouselTo = function (position) {
            _Conveyor.$GoToPosition(position);
        };

        //CarouselPlayer Constructor
        {
            _Conveyor = new Conveyor();

            _Conveyor.$Combine(carousel);
            _Conveyor.$Combine(slideshow);
        }
    }
    //CarouselPlayer

    //SlideContainer
    function SlideContainer() {
        var _Self = this;
        var elmt = CreatePanel();

        $Jssor$.$CssZIndex(elmt, 0);
        $Jssor$.$Css(elmt, "pointerEvents", "none");

        _Self.$Elmt = elmt;

        _Self.$AddClipElement = function (clipElement) {
            $Jssor$.$AppendChild(elmt, clipElement);
            $Jssor$.$ShowElement(elmt);
        };

        _Self.$Clear = function () {
            $Jssor$.$HideElement(elmt);
            $Jssor$.$Empty(elmt);
        };
    }
    //SlideContainer

    //SlideItem
    function SlideItem(slideElmt, slideIndex) {

        var _SelfSlideItem = this;

        var _CaptionSliderIn;
        var _CaptionSliderOut;
        var _CaptionSliderCurrent;
        var _IsCaptionSliderPlayingWhenDragStart;

        var _Wrapper;
        var _BaseElement = slideElmt;

        var _LoadingScreen;

        var _ImageItem;
        var _ImageElmts = [];
        var _LinkItemOrigin;
        var _LinkItem;
        var _ImageLoading;
        var _ImageLoaded;
        var _ImageLazyLoading;
        var _ContentRefreshed;

        var _Processor;

        var _PlayerInstanceElement;
        var _PlayerInstance;

        var _SequenceNumber;    //for debug only

        $JssorAnimator$.call(_SelfSlideItem, -_DisplayPieces, _DisplayPieces + 1, { $SlideItemAnimator: true });

        function ResetCaptionSlider(fresh) {
            _CaptionSliderOut && _CaptionSliderOut.$Revert();
            _CaptionSliderIn && _CaptionSliderIn.$Revert();

            RefreshContent(slideElmt, fresh);
            _ContentRefreshed = true;

            _CaptionSliderIn = new _CaptionSliderOptions.$Class(slideElmt, _CaptionSliderOptions, 1);
            $JssorDebug$.$LiveStamp(_CaptionSliderIn, "caption_slider_" + _CaptionSliderCount + "_in");
            _CaptionSliderOut = new _CaptionSliderOptions.$Class(slideElmt, _CaptionSliderOptions);
            $JssorDebug$.$LiveStamp(_CaptionSliderOut, "caption_slider_" + _CaptionSliderCount + "_out");

            $JssorDebug$.$Execute(function () {
                _CaptionSliderCount++;
            });

            _CaptionSliderOut.$GoToPosition(0);
            _CaptionSliderIn.$GoToPosition(0);
        }

        function EnsureCaptionSliderVersion() {
            if (_CaptionSliderIn.$Version < _CaptionSliderOptions.$Version) {
                ResetCaptionSlider();
            }
        }

        //event handling begin
        function LoadImageCompleteEventHandler(completeCallback, loadingScreen, image) {
            if (!_ImageLoaded) {
                _ImageLoaded = true;

                if (_ImageItem && image) {
                    var imageWidth = image.width;
                    var imageHeight = image.height;
                    var fillWidth = imageWidth;
                    var fillHeight = imageHeight;

                    if (imageWidth && imageHeight && _Options.$FillMode) {

                        //0 stretch, 1 contain (keep aspect ratio and put all inside slide), 2 cover (keep aspect ratio and cover whole slide), 4 actual size, 5 contain for large image, actual size for small image, default value is 0
                        if (_Options.$FillMode & 3 && (!(_Options.$FillMode & 4) || imageWidth > _SlideWidth || imageHeight > _SlideHeight)) {
                            var fitHeight = false;
                            var ratio = _SlideWidth / _SlideHeight * imageHeight / imageWidth;

                            if (_Options.$FillMode & 1) {
                                fitHeight = (ratio > 1);
                            }
                            else if (_Options.$FillMode & 2) {
                                fitHeight = (ratio < 1);
                            }
                            fillWidth = fitHeight ? imageWidth * _SlideHeight / imageHeight : _SlideWidth;
                            fillHeight = fitHeight ? _SlideHeight : imageHeight * _SlideWidth / imageWidth;
                        }

                        $Jssor$.$CssWidth(_ImageItem, fillWidth);
                        $Jssor$.$CssHeight(_ImageItem, fillHeight);
                        $Jssor$.$CssTop(_ImageItem, (_SlideHeight - fillHeight) / 2);
                        $Jssor$.$CssLeft(_ImageItem, (_SlideWidth - fillWidth) / 2);
                    }

                    $Jssor$.$CssPosition(_ImageItem, "absolute");

                    _SelfSlider.$TriggerEvent($JssorSlider$.$EVT_LOAD_END, slideIndex);
                }
            }

            $Jssor$.$HideElement(loadingScreen);
            completeCallback && completeCallback(_SelfSlideItem);
        }

        function LoadSlideshowImageCompleteEventHandler(nextIndex, nextItem, slideshowTransition, loadingTicket) {
            if (loadingTicket == _LoadingTicket && _CurrentSlideIndex == slideIndex && _AutoPlay) {
                if (!_Frozen) {
                    var nextRealIndex = GetRealIndex(nextIndex);
                    _SlideshowRunner.$Initialize(nextRealIndex, slideIndex, nextItem, _SelfSlideItem, slideshowTransition);
                    nextItem.$HideContentForSlideshow();
                    _Slideshow.$Locate(nextRealIndex, 1);
                    _Slideshow.$GoToPosition(nextRealIndex);
                    _CarouselPlayer.$PlayCarousel(nextIndex, nextIndex, 0);
                }
            }
        }

        function SlideReadyEventHandler(loadingTicket) {
            if (loadingTicket == _LoadingTicket && _CurrentSlideIndex == slideIndex) {

                if (!_Processor) {
                    var slideshowProcessor = null;
                    if (_SlideshowRunner) {
                        if (_SlideshowRunner.$Index == slideIndex)
                            slideshowProcessor = _SlideshowRunner.$GetProcessor();
                        else
                            _SlideshowRunner.$Clear();
                    }

                    EnsureCaptionSliderVersion();

                    _Processor = new Processor(slideElmt, slideIndex, slideshowProcessor, _SelfSlideItem.$GetCaptionSliderIn(), _SelfSlideItem.$GetCaptionSliderOut());
                    _Processor.$SetPlayer(_PlayerInstance);
                }

                !_Processor.$IsPlaying() && _Processor.$Replay();
            }
        }

        function ParkEventHandler(currentIndex, previousIndex, manualActivate) {
            if (currentIndex == slideIndex) {

                if (currentIndex != previousIndex)
                    _SlideItems[previousIndex] && _SlideItems[previousIndex].$ParkOut();
                else
                    !manualActivate && _Processor && _Processor.$AdjustIdleOnPark();

                _PlayerInstance && _PlayerInstance.$Enable();

                //park in
                var loadingTicket = _LoadingTicket = $Jssor$.$GetNow();
                _SelfSlideItem.$LoadImage($Jssor$.$CreateCallback(null, SlideReadyEventHandler, loadingTicket));
            }
            else {
                var distance = Math.abs(slideIndex - currentIndex);
                var loadRange = _DisplayPieces + _Options.$LazyLoading - 1;
                if (!_ImageLazyLoading || distance <= loadRange) {
                    _SelfSlideItem.$LoadImage();
                }
            }
        }

        function SwipeStartEventHandler() {
            if (_CurrentSlideIndex == slideIndex && _Processor) {
                _Processor.$Stop();
                _PlayerInstance && _PlayerInstance.$Quit();
                _PlayerInstance && _PlayerInstance.$Disable();
                _Processor.$OpenSlideshowPanel();
            }
        }

        function FreezeEventHandler() {
            if (_CurrentSlideIndex == slideIndex && _Processor) {
                _Processor.$Stop();
            }
        }

        function ContentClickEventHandler(event) {
            if (_LastDragSucceded) {
                $Jssor$.$StopEvent(event);

                var checkElement = $Jssor$.$EvtSrc(event);
                while (checkElement && slideElmt !== checkElement) {
                    if (checkElement.tagName == "A") {
                        $Jssor$.$CancelEvent(event);
                    }
                    try {
                        checkElement = checkElement.parentNode;
                    } catch (e) {
                        // Firefox sometimes fires events for XUL elements, which throws
                        // a "permission denied" error. so this is not a child.
                        break;
                    }
                }
            }
        }

        function SlideClickEventHandler(event) {
            if (!_LastDragSucceded) {
                _SelfSlider.$TriggerEvent($JssorSlider$.$EVT_CLICK, slideIndex, event);
            }
        }

        function PlayerAvailableEventHandler() {
            _PlayerInstance = _PlayerInstanceElement.pInstance;
            _Processor && _Processor.$SetPlayer(_PlayerInstance);
        }

        _SelfSlideItem.$LoadImage = function (completeCallback, loadingScreen) {
            loadingScreen = loadingScreen || _LoadingScreen;

            if (_ImageElmts.length && !_ImageLoaded) {

                $Jssor$.$ShowElement(loadingScreen);

                if (!_ImageLoading) {
                    _ImageLoading = true;
                    _SelfSlider.$TriggerEvent($JssorSlider$.$EVT_LOAD_START, slideIndex);

                    $Jssor$.$Each(_ImageElmts, function (imageElmt) {

                        if (!$Jssor$.$Attribute(imageElmt, "src")) {
                            imageElmt.src = $Jssor$.$AttributeEx(imageElmt, "src2");
                            $Jssor$.$CssDisplay(imageElmt, imageElmt["display-origin"]);
                        }
                    });
                }
                $Jssor$.$LoadImages(_ImageElmts, _ImageItem, $Jssor$.$CreateCallback(null, LoadImageCompleteEventHandler, completeCallback, loadingScreen));
            }
            else {
                LoadImageCompleteEventHandler(completeCallback, loadingScreen);
            }
        };

        _SelfSlideItem.$GoForNextSlide = function () {

            var index = slideIndex;
            if (_Options.$AutoPlaySteps < 0)
                index -= _SlideCount;

            var nextIndex = index + _Options.$AutoPlaySteps * _PlayReverse;

            if (_Loop & 2) {
                //Rewind
                nextIndex = GetRealIndex(nextIndex);
            }
            if (!(_Loop & 1)) {
                //Stop at threshold
                nextIndex = Math.max(0, Math.min(nextIndex, _SlideCount - _DisplayPieces));
            }

            if (nextIndex != slideIndex) {
                if (_SlideshowRunner) {
                    var slideshowTransition = _SlideshowRunner.$GetTransition(_SlideCount);

                    if (slideshowTransition) {
                        var loadingTicket = _LoadingTicket = $Jssor$.$GetNow();

                        var nextItem = _SlideItems[GetRealIndex(nextIndex)];
                        return nextItem.$LoadImage($Jssor$.$CreateCallback(null, LoadSlideshowImageCompleteEventHandler, nextIndex, nextItem, slideshowTransition, loadingTicket), _LoadingScreen);
                    }
                }

                PlayTo(nextIndex);
            }
        };

        _SelfSlideItem.$TryActivate = function () {
            ParkEventHandler(slideIndex, slideIndex, true);
        };

        _SelfSlideItem.$ParkOut = function () {
            //park out
            _PlayerInstance && _PlayerInstance.$Quit();
            _PlayerInstance && _PlayerInstance.$Disable();
            _SelfSlideItem.$UnhideContentForSlideshow();
            _Processor && _Processor.$Abort();
            _Processor = null;
            ResetCaptionSlider();
        };

        //for debug only
        _SelfSlideItem.$StampSlideItemElements = function (stamp) {
            stamp = _SequenceNumber + "_" + stamp;

            $JssorDebug$.$Execute(function () {
                if (_ImageItem)
                    $Jssor$.$Attribute(_ImageItem, "debug-id", stamp + "_slide_item_image_id");

                $Jssor$.$Attribute(slideElmt, "debug-id", stamp + "_slide_item_item_id");
            });

            $JssorDebug$.$Execute(function () {
                $Jssor$.$Attribute(_Wrapper, "debug-id", stamp + "_slide_item_wrapper_id");
            });

            $JssorDebug$.$Execute(function () {
                $Jssor$.$Attribute(_LoadingScreen, "debug-id", stamp + "_loading_container_id");
            });
        };

        _SelfSlideItem.$HideContentForSlideshow = function () {
            $Jssor$.$HideElement(slideElmt);
        };

        _SelfSlideItem.$UnhideContentForSlideshow = function () {
            $Jssor$.$ShowElement(slideElmt);
        };

        _SelfSlideItem.$EnablePlayer = function () {
            _PlayerInstance && _PlayerInstance.$Enable();
        };

        function RefreshContent(elmt, fresh, level) {
            $JssorDebug$.$Execute(function () {
                if ($Jssor$.$Attribute(elmt, "jssor-slider"))
                    $JssorDebug$.$Log("Child slider found.");
            });

            if ($Jssor$.$Attribute(elmt, "jssor-slider"))
                return;

            level = level || 0;

            if (!_ContentRefreshed) {
                if (elmt.tagName == "IMG") {
                    _ImageElmts.push(elmt);

                    if (!$Jssor$.$Attribute(elmt, "src")) {
                        _ImageLazyLoading = true;
                        elmt["display-origin"] = $Jssor$.$CssDisplay(elmt);
                        $Jssor$.$HideElement(elmt);
                    }
                }
                if ($Jssor$.$IsBrowserIe9Earlier()) {
                    $Jssor$.$CssZIndex(elmt, ($Jssor$.$CssZIndex(elmt) || 0) + 1);
                }
                if (_Options.$HWA && $Jssor$.$WebKitVersion()) {
                    if ($Jssor$.$WebKitVersion() < 534 || (!_SlideshowEnabled && !$Jssor$.$IsBrowserChrome())) {
                        $Jssor$.$EnableHWA(elmt);
                    }
                }
            }

            var childElements = $Jssor$.$Children(elmt);

            $Jssor$.$Each(childElements, function (childElement, i) {

                var childTagName = childElement.tagName;
                var uAttribute = $Jssor$.$AttributeEx(childElement, "u");
                if (uAttribute == "player" && !_PlayerInstanceElement) {
                    _PlayerInstanceElement = childElement;
                    if (_PlayerInstanceElement.pInstance) {
                        PlayerAvailableEventHandler();
                    }
                    else {
                        $Jssor$.$AddEvent(_PlayerInstanceElement, "dataavailable", PlayerAvailableEventHandler);
                    }
                }

                if (uAttribute == "caption") {
                    if (!$Jssor$.$IsBrowserIE() && !fresh) {

                        //if (childTagName == "A") {
                        //    $Jssor$.$RemoveEvent(childElement, "click", ContentClickEventHandler);
                        //    $Jssor$.$Attribute(childElement, "jssor-content", null);
                        //}

                        var captionElement = $Jssor$.$CloneNode(childElement, false, true);
                        $Jssor$.$InsertBefore(captionElement, childElement, elmt);
                        $Jssor$.$RemoveElement(childElement, elmt);
                        childElement = captionElement;

                        fresh = true;
                    }
                }
                else if (!_ContentRefreshed && !level && !_ImageItem) {

                    if (childTagName == "A") {
                        if ($Jssor$.$AttributeEx(childElement, "u") == "image") {
                            _ImageItem = $Jssor$.$FindChildByTag(childElement, "IMG");

                            $JssorDebug$.$Execute(function () {
                                if (!_ImageItem) {
                                    $JssorDebug$.$Error("slide html code definition error, no 'IMG' found in a 'image with link' slide.\r\n" + elmt.outerHTML);
                                }
                            });
                        }
                        else {
                            _ImageItem = $Jssor$.$FindChild(childElement, "image", true);
                        }

                        if (_ImageItem) {
                            _LinkItemOrigin = childElement;
                            $Jssor$.$SetStyles(_LinkItemOrigin, _StyleDef);

                            _LinkItem = $Jssor$.$CloneNode(_LinkItemOrigin, true);
                            //$Jssor$.$AddEvent(_LinkItem, "click", ContentClickEventHandler);

                            $Jssor$.$CssDisplay(_LinkItem, "block");
                            $Jssor$.$SetStyles(_LinkItem, _StyleDef);
                            $Jssor$.$CssOpacity(_LinkItem, 0);
                            $Jssor$.$Css(_LinkItem, "backgroundColor", "#000");
                        }
                    }
                    else if (childTagName == "IMG" && $Jssor$.$AttributeEx(childElement, "u") == "image") {
                        _ImageItem = childElement;
                    }

                    if (_ImageItem) {
                        _ImageItem.border = 0;
                        $Jssor$.$SetStyles(_ImageItem, _StyleDef);
                    }
                }

                //if (!$Jssor$.$Attribute(childElement, "jssor-content")) {
                //    //cancel click event on <A> element when a drag of slide succeeded
                //    $Jssor$.$AddEvent(childElement, "click", ContentClickEventHandler);
                //    $Jssor$.$Attribute(childElement, "jssor-content", true);
                //}

                RefreshContent(childElement, fresh, level +1);
            });
        }

        _SelfSlideItem.$OnInnerOffsetChange = function (oldOffset, newOffset) {
            var slidePosition = _DisplayPieces - newOffset;

            SetPosition(_Wrapper, slidePosition);

            //following lines are for future usage, not ready yet
            //if (!_IsDragging || !_IsCaptionSliderPlayingWhenDragStart) {
            //    var _DealWithParallax;
            //    if (IsCurrentSlideIndex(slideIndex)) {
            //        if (_CaptionSliderOptions.$PlayOutMode == 2)
            //            _DealWithParallax = true;
            //    }
            //    else {
            //        if (!_CaptionSliderOptions.$PlayInMode) {
            //            //PlayInMode: 0 none
            //            _CaptionSliderIn.$GoToEnd();
            //        }
            //        //else if (_CaptionSliderOptions.$PlayInMode == 1) {
            //        //    //PlayInMode: 1 chain
            //        //    _CaptionSliderIn.$GoToPosition(0);
            //        //}
            //        else if (_CaptionSliderOptions.$PlayInMode == 2) {
            //            //PlayInMode: 2 parallel
            //            _DealWithParallax = true;
            //        }
            //    }

            //    if (_DealWithParallax) {
            //        _CaptionSliderIn.$GoToPosition((_CaptionSliderIn.$GetPosition_OuterEnd() - _CaptionSliderIn.$GetPosition_OuterBegin()) * Math.abs(newOffset - 1) * .8 + _CaptionSliderIn.$GetPosition_OuterBegin());
            //    }
            //}
        };

        _SelfSlideItem.$GetCaptionSliderIn = function () {
            return _CaptionSliderIn;
        };

        _SelfSlideItem.$GetCaptionSliderOut = function () {
            return _CaptionSliderOut;
        };

        _SelfSlideItem.$Index = slideIndex;

        $JssorObject$.call(_SelfSlideItem);

        //SlideItem Constructor
        {

            var thumb = $Jssor$.$FindChild(slideElmt, "thumb", true);
            if (thumb) {
                _SelfSlideItem.$Thumb = $Jssor$.$CloneNode(thumb);
                $Jssor$.$RemoveAttribute(thumb, "id");
                $Jssor$.$HideElement(thumb);
            }
            $Jssor$.$ShowElement(slideElmt);

            _LoadingScreen = $Jssor$.$CloneNode(_LoadingContainer);
            $Jssor$.$CssZIndex(_LoadingScreen, 1000);

            //cancel click event on <A> element when a drag of slide succeeded
            $Jssor$.$AddEvent(slideElmt, "click", SlideClickEventHandler);

            ResetCaptionSlider(true);

            _SelfSlideItem.$Image = _ImageItem;
            _SelfSlideItem.$Link = _LinkItem;

            _SelfSlideItem.$Item = slideElmt;

            _SelfSlideItem.$Wrapper = _Wrapper = slideElmt;
            $Jssor$.$AppendChild(_Wrapper, _LoadingScreen);

            _SelfSlider.$On(203, ParkEventHandler);
            _SelfSlider.$On(28, FreezeEventHandler);
            _SelfSlider.$On(24, SwipeStartEventHandler);

            $JssorDebug$.$Execute(function () {
                _SequenceNumber = _SlideItemCreatedCount++;
            });

            $JssorDebug$.$Execute(function () {
                $Jssor$.$Attribute(_Wrapper, "debug-id", "slide-" + slideIndex);
            });
        }
    }
    //SlideItem

    //Processor
    function Processor(slideElmt, slideIndex, slideshowProcessor, captionSliderIn, captionSliderOut) {

        var _SelfProcessor = this;

        var _ProgressBegin = 0;
        var _SlideshowBegin = 0;
        var _SlideshowEnd;
        var _CaptionInBegin;
        var _IdleBegin;
        var _IdleEnd;
        var _ProgressEnd;

        var _IsSlideshowRunning;
        var _IsRollingBack;

        var _PlayerInstance;
        var _IsPlayerOnService;

        var slideItem = _SlideItems[slideIndex];

        $JssorAnimator$.call(_SelfProcessor, 0, 0);

        function UpdateLink() {

            $Jssor$.$Empty(_LinkContainer);

            if (_ShowLink && _IsSlideshowRunning && slideItem.$Link) {
                $Jssor$.$AppendChild(_LinkContainer, slideItem.$Link);
            }

            $Jssor$.$ShowElement(_LinkContainer, !_IsSlideshowRunning && slideItem.$Image);
        }

        function ProcessCompleteEventHandler() {

            if (_IsRollingBack) {
                _IsRollingBack = false;
                _SelfSlider.$TriggerEvent($JssorSlider$.$EVT_ROLLBACK_END, slideIndex, _IdleEnd, _ProgressBegin, _IdleBegin, _IdleEnd, _ProgressEnd);
                _SelfProcessor.$GoToPosition(_IdleBegin);
            }

            _SelfProcessor.$Replay();
        }

        function PlayerSwitchEventHandler(isOnService) {
            _IsPlayerOnService = isOnService;

            _SelfProcessor.$Stop();
            _SelfProcessor.$Replay();
        }

        _SelfProcessor.$Replay = function () {

            var currentPosition = _SelfProcessor.$GetPosition_Display();

            if (!_IsDragging && !_IsSliding && !_IsPlayerOnService && _CurrentSlideIndex == slideIndex) {

                if (!currentPosition) {
                    if (_SlideshowEnd && !_IsSlideshowRunning) {
                        _IsSlideshowRunning = true;

                        _SelfProcessor.$OpenSlideshowPanel(true);

                        _SelfSlider.$TriggerEvent($JssorSlider$.$EVT_SLIDESHOW_START, slideIndex, _ProgressBegin, _SlideshowBegin, _SlideshowEnd, _ProgressEnd);
                    }

                    UpdateLink();
                }

                var toPosition;
                var stateEvent = $JssorSlider$.$EVT_STATE_CHANGE;

                if (currentPosition != _ProgressEnd) {
                    if (currentPosition == _IdleEnd) {
                        toPosition = _ProgressEnd;
                    }
                    else if (currentPosition == _IdleBegin) {
                        toPosition = _IdleEnd;
                    }
                    else if (!currentPosition) {
                        toPosition = _IdleBegin;
                    }
                    else if (currentPosition > _IdleEnd) {
                        _IsRollingBack = true;
                        toPosition = _IdleEnd;
                        stateEvent = $JssorSlider$.$EVT_ROLLBACK_START;
                    }
                    else {
                        //continue from break (by drag or lock)
                        toPosition = _SelfProcessor.$GetPlayToPosition();
                    }
                }

                _SelfSlider.$TriggerEvent(stateEvent, slideIndex, currentPosition, _ProgressBegin, _IdleBegin, _IdleEnd, _ProgressEnd);

                var allowAutoPlay = _AutoPlay && (!_HoverToPause || _NotOnHover);

                if (currentPosition == _ProgressEnd) {
                    (_IdleEnd != _ProgressEnd && !(_HoverToPause & 12) || allowAutoPlay) && slideItem.$GoForNextSlide();
                }
                else if (allowAutoPlay || currentPosition != _IdleEnd) {
                    _SelfProcessor.$PlayToPosition(toPosition, ProcessCompleteEventHandler);
                }
            }
        };

        _SelfProcessor.$AdjustIdleOnPark = function () {
            if (_IdleEnd == _ProgressEnd && _IdleEnd == _SelfProcessor.$GetPosition_Display())
                _SelfProcessor.$GoToPosition(_IdleBegin);
        };

        _SelfProcessor.$Abort = function () {
            _SlideshowRunner && _SlideshowRunner.$Index == slideIndex && _SlideshowRunner.$Clear();

            var currentPosition = _SelfProcessor.$GetPosition_Display();
            if (currentPosition < _ProgressEnd) {
                _SelfSlider.$TriggerEvent($JssorSlider$.$EVT_STATE_CHANGE, slideIndex, -currentPosition - 1, _ProgressBegin, _IdleBegin, _IdleEnd, _ProgressEnd);
            }
        };

        _SelfProcessor.$OpenSlideshowPanel = function (open) {
            if (slideshowProcessor) {
                $Jssor$.$CssOverflow(_SlideshowPanel, open && slideshowProcessor.$Transition.$Outside ? "" : "hidden");
            }
        };

        _SelfProcessor.$OnInnerOffsetChange = function (oldPosition, newPosition) {

            if (_IsSlideshowRunning && newPosition >= _SlideshowEnd) {
                _IsSlideshowRunning = false;
                UpdateLink();
                slideItem.$UnhideContentForSlideshow();
                _SlideshowRunner.$Clear();

                _SelfSlider.$TriggerEvent($JssorSlider$.$EVT_SLIDESHOW_END, slideIndex, _ProgressBegin, _SlideshowBegin, _SlideshowEnd, _ProgressEnd);
            }

            _SelfSlider.$TriggerEvent($JssorSlider$.$EVT_PROGRESS_CHANGE, slideIndex, newPosition, _ProgressBegin, _IdleBegin, _IdleEnd, _ProgressEnd);
        };

        _SelfProcessor.$SetPlayer = function (playerInstance) {
            if (playerInstance && !_PlayerInstance) {
                _PlayerInstance = playerInstance;

                playerInstance.$On($JssorPlayer$.$EVT_SWITCH, PlayerSwitchEventHandler);
            }
        };

        //Processor Constructor
        {
            if (slideshowProcessor) {
                _SelfProcessor.$Chain(slideshowProcessor);
            }

            _SlideshowEnd = _SelfProcessor.$GetPosition_OuterEnd();
            _CaptionInBegin = _SelfProcessor.$GetPosition_OuterEnd();
            _SelfProcessor.$Chain(captionSliderIn);
            _IdleBegin = captionSliderIn.$GetPosition_OuterEnd();
            _IdleEnd = _IdleBegin + ($Jssor$.$ParseFloat($Jssor$.$AttributeEx(slideElmt, "idle")) || _AutoPlayInterval);

            captionSliderOut.$Shift(_IdleEnd);
            _SelfProcessor.$Combine(captionSliderOut);
            _ProgressEnd = _SelfProcessor.$GetPosition_OuterEnd();
        }
    }
    //Processor
    //#endregion

    function SetPosition(elmt, position) {
        var orientation = _DragOrientation > 0 ? _DragOrientation : _PlayOrientation;
        var x = _StepLengthX * position * (orientation & 1);
        var y = _StepLengthY * position * ((orientation >> 1) & 1);

        x = Math.round(x);
        y = Math.round(y);

        $Jssor$.$CssLeft(elmt, x);
        $Jssor$.$CssTop(elmt, y);
    }

    //#region Event handling begin

    function RecordFreezePoint() {
        _CarouselPlaying_OnFreeze = _IsSliding;
        _PlayToPosition_OnFreeze = _CarouselPlayer.$GetPlayToPosition();
        _Position_OnFreeze = _Conveyor.$GetPosition();
    }

    function Freeze() {
        RecordFreezePoint();

        if (_IsDragging || !_NotOnHover && (_HoverToPause & 12)) {
            _CarouselPlayer.$Stop();

            _SelfSlider.$TriggerEvent($JssorSlider$.$EVT_FREEZE);
        }
    }

    function Unfreeze(byDrag) {

        if (!_IsDragging && (_NotOnHover || !(_HoverToPause & 12)) && !_CarouselPlayer.$IsPlaying()) {

            var currentPosition = _Conveyor.$GetPosition();
            var toPosition = Math.ceil(_Position_OnFreeze);

            if (byDrag && Math.abs(_DragOffsetTotal) >= _Options.$MinDragOffsetToSlide) {
                toPosition = Math.ceil(currentPosition);
                toPosition += _DragIndexAdjust;
            }

            if (!(_Loop & 1)) {
                toPosition = Math.min(_SlideCount - _DisplayPieces, Math.max(toPosition, 0));
            }

            var t = Math.abs(toPosition - currentPosition);
            t = 1 - Math.pow(1 - t, 5);

            if (!_LastDragSucceded && _CarouselPlaying_OnFreeze) {
                _CarouselPlayer.$Continue(_PlayToPosition_OnFreeze);
            }
            else if (currentPosition == toPosition) {
                _CurrentSlideItem.$EnablePlayer();
                _CurrentSlideItem.$TryActivate();
            }
            else {

                _CarouselPlayer.$PlayCarousel(currentPosition, toPosition, t * _SlideDuration);
            }
        }
    }

    function PreventDragSelectionEvent(event) {
        if (!$Jssor$.$AttributeEx($Jssor$.$EvtSrc(event), "nodrag")) {
            $Jssor$.$CancelEvent(event);
        }
    }

    function OnTouchStart(event) {
        OnDragStart(event, 1);
    }

    function OnDragStart(event, touch) {
        event = $Jssor$.$GetEvent(event);
        var eventSrc = $Jssor$.$EvtSrc(event);

        if (!_DragOrientationRegistered && !$Jssor$.$AttributeEx(eventSrc, "nodrag") && RegisterDrag() && (!touch || event.touches.length == 1)) {
            _IsDragging = true;
            _DragInvalid = false;
            _LoadingTicket = null;

            $Jssor$.$AddEvent(document, touch ? "touchmove" : "mousemove", OnDragMove);

            _LastTimeMoveByDrag = $Jssor$.$GetNow() - 50;

            _LastDragSucceded = 0;
            Freeze();

            if (!_CarouselPlaying_OnFreeze)
                _DragOrientation = 0;

            if (touch) {
                var touchPoint = event.touches[0];
                _DragStartMouseX = touchPoint.clientX;
                _DragStartMouseY = touchPoint.clientY;
            }
            else {
                var mousePoint = $Jssor$.$MousePosition(event);

                _DragStartMouseX = mousePoint.x;
                _DragStartMouseY = mousePoint.y;
            }

            _DragOffsetTotal = 0;
            _DragOffsetLastTime = 0;
            _DragIndexAdjust = 0;

            //Trigger EVT_DRAGSTART
            _SelfSlider.$TriggerEvent($JssorSlider$.$EVT_DRAG_START, GetRealIndex(_Position_OnFreeze), _Position_OnFreeze, event);
        }
    }

    function OnDragMove(event) {
        if (_IsDragging) {
            event = $Jssor$.$GetEvent(event);

            var actionPoint;

            if (event.type != "mousemove") {
                var touch = event.touches[0];
                actionPoint = { x: touch.clientX, y: touch.clientY };
            }
            else {
                actionPoint = $Jssor$.$MousePosition(event);
            }

            if (actionPoint) {
                var distanceX = actionPoint.x - _DragStartMouseX;
                var distanceY = actionPoint.y - _DragStartMouseY;


                if (Math.floor(_Position_OnFreeze) != _Position_OnFreeze)
                    _DragOrientation = _DragOrientation || (_PlayOrientation & _DragOrientationRegistered);

                if ((distanceX || distanceY) && !_DragOrientation) {
                    if (_DragOrientationRegistered == 3) {
                        if (Math.abs(distanceY) > Math.abs(distanceX)) {
                            _DragOrientation = 2;
                        }
                        else
                            _DragOrientation = 1;
                    }
                    else {
                        _DragOrientation = _DragOrientationRegistered;
                    }

                    if (_IsTouchDevice && _DragOrientation == 1 && Math.abs(distanceY) - Math.abs(distanceX) > 3) {
                        _DragInvalid = true;
                    }
                }

                if (_DragOrientation) {
                    var distance = distanceY;
                    var stepLength = _StepLengthY;

                    if (_DragOrientation == 1) {
                        distance = distanceX;
                        stepLength = _StepLengthX;
                    }

                    if (!(_Loop & 1)) {
                        if (distance > 0) {
                            var normalDistance = stepLength * _CurrentSlideIndex;
                            var sqrtDistance = distance - normalDistance;
                            if (sqrtDistance > 0) {
                                distance = normalDistance + Math.sqrt(sqrtDistance) * 5;
                            }
                        }

                        if (distance < 0) {
                            var normalDistance = stepLength * (_SlideCount - _DisplayPieces - _CurrentSlideIndex);
                            var sqrtDistance = -distance - normalDistance;

                            if (sqrtDistance > 0) {
                                distance = -normalDistance - Math.sqrt(sqrtDistance) * 5;
                            }
                        }
                    }

                    if (_DragOffsetTotal - _DragOffsetLastTime < -2) {
                        _DragIndexAdjust = 0;
                    }
                    else if (_DragOffsetTotal - _DragOffsetLastTime > 2) {
                        _DragIndexAdjust = -1;
                    }

                    _DragOffsetLastTime = _DragOffsetTotal;
                    _DragOffsetTotal = distance;
                    _PositionToGoByDrag = _Position_OnFreeze - _DragOffsetTotal / stepLength / (_ScaleRatio || 1);

                    if (_DragOffsetTotal && _DragOrientation && !_DragInvalid) {
                        $Jssor$.$CancelEvent(event);
                        if (!_IsSliding) {
                            _CarouselPlayer.$StandBy(_PositionToGoByDrag);
                        }
                        else
                            _CarouselPlayer.$SetStandByPosition(_PositionToGoByDrag);
                    }
                }
            }
        }
    }

    function OnDragEnd() {
        UnregisterDrag();

        if (_IsDragging) {

            _IsDragging = false;

            _LastTimeMoveByDrag = $Jssor$.$GetNow();

            $Jssor$.$RemoveEvent(document, "mousemove", OnDragMove);
            $Jssor$.$RemoveEvent(document, "touchmove", OnDragMove);

            _LastDragSucceded = _DragOffsetTotal;

            _CarouselPlayer.$Stop();

            var currentPosition = _Conveyor.$GetPosition();

            //Trigger EVT_DRAG_END
            _SelfSlider.$TriggerEvent($JssorSlider$.$EVT_DRAG_END, GetRealIndex(currentPosition), currentPosition, GetRealIndex(_Position_OnFreeze), _Position_OnFreeze);

            (_HoverToPause & 12) && RecordFreezePoint();

            Unfreeze(true);
        }
    }

    function SlidesClickEventHandler(event) {
        if (_LastDragSucceded) {
            $Jssor$.$StopEvent(event);

            var checkElement = $Jssor$.$EvtSrc(event);
            while (checkElement && _SlidesContainer !== checkElement) {
                if (checkElement.tagName == "A") {
                    $Jssor$.$CancelEvent(event);
                }
                try {
                    checkElement = checkElement.parentNode;
                } catch (e) {
                    // Firefox sometimes fires events for XUL elements, which throws
                    // a "permission denied" error. so this is not a child.
                    break;
                }
            }
        }
    }
    //#endregion

    function SetCurrentSlideIndex(index) {
        _PrevSlideItem = _SlideItems[_CurrentSlideIndex];
        _PreviousSlideIndex = _CurrentSlideIndex;
        _CurrentSlideIndex = GetRealIndex(index);
        _CurrentSlideItem = _SlideItems[_CurrentSlideIndex];
        ResetNavigator(index);
        return _CurrentSlideIndex;
    }

    function OnPark(slideIndex, prevIndex) {
        _DragOrientation = 0;

        SetCurrentSlideIndex(slideIndex);

        //Trigger EVT_PARK
        _SelfSlider.$TriggerEvent($JssorSlider$.$EVT_PARK, GetRealIndex(slideIndex), prevIndex);
    }

    function ResetNavigator(index, temp) {
        _TempSlideIndex = index;
        $Jssor$.$Each(_Navigators, function (navigator) {
            navigator.$SetCurrentIndex(GetRealIndex(index), index, temp);
        });
    }

    function RegisterDrag() {
        var dragRegistry = $JssorSlider$.$DragRegistry || 0;
        var dragOrientation = _DragEnabled;
        if (_IsTouchDevice)
            (dragOrientation & 1) && (dragOrientation &= 1);
        $JssorSlider$.$DragRegistry |= dragOrientation;

        return (_DragOrientationRegistered = dragOrientation & ~dragRegistry);
    }

    function UnregisterDrag() {
        if (_DragOrientationRegistered) {
            $JssorSlider$.$DragRegistry &= ~_DragEnabled;
            _DragOrientationRegistered = 0;
        }
    }

    function CreatePanel() {
        var div = $Jssor$.$CreateDiv();

        $Jssor$.$SetStyles(div, _StyleDef);
        $Jssor$.$CssPosition(div, "absolute");

        return div;
    }

    function GetRealIndex(index) {
        return (index % _SlideCount + _SlideCount) % _SlideCount;
    }

    function IsCurrentSlideIndex(index) {
        return GetRealIndex(index) == _CurrentSlideIndex;
    }

    function IsPreviousSlideIndex(index) {
        return GetRealIndex(index) == _PreviousSlideIndex;
    }

    //Navigation Request Handler
    function NavigationClickHandler(index, relative) {
        var toIndex = index;

        if (relative) {
            if (!_Loop) {
                //Stop at threshold
                toIndex = Math.min(Math.max(toIndex + _TempSlideIndex, 0), _SlideCount - _DisplayPieces);
                relative = false;
            }
            else if (_Loop & 2) {
                //Rewind
                toIndex = GetRealIndex(toIndex + _TempSlideIndex);
                relative = false;
            }
        }
        else if (_Loop) {
            toIndex = _SelfSlider.$GetVirtualIndex(toIndex);
        }

        PlayTo(toIndex, _Options.$SlideDuration, relative);
    }

    function ShowNavigators() {
        $Jssor$.$Each(_Navigators, function (navigator) {
            navigator.$Show(navigator.$Options.$ChanceToShow <= _NotOnHover);
        });
    }

    function MainContainerMouseLeaveEventHandler() {
        if (!_NotOnHover) {

            //$JssorDebug$.$Log("mouseleave");

            _NotOnHover = 1;

            ShowNavigators();

            if (!_IsDragging) {
                (_HoverToPause & 12) && Unfreeze();
                (_HoverToPause & 3) && _SlideItems[_CurrentSlideIndex].$TryActivate();
            }
        }
    }

    function MainContainerMouseEnterEventHandler() {

        if (_NotOnHover) {

            //$JssorDebug$.$Log("mouseenter");

            _NotOnHover = 0;

            ShowNavigators();

            _IsDragging || !(_HoverToPause & 12) || Freeze();
        }
    }

    function AdjustSlidesContainerSize() {
        _StyleDef = { $Width: _SlideWidth, $Height: _SlideHeight, $Top: 0, $Left: 0 };

        $Jssor$.$Each(_SlideElmts, function (slideElmt, i) {

            $Jssor$.$SetStyles(slideElmt, _StyleDef);
            $Jssor$.$CssPosition(slideElmt, "absolute");
            $Jssor$.$CssOverflow(slideElmt, "hidden");

            $Jssor$.$HideElement(slideElmt);
        });

        $Jssor$.$SetStyles(_LoadingContainer, _StyleDef);
    }

    function PlayToOffset(offset, slideDuration) {
        PlayTo(offset, slideDuration, true);
    }

    function PlayTo(slideIndex, slideDuration, relative) {
        ///	<summary>
        ///		PlayTo( slideIndex [, slideDuration] ); //Play slider to position 'slideIndex' within a period calculated base on 'slideDuration'.
        ///	</summary>
        ///	<param name="slideIndex" type="Number">
        ///		slide slideIndex or position will be playing to
        ///	</param>
        ///	<param name="slideDuration" type="Number" optional="true">
        ///		base slide duration in milliseconds to calculate the whole duration to complete this play request.
        ///	    default value is '$SlideDuration' value which is specified when initialize the slider.
        ///	</param>
        /// http://msdn.microsoft.com/en-us/library/vstudio/bb385682.aspx
        /// http://msdn.microsoft.com/en-us/library/vstudio/hh542720.aspx
        if (_CarouselEnabled && (!_IsDragging && (_NotOnHover || !(_HoverToPause & 12)) || _Options.$NaviQuitDrag)) {
            _IsSliding = true;
            _IsDragging = false;
            _CarouselPlayer.$Stop();

            {
                //Slide Duration
                if (slideDuration == undefined)
                    slideDuration = _SlideDuration;

                var positionDisplay = _Carousel.$GetPosition_Display();
                var positionTo = slideIndex;
                if (relative) {
                    positionTo = positionDisplay + slideIndex;
                    if (slideIndex > 0)
                        positionTo = Math.ceil(positionTo);
                    else
                        positionTo = Math.floor(positionTo);
                }

                if (_Loop & 2) {
                    //Rewind
                    positionTo = GetRealIndex(positionTo);
                }
                if (!(_Loop & 1)) {
                    //Stop at threshold
                    positionTo = Math.max(0, Math.min(positionTo, _SlideCount - _DisplayPieces));
                }

                var positionOffset = (positionTo - positionDisplay) % _SlideCount;
                positionTo = positionDisplay + positionOffset;

                var duration = positionDisplay == positionTo ? 0 : slideDuration * Math.abs(positionOffset);
                duration = Math.min(duration, slideDuration * _DisplayPieces * 1.5);

                _CarouselPlayer.$PlayCarousel(positionDisplay, positionTo, duration || 1);
            }
        }
    }

    //private functions

    //member functions

    _SelfSlider.$PlayTo = PlayTo;

    _SelfSlider.$GoTo = function (slideIndex) {
        ///	<summary>
        ///		instance.$GoTo( slideIndex );   //Go to the specifed slide immediately with no play.
        ///	</summary>
        //PlayTo(slideIndex, 1);
        _Conveyor.$GoToPosition(slideIndex);
    };

    _SelfSlider.$Next = function () {
        ///	<summary>
        ///		instance.$Next();   //Play the slider to next slide.
        ///	</summary>
        PlayToOffset(1);
    };

    _SelfSlider.$Prev = function () {
        ///	<summary>
        ///		instance.$Prev();   //Play the slider to previous slide.
        ///	</summary>
        PlayToOffset(-1);
    };

    _SelfSlider.$Pause = function () {
        ///	<summary>
        ///		instance.$Pause();   //Pause the slider, prevent it from auto playing.
        ///	</summary>
        _AutoPlay = false;
    };

    _SelfSlider.$Play = function () {
        ///	<summary>
        ///		instance.$Play();   //Start auto play if the slider is currently paused.
        ///	</summary>
        if (!_AutoPlay) {
            _AutoPlay = true;
            _SlideItems[_CurrentSlideIndex] && _SlideItems[_CurrentSlideIndex].$TryActivate();
        }
    };

    _SelfSlider.$SetSlideshowTransitions = function (transitions) {
        ///	<summary>
        ///		instance.$SetSlideshowTransitions( transitions );   //Reset slideshow transitions for the slider.
        ///	</summary>
        $JssorDebug$.$Execute(function () {
            if (!transitions || !transitions.length) {
                $JssorDebug$.$Error("Can not set slideshow transitions, no transitions specified.");
            }
        });

        //$Jssor$.$TranslateTransitions(transitions);    //for old transition compatibility
        _Options.$SlideshowOptions.$Transitions = transitions;
    };

    _SelfSlider.$SetCaptionTransitions = function (transitions) {
        ///	<summary>
        ///		instance.$SetCaptionTransitions( transitions );   //Reset caption transitions for the slider.
        ///	</summary>
        $JssorDebug$.$Execute(function () {
            if (!transitions || !transitions.length) {
                $JssorDebug$.$Error("Can not set caption transitions, no transitions specified");
            }
        });

        //$Jssor$.$TranslateTransitions(transitions);    //for old transition compatibility
        _CaptionSliderOptions.$CaptionTransitions = transitions;
        _CaptionSliderOptions.$Version = $Jssor$.$GetNow();
    };

    _SelfSlider.$SlidesCount = function () {
        ///	<summary>
        ///		instance.$SlidesCount();   //Retrieve slides count of the slider.
        ///	</summary>
        return _SlideElmts.length;
    };

    _SelfSlider.$CurrentIndex = function () {
        ///	<summary>
        ///		instance.$CurrentIndex();   //Retrieve current slide index of the slider.
        ///	</summary>
        return _CurrentSlideIndex;
    };

    _SelfSlider.$IsAutoPlaying = function () {
        ///	<summary>
        ///		instance.$IsAutoPlaying();   //Retrieve auto play status of the slider.
        ///	</summary>
        return _AutoPlay;
    };

    _SelfSlider.$IsDragging = function () {
        ///	<summary>
        ///		instance.$IsDragging();   //Retrieve drag status of the slider.
        ///	</summary>
        return _IsDragging;
    };

    _SelfSlider.$IsSliding = function () {
        ///	<summary>
        ///		instance.$IsSliding();   //Retrieve right<-->left sliding status of the slider.
        ///	</summary>
        return _IsSliding;
    };

    _SelfSlider.$IsMouseOver = function () {
        ///	<summary>
        ///		instance.$IsMouseOver();   //Retrieve mouse over status of the slider.
        ///	</summary>
        return !_NotOnHover;
    };

    _SelfSlider.$LastDragSucceded = function () {
        ///	<summary>
        ///		instance.$IsLastDragSucceded();   //Retrieve last drag succeded status, returns 0 if failed, returns drag offset if succeded
        ///	</summary>
        return _LastDragSucceded;
    };

    function OriginalWidth() {
        ///	<summary>
        ///		instance.$OriginalWidth();   //Retrieve original width of the slider.
        ///	</summary>
        return $Jssor$.$CssWidth(_ScaleWrapper || elmt);
    }

    function OriginalHeight() {
        ///	<summary>
        ///		instance.$OriginalHeight();   //Retrieve original height of the slider.
        ///	</summary>
        return $Jssor$.$CssHeight(_ScaleWrapper || elmt);
    }

    _SelfSlider.$OriginalWidth = _SelfSlider.$GetOriginalWidth = OriginalWidth;

    _SelfSlider.$OriginalHeight = _SelfSlider.$GetOriginalHeight = OriginalHeight;

    function Scale(dimension, isHeight) {
        ///	<summary>
        ///		instance.$ScaleWidth();   //Retrieve scaled dimension the slider currently displays.
        ///		instance.$ScaleWidth( dimension );   //Scale the slider to new width and keep aspect ratio.
        ///	</summary>

        if (dimension == undefined)
            return $Jssor$.$CssWidth(elmt);

        if (!_ScaleWrapper) {
            $JssorDebug$.$Execute(function () {
                var originalWidthStr = $Jssor$.$Css(elmt, "width");
                var originalHeightStr = $Jssor$.$Css(elmt, "height");
                var originalWidth = $Jssor$.$CssP(elmt, "width");
                var originalHeight = $Jssor$.$CssP(elmt, "height");

                if (!originalWidthStr || originalWidthStr.indexOf("px") == -1) {
                    $JssorDebug$.$Fail("Cannot scale jssor slider, 'width' of 'outer container' not specified. Please specify 'width' in pixel. e.g. 'width: 600px;'");
                }

                if (!originalHeightStr || originalHeightStr.indexOf("px") == -1) {
                    $JssorDebug$.$Fail("Cannot scale jssor slider, 'height' of 'outer container' not specified. Please specify 'height' in pixel. e.g. 'height: 300px;'");
                }

                if (originalWidthStr.indexOf('%') != -1) {
                    $JssorDebug$.$Fail("Cannot scale jssor slider, 'width' of 'outer container' not valid. Please specify 'width' in pixel. e.g. 'width: 600px;'");
                }

                if (originalHeightStr.indexOf('%') != -1) {
                    $JssorDebug$.$Fail("Cannot scale jssor slider, 'height' of 'outer container' not valid. Please specify 'height' in pixel. e.g. 'height: 300px;'");
                }

                if (!originalWidth) {
                    $JssorDebug$.$Fail("Cannot scale jssor slider, 'width' of 'outer container' not valid. 'width' of 'outer container' should be positive number. e.g. 'width: 600px;'");
                }

                if (!originalHeight) {
                    $JssorDebug$.$Fail("Cannot scale jssor slider, 'height' of 'outer container' not valid. 'height' of 'outer container' should be positive number. e.g. 'height: 300px;'");
                }
            });

            var innerWrapper = $Jssor$.$CreateDiv(document);
            $Jssor$.$ClassName(innerWrapper, $Jssor$.$ClassName(elmt));
            $Jssor$.$CssCssText(innerWrapper, $Jssor$.$CssCssText(elmt));
            $Jssor$.$CssDisplay(innerWrapper, "block");

            $Jssor$.$CssPosition(innerWrapper, "relative");
            $Jssor$.$CssTop(innerWrapper, 0);
            $Jssor$.$CssLeft(innerWrapper, 0);
            $Jssor$.$CssOverflow(innerWrapper, "visible");

            _ScaleWrapper = $Jssor$.$CreateDiv(document);

            $Jssor$.$CssPosition(_ScaleWrapper, "absolute");
            $Jssor$.$CssTop(_ScaleWrapper, 0);
            $Jssor$.$CssLeft(_ScaleWrapper, 0);
            $Jssor$.$CssWidth(_ScaleWrapper, $Jssor$.$CssWidth(elmt));
            $Jssor$.$CssHeight(_ScaleWrapper, $Jssor$.$CssHeight(elmt));
            $Jssor$.$SetStyleTransformOrigin(_ScaleWrapper, "0 0");

            $Jssor$.$AppendChild(_ScaleWrapper, innerWrapper);

            var children = $Jssor$.$Children(elmt);
            $Jssor$.$AppendChild(elmt, _ScaleWrapper);

            $Jssor$.$Css(elmt, "backgroundImage", "");

            //var noMoveElmts = {
            //    "navigator": _BulletNavigatorOptions && _BulletNavigatorOptions.$Scale == false,
            //    "arrowleft": _ArrowNavigatorOptions && _ArrowNavigatorOptions.$Scale == false,
            //    "arrowright": _ArrowNavigatorOptions && _ArrowNavigatorOptions.$Scale == false,
            //    "thumbnavigator": _ThumbnailNavigatorOptions && _ThumbnailNavigatorOptions.$Scale == false,
            //    "thumbwrapper": _ThumbnailNavigatorOptions && _ThumbnailNavigatorOptions.$Scale == false
            //};

            $Jssor$.$Each(children, function (child) {
                $Jssor$.$AppendChild($Jssor$.$AttributeEx(child, "noscale") ? elmt : innerWrapper, child);
                //$Jssor$.$AppendChild(noMoveElmts[$Jssor$.$AttributeEx(child, "u")] ? elmt : innerWrapper, child);
            });
        }

        $JssorDebug$.$Execute(function () {
            if (!dimension || dimension < 0) {
                $JssorDebug$.$Fail("'$ScaleWidth' error, 'dimension' should be positive value.");
            }
        });

        $JssorDebug$.$Execute(function () {
            if (!_InitialScrollWidth) {
                _InitialScrollWidth = _SelfSlider.$Elmt.scrollWidth;
            }
        });

        _ScaleRatio = dimension / (isHeight ? $Jssor$.$CssHeight : $Jssor$.$CssWidth)(_ScaleWrapper);
        $Jssor$.$CssScale(_ScaleWrapper, _ScaleRatio);

        var scaleWidth = isHeight ? (_ScaleRatio * OriginalWidth()) : dimension;
        var scaleHeight = isHeight ? dimension : (_ScaleRatio * OriginalHeight());

        $Jssor$.$CssWidth(elmt, scaleWidth);
        $Jssor$.$CssHeight(elmt, scaleHeight);

        $Jssor$.$Each(_Navigators, function (navigator) {
            navigator.$Relocate(scaleWidth, scaleHeight);
        });
    }

    _SelfSlider.$ScaleHeight = _SelfSlider.$GetScaleHeight = function (height) {
        ///	<summary>
        ///		instance.$ScaleHeight();   //Retrieve scaled height the slider currently displays.
        ///		instance.$ScaleHeight( dimension );   //Scale the slider to new height and keep aspect ratio.
        ///	</summary>

        if (height == undefined)
            return $Jssor$.$CssHeight(elmt);

        Scale(height, true);
    };

    _SelfSlider.$ScaleWidth = _SelfSlider.$SetScaleWidth = _SelfSlider.$GetScaleWidth = Scale;

    _SelfSlider.$GetVirtualIndex = function (index) {
        var parkingIndex = Math.ceil(GetRealIndex(_ParkingPosition / _StepLength));
        var displayIndex = GetRealIndex(index - _TempSlideIndex + parkingIndex);

        if (displayIndex > _DisplayPieces) {
            if (index - _TempSlideIndex > _SlideCount / 2)
                index -= _SlideCount;
            else if (index - _TempSlideIndex <= -_SlideCount / 2)
                index += _SlideCount;
        }
        else {
            index = _TempSlideIndex + displayIndex - parkingIndex;
        }

        return index;
    };

    //member functions

    $JssorObject$.call(_SelfSlider);

    $JssorDebug$.$Execute(function () {
        var outerContainerElmt = $Jssor$.$GetElement(elmt);
        if (!outerContainerElmt)
            $JssorDebug$.$Fail("Outer container '" + elmt + "' not found.");
    });

    //initialize member variables
    _SelfSlider.$Elmt = elmt = $Jssor$.$GetElement(elmt);
    //initialize member variables

    var _InitialScrollWidth;    //for debug only
    var _CaptionSliderCount = 1;    //for debug only

    var _Options = $Jssor$.$Extend({
        $FillMode: 0,                   //[Optional] The way to fill image in slide, 0 stretch, 1 contain (keep aspect ratio and put all inside slide), 2 cover (keep aspect ratio and cover whole slide), 4 actual size, 5 contain for large image, actual size for small image, default value is 0
        $LazyLoading: 1,                //[Optional] For image with  lazy loading format (<IMG src2="url" .../>), by default it will be loaded only when the slide comes.
        //But an integer value (maybe 0, 1, 2 or 3) indicates that how far of nearby slides should be loaded immediately as well, default value is 1.
        $StartIndex: 0,                 //[Optional] Index of slide to display when initialize, default value is 0
        $AutoPlay: false,               //[Optional] Whether to auto play, default value is false
        $Loop: 0,                       //[Optional] Enable loop(circular) of carousel or not, 0: stop, 1: loop, 2 rewind, default value is 1
        $HWA: true,                     //[Optional] Enable hardware acceleration or not, default value is true
        $NaviQuitDrag: true,
        $AutoPlaySteps: 1,              //[Optional] Steps to go of every play (this options applys only when slideshow disabled), default value is 1
        $AutoPlayInterval: 3000,        //[Optional] Interval to play next slide since the previous stopped if a slideshow is auto playing, default value is 3000
        $PauseOnHover: 1,               //[Optional] Whether to pause when mouse over if a slider is auto playing, 0 no pause, 1 pause for desktop, 2 pause for touch device, 3 pause for desktop and touch device, 4 freeze for desktop, 8 freeze for touch device, 12 freeze for desktop and touch device, default value is 1

        $SlideDuration: 500,            //[Optional] Specifies default duration (swipe) for slide in milliseconds, default value is 400
        $SlideEasing: $JssorEasing$.$EaseOutQuad,   //[Optional] Specifies easing for right to left animation, default value is $JssorEasing$.$EaseOutQuad
        $MinDragOffsetToSlide: 20,      //[Optional] Minimum drag offset that trigger slide, default value is 20
        $SlideSpacing: 0, 				//[Optional] Space between each slide in pixels, default value is 0
        $DisplayPieces: 1,              //[Optional] Number of pieces to display (the slideshow would be disabled if the value is set to greater than 1), default value is 1
        $ParkingPosition: 0,            //[Optional] The offset position to park slide (this options applys only when slideshow disabled), default value is 0.
        $UISearchMode: 1,               //[Optional] The way (0 parellel, 1 recursive, default value is recursive) to search UI components (slides container, loading screen, navigator container, arrow navigator container, thumbnail navigator container etc.
        $PlayOrientation: 1,            //[Optional] Orientation to play slide (for auto play, navigation), 1 horizental, 2 vertical, 5 horizental reverse, 6 vertical reverse, default value is 1
        $DragOrientation: 1             //[Optional] Orientation to drag slide, 0 no drag, 1 horizental, 2 vertical, 3 both, default value is 1 (Note that the $DragOrientation should be the same as $PlayOrientation when $DisplayPieces is greater than 1, or parking position is not 0)

    }, options);

    //going to use $Idle instead of $AutoPlayInterval
    if (_Options.$Idle != undefined)
        _Options.$AutoPlayInterval = _Options.$Idle;

    //going to use $Cols instead of $DisplayPieces
    if (_Options.$Cols != undefined)
        _Options.$DisplayPieces = _Options.$Cols;

    //Sodo statement for development time intellisence only
    $JssorDebug$.$Execute(function () {
        _Options = $Jssor$.$Extend({
            $ArrowKeyNavigation: undefined,
            $SlideWidth: undefined,
            $SlideHeight: undefined,
            $SlideshowOptions: undefined,
            $CaptionSliderOptions: undefined,
            $BulletNavigatorOptions: undefined,
            $ArrowNavigatorOptions: undefined,
            $ThumbnailNavigatorOptions: undefined
        },
        _Options);
    });

    var _PlayOrientation = _Options.$PlayOrientation & 3;
    var _PlayReverse = (_Options.$PlayOrientation & 4) / -4 || 1;

    var _SlideshowOptions = _Options.$SlideshowOptions;
    var _CaptionSliderOptions = $Jssor$.$Extend({ $Class: $JssorCaptionSliderBase$, $PlayInMode: 1, $PlayOutMode: 1 }, _Options.$CaptionSliderOptions);
    //$Jssor$.$TranslateTransitions(_CaptionSliderOptions.$CaptionTransitions); //for old transition compatibility
    var _BulletNavigatorOptions = _Options.$BulletNavigatorOptions;
    var _ArrowNavigatorOptions = _Options.$ArrowNavigatorOptions;
    var _ThumbnailNavigatorOptions = _Options.$ThumbnailNavigatorOptions;

    $JssorDebug$.$Execute(function () {
        if (_SlideshowOptions && !_SlideshowOptions.$Class) {
            $JssorDebug$.$Fail("Option $SlideshowOptions error, class not specified.");
        }
    });

    $JssorDebug$.$Execute(function () {
        if (_Options.$CaptionSliderOptions && !_Options.$CaptionSliderOptions.$Class) {
            $JssorDebug$.$Fail("Option $CaptionSliderOptions error, class not specified.");
        }
    });

    $JssorDebug$.$Execute(function () {
        if (_BulletNavigatorOptions && !_BulletNavigatorOptions.$Class) {
            $JssorDebug$.$Fail("Option $BulletNavigatorOptions error, class not specified.");
        }
    });

    $JssorDebug$.$Execute(function () {
        if (_ArrowNavigatorOptions && !_ArrowNavigatorOptions.$Class) {
            $JssorDebug$.$Fail("Option $ArrowNavigatorOptions error, class not specified.");
        }
    });

    $JssorDebug$.$Execute(function () {
        if (_ThumbnailNavigatorOptions && !_ThumbnailNavigatorOptions.$Class) {
            $JssorDebug$.$Fail("Option $ThumbnailNavigatorOptions error, class not specified.");
        }
    });

    var _UISearchNoDeep = !_Options.$UISearchMode;
    var _ScaleWrapper;
    var _SlidesContainer = $Jssor$.$FindChild(elmt, "slides", _UISearchNoDeep);
    var _LoadingContainer = $Jssor$.$FindChild(elmt, "loading", _UISearchNoDeep) || $Jssor$.$CreateDiv(document);

    var _BulletNavigatorContainer = $Jssor$.$FindChild(elmt, "navigator", _UISearchNoDeep);

    var _ArrowLeft = $Jssor$.$FindChild(elmt, "arrowleft", _UISearchNoDeep);
    var _ArrowRight = $Jssor$.$FindChild(elmt, "arrowright", _UISearchNoDeep);

    var _ThumbnailNavigatorContainer = $Jssor$.$FindChild(elmt, "thumbnavigator", _UISearchNoDeep);

    $JssorDebug$.$Execute(function () {
        //if (_BulletNavigatorOptions && !_BulletNavigatorContainer) {
        //    throw new Error("$BulletNavigatorOptions specified but bullet navigator container (<div u=\"navigator\" ...) not defined.");
        //}
        if (_BulletNavigatorContainer && !_BulletNavigatorOptions) {
            throw new Error("Bullet navigator container defined but $BulletNavigatorOptions not specified.");
        }

        //if (_ArrowNavigatorOptions) {
        //    if (!_ArrowLeft) {
        //        throw new Error("$ArrowNavigatorOptions specified, but arrowleft (<span u=\"arrowleft\" ...) not defined.");
        //    }

        //    if (!_ArrowRight) {
        //        throw new Error("$ArrowNavigatorOptions specified, but arrowright (<span u=\"arrowright\" ...) not defined.");
        //    }
        //}

        if ((_ArrowLeft || _ArrowRight) && !_ArrowNavigatorOptions) {
            throw new Error("arrowleft or arrowright defined, but $ArrowNavigatorOptions not specified.");
        }

        //if (_ThumbnailNavigatorOptions && !_ThumbnailNavigatorContainer) {
        //    throw new Error("$ThumbnailNavigatorOptions specified, but thumbnail navigator container (<div u=\"thumbnavigator\" ...) not defined.");
        //}

        if (_ThumbnailNavigatorContainer && !_ThumbnailNavigatorOptions) {
            throw new Error("Thumbnail navigator container defined, but $ThumbnailNavigatorOptions not specified.");
        }
    });

    var _SlidesContainerWidth = $Jssor$.$CssWidth(_SlidesContainer);
    var _SlidesContainerHeight = $Jssor$.$CssHeight(_SlidesContainer);

    $JssorDebug$.$Execute(function () {
        if (isNaN(_SlidesContainerWidth))
            $JssorDebug$.$Fail("Width of slides container wrong specification, it should be specified in pixel (like style='width: 600px;').");

        if (_SlidesContainerWidth == undefined)
            $JssorDebug$.$Fail("Width of slides container not specified, it should be specified in pixel (like style='width: 600px;').");

        if (isNaN(_SlidesContainerHeight))
            $JssorDebug$.$Fail("Height of slides container wrong specification, it should be specified in pixel (like style='height: 300px;').");

        if (_SlidesContainerHeight == undefined)
            $JssorDebug$.$Fail("Height of slides container not specified, it should be specified in pixel (like style='height: 300px;').");

        var slidesContainerOverflow = $Jssor$.$CssOverflow(_SlidesContainer);
        var slidesContainerOverflowX = $Jssor$.$Css(_SlidesContainer, "overflowX");
        var slidesContainerOverflowY = $Jssor$.$Css(_SlidesContainer, "overflowY");
        if (slidesContainerOverflow != "hidden" && (slidesContainerOverflowX != "hidden" || slidesContainerOverflowY != "hidden"))
            $JssorDebug$.$Fail("Overflow of slides container wrong specification, it should be specified as 'hidden' (style='overflow:hidden;').");
    });

    $JssorDebug$.$Execute(function () {
        if (!$Jssor$.$IsNumeric(_Options.$DisplayPieces))
            $JssorDebug$.$Fail("Option $DisplayPieces error, it should be a numeric value and greater than or equal to 1.");

        if (_Options.$DisplayPieces < 1)
            $JssorDebug$.$Fail("Option $DisplayPieces error, it should be greater than or equal to 1.");

        if (_Options.$DisplayPieces > 1 && _Options.$DragOrientation && _Options.$DragOrientation != _PlayOrientation)
            $JssorDebug$.$Fail("Option $DragOrientation error, it should be 0 or the same of $PlayOrientation when $DisplayPieces is greater than 1.");

        if (!$Jssor$.$IsNumeric(_Options.$ParkingPosition))
            $JssorDebug$.$Fail("Option $ParkingPosition error, it should be a numeric value.");

        if (_Options.$ParkingPosition && _Options.$DragOrientation && _Options.$DragOrientation != _PlayOrientation)
            $JssorDebug$.$Fail("Option $DragOrientation error, it should be 0 or the same of $PlayOrientation when $ParkingPosition is not equal to 0.");
    });

    var _StyleDef;

    var _SlideElmts = [];

    {
        var slideElmts = $Jssor$.$Children(_SlidesContainer);
        $Jssor$.$Each(slideElmts, function (slideElmt) {
            if (slideElmt.tagName == "DIV" && !$Jssor$.$AttributeEx(slideElmt, "u")) {
                _SlideElmts.push(slideElmt);
            }
            else if ($Jssor$.$IsBrowserIe9Earlier()) {
                $Jssor$.$CssZIndex(slideElmt, ($Jssor$.$CssZIndex(slideElmt) || 0) + 1);
            }
        });
    }

    $JssorDebug$.$Execute(function () {
        if (_SlideElmts.length < 1) {
            $JssorDebug$.$Error("Slides html code definition error, there must be at least 1 slide to initialize a slider.");
        }
    });

    var _SlideItemCreatedCount = 0; //for debug only
    var _SlideItemReleasedCount = 0;    //for debug only

    var _PreviousSlideIndex;
    var _CurrentSlideIndex = -1;
    var _TempSlideIndex;
    var _PrevSlideItem;
    var _CurrentSlideItem;
    var _SlideCount = _SlideElmts.length;

    var _SlideWidth = _Options.$SlideWidth || _SlidesContainerWidth;
    var _SlideHeight = _Options.$SlideHeight || _SlidesContainerHeight;

    var _SlideSpacing = _Options.$SlideSpacing;
    var _StepLengthX = _SlideWidth + _SlideSpacing;
    var _StepLengthY = _SlideHeight + _SlideSpacing;
    var _StepLength = (_PlayOrientation & 1) ? _StepLengthX : _StepLengthY;
    var _DisplayPieces = Math.min(_Options.$DisplayPieces, _SlideCount);

    var _SlideshowPanel;
    var _CurrentBoardIndex = 0;
    var _DragOrientation;
    var _DragOrientationRegistered;
    var _DragInvalid;

    var _Navigators = [];
    var _BulletNavigator;
    var _ArrowNavigator;
    var _ThumbnailNavigator;

    var _ShowLink;

    var _Frozen;
    var _AutoPlay;
    var _AutoPlaySteps = _Options.$AutoPlaySteps;
    var _HoverToPause = _Options.$PauseOnHover;
    var _AutoPlayInterval = _Options.$AutoPlayInterval;
    var _SlideDuration = _Options.$SlideDuration;

    var _SlideshowRunnerClass;
    var _TransitionsOrder;

    var _SlideshowEnabled;
    var _ParkingPosition;
    var _CarouselEnabled = _DisplayPieces < _SlideCount;
    var _Loop = _CarouselEnabled ? _Options.$Loop : 0;

    var _DragEnabled;
    var _LastDragSucceded;

    var _NotOnHover = 1;   //0 Hovering, 1 Not hovering

    //Variable Definition
    var _IsSliding;
    var _IsDragging;
    var _LoadingTicket;

    //The X position of mouse/touch when a drag start
    var _DragStartMouseX = 0;
    //The Y position of mouse/touch when a drag start
    var _DragStartMouseY = 0;
    var _DragOffsetTotal;
    var _DragOffsetLastTime;
    var _DragIndexAdjust;

    var _Carousel;
    var _Conveyor;
    var _Slideshow;
    var _CarouselPlayer;
    var _SlideContainer = new SlideContainer();
    var _ScaleRatio;

    //$JssorSlider$ Constructor
    {
        _AutoPlay = _Options.$AutoPlay;
        _SelfSlider.$Options = options;

        AdjustSlidesContainerSize();

        $Jssor$.$Attribute(elmt, "jssor-slider", true);

        $Jssor$.$CssZIndex(_SlidesContainer, $Jssor$.$CssZIndex(_SlidesContainer) || 0);
        $Jssor$.$CssPosition(_SlidesContainer, "absolute");
        _SlideshowPanel = $Jssor$.$CloneNode(_SlidesContainer, true);
        $Jssor$.$InsertBefore(_SlideshowPanel, _SlidesContainer);

        if (_SlideshowOptions) {
            _ShowLink = _SlideshowOptions.$ShowLink;
            _SlideshowRunnerClass = _SlideshowOptions.$Class;

            $JssorDebug$.$Execute(function () {
                if (!_SlideshowOptions.$Transitions || !_SlideshowOptions.$Transitions.length) {
                    $JssorDebug$.$Error("Invalid '$SlideshowOptions', no '$Transitions' specified.");
                }
            });

            _SlideshowEnabled = _DisplayPieces == 1 && _SlideCount > 1 && _SlideshowRunnerClass && (!$Jssor$.$IsBrowserIE() || $Jssor$.$BrowserVersion() >= 8);
        }

        _ParkingPosition = (_SlideshowEnabled || _DisplayPieces >= _SlideCount || !(_Loop & 1)) ? 0 : _Options.$ParkingPosition;

        _DragEnabled = ((_DisplayPieces > 1 || _ParkingPosition) ? _PlayOrientation : -1) & _Options.$DragOrientation;

        //SlideBoard
        var _SlideboardElmt = _SlidesContainer;
        var _SlideItems = [];

        var _SlideshowRunner;
        var _LinkContainer;

        var _Device = $Jssor$.$Device();
        var _IsTouchDevice = _Device.$Touchable;

        var _LastTimeMoveByDrag;
        var _Position_OnFreeze;
        var _CarouselPlaying_OnFreeze;
        var _PlayToPosition_OnFreeze;
        var _PositionToGoByDrag;

        //SlideBoard Constructor
        {
            if (_Device.$TouchActionAttr) {
                $Jssor$.$Css(_SlideboardElmt, _Device.$TouchActionAttr, [null, "pan-y", "pan-x", "none"][_DragEnabled] || "");
            }

            _Slideshow = new Slideshow();

            if (_SlideshowEnabled)
                _SlideshowRunner = new _SlideshowRunnerClass(_SlideContainer, _SlideWidth, _SlideHeight, _SlideshowOptions, _IsTouchDevice);

            $Jssor$.$AppendChild(_SlideshowPanel, _Slideshow.$Wrapper);
            $Jssor$.$CssOverflow(_SlidesContainer, "hidden");

            //link container
            {
                _LinkContainer = CreatePanel();
                $Jssor$.$Css(_LinkContainer, "backgroundColor", "#000");
                $Jssor$.$CssOpacity(_LinkContainer, 0);
                $Jssor$.$InsertBefore(_LinkContainer, _SlideboardElmt.firstChild, _SlideboardElmt);
            }

            for (var i = 0; i < _SlideElmts.length; i++) {
                var slideElmt = _SlideElmts[i];
                var slideItem = new SlideItem(slideElmt, i);
                _SlideItems.push(slideItem);
            }

            $Jssor$.$HideElement(_LoadingContainer);

            $JssorDebug$.$Execute(function () {
                $Jssor$.$Attribute(_LoadingContainer, "debug-id", "loading-container");
            });

            _Carousel = new Carousel();
            _CarouselPlayer = new CarouselPlayer(_Carousel, _Slideshow);

            $JssorDebug$.$Execute(function () {
                $Jssor$.$Attribute(_SlideboardElmt, "debug-id", "slide-board");
            });

            if (_DragEnabled) {
                $Jssor$.$AddEvent(_SlidesContainer, "mousedown", OnDragStart);
                $Jssor$.$AddEvent(_SlidesContainer, "touchstart", OnTouchStart);
                $Jssor$.$AddEvent(_SlidesContainer, "dragstart", PreventDragSelectionEvent);
                $Jssor$.$AddEvent(_SlidesContainer, "selectstart", PreventDragSelectionEvent);
                $Jssor$.$AddEvent(document, "mouseup", OnDragEnd);
                $Jssor$.$AddEvent(document, "touchend", OnDragEnd);
                $Jssor$.$AddEvent(document, "touchcancel", OnDragEnd);
                $Jssor$.$AddEvent(window, "blur", OnDragEnd);
            }
        }
        //SlideBoard

        _HoverToPause &= (_IsTouchDevice ? 10 : 5);

        //Bullet Navigator
        if (_BulletNavigatorContainer && _BulletNavigatorOptions) {
            _BulletNavigator = new _BulletNavigatorOptions.$Class(_BulletNavigatorContainer, _BulletNavigatorOptions, OriginalWidth(), OriginalHeight());
            _Navigators.push(_BulletNavigator);
        }

        //Arrow Navigator
        if (_ArrowNavigatorOptions && _ArrowLeft && _ArrowRight) {
            _ArrowNavigatorOptions.$Loop = _Loop;
            _ArrowNavigatorOptions.$DisplayPieces = _DisplayPieces;
            _ArrowNavigator = new _ArrowNavigatorOptions.$Class(_ArrowLeft, _ArrowRight, _ArrowNavigatorOptions, OriginalWidth(), OriginalHeight());
            _Navigators.push(_ArrowNavigator);
        }

        //Thumbnail Navigator
        if (_ThumbnailNavigatorContainer && _ThumbnailNavigatorOptions) {
            _ThumbnailNavigatorOptions.$StartIndex = _Options.$StartIndex;
            _ThumbnailNavigator = new _ThumbnailNavigatorOptions.$Class(_ThumbnailNavigatorContainer, _ThumbnailNavigatorOptions);
            _Navigators.push(_ThumbnailNavigator);
        }

        $Jssor$.$Each(_Navigators, function (navigator) {
            navigator.$Reset(_SlideCount, _SlideItems, _LoadingContainer);
            navigator.$On($JssorNavigatorEvents$.$NAVIGATIONREQUEST, NavigationClickHandler);
        });

        Scale(OriginalWidth());

        $Jssor$.$AddEvent(_SlidesContainer, "click", SlidesClickEventHandler);
        $Jssor$.$AddEvent(elmt, "mouseout", $Jssor$.$MouseOverOutFilter(MainContainerMouseLeaveEventHandler, elmt));
        $Jssor$.$AddEvent(elmt, "mouseover", $Jssor$.$MouseOverOutFilter(MainContainerMouseEnterEventHandler, elmt));

        ShowNavigators();

        //Keyboard Navigation
        if (_Options.$ArrowKeyNavigation) {
            $Jssor$.$AddEvent(document, "keydown", function (e) {
                if (e.keyCode == 37/*$JssorKeyCode$.$LEFT*/) {
                    //Arrow Left
                    PlayToOffset(-1);
                }
                else if (e.keyCode == 39/*$JssorKeyCode$.$RIGHT*/) {
                    //Arrow Right
                    PlayToOffset(1);
                }
            });
        }

        var startPosition = _Options.$StartIndex;
        if (!(_Loop & 1)) {
            startPosition = Math.max(0, Math.min(startPosition, _SlideCount - _DisplayPieces));
        }
        _CarouselPlayer.$PlayCarousel(startPosition, startPosition, 0);
    }
};
var $JssorSlideo$ = window.$JssorSlideo$ = $JssorSlider$;

$JssorSlider$.$EVT_CLICK = 21;
$JssorSlider$.$EVT_DRAG_START = 22;
$JssorSlider$.$EVT_DRAG_END = 23;
$JssorSlider$.$EVT_SWIPE_START = 24;
$JssorSlider$.$EVT_SWIPE_END = 25;

$JssorSlider$.$EVT_LOAD_START = 26;
$JssorSlider$.$EVT_LOAD_END = 27;
$JssorSlider$.$EVT_FREEZE = 28;

$JssorSlider$.$EVT_POSITION_CHANGE = 202;
$JssorSlider$.$EVT_PARK = 203;

$JssorSlider$.$EVT_SLIDESHOW_START = 206;
$JssorSlider$.$EVT_SLIDESHOW_END = 207;

$JssorSlider$.$EVT_PROGRESS_CHANGE = 208;
$JssorSlider$.$EVT_STATE_CHANGE = 209;
$JssorSlider$.$EVT_ROLLBACK_START = 210;
$JssorSlider$.$EVT_ROLLBACK_END = 211;

//(function ($) {
//    jQuery.fn.jssorSlider = function (options) {
//        return this.each(function () {
//            return $(this).data('jssorSlider') || $(this).data('jssorSlider', new $JssorSlider$(this, options));
//        });
//    };
//})(jQuery);

//window.jQuery && (jQuery.fn.jssorSlider = function (options) {
//    return this.each(function () {
//        return jQuery(this).data('jssorSlider') || jQuery(this).data('jssorSlider', new $JssorSlider$(this, options));
//    });
//});

//$JssorBulletNavigator$
var $JssorNavigatorEvents$ = {
    $NAVIGATIONREQUEST: 1,
    $INDEXCHANGE: 2,
    $RESET: 3
};

var $JssorBulletNavigator$ = window.$JssorBulletNavigator$ = function (elmt, options, containerWidth, containerHeight) {
    var self = this;
    $JssorObject$.call(self);

    elmt = $Jssor$.$GetElement(elmt);

    var _Count;
    var _Length;
    var _Width;
    var _Height;
    var _CurrentIndex;
    var _CurrentInnerIndex = 0;
    var _Options;
    var _Steps;
    var _Lanes;
    var _SpacingX;
    var _SpacingY;
    var _Orientation;
    var _ItemPrototype;
    var _PrototypeWidth;
    var _PrototypeHeight;

    var _ButtonElements = [];
    var _Buttons = [];

    function Highlight(index) {
        if (index != -1)
            _Buttons[index].$Selected(index == _CurrentInnerIndex);
    }

    function OnNavigationRequest(index) {
        self.$TriggerEvent($JssorNavigatorEvents$.$NAVIGATIONREQUEST, index * _Steps);
    }

    self.$Elmt = elmt;
    self.$GetCurrentIndex = function () {
        return _CurrentIndex;
    };

    self.$SetCurrentIndex = function (index) {
        if (index != _CurrentIndex) {
            var lastInnerIndex = _CurrentInnerIndex;
            var innerIndex = Math.floor(index / _Steps);
            _CurrentInnerIndex = innerIndex;
            _CurrentIndex = index;

            Highlight(lastInnerIndex);
            Highlight(innerIndex);

            //self.$TriggerEvent($JssorNavigatorEvents$.$INDEXCHANGE, index);
        }
    };

    self.$Show = function (hide) {
        $Jssor$.$ShowElement(elmt, hide);
    };

    var _Located;
    self.$Relocate = function (containerWidth, containerHeight) {
        if (!_Located || _Options.$Scale == false) {
            var containerWidth = $Jssor$.$ParentNode(elmt).clientWidth;
            var containerHeight = $Jssor$.$ParentNode(elmt).clientHeight;

            if (_Options.$AutoCenter & 1) {
                $Jssor$.$CssLeft(elmt, (containerWidth - _Width) / 2);
            }
            if (_Options.$AutoCenter & 2) {
                $Jssor$.$CssTop(elmt, (containerHeight - _Height) / 2);
            }

            _Located = true;
        }
    };

    var _Initialized;
    self.$Reset = function (length) {
        if (!_Initialized) {
            _Length = length;
            _Count = Math.ceil(length / _Steps);
            _CurrentInnerIndex = 0;

            var itemOffsetX = _PrototypeWidth + _SpacingX;
            var itemOffsetY = _PrototypeHeight + _SpacingY;

            var maxIndex = Math.ceil(_Count / _Lanes) - 1;

            _Width = _PrototypeWidth + itemOffsetX * (!_Orientation ? maxIndex : _Lanes - 1);
            _Height = _PrototypeHeight + itemOffsetY * (_Orientation ? maxIndex : _Lanes - 1);

            $Jssor$.$CssWidth(elmt, _Width);
            $Jssor$.$CssHeight(elmt, _Height);

            for (var buttonIndex = 0; buttonIndex < _Count; buttonIndex++) {

                var numberDiv = $Jssor$.$CreateSpan();
                $Jssor$.$InnerText(numberDiv, buttonIndex + 1);

                var div = $Jssor$.$BuildElement(_ItemPrototype, "numbertemplate", numberDiv, true);
                $Jssor$.$CssPosition(div, "absolute");

                var columnIndex = buttonIndex % (maxIndex + 1);
                $Jssor$.$CssLeft(div, !_Orientation ? itemOffsetX * columnIndex : buttonIndex % _Lanes * itemOffsetX);
                $Jssor$.$CssTop(div, _Orientation ? itemOffsetY * columnIndex : Math.floor(buttonIndex / (maxIndex + 1)) * itemOffsetY);

                $Jssor$.$AppendChild(elmt, div);
                _ButtonElements[buttonIndex] = div;

                if (_Options.$ActionMode & 1)
                    $Jssor$.$AddEvent(div, "click", $Jssor$.$CreateCallback(null, OnNavigationRequest, buttonIndex));

                if (_Options.$ActionMode & 2)
                    $Jssor$.$AddEvent(div, "mouseover", $Jssor$.$MouseOverOutFilter($Jssor$.$CreateCallback(null, OnNavigationRequest, buttonIndex), div));

                _Buttons[buttonIndex] = $Jssor$.$Buttonize(div);
            }

            //self.$TriggerEvent($JssorNavigatorEvents$.$RESET);
            _Initialized = true;
        }
    };

    //JssorBulletNavigator Constructor
    {
        self.$Options = _Options = $Jssor$.$Extend({
            $SpacingX: 0,
            $SpacingY: 0,
            $Orientation: 1,
            $ActionMode: 1
        }, options);

        //Sodo statement for development time intellisence only
        $JssorDebug$.$Execute(function () {
            _Options = $Jssor$.$Extend({
                $Steps: undefined,
                $Lanes: undefined
            }, _Options);
        });

        _ItemPrototype = $Jssor$.$FindChild(elmt, "prototype");

        $JssorDebug$.$Execute(function () {
            if (!_ItemPrototype)
                $JssorDebug$.$Fail("Navigator item prototype not defined.");

            if (isNaN($Jssor$.$CssWidth(_ItemPrototype))) {
                $JssorDebug$.$Fail("Width of 'navigator item prototype' not specified.");
            }

            if (isNaN($Jssor$.$CssHeight(_ItemPrototype))) {
                $JssorDebug$.$Fail("Height of 'navigator item prototype' not specified.");
            }
        });

        _PrototypeWidth = $Jssor$.$CssWidth(_ItemPrototype);
        _PrototypeHeight = $Jssor$.$CssHeight(_ItemPrototype);

        $Jssor$.$RemoveElement(_ItemPrototype, elmt);

        _Steps = _Options.$Steps || 1;
        _Lanes = _Options.$Lanes || 1;
        _SpacingX = _Options.$SpacingX;
        _SpacingY = _Options.$SpacingY;
        _Orientation = _Options.$Orientation - 1;

        if (_Options.$Scale == false) {
            $Jssor$.$Attribute(elmt, "noscale", true);
        }
    }
};

var $JssorArrowNavigator$ = window.$JssorArrowNavigator$ = function (arrowLeft, arrowRight, options, containerWidth, containerHeight) {
    var self = this;
    $JssorObject$.call(self);

    $JssorDebug$.$Execute(function () {

        if (!arrowLeft)
            $JssorDebug$.$Fail("Option '$ArrowNavigatorOptions' spepcified, but UI 'arrowleft' not defined. Define 'arrowleft' to enable direct navigation, or remove option '$ArrowNavigatorOptions' to disable direct navigation.");

        if (!arrowRight)
            $JssorDebug$.$Fail("Option '$ArrowNavigatorOptions' spepcified, but UI 'arrowright' not defined. Define 'arrowright' to enable direct navigation, or remove option '$ArrowNavigatorOptions' to disable direct navigation.");

        if (isNaN($Jssor$.$CssWidth(arrowLeft))) {
            $JssorDebug$.$Fail("Width of 'arrow left' not specified.");
        }

        if (isNaN($Jssor$.$CssWidth(arrowRight))) {
            $JssorDebug$.$Fail("Width of 'arrow right' not specified.");
        }

        if (isNaN($Jssor$.$CssHeight(arrowLeft))) {
            //$JssorDebug$.$Fail("Height of 'arrow left' not specified.");
        }

        if (isNaN($Jssor$.$CssHeight(arrowRight))) {
           // $JssorDebug$.$Fail("Height of 'arrow right' not specified.");
        }
    });

    var _Hide;
    var _Length;
    var _CurrentIndex;
    var _Options;
    var _Steps;
    var _ArrowWidth = $Jssor$.$CssWidth(arrowLeft);
    var _ArrowHeight = $Jssor$.$CssHeight(arrowLeft);

    function OnNavigationRequest(steps) {
        self.$TriggerEvent($JssorNavigatorEvents$.$NAVIGATIONREQUEST, steps, true);
    }

    function ShowArrows(hide) {
        $Jssor$.$ShowElement(arrowLeft, hide || !options.$Loop && _CurrentIndex == 0);
        $Jssor$.$ShowElement(arrowRight, hide || !options.$Loop && _CurrentIndex >= _Length - options.$DisplayPieces);

        _Hide = hide;
    }

    self.$GetCurrentIndex = function () {
        return _CurrentIndex;
    };

    self.$SetCurrentIndex = function (index, virtualIndex, temp) {
        if (temp) {
            _CurrentIndex = virtualIndex;
        }
        else {
            _CurrentIndex = index;

            ShowArrows(_Hide);
        }
        //self.$TriggerEvent($JssorNavigatorEvents$.$INDEXCHANGE, index);
    };

    self.$Show = ShowArrows;

    var _Located;
    self.$Relocate = function (conainerWidth, containerHeight) {
        if (!_Located || _Options.$Scale == false) {

            var containerWidth = $Jssor$.$ParentNode(arrowLeft).clientWidth;
            var containerHeight = $Jssor$.$ParentNode(arrowLeft).clientHeight;

            if (_Options.$AutoCenter & 1) {
                $Jssor$.$CssLeft(arrowLeft, (containerWidth - _ArrowWidth) / 2);
                $Jssor$.$CssLeft(arrowRight, (containerWidth - _ArrowWidth) / 2);
            }

            if (_Options.$AutoCenter & 2) {
                $Jssor$.$CssTop(arrowLeft, (containerHeight - _ArrowHeight) / 2);
                $Jssor$.$CssTop(arrowRight, (containerHeight - _ArrowHeight) / 2);
            }

            _Located = true;
        }
    };

    var _Initialized;
    self.$Reset = function (length) {
        _Length = length;
        _CurrentIndex = 0;

        if (!_Initialized) {

            $Jssor$.$AddEvent(arrowLeft, "click", $Jssor$.$CreateCallback(null, OnNavigationRequest, -_Steps));
            $Jssor$.$AddEvent(arrowRight, "click", $Jssor$.$CreateCallback(null, OnNavigationRequest, _Steps));

            $Jssor$.$Buttonize(arrowLeft);
            $Jssor$.$Buttonize(arrowRight);

            _Initialized = true;
        }

        //self.$TriggerEvent($JssorNavigatorEvents$.$RESET);
    };

    //JssorArrowNavigator Constructor
    {
        self.$Options = _Options = $Jssor$.$Extend({
            $Steps: 1
        }, options);

        _Steps = _Options.$Steps;

        if (_Options.$Scale == false) {
            $Jssor$.$Attribute(arrowLeft, "noscale", true);
            $Jssor$.$Attribute(arrowRight, "noscale", true);
        }
    }
};

//$JssorThumbnailNavigator$
var $JssorThumbnailNavigator$ = window.$JssorThumbnailNavigator$ = function (elmt, options) {
    var _Self = this;
    var _Length;
    var _Count;
    var _CurrentIndex;
    var _Options;
    var _NavigationItems = [];

    var _Width;
    var _Height;
    var _Lanes;
    var _SpacingX;
    var _SpacingY;
    var _PrototypeWidth;
    var _PrototypeHeight;
    var _DisplayPieces;

    var _Slider;
    var _CurrentMouseOverIndex = -1;

    var _SlidesContainer;
    var _ThumbnailPrototype;

    $JssorObject$.call(_Self);
    elmt = $Jssor$.$GetElement(elmt);

    function NavigationItem(item, index) {
        var self = this;
        var _Wrapper;
        var _Button;
        var _Thumbnail;

        function Highlight(mouseStatus) {
            _Button.$Selected(_CurrentIndex == index);
        }

        function OnNavigationRequest(byMouseOver, event) {
            if (byMouseOver || !_Slider.$LastDragSucceded()) {
                //var tail = _Lanes - index % _Lanes;
                //var slideVirtualIndex = _Slider.$GetVirtualIndex((index + tail) / _Lanes - 1);
                //var itemVirtualIndex = slideVirtualIndex * _Lanes + _Lanes - tail;
                //_Self.$TriggerEvent($JssorNavigatorEvents$.$NAVIGATIONREQUEST, itemVirtualIndex);

                _Self.$TriggerEvent($JssorNavigatorEvents$.$NAVIGATIONREQUEST, index);
            }

            //$JssorDebug$.$Log("navigation request");
        }

        $JssorDebug$.$Execute(function () {
            self.$Wrapper = undefined;
        });

        self.$Index = index;

        self.$Highlight = Highlight;

        //NavigationItem Constructor
        {
            _Thumbnail = item.$Thumb || item.$Image || $Jssor$.$CreateDiv();
            self.$Wrapper = _Wrapper = $Jssor$.$BuildElement(_ThumbnailPrototype, "thumbnailtemplate", _Thumbnail, true);

            _Button = $Jssor$.$Buttonize(_Wrapper);
            if (_Options.$ActionMode & 1)
                $Jssor$.$AddEvent(_Wrapper, "click", $Jssor$.$CreateCallback(null, OnNavigationRequest, 0));
            if (_Options.$ActionMode & 2)
                $Jssor$.$AddEvent(_Wrapper, "mouseover", $Jssor$.$MouseOverOutFilter($Jssor$.$CreateCallback(null, OnNavigationRequest, 1), _Wrapper));
        }
    }

    _Self.$GetCurrentIndex = function () {
        return _CurrentIndex;
    };

    _Self.$SetCurrentIndex = function (index, virtualIndex, temp) {
        var oldIndex = _CurrentIndex;
        _CurrentIndex = index;
        if (oldIndex != -1)
            _NavigationItems[oldIndex].$Highlight();
        _NavigationItems[index].$Highlight();

        if (!temp) {
            _Slider.$PlayTo(_Slider.$GetVirtualIndex(Math.floor(virtualIndex / _Lanes)));
        }
    };

    _Self.$Show = function (hide) {
        $Jssor$.$ShowElement(elmt, hide);
    };

    _Self.$Relocate = $Jssor$.$EmptyFunction;

    var _Initialized;
    _Self.$Reset = function (length, items, loadingContainer) {
        if (!_Initialized) {
            _Length = length;
            _Count = Math.ceil(_Length / _Lanes);
            _CurrentIndex = -1;
            _DisplayPieces = Math.min(_DisplayPieces, items.length);

            var horizontal = _Options.$Orientation & 1;

            var slideWidth = _PrototypeWidth + (_PrototypeWidth + _SpacingX) * (_Lanes - 1) * (1 - horizontal);
            var slideHeight = _PrototypeHeight + (_PrototypeHeight + _SpacingY) * (_Lanes - 1) * horizontal;

            var slidesContainerWidth = slideWidth + (slideWidth + _SpacingX) * (_DisplayPieces - 1) * horizontal;
            var slidesContainerHeight = slideHeight + (slideHeight + _SpacingY) * (_DisplayPieces - 1) * (1 - horizontal);

            $Jssor$.$CssPosition(_SlidesContainer, "absolute");
            $Jssor$.$CssOverflow(_SlidesContainer, "hidden");
            if (_Options.$AutoCenter & 1) {
                $Jssor$.$CssLeft(_SlidesContainer, (_Width - slidesContainerWidth) / 2);
            }
            if (_Options.$AutoCenter & 2) {
                $Jssor$.$CssTop(_SlidesContainer, (_Height - slidesContainerHeight) / 2);
            }
            //$JssorDebug$.$Execute(function () {
            //    if (!_Options.$AutoCenter) {
            //        var slidesContainerTop = $Jssor$.$CssTop(_SlidesContainer);
            //        var slidesContainerLeft = $Jssor$.$CssLeft(_SlidesContainer);

            //        if (isNaN(slidesContainerTop)) {
            //            $JssorDebug$.$Fail("Position 'top' wrong specification of thumbnail navigator slides container (<div u=\"thumbnavigator\">...<div u=\"slides\">), \r\nwhen option $ThumbnailNavigatorOptions.$AutoCenter set to 0, it should be specified in pixel (like <div u=\"slides\" style=\"top: 0px;\">)");
            //        }

            //        if (isNaN(slidesContainerLeft)) {
            //            $JssorDebug$.$Fail("Position 'left' wrong specification of thumbnail navigator slides container (<div u=\"thumbnavigator\">...<div u=\"slides\">), \r\nwhen option $ThumbnailNavigatorOptions.$AutoCenter set to 0, it should be specified in pixel (like <div u=\"slides\" style=\"left: 0px;\">)");
            //        }
            //    }
            //});
            $Jssor$.$CssWidth(_SlidesContainer, slidesContainerWidth);
            $Jssor$.$CssHeight(_SlidesContainer, slidesContainerHeight);

            var slideItemElmts = [];
            $Jssor$.$Each(items, function (item, index) {
                var navigationItem = new NavigationItem(item, index);
                var navigationItemWrapper = navigationItem.$Wrapper;

                var columnIndex = Math.floor(index / _Lanes);
                var laneIndex = index % _Lanes;

                $Jssor$.$CssLeft(navigationItemWrapper, (_PrototypeWidth + _SpacingX) * laneIndex * (1 - horizontal));
                $Jssor$.$CssTop(navigationItemWrapper, (_PrototypeHeight + _SpacingY) * laneIndex * horizontal);

                if (!slideItemElmts[columnIndex]) {
                    slideItemElmts[columnIndex] = $Jssor$.$CreateDiv();
                    $Jssor$.$AppendChild(_SlidesContainer, slideItemElmts[columnIndex]);
                }

                $Jssor$.$AppendChild(slideItemElmts[columnIndex], navigationItemWrapper);

                _NavigationItems.push(navigationItem);
            });

            var thumbnailSliderOptions = $Jssor$.$Extend({
                $HWA: false,
                $AutoPlay: false,
                $NaviQuitDrag: false,
                $SlideWidth: slideWidth,
                $SlideHeight: slideHeight,
                $SlideSpacing: _SpacingX * horizontal + _SpacingY * (1 - horizontal),
                $MinDragOffsetToSlide: 12,
                $SlideDuration: 200,
                $PauseOnHover: 1,
                $PlayOrientation: _Options.$Orientation,
                $DragOrientation: _Options.$DisableDrag ? 0 : _Options.$Orientation
            }, _Options);

            _Slider = new $JssorSlider$(elmt, thumbnailSliderOptions);

            _Initialized = true;
        }

        //_Self.$TriggerEvent($JssorNavigatorEvents$.$RESET);
    };

    //JssorThumbnailNavigator Constructor
    {
        _Self.$Options = _Options = $Jssor$.$Extend({
            $SpacingX: 3,
            $SpacingY: 3,
            $DisplayPieces: 1,
            $Orientation: 1,
            $AutoCenter: 3,
            $ActionMode: 1
        }, options);

        //going to use $Rows instead of $Lanes
        if (_Options.$Rows != undefined)
            _Options.$Lanes = _Options.$Rows;

        //Sodo statement for development time intellisence only
        $JssorDebug$.$Execute(function () {
            _Options = $Jssor$.$Extend({
                $Lanes: undefined,
                $Width: undefined,
                $Height: undefined
            }, _Options);
        });

        _Width = $Jssor$.$CssWidth(elmt);
        _Height = $Jssor$.$CssHeight(elmt);

        $JssorDebug$.$Execute(function () {
            if (!_Width)
                $JssorDebug$.$Fail("width of 'thumbnavigator' container not specified.");
            if (!_Height)
                $JssorDebug$.$Fail("height of 'thumbnavigator' container not specified.");
        });

        _SlidesContainer = $Jssor$.$FindChild(elmt, "slides", true);
        _ThumbnailPrototype = $Jssor$.$FindChild(_SlidesContainer, "prototype");

        $JssorDebug$.$Execute(function () {
            if (!_ThumbnailPrototype)
                $JssorDebug$.$Fail("prototype of 'thumbnavigator' not defined.");
        });

        _PrototypeWidth = $Jssor$.$CssWidth(_ThumbnailPrototype);
        _PrototypeHeight = $Jssor$.$CssHeight(_ThumbnailPrototype);

        $Jssor$.$RemoveElement(_ThumbnailPrototype, _SlidesContainer);

        _Lanes = _Options.$Lanes || 1;
        _SpacingX = _Options.$SpacingX;
        _SpacingY = _Options.$SpacingY;
        _DisplayPieces = _Options.$DisplayPieces;

        if (_Options.$Scale == false) {
            $Jssor$.$Attribute(elmt, "noscale", true);
        }
    }
};

//$JssorCaptionSliderBase$
function $JssorCaptionSliderBase$() {
    $JssorAnimator$.call(this, 0, 0);
    this.$Revert = $Jssor$.$EmptyFunction;
}

var $JssorCaptionSlider$ = window.$JssorCaptionSlider$ = function (container, captionSlideOptions, playIn) {
    $JssorDebug$.$Execute(function () {
        if (!captionSlideOptions.$CaptionTransitions) {
            $JssorDebug$.$Error("'$CaptionSliderOptions' option error, '$CaptionSliderOptions.$CaptionTransitions' not specified.");
        }
    });

    var _Self = this;
    var _ImmediateOutCaptionHanger;
    var _PlayMode = playIn ? captionSlideOptions.$PlayInMode : captionSlideOptions.$PlayOutMode;

    var _CaptionTransitions = captionSlideOptions.$CaptionTransitions;
    var _CaptionTuningFetcher = { $Transition: "t", $Delay: "d", $Duration: "du", x: "x", y: "y", $Rotate: "r", $Zoom: "z", $Opacity: "f", $BeginTime: "b" };
    var _CaptionTuningTransfer = {
        $Default: function (value, tuningValue) {
            if (!isNaN(tuningValue.$Value))
                value = tuningValue.$Value;
            else
                value *= tuningValue.$Percent;

            return value;
        },
        $Opacity: function (value, tuningValue) {
            return this.$Default(value - 1, tuningValue);
        }
    };
    _CaptionTuningTransfer.$Zoom = _CaptionTuningTransfer.$Opacity;

    $JssorAnimator$.call(_Self, 0, 0);

    function GetCaptionItems(element, level) {

        var itemsToPlay = [];
        var lastTransitionName;
        var namedTransitions = [];
        var namedTransitionOrders = [];

        function FetchRawTransition(captionElmt, index) {
            var rawTransition = {};

            $Jssor$.$Each(_CaptionTuningFetcher, function (fetchAttribute, fetchProperty) {
                var attributeValue = $Jssor$.$AttributeEx(captionElmt, fetchAttribute + (index || ""));
                if (attributeValue) {
                    var propertyValue = {};

                    if (fetchAttribute == "t") {
                        propertyValue.$Value = attributeValue;
                    }
                    else if (attributeValue.indexOf("%") + 1)
                        propertyValue.$Percent = $Jssor$.$ParseFloat(attributeValue) / 100;
                    else
                        propertyValue.$Value = $Jssor$.$ParseFloat(attributeValue);

                    rawTransition[fetchProperty] = propertyValue;
                }
            });

            return rawTransition;
        }

        function GetRandomTransition() {
            return _CaptionTransitions[Math.floor(Math.random() * _CaptionTransitions.length)];
        }

        function EvaluateCaptionTransition(transitionName) {

            var transition;

            if (transitionName == "*") {
                transition = GetRandomTransition();
            }
            else if (transitionName) {

                //indexed transition allowed, just the same as named transition
                var tempTransition = _CaptionTransitions[$Jssor$.$ParseInt(transitionName)] || _CaptionTransitions[transitionName];

                if ($Jssor$.$IsArray(tempTransition)) {
                    if (transitionName != lastTransitionName) {
                        lastTransitionName = transitionName;
                        namedTransitionOrders[transitionName] = 0;

                        namedTransitions[transitionName] = tempTransition[Math.floor(Math.random() * tempTransition.length)];
                    }
                    else {
                        namedTransitionOrders[transitionName]++;
                    }

                    tempTransition = namedTransitions[transitionName];

                    if ($Jssor$.$IsArray(tempTransition)) {
                        tempTransition = tempTransition.length && tempTransition[namedTransitionOrders[transitionName] % tempTransition.length];

                        if ($Jssor$.$IsArray(tempTransition)) {
                            //got transition from array level 3, random for all captions
                            tempTransition = tempTransition[Math.floor(Math.random() * tempTransition.length)];
                        }
                        //else {
                        //    //got transition from array level 2, in sequence for all adjacent captions with same name specified
                        //    transition = tempTransition;
                        //}
                    }
                    //else {
                    //    //got transition from array level 1, random but same for all adjacent captions with same name specified
                    //    transition = tempTransition;
                    //}
                }
                //else {
                //    //got transition directly from a simple transition object
                //    transition = tempTransition;
                //}

                transition = tempTransition;

                if ($Jssor$.$IsString(transition))
                    transition = EvaluateCaptionTransition(transition);
            }

            return transition;
        }

        var captionElmts = $Jssor$.$Children(element);
        $Jssor$.$Each(captionElmts, function (captionElmt, i) {

            var transitionsWithTuning = [];
            transitionsWithTuning.$Elmt = captionElmt;
            var isCaption = $Jssor$.$AttributeEx(captionElmt, "u") == "caption";

            $Jssor$.$Each(playIn ? [0, 3] : [2], function (j, k) {

                if (isCaption) {
                    var transition;
                    var rawTransition;

                    if (j != 2 || !$Jssor$.$AttributeEx(captionElmt, "t3")) {
                        rawTransition = FetchRawTransition(captionElmt, j);

                        if (j == 2 && !rawTransition.$Transition) {
                            rawTransition.$Delay = rawTransition.$Delay || { $Value: 0 };
                            rawTransition = $Jssor$.$Extend(FetchRawTransition(captionElmt, 0), rawTransition);
                        }
                    }

                    if (rawTransition && rawTransition.$Transition) {

                        transition = EvaluateCaptionTransition(rawTransition.$Transition.$Value);

                        if (transition) {

                            //var transitionWithTuning = $Jssor$.$Extend({ $Delay: 0, $ScaleHorizontal: 1, $ScaleVertical: 1 }, transition);
                            var transitionWithTuning = $Jssor$.$Extend({ $Delay: 0 }, transition);

                            $Jssor$.$Each(rawTransition, function (rawPropertyValue, propertyName) {
                                var tuningPropertyValue = (_CaptionTuningTransfer[propertyName] || _CaptionTuningTransfer.$Default).apply(_CaptionTuningTransfer, [transitionWithTuning[propertyName], rawTransition[propertyName]]);
                                if (!isNaN(tuningPropertyValue))
                                    transitionWithTuning[propertyName] = tuningPropertyValue;
                            });

                            if (!k) {
                                if (rawTransition.$BeginTime)
                                    transitionWithTuning.$BeginTime = rawTransition.$BeginTime.$Value || 0;
                                else if ((_PlayMode) & 2)
                                    transitionWithTuning.$BeginTime = 0;
                            }
                        }
                    }

                    transitionsWithTuning.push(transitionWithTuning);
                }

                if ((level % 2) && !k) {
                    transitionsWithTuning.$Children = GetCaptionItems(captionElmt, level + 1);
                }
            });

            itemsToPlay.push(transitionsWithTuning);
        });

        return itemsToPlay;
    }

    function CreateAnimator(item, transition, immediateOut) {

        var animatorOptions = {
            $Easing: transition.$Easing,
            $Round: transition.$Round,
            $During: transition.$During,
            $Reverse: playIn && !immediateOut
        };

        $JssorDebug$.$Execute(function () {
            animatorOptions.$CaptionAnimator = true;
        });

        var captionItem = item;
        var captionParent = $Jssor$.$ParentNode(item);

        var captionItemWidth = $Jssor$.$CssWidth(captionItem);
        var captionItemHeight = $Jssor$.$CssHeight(captionItem);
        var captionParentWidth = $Jssor$.$CssWidth(captionParent);
        var captionParentHeight = $Jssor$.$CssHeight(captionParent);

        var fromStyles = {};
        var difStyles = {};
        var scaleClip = transition.$ScaleClip || 1;

        //Opacity
        if (transition.$Opacity) {
            difStyles.$Opacity = 1 - transition.$Opacity;
        }

        animatorOptions.$OriginalWidth = captionItemWidth;
        animatorOptions.$OriginalHeight = captionItemHeight;

        //Transform
        if (transition.$Zoom || transition.$Rotate) {
            difStyles.$Zoom = (transition.$Zoom || 2) - 2;

            if ($Jssor$.$IsBrowserIe9Earlier() || $Jssor$.$IsBrowserOpera()) {
                difStyles.$Zoom = Math.min(difStyles.$Zoom, 1);
            }

            fromStyles.$Zoom = 1;

            var rotate = transition.$Rotate || 0;

            difStyles.$Rotate = rotate * 360;
            fromStyles.$Rotate = 0;
        }
            //Clip
        else if (transition.$Clip) {
            var fromStyleClip = { $Top: 0, $Right: captionItemWidth, $Bottom: captionItemHeight, $Left: 0 };
            var toStyleClip = $Jssor$.$Extend({}, fromStyleClip);

            var blockOffset = toStyleClip.$Offset = {};

            var topBenchmark = transition.$Clip & 4;
            var bottomBenchmark = transition.$Clip & 8;
            var leftBenchmark = transition.$Clip & 1;
            var rightBenchmark = transition.$Clip & 2;

            if (topBenchmark && bottomBenchmark) {
                blockOffset.$Top = captionItemHeight / 2 * scaleClip;
                blockOffset.$Bottom = -blockOffset.$Top;
            }
            else if (topBenchmark)
                blockOffset.$Bottom = -captionItemHeight * scaleClip;
            else if (bottomBenchmark)
                blockOffset.$Top = captionItemHeight * scaleClip;

            if (leftBenchmark && rightBenchmark) {
                blockOffset.$Left = captionItemWidth / 2 * scaleClip;
                blockOffset.$Right = -blockOffset.$Left;
            }
            else if (leftBenchmark)
                blockOffset.$Right = -captionItemWidth * scaleClip;
            else if (rightBenchmark)
                blockOffset.$Left = captionItemWidth * scaleClip;

            animatorOptions.$Move = transition.$Move;
            difStyles.$Clip = toStyleClip;
            fromStyles.$Clip = fromStyleClip;
        }

        //Fly
        {
            var toLeft = 0;
            var toTop = 0;

            if (transition.x)
                toLeft -= captionParentWidth * transition.x;

            if (transition.y)
                toTop -= captionParentHeight * transition.y;

            if (toLeft || toTop || animatorOptions.$Move) {
                difStyles.$Left = toLeft;
                difStyles.$Top = toTop;
            }
        }

        //duration
        var duration = transition.$Duration;

        fromStyles = $Jssor$.$Extend(fromStyles, $Jssor$.$GetStyles(captionItem, difStyles));

        animatorOptions.$Setter = $Jssor$.$StyleSetterEx();

        return new $JssorAnimator$(transition.$Delay, duration, animatorOptions, captionItem, fromStyles, difStyles);
    }

    function CreateAnimators(streamLineLength, captionItems) {

        $Jssor$.$Each(captionItems, function (captionItem, i) {

            $JssorDebug$.$Execute(function () {
                if (captionItem.length) {
                    var top = $Jssor$.$CssTop(captionItem.$Elmt);
                    var left = $Jssor$.$CssLeft(captionItem.$Elmt);
                    var width = $Jssor$.$CssWidth(captionItem.$Elmt);
                    var height = $Jssor$.$CssHeight(captionItem.$Elmt);

                    var error = null;

                    if (isNaN(top))
                        error = "Style 'top' for caption not specified. Please always specify caption like 'position: absolute; top: ...px; left: ...px; width: ...px; height: ...px;'.";
                    else if (isNaN(left))
                        error = "Style 'left' not specified. Please always specify caption like 'position: absolute; top: ...px; left: ...px; width: ...px; height: ...px;'.";
                    else if (isNaN(width))
                        error = "Style 'width' not specified. Please always specify caption like 'position: absolute; top: ...px; left: ...px; width: ...px; height: ...px;'.";
                    else if (isNaN(height))
                        error = "Style 'height' not specified. Please always specify caption like 'position: absolute; top: ...px; left: ...px; width: ...px; height: ...px;'.";

                    if (error)
                        $JssorDebug$.$Error("Caption " + (i + 1) + " definition error, \r\n" + error + "\r\n" + captionItem.$Elmt.outerHTML);
                }
            });

            var animator;
            var captionElmt = captionItem.$Elmt;
            var transition = captionItem[0];
            var transition3 = captionItem[1];

            if (transition) {

                animator = CreateAnimator(captionElmt, transition);
                streamLineLength = animator.$Locate(transition.$BeginTime == undefined ? streamLineLength : transition.$BeginTime, 1);
            }

            streamLineLength = CreateAnimators(streamLineLength, captionItem.$Children);

            if (transition3) {
                var animator3 = CreateAnimator(captionElmt, transition3, 1);
                animator3.$Locate(streamLineLength, 1);
                _Self.$Combine(animator3);
                _ImmediateOutCaptionHanger.$Combine(animator3);
            }

            if (animator)
                _Self.$Combine(animator);
        });

        return streamLineLength;
    }

    _Self.$Revert = function () {
        _Self.$GoToPosition(_Self.$GetPosition_OuterEnd() * (playIn || 0));
        _ImmediateOutCaptionHanger.$GoToPosition(0);
    };

    //Constructor
    {
        _ImmediateOutCaptionHanger = new $JssorAnimator$(0, 0);

        CreateAnimators(0, _PlayMode ? GetCaptionItems(container, 1) : []);
    }
};

var $JssorCaptionSlideo$ = function (container, captionSlideoOptions, playIn) {
    $JssorDebug$.$Execute(function () {
        if (!captionSlideoOptions.$CaptionTransitions) {
            $JssorDebug$.$Error("'$CaptionSlideoOptions' option error, '$CaptionSlideoOptions.$CaptionTransitions' not specified.");
        }
        else if (!$Jssor$.$IsArray(captionSlideoOptions.$CaptionTransitions)) {
            $JssorDebug$.$Error("'$CaptionSlideoOptions' option error, '$CaptionSlideoOptions.$CaptionTransitions' is not an array.");
        }
    });

    var _This = this;

    var _Easings;
    var _TransitionConverter = {};
    var _CaptionTransitions = captionSlideoOptions.$CaptionTransitions;

    $JssorAnimator$.call(_This, 0, 0);

    function ConvertTransition(transition, isEasing) {
        $Jssor$.$Each(transition, function (property, name) {
            var performName = _TransitionConverter[name];
            if (performName) {
                if (isEasing || name == "e") {
                    if ($Jssor$.$IsNumeric(property)) {
                        property = _Easings[property];
                    }
                    else if ($Jssor$.$IsPlainObject(property)) {
                        ConvertTransition(property, true);
                    }
                }

                transition[performName] = property;
                delete transition[name];
            }
        });
    }

    function GetCaptionItems(element, level) {

        var itemsToPlay = [];

        var captionElmts = $Jssor$.$Children(element);
        $Jssor$.$Each(captionElmts, function (captionElmt, i) {
            var isCaption = $Jssor$.$AttributeEx(captionElmt, "u") == "caption";
            if (isCaption) {
                var transitionName = $Jssor$.$AttributeEx(captionElmt, "t");
                var transition = _CaptionTransitions[$Jssor$.$ParseInt(transitionName)] || _CaptionTransitions[transitionName];

                var transitionName2 = $Jssor$.$AttributeEx(captionElmt, "t2");
                var transition2 = _CaptionTransitions[$Jssor$.$ParseInt(transitionName2)] || _CaptionTransitions[transitionName2];

                var itemToPlay = { $Elmt: captionElmt, $Transition: transition, $Transition2: transition2 };
                if (level < 3) {
                    itemsToPlay.concat(GetCaptionItems(captionElmt, level + 1));
                }
                itemsToPlay.push(itemToPlay);
            }
        });

        return itemsToPlay;
    }

    function CreateAnimator(captionElmt, transitions, lastStyles, forIn) {

        $Jssor$.$Each(transitions, function (transition) {
            ConvertTransition(transition);

            var animatorOptions = {
                $Easing: transition.$Easing,
                $Round: transition.$Round,
                $During: transition.$During,
                $Setter: $Jssor$.$StyleSetterEx()
            };

            var fromStyles = $Jssor$.$Extend($Jssor$.$GetStyles(captionItem, transition), lastStyles);

            var animator = new $JssorAnimator$(transition.b || 0, transition.d, animatorOptions, captionElmt, fromStyles, transition);

            !forIn == !playIn && _This.$Combine(animator);

            var castOptions;
            lastStyles = $Jssor$.$Extend(lastStyles, $Jssor$.$Cast(fromStyles, transition, 1, animatorOptions.$Easing, animatorOptions.$During, animatorOptions.$Round, animatorOptions, castOptions));
        });

        return lastStyles;
    }

    function CreateAnimators(captionItems) {

        $Jssor$.$Each(captionItems, function (captionItem, i) {

            $JssorDebug$.$Execute(function () {
                if (captionItem.length) {
                    var top = $Jssor$.$CssTop(captionItem.$Elmt);
                    var left = $Jssor$.$CssLeft(captionItem.$Elmt);
                    var width = $Jssor$.$CssWidth(captionItem.$Elmt);
                    var height = $Jssor$.$CssHeight(captionItem.$Elmt);

                    var error = null;

                    if (isNaN(top))
                        error = "style 'top' not specified";
                    else if (isNaN(left))
                        error = "style 'left' not specified";
                    else if (isNaN(width))
                        error = "style 'width' not specified";
                    else if (isNaN(height))
                        error = "style 'height' not specified";

                    if (error)
                        throw new Error("Caption " + (i + 1) + " definition error, " + error + ".\r\n" + captionItem.$Elmt.outerHTML);
                }
            });

            var captionElmt = captionItem.$Elmt;

            var captionItemWidth = $Jssor$.$CssWidth(captionItem);
            var captionItemHeight = $Jssor$.$CssHeight(captionItem);
            var captionParentWidth = $Jssor$.$CssWidth(captionParent);
            var captionParentHeight = $Jssor$.$CssHeight(captionParent);

            var lastStyles = { $Zoom: 1, $Rotate: 0, $Clip: { $Top: 0, $Right: captionItemWidth, $Bottom: captionItemHeight, $Left: 0 } };

            lastStyles = CreateAnimator(captionElmt, captionItem.$Transition, lastStyles, true);
            CreateAnimator(captionElmt, captionItem.$Transition2, lastStyles, false);
        });
    }

    _This.$Revert = function () {
        _This.$GoToPosition(-1, true);
    }

    //Constructor
    {
        _Easings = [
            $JssorEasing$.$EaseSwing,
            $JssorEasing$.$EaseLinear,
            $JssorEasing$.$EaseInQuad,
            $JssorEasing$.$EaseOutQuad,
            $JssorEasing$.$EaseInOutQuad,
            $JssorEasing$.$EaseInCubic,
            $JssorEasing$.$EaseOutCubic,
            $JssorEasing$.$EaseInOutCubic,
            $JssorEasing$.$EaseInQuart,
            $JssorEasing$.$EaseOutQuart,
            $JssorEasing$.$EaseInOutQuart,
            $JssorEasing$.$EaseInQuint,
            $JssorEasing$.$EaseOutQuint,
            $JssorEasing$.$EaseInOutQuint,
            $JssorEasing$.$EaseInSine,
            $JssorEasing$.$EaseOutSine,
            $JssorEasing$.$EaseInOutSine,
            $JssorEasing$.$EaseInExpo,
            $JssorEasing$.$EaseOutExpo,
            $JssorEasing$.$EaseInOutExpo,
            $JssorEasing$.$EaseInCirc,
            $JssorEasing$.$EaseOutCirc,
            $JssorEasing$.$EaseInOutCirc,
            $JssorEasing$.$EaseInElastic,
            $JssorEasing$.$EaseOutElastic,
            $JssorEasing$.$EaseInOutElastic,
            $JssorEasing$.$EaseInBack,
            $JssorEasing$.$EaseOutBack,
            $JssorEasing$.$EaseInOutBack,
            $JssorEasing$.$EaseInBounce,
            $JssorEasing$.$EaseOutBounce,
            $JssorEasing$.$EaseInOutBounce//,
            //$JssorEasing$.$EaseGoBack,
            //$JssorEasing$.$EaseInWave,
            //$JssorEasing$.$EaseOutWave,
            //$JssorEasing$.$EaseOutJump,
            //$JssorEasing$.$EaseInJump
        ];

        var translater = {
            $Top: "y",          //top
            $Left: "x",         //left
            $Bottom: "m",       //bottom
            $Right: "t",        //right
            $Zoom: "s",         //zoom/scale
            $Rotate: "r",       //rotate
            $Opacity: "o",      //opacity
            $Easing: "e",       //easing
            $ZIndex: "i",       //zindex
            $Round: "rd",       //round
            $During: "du",      //during
            $Duration: "d"//,   //duration
            //$Begin: "b"
        };

        $Jssor$.$Each(translater, function (prop, newProp) {
            _TransitionConverter[prop] = newProp;
        });

        CreateAnimators(GetCaptionItems(container, 1));
    }
};

//Event Table

//$EVT_CLICK = 21;			    function(slideIndex[, event])
//$EVT_DRAG_START = 22;		    function(position[, virtualPosition, event])
//$EVT_DRAG_END = 23;		    function(position, startPosition[, virtualPosition, virtualStartPosition, event])
//$EVT_SWIPE_START = 24;		function(position[, virtualPosition])
//$EVT_SWIPE_END = 25;		    function(position[, virtualPosition])

//$EVT_LOAD_START = 26;			function(slideIndex)
//$EVT_LOAD_END = 27;			function(slideIndex)

//$EVT_POSITION_CHANGE = 202;	function(position, fromPosition[, virtualPosition, virtualFromPosition])
//$EVT_PARK = 203;			    function(slideIndex, fromIndex)

//$EVT_PROGRESS_CHANGE = 208;	function(slideIndex, progress[, progressBegin, idleBegin, idleEnd, progressEnd])
//$EVT_STATE_CHANGE = 209;	    function(slideIndex, progress[, progressBegin, idleBegin, idleEnd, progressEnd])

//$EVT_ROLLBACK_START = 210;	function(slideIndex, progress[, progressBegin, idleBegin, idleEnd, progressEnd])
//$EVT_ROLLBACK_END = 211;	    function(slideIndex, progress[, progressBegin, idleBegin, idleEnd, progressEnd])

//$EVT_SLIDESHOW_START = 206;   function(slideIndex[, progressBegin, slideshowBegin, slideshowEnd, progressEnd])
//$EVT_SLIDESHOW_END = 207;     function(slideIndex[, progressBegin, slideshowBegin, slideshowEnd, progressEnd])

//http://www.jssor.com/development/reference-api.html
/*
* Jssor 19.0
* http://www.jssor.com/
*
* Licensed under the MIT license:
* http://www.opensource.org/licenses/MIT
* 
* TERMS OF USE - Jssor
* 
* Copyright 2014 Jssor
*
* Permission is hereby granted, free of charge, to any person obtaining
* a copy of this software and associated documentation files (the
* "Software"), to deal in the Software without restriction, including
* without limitation the rights to use, copy, modify, merge, publish,
* distribute, sublicense, and/or sell copies of the Software, and to
* permit persons to whom the Software is furnished to do so, subject to
* the following conditions:
* 
* The above copyright notice and this permission notice shall be
* included in all copies or substantial portions of the Software.
* 
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/

/*! Jssor */

//$JssorDebug$
var $JssorDebug$ = new function () {

    this.$DebugMode = true;

    // Methods

    this.$Log = function (msg, important) {
        var console = window.console || {};
        var debug = this.$DebugMode;

        if (debug && console.log) {
            console.log(msg);
        } else if (debug && important) {
            alert(msg);
        }
    };

    this.$Error = function (msg, e) {
        var console = window.console || {};
        var debug = this.$DebugMode;

        if (debug && console.error) {
            console.error(msg);
        } else if (debug) {
            alert(msg);
        }

        if (debug) {
            // since we're debugging, fail fast by crashing
            throw e || new Error(msg);
        }
    };

    this.$Fail = function (msg) {
        throw new Error(msg);
    };

    this.$Assert = function (value, msg) {
        var debug = this.$DebugMode;
        if (debug) {
            if (!value)
                throw new Error("Assert failed " + msg || "");
        }
    };

    this.$Trace = function (msg) {
        var console = window.console || {};
        var debug = this.$DebugMode;

        if (debug && console.log) {
            console.log(msg);
        }
    };

    this.$Execute = function (func) {
        var debug = this.$DebugMode;
        if (debug)
            func();
    };

    this.$LiveStamp = function (obj, id) {
        var debug = this.$DebugMode;
        if (debug) {
            var stamp = document.createElement("DIV");
            stamp.setAttribute("id", id);

            obj.$Live = stamp;
        }
    };

    this.$C_AbstractProperty = function () {
        ///	<summary>
        ///		Tells compiler the property is abstract, it should be implemented by subclass.
        ///	</summary>

        throw new Error("The property is abstract, it should be implemented by subclass.");
    };

    this.$C_AbstractMethod = function () {
        ///	<summary>
        ///		Tells compiler the method is abstract, it should be implemented by subclass.
        ///	</summary>

        throw new Error("The method is abstract, it should be implemented by subclass.");
    };

    function C_AbstractClass(instance) {
        ///	<summary>
        ///		Tells compiler the class is abstract, it should be implemented by subclass.
        ///	</summary>

        if (instance.constructor === C_AbstractClass.caller)
            throw new Error("Cannot create instance of an abstract class.");
    }

    this.$C_AbstractClass = C_AbstractClass;
};

//$JssorEasing$
var $JssorEasing$ = window.$JssorEasing$ = {
    $EaseLinear: function (t) {
        return t;
    },
    $EaseInQuad: function (t) {
        return t * t;
    },
    $EaseOutQuad: function (t) {
        return -t * (t - 2);
    },
    $EaseGoBack: function (t) {
        return 1 - Math.abs((t *= 2) - 1);
    },
    $EaseInWave: function (t) {
        return 1 - Math.cos(t * Math.PI * 2)
    },
    $EaseOutWave: function (t) {
        return Math.sin(t * Math.PI * 2);
    },
    $EaseOutJump: function (t) {
        return 1 - (((t *= 2) < 1) ? (t = 1 - t) * t * t : (t -= 1) * t * t);
    },
    $EaseInJump: function (t) {
        return ((t *= 2) < 1) ? t * t * t : (t = 2 - t) * t * t;
    }
};

var $JssorDirection$ = window.$JssorDirection$ = {
    $TO_LEFT: 0x0001,
    $TO_RIGHT: 0x0002,
    $TO_TOP: 0x0004,
    $TO_BOTTOM: 0x0008,
    $HORIZONTAL: 0x0003,
    $VERTICAL: 0x000C,
    //$LEFTRIGHT: 0x0003,
    //$TOPBOTOM: 0x000C,
    //$TOPLEFT: 0x0005,
    //$TOPRIGHT: 0x0006,
    //$BOTTOMLEFT: 0x0009,
    //$BOTTOMRIGHT: 0x000A,
    //$AROUND: 0x000F,

    $GetDirectionHorizontal: function (direction) {
        return direction & 0x0003;
    },
    $GetDirectionVertical: function (direction) {
        return direction & 0x000C;
    },
    //$ChessHorizontal: function (direction) {
    //    return (~direction & 0x0003) + (direction & 0x000C);
    //},
    //$ChessVertical: function (direction) {
    //    return (~direction & 0x000C) + (direction & 0x0003);
    //},
    //$IsToLeft: function (direction) {
    //    return (direction & 0x0003) == 0x0001;
    //},
    //$IsToRight: function (direction) {
    //    return (direction & 0x0003) == 0x0002;
    //},
    //$IsToTop: function (direction) {
    //    return (direction & 0x000C) == 0x0004;
    //},
    //$IsToBottom: function (direction) {
    //    return (direction & 0x000C) == 0x0008;
    //},
    $IsHorizontal: function (direction) {
        return direction & 0x0003;
    },
    $IsVertical: function (direction) {
        return direction & 0x000C;
    }
};

var $JssorKeyCode$ = {
    $BACKSPACE: 8,
    $COMMA: 188,
    $DELETE: 46,
    $DOWN: 40,
    $END: 35,
    $ENTER: 13,
    $ESCAPE: 27,
    $HOME: 36,
    $LEFT: 37,
    $NUMPAD_ADD: 107,
    $NUMPAD_DECIMAL: 110,
    $NUMPAD_DIVIDE: 111,
    $NUMPAD_ENTER: 108,
    $NUMPAD_MULTIPLY: 106,
    $NUMPAD_SUBTRACT: 109,
    $PAGE_DOWN: 34,
    $PAGE_UP: 33,
    $PERIOD: 190,
    $RIGHT: 39,
    $SPACE: 32,
    $TAB: 9,
    $UP: 38
};

// $Jssor$ is a static class, so make it singleton instance
var $Jssor$ = window.$Jssor$ = new function () {
    var _This = this;

    //#region Constants
    var REGEX_WHITESPACE_GLOBAL = /\S+/g;
    var ROWSER_OTHER = -1;
    var ROWSER_UNKNOWN = 0;
    var BROWSER_IE = 1;
    var BROWSER_FIREFOX = 2;
    var BROWSER_SAFARI = 3;
    var BROWSER_CHROME = 4;
    var BROWSER_OPERA = 5;
    //var arrActiveX = ["Msxml2.XMLHTTP", "Msxml3.XMLHTTP", "Microsoft.XMLHTTP"];
    //#endregion

    //#region Variables
    var _Device;
    var _Browser = 0;
    var _BrowserRuntimeVersion = 0;
    var _BrowserEngineVersion = 0;
    var _BrowserJavascriptVersion = 0;
    var _WebkitVersion = 0;

    var _Navigator = navigator;
    var _AppName = _Navigator.appName;
    var _AppVersion = _Navigator.appVersion;
    var _UserAgent = _Navigator.userAgent;

    var _DocElmt = document.documentElement;
    var _TransformProperty;
    //#endregion

    function Device() {
        if (!_Device) {
            _Device = { $Touchable: "ontouchstart" in window || "createTouch" in document };

            var msPrefix;
            if ((_Navigator.pointerEnabled || (msPrefix = _Navigator.msPointerEnabled))) {
                _Device.$TouchActionAttr = msPrefix ? "msTouchAction" : "touchAction";
            }
        }

        return _Device;
    }

    function DetectBrowser(browser) {
        if (!_Browser) {
            _Browser = -1;

            if (_AppName == "Microsoft Internet Explorer" &&
                !!window.attachEvent && !!window.ActiveXObject) {

                var ieOffset = _UserAgent.indexOf("MSIE");
                _Browser = BROWSER_IE;
                _BrowserEngineVersion = ParseFloat(_UserAgent.substring(ieOffset + 5, _UserAgent.indexOf(";", ieOffset)));

                //check IE javascript version
                /*@cc_on
                _BrowserJavascriptVersion = @_jscript_version;
                @*/

                // update: for intranet sites and compat view list sites, IE sends
                // an IE7 User-Agent to the server to be interoperable, and even if
                // the page requests a later IE version, IE will still report the
                // IE7 UA to JS. we should be robust to self
                //var docMode = document.documentMode;
                //if (typeof docMode !== "undefined") {
                //    _BrowserRuntimeVersion = docMode;
                //}

                _BrowserRuntimeVersion = document.documentMode || _BrowserEngineVersion;

            }
            else if (_AppName == "Netscape" && !!window.addEventListener) {

                var ffOffset = _UserAgent.indexOf("Firefox");
                var saOffset = _UserAgent.indexOf("Safari");
                var chOffset = _UserAgent.indexOf("Chrome");
                var webkitOffset = _UserAgent.indexOf("AppleWebKit");

                if (ffOffset >= 0) {
                    _Browser = BROWSER_FIREFOX;
                    _BrowserRuntimeVersion = ParseFloat(_UserAgent.substring(ffOffset + 8));
                }
                else if (saOffset >= 0) {
                    var slash = _UserAgent.substring(0, saOffset).lastIndexOf("/");
                    _Browser = (chOffset >= 0) ? BROWSER_CHROME : BROWSER_SAFARI;
                    _BrowserRuntimeVersion = ParseFloat(_UserAgent.substring(slash + 1, saOffset));
                }
                else {
                    //(/Trident.*rv[ :]*11\./i
                    var match = /Trident\/.*rv:([0-9]{1,}[\.0-9]{0,})/i.exec(_UserAgent);
                    if (match) {
                        _Browser = BROWSER_IE;
                        _BrowserRuntimeVersion = _BrowserEngineVersion = ParseFloat(match[1]);
                    }
                }

                if (webkitOffset >= 0)
                    _WebkitVersion = ParseFloat(_UserAgent.substring(webkitOffset + 12));
            }
            else {
                var match = /(opera)(?:.*version|)[ \/]([\w.]+)/i.exec(_UserAgent);
                if (match) {
                    _Browser = BROWSER_OPERA;
                    _BrowserRuntimeVersion = ParseFloat(match[2]);
                }
            }
        }

        return browser == _Browser;
    }

    function IsBrowserIE() {
        return DetectBrowser(BROWSER_IE);
    }

    function IsBrowserIeQuirks() {
        return IsBrowserIE() && (_BrowserRuntimeVersion < 6 || document.compatMode == "BackCompat");   //Composite to "CSS1Compat"
    }

    function IsBrowserFireFox() {
        return DetectBrowser(BROWSER_FIREFOX);
    }

    function IsBrowserSafari() {
        return DetectBrowser(BROWSER_SAFARI);
    }

    function IsBrowserChrome() {
        return DetectBrowser(BROWSER_CHROME);
    }

    function IsBrowserOpera() {
        return DetectBrowser(BROWSER_OPERA);
    }

    function IsBrowserBadTransform() {
        return IsBrowserSafari() && (_WebkitVersion > 534) && (_WebkitVersion < 535);
    }

    function IsBrowserIe9Earlier() {
        return IsBrowserIE() && _BrowserRuntimeVersion < 9;
    }

    function GetTransformProperty(elmt) {

        if (!_TransformProperty) {
            // Note that in some versions of IE9 it is critical that
            // msTransform appear in this list before MozTransform

            Each(['transform', 'WebkitTransform', 'msTransform', 'MozTransform', 'OTransform'], function (property) {
                if (elmt.style[property] != undefined) {
                    _TransformProperty = property;
                    return true;
                }
            });

            _TransformProperty = _TransformProperty || "transform";
        }

        return _TransformProperty;
    }

    // Helpers
    function getOffsetParent(elmt, isFixed) {
        // IE and Opera "fixed" position elements don't have offset parents.
        // regardless, if it's fixed, its offset parent is the body.
        if (isFixed && elmt != document.body) {
            return document.body;
        } else {
            return elmt.offsetParent;
        }
    }

    function toString(obj) {
        return {}.toString.call(obj);
    }

    // [[Class]] -> type pairs
    var _Class2type;

    function GetClass2Type() {
        if (!_Class2type) {
            _Class2type = {};
            Each(["Boolean", "Number", "String", "Function", "Array", "Date", "RegExp", "Object"], function (name) {
                _Class2type["[object " + name + "]"] = name.toLowerCase();
            });
        }

        return _Class2type;
    }

    function Each(obj, callback) {
        if (toString(obj) == "[object Array]") {
            for (var i = 0; i < obj.length; i++) {
                if (callback(obj[i], i, obj)) {
                    return true;
                }
            }
        }
        else {
            for (var name in obj) {
                if (callback(obj[name], name, obj)) {
                    return true;
                }
            }
        }
    }

    function Type(obj) {
        return obj == null ? String(obj) : GetClass2Type()[toString(obj)] || "object";
    }

    function IsNotEmpty(obj) {
        for(var name in obj)
            return true;
    }

    function IsPlainObject(obj) {
        // Not plain objects:
        // - Any object or value whose internal [[Class]] property is not "[object Object]"
        // - DOM nodes
        // - window
        try {
            return Type(obj) == "object"
                && !obj.nodeType
                && obj != obj.window
                && (!obj.constructor || { }.hasOwnProperty.call(obj.constructor.prototype, "isPrototypeOf"));
        }
        catch (e) { }
    }

    function Point(x, y) {
        return { x: x, y: y };
    }

    function Delay(code, delay) {
        setTimeout(code, delay || 0);
    }

    function RemoveByReg(str, reg) {
        var m = reg.exec(str);

        if (m) {
            var header = str.substr(0, m.index);
            var tailer = str.substr(m.lastIndex + 1, str.length - (m.lastIndex + 1));
            str = header + tailer;
        }

        return str;
    }

    function BuildNewCss(oldCss, removeRegs, replaceValue) {
        var css = (!oldCss || oldCss == "inherit") ? "" : oldCss;

        Each(removeRegs, function (removeReg) {
            var m = removeReg.exec(css);

            if (m) {
                var header = css.substr(0, m.index);
                var tailer = css.substr(m.lastIndex + 1, css.length - (m.lastIndex + 1));
                css = header + tailer;
            }
        });

        css = replaceValue + (css.indexOf(" ") != 0 ? " " : "") + css;

        return css;
    }

    function SetStyleFilterIE(elmt, value) {
        if (_BrowserRuntimeVersion < 9) {
            elmt.style.filter = value;
        }
    }

    function SetStyleMatrixIE(elmt, matrix, offset) {
        //matrix is not for ie9+ running in ie8- mode
        if (_BrowserJavascriptVersion < 9) {
            var oldFilterValue = elmt.style.filter;
            var matrixReg = new RegExp(/[\s]*progid:DXImageTransform\.Microsoft\.Matrix\([^\)]*\)/g);
            var matrixValue = matrix ? "progid:DXImageTransform.Microsoft.Matrix(" + "M11=" + matrix[0][0] + ", M12=" + matrix[0][1] + ", M21=" + matrix[1][0] + ", M22=" + matrix[1][1] + ", SizingMethod='auto expand')" : "";

            var newFilterValue = BuildNewCss(oldFilterValue, [matrixReg], matrixValue);

            SetStyleFilterIE(elmt, newFilterValue);

            _This.$CssMarginTop(elmt, offset.y);
            _This.$CssMarginLeft(elmt, offset.x);
        }
    }

    // Methods

    _This.$Device = Device;

    _This.$IsBrowserIE = IsBrowserIE;

    _This.$IsBrowserIeQuirks = IsBrowserIeQuirks;

    _This.$IsBrowserFireFox = IsBrowserFireFox;

    _This.$IsBrowserSafari = IsBrowserSafari;

    _This.$IsBrowserChrome = IsBrowserChrome;

    _This.$IsBrowserOpera = IsBrowserOpera;

    _This.$IsBrowserBadTransform = IsBrowserBadTransform;

    _This.$IsBrowserIe9Earlier = IsBrowserIe9Earlier;

    _This.$BrowserVersion = function () {
        return _BrowserRuntimeVersion;
    };

    _This.$BrowserEngineVersion = function () {
        return _BrowserEngineVersion || _BrowserRuntimeVersion;
    };

    _This.$WebKitVersion = function () {
        DetectBrowser();

        return _WebkitVersion;
    };

    _This.$Delay = Delay;

    _This.$Inherit = function (instance, baseClass) {
        baseClass.call(instance);
        return Extend({}, instance);
    };

    function Construct(instance) {
        instance.constructor === Construct.caller && instance.$Construct && instance.$Construct.apply(instance, Construct.caller.arguments);
    }

    _This.$Construct = Construct;

    _This.$GetElement = function (elmt) {
        if (_This.$IsString(elmt)) {
            elmt = document.getElementById(elmt);
        }

        return elmt;
    };

    function GetEvent(event) {
        return event || window.event;
    }

    _This.$GetEvent = GetEvent;

    _This.$EvtSrc = function (event) {
        event = GetEvent(event);
        return event.target || event.srcElement || document;
    };

    _This.$EvtTarget = function (event) {
        event = GetEvent(event);
        return event.relatedTarget || event.toElement;
    };

    _This.$EvtWhich = function (event) {
        event = GetEvent(event);
        return event.which || [0, 1, 3, 0, 2][event.button] || event.charCode || event.keyCode;
    };

    _This.$MousePosition = function (event) {
        event = GetEvent(event);
        //var body = document.body;

        return {
            x: event.pageX || event.clientX/* + (_DocElmt.scrollLeft || body.scrollLeft || 0) - (_DocElmt.clientLeft || body.clientLeft || 0)*/ || 0,
            y: event.pageY || event.clientY/* + (_DocElmt.scrollTop || body.scrollTop || 0) - (_DocElmt.clientTop || body.clientTop || 0)*/ || 0
        };
    };

    _This.$PageScroll = function () {
        var body = document.body;

        return {
            x: (window.pageXOffset || _DocElmt.scrollLeft || body.scrollLeft || 0) - (_DocElmt.clientLeft || body.clientLeft || 0),
            y: (window.pageYOffset || _DocElmt.scrollTop || body.scrollTop || 0) - (_DocElmt.clientTop || body.clientTop || 0)
        };
    };

    _This.$WindowSize = function () {
        var body = document.body;

        return {
            x: body.clientWidth || _DocElmt.clientWidth,
            y: body.clientHeight || _DocElmt.clientHeight
        };
    };

    //_This.$GetElementPosition = function (elmt) {
    //    elmt = _This.$GetElement(elmt);
    //    var result = Point();

    //    // technique from:
    //    // http://www.quirksmode.org/js/findpos.html
    //    // with special check for "fixed" elements.

    //    while (elmt) {
    //        result.x += elmt.offsetLeft;
    //        result.y += elmt.offsetTop;

    //        var isFixed = _This.$GetElementStyle(elmt).position == "fixed";

    //        if (isFixed) {
    //            result = result.$Plus(_This.$PageScroll(window));
    //        }

    //        elmt = getOffsetParent(elmt, isFixed);
    //    }

    //    return result;
    //};

    //_This.$GetMouseScroll = function (event) {
    //    event = GetEvent(event);
    //    var delta = 0; // default value

    //    // technique from:
    //    // http://blog.paranoidferret.com/index.php/2007/10/31/javascript-tutorial-the-scroll-wheel/

    //    if (typeof (event.wheelDelta) == "number") {
    //        delta = event.wheelDelta;
    //    } else if (typeof (event.detail) == "number") {
    //        delta = event.detail * -1;
    //    } else {
    //        $JssorDebug$.$Fail("Unknown event mouse scroll, no known technique.");
    //    }

    //    // normalize value to [-1, 1]
    //    return delta ? delta / Math.abs(delta) : 0;
    //};

    //_This.$MakeAjaxRequest = function (url, callback) {
    //    var async = typeof (callback) == "function";
    //    var req = null;

    //    if (async) {
    //        var actual = callback;
    //        var callback = function () {
    //            Delay($Jssor$.$CreateCallback(null, actual, req), 1);
    //        };
    //    }

    //    if (window.ActiveXObject) {
    //        for (var i = 0; i < arrActiveX.length; i++) {
    //            try {
    //                req = new ActiveXObject(arrActiveX[i]);
    //                break;
    //            } catch (e) {
    //                continue;
    //            }
    //        }
    //    } else if (window.XMLHttpRequest) {
    //        req = new XMLHttpRequest();
    //    }

    //    if (!req) {
    //        $JssorDebug$.$Fail("Browser doesn't support XMLHttpRequest.");
    //    }

    //    if (async) {
    //        req.onreadystatechange = function () {
    //            if (req.readyState == 4) {
    //                // prevent memory leaks by breaking circular reference now
    //                req.onreadystatechange = new Function();
    //                callback();
    //            }
    //        };
    //    }

    //    try {
    //        req.open("GET", url, async);
    //        req.send(null);
    //    } catch (e) {
    //        $JssorDebug$.$Log(e.name + " while making AJAX request: " + e.message);

    //        req.onreadystatechange = null;
    //        req = null;

    //        if (async) {
    //            callback();
    //        }
    //    }

    //    return async ? null : req;
    //};

    //_This.$ParseXml = function (string) {
    //    var xmlDoc = null;

    //    if (window.ActiveXObject) {
    //        try {
    //            xmlDoc = new ActiveXObject("Microsoft.XMLDOM");
    //            xmlDoc.async = false;
    //            xmlDoc.loadXML(string);
    //        } catch (e) {
    //            $JssorDebug$.$Log(e.name + " while parsing XML (ActiveX): " + e.message);
    //        }
    //    } else if (window.DOMParser) {
    //        try {
    //            var parser = new DOMParser();
    //            xmlDoc = parser.parseFromString(string, "text/xml");
    //        } catch (e) {
    //            $JssorDebug$.$Log(e.name + " while parsing XML (DOMParser): " + e.message);
    //        }
    //    } else {
    //        $JssorDebug$.$Fail("Browser doesn't support XML DOM.");
    //    }

    //    return xmlDoc;
    //};

    function Css(elmt, name, value) {
        ///	<summary>
        ///		access css
        ///     $Jssor$.$Css(elmt, name);         //get css value
        ///     $Jssor$.$Css(elmt, name, value);  //set css value
        ///	</summary>
        ///	<param name="elmt" type="HTMLElement">
        ///		the element to access css
        ///	</param>
        ///	<param name="name" type="String">
        ///		the name of css property
        ///	</param>
        ///	<param name="value" optional="true">
        ///		the value to set
        ///	</param>
        if (value != undefined) {
            elmt.style[name] = value;
        }
        else {
            var style = elmt.currentStyle || elmt.style;
            value = style[name];

            if (value == "" && window.getComputedStyle) {
                style = elmt.ownerDocument.defaultView.getComputedStyle(elmt, null);

                style && (value = style.getPropertyValue(name) || style[name]);
            }

            return value;
        }
    }

    function CssN(elmt, name, value, isDimensional) {
        ///	<summary>
        ///		access css as numeric
        ///     $Jssor$.$CssN(elmt, name);         //get css value
        ///     $Jssor$.$CssN(elmt, name, value);  //set css value
        ///	</summary>
        ///	<param name="elmt" type="HTMLElement">
        ///		the element to access css
        ///	</param>
        ///	<param name="name" type="String">
        ///		the name of css property
        ///	</param>
        ///	<param name="value" type="Number" optional="true">
        ///		the value to set
        ///	</param>
        if (value != undefined) {
            isDimensional && (value += "px");
            Css(elmt, name, value);
        }
        else {
            return ParseFloat(Css(elmt, name));
        }
    }

    function CssP(elmt, name, value) {
        ///	<summary>
        ///		access css in pixel as numeric, like 'top', 'left', 'width', 'height'
        ///     $Jssor$.$CssP(elmt, name);         //get css value
        ///     $Jssor$.$CssP(elmt, name, value);  //set css value
        ///	</summary>
        ///	<param name="elmt" type="HTMLElement">
        ///		the element to access css
        ///	</param>
        ///	<param name="name" type="String">
        ///		the name of css property
        ///	</param>
        ///	<param name="value" type="Number" optional="true">
        ///		the value to set
        ///	</param>
        return CssN(elmt, name, value, true);
    }

    function CssProxy(name, numericOrDimension) {
        ///	<summary>
        ///		create proxy to access css, CssProxy(name[, numericOrDimension]);
        ///	</summary>
        ///	<param name="elmt" type="HTMLElement">
        ///		the element to access css
        ///	</param>
        ///	<param name="numericOrDimension" type="Number" optional="true">
        ///		not set: access original css, 1: access css as numeric, 2: access css in pixel as numeric
        ///	</param>
        var isDimensional = numericOrDimension & 2;
        var cssAccessor = numericOrDimension ? CssN : Css;
        return function (elmt, value) {
            return cssAccessor(elmt, name, value, isDimensional);
        };
    }

    function GetStyleOpacity(elmt) {
        if (IsBrowserIE() && _BrowserEngineVersion < 9) {
            var match = /opacity=([^)]*)/.exec(elmt.style.filter || "");
            return match ? (ParseFloat(match[1]) / 100) : 1;
        }
        else
            return ParseFloat(elmt.style.opacity || "1");
    }

    function SetStyleOpacity(elmt, opacity, ie9EarlierForce) {

        if (IsBrowserIE() && _BrowserEngineVersion < 9) {
            //var filterName = "filter"; // _BrowserEngineVersion < 8 ? "filter" : "-ms-filter";
            var finalFilter = elmt.style.filter || "";

            // for CSS filter browsers (IE), remove alpha filter if it's unnecessary.
            // update: doing _This always since IE9 beta seems to have broken the
            // behavior if we rely on the programmatic filters collection.
            var alphaReg = new RegExp(/[\s]*alpha\([^\)]*\)/g);

            // important: note the lazy star! _This protects against
            // multiple filters; we don't want to delete the other ones.
            // update: also trimming extra whitespace around filter.

            var ieOpacity = Math.round(100 * opacity);
            var alphaFilter = "";
            if (ieOpacity < 100 || ie9EarlierForce) {
                alphaFilter = "alpha(opacity=" + ieOpacity + ") ";
            }

            var newFilterValue = BuildNewCss(finalFilter, [alphaReg], alphaFilter);

            SetStyleFilterIE(elmt, newFilterValue);
        }
        else {
            elmt.style.opacity = opacity == 1 ? "" : Math.round(opacity * 100) / 100;
        }
    }

    function SetStyleTransformInternal(elmt, transform) {
        var rotate = transform.$Rotate || 0;
        var scale = transform.$Scale == undefined ? 1 : transform.$Scale;

        if (IsBrowserIe9Earlier()) {
            var matrix = _This.$CreateMatrix(rotate / 180 * Math.PI, scale, scale);
            SetStyleMatrixIE(elmt, (!rotate && scale == 1) ? null : matrix, _This.$GetMatrixOffset(matrix, transform.$OriginalWidth, transform.$OriginalHeight));
        }
        else {
            //rotate(15deg) scale(.5) translateZ(0)
            var transformProperty = GetTransformProperty(elmt);
            if (transformProperty) {
                var transformValue = "rotate(" + rotate % 360 + "deg) scale(" + scale + ")";

                //needed for touch device, no need for desktop device
                if (IsBrowserChrome() && _WebkitVersion > 535 && "ontouchstart" in window)
                    transformValue += " perspective(2000px)";

                elmt.style[transformProperty] = transformValue;
            }
        }
    }

    _This.$SetStyleTransform = function (elmt, transform) {
        if (IsBrowserBadTransform()) {
            Delay(_This.$CreateCallback(null, SetStyleTransformInternal, elmt, transform));
        }
        else {
            SetStyleTransformInternal(elmt, transform);
        }
    };

    _This.$SetStyleTransformOrigin = function (elmt, transformOrigin) {
        var transformProperty = GetTransformProperty(elmt);

        if (transformProperty)
            elmt.style[transformProperty + "Origin"] = transformOrigin;
    };

    _This.$CssScale = function (elmt, scale) {

        if (IsBrowserIE() && _BrowserEngineVersion < 9 || (_BrowserEngineVersion < 10 && IsBrowserIeQuirks())) {
            elmt.style.zoom = (scale == 1) ? "" : scale;
        }
        else {
            var transformProperty = GetTransformProperty(elmt);

            if (transformProperty) {
                //rotate(15deg) scale(.5)
                var transformValue = "scale(" + scale + ")";

                var oldTransformValue = elmt.style[transformProperty];
                var scaleReg = new RegExp(/[\s]*scale\(.*?\)/g);

                var newTransformValue = BuildNewCss(oldTransformValue, [scaleReg], transformValue);

                elmt.style[transformProperty] = newTransformValue;
            }
        }
    };

    _This.$EnableHWA = function (elmt) {
        if (!elmt.style[GetTransformProperty(elmt)] || elmt.style[GetTransformProperty(elmt)] == "none")
            elmt.style[GetTransformProperty(elmt)] = "perspective(2000px)";
    };

    _This.$DisableHWA = function (elmt) {
        elmt.style[GetTransformProperty(elmt)] = "none";
    };

    var ie8OffsetWidth = 0;
    var ie8OffsetHeight = 0;

    _This.$WindowResizeFilter = function (window, handler) {
        return IsBrowserIe9Earlier() ? function () {

            var trigger = true;

            var checkElement = (IsBrowserIeQuirks() ? window.document.body : window.document.documentElement);
            if (checkElement) {
                var widthChange = checkElement.offsetWidth - ie8OffsetWidth;
                var heightChange = checkElement.offsetHeight - ie8OffsetHeight;
                if (widthChange || heightChange) {
                    ie8OffsetWidth += widthChange;
                    ie8OffsetHeight += heightChange;
                }
                else
                    trigger = false;
            }

            trigger && handler();

        } : handler;
    };

    _This.$MouseOverOutFilter = function (handler, target) {
        ///	<param name="target" type="HTMLDomElement">
        ///		The target element to detect mouse over/out events. (for ie < 9 compatibility)
        ///	</param>

        $JssorDebug$.$Execute(function () {
            if (!target) {
                throw new Error("Null reference, parameter \"target\".");
            }
        });

        return function (event) {
            event = GetEvent(event);

            var eventName = event.type;
            var related = event.relatedTarget || (eventName == "mouseout" ? event.toElement : event.fromElement);

            if (!related || (related !== target && !_This.$IsChild(target, related))) {
                handler(event);
            }
        };
    };

    _This.$AddEvent = function (elmt, eventName, handler, useCapture) {
        elmt = _This.$GetElement(elmt);

        $JssorDebug$.$Execute(function () {
            if (!elmt) {
                $JssorDebug$.$Fail("Parameter 'elmt' not specified.");
            }

            if (!handler) {
                $JssorDebug$.$Fail("Parameter 'handler' not specified.");
            }

            if (!elmt.addEventListener && !elmt.attachEvent) {
                $JssorDebug$.$Fail("Unable to attach event handler, no known technique.");
            }
        });

        // technique from:
        // http://blog.paranoidferret.com/index.php/2007/08/10/javascript-working-with-events/

        if (elmt.addEventListener) {
            if (eventName == "mousewheel") {
                elmt.addEventListener("DOMMouseScroll", handler, useCapture);
            }
            // we are still going to add the mousewheel -- not a mistake!
            // _This is for opera, since it uses onmousewheel but needs addEventListener.
            elmt.addEventListener(eventName, handler, useCapture);
        }
        else if (elmt.attachEvent) {
            elmt.attachEvent("on" + eventName, handler);
            if (useCapture && elmt.setCapture) {
                elmt.setCapture();
            }
        }
    };

    _This.$RemoveEvent = function (elmt, eventName, handler, useCapture) {
        elmt = _This.$GetElement(elmt);

        // technique from:
        // http://blog.paranoidferret.com/index.php/2007/08/10/javascript-working-with-events/

        if (elmt.removeEventListener) {
            if (eventName == "mousewheel") {
                elmt.removeEventListener("DOMMouseScroll", handler, useCapture);
            }
            // we are still going to remove the mousewheel -- not a mistake!
            // _This is for opera, since it uses onmousewheel but needs removeEventListener.
            elmt.removeEventListener(eventName, handler, useCapture);
        }
        else if (elmt.detachEvent) {
            elmt.detachEvent("on" + eventName, handler);
            if (useCapture && elmt.releaseCapture) {
                elmt.releaseCapture();
            }
        }
    };

    _This.$FireEvent = function (elmt, eventName) {
        //var document = elmt.document;

        $JssorDebug$.$Execute(function () {
            if (!document.createEvent && !document.createEventObject) {
                $JssorDebug$.$Fail("Unable to fire event, no known technique.");
            }

            if (!elmt.dispatchEvent && !elmt.fireEvent) {
                $JssorDebug$.$Fail("Unable to fire event, no known technique.");
            }
        });

        var evento;

        if (document.createEvent) {
            evento = document.createEvent("HTMLEvents");
            evento.initEvent(eventName, false, false);
            elmt.dispatchEvent(evento);
        }
        else {
            var ieEventName = "on" + eventName;
            evento = document.createEventObject();

            elmt.fireEvent(ieEventName, evento);
        }
    };

    _This.$CancelEvent = function (event) {
        event = GetEvent(event);

        // technique from:
        // http://blog.paranoidferret.com/index.php/2007/08/10/javascript-working-with-events/

        if (event.preventDefault) {
            event.preventDefault();     // W3C for preventing default
        }

        event.cancel = true;            // legacy for preventing default
        event.returnValue = false;      // IE for preventing default
    };

    _This.$StopEvent = function (event) {
        event = GetEvent(event);

        // technique from:
        // http://blog.paranoidferret.com/index.php/2007/08/10/javascript-working-with-events/

        if (event.stopPropagation) {
            event.stopPropagation();    // W3C for stopping propagation
        }

        event.cancelBubble = true;      // IE for stopping propagation
    };

    _This.$CreateCallback = function (object, method) {
        // create callback args
        var initialArgs = [].slice.call(arguments, 2);

        // create closure to apply method
        var callback = function () {
            // concatenate new args, but make a copy of initialArgs first
            var args = initialArgs.concat([].slice.call(arguments, 0));

            return method.apply(object, args);
        };

        //$JssorDebug$.$LiveStamp(callback, "callback_" + ($Jssor$.$GetNow() & 0xFFFFFF));

        return callback;
    };

    _This.$InnerText = function (elmt, text) {
        if (text == undefined)
            return elmt.textContent || elmt.innerText;

        var textNode = document.createTextNode(text);
        _This.$Empty(elmt);
        elmt.appendChild(textNode);
    };

    _This.$InnerHtml = function (elmt, html) {
        if (html == undefined)
            return elmt.innerHTML;

        elmt.innerHTML = html;
    };

    _This.$GetClientRect = function (elmt) {
        var rect = elmt.getBoundingClientRect();

        return { x: rect.left, y: rect.top, w: rect.right - rect.left, h: rect.bottom - rect.top };
    };

    _This.$ClearInnerHtml = function (elmt) {
        elmt.innerHTML = "";
    };

    _This.$EncodeHtml = function (text) {
        var div = _This.$CreateDiv();
        _This.$InnerText(div, text);
        return _This.$InnerHtml(div);
    };

    _This.$DecodeHtml = function (html) {
        var div = _This.$CreateDiv();
        _This.$InnerHtml(div, html);
        return _This.$InnerText(div);
    };

    _This.$SelectElement = function (elmt) {
        var userSelection;
        if (window.getSelection) {
            //W3C default
            userSelection = window.getSelection();
        }
        var theRange = null;
        if (document.createRange) {
            theRange = document.createRange();
            theRange.selectNode(elmt);
        }
        else {
            theRange = document.body.createTextRange();
            theRange.moveToElementText(elmt);
            theRange.select();
        }
        //set user selection
        if (userSelection)
            userSelection.addRange(theRange);
    };

    _This.$DeselectElements = function () {
        if (document.selection) {
            document.selection.empty();
        } else if (window.getSelection) {
            window.getSelection().removeAllRanges();
        }
    };

    _This.$Children = function (elmt, includeAll) {
        var children = [];

        for (var tmpEl = elmt.firstChild; tmpEl; tmpEl = tmpEl.nextSibling) {
            if (includeAll || tmpEl.nodeType == 1) {
                children.push(tmpEl);
            }
        }

        return children;
    };

    function FindChild(elmt, attrValue, noDeep, attrName) {
        attrName = attrName || "u";

        for (elmt = elmt ? elmt.firstChild : null; elmt; elmt = elmt.nextSibling) {
            if (elmt.nodeType == 1) {
                if (AttributeEx(elmt, attrName) == attrValue)
                    return elmt;

                if (!noDeep) {
                    var childRet = FindChild(elmt, attrValue, noDeep, attrName);
                    if (childRet)
                        return childRet;
                }
            }
        }
    }

    _This.$FindChild = FindChild;

    function FindChildren(elmt, attrValue, noDeep, attrName) {
        attrName = attrName || "u";

        var ret = [];

        for (elmt = elmt ? elmt.firstChild : null; elmt; elmt = elmt.nextSibling) {
            if (elmt.nodeType == 1) {
                if (AttributeEx(elmt, attrName) == attrValue)
                    ret.push(elmt);

                if (!noDeep) {
                    var childRet = FindChildren(elmt, attrValue, noDeep, attrName);
                    if (childRet.length)
                        ret = ret.concat(childRet);
                }
            }
        }

        return ret;
    }

    _This.$FindChildren = FindChildren;

    function FindChildByTag(elmt, tagName, noDeep) {

        for (elmt = elmt ? elmt.firstChild : null; elmt; elmt = elmt.nextSibling) {
            if (elmt.nodeType == 1) {
                if (elmt.tagName == tagName)
                    return elmt;

                if (!noDeep) {
                    var childRet = FindChildByTag(elmt, tagName, noDeep);
                    if (childRet)
                        return childRet;
                }
            }
        }
    }

    _This.$FindChildByTag = FindChildByTag;

    function FindChildrenByTag(elmt, tagName, noDeep) {
        var ret = [];

        for (elmt = elmt ? elmt.firstChild : null; elmt; elmt = elmt.nextSibling) {
            if (elmt.nodeType == 1) {
                if (!tagName || elmt.tagName == tagName)
                    ret.push(elmt);

                if (!noDeep) {
                    var childRet = FindChildrenByTag(elmt, tagName, noDeep);
                    if (childRet.length)
                        ret = ret.concat(childRet);
                }
            }
        }

        return ret;
    }

    _This.$FindChildrenByTag = FindChildrenByTag;

    _This.$GetElementsByTag = function (elmt, tagName) {
        return elmt.getElementsByTagName(tagName);
    };

    //function Extend() {
    //    var args = arguments;
    //    var target;
    //    var options;
    //    var propName;
    //    var propValue;
    //    var targetPropValue;
    //    var purpose = 7 & args[0];
    //    var deep = 1 & purpose;
    //    var unextend = 2 & purpose;
    //    var i = purpose ? 2 : 1;
    //    target = args[i - 1] || {};

    //    for (; i < args.length; i++) {
    //        // Only deal with non-null/undefined values
    //        if (options = args[i]) {
    //            // Extend the base object
    //            for (propName in options) {
    //                propValue = options[propName];

    //                if (propValue !== undefined) {
    //                    propValue = options[propName];

    //                    if (unextend) {
    //                        targetPropValue = target[propName];
    //                        if (propValue === targetPropValue)
    //                            delete target[propName];
    //                        else if (deep && IsPlainObject(targetPropValue)) {
    //                            Extend(purpose, targetPropValue, propValue);
    //                        }
    //                    }
    //                    else {
    //                        target[propName] = (deep && IsPlainObject(target[propName])) ? Extend(purpose | 4, {}, propValue) : propValue;
    //                    }
    //                }
    //            }
    //        }
    //    }

    //    // Return the modified object
    //    return target;
    //}

    //function Unextend() {
    //    var args = arguments;
    //    var newArgs = [].slice.call(arguments);
    //    var purpose = 1 & args[0];

    //    purpose && newArgs.shift();
    //    newArgs.unshift(purpose | 2);

    //    return Extend.apply(null, newArgs);
    //}

    function Extend() {
        var args = arguments;
        var target;
        var options;
        var propName;
        var propValue;
        var deep = 1 & args[0];
        var i = 1 + deep;
        target = args[i - 1] || {};

        for (; i < args.length; i++) {
            // Only deal with non-null/undefined values
            if (options = args[i]) {
                // Extend the base object
                for (propName in options) {
                    propValue = options[propName];

                    if (propValue !== undefined) {
                        propValue = options[propName];
                        target[propName] = (deep && IsPlainObject(target[propName])) ? Extend(deep, {}, propValue) : propValue;
                    }
                }
            }
        }

        // Return the modified object
        return target;
    }

    _This.$Extend = Extend;

    function Unextend(target, option) {
        $JssorDebug$.$Assert(option);

        var unextended = {};
        var name;
        var targetProp;
        var optionProp;

        // Extend the base object
        for (name in target) {
            targetProp = target[name];
            optionProp = option[name];

            if (targetProp !== optionProp) {
                var exclude;

                if (IsPlainObject(targetProp) && IsPlainObject(optionProp)) {
                    targetProp = Unextend(optionProp);
                    exclude = !IsNotEmpty(targetProp);
                }
                
                !exclude && (unextended[name] = targetProp);
            }
        }

        // Return the modified object
        return unextended;
    }

    _This.$Unextend = Unextend;

    _This.$IsFunction = function (obj) {
        return Type(obj) == "function";
    };

    _This.$IsArray = function (obj) {
        return Type(obj) == "array";
    };

    _This.$IsString = function (obj) {
        return Type(obj) == "string";
    };

    _This.$IsNumeric = function (obj) {
        return !isNaN(ParseFloat(obj)) && isFinite(obj);
    };

    _This.$Type = Type;

    // args is for internal usage only
    _This.$Each = Each;

    _This.$IsNotEmpty = IsNotEmpty;

    _This.$IsPlainObject = IsPlainObject;

    function CreateElement(tagName) {
        return document.createElement(tagName);
    }

    _This.$CreateElement = CreateElement;

    _This.$CreateDiv = function () {
        return CreateElement("DIV");
    };

    _This.$CreateSpan = function () {
        return CreateElement("SPAN");
    };

    _This.$EmptyFunction = function () { };

    function Attribute(elmt, name, value) {
        if (value == undefined)
            return elmt.getAttribute(name);

        elmt.setAttribute(name, value);
    }

    function AttributeEx(elmt, name) {
        return Attribute(elmt, name) || Attribute(elmt, "data-" + name);
    }

    _This.$Attribute = Attribute;
    _This.$AttributeEx = AttributeEx;

    function ClassName(elmt, className) {
        if (className == undefined)
            return elmt.className;

        elmt.className = className;
    }

    _This.$ClassName = ClassName;

    function ToHash(array) {
        var hash = {};

        Each(array, function (item) {
            hash[item] = item;
        });

        return hash;
    }

    function Split(str, separator) {
        return str.match(separator || REGEX_WHITESPACE_GLOBAL);
    }

    function StringToHashObject(str, regExp) {
        return ToHash(Split(str || "", regExp));
    }

    _This.$ToHash = ToHash;
    _This.$Split = Split;

    function Join(separator, strings) {
        ///	<param name="separator" type="String">
        ///	</param>
        ///	<param name="strings" type="Array" value="['1']">
        ///	</param>

        var joined = "";

        Each(strings, function (str) {
            joined && (joined += separator);
            joined += str;
        });

        return joined;
    }

    function ReplaceClass(elmt, oldClassName, newClassName) {
        ClassName(elmt, Join(" ", Extend(Unextend(StringToHashObject(ClassName(elmt)), StringToHashObject(oldClassName)), StringToHashObject(newClassName))));
    }

    _This.$Join = Join;

    _This.$AddClass = function (elmt, className) {
        ReplaceClass(elmt, null, className);
    };

    _This.$RemoveClass = ReplaceClass;

    _This.$ReplaceClass = ReplaceClass;

    _This.$ParentNode = function (elmt) {
        return elmt.parentNode;
    };

    _This.$HideElement = function (elmt) {
        _This.$CssDisplay(elmt, "none");
    };

    _This.$EnableElement = function (elmt, notEnable) {
        if (notEnable) {
            _This.$Attribute(elmt, "disabled", true);
        }
        else {
            _This.$RemoveAttribute(elmt, "disabled");
        }
    };

    _This.$HideElements = function (elmts) {
        for (var i = 0; i < elmts.length; i++) {
            _This.$HideElement(elmts[i]);
        }
    };

    _This.$ShowElement = function (elmt, hide) {
        _This.$CssDisplay(elmt, hide ? "none" : "");
    };

    _This.$ShowElements = function (elmts, hide) {
        for (var i = 0; i < elmts.length; i++) {
            _This.$ShowElement(elmts[i], hide);
        }
    };

    _This.$RemoveAttribute = function (elmt, attrbuteName) {
        elmt.removeAttribute(attrbuteName);
    };

    _This.$CanClearClip = function () {
        return IsBrowserIE() && _BrowserRuntimeVersion < 10;
    };

    _This.$SetStyleClip = function (elmt, clip) {
        if (clip) {
            elmt.style.clip = "rect(" + Math.round(clip.$Top) + "px " + Math.round(clip.$Right) + "px " + Math.round(clip.$Bottom) + "px " + Math.round(clip.$Left) + "px)";
        }
        else {
            var cssText = elmt.style.cssText;
            var clipRegs = [
                new RegExp(/[\s]*clip: rect\(.*?\)[;]?/i),
                new RegExp(/[\s]*cliptop: .*?[;]?/i),
                new RegExp(/[\s]*clipright: .*?[;]?/i),
                new RegExp(/[\s]*clipbottom: .*?[;]?/i),
                new RegExp(/[\s]*clipleft: .*?[;]?/i)
            ];

            var newCssText = BuildNewCss(cssText, clipRegs, "");

            $Jssor$.$CssCssText(elmt, newCssText);
        }
    };

    _This.$GetNow = function () {
        return new Date().getTime();
    };

    _This.$AppendChild = function (elmt, child) {
        elmt.appendChild(child);
    };

    _This.$AppendChildren = function (elmt, children) {
        Each(children, function (child) {
            _This.$AppendChild(elmt, child);
        });
    };

    _This.$InsertBefore = function (newNode, refNode, pNode) {
        ///	<summary>
        ///		Insert a node before a reference node
        ///	</summary>
        ///	<param name="newNode" type="HTMLElement">
        ///		A new node to insert
        ///	</param>
        ///	<param name="refNode" type="HTMLElement">
        ///		The reference node to insert a new node before
        ///	</param>
        ///	<param name="pNode" type="HTMLElement" optional="true">
        ///		The parent node to insert node to
        ///	</param>

        (pNode || refNode.parentNode).insertBefore(newNode, refNode);
    };

    _This.$InsertAfter = function (newNode, refNode, pNode) {
        ///	<summary>
        ///		Insert a node after a reference node
        ///	</summary>
        ///	<param name="newNode" type="HTMLElement">
        ///		A new node to insert
        ///	</param>
        ///	<param name="refNode" type="HTMLElement">
        ///		The reference node to insert a new node after
        ///	</param>
        ///	<param name="pNode" type="HTMLElement" optional="true">
        ///		The parent node to insert node to
        ///	</param>

        _This.$InsertBefore(newNode, refNode.nextSibling, pNode || refNode.parentNode);
    };

    _This.$InsertAdjacentHtml = function (elmt, where, html) {
        elmt.insertAdjacentHTML(where, html);
    };

    _This.$RemoveElement = function (elmt, pNode) {
        ///	<summary>
        ///		Remove element from parent node
        ///	</summary>
        ///	<param name="elmt" type="HTMLElement">
        ///		The element to remove
        ///	</param>
        ///	<param name="pNode" type="HTMLElement" optional="true">
        ///		The parent node to remove elment from
        ///	</param>
        (pNode || elmt.parentNode).removeChild(elmt);
    };

    _This.$RemoveElements = function (elmts, pNode) {
        Each(elmts, function (elmt) {
            _This.$RemoveElement(elmt, pNode);
        });
    };

    _This.$Empty = function (elmt) {
        _This.$RemoveElements(_This.$Children(elmt, true), elmt);
    };

    _This.$ParseInt = function (str, radix) {
        return parseInt(str, radix || 10);
    };

    var ParseFloat = parseFloat;

    _This.$ParseFloat = ParseFloat;

    _This.$IsChild = function (elmtA, elmtB) {
        var body = document.body;

        while (elmtB && elmtA !== elmtB && body !== elmtB) {
            try {
                elmtB = elmtB.parentNode;
            } catch (e) {
                // Firefox sometimes fires events for XUL elements, which throws
                // a "permission denied" error. so this is not a child.
                return false;
            }
        }

        return elmtA === elmtB;
    };

    function CloneNode(elmt, noDeep, keepId) {
        var clone = elmt.cloneNode(!noDeep);
        if (!keepId) {
            _This.$RemoveAttribute(clone, "id");
        }

        return clone;
    }

    _This.$CloneNode = CloneNode;

    _This.$LoadImage = function (src, callback) {
        var image = new Image();

        function LoadImageCompleteHandler(event, abort) {
            _This.$RemoveEvent(image, "load", LoadImageCompleteHandler);
            _This.$RemoveEvent(image, "abort", ErrorOrAbortHandler);
            _This.$RemoveEvent(image, "error", ErrorOrAbortHandler);

            if (callback)
                callback(image, abort);
        }

        function ErrorOrAbortHandler(event) {
            LoadImageCompleteHandler(event, true);
        }

        if (IsBrowserOpera() && _BrowserRuntimeVersion < 11.6 || !src) {
            LoadImageCompleteHandler(!src);
        }
        else {

            _This.$AddEvent(image, "load", LoadImageCompleteHandler);
            _This.$AddEvent(image, "abort", ErrorOrAbortHandler);
            _This.$AddEvent(image, "error", ErrorOrAbortHandler);

            image.src = src;
        }
    };

    _This.$LoadImages = function (imageElmts, mainImageElmt, callback) {

        var _ImageLoading = imageElmts.length + 1;

        function LoadImageCompleteEventHandler(image, abort) {

            _ImageLoading--;
            if (mainImageElmt && image && image.src == mainImageElmt.src)
                mainImageElmt = image;
            !_ImageLoading && callback && callback(mainImageElmt);
        }

        Each(imageElmts, function (imageElmt) {
            _This.$LoadImage(imageElmt.src, LoadImageCompleteEventHandler);
        });

        LoadImageCompleteEventHandler();
    };

    _This.$BuildElement = function (template, tagName, replacer, createCopy) {
        if (createCopy)
            template = CloneNode(template);

        var templateHolders = FindChildren(template, tagName);
        if (!templateHolders.length)
            templateHolders = $Jssor$.$GetElementsByTag(template, tagName);

        for (var j = templateHolders.length - 1; j > -1; j--) {
            var templateHolder = templateHolders[j];
            var replaceItem = CloneNode(replacer);
            ClassName(replaceItem, ClassName(templateHolder));
            $Jssor$.$CssCssText(replaceItem, templateHolder.style.cssText);

            $Jssor$.$InsertBefore(replaceItem, templateHolder);
            $Jssor$.$RemoveElement(templateHolder);
        }

        return template;
    };

    function JssorButtonEx(elmt) {
        var _Self = this;

        var _OriginClassName = "";
        var _ToggleClassSuffixes = ["av", "pv", "ds", "dn"];
        var _ToggleClasses = [];
        var _ToggleClassName;

        var _IsMouseDown = 0;   //class name 'dn'
        var _IsSelected = 0;    //class name 1(active): 'av', 2(passive): 'pv'
        var _IsDisabled = 0;    //class name 'ds'

        function Highlight() {
            ReplaceClass(elmt, _ToggleClassName, _ToggleClasses[_IsDisabled || _IsMouseDown || (_IsSelected & 2) || _IsSelected]);
            $Jssor$.$Css(elmt, "pointer-events", _IsDisabled ? "none" : "");
        }

        function MouseUpOrCancelEventHandler(event) {
            _IsMouseDown = 0;

            Highlight();

            _This.$RemoveEvent(document, "mouseup", MouseUpOrCancelEventHandler);
            _This.$RemoveEvent(document, "touchend", MouseUpOrCancelEventHandler);
            _This.$RemoveEvent(document, "touchcancel", MouseUpOrCancelEventHandler);
        }

        function MouseDownEventHandler(event) {
            if (_IsDisabled) {
                _This.$CancelEvent(event);
            }
            else {

                _IsMouseDown = 4;

                Highlight();

                _This.$AddEvent(document, "mouseup", MouseUpOrCancelEventHandler);
                _This.$AddEvent(document, "touchend", MouseUpOrCancelEventHandler);
                _This.$AddEvent(document, "touchcancel", MouseUpOrCancelEventHandler);
            }
        }

        _Self.$Selected = function (activate) {
            if (activate != undefined) {
                _IsSelected = (activate & 2) || (activate & 1);

                Highlight();
            }
            else {
                return _IsSelected;
            }
        };

        _Self.$Enable = function (enable) {
            if (enable == undefined) {
                return !_IsDisabled;
            }

            _IsDisabled = enable ? 0 : 3;

            Highlight();
        };

        //JssorButtonEx Constructor
        {
            elmt = _This.$GetElement(elmt);

            var originalClassNameArray = $Jssor$.$Split(ClassName(elmt));
            if (originalClassNameArray)
                _OriginClassName = originalClassNameArray.shift();

            Each(_ToggleClassSuffixes, function (toggleClassSuffix) {
                _ToggleClasses.push(_OriginClassName +toggleClassSuffix);
            });

            _ToggleClassName = Join(" ", _ToggleClasses);

            _ToggleClasses.unshift("");

            _This.$AddEvent(elmt, "mousedown", MouseDownEventHandler);
            _This.$AddEvent(elmt, "touchstart", MouseDownEventHandler);
        }
    }

    _This.$Buttonize = function (elmt) {
        return new JssorButtonEx(elmt);
    };

    _This.$Css = Css;
    _This.$CssN = CssN;
    _This.$CssP = CssP;

    _This.$CssOverflow = CssProxy("overflow");

    _This.$CssTop = CssProxy("top", 2);
    _This.$CssLeft = CssProxy("left", 2);
    _This.$CssWidth = CssProxy("width", 2);
    _This.$CssHeight = CssProxy("height", 2);
    _This.$CssMarginLeft = CssProxy("marginLeft", 2);
    _This.$CssMarginTop = CssProxy("marginTop", 2);
    _This.$CssPosition = CssProxy("position");
    _This.$CssDisplay = CssProxy("display");
    _This.$CssZIndex = CssProxy("zIndex", 1);
    _This.$CssFloat = function (elmt, floatValue) {
        return Css(elmt, IsBrowserIE() ? "styleFloat" : "cssFloat", floatValue);
    };
    _This.$CssOpacity = function (elmt, opacity, ie9EarlierForce) {
        if (opacity != undefined) {
            SetStyleOpacity(elmt, opacity, ie9EarlierForce);
        }
        else {
            return GetStyleOpacity(elmt);
        }
    };

    _This.$CssCssText = function (elmt, text) {
        if (text != undefined) {
            elmt.style.cssText = text;
        }
        else {
            return elmt.style.cssText;
        }
    };

    var _StyleGetter = {
        $Opacity: _This.$CssOpacity,
        $Top: _This.$CssTop,
        $Left: _This.$CssLeft,
        $Width: _This.$CssWidth,
        $Height: _This.$CssHeight,
        $Position: _This.$CssPosition,
        $Display: _This.$CssDisplay,
        $ZIndex: _This.$CssZIndex
    };

    var _StyleSetterReserved;

    function StyleSetter() {
        if (!_StyleSetterReserved) {
            _StyleSetterReserved = Extend({
                $MarginTop: _This.$CssMarginTop,
                $MarginLeft: _This.$CssMarginLeft,
                $Clip: _This.$SetStyleClip,
                $Transform: _This.$SetStyleTransform
            }, _StyleGetter);
        }
        return _StyleSetterReserved;
    }

    function StyleSetterEx() {
        StyleSetter();

        //For Compression Only
        _StyleSetterReserved.$Transform = _StyleSetterReserved.$Transform;

        return _StyleSetterReserved;
    }

    _This.$StyleSetter = StyleSetter;

    _This.$StyleSetterEx = StyleSetterEx;

    _This.$GetStyles = function (elmt, originStyles) {
        StyleSetter();

        var styles = {};

        Each(originStyles, function (value, key) {
            if (_StyleGetter[key]) {
                styles[key] = _StyleGetter[key](elmt);
            }
        });

        return styles;
    };

    _This.$SetStyles = function (elmt, styles) {
        var styleSetter = StyleSetter();

        Each(styles, function (value, key) {
            styleSetter[key] && styleSetter[key](elmt, value);
        });
    };

    _This.$SetStylesEx = function (elmt, styles) {
        StyleSetterEx();

        _This.$SetStyles(elmt, styles);
    };

    var $JssorMatrix$ = new function () {
        var _ThisMatrix = this;

        function Multiply(ma, mb) {
            var acs = ma[0].length;
            var rows = ma.length;
            var cols = mb[0].length;

            var matrix = [];

            for (var r = 0; r < rows; r++) {
                var row = matrix[r] = [];
                for (var c = 0; c < cols; c++) {
                    var unitValue = 0;

                    for (var ac = 0; ac < acs; ac++) {
                        unitValue += ma[r][ac] * mb[ac][c];
                    }

                    row[c] = unitValue;
                }
            }

            return matrix;
        }

        _ThisMatrix.$ScaleX = function (matrix, sx) {
            return _ThisMatrix.$ScaleXY(matrix, sx, 0);
        };

        _ThisMatrix.$ScaleY = function (matrix, sy) {
            return _ThisMatrix.$ScaleXY(matrix, 0, sy);
        };

        _ThisMatrix.$ScaleXY = function (matrix, sx, sy) {
            return Multiply(matrix, [[sx, 0], [0, sy]]);
        };

        _ThisMatrix.$TransformPoint = function (matrix, p) {
            var pMatrix = Multiply(matrix, [[p.x], [p.y]]);

            return Point(pMatrix[0][0], pMatrix[1][0]);
        };
    };

    _This.$CreateMatrix = function (alpha, scaleX, scaleY) {
        var cos = Math.cos(alpha);
        var sin = Math.sin(alpha);
        //var r11 = cos;
        //var r21 = sin;
        //var r12 = -sin;
        //var r22 = cos;

        //var m11 = cos * scaleX;
        //var m12 = -sin * scaleY;
        //var m21 = sin * scaleX;
        //var m22 = cos * scaleY;

        return [[cos * scaleX, -sin * scaleY], [sin * scaleX, cos * scaleY]];
    };

    _This.$GetMatrixOffset = function (matrix, width, height) {
        var p1 = $JssorMatrix$.$TransformPoint(matrix, Point(-width / 2, -height / 2));
        var p2 = $JssorMatrix$.$TransformPoint(matrix, Point(width / 2, -height / 2));
        var p3 = $JssorMatrix$.$TransformPoint(matrix, Point(width / 2, height / 2));
        var p4 = $JssorMatrix$.$TransformPoint(matrix, Point(-width / 2, height / 2));

        return Point(Math.min(p1.x, p2.x, p3.x, p4.x) + width / 2, Math.min(p1.y, p2.y, p3.y, p4.y) + height / 2);
    };

    _This.$Cast = function (fromStyles, difStyles, interPosition, easings, durings, rounds, options) {

        var currentStyles = difStyles;

        if (fromStyles) {
            currentStyles = {};

            for (var key in difStyles) {

                var round = rounds[key] || 1;
                var during = durings[key] || [0, 1];
                var propertyInterPosition = (interPosition - during[0]) / during[1];
                propertyInterPosition = Math.min(Math.max(propertyInterPosition, 0), 1);
                propertyInterPosition = propertyInterPosition * round;
                var floorPosition = Math.floor(propertyInterPosition);
                if (propertyInterPosition != floorPosition)
                    propertyInterPosition -= floorPosition;
                var easing = [key] || easings.$Default || $JssorEasing$.$EaseSwing;
				if(typeof easing==='function'){
					var easingValue = easing(propertyInterPosition);
				}
                var currentPropertyValue;
                var value = fromStyles[key];
                var toValue = difStyles[key];
                var difValue = difStyles[key];

                if ($Jssor$.$IsNumeric(difValue)) {
                    currentPropertyValue = value + difValue * easingValue;
                }
                else {
                    currentPropertyValue = $Jssor$.$Extend({ $Offset: {} }, fromStyles[key]);

                    $Jssor$.$Each(difValue.$Offset, function (rectX, n) {
                        var offsetValue = rectX * easingValue;
                        currentPropertyValue.$Offset[n] = offsetValue;
                        currentPropertyValue[n] += offsetValue;
                    });
                }
                currentStyles[key] = currentPropertyValue;
            }

            if (difStyles.$Zoom || difStyles.$Rotate) {
                currentStyles.$Transform = { $Rotate: currentStyles.$Rotate || 0, $Scale: currentStyles.$Zoom, $OriginalWidth: options.$OriginalWidth, $OriginalHeight: options.$OriginalHeight };
            }
        }

        if (difStyles.$Clip && options.$Move) {
            var styleFrameNClipOffset = currentStyles.$Clip.$Offset;

            var offsetY = (styleFrameNClipOffset.$Top || 0) + (styleFrameNClipOffset.$Bottom || 0);
            var offsetX = (styleFrameNClipOffset.$Left || 0) + (styleFrameNClipOffset.$Right || 0);

            currentStyles.$Left = (currentStyles.$Left || 0) + offsetX;
            currentStyles.$Top = (currentStyles.$Top || 0) + offsetY;
            currentStyles.$Clip.$Left -= offsetX;
            currentStyles.$Clip.$Right -= offsetX;
            currentStyles.$Clip.$Top -= offsetY;
            currentStyles.$Clip.$Bottom -= offsetY;
        }

        if (currentStyles.$Clip && $Jssor$.$CanClearClip() && !currentStyles.$Clip.$Top && !currentStyles.$Clip.$Left && (currentStyles.$Clip.$Right == options.$OriginalWidth) && (currentStyles.$Clip.$Bottom == options.$OriginalHeight))
            currentStyles.$Clip = null;

        return currentStyles;
    };
};

//$JssorObject$
function $JssorObject$() {
    var _ThisObject = this;
    // Fields

    var _Listeners = []; // dictionary of eventName --> array of handlers
    var _Listenees = [];

    // Private Methods
    function AddListener(eventName, handler) {

        $JssorDebug$.$Execute(function () {
            if (eventName == undefined || eventName == null)
                throw new Error("param 'eventName' is null or empty.");

            if (typeof (handler) != "function") {
                throw "param 'handler' must be a function.";
            }

            $Jssor$.$Each(_Listeners, function (listener) {
                if (listener.$EventName == eventName && listener.$Handler === handler) {
                    throw new Error("The handler listened to the event already, cannot listen to the same event of the same object with the same handler twice.");
                }
            });
        });

        _Listeners.push({ $EventName: eventName, $Handler: handler });
    }

    function RemoveListener(eventName, handler) {

        $JssorDebug$.$Execute(function () {
            if (eventName == undefined || eventName == null)
                throw new Error("param 'eventName' is null or empty.");

            if (typeof (handler) != "function") {
                throw "param 'handler' must be a function.";
            }
        });

        $Jssor$.$Each(_Listeners, function (listener, index) {
            if (listener.$EventName == eventName && listener.$Handler === handler) {
                _Listeners.splice(index, 1);
            }
        });
    }

    function ClearListeners() {
        _Listeners = [];
    }

    function ClearListenees() {

        $Jssor$.$Each(_Listenees, function (listenee) {
            $Jssor$.$RemoveEvent(listenee.$Obj, listenee.$EventName, listenee.$Handler);
        });

        _Listenees = [];
    }

    //Protected Methods
    _ThisObject.$Listen = function (obj, eventName, handler, useCapture) {

        $JssorDebug$.$Execute(function () {
            if (!obj)
                throw new Error("param 'obj' is null or empty.");

            if (eventName == undefined || eventName == null)
                throw new Error("param 'eventName' is null or empty.");

            if (typeof (handler) != "function") {
                throw "param 'handler' must be a function.";
            }

            $Jssor$.$Each(_Listenees, function (listenee) {
                if (listenee.$Obj === obj && listenee.$EventName == eventName && listenee.$Handler === handler) {
                    throw new Error("The handler listened to the event already, cannot listen to the same event of the same object with the same handler twice.");
                }
            });
        });

        $Jssor$.$AddEvent(obj, eventName, handler, useCapture);
        _Listenees.push({ $Obj: obj, $EventName: eventName, $Handler: handler });
    };

    _ThisObject.$Unlisten = function (obj, eventName, handler) {

        $JssorDebug$.$Execute(function () {
            if (!obj)
                throw new Error("param 'obj' is null or empty.");

            if (eventName == undefined || eventName == null)
                throw new Error("param 'eventName' is null or empty.");

            if (typeof (handler) != "function") {
                throw "param 'handler' must be a function.";
            }
        });

        $Jssor$.$Each(_Listenees, function (listenee, index) {
            if (listenee.$Obj === obj && listenee.$EventName == eventName && listenee.$Handler === handler) {
                $Jssor$.$RemoveEvent(obj, eventName, handler);
                _Listenees.splice(index, 1);
            }
        });
    };

    _ThisObject.$UnlistenAll = ClearListenees;

    // Public Methods
    _ThisObject.$On = _ThisObject.addEventListener = AddListener;

    _ThisObject.$Off = _ThisObject.removeEventListener = RemoveListener;

    _ThisObject.$TriggerEvent = function (eventName) {

        var args = [].slice.call(arguments, 1);

        $Jssor$.$Each(_Listeners, function (listener) {
            listener.$EventName == eventName && listener.$Handler.apply(window, args);
        });
    };

    _ThisObject.$Destroy = function () {
        ClearListenees();
        ClearListeners();

        for (var name in _ThisObject)
            delete _ThisObject[name];
    };

    $JssorDebug$.$C_AbstractClass(_ThisObject);
};

function $JssorAnimator$(delay, duration, options, elmt, fromStyles, difStyles) {
    delay = delay || 0;

    var _ThisAnimator = this;
    var _AutoPlay;
    var _Hiden;
    var _CombineMode;
    var _PlayToPosition;
    var _PlayDirection;
    var _NoStop;
    var _TimeStampLastFrame = 0;

    var _SubEasings;
    var _SubRounds;
    var _SubDurings;
    var _Callback;

    var _Shift = 0;
    var _Position_Current = 0;
    var _Position_Display = 0;
    var _Hooked;

    var _Position_InnerBegin = delay;
    var _Position_InnerEnd = delay + duration;
    var _Position_OuterBegin;
    var _Position_OuterEnd;
    var _LoopLength;

    var _NestedAnimators = [];
    var _StyleSetter;

    function GetPositionRange(position, begin, end) {
        var range = 0;

        if (position < begin)
            range = -1;

        else if (position > end)
            range = 1;

        return range;
    }

    function GetInnerPositionRange(position) {
        return GetPositionRange(position, _Position_InnerBegin, _Position_InnerEnd);
    }

    function GetOuterPositionRange(position) {
        return GetPositionRange(position, _Position_OuterBegin, _Position_OuterEnd);
    }

    function Shift(offset) {
        _Position_OuterBegin += offset;
        _Position_OuterEnd += offset;
        _Position_InnerBegin += offset;
        _Position_InnerEnd += offset;

        _Position_Current += offset;
        _Position_Display += offset;

        _Shift = offset;
    }

    function Locate(position, relative) {
        var offset = position - _Position_OuterBegin + delay * relative;

        Shift(offset);

        //$JssorDebug$.$Execute(function () {
        //    _ThisAnimator.$Position_InnerBegin = _Position_InnerBegin;
        //    _ThisAnimator.$Position_InnerEnd = _Position_InnerEnd;
        //    _ThisAnimator.$Position_OuterBegin = _Position_OuterBegin;
        //    _ThisAnimator.$Position_OuterEnd = _Position_OuterEnd;
        //});

        return _Position_OuterEnd;
    }

    function GoToPosition(positionOuter, force) {
        var trimedPositionOuter = positionOuter;

        if (_LoopLength && (trimedPositionOuter >= _Position_OuterEnd || trimedPositionOuter <= _Position_OuterBegin)) {
            trimedPositionOuter = ((trimedPositionOuter - _Position_OuterBegin) % _LoopLength + _LoopLength) % _LoopLength + _Position_OuterBegin;
        }

        if (!_Hooked || _NoStop || force || _Position_Current != trimedPositionOuter) {

            var positionToDisplay = Math.min(trimedPositionOuter, _Position_OuterEnd);
            positionToDisplay = Math.max(positionToDisplay, _Position_OuterBegin);

            if (!_Hooked || _NoStop || force || positionToDisplay != _Position_Display) {

                if (difStyles) {

                    var interPosition = (positionToDisplay - _Position_InnerBegin) / (duration || 1);

                    if (options.$Reverse)
                        interPosition = 1 - interPosition;

                    var currentStyles = $Jssor$.$Cast(fromStyles, difStyles, interPosition, _SubEasings, _SubDurings, _SubRounds, options);

                    $Jssor$.$Each(currentStyles, function (value, key) {
                        _StyleSetter[key] && _StyleSetter[key](elmt, value);
                    });
                }

                _ThisAnimator.$OnInnerOffsetChange(_Position_Display - _Position_InnerBegin, positionToDisplay - _Position_InnerBegin);

                _Position_Display = positionToDisplay;

                $Jssor$.$Each(_NestedAnimators, function (animator, i) {
                    var nestedAnimator = positionOuter < _Position_Current ? _NestedAnimators[_NestedAnimators.length - i - 1] : animator;
                    nestedAnimator.$GoToPosition(_Position_Display - _Shift, force);
                });

                var positionOld = _Position_Current;
                var positionNew = _Position_Display;

                _Position_Current = trimedPositionOuter;
                _Hooked = true;

                _ThisAnimator.$OnPositionChange(positionOld, positionNew);
            }
        }
    }

    function Join(animator, combineMode, noExpand) {
        ///	<summary>
        ///		Combine another animator as nested animator
        ///	</summary>
        ///	<param name="animator" type="$JssorAnimator$">
        ///		An instance of $JssorAnimator$
        ///	</param>
        ///	<param name="combineMode" type="int">
        ///		0: parallel - place the animator parallel to this animator.
        ///		1: chain - chain the animator at the _Position_InnerEnd of this animator.
        ///	</param>
        $JssorDebug$.$Execute(function () {
            if (combineMode !== 0 && combineMode !== 1)
                $JssorDebug$.$Fail("Argument out of range, the value of 'combineMode' should be either 0 or 1.");
        });

        if (combineMode)
            animator.$Locate(_Position_OuterEnd, 1);

        if (!noExpand) {
            _Position_OuterBegin = Math.min(_Position_OuterBegin, animator.$GetPosition_OuterBegin() + _Shift);
            _Position_OuterEnd = Math.max(_Position_OuterEnd, animator.$GetPosition_OuterEnd() + _Shift);
        }
        _NestedAnimators.push(animator);
    }

    var RequestAnimationFrame = window.requestAnimationFrame
    || window.webkitRequestAnimationFrame
    || window.mozRequestAnimationFrame
    || window.msRequestAnimationFrame;

    if ($Jssor$.$IsBrowserSafari() && $Jssor$.$BrowserVersion() < 7) {
        RequestAnimationFrame = null;

        //$JssorDebug$.$Log("Custom animation frame for safari before 7.");
    }

    RequestAnimationFrame = RequestAnimationFrame || function (callback) {
        $Jssor$.$Delay(callback, options.$Interval);
    };

    function ShowFrame() {
        if (_AutoPlay) {
            var now = $Jssor$.$GetNow();
            var timeOffset = Math.min(now - _TimeStampLastFrame, options.$IntervalMax);
            var timePosition = _Position_Current + timeOffset * _PlayDirection;
            _TimeStampLastFrame = now;

            if (timePosition * _PlayDirection >= _PlayToPosition * _PlayDirection)
                timePosition = _PlayToPosition;

            GoToPosition(timePosition);

            if (!_NoStop && timePosition * _PlayDirection >= _PlayToPosition * _PlayDirection) {
                Stop(_Callback);
            }
            else {
                RequestAnimationFrame(ShowFrame);
            }
        }
    }

    function PlayToPosition(toPosition, callback, noStop) {
        if (!_AutoPlay) {
            _AutoPlay = true;
            _NoStop = noStop
            _Callback = callback;
            toPosition = Math.max(toPosition, _Position_OuterBegin);
            toPosition = Math.min(toPosition, _Position_OuterEnd);
            _PlayToPosition = toPosition;
            _PlayDirection = _PlayToPosition < _Position_Current ? -1 : 1;
            _ThisAnimator.$OnStart();
            _TimeStampLastFrame = $Jssor$.$GetNow();
            RequestAnimationFrame(ShowFrame);
        }
    }

    function Stop(callback) {
        if (_AutoPlay) {
            _NoStop = _AutoPlay = _Callback = false;
            _ThisAnimator.$OnStop();

            if (callback)
                callback();
        }
    }

    _ThisAnimator.$Play = function (positionLength, callback, noStop) {
        PlayToPosition(positionLength ? _Position_Current + positionLength : _Position_OuterEnd, callback, noStop);
    };

    _ThisAnimator.$PlayToPosition = PlayToPosition;

    _ThisAnimator.$PlayToBegin = function (callback, noStop) {
        PlayToPosition(_Position_OuterBegin, callback, noStop);
    };

    _ThisAnimator.$PlayToEnd = function (callback, noStop) {
        PlayToPosition(_Position_OuterEnd, callback, noStop);
    };

    _ThisAnimator.$Stop = Stop;

    _ThisAnimator.$Continue = function (toPosition) {
        PlayToPosition(toPosition);
    };

    _ThisAnimator.$GetPosition = function () {
        return _Position_Current;
    };

    _ThisAnimator.$GetPlayToPosition = function () {
        return _PlayToPosition;
    };

    _ThisAnimator.$GetPosition_Display = function () {
        return _Position_Display;
    };

    _ThisAnimator.$GoToPosition = GoToPosition;

    _ThisAnimator.$GoToBegin = function () {
        GoToPosition(_Position_OuterBegin, true);
    };

    _ThisAnimator.$GoToEnd = function () {
        GoToPosition(_Position_OuterEnd, true);
    };

    _ThisAnimator.$Move = function (offset) {
        GoToPosition(_Position_Current + offset);
    };

    _ThisAnimator.$CombineMode = function () {
        return _CombineMode;
    };

    _ThisAnimator.$GetDuration = function () {
        return duration;
    };

    _ThisAnimator.$IsPlaying = function () {
        return _AutoPlay;
    };

    _ThisAnimator.$IsOnTheWay = function () {
        return _Position_Current > _Position_InnerBegin && _Position_Current <= _Position_InnerEnd;
    };

    _ThisAnimator.$SetLoopLength = function (length) {
        _LoopLength = length;
    };

    _ThisAnimator.$Locate = Locate;

    _ThisAnimator.$Shift = Shift;

    _ThisAnimator.$Join = Join;

    _ThisAnimator.$Combine = function (animator) {
        ///	<summary>
        ///		Combine another animator parallel to this animator
        ///	</summary>
        ///	<param name="animator" type="$JssorAnimator$">
        ///		An instance of $JssorAnimator$
        ///	</param>
        Join(animator, 0);
    };

    _ThisAnimator.$Chain = function (animator) {
        ///	<summary>
        ///		Chain another animator at the _Position_InnerEnd of this animator
        ///	</summary>
        ///	<param name="animator" type="$JssorAnimator$">
        ///		An instance of $JssorAnimator$
        ///	</param>
        Join(animator, 1);
    };

    _ThisAnimator.$GetPosition_InnerBegin = function () {
        ///	<summary>
        ///		Internal member function, do not use it.
        ///	</summary>
        ///	<private />
        ///	<returns type="int" />
        return _Position_InnerBegin;
    };

    _ThisAnimator.$GetPosition_InnerEnd = function () {
        ///	<summary>
        ///		Internal member function, do not use it.
        ///	</summary>
        ///	<private />
        ///	<returns type="int" />
        return _Position_InnerEnd;
    };

    _ThisAnimator.$GetPosition_OuterBegin = function () {
        ///	<summary>
        ///		Internal member function, do not use it.
        ///	</summary>
        ///	<private />
        ///	<returns type="int" />
        return _Position_OuterBegin;
    };

    _ThisAnimator.$GetPosition_OuterEnd = function () {
        ///	<summary>
        ///		Internal member function, do not use it.
        ///	</summary>
        ///	<private />
        ///	<returns type="int" />
        return _Position_OuterEnd;
    };

    _ThisAnimator.$OnPositionChange = _ThisAnimator.$OnStart = _ThisAnimator.$OnStop = _ThisAnimator.$OnInnerOffsetChange = $Jssor$.$EmptyFunction;
    _ThisAnimator.$Version = $Jssor$.$GetNow();

    //Constructor  1
    {
        options = $Jssor$.$Extend({
            $Interval: 16,
            $IntervalMax: 50
        }, options);

        //Sodo statement, for development time intellisence only
        $JssorDebug$.$Execute(function () {
            options = $Jssor$.$Extend({
                $LoopLength: undefined,
                $Setter: undefined,
                $Easing: undefined
            }, options);
        });

        _LoopLength = options.$LoopLength;

        _StyleSetter = $Jssor$.$Extend({}, $Jssor$.$StyleSetter(), options.$Setter);

        _Position_OuterBegin = _Position_InnerBegin = delay;
        _Position_OuterEnd = _Position_InnerEnd = delay + duration;

        _SubRounds = options.$Round || {};
        _SubDurings = options.$During || {};
        _SubEasings = $Jssor$.$Extend({ $Default: $Jssor$.$IsFunction(options.$Easing) && options.$Easing || $JssorEasing$.$EaseSwing }, options.$Easing);
    }
};

function $JssorPlayerClass$() {

    var _ThisPlayer = this;
    var _PlayerControllers = [];

    function PlayerController(playerElement) {
        var _SelfPlayerController = this;
        var _PlayerInstance;
        var _PlayerInstantces = [];

        function OnPlayerInstanceDataAvailable(event) {
            var srcElement = $Jssor$.$EvtSrc(event);
            _PlayerInstance = srcElement.pInstance;

            $Jssor$.$RemoveEvent(srcElement, "dataavailable", OnPlayerInstanceDataAvailable);
            $Jssor$.$Each(_PlayerInstantces, function (playerInstance) {
                if (playerInstance != _PlayerInstance) {
                    playerInstance.$Remove();
                }
            });

            playerElement.pTagName = _PlayerInstance.tagName;
            _PlayerInstantces = null;
        }

        function HandlePlayerInstance(playerInstanceElement) {
            var playerHandler;

            if (!playerInstanceElement.pInstance) {
                var playerHandlerAttribute = $Jssor$.$AttributeEx(playerInstanceElement, "pHandler");

                if ($JssorPlayer$[playerHandlerAttribute]) {
                    $Jssor$.$AddEvent(playerInstanceElement, "dataavailable", OnPlayerInstanceDataAvailable);
                    playerHandler = new $JssorPlayer$[playerHandlerAttribute](playerElement, playerInstanceElement);
                    _PlayerInstantces.push(playerHandler);

                    $JssorDebug$.$Execute(function () {
                        if ($Jssor$.$Type(playerHandler.$Remove) != "function") {
                            $JssorDebug$.$Fail("'pRemove' interface not implemented for player handler '" + playerHandlerAttribute + "'.");
                        }
                    });
                }
            }

            return playerHandler;
        }

        _SelfPlayerController.$InitPlayerController = function () {
            if (!playerElement.pInstance && !HandlePlayerInstance(playerElement)) {

                var playerInstanceElements = $Jssor$.$Children(playerElement);

                $Jssor$.$Each(playerInstanceElements, function (playerInstanceElement) {
                    HandlePlayerInstance(playerInstanceElement);
                });
            }
        };
    }

    _ThisPlayer.$EVT_SWITCH = 21;

    _ThisPlayer.$FetchPlayers = function (elmt) {
        elmt = elmt || document.body;

        var playerElements = $Jssor$.$FindChildren(elmt, "player");

        $Jssor$.$Each(playerElements, function (playerElement) {
            if (!_PlayerControllers[playerElement.pId]) {
                playerElement.pId = _PlayerControllers.length;
                _PlayerControllers.push(new PlayerController(playerElement));
            }
            var playerController = _PlayerControllers[playerElement.pId];
            playerController.$InitPlayerController();
        });
    };
}

var cpslider,$crange;
/*
* Cars Results Refresh Rendering
*/
$(document).ready(function(){
	var dCookie = Cookies.get('carsSearchCookie') || ''
	var checkHomeSearch = $('body.homePage');
	if(dCookie!="" && checkHomeSearch.length>0){
		var cookieData = JSON.parse(dCookie);
		$('#roundFromC').val(cookieData.roundFromC);
		$('#roundToC').val(cookieData.roundToC);		
		$('#roundFromCId').val(cookieData.roundFromCId);
		$('#roundToCId').val(cookieData.roundToCId);
		$('#roundFromC').attr('data-iata',cookieData.roundFromCId);
		$('#roundToC').attr('data-iata',cookieData.roundToCId);
		$('#carSearchKey').val(cookieData.carsSearchKey);
	}
});
var PAGEID = $('input[name=_PAGE_ID]');
if(PAGEID.val()=="CARSRESULT_PAGE"){
	carsSearchOnLoad();
}
/**
* Cars Results Refresh Rendering
*/	
function carsSearchOnLoad(){
	getCarsURL(window.location.href);
	
}	
initCarsDatePickerComponent();
initCarsTimePickerComponent();
initCarsPredictiveSearchComponent();

/* Date Pickers for Home Page */
function initCarsDatePickerComponent() {
	var numberOfCalendar = 1;

	//if(jsUpdateSize(1350)===false){
	//	/* pos1 = left;
	//	 pos2 = left; */
	//	numberOfCalendar = 1;
	//}

	var dateformat = "DD/MM/YYYY";
	var globalDate = new Date();

	var right = "right";
	var left = "left";

	var pos1 = right;
	var pos2 = left;
	if($('html').attr('data-lang')=='ar'){
		pos1 = left;
		pos2 = right;		
	}
	/*Date-Picker Cars Home Page*/
	var fromSelector = $('._datepicker.carsDateFrom');
	var toSelector = $('._datepicker.carsDateTo');
	var from = [fromSelector[0], pos2, false, false, false, new Date(), $('#carsDateFromHidden')];
	var to = [toSelector[0],((jsUpdateSize(769) === false) ? pos1 : pos2), true, true, false, new Date(), $('#carsDateToHidden')];
	loadDatePicker(from, to, '', numberOfCalendar, dateformat, 0, globalDate);
	
	/*Date-Picker Cars Modify Search Page*/
	var mfromSelector = $('._datepicker.mmcarsDateFrom');
	var mtoSelector = $('._datepicker.mmcarsDateTo');
	var mfromtwoway = [mfromSelector[0],((jsUpdateSize(769)===false)? pos2:pos1),false,false,true,
	new Date($('#mcarsDateFromHidden').val() || new Date()),$('#mcarsDateFromHidden')];
	var mtotwoway = [mtoSelector[0],((jsUpdateSize(769)===false)? pos2:pos1),true,true,true,
	new Date($('#mcarsDateToHidden').val() || new Date()),$('#mcarsDateToHidden')];
	loadDatePicker(mfromtwoway,mtotwoway,'',numberOfCalendar,dateformat,0,globalDate,true);
	
	
	/*Date-Picker Home Page Pop up Round-Trip*/
	var fromSelectorp = $('._datepicker.carsDateFromPop');
	var toSelectorp = $('._datepicker.carsDateToPop');
	var fromp = [fromSelectorp[0], pos2, false, false, false, new Date(), $('#carsDateFromHiddenP')];
	var top = [toSelectorp[0],((jsUpdateSize(769) === false) ? pos1 : pos2), true, true, false, new Date(), $('#carsDateToHiddenP')];
	loadDatePicker(fromp, top, '', numberOfCalendar, dateformat, 0, globalDate);
		
}

/* Time Pickers for Home Page */
function initCarsTimePickerComponent() {
	//$('._timepicker.carsTimeFrom').timepicki();
	$('._timepicker.carsTimeFrom').clockpicker({
		placement: 'bottom',
		align: 'left',
		donetext: 'Ok'
	});
	$('._timepicker.carsTimeTo').clockpicker({
		placement: 'bottom',
		align: 'left',
		donetext: 'Ok'
	});
}

function initCarsPredictiveSearchComponent() {
	/**
	 * Car Predictive search
	 */
	//Round Trip From
	smartAutoCompleteCar('#roundFromC','rtfsc1','roundFromCId', '#roundToC', '#roundToCId');
	//Round Trip To
	smartAutoCompleteCar('#roundToC','rttsc1','roundToCId');
	
	//Round Trip popup From
	smartAutoCompleteCar('#roundFromCPOP','carcinpop1','roundFromCPOPId','#roundToCPOP', '#roundToCIdPOP');
	//Round Trip poup To
	smartAutoCompleteCar('#roundToCPOP','carcoutpop1','roundToCIdPOP');

	//$('body').on('change', '#roundFromC', function() {
	//	console.log('bingo');
    //
	//	$('#roundToC').val($('#roundFromC').val());
	//	$('#roundToCId').val($('#roundFromCId').val());
    //
	//});
}

/**
 *@Info Payment Module
*/
function payMeCar(args,elm) {
	
	var pnlHdng = $(".payment .panel-heading");
	var chkActvC = false;
	for(var i=0; i<pnlHdng.length; i++){
		if($(pnlHdng[i]).is(':visible') && $(pnlHdng[i]).hasClass("active")){
			chkActvC = true;
			break;
		}
	}
	
	if(chkActvC){
		noRefreshAction();
	    var pid = $('#CTDP').attr('data-pid');
	    var payMode = args;
		var data ={pid:pid,payMode:payMode};
	   
		if (args === 'PAYFORT') {
			var condition1 = validateCardInfo();
			if (condition1) {
				$('.alert_custom').hide();
				btnLoadingAnimation($('#paymeBtn'));
				$('#paymeBtn').attr("disabled", "disabled");
				
				var CARD_NO = $('#CARD_NO');
				var CARD_HOLDER_NAME = $('#CARD_HOLDER_NAME');
				var CARD_EXPIRY_MONTH = $('#CARD_EXPIRY_MONTH');
				var CARD_EXPIRY_YEAR = $('#CARD_EXPIRY_YEAR');
				var CARD_CVV = $('#CARD_CVV');
				var data = {
				    CARD_NO: CARD_NO.val() || '',
				    CARD_HOLDER_NAME: CARD_HOLDER_NAME.val() || '',
				    CARD_EXPIRY_MONTH: CARD_EXPIRY_MONTH.val() || '',
				    CARD_EXPIRY_YEAR: CARD_EXPIRY_YEAR.val() || '',
				    CARD_CVV: CARD_CVV.val() || '',
				    PID: pid,
				}
				dontRefreshPopup();
				
				$.post('/payment/payfort', data, function(res) {
					 if(res.status==='success')
					 {
					 	location.href = res.url;
					 }
					 else{
						location.href = '/common/error';
					 }     
				});
			}
		}
		 if(args==='CHECKOUT'){
			 var condition1 = validateCardInfo();
			 if(condition1){
			 btnLoadingAnimation($('#paymeBtn'));
			 $('#checkout-form').submit();
		  } 
		 }
		
		if (args === 'SADAD') {
			var sadadFire = validateSadadOLP();
			if(sadadFire){
				$('.alert_custom').hide();
				btnLoadingAnimation($('#paymeBtn'));
				$('#paymeBtn').attr("disabled", "disabled");			
				dontRefreshPopup();
				var OLP_ID = $('#SADAD_OLP_ID');
				var data = {
				    OLP_ID: OLP_ID.val() || '',
				    PID: pid,
				}
				$.post('/payment/sadad', data, function(res) {
					if(res.status === "SUCCESS") {
						 location.href=res.ibURL;
						 $('#paymentStep').addClass('done');
						 $('#goodToGoStep').addClass('active');
					}
					else if(res.status === "FAILED") {
						$('#sadadErrorMessage').text(res.errorMessage).addClass('validate_error_message');
						$('#dontRefreshPopup').modal('hide');
						var offsetPopTop = $('.payment.opcPayment').offset().top;
						$('html, body').animate({scrollTop:offsetPopTop}, 500);
					}
				});
			}
		}
	        
		if(args === 'INSTALLMENTS'){
			
			btnLoadingAnimation($('#paymeBtn'));
			$('#paymeBtn').attr("disabled", "disabled");
			dontRefreshPopup();		
			var data= {pid:pid	}
			$.post('/payment/installments',data,function(res){
				if(res.status==='SUCCESS')
				 {
					 location.href=res.redirectURL;
				 }
				 else{
					 location.href = '/common/error';
				 }
			});
		}
		
		 if(args === 'PAYATSTORE'){
			 
			 var data ={pid:pid};
			 $.post('/payment/payAtStorePreBook',data,function(res){
				 if(res.response.bookRS.ar.ttl==null || res.response.bookRS.ar.ttl==' ')
				 {
					 location.href="/flight/error"; 
					 return;
				 }
				 else if(res !== null && res.response && res.status=='SUCCESS'){
					 payAtStoreFlightService.pnr =  res.response.bookRS.ar.pnr;
					 var ttl = res.response.bookRS.ar.ttl;
					 data ={pid:pid,ttl:ttl};
					 //console.log(data);
					 $.post('/payment/payAtStore',data,function(res){
						 if(res.status=='ERROR'){
							  location.href="/flight/error";
							  return;
							}else{
								    var lang = 'en'; 
									//Set Params to the service
									payAtStoreFlightService.pid = data.pid;
									payAtStoreFlightService.lang = lang;
									payAtStoreFlightService.voucher_number =res.voucherNumber;
									payAtStoreFlightService.request_id = res.requestID;
									payAtStoreFlightService.orderID=res.orderID;
									payAtStoreFlightService.url=res.URL;
									//Initialized the PayAtStore Server
									payAtStoreFlightService.loadFrame();
							}
					 });
				 }
				 else if(res !== null && res.response && res.status=='PNR_EXIST'){
					 $.post('/payment/payAtStore',data,function(res){
						 if(res.status=='ERROR'){
							 location.href="/flight/error";
							 return;
						 }else{   
							    var lang = 'en'; 
								//Set Params to the service
								payAtStoreFlightService.pid = data.pid;
								payAtStoreFlightService.lang = lang;
								payAtStoreFlightService.voucher_number =res.voucherNumber;
								payAtStoreFlightService.request_id = res.requestID;
								payAtStoreFlightService.orderID=res.orderID;
								payAtStoreFlightService.url=res.URL;
								//Initialized the PayAtStore Server
								payAtStoreFlightService.loadFrame();
						 }
					 });
				 }
				 else{
					location.href="/flight/error"; 
				    return;
				 }
			 });
		 }
	}
	else{
		growl_alert(i18n.t("slctPymntOptn"));
	}
}

function smartAutoCompleteCar(inputData,ulClassName,updateID, copyInputData, copyUpdateID){
	var $this = $(inputData);

	var $copyThis = $(copyInputData);
	var $copyUpdate = $(copyUpdateID);

	var $stringLength = 2;
	var timer,xhr;
	var clickCheck = false;
	$this.on('keyup', function(event) {
		if(arabicStringValidate($this.val())){
			$stringLength = 1;
		}
		var disKey = (event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 27 || event.keyCode == 37 || event.keyCode == 39 || event.keyCode == 13);
		//Check if the key if greather than the mentioned
		if($.trim($this.val()).length>=$stringLength) {
		}else{
			//Close the Predictive Panel
			$this.parent().find('.forCar').hide();
			$this.removeClass('focusin');
			//Clear the UL
			$('ul.'+ulClassName).empty();
			//forCar
		}
		//Navigate to the next dropdown
		if(!disKey){
			clickCheck = false;
			//clear hidden input for the selected target
			$('#'+updateID).val('');
			//Start the timer
			window.clearTimeout(timer);
			timer = window.setTimeout(function(){

				if($.trim($this.val()).length>=2){
					if(xhr && xhr.readystate != 4){
						xhr.abort();
					}
					var predictiveArr = [];
					//get the data from url
					xhr = $.get("/predictive/"+$.trim($this.val()),{q:$.trim($this.val())}).done(function(data){
						//console.log(data);
						//check if the result is not empty
						for(var i=0; i<data.length; i++){
							data[i].pkPredictiveSearchDataId = data[i].payload.airportCode;
							var c=data[i];
							var PTD='>>';
							predictiveArr.push('<li><a href="#" class="flaticon-shape autoRes" data-source-att="City'+PTD+ c.payload.airportCode +PTD +c.payload.airportName+PTD+c.payload.cityId+PTD+c.payload.cityName+PTD+c.payload.countryName+' " id="'+data[i].pkPredictiveSearchDataId+'" class="autoRes" data-iatacode="'+data[i].payload.airportCode+'">' +data[i].payload.cityName+ ', '  +data[i].payload.countryName+ ' <span class="grey">, '+'('+data[i].payload.airportCode+')'+ '- '  +data[i].payload.airportName+'</span></a></li>');
						}
						if(data!=""){
							$('ul.'+ulClassName).empty();
							$('ul.'+ulClassName).append(predictiveArr.join(''));
							if($this.is(":focus")){
								$this.parent().find('.forCar').show();
								$this.addClass('focusin');
							}
						}else{
							$('ul.'+ulClassName).empty();
							$('ul.'+ulClassName).prepend('<li><div class="noRecordFound">'+i18n.t('noMatchingResultsFound')+'</div></li>');
							if($this.is(":focus")){
								$this.parent().find('.forCar').show();
								$this.addClass('focusin');
							}
						}
					});
				}
			},700);
		}
	});
	$this.on('blur',function(){
		setTimeout(function(){
			if(clickCheck==false){
				var uIDInput = $('#'+updateID);
				var q = $.trim($this.val());
				var dispStr = "";
				var language='en_GB';
				if(arabicStringValidate(q)){
					language='ar_SA';
				}
				//regular expression for un-matched search string
				var regx='(\\()((?:[a-zA-Z]{3}))(\\))';
				var p = new RegExp(regx,["g"]);
				var m = p.exec(q);
				if(m!=null){q = m[2];}
				if(q.length>3 || arabicStringValidate(q)===true){
					$.get("/predictive/"+q,{q:q}).done(function(data){
						if(data.length>0){
							uIDInput.val(data[0].payload.airportCode);
							dispStr = data[0].payload.cityName+', '+data[0].payload.countryName+' , ('+data[0].payload.airportCode+ ') - '+data[0].payload.airportName;
							$this.val(dispStr);
							if($copyThis != null) {
								$copyThis.val(dispStr);
							}
							if($copyUpdate != null) {
								$copyUpdate.val(data[0].payload.airportCode);
							}
							//var PTD='>>';
							//var hotelDetails = "City"+PTD+ data[0].payload.airportCode +PTD +data[0].payload.airportName+PTD+data[0].payload.cityId+PTD+data[0].payload.cityName+PTD+data[0].payload.countryName;
							//updateFlightPredictiveWithElement($this,updateID,data[0].payload.airportCode,data[0].payload.airportCode,dispStr,hotelDetails);
						}
					});
				}else{
					if(q!=""){
						$.get("/predictive/"+q,{q:q}).done(function(data){
							if(data.length>0){
								for(var i=0; i<data.length; i++){
									if(data[i].payload.airportCode.toLowerCase()==q.toLowerCase()){
										uIDInput.val(data[i].payload.airportCode);
										dispStr = data[i].payload.cityName+', '+data[i].payload.countryName+' , ('+data[i].payload.airportCode+ ') - '+data[i].payload.airportName;
										$this.val(dispStr);
										if($copyThis != null) {
											$copyThis.val(dispStr);
										}
										if($copyUpdate != null) {
											$copyUpdate.val(data[i].payload.airportCode);
										}
											
										var PTD='>>';
										var carDetails = "City"+PTD+ data[i].payload.airportCode +PTD +data[i].payload.airportName+PTD+data[i].payload.cityId+PTD+data[i].payload.cityName+PTD+data[i].payload.countryName;
										
										$('input[name=carSearchKey]').val(carDetails);
										//updateFlightPredictiveWithElement($this,updateID,data[i].payload.airportCode,data[i].payload.airportCode,dispStr,hotelDetails);
										//$('.'+ulClassName).triggerHandler('click');
									}
								}
							}
							//else{
							//	var elm = $('<div id="'+q+'" data-iatacode="'+q+'">'+q+'</div>');
							//	updateFlightPredictiveInp($this,elm,updateID);
							//	uIDInput.val(q);
							//}
						});

					}
				}
			}
		},100);
	});

	//Prevent closing of predictive search on clicking itself
	$('.forCar').on('click',function(e){
		e.preventDefault();
	});
	//Close the predictive search on clicking on the body
	$(document).on('click',function(e){
		$('.forCar').hide();
	});
	$('input').on('focus',function(e){
		$('.forCar').hide();
	});
	$('.'+ulClassName).on('click','.autoRes',function(){

		var $thisAttrVal = $(this).attr('data-source-att');
		$('input[name=carSearchKey]').val($thisAttrVal);
		$this.val($(this).text());
		$('#'+updateID).val($(this).attr('id'));

		if($copyThis != null) {
			$copyThis.val($this.val());
		}
		if($copyUpdate != null) {
			$copyUpdate.val($('#'+updateID).val());
		}

		clickCheck = true;
		$('.forCar').hide();
		return false;
	});
}

function changeCarfrmR(){
	dynamicJsCssLoading('reviewPage'+(i18n.options.lng == "en" ?"":'-'+i18n.options.lng)+'.css','/common/themes/v2/css/results'+(i18n.options.lng == "en"?"":'-'+i18n.options.lng)+'.css','css');
	$.get('/cars/resultStatic', {}, function(template) {
		$('#_bodyContainer').empty();
		$('#_bodyContainer').html(template);
		document.close();
		$.get('/common/themes/v2/tmpl/cars/searchResult.ejs?v=nd-v0102',{}, function(t) {
			carsVar.template = t;
			carsVar.render();
			carsVar.updateModifySearch();
			loadCarsGrid();
			$('.yhfReset').trigger('click');
			initPriceRangeSlider();
			carsVar.bckfrmReview = true;
			window.history.back();
		});
	});
}
function bookCarNow(index,elm) {
	btnLoadingAnimation($(elm));
	carsVar.resurl = window.location.href;
	// prepare data
	var data = {
		searchCriteria: carsVar.searchForm,
		vehBookingInfoRQ: {
			rentalCore: carsVar.vehSearchRS.rentalCore,
			source: carsVar.vehSearchRQ.source,
			bookingInfo: {
				bookingChannelID: carsVar.filteredResult[index].bookingChannelID,
				vehicleInfo: carsVar.filteredResult[index].vehicleInfo,
				program: carsVar.filteredResult[index].programs[0]
			}
		}
	}
	$.ajax({
		url: '/cars/bookingInfo',
		dataType: 'json',
		type: 'post',
		contentType: 'application/json',
		data: JSON.stringify(data),
		success: function(res) {
			if(res !== null && res.status === 'SUCCESS') {
				carsVar.pid = res.pid;
				carsVar.vehBookingInfoRS = res.data.vehBookingInfoRS;
				carsVar.calcTotals();
				carsVar.travellerInfo = res.travellerInfo;
				carsVar.changeCarOpts = res.changeCarOpts;
				reloadCon = true;
				getCarsURL('cars/review?pid='+res.pid, {pid: res.pid});
			}else if(res.status === 'ERROR') {
				growl_alert(i18n.t("selectedCarNotAvl"));
				$(elm).removeClass('LoadBtn');
			}
		},
		error: function() {
			growl_alert(i18n.t("selectedCarNotAvl"));
			$(elm).removeClass('LoadBtn');
		}
	});
}

function validateCarsSearchPOP() {

	var roundFromC = $('#roundFromCPOP');
	var roundToC = $('#roundToCPOP');
	var dupCodeMsgC = $('#dupCodeMsgCP');
	var roundFromCId = $('#roundFromCPOPId');
	var roundToCId = $('#roundToCIdPOP');
	var carSearchKey = $('#carSearchKeyP');
	var carPredectiveInfo = carSearchKey.val().split('>>');
	
	
	var dateFrom = $('._datepicker.carsDateFromPop ');
	var dateTo = $('._datepicker.carsDateToPop');
	var timeFrom = $('.timepicker .pickUpTimeP');
	var timeTo = $('.timepicker .dropOffTimeP');

	var moreOptions = $('#moreOptionsPop');
	var carClass = $('#carClassP');
	
	var date1 = new Date($('#carsDateFromHiddenP').val());
	var date2 = new Date($('#carsDateToHiddenP').val());
	if(roundFromC.val() == "") {
		roundFromC.addClass('error');
		growl_alert(roundFromC.attr('data-err'));
		roundFromC.focus();
		return false;
	} else {
		roundFromC.removeClass('error');
	}

	if(roundToC.val() == "") {
		roundToC.addClass('error');
		growl_alert(roundToC.attr('data-err'));
		roundToC.focus();
		return false;
	} else {
		roundToC.removeClass('error');
	}

	if(dateFrom.val() == "" || dateFrom.val() == "Invalid date" ) {
		//scrollTopValidation();
		dateFrom.addClass('error');
		growl_alert(i18n.t('providePickUpDate'));
		return false;
	} else {
		dateFrom.removeClass('error');
	}

	if(timeFrom.val() == "") {
		//scrollTopValidation();
		timeFrom.addClass('error');
		growl_alert(i18n.t('providePickUpTime'));
		return false;
	} else {
		timeFrom.removeClass('error');
	}

	if(dateTo.val() == "" || dateTo.val() == "Invalid date" ) {
		//scrollTopValidation();
		dateTo.addClass('error');
		growl_alert(i18n.t('provideDropOffDate'));
		return false;
	} else {
		dateTo.removeClass('error');
	}
	
	var timeDiff = Math.abs(date2.getTime() - date1.getTime());
	var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));
	
	if(dateFrom.val() != "" && dateTo.val() != ""){
		if(diffDays>30){
			dateFrom.addClass('error');
			dateTo.addClass('error');
			growl_alert(i18n.t('errbkngdays'));
			return false;
		}
		else{
			dateFrom.removeClass('error');
			dateTo.removeClass('error');
		}
	}

	if(timeTo.val() == "") {
		//scrollTopValidation();
		timeTo.addClass('error');
		growl_alert(i18n.t('provideDropOffTime'));
		return false;
	} else {
		timeTo.removeClass('error');
	}
	
	//alert(moment(dateFrom.val()).diff(moment(dateTo.val()),'days'));
	if((dateFrom.val() != "" && dateTo.val() != "") && ((dateFrom.val() == dateTo.val()))){
		if(timeFrom.val() != "" && timeTo.val() != "") {
			if(parseInt(timeFrom.val()) > parseInt(timeTo.val())){
				growl_alert(i18n.t('dropOff1'));
				timeFrom.addClass('error');
				timeTo.addClass('error');
				return false;
			}
			else if(parseInt(timeFrom.val()) == parseInt(timeTo.val())){
				growl_alert(i18n.t('dropOff2'));
				timeFrom.addClass('error');
				timeTo.addClass('error');
				return false;
			}
			else{
				timeFrom.removeClass('error');
				timeTo.removeClass('error');
			}
		}
	}
	
	var cookieData = {
			carsSearchKey:carSearchKey.val(),
			roundFromC : roundFromC.val(),
			roundToC : roundToC.val(),
			roundFromCId : roundFromCId.val(),
			roundToCId : roundToCId.val()
		}
	Cookies.set('carsSearchCookie',JSON.stringify(cookieData),{expires: 60,path:'/'});
	
	var opt = {
		pickUp: roundFromCId.val(),
		dropOff: roundToCId.val(),
		address: carPredectiveInfo[2],
		cityId: carPredectiveInfo[3],
		pickUpDate: moment(dateFrom.val(), 'DD/MM/YYYY').format('YYYY-MM-DD'),
		dropOffDate: moment(dateTo.val(), 'DD/MM/YYYY').format('YYYY-MM-DD'),
		pickUpTime: moment(timeFrom.val(), 'HH:mm').format('HH:mm'),
		dropOffTime: moment(timeTo.val(), 'HH:mm').format('HH:mm'),
		carClass: moreOptions.prop('checked') ? carClass.val() : ''
	};

	btnLoadingAnimation($('#carsSearchButtonP'));

	setTimeout(function() {
		if (!window.location.origin) {
			window.location.origin = window.location.protocol + "//" + window.location.hostname + (window.location.port ? ':' + window.location.port: '');
		}
		var base_url = window.location.origin;
		var result = 'cars/result?'+$.param(opt);
		carsVar.bckfrmReview = false;
		getCarsURL(result);
	}, 200);
}



function validateCarsSearch() {

	var roundFromC = $('#roundFromC');
	var roundToC = $('#roundToC');
	var dupCodeMsgC = $('#dupCodeMsgC');
	var roundFromCId = $('#roundFromCId');
	var roundToCId = $('#roundToCId');
	var carSearchKey = $('#carSearchKey');
	var carPredectiveInfo = carSearchKey.val().split('>>');
	
	
	var dateFrom = $('body').hasClass('homePage') ? $('._datepicker.carsDateFrom') : $('._datepicker.mmcarsDateFrom');
	var dateTo = $('body').hasClass('homePage') ? $('._datepicker.carsDateTo') : $('._datepicker.mmcarsDateTo');
	var timeFrom = $('body').hasClass('homePage') ? $('.timepicker .pickUpTime') : $('.timepicker .mpickUpTime');
	var timeTo = $('body').hasClass('homePage') ? $('.timepicker .dropOffTime') : $('.timepicker .mdropOffTime');

	var moreOptions = $('#moreOptions');
	var carClass = $('#carClass');
	
	var date1 = new Date($('body').hasClass('homePage') ? $('#carsDateFromHidden').val() : $('#mcarsDateFromHidden').val());
	var date2 = new Date($('body').hasClass('homePage') ? $('#carsDateToHidden').val() : $('#mcarsDateToHidden').val());

	if(roundFromC.val() == "") {
		roundFromC.addClass('error');
		growl_alert(roundFromC.attr('data-err'));
		roundFromC.focus();
		return false;
	} else {
		roundFromC.removeClass('error');
	}

	if(roundToC.val() == "") {
		roundToC.addClass('error');
		growl_alert(roundToC.attr('data-err'));
		roundToC.focus();
		return false;
	} else {
		roundToC.removeClass('error');
	}

	//if(roundFromC.attr('data-iata') != "" && roundToC.attr('data-iata') != "") {
	//	if(roundFromC.attr('data-iata') == roundToC.attr('data-iata')){
	//		growl_alert(dupCodeMsgC.attr('data-err'));
	//		return false;
	//	}
	//}

	if(dateFrom.val() == "" || dateFrom.val() == "Invalid date" ) {
		//scrollTopValidation();
		dateFrom.addClass('error');
		growl_alert(i18n.t('providePickUpDate'));
		return false;
	} else {
		dateFrom.removeClass('error');
	}

	if(timeFrom.val() == "") {
		//scrollTopValidation();
		timeFrom.addClass('error');
		growl_alert(i18n.t('providePickUpTime'));
		return false;
	} else {
		timeFrom.removeClass('error');
	}

	if(dateTo.val() == "" || dateTo.val() == "Invalid date" ) {
		//scrollTopValidation();
		dateTo.addClass('error');
		growl_alert(i18n.t('provideDropOffDate'));
		return false;
	} else {
		dateTo.removeClass('error');
	}
	
	var timeDiff = Math.abs(date2.getTime() - date1.getTime());
	var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));
	
	if(dateFrom.val() != "" && dateTo.val() != ""){
		if(diffDays>30){
			dateFrom.addClass('error');
			dateTo.addClass('error');
			growl_alert(i18n.t('errbkngdays'));
			return false;
		}
		else{
			dateFrom.removeClass('error');
			dateTo.removeClass('error');
		}
	}

	if(timeTo.val() == "") {
		//scrollTopValidation();
		timeTo.addClass('error');
		growl_alert(i18n.t('provideDropOffTime'));
		return false;
	} else {
		timeTo.removeClass('error');
	}
	
	//alert(moment(dateFrom.val()).diff(moment(dateTo.val()),'days'));
	if((dateFrom.val() != "" && dateTo.val() != "") && ((dateFrom.val() == dateTo.val()))){
		if(timeFrom.val() != "" && timeTo.val() != "") {
			if(parseInt(timeFrom.val()) > parseInt(timeTo.val())){
				growl_alert(i18n.t('dropOff1'));
				timeFrom.addClass('error');
				timeTo.addClass('error');
				return false;
			}
			else if(parseInt(timeFrom.val()) == parseInt(timeTo.val())){
				growl_alert(i18n.t('dropOff2'));
				timeFrom.addClass('error');
				timeTo.addClass('error');
				return false;
			}
			else{
				timeFrom.removeClass('error');
				timeTo.removeClass('error');
			}
		}
	}
	
	var cookieData = {
			carsSearchKey:carSearchKey.val(),
			roundFromC : roundFromC.val(),
			roundToC : roundToC.val(),
			roundFromCId : roundFromCId.val(),
			roundToCId : roundToCId.val()
		}
	Cookies.set('carsSearchCookie',JSON.stringify(cookieData),{expires: 60,path:'/'});
	
	var opt = {
		pickUp: roundFromCId.val(),
		dropOff: roundToCId.val(),
		address: carPredectiveInfo[2],
		cityId: carPredectiveInfo[3],
		pickUpDate: moment(dateFrom.val(), 'DD/MM/YYYY').format('YYYY-MM-DD'),
		dropOffDate: moment(dateTo.val(), 'DD/MM/YYYY').format('YYYY-MM-DD'),
		pickUpTime: moment(timeFrom.val(), 'HH:mm').format('HH:mm'),
		dropOffTime: moment(timeTo.val(), 'HH:mm').format('HH:mm'),
		carClass: moreOptions.prop('checked') ? carClass.val() : ''
	};

	btnLoadingAnimation($('#carsSearchButton'));

	setTimeout(function() {
		if (!window.location.origin) {
			window.location.origin = window.location.protocol + "//" + window.location.hostname + (window.location.port ? ':' + window.location.port: '');
		}
		var base_url = window.location.origin;
		var result = 'cars/result?'+$.param(opt);
		carsVar.bckfrmReview = false;
		getCarsURL(result);
	}, 200);
}

function getCarsURL(path) {
	var u = window.location.origin+'/'+path;
	if(typeof router !== "undefined"){
		router.navigate(u, true);
	}
}


function carsBookingReviewRender(url) {
	if(!carsVar.cnfrmd){
		var pid = cmnGetURLQueryStr('pid');
		$('.alert_custom').hide();// to remove the growl_alert if any.
		$('body').removeClass('resultPage');
		$('body').addClass('reviewPage');
		dynamicJsCssLoading('results'+(i18n.options.lng == "en" ?"":'-'+i18n.options.lng)+'.css','/common/themes/v2/css/reviewPage'+(i18n.options.lng == "en"?"":'-'+i18n.options.lng)+'.css','css');
		$.get('/cars/reviewStatic', {pid:pid}, function(template) {
			$('#_bodyContainer').empty();
			$('#_bodyContainer').html(template);
			document.close();
			$.get('../common/themes/v2/tmpl/cars/review.ejs?v=nd-v0102', {}, function(template) {
				carsVar.template = template;
				carsVar.renderReview();
				getCountryList();
				$('.currency').hide();
				$('.lang').hide();
				$('.country').hide();
			}); 
		});
	}else{
		var pid = cmnGetURLQueryStr('pid');
		carsVar.pid = pid;
		getCarsURL('cars/confirmation?pid='+pid, {pid: pid});
	}
}

function carsConfirmationRender(url) {
	if(!$('.currency').is(':visible')){
		$('.currency').show();
		$('.country').show();
		$('.lang').show();
	}
	$("script[src='/common/themes/v2/js/jlibs/pageRefresh.js']").remove();
	$(".modal-backdrop").css("display", "none");
	scrollTopValidation();
	$('body').removeClass('modal-open');
	$('body').addClass('confirmationPage');
	if(i18n.options.lng == "en"){
		$('head').append('<link href="/common/themes/v2/css/confirmation.css" rel="stylesheet"/>');
	}else{
		$('head').append('<link href="/common/themes/v2/css/confirmation-ar.css" rel="stylesheet"/>');
	}
	$.get('/cars/confirmationStatic', {}, function(template) {
		if($('#_bodyContainer').length){
			$('#_bodyContainer').empty();
			$('#_bodyContainer').html(template);
			document.close();
		}else{
			// card number 40000000000002 scenario purpose added this code
			$('.container.mh500').remove();
			var $html = '<div id="_bodyContainer" class="home"></div>';
			$('body').append($html);
			$("header").after($('#_bodyContainer'));
			$('#_bodyContainer').html(template);
			document.close();
		}
		$.get('../common/themes/v2/tmpl/cars/confirmation.ejs?v=nd-v0102', {}, function(template) {
			carsVar.template = template;
			carsVar.renderConfirmation();
		});
	});
}

function carsPrintConfirmationRender(url) {
	$.get('../common/themes/v2/tmpl/cars/printConfirmation.ejs?v=nd-v0102', {}, function(template) {
		carsVar.printTemplate = template;
		carsVar.renderPrintConfirmation();
	});
}

function loadCarsConfirmation(pid)
{	
	carsVar.pid=pid;
	
	$.post('/cars/getBookingDetails',{pid:pid},function(res){
		//console.log('details',res);
		carsVar.vehBookingInfoRS = res.vehBookingInfoRS;
		carsVar.driverData=res.driverData;
		carsVar.vehPreBookRS=res.vehPreBookRS;
		carsVar.calcData=res.calcData;
		carsVar.extns=res.extns;
		carsVar.responseData=res;
		carsVar.payAndBook(pid);
		
	});
	/*$.ajax({
		url: '/cars/getBookingDetails',
		dataType: 'json',
		type: 'get',
		contentType: 'application/json',
		data: pid,
		success: function(res) {
			console.log('reas',res);
			carsVar.vehBookingInfoRS = res.vehBookingInfoRS;
			carsVar.payAndBook();
		},
		error: function() {
			
		}
	});*/
	
	
}

function carsResultRender(url) {
	if(!$('.currency').is(':visible')){
		$('.currency').show();
		$('.country').show();
		$('.lang').show();
	}
	$('.alert_custom').hide();// to remove the growl_alert if any.
	if(!carsVar.bckfrmReview){
		$('body').removeClass('homePage');
		$('body').addClass('resultPage');
		$.loadingPageAnimation('show', "car", carsVar.getLoadCnt());
		scrollTopValidation();
		$.get(url + "&isoView=true",{v:Math.random()}, function(res) {
		//$.get("/common/themes/v2/tmpl/cars/carsjson.json",{},function(res){
			//console.log(JSON.stringify(res));
			dynamicJsCssLoading('landing'+(i18n.options.lng == "en" ?"":'-'+i18n.options.lng)+'.css','/common/themes/v2/css/results'+(i18n.options.lng == "en"?"":'-'+i18n.options.lng)+'.css','css');
			console.log(res);
			$.get('/cars/resultStatic', {}, function(template) {
				$('#_bodyContainer').empty();
				$('#_bodyContainer').html(template);
				document.close();
				$.get('/common/themes/v2/tmpl/cars/searchResult.ejs?v=nd-v0102',{}, function(template) {
					if(res != null && res.status === 'SUCCESS') {
						carsVar.init(res.searchCriteria, template, res.data.vehSearchRS,res.data.vehSearchRQ,res.data.cExeR);
						if(typeof cmnGetURLQueryStr('carClass')!=='undefined'){
							carsVar.selClass= cmnGetURLQueryStr('carClass');
						}
						carsVar.render();
						carsVar.updateModifySearch();
						loadCarsGrid();
						initPriceRangeSlider();
						$.loadingPageAnimation();
						$('.tnlHome,.tnlFlight,.tnlHotel,.tnlFPH,.tnlCars').removeClass('active');
					} else if(res != null && res.status === 'ERROR') {
						//console.log('Error: ' + JSON.stringify(res.error, null, 2));
						$('.car-slider').hide();
						$('.resultBlock').hide();
						$('._noResultsFound').show();
						carsVar.init(res.searchCriteria, template);
						carsVar.renderError();
						carsVar.updateModifySearch();
						$.loadingPageAnimation();
					}
				});
			});
		});
	}
}

function loadCarsGrid() {
	var owl = $("#flightAirlineGrid");
	owl.owlCarousel({
		items : 7,
		itemsDesktop: [1199, 7],
		itemsDesktopSmall: [979, 6],
		itemsTablet: [768, 6],
		itemsTabletSmall: [639, 6],
		itemsMobile: [479, 7],
		lazyLoad: true,
		navigation: true,
		pagination: false,
		autoPlay: false,
		stopOnHover:false,
		responsive:true,
		rewindNav:false,
		scrollPerPage:true,
		mouseDrag:false
	});
}

function initPriceRangeSlider() {
	if(cpslider){
		cpslider.destroy();
		$("#_price_fliter").val(carsVar.searchFilterData.priceRangeData.min+":"+carsVar.searchFilterData.priceRangeData.max);
	}
	$crange =  $("#_price_fliter").ionRangeSlider({
		type: "double",
		min: carsVar.searchFilterData.priceRangeData.min,
		max: carsVar.searchFilterData.priceRangeData.max,
		hide_min_max: false,
		hide_from_to: false,
		grid: false,
		values: carsVar.searchFilterData.prices,
		prefix: carsVar.setSelectedCurrency + ' '
	});
	cpslider = $crange.data("ionRangeSlider");
}

var carsVar = {

	arNames: {
		months		  : ["ÙŠÙ†Ø§ÙŠØ±","ÙØ¨Ø±Ø§ÙŠØ±","Ù…Ø§Ø±Ø³","Ø§Ø¨Ø±ÙŠÙ„","Ù…Ø§ÙŠÙˆ","ÙŠÙˆÙ†ÙŠÙˆ","ÙŠÙˆÙ„ÙŠÙˆ","Ø£ØºØ³Ø·Ø³","Ø³Ø¨ØªÙ…Ø¨Ø±","Ø£ÙƒØªÙˆØ¨Ø±","Ù†ÙˆÙÙ…Ø¨Ø±","Ø¯ÙŠØ³Ù…Ø¨Ø±"],
	    weekdaysShort : ["Ø§Ù„Ø£Ø­Ø¯","Ø§Ù„Ø§Ø«Ù†ÙŠÙ†","Ø§Ù„Ø«Ù„Ø§Ø«Ø§Ø¡","Ø§Ù„Ø£Ø±Ø¨Ø¹Ø§Ø¡","Ø§Ù„Ø®Ù…ÙŠØ³","Ø§Ù„Ø¬Ù…Ø¹Ø©","Ø§Ù„Ø³Ø¨Øª"]
	},
	changeCar: function(opts,protoExtn){
		setTimeout(function() {
			if (!window.location.origin) {
				window.location.origin = window.location.protocol + "//" + window.location.hostname + (window.location.port ? ':' + window.location.port: '');
			}
			var base_url = window.location.origin;
			var result = 'cars/result?'+$.param(opts);
			getCarsURL(result);
			$('.currency').show();
			$('.country').show();
			$('.lang').show();
		}, 200);
	},
	bckfrmReview: false,
	selClass: '',
	carClassesf: [],
	cnfrmd: false,
	isActive:false,
	responseData: null,
	extns:null,
	template: null,
	eventBindingFlag:false,
	printTemplate: null,
	pid: null,
	setSelectedCurrency: 'SAR',
	searchForm: null,
	filterList: null,
	sliderData: null,
	searchFilterData: null,
	filteredResult: null,
	sort: null,

	vehSearchRQ: null,
	vehSearchRS: null,
	vehBookingInfoRS: null,
	vehPreBookRS: null,
	vehBookRS: null,
	travellerInfo: null,

	calcData: null,
	changeCarLnk: null,
	driverData: null,

	init: function(searchForm, template, vehSearchRS,vehSearchRQ, cExeR) {
		var src = "/common/themes/v2/js/jlibs/carServiceProtoExt.js";
		var checkJs = false;
		var scripts = document.getElementsByTagName("script");
		for(var i = 0; i < scripts.length; i++){
			if(scripts[i].getAttribute('src') == src){
				checkJs = true;
				break;
			}
		}
		if(checkJs == false){
			$('head').append('<script src="/common/themes/v2/js/jlibs/carServiceProtoExt.js"></script>');
		}
		carsVar.pid = null;
		carsVar.template = template;
		carsVar.searchForm = searchForm;
		carsVar.vehSearchRS = vehSearchRS;
		carsVar.vehSearchRQ = vehSearchRQ;
		carsVar.cExR = cExeR;
		carsVar.isActive = true;
		carsVar.filterList = [];
		if(typeof vehSearchRS!='undefined'){
			carsVar.setSelectedCurrency = i18n.t(currencySymbols(vehSearchRS.vehAvails[0].programs[0].up.cur));
		}else{
			carsVar.setSelectedCurrency = 'SAR';
		}
		carsVar.vehBookingInfoRS = null;
		carsVar.vehPreBookRS = null;
		carsVar.vehBookRS = null;

		if(vehSearchRS == undefined) {
			return;
		}

		carsVar.sliderData = carsVar.prepareSliderData();
		carsVar.searchFilterData = carsVar.prepareSearchFilterData();
		carsVar.filteredResult = carsVar.filterAndSortResult();

	},

	calcTotals: function() {
		// total price
		var taxesAndFees =
			parseFloat(carsVar.vehBookingInfoRS.bookingInfo.program.up.ttax) +
			(carsVar.vehBookingInfoRS.bookingInfo.program.up.sf ? parseFloat(carsVar.vehBookingInfoRS.bookingInfo.program.up.sf) : 0);

		var total =
			parseFloat(carsVar.vehBookingInfoRS.bookingInfo.program.up.tf);
		var baseFare =
			parseFloat(carsVar.vehBookingInfoRS.bookingInfo.program.up.bf);

		carsVar.calcData = {
			taxesAndFees: taxesAndFees.toFixed(2),
			total: total.toFixed(2),
			baseFare: baseFare.toFixed(2)
		};
	},

	prepareSearchFilterData: function() {
		var minPrice, maxPrice;
		var result = {
			priceRangeData: {
				min: null,
				max: null
			},
			prices: [],
			carClasses: [],
			transmissionTypes: [],
			rentalCompanies: [],
			fuelOptions: []
		};

		var prices = [];
		var carClasses = [];
		var transmissionTypes = [];
		var rentalCompanies = [];
		var fuelOptions = [];
		//car classes sort
		carsVar.sortCarClasses(carsVar.sliderData);
		for(var i = 0; i < carsVar.vehSearchRS.vehAvails.length; i++) {
			minPrice = carsVar.getProgramsMinPrice(carsVar.vehSearchRS.vehAvails[i].programs);
			maxPrice = carsVar.getProgramsMaxPrice(carsVar.vehSearchRS.vehAvails[i].programs);

			if(result.priceRangeData.min == null || result.priceRangeData.min > minPrice) {
				result.priceRangeData.min = minPrice.toFixed(2);
			}
			if(result.priceRangeData.max == null || result.priceRangeData.max < maxPrice) {
				result.priceRangeData.max = maxPrice.toFixed(2);
			}

			if(!prices.contains(minPrice.toFixed(2))) {
				prices.push(minPrice.toFixed(2));
			};

			// transmission type
			if(!transmissionTypes.contains(carsVar.vehSearchRS.vehAvails[i].vehicleInfo.vehicle.tt)) {
				transmissionTypes.push(carsVar.vehSearchRS.vehAvails[i].vehicleInfo.vehicle.tt);
			}

			// car rental company
			if(!rentalCompanies.contains(carsVar.vehSearchRS.vehAvails[i].vehicleInfo.company.sname)) {
				rentalCompanies.push(carsVar.vehSearchRS.vehAvails[i].vehicleInfo.company.sname);
			}

			// fuel options
			if(!fuelOptions.contains(carsVar.vehSearchRS.vehAvails[i].vehicleInfo.vehicle.fp)) {
				fuelOptions.push(carsVar.vehSearchRS.vehAvails[i].vehicleInfo.vehicle.fp);
			}
		}
		// car class
		for(var c = 0;c < carsVar.carClassesf.length; c++) {
			carClasses.push(carsVar.carClassesf[c]);
		}

		// order prices
		prices.sort(function(a, b) {
			return a - b;
		});

		result.prices = prices;
		result.carClasses = carClasses;
		result.transmissionTypes = transmissionTypes;
		result.rentalCompanies = rentalCompanies;
		result.fuelOptions = fuelOptions;

		return result;
	},

	prepareSliderData: function() {
		var types = {};

		var minPrice = null;
		var key = 0;
		for(var i = 0; i < carsVar.vehSearchRS.vehAvails.length; i++) {

			minPrice = carsVar.getProgramsMinPrice(carsVar.vehSearchRS.vehAvails[i].programs);

			if(!(carsVar.vehSearchRS.vehAvails[i].vehicleInfo.vehicle.vehType.vclass in types)) {
				types[carsVar.vehSearchRS.vehAvails[i].vehicleInfo.vehicle.vehType.vclass] = {
					key: key,
					vclass: carsVar.vehSearchRS.vehAvails[i].vehicleInfo.vehicle.vehType.vclass,
					minPrice: minPrice,
					imgUrl: carsVar.vehSearchRS.vehAvails[i].vehicleInfo.vehicle.imgUrl
				};
				key++;
			} else {
				if(types[carsVar.vehSearchRS.vehAvails[i].vehicleInfo.vehicle.vehType.vclass].minPrice > minPrice) {
					types[carsVar.vehSearchRS.vehAvails[i].vehicleInfo.vehicle.vehType.vclass].minPrice = minPrice
				}

			}
		}

		var result = [];
		for(var key in types) {
			result.push(types[key]);
		}

		return result;
	},

	getProgramsMinPrice: function(programs) {
		var min = null;
		var price;

		for(var i = 0; i < programs.length; i++) {
			price = parseFloat(programs[i].up.tf);
			if(min == null || min > price) {
				min = price;
			}
		}

		return min;
	},

	getProgramsMaxPrice: function(programs) {
		var max = null;
		var price;

		for(var i = 0; i < programs.length; i++) {
			price = parseFloat(programs[i].up.tf);
			if(max == null || max < price) {
				max = price;
			}
		}

		return max;
	},

	contains: function(a, obj) {
		var i = a.length;
		while (i--) {
			if (a[i] === obj) {
				return true;
			}
		}
		return false;
	},

	removeFromFilter: function(filterEl) {

		var dataSource = filterEl.attr('data-source');
		var dataKey = filterEl.attr('data-key')

		if(dataSource == 'classes') {
			$('#_car_class_filter #cl_' + dataKey).prop('checked', false);
			$(".car-slider .item[data-key='" + dataKey + "']").removeClass('active');
		} else
		if(dataSource == 'transmissionTypes') {
			$('#_car_transmission_filter #tt_' + dataKey).prop('checked', false);
		} else
		if(dataSource == 'rentalCompanies') {
			$('#_car_rental_company_filter #rc_' + dataKey).prop('checked', false);
		} else
		if(dataSource == 'fuelOptions') {
			$('#_car_fuel_options_filter #fo_' + dataKey).prop('checked', false);
		}

		filterEl.remove();
	},

	getValue: function(array, key) {
		for(var i in array) {
			if(array[i].key == key) {
				return array[i].value;
			}
		}
	},

	resetFilter: function() {
		var classes = $('#_car_class_filter li input[type=checkbox]:checked').map(function(_, el) {
			return $(el).val();
		}).get();
		var transmissionTypes = $('#_car_transmission_filter li input[type=checkbox]:checked').map(function(_, el) {
			return $(el).val();
		}).get();
		var rentalCompanies = $('#_car_rental_company_filter li input[type=checkbox]:checked').map(function(_, el) {
			return $(el).val();
		}).get();
		var fuelOptions = $('#_car_fuel_options_filter li input[type=checkbox]:checked').map(function(_, el) {
			return $(el).val();
		}).get();

		for(var i = 0; i < classes.length; i++) {
			$('#_car_class_filter #cl_' + classes[i]).prop('checked', false);
			$(".car-slider .item[data-key='" + classes[i] + "']").removeClass('active');
		}
		for(var i = 0; i < transmissionTypes.length; i++) {
			$('#_car_transmission_filter #tt_' + transmissionTypes[i]).prop('checked', false);
		}
		for(var i = 0; i < rentalCompanies.length; i++) {
			$('#_car_rental_company_filter #rc_' + rentalCompanies[i]).prop('checked', false);
		}
		for(var i = 0; i < fuelOptions.length; i++) {
			$('#_car_fuel_options_filter #fo_' + fuelOptions[i]).prop('checked', false);
		}
	},

	mapArray: function(arr, ids) {
		var result = [];

		for(var i = 0; i < ids.length; i++) {
			result.push(arr[ids[i]]);
		}

		return result;
	},

	filterAndSortResult: function() {
		carsVar.filterList = [];

		var priceRange = $('#_price_fliter').prop('value').split(';');

		var classes = $('#_car_class_filter li input[type=checkbox]:checked').map(function(_, el) {
			return $(el).val();
		}).get();
		var mappedClasses = carsVar.mapArray(carsVar.searchFilterData.carClasses, classes);

		var transmissionTypes = $('#_car_transmission_filter li input[type=checkbox]:checked').map(function(_, el) {
			return $(el).val();
		}).get();
		var mappedTransmissionTypes = carsVar.mapArray(carsVar.searchFilterData.transmissionTypes, transmissionTypes);

		var rentalCompanies = $('#_car_rental_company_filter li input[type=checkbox]:checked').map(function(_, el) {
			return $(el).val();
		}).get();
		var mappedRentalCompanies = carsVar.mapArray(carsVar.searchFilterData.rentalCompanies, rentalCompanies);

		var fuelOptions = $('#_car_fuel_options_filter li input[type=checkbox]:checked').map(function(_, el) {
			return $(el).val();
		}).get();
		var mappedFuelOptions = carsVar.mapArray(carsVar.searchFilterData.fuelOptions, fuelOptions);


		for(var i = 0; i < classes.length; i++) {
			carsVar.filterList.push({
				dataSource: 'classes',
				key: classes[i],
				value: carsVar.searchFilterData.carClasses[classes[i]]
			});
		}
		for(var i = 0; i < transmissionTypes.length; i++) {
			carsVar.filterList.push({
				dataSource: 'transmissionTypes',
				key: transmissionTypes[i],
				value: carsVar.searchFilterData.transmissionTypes[transmissionTypes[i]]
			});
		}

		for(var i = 0; i < rentalCompanies.length; i++) {
			carsVar.filterList.push({
				dataSource: 'rentalCompanies',
				key: rentalCompanies[i],
				value: carsVar.searchFilterData.rentalCompanies[rentalCompanies[i]]
			});
		}

		for(var i = 0; i < fuelOptions.length; i++) {
			carsVar.filterList.push({
				dataSource: 'fuelOptions',
				key: fuelOptions[i],
				value: carsVar.searchFilterData.fuelOptions[fuelOptions[i]]
			});
		}
		if(carsVar.filterList.length == 0) {
			$('.youHaveFiltered').hide();
		} else {
			$('.youHaveFiltered').show();
		}

		var result = [];
		var minPrice, maxPrice;

		for(var i = 0; i < carsVar.vehSearchRS.vehAvails.length; i++) {

			// check min price
			minPrice = carsVar.getProgramsMinPrice(carsVar.vehSearchRS.vehAvails[i].programs);
			if(minPrice < parseFloat(priceRange[0])) {
				continue;
			}

			// check max price
			maxPrice = carsVar.getProgramsMaxPrice(carsVar.vehSearchRS.vehAvails[i].programs);
			if(maxPrice > parseFloat(priceRange[1])) {
				continue;
			}

			// check class
			if(classes.length > 0 && $.inArray(carsVar.vehSearchRS.vehAvails[i].vehicleInfo.vehicle.vehType.vclass, mappedClasses) == -1) {
				continue;
			}

			// check transmission type
			if(transmissionTypes.length > 0 && $.inArray(carsVar.vehSearchRS.vehAvails[i].vehicleInfo.vehicle.tt, mappedTransmissionTypes) == -1) {
				continue;
			}

			// check rental company
			if(rentalCompanies.length > 0 && $.inArray(carsVar.vehSearchRS.vehAvails[i].vehicleInfo.company.sname, mappedRentalCompanies) == -1) {
				continue;
			}

			// check fuel options
			if(fuelOptions.length > 0 && $.inArray(carsVar.vehSearchRS.vehAvails[i].vehicleInfo.vehicle.fp, mappedFuelOptions) == -1) {
				continue;
			}

			result.push(carsVar.vehSearchRS.vehAvails[i]);
		}
		
		if(result.length == 0) {
			$('.fNoFilteredResults').css('display','block');
		} else {
			$('.fNoFilteredResults').css('display','none');
		}
		return carsVar.sortResult(result);
	},

	sortResult: function(array) {
		if(carsVar.sort == null) {
			return array;
		}

		// sort result
		array.sort(function(a, b) {
			if(carsVar.sort.sortBy == 'price') {
				if(carsVar.sort.sortOrder == 'asc') {
					return a.programs[0].up.tf  - b.programs[0].up.tf;
				} else {
					return b.programs[0].up.tf  - a.programs[0].up.tf;
				}
			}
		});

		return array;
	},

	setSort: function(sortBy, sortOrder) {
		carsVar.sort = {
			sortBy: sortBy,
			sortOrder: sortOrder
		};
	},

	prepareBookData: function() {
		var data = {
			pid: carsVar.pid,
			rentalCore: carsVar.vehBookingInfoRS.rentalCore,
			driver: carsVar.driverData,
			bookInfo: {
				bookingChannelID: carsVar.vehBookingInfoRS.bookingInfo.bookingChannelID,
				fbi: carsVar.vehPreBookRS ? carsVar.vehPreBookRS.bookInfo.fbi : null,
				vehicleInfo: carsVar.vehBookingInfoRS.bookingInfo.vehicleInfo,
				program: carsVar.vehBookingInfoRS.bookingInfo.program,
			}
		};

		if(typeof carsVar.vehBookingInfoRS.bookingInfo.cancellationDetails != 'undefined') {
			data.bookInfo.cancellationDetails = carsVar.vehBookingInfoRS.bookingInfo.cancellationDetails;
		}

		var extn = {};
		var extnExist = false;

		// prepare extensions
		if($('._txtMsNumber').val() != '') {
			extn.memberShipNumber = $('._txtMsNumber').val();
			extnExist = true;
		}
		if($('._txtFaInfo').val() != '') {
			extn.flightInfo = $('._txtFaInfo').val();
			extnExist = true;
		}
		if($('._txtComm').val() != '') {
			extn.comments = $('._txtComm').val();
			extnExist = true;
		}
		if(carsVar.extns)
		{
			extn =carsVar.extns;
			extnExist = true;
		}
		if(extnExist) {
			data.bookInfo.extns = extn;
		}

		return data;
	},

	saveDriverDetails: function() {
		// validate data
		var validationResult = true;
		carsVar.driverData = {};

		$('._traDetValidator').each(function(e) {
			var $this = $(this);

			// title
			if($this.hasClass('_txtTitle')) {
				$this.removeClass('error');
				carsVar.driverData.title = $this.val();

				if($this.val() == '') {
					growl_alert(i18n.t("pleaseProvideTitle"));
					$this.addClass('error');
					$this.focus();
					validationResult = false;
					return false;
				}
			}

			// first name
			if($this.hasClass('_txtFName')) {
				$this.removeClass('error');
				carsVar.driverData.fname = $this.val();

				if($this.val() == '') {
					growl_alert(i18n.t("errFirstName"));
					$this.addClass('error');
					$this.focus();
					validationResult = false;
					return false;
				} else
				if(_Aval($this.val())) {
					growl_alert(i18n.t("namesinenglish"));
					$this.addClass('error');
					$this.focus();
					validationResult = false;
					return false;
				} else
				if((!_fnval($this.val()))||($this.val().length<=2)) {
					growl_alert(i18n.t("validfirstname"));
					$this.addClass('error');
					$this.focus();
					validationResult = false;
					return false;
				} else {
					var firstNam = $this.val();
					var splChar = "-";
					var firstName = firstNam.replace(/ +/g, "");
					for(var i=0;i<firstName.length;i++){
						if((firstName[0] == "-" || firstName[firstName.length-1] == "-") || (typeof firstName[i] !== "undefined") && (typeof firstName[i+1] !== "undefined") && ((splChar == firstName[i]) && (splChar == firstName[i+1]))){
							growl_alert(i18n.t("validfirstname"));
							$this.addClass('error');
							$this.focus();
							validationResult = false;
							return false;
						}
					}
				}
			}

			// middle name
			if($this.hasClass('_txtMName')) {
				$this.removeClass('error');
				carsVar.driverData.mname = $this.val();

				var message = $this.attr('data-err');
				if(($this.val()!="")&&($this.length>0)){
					if(_Aval($this.val())){
						growl_alert(message);
						$this.addClass('error');
						$this.focus();
						validationResult = false;
						return false;
					} else
					if(!_mnval($this.val())) {
						growl_alert(i18n.t("errMiddleName"));
						$this.focus();
						$this.addClass('error');
						validationResult = false;
						return false;
					}

					var splChar = "-";
					var middleName = $this.val().replace(/ +/g, "");
					for(var i=0;i<middleName.length;i++){
						if((middleName[0] == "-" || middleName[middleName.length-1] == "-") || (typeof middleName[i] !== "undefined") && (typeof middleName[i+1] !== "undefined") && ((splChar == middleName[i]) && (splChar == middleName[i+1])) ){
							growl_alert(message);
							$this.addClass('error');
							$this.focus();
							validationResult = false;
							return false;
						}
					}
				}
			}

			// last name
			if($this.hasClass('_txtLName')) {
				$this.removeClass('error');
				carsVar.driverData.lname = $this.val();

				if($this.val() == '') {
					growl_alert(i18n.t("errLastName"));
					$this.focus();
					$this.addClass('error');
					validationResult = false;
					return false;
				} else
				if(_Aval($this.val())) {
					growl_alert(3, i18n.t("validlastname"), 3);
					$this.focus();
					$this.addClass('error');
					validationResult = false;
					return false;
				} else
				if((!_lnval($this.val()))||($this.val().length<=1)){
					growl_alert(i18n.t("validlastname"));
					$this.focus();
					$this.addClass('error');
					validationResult = false;
					return false;
				} else {
					var lastNam = $this.val();
					var splChar = "-";
					var lastName = lastNam.replace(/ +/g, "");
					for(var i=0;i<lastName.length;i++){
						if((lastName[0] == "-" || lastName[lastName.length-1] == "-") || (typeof lastName[i] !== "undefined") && (typeof lastName[i+1] !== "undefined") && ((splChar == lastName[i]) && (splChar == lastName[i+1]))){
							growl_alert(i18n.t("validlastname"));
							$this.addClass('error');
							$this.focus();
							validationResult = false;
							return false;
						}
					}
				}
			}

			// age
			if($this.hasClass('_age')){
				$this.removeClass('error');
				carsVar.driverData.age = $this.val();

				if($this.val() == '') {
					growl_alert(i18n.t("enterdriverage"));
					$this.addClass('error');
					$this.focus();
					validationResult = false;
					return false;
				}
			}

			// email address
			if($this.hasClass('_emailAddress')){
				$this.removeClass('error');
				carsVar.driverData.email = $this.val();

				if($this.val()=='') {
					growl_alert(i18n.t("enteruremail"));
					$this.addClass('error');
					$this.focus();
					validationResult = false;
					return false;
				} else
				if(!_evl($this.val())){
					growl_alert(i18n.t("errEmaiAdd"));
					$this.addClass('error');
					$this.focus();
					validationResult = false;
					return false;
				}
			}

			// phone number
			if($this.hasClass('_txtPhone')) {
				$this.removeClass('error');
				carsVar.driverData.phone = $this.val();
				if($('#phoneCountryCode').val().charAt(0) == '+'){
					carsVar.driverData.phoneCC = $('#phoneCountryCode').val().substr(1);
				}else{
					carsVar.driverData.phoneCC = $('#phoneCountryCode').val();
				}
				var len = $this.val().length;
				if($this.val()==""){
					growl_alert(i18n.t("errMobNum"));
					$this.addClass('error');
					$this.focus();
					validationResult = false;
					return false;
				}else if(($this.val()!="" && len<=7)||(!_Nonly($this.val()))){
					growl_alert(i18n.t("validmobile"));
					$this.addClass('error');
					$this.focus();
					validationResult = false;
					return false;
				}
			}
		});

		if(!validationResult) {
			return;
		}

		// all good then prepare and send book request
		$('.alert_custom').hide();
		btnLoadingAnimation($('._saveDriverDetails'));

		// prepare book data
		var data = carsVar.prepareBookData();
		carsVar.calcTotals();
		data.calcData =carsVar.calcData;
		data.driverData=carsVar.driverData;
		$('#driver-details').hide();
		$.ajax({
			url: '/cars/preBook',
			dataType: 'json',
			type: 'post',
			contentType: 'application/json',
			data: JSON.stringify(data),
			success: function(res) {
				if(typeof res != 'undefined') {
					if(res.status == 'ERROR') {
						//location.href = '/cars/error';
						return;
					}
						if (res !== null && res.status === 'SUCCESS') {
							$('._saveDriverDetails').hide();
							$('.addTrvlr').hide();
							
							carsVar.vehPreBookRS = res.data.vehPreBookRS;
							carsVar.pid = res.pid;
							carsVar.vehBookingInfoRS = res.data.vehBookingInfoRS;
							carsVar.calcTotals();
							var args = {};
							args.responseData = res;
							carsVar.showPointsAndPaymentPanel();
							
							setTimeout(function() {
							var sadad= $('.panel-heading._sadad');
							var payfort=$('.panel-heading._payment');
							var installment=$('.panel-heading._installments');
							var payAtStore=$('.panel-heading._payAtStore');
							var checkout = $('.panel-heading._checkout');
							paymentConfigureCar(sadad,payfort,installment,payAtStore,res.paymentObj);
							//Hide Installment Section 
							    if(res.paymentObj.sarAmount < 1000){
									$('.install').hide();
								}
							},50);
						}
				}
			},
			error: function() {
				console.log('error');
				//growl_alert(i18n.t("selectedCarNotAvl"));
			}
		})
	},

	showPointsAndPaymentPanel: function() {
		// show payment panel
		//$('.paymentBlock').show();
		if(!carsVar.template){
			$.get('../common/themes/v2/tmpl/cars/review.ejs?v=nd-v0102', {}, function(template) {
				carsVar.template = template;
				loadTemplate('redeem-points', carsVar, $('#redeem-points'), template);
				loadTemplate('payment', carsVar, $('#payment'), template);
				$('._driverDeatails').hide();
				$('#_driverDetailsStep').removeClass('active');
				$('#_driverDetailsStep').addClass('done');
				$('#_paymentStep').addClass('active');
				//Init Payment Panel
				initPaymentPanel();
				//Generate card year
				cardYear();
			});
		}else {
			loadTemplate('redeem-points', carsVar, $('#redeem-points'), carsVar.template);
	    	loadTemplate('payment', carsVar, $('#payment'), carsVar.template);
			$('#_driverDetailsStep').removeClass('active');
			$('#_driverDetailsStep').addClass('done');
			$('#_paymentStep').addClass('active');
			if(carsVar.calcData.total < 1000){
				$("._installments").parent(".panel.install").hide();
			}
			//Init Payment Panel
			initPaymentPanel();
			//Generate card year
			cardYear();
	 	}
		
		// Qitaf config
		var configuration = {
			mobileElm:'QITAF_MOBILE_NO',
			genOtpBtn:'QITAF_GRNOTP_BTN',
			pid:'CTDP',
			product:'CTDP',
			amount:'QITAF_AMOUNT_TO_BE_REDEEM',
			pin:'QITAF_PIN_NO',
			redeemPointBtn:'QITAF_REDEEM_POINT_BTN',
			optForm:'optForm',
			optPhone:'optPhone',
			messageContainer:'errorMessage',
			redeemContainer:'redeemMessage',
			successClass:'validate_success_message',
			errorClass:'validate_error_message',
		};
		QitafService.init(configuration);

	},

	payAndBook: function(pid) {

		btnLoadingAnimation($('#paymeBtn'));

		// prepare data
		var data = carsVar.prepareBookData();
		data.pid = pid;
		//console.log('send book request');

		$.ajax({
			url: '/cars/book',
			dataType: 'json',
			type: 'post',
			contentType: 'application/json',
			data: JSON.stringify(data),
			success: function (res) {

				if(typeof res != 'undefined') {

					if (res.status == 'ERROR') {
						location.href = '/cars/error';
						return;
					}

					if (res !== null && res.status === 'SUCCESS') {
						//console.log(res);
						carsVar.vehBookRS = res.data.vehBookRS;
						carsVar.dateOfBooking = new Date();
						reloadCon = true;
						carsVar.cnfrmd = true;
						var pid = res.data.pid;
						carsVar.pid = pid;
						getCarsURL('cars/confirmation?pid='+pid, {pid: pid});
					}
				}
			},
			error: function () {
				console.log('error');
			}
		});
	},
	sortCarClasses: function(array){
		// sort car classes
		array.sort(function(a, b) {
			return a.minPrice  - b.minPrice;
		});
		for(var c=0;c<array.length;c++){
			carsVar.carClassesf.push(array[c].vclass);
		}
		return array;
	},
	render: function() {
		loadTemplate('header',carsVar,$('#searchResultHeader'),carsVar.template);
		loadTemplate('car-slider',carsVar,$('.carAirlineGrid'),carsVar.template);
		loadTemplate('search-filter',carsVar,$('.filterSec'),carsVar.template);
		loadTemplate('sort-by',carsVar,$('.sortSec'),carsVar.template);
		loadTemplate('filter-info',carsVar,$('.youHaveFiltered'),carsVar.template);
		//default results sorting
		carsVar.setSort('price', 'asc');
		carsVar.sortResult(carsVar.filteredResult);
		loadTemplate('search-result-list',carsVar,$('.car-search'),carsVar.template);
		pricetagConvert.init();	
		$('body').on('change', '#_sortPrice', function() {
			carsVar.setSort('price', $('#_sortPrice').val());
			carsVar.filteredResult = carsVar.sortResult(carsVar.filteredResult);
			loadTemplate('search-result-list',carsVar,$('.car-search'),carsVar.template);
		});

		$('body').on('change', '#_price_fliter', function() {
			carsVar.filteredResult = carsVar.filterAndSortResult();
			loadTemplate('sort-by',carsVar,$('.sortSec'),carsVar.template);
			loadTemplate('filter-info',carsVar,$('.youHaveFiltered'),carsVar.template);
			loadTemplate('search-result-list',carsVar,$('.car-search'),carsVar.template);
		});
		$('body').on('change', '#_car_class_filter li input[type=checkbox]', function() {
			var propValue = $(this).prop('value');
			var checkedValue = $(this).prop('checked');

			if(checkedValue) {
				$(".car-slider .item[data-key='" + propValue + "']").addClass('active');
			} else {
				$(".car-slider .item[data-key='" + propValue + "']").removeClass('active');
			}

			carsVar.filteredResult = carsVar.filterAndSortResult();
			loadTemplate('sort-by',carsVar,$('.sortSec'),carsVar.template);
			loadTemplate('filter-info',carsVar,$('.youHaveFiltered'),carsVar.template);
			loadTemplate('search-result-list',carsVar,$('.car-search'),carsVar.template);
		});
		$('body').on('change', '#_car_transmission_filter li input[type=checkbox]', function() {
			carsVar.filteredResult = carsVar.filterAndSortResult();
			loadTemplate('sort-by',carsVar,$('.sortSec'),carsVar.template);
			loadTemplate('filter-info',carsVar,$('.youHaveFiltered'),carsVar.template);
			loadTemplate('search-result-list',carsVar,$('.car-search'),carsVar.template);
		});
		$('body').on('change', '#_car_rental_company_filter li input[type=checkbox]', function() {
			carsVar.filteredResult = carsVar.filterAndSortResult();
			loadTemplate('sort-by',carsVar,$('.sortSec'),carsVar.template);
			loadTemplate('filter-info',carsVar,$('.youHaveFiltered'),carsVar.template);
			loadTemplate('search-result-list',carsVar,$('.car-search'),carsVar.template);
		});

		$('body').on('change', '#_car_fuel_options_filter li input[type=checkbox]', function() {
			carsVar.filteredResult = carsVar.filterAndSortResult();
			loadTemplate('sort-by',carsVar,$('.sortSec'),carsVar.template);
			loadTemplate('filter-info',carsVar,$('.youHaveFiltered'),carsVar.template);
			loadTemplate('search-result-list',carsVar,$('.car-search'),carsVar.template);
		});

		$('body').on('click', '.yhfList li #delete', function() {

			carsVar.removeFromFilter($(this).parent());
			carsVar.filteredResult = carsVar.filterAndSortResult();
			loadTemplate('sort-by',carsVar,$('.sortSec'),carsVar.template);
			loadTemplate('filter-info',carsVar,$('.youHaveFiltered'),carsVar.template);
			loadTemplate('search-result-list',carsVar,$('.car-search'),carsVar.template);
		});

		$('body').on('click', '.yhfReset', function() {
			carsVar.resetFilter();
			carsVar.filteredResult = carsVar.filterAndSortResult();
			initPriceRangeSlider();
			loadTemplate('sort-by',carsVar,$('.sortSec'),carsVar.template);
			loadTemplate('filter-info',carsVar,$('.youHaveFiltered'),carsVar.template);
			loadTemplate('search-result-list',carsVar,$('.car-search'),carsVar.template);
		});
		if(this.eventBindingFlag===false){
			$('body').on('click', '.car-slider .item', function() {
				var dataKey = $(this).attr('data-key');
				var propValue = $('#_car_class_filter #cl_' + dataKey).prop('checked');

				if(!propValue) {
					$(this).addClass('active');
				} else {
					$(this).removeClass('active');
				}

				$('#_car_class_filter #cl_' + dataKey).prop('checked', !propValue);
				carsVar.filteredResult = carsVar.filterAndSortResult();
				loadTemplate('sort-by',carsVar,$('.sortSec'),carsVar.template);
				loadTemplate('filter-info',carsVar,$('.youHaveFiltered'),carsVar.template);
				loadTemplate('search-result-list',carsVar,$('.car-search'),carsVar.template);
				return false;
			});
			this.eventBindingFlag = true;
		}
		if(carsVar.selClass!=''){
			if(carsVar.selClass === "Full+Size"){
				var fullSizeClass = carsVar.selClass
				fullSizeClass = fullSizeClass.replace(/\+/g,' ');
			}
				$('.car-slider .item').each(function(){
					var dataKey = $(this).attr('data-cclass');
					if(dataKey===carsVar.selClass){
						$(this).trigger('click');
					}
					if(dataKey===fullSizeClass){
						$(this).trigger('click');
					}
				});
		}
	},

	renderReview: function() {

		//// prepare travelerInfo fake data
		//carsVar.travellerInfo = {
		//	customerDetails: [
		//		{
		//			basicDetail: {
		//				title: 'Mr',
		//				fullname: 'John Brown',
		//				firstName: 'John',
		//				lastName: 'Brown',
		//				middleName: '',
		//				age: 30,
		//				email: 'johnbrown@gmail.com',
		//				mobileNumber: '9123456789',
		//				mobileAreaCode: '+91'
		//			}
		//		}
		//	]
		//};

		carsVar.changeCarLnk = "changeThisCar(";
		carsVar.changeCarLnk += JSON.stringify({
			dropOff: carsVar.searchForm.dropOff,
			pickUp: carsVar.searchForm.pickUp,
			dropOffDate: carsVar.searchForm.dropOffDate,
			pickUpDate: carsVar.searchForm.pickUpDate,
			dropOffTime: carsVar.searchForm.dropOffTime,
			pickUpTime: carsVar.searchForm.pickUpTime,
			carsClass: (carsVar.searchForm.carsClass ? carsVar.searchForm.carsClass: '')
		});
		carsVar.changeCarLnk += ");";
		loadTemplate('booking-steps', carsVar, $('#booking-steps'), carsVar.template);
		loadTemplate('review-your-car', carsVar, $('#review-your-car'), carsVar.template);
		loadTemplate('driver-details', carsVar, $('#driver-details'), carsVar.template);
		loadTemplate('booking-summary', carsVar, $('#booking-summary'), carsVar.template);
		//$('.paymentBlock').hide();
		pricetagConvert.init();	
		

		$('._age').empty();
		$('._age').append(
			$('<option></option>').val('').html(i18n.t('select'))
		);
		for(var i = 25; i <= 100; i++) {
			$('._age').append(
				$('<option></option>').val(i).html('' + i)
			);
		}

		$('#phone').intlTelInput({
			autoFormat: true,
			notionalMode: true,
			autoPlaceholder: true,
			separateDialCode: true,
			initialCountry: "auto",
			geoIpLookup: function(callback) {
				$.get('http://ipinfo.io', function() {}, "jsonp").always(function(resp) {
					var countryCode = (resp && resp.country) ? resp.country : "";
					callback(countryCode);
				});
			},
			utilsScript: '../common/themes/v2/dev/js/utils.js'
		});

		if(carsVar.vehPreBookRS && carsVar.vehPreBookRS) {
			// initialize driver details form
			$('._saveDriverDetails').hide();
			$('.addTrvlr').hide();

			$('._txtTitle').val(carsVar.vehPreBookRS.bookInfo.customerInfo.name.title);
			$('._txtFName').val(carsVar.vehPreBookRS.bookInfo.customerInfo.name.fn);
			$('._txtMName').val(carsVar.vehPreBookRS.bookInfo.customerInfo.name.mn);
			$('._txtLName').val(carsVar.vehPreBookRS.bookInfo.customerInfo.name.ln);
			$('._age').val(carsVar.vehPreBookRS.bookInfo.customerInfo.age);
			$('._txtEmail').val(carsVar.vehPreBookRS.bookInfo.customerInfo.email);
			$('#phone').intlTelInput('setNumber', carsVar.vehPreBookRS.bookInfo.customerInfo.ph);

			carsVar.showPointsAndPaymentPanel();
		}


		/*$('body').on('change','._addPsngrInfo',function(){
			var elm = $(this).find("option:selected" );
			
			$('._txtTitle').val(elm.attr('data-title'));
			$('._txtFName').val(elm.attr('data-fname'));
			$('._txtMName').val(elm.attr('data-mname'));
			$('._txtLName').val(elm.attr('data-lname'));
			$('._age').val(elm.attr('data-age'));
			$('._txtEmail').val(elm.attr('data-email'));
			$('._txtPhone').intlTelInput(elm.attr('data-phone'));
		});*/
	},

	renderConfirmation: function() {
		//console.log('confirmation render');

		loadTemplate('confirmation-header', carsVar, $('#confirmation-header'), carsVar.template);
		loadTemplate('confirmation', carsVar, $('#confirmation'), carsVar.template);
	},

	renderPrintConfirmation: function() {
		//console.log('print confirmation render');

		loadTemplate('confirmation-title', carsVar, $('#confirmation-title'), carsVar.printTemplate);
		loadTemplate('trip-identifiers', carsVar, $('#trip-identifiers'), carsVar.printTemplate);
		loadTemplate('car-info', carsVar, $('#car-info'), carsVar.printTemplate);
		loadTemplate('booking-details', carsVar, $('#booking-details'), carsVar.printTemplate);
		loadTemplate('rules-info', carsVar, $('#rules-info'), carsVar.printTemplate);
	},

	renderError: function() {
		loadTemplate('header',carsVar,$('#searchResultHeader'),carsVar.template);
	},

	updateModifySearch: function() {
		$('._apxDates').text(carsVar.getDateRangeTxt(true));

		// set pickup
		$('#roundFromC').val(carsVar.searchForm.pickUpName);
		$('#roundFromCId').val(carsVar.searchForm.pickUp);

		// set drop off
		$('#roundToC').val(carsVar.searchForm.dropOffName);
		$('#roundToCId').val(carsVar.searchForm.dropOff);
		
		// set pickup date/time
		$('#mcarsDateFromHidden').val(moment(carsVar.searchForm.pickUpDate).format('YYYY/MM/DD'));
		$('._datepicker.mmcarsDateFrom').val(moment(carsVar.searchForm.pickUpDate).format('DD/MM/YYYY'));
		$('.timepicker .mpickUpTime').val(parseInt(carsVar.searchForm.pickUpTime.split(":")[0]));

		// set drop off date/time
		$('#mcarsDateToHidden').val(moment(carsVar.searchForm.dropOffDate).format('YYYY/MM/DD'));
		$('._datepicker.mmcarsDateTo').val(moment(carsVar.searchForm.dropOffDate).format('DD/MM/YYYY'));
		$('.timepicker .mdropOffTime').val(parseInt(carsVar.searchForm.dropOffTime.split(":")[0]));

		initCarsDatePickerComponent();
		initCarsTimePickerComponent();
		initCarsPredictiveSearchComponent();
		
		if(carsVar.searchForm.carClass && carsVar.searchForm.carClass != '0') {
			$('#moreOptions').prop('checked', true);
			$('#carClass').val(carsVar.searchForm.carClass);
			$('._diffDates').show();
		} else {
			$('._diffDates').hide();
		}
		
		if(typeof Cookies.get('carsSearchCookie')!='undefined'){
			//console.log($('#carSearchKey'));
			var data = Cookies.get('carsSearchCookie');
			parsedData = JSON.parse(data);			
			if($('#carSearchKey')!='undefined'){
				if(data==='undefined'){					
					$('#carSearchKey').val('');
				}else{									
					$('#carSearchKey').val(parsedData.carsSearchKey);				
				}
			}else{			
				$('#carSearchKey').val('');
			}
		}
	},
	getDateRangeTxt: function(short) {
		var dateTxt = '';

		if(short) {
			if (i18n.options.lng == 'ar') {
				var pickUpDate = carsVar.arNames.weekdaysShort[moment(cmnGetURLQueryStr('pickUpDate')).weekday()] + ', ' + carsVar.arNames.months[moment(cmnGetURLQueryStr('pickUpDate')).format('M') - 1] + ' ' + moment(cmnGetURLQueryStr('pickUpDate')).format('DD');
				var dropOffDate = carsVar.arNames.weekdaysShort[moment(cmnGetURLQueryStr('dropOffDate')).weekday()] + ', ' + carsVar.arNames.months[moment(cmnGetURLQueryStr('dropOffDate')).format('M') - 1] + ' ' + moment(cmnGetURLQueryStr('dropOffDate')).format('DD');

				dateTxt = pickUpDate + ' - ' + dropOffDate;
			} else {
				dateTxt = moment(cmnGetURLQueryStr('pickUpDate')).format('ddd, MMM DD') + ' - ' + moment(cmnGetURLQueryStr('dropOffDate')).format('ddd, MMM DD');
			}
		} else {
			if (i18n.options.lng == 'ar') {
				var pickUpDate = carsVar.arNames.weekdaysShort[moment(cmnGetURLQueryStr('pickUpDate')).weekday()] + ' ' + moment(cmnGetURLQueryStr('pickUpDate')).format('DD') + ' ' + carsVar.arNames.months[moment(cmnGetURLQueryStr('pickUpDate')).format('M') - 1] + ' ' + moment(cmnGetURLQueryStr('pickUpDate')).format('YYYY');
				var dropOffDate = carsVar.arNames.weekdaysShort[moment(cmnGetURLQueryStr('dropOffDate')).weekday()] + ' ' + moment(cmnGetURLQueryStr('dropOffDate')).format('DD') + ' ' + carsVar.arNames.months[moment(cmnGetURLQueryStr('dropOffDate')).format('M') - 1] + ' ' + moment(cmnGetURLQueryStr('dropOffDate')).format('YYYY');

				dateTxt = pickUpDate + ' - ' + dropOffDate;
			} else {
				dateTxt = moment(cmnGetURLQueryStr('pickUpDate')).format('ddd DD MMM YYYY') + ' - ' + moment(cmnGetURLQueryStr('dropOffDate')).format('ddd DD MMM YYYY');
			}
		}

		return dateTxt;
	},

	getLoadCnt: function() {

		var pickUpCity = cmnGetURLQueryStr('pickUp');
		var dropOffCity = cmnGetURLQueryStr('dropOff');

		var cityTxt = pickUpCity;
		if(pickUpCity == dropOffCity) {
			cityTxt = cityTxt + ' <i class="flaticon-double99"></i> ';
		} else {
			cityTxt = cityTxt + ' <i class="flaticon-thin4"></i> ';
		}
		cityTxt = cityTxt + dropOffCity;

		var dateTxt = carsVar.getDateRangeTxt();

		return loadCnt = {
			loadCityTxt: cityTxt,
			loadStr: dateTxt
		}
	},
	

	loadQitafCarstripSummary : function(args){
		
		carsVar.responseData=args.responseData;
	    loadTemplate('booking-summary', carsVar, $('#booking-summary'), carsVar.template);
		loadTemplate('payment', carsVar, $('#payment'), carsVar.template);
		$('._dynamicPayBtn').hide();
		$('#_driverDetailsStep').removeClass('active');
		$('#_driverDetailsStep').addClass('done');
		$('#_paymentStep').addClass('active');
		//Init Payment Panel
		initPaymentPanel();
		//Generate card year
		cardYear();
				
	},
	ccm: function(cur){
		var vehAvails = carsVar.vehSearchRS.vehAvails;
		var currency = carsVar.cExR[cur];
		var ccobj = {};
		var cx = carsVar.cExR;
		for(var j in cx){
			ccobj[j] = parseFloat(cx[j])/parseFloat(currency);
		}
		var $t = carsVar;
		async.series([
        		function(callback){
        			for(var i=0;i<vehAvails.length;i++){
						if(vehAvails[i].programs!='undefined'){
							vehAvails[i].programs[0].up.cur = cur;
							vehAvails[i].programs[0].up.tf = (parseFloat(vehAvails[i].programs[0].sprice.tf)*parseFloat(ccobj[vehAvails[i].programs[0].sprice.cur])).toFixed(2);
							vehAvails[i].programs[0].up.bf = (parseFloat(vehAvails[i].programs[0].sprice.bf)*parseFloat(ccobj[vehAvails[i].programs[0].sprice.cur])).toFixed(2);
							vehAvails[i].programs[0].up.ttax = (parseFloat(vehAvails[i].programs[0].sprice.ttax)*parseFloat(ccobj[vehAvails[i].programs[0].sprice.cur])).toFixed(2);
							vehAvails[i].programs[0].up.sf = '';
							vehAvails[i].programs[0].up.discount = '';
							vehAvails[i].programs[0].up.mandatoryFeesDueAtPickUp = '';
						}
						
        			}
        			return callback();
        		},
        		function(callback){
					carsVar.vehSearchRS.vehAvails = vehAvails;
					carsVar.setSelectedCurrency = i18n.t(currencySymbols(cur));
        			return callback();
        		},
        		function(callback){
					carsVar.sliderData = carsVar.prepareSliderData();
					carsVar.searchFilterData = carsVar.prepareSearchFilterData();
					loadTemplate('car-slider',carsVar,$('.carAirlineGrid'),carsVar.template);
					loadTemplate('search-filter',carsVar,$('.filterSec'),carsVar.template);
					carsVar.filteredResult = carsVar.filterAndSortResult();
					$('.yhfReset').trigger('click');
					return callback();
        		}
        		],function(err){
					loadTemplate('search-result-list',carsVar,$('.car-search'),carsVar.template);
					initPriceRangeSlider();
					loadCarsGrid();
			});
	}

};

	$('body').on('click', '._saveDriverDetails', function() {
			carsVar.saveDriverDetails();
	});
	
	$('body').on('change','._addPsngrInfo',function(){
		var elm = $(this).find("option:selected" );
		$('._txtTitle').val(elm.attr('data-title'));
		$('._txtFName').val(elm.attr('data-fname'));
		$('._txtMName').val(elm.attr('data-mname'));
		$('._txtLName').val(elm.attr('data-lname'));
		$('._age').val(elm.attr('data-age'));
		$('._txtEmail').val(elm.attr('data-email'));
		if(elm.attr('data-phone')!='' && elm.attr('data-phone')!='undefined' && elm.attr('data-phone').split('-').length>1){
			$('._txtPhone').val(elm.attr('data-phone').split('-')[1]);
		}
		else{
			$('._txtPhone').val(elm.attr('data-phone'));
		}
		if(elm.attr('data-ccode').charAt(0) == "+"){
			$('#phoneCountryCode').val(elm.attr('data-ccode'));
		}
		else{
			$('#phoneCountryCode').val("+"+elm.attr('data-ccode'));
		}
		if(elm.attr('data-mobileareacountrycode')!=""){
			flagCssPath = elm.attr('data-mobileareacountrycode')+" fnone cc-flag fnone";
			$('.ddTitleText img').attr("class",flagCssPath.toLowerCase());
		}
		else{
			flagCssPath = "sa fnone cc-flag fnone";
			$('.ddTitleText img').attr("class",flagCssPath.toLowerCase());
			$('#phoneCountryCode').val("+966");
		}
	});
	
	function paymentConfigureCar(sadad,payfort,installment,payAtStore,paymentObj){
		
		if(paymentObj.showPayfort){
			payfort.show();
		}else{
			payfort.hide();
			payfort.removeClass('active');
		}
		
		if(paymentObj.showSadad){
			sadad.show();
		}else{
			sadad.hide();
		}
		
		if(paymentObj.showInstallment){
			if(paymentObj.sarAmount < 1000){
				installment.hide();
			}else{
				installment.show();
			}
		}else{
			installment.hide();
		}
		
		payAtStore.hide();
		
	}
	$('body').on('click','._emailDriver',function(){
		var email=$('._driverEmailId').val();
		var bkngRef=$(this).attr('data-bookingRef');
		var prdType=$(this).attr('data-prdType');
		var srvcType=$(this).attr('data-srvcType');
		var pid = $(this).attr('data-pid');
		if(email===''){
			growl_alert(i18n.t("enterEmailId"));
			return false;
		}
		else{
			if(email !==''){
				if(!_evl(email)){
					growl_alert(i18n.t("errEmaiAdd"));
					return false;
				}
			}
			if(email !=='' && bkngRef !==null){
				var data={
						email:email,
						bkngRef:bkngRef,
						prdType:prdType,
						srvcType:srvcType
				}
				console.log(JSON.stringify(data));
				$.post('/hotel/sendVoucher',{data:data},function(res){
					if(res!==null && res.status==="SUCCESS"){
						if(srvcType=="email_voucher"){
						  growl_alert(i18n.t("Vouchersentsuccess"));	
						}else if(srvcType=="email_eticket"){
							growl_alert(i18n.t("eticketsentsuccess"));
						}else{
							growl_alert(i18n.t("invoicesentsucess"));
						}	
						$('.alert_custom').addClass('alert-success');					
					}
					else{
						growl_alert(i18n.t("failed"));
					}
					
				});
			}
		}
	});
	
	
/*Football Offer Code Starts here*/
/*function footbalOfferResult(){ 
   if(window.location.href.indexOf("arr=LON") > -1 || 
   window.location.href.indexOf("arr=LHR") > -1 || 
   window.location.href.indexOf("arr=LGW") > -1 || 
   window.location.href.indexOf("arr=LCY") > -1 || 
   window.location.href.indexOf("arr=LTN") > -1 || 
   
   window.location.href.indexOf("arr1=LON") > -1 || 
   window.location.href.indexOf("arr1=LHR") > -1 || 
   window.location.href.indexOf("arr1=LGW") > -1 || 
   window.location.href.indexOf("arr1=LCY") > -1 || 
   window.location.href.indexOf("arr1=LTN") > -1 ||
   
   window.location.href.indexOf("arr2=LON") > -1 || 
   window.location.href.indexOf("arr2=LHR") > -1 || 
   window.location.href.indexOf("arr2=LGW") > -1 || 
   window.location.href.indexOf("arr2=LCY") > -1 || 
   window.location.href.indexOf("arr2=LTN") > -1 ||
   
   window.location.href.indexOf("arr3=LON") > -1 || 
   window.location.href.indexOf("arr3=LHR") > -1 || 
   window.location.href.indexOf("arr3=LGW") > -1 || 
   window.location.href.indexOf("arr3=LCY") > -1 || 
   window.location.href.indexOf("arr3=LTN") > -1 ||
   
   window.location.href.indexOf("arriveDetails=LON") > -1 || 
   window.location.href.indexOf("arriveDetails=LHR") > -1 || 
   window.location.href.indexOf("arriveDetails=LGW") > -1 || 
   window.location.href.indexOf("arriveDetails=LCY") > -1 || 
   window.location.href.indexOf("arriveDetails=LTN") > -1 ||
   
   window.location.href.indexOf("cityId=50522") > -1) { 
   if($("html").hasClass("en")){
		$(".resultBlock .infoSec .primary-content").prepend('<div style="margin-bottom: 20px;"><img src="/common/themes/v2/img/footballOfferResult-en.png"/></div>');
   } else {
		$(".resultBlock .infoSec .primary-content").prepend('<div style="margin-bottom: 20px;"><img src="/common/themes/v2/img/footballOfferResult-ar.png"/></div>');
   } 
  } 
};*/
/*Football Offer Code Ends here*/




/*Flyin Offer Code Starts here*/
function flyinOfferBanner(){ 
   if($('.homePage .home .herobanner').length || $('.homePage .home .alHilalBannerbg').length) { 
       if($("html").hasClass("en")){
		     $(".homePage .home .herobanner+.whiteBg, .homePage .home .alHilalBannerbg+.whiteBg").prepend('<div class="container"><div class="row fOB"><div class="flyinOfferBanner col-md-12" style="margin:50px 0px 0 ;"><a href="https://www.flyin.com/qitaf?utm_source=Homepage%20Banner&utm_campaign=Qitaf" target="_blank"><img src="/common/themes/v2/img/qitaf-banner-en.jpg?v=nd-v0102" alt="Qitaf" style="max-width: 100%;"></a></div></div></div>');
       }  else {
           $(".homePage .home .herobanner+.whiteBg, .homePage .home .alHilalBannerbg+.whiteBg").prepend('<div class="container"><div class="row fOB"><div class="flyinOfferBanner col-md-12" style="margin:50px 0px 0 ;"><a href="https://www.flyin.com/qitaf?utm_source=Homepage%20Banner&utm_campaign=Qitaf" target="_blank"><img src="/common/themes/v2/img/qitaf-banner-ar.jpg?v=nd-v0102" alt="Ù‚Ø·Ø§Ù" style="max-width: 100%;"></a></div></div></div>');
       } 
  } 
  $('.lPage .flyinOfferBanner, .lPage .fOB').remove();
};
if(window.location.href.indexOf('eg.flyin.com')==-1){
setTimeout(function(){
	//flyinOfferBanner();
	
},500);
}


/*Flyin Offer Code Ends here*/
/*!
 DataTables 1.10.12
 Â©2008-2015 SpryMedia Ltd - datatables.net/license
*/
(function(h){"function"===typeof define&&define.amd?define(["jquery"],function(D){return h(D,window,document)}):"object"===typeof exports?module.exports=function(D,I){D||(D=window);I||(I="undefined"!==typeof window?require("jquery"):require("jquery")(D));return h(I,D,D.document)}:h(jQuery,window,document)})(function(h,D,I,k){function X(a){var b,c,d={};h.each(a,function(e){if((b=e.match(/^([^A-Z]+?)([A-Z])/))&&-1!=="a aa ai ao as b fn i m o s ".indexOf(b[1]+" "))c=e.replace(b[0],b[2].toLowerCase()),
d[c]=e,"o"===b[1]&&X(a[e])});a._hungarianMap=d}function K(a,b,c){a._hungarianMap||X(a);var d;h.each(b,function(e){d=a._hungarianMap[e];if(d!==k&&(c||b[d]===k))"o"===d.charAt(0)?(b[d]||(b[d]={}),h.extend(!0,b[d],b[e]),K(a[d],b[d],c)):b[d]=b[e]})}function Da(a){var b=m.defaults.oLanguage,c=a.sZeroRecords;!a.sEmptyTable&&(c&&"No data available in table"===b.sEmptyTable)&&E(a,a,"sZeroRecords","sEmptyTable");!a.sLoadingRecords&&(c&&"Loading..."===b.sLoadingRecords)&&E(a,a,"sZeroRecords","sLoadingRecords");
a.sInfoThousands&&(a.sThousands=a.sInfoThousands);(a=a.sDecimal)&&db(a)}function eb(a){A(a,"ordering","bSort");A(a,"orderMulti","bSortMulti");A(a,"orderClasses","bSortClasses");A(a,"orderCellsTop","bSortCellsTop");A(a,"order","aaSorting");A(a,"orderFixed","aaSortingFixed");A(a,"paging","bPaginate");A(a,"pagingType","sPaginationType");A(a,"pageLength","iDisplayLength");A(a,"searching","bFilter");"boolean"===typeof a.sScrollX&&(a.sScrollX=a.sScrollX?"100%":"");"boolean"===typeof a.scrollX&&(a.scrollX=
a.scrollX?"100%":"");if(a=a.aoSearchCols)for(var b=0,c=a.length;b<c;b++)a[b]&&K(m.models.oSearch,a[b])}function fb(a){A(a,"orderable","bSortable");A(a,"orderData","aDataSort");A(a,"orderSequence","asSorting");A(a,"orderDataType","sortDataType");var b=a.aDataSort;b&&!h.isArray(b)&&(a.aDataSort=[b])}function gb(a){if(!m.__browser){var b={};m.__browser=b;var c=h("<div/>").css({position:"fixed",top:0,left:0,height:1,width:1,overflow:"hidden"}).append(h("<div/>").css({position:"absolute",top:1,left:1,
width:100,overflow:"scroll"}).append(h("<div/>").css({width:"100%",height:10}))).appendTo("body"),d=c.children(),e=d.children();b.barWidth=d[0].offsetWidth-d[0].clientWidth;b.bScrollOversize=100===e[0].offsetWidth&&100!==d[0].clientWidth;b.bScrollbarLeft=1!==Math.round(e.offset().left);b.bBounding=c[0].getBoundingClientRect().width?!0:!1;c.remove()}h.extend(a.oBrowser,m.__browser);a.oScroll.iBarWidth=m.__browser.barWidth}function hb(a,b,c,d,e,f){var g,j=!1;c!==k&&(g=c,j=!0);for(;d!==e;)a.hasOwnProperty(d)&&
(g=j?b(g,a[d],d,a):a[d],j=!0,d+=f);return g}function Ea(a,b){var c=m.defaults.column,d=a.aoColumns.length,c=h.extend({},m.models.oColumn,c,{nTh:b?b:I.createElement("th"),sTitle:c.sTitle?c.sTitle:b?b.innerHTML:"",aDataSort:c.aDataSort?c.aDataSort:[d],mData:c.mData?c.mData:d,idx:d});a.aoColumns.push(c);c=a.aoPreSearchCols;c[d]=h.extend({},m.models.oSearch,c[d]);ja(a,d,h(b).data())}function ja(a,b,c){var b=a.aoColumns[b],d=a.oClasses,e=h(b.nTh);if(!b.sWidthOrig){b.sWidthOrig=e.attr("width")||null;var f=
(e.attr("style")||"").match(/width:\s*(\d+[pxem%]+)/);f&&(b.sWidthOrig=f[1])}c!==k&&null!==c&&(fb(c),K(m.defaults.column,c),c.mDataProp!==k&&!c.mData&&(c.mData=c.mDataProp),c.sType&&(b._sManualType=c.sType),c.className&&!c.sClass&&(c.sClass=c.className),h.extend(b,c),E(b,c,"sWidth","sWidthOrig"),c.iDataSort!==k&&(b.aDataSort=[c.iDataSort]),E(b,c,"aDataSort"));var g=b.mData,j=Q(g),i=b.mRender?Q(b.mRender):null,c=function(a){return"string"===typeof a&&-1!==a.indexOf("@")};b._bAttrSrc=h.isPlainObject(g)&&
(c(g.sort)||c(g.type)||c(g.filter));b._setter=null;b.fnGetData=function(a,b,c){var d=j(a,b,k,c);return i&&b?i(d,b,a,c):d};b.fnSetData=function(a,b,c){return R(g)(a,b,c)};"number"!==typeof g&&(a._rowReadObject=!0);a.oFeatures.bSort||(b.bSortable=!1,e.addClass(d.sSortableNone));a=-1!==h.inArray("asc",b.asSorting);c=-1!==h.inArray("desc",b.asSorting);!b.bSortable||!a&&!c?(b.sSortingClass=d.sSortableNone,b.sSortingClassJUI=""):a&&!c?(b.sSortingClass=d.sSortableAsc,b.sSortingClassJUI=d.sSortJUIAscAllowed):
!a&&c?(b.sSortingClass=d.sSortableDesc,b.sSortingClassJUI=d.sSortJUIDescAllowed):(b.sSortingClass=d.sSortable,b.sSortingClassJUI=d.sSortJUI)}function Y(a){if(!1!==a.oFeatures.bAutoWidth){var b=a.aoColumns;Fa(a);for(var c=0,d=b.length;c<d;c++)b[c].nTh.style.width=b[c].sWidth}b=a.oScroll;(""!==b.sY||""!==b.sX)&&ka(a);u(a,null,"column-sizing",[a])}function Z(a,b){var c=la(a,"bVisible");return"number"===typeof c[b]?c[b]:null}function $(a,b){var c=la(a,"bVisible"),c=h.inArray(b,c);return-1!==c?c:null}
function aa(a){var b=0;h.each(a.aoColumns,function(a,d){d.bVisible&&"none"!==h(d.nTh).css("display")&&b++});return b}function la(a,b){var c=[];h.map(a.aoColumns,function(a,e){a[b]&&c.push(e)});return c}function Ga(a){var b=a.aoColumns,c=a.aoData,d=m.ext.type.detect,e,f,g,j,i,h,l,q,t;e=0;for(f=b.length;e<f;e++)if(l=b[e],t=[],!l.sType&&l._sManualType)l.sType=l._sManualType;else if(!l.sType){g=0;for(j=d.length;g<j;g++){i=0;for(h=c.length;i<h;i++){t[i]===k&&(t[i]=B(a,i,e,"type"));q=d[g](t[i],a);if(!q&&
g!==d.length-1)break;if("html"===q)break}if(q){l.sType=q;break}}l.sType||(l.sType="string")}}function ib(a,b,c,d){var e,f,g,j,i,n,l=a.aoColumns;if(b)for(e=b.length-1;0<=e;e--){n=b[e];var q=n.targets!==k?n.targets:n.aTargets;h.isArray(q)||(q=[q]);f=0;for(g=q.length;f<g;f++)if("number"===typeof q[f]&&0<=q[f]){for(;l.length<=q[f];)Ea(a);d(q[f],n)}else if("number"===typeof q[f]&&0>q[f])d(l.length+q[f],n);else if("string"===typeof q[f]){j=0;for(i=l.length;j<i;j++)("_all"==q[f]||h(l[j].nTh).hasClass(q[f]))&&
d(j,n)}}if(c){e=0;for(a=c.length;e<a;e++)d(e,c[e])}}function N(a,b,c,d){var e=a.aoData.length,f=h.extend(!0,{},m.models.oRow,{src:c?"dom":"data",idx:e});f._aData=b;a.aoData.push(f);for(var g=a.aoColumns,j=0,i=g.length;j<i;j++)g[j].sType=null;a.aiDisplayMaster.push(e);b=a.rowIdFn(b);b!==k&&(a.aIds[b]=f);(c||!a.oFeatures.bDeferRender)&&Ha(a,e,c,d);return e}function ma(a,b){var c;b instanceof h||(b=h(b));return b.map(function(b,e){c=Ia(a,e);return N(a,c.data,e,c.cells)})}function B(a,b,c,d){var e=a.iDraw,
f=a.aoColumns[c],g=a.aoData[b]._aData,j=f.sDefaultContent,i=f.fnGetData(g,d,{settings:a,row:b,col:c});if(i===k)return a.iDrawError!=e&&null===j&&(L(a,0,"Requested unknown parameter "+("function"==typeof f.mData?"{function}":"'"+f.mData+"'")+" for row "+b+", column "+c,4),a.iDrawError=e),j;if((i===g||null===i)&&null!==j&&d!==k)i=j;else if("function"===typeof i)return i.call(g);return null===i&&"display"==d?"":i}function jb(a,b,c,d){a.aoColumns[c].fnSetData(a.aoData[b]._aData,d,{settings:a,row:b,col:c})}
function Ja(a){return h.map(a.match(/(\\.|[^\.])+/g)||[""],function(a){return a.replace(/\\./g,".")})}function Q(a){if(h.isPlainObject(a)){var b={};h.each(a,function(a,c){c&&(b[a]=Q(c))});return function(a,c,f,g){var j=b[c]||b._;return j!==k?j(a,c,f,g):a}}if(null===a)return function(a){return a};if("function"===typeof a)return function(b,c,f,g){return a(b,c,f,g)};if("string"===typeof a&&(-1!==a.indexOf(".")||-1!==a.indexOf("[")||-1!==a.indexOf("("))){var c=function(a,b,f){var g,j;if(""!==f){j=Ja(f);
for(var i=0,n=j.length;i<n;i++){f=j[i].match(ba);g=j[i].match(U);if(f){j[i]=j[i].replace(ba,"");""!==j[i]&&(a=a[j[i]]);g=[];j.splice(0,i+1);j=j.join(".");if(h.isArray(a)){i=0;for(n=a.length;i<n;i++)g.push(c(a[i],b,j))}a=f[0].substring(1,f[0].length-1);a=""===a?g:g.join(a);break}else if(g){j[i]=j[i].replace(U,"");a=a[j[i]]();continue}if(null===a||a[j[i]]===k)return k;a=a[j[i]]}}return a};return function(b,e){return c(b,e,a)}}return function(b){return b[a]}}function R(a){if(h.isPlainObject(a))return R(a._);
if(null===a)return function(){};if("function"===typeof a)return function(b,d,e){a(b,"set",d,e)};if("string"===typeof a&&(-1!==a.indexOf(".")||-1!==a.indexOf("[")||-1!==a.indexOf("("))){var b=function(a,d,e){var e=Ja(e),f;f=e[e.length-1];for(var g,j,i=0,n=e.length-1;i<n;i++){g=e[i].match(ba);j=e[i].match(U);if(g){e[i]=e[i].replace(ba,"");a[e[i]]=[];f=e.slice();f.splice(0,i+1);g=f.join(".");if(h.isArray(d)){j=0;for(n=d.length;j<n;j++)f={},b(f,d[j],g),a[e[i]].push(f)}else a[e[i]]=d;return}j&&(e[i]=e[i].replace(U,
""),a=a[e[i]](d));if(null===a[e[i]]||a[e[i]]===k)a[e[i]]={};a=a[e[i]]}if(f.match(U))a[f.replace(U,"")](d);else a[f.replace(ba,"")]=d};return function(c,d){return b(c,d,a)}}return function(b,d){b[a]=d}}function Ka(a){return G(a.aoData,"_aData")}function na(a){a.aoData.length=0;a.aiDisplayMaster.length=0;a.aiDisplay.length=0;a.aIds={}}function oa(a,b,c){for(var d=-1,e=0,f=a.length;e<f;e++)a[e]==b?d=e:a[e]>b&&a[e]--; -1!=d&&c===k&&a.splice(d,1)}function ca(a,b,c,d){var e=a.aoData[b],f,g=function(c,d){for(;c.childNodes.length;)c.removeChild(c.firstChild);
c.innerHTML=B(a,b,d,"display")};if("dom"===c||(!c||"auto"===c)&&"dom"===e.src)e._aData=Ia(a,e,d,d===k?k:e._aData).data;else{var j=e.anCells;if(j)if(d!==k)g(j[d],d);else{c=0;for(f=j.length;c<f;c++)g(j[c],c)}}e._aSortData=null;e._aFilterData=null;g=a.aoColumns;if(d!==k)g[d].sType=null;else{c=0;for(f=g.length;c<f;c++)g[c].sType=null;La(a,e)}}function Ia(a,b,c,d){var e=[],f=b.firstChild,g,j,i=0,n,l=a.aoColumns,q=a._rowReadObject,d=d!==k?d:q?{}:[],t=function(a,b){if("string"===typeof a){var c=a.indexOf("@");
-1!==c&&(c=a.substring(c+1),R(a)(d,b.getAttribute(c)))}},S=function(a){if(c===k||c===i)j=l[i],n=h.trim(a.innerHTML),j&&j._bAttrSrc?(R(j.mData._)(d,n),t(j.mData.sort,a),t(j.mData.type,a),t(j.mData.filter,a)):q?(j._setter||(j._setter=R(j.mData)),j._setter(d,n)):d[i]=n;i++};if(f)for(;f;){g=f.nodeName.toUpperCase();if("TD"==g||"TH"==g)S(f),e.push(f);f=f.nextSibling}else{e=b.anCells;f=0;for(g=e.length;f<g;f++)S(e[f])}if(b=b.firstChild?b:b.nTr)(b=b.getAttribute("id"))&&R(a.rowId)(d,b);return{data:d,cells:e}}
function Ha(a,b,c,d){var e=a.aoData[b],f=e._aData,g=[],j,i,n,l,q;if(null===e.nTr){j=c||I.createElement("tr");e.nTr=j;e.anCells=g;j._DT_RowIndex=b;La(a,e);l=0;for(q=a.aoColumns.length;l<q;l++){n=a.aoColumns[l];i=c?d[l]:I.createElement(n.sCellType);i._DT_CellIndex={row:b,column:l};g.push(i);if((!c||n.mRender||n.mData!==l)&&(!h.isPlainObject(n.mData)||n.mData._!==l+".display"))i.innerHTML=B(a,b,l,"display");n.sClass&&(i.className+=" "+n.sClass);n.bVisible&&!c?j.appendChild(i):!n.bVisible&&c&&i.parentNode.removeChild(i);
n.fnCreatedCell&&n.fnCreatedCell.call(a.oInstance,i,B(a,b,l),f,b,l)}u(a,"aoRowCreatedCallback",null,[j,f,b])}e.nTr.setAttribute("role","row")}function La(a,b){var c=b.nTr,d=b._aData;if(c){var e=a.rowIdFn(d);e&&(c.id=e);d.DT_RowClass&&(e=d.DT_RowClass.split(" "),b.__rowc=b.__rowc?pa(b.__rowc.concat(e)):e,h(c).removeClass(b.__rowc.join(" ")).addClass(d.DT_RowClass));d.DT_RowAttr&&h(c).attr(d.DT_RowAttr);d.DT_RowData&&h(c).data(d.DT_RowData)}}function kb(a){var b,c,d,e,f,g=a.nTHead,j=a.nTFoot,i=0===
h("th, td",g).length,n=a.oClasses,l=a.aoColumns;i&&(e=h("<tr/>").appendTo(g));b=0;for(c=l.length;b<c;b++)f=l[b],d=h(f.nTh).addClass(f.sClass),i&&d.appendTo(e),a.oFeatures.bSort&&(d.addClass(f.sSortingClass),!1!==f.bSortable&&(d.attr("tabindex",a.iTabIndex).attr("aria-controls",a.sTableId),Ma(a,f.nTh,b))),f.sTitle!=d[0].innerHTML&&d.html(f.sTitle),Na(a,"header")(a,d,f,n);i&&da(a.aoHeader,g);h(g).find(">tr").attr("role","row");h(g).find(">tr>th, >tr>td").addClass(n.sHeaderTH);h(j).find(">tr>th, >tr>td").addClass(n.sFooterTH);
if(null!==j){a=a.aoFooter[0];b=0;for(c=a.length;b<c;b++)f=l[b],f.nTf=a[b].cell,f.sClass&&h(f.nTf).addClass(f.sClass)}}function ea(a,b,c){var d,e,f,g=[],j=[],i=a.aoColumns.length,n;if(b){c===k&&(c=!1);d=0;for(e=b.length;d<e;d++){g[d]=b[d].slice();g[d].nTr=b[d].nTr;for(f=i-1;0<=f;f--)!a.aoColumns[f].bVisible&&!c&&g[d].splice(f,1);j.push([])}d=0;for(e=g.length;d<e;d++){if(a=g[d].nTr)for(;f=a.firstChild;)a.removeChild(f);f=0;for(b=g[d].length;f<b;f++)if(n=i=1,j[d][f]===k){a.appendChild(g[d][f].cell);
for(j[d][f]=1;g[d+i]!==k&&g[d][f].cell==g[d+i][f].cell;)j[d+i][f]=1,i++;for(;g[d][f+n]!==k&&g[d][f].cell==g[d][f+n].cell;){for(c=0;c<i;c++)j[d+c][f+n]=1;n++}h(g[d][f].cell).attr("rowspan",i).attr("colspan",n)}}}}function O(a){var b=u(a,"aoPreDrawCallback","preDraw",[a]);if(-1!==h.inArray(!1,b))C(a,!1);else{var b=[],c=0,d=a.asStripeClasses,e=d.length,f=a.oLanguage,g=a.iInitDisplayStart,j="ssp"==y(a),i=a.aiDisplay;a.bDrawing=!0;g!==k&&-1!==g&&(a._iDisplayStart=j?g:g>=a.fnRecordsDisplay()?0:g,a.iInitDisplayStart=
-1);var g=a._iDisplayStart,n=a.fnDisplayEnd();if(a.bDeferLoading)a.bDeferLoading=!1,a.iDraw++,C(a,!1);else if(j){if(!a.bDestroying&&!lb(a))return}else a.iDraw++;if(0!==i.length){f=j?a.aoData.length:n;for(j=j?0:g;j<f;j++){var l=i[j],q=a.aoData[l];null===q.nTr&&Ha(a,l);l=q.nTr;if(0!==e){var t=d[c%e];q._sRowStripe!=t&&(h(l).removeClass(q._sRowStripe).addClass(t),q._sRowStripe=t)}u(a,"aoRowCallback",null,[l,q._aData,c,j]);b.push(l);c++}}else c=f.sZeroRecords,1==a.iDraw&&"ajax"==y(a)?c=f.sLoadingRecords:
f.sEmptyTable&&0===a.fnRecordsTotal()&&(c=f.sEmptyTable),b[0]=h("<tr/>",{"class":e?d[0]:""}).append(h("<td />",{valign:"top",colSpan:aa(a),"class":a.oClasses.sRowEmpty}).html(c))[0];u(a,"aoHeaderCallback","header",[h(a.nTHead).children("tr")[0],Ka(a),g,n,i]);u(a,"aoFooterCallback","footer",[h(a.nTFoot).children("tr")[0],Ka(a),g,n,i]);d=h(a.nTBody);d.children().detach();d.append(h(b));u(a,"aoDrawCallback","draw",[a]);a.bSorted=!1;a.bFiltered=!1;a.bDrawing=!1}}function T(a,b){var c=a.oFeatures,d=c.bFilter;
c.bSort&&mb(a);d?fa(a,a.oPreviousSearch):a.aiDisplay=a.aiDisplayMaster.slice();!0!==b&&(a._iDisplayStart=0);a._drawHold=b;O(a);a._drawHold=!1}function nb(a){var b=a.oClasses,c=h(a.nTable),c=h("<div/>").insertBefore(c),d=a.oFeatures,e=h("<div/>",{id:a.sTableId+"_wrapper","class":b.sWrapper+(a.nTFoot?"":" "+b.sNoFooter)});a.nHolding=c[0];a.nTableWrapper=e[0];a.nTableReinsertBefore=a.nTable.nextSibling;for(var f=a.sDom.split(""),g,j,i,n,l,q,t=0;t<f.length;t++){g=null;j=f[t];if("<"==j){i=h("<div/>")[0];
n=f[t+1];if("'"==n||'"'==n){l="";for(q=2;f[t+q]!=n;)l+=f[t+q],q++;"H"==l?l=b.sJUIHeader:"F"==l&&(l=b.sJUIFooter);-1!=l.indexOf(".")?(n=l.split("."),i.id=n[0].substr(1,n[0].length-1),i.className=n[1]):"#"==l.charAt(0)?i.id=l.substr(1,l.length-1):i.className=l;t+=q}e.append(i);e=h(i)}else if(">"==j)e=e.parent();else if("l"==j&&d.bPaginate&&d.bLengthChange)g=ob(a);else if("f"==j&&d.bFilter)g=pb(a);else if("r"==j&&d.bProcessing)g=qb(a);else if("t"==j)g=rb(a);else if("i"==j&&d.bInfo)g=sb(a);else if("p"==
j&&d.bPaginate)g=tb(a);else if(0!==m.ext.feature.length){i=m.ext.feature;q=0;for(n=i.length;q<n;q++)if(j==i[q].cFeature){g=i[q].fnInit(a);break}}g&&(i=a.aanFeatures,i[j]||(i[j]=[]),i[j].push(g),e.append(g))}c.replaceWith(e);a.nHolding=null}function da(a,b){var c=h(b).children("tr"),d,e,f,g,j,i,n,l,q,t;a.splice(0,a.length);f=0;for(i=c.length;f<i;f++)a.push([]);f=0;for(i=c.length;f<i;f++){d=c[f];for(e=d.firstChild;e;){if("TD"==e.nodeName.toUpperCase()||"TH"==e.nodeName.toUpperCase()){l=1*e.getAttribute("colspan");
q=1*e.getAttribute("rowspan");l=!l||0===l||1===l?1:l;q=!q||0===q||1===q?1:q;g=0;for(j=a[f];j[g];)g++;n=g;t=1===l?!0:!1;for(j=0;j<l;j++)for(g=0;g<q;g++)a[f+g][n+j]={cell:e,unique:t},a[f+g].nTr=d}e=e.nextSibling}}}function qa(a,b,c){var d=[];c||(c=a.aoHeader,b&&(c=[],da(c,b)));for(var b=0,e=c.length;b<e;b++)for(var f=0,g=c[b].length;f<g;f++)if(c[b][f].unique&&(!d[f]||!a.bSortCellsTop))d[f]=c[b][f].cell;return d}function ra(a,b,c){u(a,"aoServerParams","serverParams",[b]);if(b&&h.isArray(b)){var d={},
e=/(.*?)\[\]$/;h.each(b,function(a,b){var c=b.name.match(e);c?(c=c[0],d[c]||(d[c]=[]),d[c].push(b.value)):d[b.name]=b.value});b=d}var f,g=a.ajax,j=a.oInstance,i=function(b){u(a,null,"xhr",[a,b,a.jqXHR]);c(b)};if(h.isPlainObject(g)&&g.data){f=g.data;var n=h.isFunction(f)?f(b,a):f,b=h.isFunction(f)&&n?n:h.extend(!0,b,n);delete g.data}n={data:b,success:function(b){var c=b.error||b.sError;c&&L(a,0,c);a.json=b;i(b)},dataType:"json",cache:!1,type:a.sServerMethod,error:function(b,c){var d=u(a,null,"xhr",
[a,null,a.jqXHR]);-1===h.inArray(!0,d)&&("parsererror"==c?L(a,0,"Invalid JSON response",1):4===b.readyState&&L(a,0,"Ajax error",7));C(a,!1)}};a.oAjaxData=b;u(a,null,"preXhr",[a,b]);a.fnServerData?a.fnServerData.call(j,a.sAjaxSource,h.map(b,function(a,b){return{name:b,value:a}}),i,a):a.sAjaxSource||"string"===typeof g?a.jqXHR=h.ajax(h.extend(n,{url:g||a.sAjaxSource})):h.isFunction(g)?a.jqXHR=g.call(j,b,i,a):(a.jqXHR=h.ajax(h.extend(n,g)),g.data=f)}function lb(a){return a.bAjaxDataGet?(a.iDraw++,C(a,
!0),ra(a,ub(a),function(b){vb(a,b)}),!1):!0}function ub(a){var b=a.aoColumns,c=b.length,d=a.oFeatures,e=a.oPreviousSearch,f=a.aoPreSearchCols,g,j=[],i,n,l,q=V(a);g=a._iDisplayStart;i=!1!==d.bPaginate?a._iDisplayLength:-1;var k=function(a,b){j.push({name:a,value:b})};k("sEcho",a.iDraw);k("iColumns",c);k("sColumns",G(b,"sName").join(","));k("iDisplayStart",g);k("iDisplayLength",i);var S={draw:a.iDraw,columns:[],order:[],start:g,length:i,search:{value:e.sSearch,regex:e.bRegex}};for(g=0;g<c;g++)n=b[g],
l=f[g],i="function"==typeof n.mData?"function":n.mData,S.columns.push({data:i,name:n.sName,searchable:n.bSearchable,orderable:n.bSortable,search:{value:l.sSearch,regex:l.bRegex}}),k("mDataProp_"+g,i),d.bFilter&&(k("sSearch_"+g,l.sSearch),k("bRegex_"+g,l.bRegex),k("bSearchable_"+g,n.bSearchable)),d.bSort&&k("bSortable_"+g,n.bSortable);d.bFilter&&(k("sSearch",e.sSearch),k("bRegex",e.bRegex));d.bSort&&(h.each(q,function(a,b){S.order.push({column:b.col,dir:b.dir});k("iSortCol_"+a,b.col);k("sSortDir_"+
a,b.dir)}),k("iSortingCols",q.length));b=m.ext.legacy.ajax;return null===b?a.sAjaxSource?j:S:b?j:S}function vb(a,b){var c=sa(a,b),d=b.sEcho!==k?b.sEcho:b.draw,e=b.iTotalRecords!==k?b.iTotalRecords:b.recordsTotal,f=b.iTotalDisplayRecords!==k?b.iTotalDisplayRecords:b.recordsFiltered;if(d){if(1*d<a.iDraw)return;a.iDraw=1*d}na(a);a._iRecordsTotal=parseInt(e,10);a._iRecordsDisplay=parseInt(f,10);d=0;for(e=c.length;d<e;d++)N(a,c[d]);a.aiDisplay=a.aiDisplayMaster.slice();a.bAjaxDataGet=!1;O(a);a._bInitComplete||
ta(a,b);a.bAjaxDataGet=!0;C(a,!1)}function sa(a,b){var c=h.isPlainObject(a.ajax)&&a.ajax.dataSrc!==k?a.ajax.dataSrc:a.sAjaxDataProp;return"data"===c?b.aaData||b[c]:""!==c?Q(c)(b):b}function pb(a){var b=a.oClasses,c=a.sTableId,d=a.oLanguage,e=a.oPreviousSearch,f=a.aanFeatures,g='<input type="search" class="'+b.sFilterInput+'"/>',j=d.sSearch,j=j.match(/_INPUT_/)?j.replace("_INPUT_",g):j+g,b=h("<div/>",{id:!f.f?c+"_filter":null,"class":b.sFilter}).append(h("<label/>").append(j)),f=function(){var b=!this.value?
"":this.value;b!=e.sSearch&&(fa(a,{sSearch:b,bRegex:e.bRegex,bSmart:e.bSmart,bCaseInsensitive:e.bCaseInsensitive}),a._iDisplayStart=0,O(a))},g=null!==a.searchDelay?a.searchDelay:"ssp"===y(a)?400:0,i=h("input",b).val(e.sSearch).attr("placeholder",d.sSearchPlaceholder).bind("keyup.DT search.DT input.DT paste.DT cut.DT",g?Oa(f,g):f).bind("keypress.DT",function(a){if(13==a.keyCode)return!1}).attr("aria-controls",c);h(a.nTable).on("search.dt.DT",function(b,c){if(a===c)try{i[0]!==I.activeElement&&i.val(e.sSearch)}catch(d){}});
return b[0]}function fa(a,b,c){var d=a.oPreviousSearch,e=a.aoPreSearchCols,f=function(a){d.sSearch=a.sSearch;d.bRegex=a.bRegex;d.bSmart=a.bSmart;d.bCaseInsensitive=a.bCaseInsensitive};Ga(a);if("ssp"!=y(a)){wb(a,b.sSearch,c,b.bEscapeRegex!==k?!b.bEscapeRegex:b.bRegex,b.bSmart,b.bCaseInsensitive);f(b);for(b=0;b<e.length;b++)xb(a,e[b].sSearch,b,e[b].bEscapeRegex!==k?!e[b].bEscapeRegex:e[b].bRegex,e[b].bSmart,e[b].bCaseInsensitive);yb(a)}else f(b);a.bFiltered=!0;u(a,null,"search",[a])}function yb(a){for(var b=
m.ext.search,c=a.aiDisplay,d,e,f=0,g=b.length;f<g;f++){for(var j=[],i=0,n=c.length;i<n;i++)e=c[i],d=a.aoData[e],b[f](a,d._aFilterData,e,d._aData,i)&&j.push(e);c.length=0;h.merge(c,j)}}function xb(a,b,c,d,e,f){if(""!==b)for(var g=a.aiDisplay,d=Pa(b,d,e,f),e=g.length-1;0<=e;e--)b=a.aoData[g[e]]._aFilterData[c],d.test(b)||g.splice(e,1)}function wb(a,b,c,d,e,f){var d=Pa(b,d,e,f),e=a.oPreviousSearch.sSearch,f=a.aiDisplayMaster,g;0!==m.ext.search.length&&(c=!0);g=zb(a);if(0>=b.length)a.aiDisplay=f.slice();
else{if(g||c||e.length>b.length||0!==b.indexOf(e)||a.bSorted)a.aiDisplay=f.slice();b=a.aiDisplay;for(c=b.length-1;0<=c;c--)d.test(a.aoData[b[c]]._sFilterRow)||b.splice(c,1)}}function Pa(a,b,c,d){a=b?a:Qa(a);c&&(a="^(?=.*?"+h.map(a.match(/"[^"]+"|[^ ]+/g)||[""],function(a){if('"'===a.charAt(0))var b=a.match(/^"(.*)"$/),a=b?b[1]:a;return a.replace('"',"")}).join(")(?=.*?")+").*$");return RegExp(a,d?"i":"")}function zb(a){var b=a.aoColumns,c,d,e,f,g,j,i,h,l=m.ext.type.search;c=!1;d=0;for(f=a.aoData.length;d<
f;d++)if(h=a.aoData[d],!h._aFilterData){j=[];e=0;for(g=b.length;e<g;e++)c=b[e],c.bSearchable?(i=B(a,d,e,"filter"),l[c.sType]&&(i=l[c.sType](i)),null===i&&(i=""),"string"!==typeof i&&i.toString&&(i=i.toString())):i="",i.indexOf&&-1!==i.indexOf("&")&&(ua.innerHTML=i,i=Zb?ua.textContent:ua.innerText),i.replace&&(i=i.replace(/[\r\n]/g,"")),j.push(i);h._aFilterData=j;h._sFilterRow=j.join("  ");c=!0}return c}function Ab(a){return{search:a.sSearch,smart:a.bSmart,regex:a.bRegex,caseInsensitive:a.bCaseInsensitive}}
function Bb(a){return{sSearch:a.search,bSmart:a.smart,bRegex:a.regex,bCaseInsensitive:a.caseInsensitive}}function sb(a){var b=a.sTableId,c=a.aanFeatures.i,d=h("<div/>",{"class":a.oClasses.sInfo,id:!c?b+"_info":null});c||(a.aoDrawCallback.push({fn:Cb,sName:"information"}),d.attr("role","status").attr("aria-live","polite"),h(a.nTable).attr("aria-describedby",b+"_info"));return d[0]}function Cb(a){var b=a.aanFeatures.i;if(0!==b.length){var c=a.oLanguage,d=a._iDisplayStart+1,e=a.fnDisplayEnd(),f=a.fnRecordsTotal(),
g=a.fnRecordsDisplay(),j=g?c.sInfo:c.sInfoEmpty;g!==f&&(j+=" "+c.sInfoFiltered);j+=c.sInfoPostFix;j=Db(a,j);c=c.fnInfoCallback;null!==c&&(j=c.call(a.oInstance,a,d,e,f,g,j));h(b).html(j)}}function Db(a,b){var c=a.fnFormatNumber,d=a._iDisplayStart+1,e=a._iDisplayLength,f=a.fnRecordsDisplay(),g=-1===e;return b.replace(/_START_/g,c.call(a,d)).replace(/_END_/g,c.call(a,a.fnDisplayEnd())).replace(/_MAX_/g,c.call(a,a.fnRecordsTotal())).replace(/_TOTAL_/g,c.call(a,f)).replace(/_PAGE_/g,c.call(a,g?1:Math.ceil(d/
e))).replace(/_PAGES_/g,c.call(a,g?1:Math.ceil(f/e)))}function ga(a){var b,c,d=a.iInitDisplayStart,e=a.aoColumns,f;c=a.oFeatures;var g=a.bDeferLoading;if(a.bInitialised){nb(a);kb(a);ea(a,a.aoHeader);ea(a,a.aoFooter);C(a,!0);c.bAutoWidth&&Fa(a);b=0;for(c=e.length;b<c;b++)f=e[b],f.sWidth&&(f.nTh.style.width=x(f.sWidth));u(a,null,"preInit",[a]);T(a);e=y(a);if("ssp"!=e||g)"ajax"==e?ra(a,[],function(c){var f=sa(a,c);for(b=0;b<f.length;b++)N(a,f[b]);a.iInitDisplayStart=d;T(a);C(a,!1);ta(a,c)},a):(C(a,!1),
ta(a))}else setTimeout(function(){ga(a)},200)}function ta(a,b){a._bInitComplete=!0;(b||a.oInit.aaData)&&Y(a);u(a,null,"plugin-init",[a,b]);u(a,"aoInitComplete","init",[a,b])}function Ra(a,b){var c=parseInt(b,10);a._iDisplayLength=c;Sa(a);u(a,null,"length",[a,c])}function ob(a){for(var b=a.oClasses,c=a.sTableId,d=a.aLengthMenu,e=h.isArray(d[0]),f=e?d[0]:d,d=e?d[1]:d,e=h("<select/>",{name:c+"_length","aria-controls":c,"class":b.sLengthSelect}),g=0,j=f.length;g<j;g++)e[0][g]=new Option(d[g],f[g]);var i=
h("<div><label/></div>").addClass(b.sLength);a.aanFeatures.l||(i[0].id=c+"_length");i.children().append(a.oLanguage.sLengthMenu.replace("_MENU_",e[0].outerHTML));h("select",i).val(a._iDisplayLength).bind("change.DT",function(){Ra(a,h(this).val());O(a)});h(a.nTable).bind("length.dt.DT",function(b,c,d){a===c&&h("select",i).val(d)});return i[0]}function tb(a){var b=a.sPaginationType,c=m.ext.pager[b],d="function"===typeof c,e=function(a){O(a)},b=h("<div/>").addClass(a.oClasses.sPaging+b)[0],f=a.aanFeatures;
d||c.fnInit(a,b,e);f.p||(b.id=a.sTableId+"_paginate",a.aoDrawCallback.push({fn:function(a){if(d){var b=a._iDisplayStart,i=a._iDisplayLength,h=a.fnRecordsDisplay(),l=-1===i,b=l?0:Math.ceil(b/i),i=l?1:Math.ceil(h/i),h=c(b,i),k,l=0;for(k=f.p.length;l<k;l++)Na(a,"pageButton")(a,f.p[l],l,h,b,i)}else c.fnUpdate(a,e)},sName:"pagination"}));return b}function Ta(a,b,c){var d=a._iDisplayStart,e=a._iDisplayLength,f=a.fnRecordsDisplay();0===f||-1===e?d=0:"number"===typeof b?(d=b*e,d>f&&(d=0)):"first"==b?d=0:
"previous"==b?(d=0<=e?d-e:0,0>d&&(d=0)):"next"==b?d+e<f&&(d+=e):"last"==b?d=Math.floor((f-1)/e)*e:L(a,0,"Unknown paging action: "+b,5);b=a._iDisplayStart!==d;a._iDisplayStart=d;b&&(u(a,null,"page",[a]),c&&O(a));return b}function qb(a){return h("<div/>",{id:!a.aanFeatures.r?a.sTableId+"_processing":null,"class":a.oClasses.sProcessing}).html(a.oLanguage.sProcessing).insertBefore(a.nTable)[0]}function C(a,b){a.oFeatures.bProcessing&&h(a.aanFeatures.r).css("display",b?"block":"none");u(a,null,"processing",
[a,b])}function rb(a){var b=h(a.nTable);b.attr("role","grid");var c=a.oScroll;if(""===c.sX&&""===c.sY)return a.nTable;var d=c.sX,e=c.sY,f=a.oClasses,g=b.children("caption"),j=g.length?g[0]._captionSide:null,i=h(b[0].cloneNode(!1)),n=h(b[0].cloneNode(!1)),l=b.children("tfoot");l.length||(l=null);i=h("<div/>",{"class":f.sScrollWrapper}).append(h("<div/>",{"class":f.sScrollHead}).css({overflow:"hidden",position:"relative",border:0,width:d?!d?null:x(d):"100%"}).append(h("<div/>",{"class":f.sScrollHeadInner}).css({"box-sizing":"content-box",
width:c.sXInner||"100%"}).append(i.removeAttr("id").css("margin-left",0).append("top"===j?g:null).append(b.children("thead"))))).append(h("<div/>",{"class":f.sScrollBody}).css({position:"relative",overflow:"auto",width:!d?null:x(d)}).append(b));l&&i.append(h("<div/>",{"class":f.sScrollFoot}).css({overflow:"hidden",border:0,width:d?!d?null:x(d):"100%"}).append(h("<div/>",{"class":f.sScrollFootInner}).append(n.removeAttr("id").css("margin-left",0).append("bottom"===j?g:null).append(b.children("tfoot")))));
var b=i.children(),k=b[0],f=b[1],t=l?b[2]:null;if(d)h(f).on("scroll.DT",function(){var a=this.scrollLeft;k.scrollLeft=a;l&&(t.scrollLeft=a)});h(f).css(e&&c.bCollapse?"max-height":"height",e);a.nScrollHead=k;a.nScrollBody=f;a.nScrollFoot=t;a.aoDrawCallback.push({fn:ka,sName:"scrolling"});return i[0]}function ka(a){var b=a.oScroll,c=b.sX,d=b.sXInner,e=b.sY,b=b.iBarWidth,f=h(a.nScrollHead),g=f[0].style,j=f.children("div"),i=j[0].style,n=j.children("table"),j=a.nScrollBody,l=h(j),q=j.style,t=h(a.nScrollFoot).children("div"),
m=t.children("table"),o=h(a.nTHead),F=h(a.nTable),p=F[0],r=p.style,u=a.nTFoot?h(a.nTFoot):null,Eb=a.oBrowser,Ua=Eb.bScrollOversize,s=G(a.aoColumns,"nTh"),P,v,w,y,z=[],A=[],B=[],C=[],D,E=function(a){a=a.style;a.paddingTop="0";a.paddingBottom="0";a.borderTopWidth="0";a.borderBottomWidth="0";a.height=0};v=j.scrollHeight>j.clientHeight;if(a.scrollBarVis!==v&&a.scrollBarVis!==k)a.scrollBarVis=v,Y(a);else{a.scrollBarVis=v;F.children("thead, tfoot").remove();u&&(w=u.clone().prependTo(F),P=u.find("tr"),w=
w.find("tr"));y=o.clone().prependTo(F);o=o.find("tr");v=y.find("tr");y.find("th, td").removeAttr("tabindex");c||(q.width="100%",f[0].style.width="100%");h.each(qa(a,y),function(b,c){D=Z(a,b);c.style.width=a.aoColumns[D].sWidth});u&&J(function(a){a.style.width=""},w);f=F.outerWidth();if(""===c){r.width="100%";if(Ua&&(F.find("tbody").height()>j.offsetHeight||"scroll"==l.css("overflow-y")))r.width=x(F.outerWidth()-b);f=F.outerWidth()}else""!==d&&(r.width=x(d),f=F.outerWidth());J(E,v);J(function(a){B.push(a.innerHTML);
z.push(x(h(a).css("width")))},v);J(function(a,b){if(h.inArray(a,s)!==-1)a.style.width=z[b]},o);h(v).height(0);u&&(J(E,w),J(function(a){C.push(a.innerHTML);A.push(x(h(a).css("width")))},w),J(function(a,b){a.style.width=A[b]},P),h(w).height(0));J(function(a,b){a.innerHTML='<div class="dataTables_sizing" style="height:0;overflow:hidden;">'+B[b]+"</div>";a.style.width=z[b]},v);u&&J(function(a,b){a.innerHTML='<div class="dataTables_sizing" style="height:0;overflow:hidden;">'+C[b]+"</div>";a.style.width=
A[b]},w);if(F.outerWidth()<f){P=j.scrollHeight>j.offsetHeight||"scroll"==l.css("overflow-y")?f+b:f;if(Ua&&(j.scrollHeight>j.offsetHeight||"scroll"==l.css("overflow-y")))r.width=x(P-b);(""===c||""!==d)&&L(a,1,"Possible column misalignment",6)}else P="100%";q.width=x(P);g.width=x(P);u&&(a.nScrollFoot.style.width=x(P));!e&&Ua&&(q.height=x(p.offsetHeight+b));c=F.outerWidth();n[0].style.width=x(c);i.width=x(c);d=F.height()>j.clientHeight||"scroll"==l.css("overflow-y");e="padding"+(Eb.bScrollbarLeft?"Left":
"Right");i[e]=d?b+"px":"0px";u&&(m[0].style.width=x(c),t[0].style.width=x(c),t[0].style[e]=d?b+"px":"0px");F.children("colgroup").insertBefore(F.children("thead"));l.scroll();if((a.bSorted||a.bFiltered)&&!a._drawHold)j.scrollTop=0}}function J(a,b,c){for(var d=0,e=0,f=b.length,g,j;e<f;){g=b[e].firstChild;for(j=c?c[e].firstChild:null;g;)1===g.nodeType&&(c?a(g,j,d):a(g,d),d++),g=g.nextSibling,j=c?j.nextSibling:null;e++}}function Fa(a){var b=a.nTable,c=a.aoColumns,d=a.oScroll,e=d.sY,f=d.sX,g=d.sXInner,
j=c.length,i=la(a,"bVisible"),n=h("th",a.nTHead),l=b.getAttribute("width"),k=b.parentNode,t=!1,m,o,p=a.oBrowser,d=p.bScrollOversize;(m=b.style.width)&&-1!==m.indexOf("%")&&(l=m);for(m=0;m<i.length;m++)o=c[i[m]],null!==o.sWidth&&(o.sWidth=Fb(o.sWidthOrig,k),t=!0);if(d||!t&&!f&&!e&&j==aa(a)&&j==n.length)for(m=0;m<j;m++)i=Z(a,m),null!==i&&(c[i].sWidth=x(n.eq(m).width()));else{j=h(b).clone().css("visibility","hidden").removeAttr("id");j.find("tbody tr").remove();var r=h("<tr/>").appendTo(j.find("tbody"));
j.find("thead, tfoot").remove();j.append(h(a.nTHead).clone()).append(h(a.nTFoot).clone());j.find("tfoot th, tfoot td").css("width","");n=qa(a,j.find("thead")[0]);for(m=0;m<i.length;m++)o=c[i[m]],n[m].style.width=null!==o.sWidthOrig&&""!==o.sWidthOrig?x(o.sWidthOrig):"",o.sWidthOrig&&f&&h(n[m]).append(h("<div/>").css({width:o.sWidthOrig,margin:0,padding:0,border:0,height:1}));if(a.aoData.length)for(m=0;m<i.length;m++)t=i[m],o=c[t],h(Gb(a,t)).clone(!1).append(o.sContentPadding).appendTo(r);h("[name]",
j).removeAttr("name");o=h("<div/>").css(f||e?{position:"absolute",top:0,left:0,height:1,right:0,overflow:"hidden"}:{}).append(j).appendTo(k);f&&g?j.width(g):f?(j.css("width","auto"),j.removeAttr("width"),j.width()<k.clientWidth&&l&&j.width(k.clientWidth)):e?j.width(k.clientWidth):l&&j.width(l);for(m=e=0;m<i.length;m++)k=h(n[m]),g=k.outerWidth()-k.width(),k=p.bBounding?Math.ceil(n[m].getBoundingClientRect().width):k.outerWidth(),e+=k,c[i[m]].sWidth=x(k-g);b.style.width=x(e);o.remove()}l&&(b.style.width=
x(l));if((l||f)&&!a._reszEvt)b=function(){h(D).bind("resize.DT-"+a.sInstance,Oa(function(){Y(a)}))},d?setTimeout(b,1E3):b(),a._reszEvt=!0}function Fb(a,b){if(!a)return 0;var c=h("<div/>").css("width",x(a)).appendTo(b||I.body),d=c[0].offsetWidth;c.remove();return d}function Gb(a,b){var c=Hb(a,b);if(0>c)return null;var d=a.aoData[c];return!d.nTr?h("<td/>").html(B(a,c,b,"display"))[0]:d.anCells[b]}function Hb(a,b){for(var c,d=-1,e=-1,f=0,g=a.aoData.length;f<g;f++)c=B(a,f,b,"display")+"",c=c.replace($b,
""),c=c.replace(/&nbsp;/g," "),c.length>d&&(d=c.length,e=f);return e}function x(a){return null===a?"0px":"number"==typeof a?0>a?"0px":a+"px":a.match(/\d$/)?a+"px":a}function V(a){var b,c,d=[],e=a.aoColumns,f,g,j,i;b=a.aaSortingFixed;c=h.isPlainObject(b);var n=[];f=function(a){a.length&&!h.isArray(a[0])?n.push(a):h.merge(n,a)};h.isArray(b)&&f(b);c&&b.pre&&f(b.pre);f(a.aaSorting);c&&b.post&&f(b.post);for(a=0;a<n.length;a++){i=n[a][0];f=e[i].aDataSort;b=0;for(c=f.length;b<c;b++)g=f[b],j=e[g].sType||
"string",n[a]._idx===k&&(n[a]._idx=h.inArray(n[a][1],e[g].asSorting)),d.push({src:i,col:g,dir:n[a][1],index:n[a]._idx,type:j,formatter:m.ext.type.order[j+"-pre"]})}return d}function mb(a){var b,c,d=[],e=m.ext.type.order,f=a.aoData,g=0,j,i=a.aiDisplayMaster,h;Ga(a);h=V(a);b=0;for(c=h.length;b<c;b++)j=h[b],j.formatter&&g++,Ib(a,j.col);if("ssp"!=y(a)&&0!==h.length){b=0;for(c=i.length;b<c;b++)d[i[b]]=b;g===h.length?i.sort(function(a,b){var c,e,g,j,i=h.length,k=f[a]._aSortData,m=f[b]._aSortData;for(g=
0;g<i;g++)if(j=h[g],c=k[j.col],e=m[j.col],c=c<e?-1:c>e?1:0,0!==c)return"asc"===j.dir?c:-c;c=d[a];e=d[b];return c<e?-1:c>e?1:0}):i.sort(function(a,b){var c,g,j,i,k=h.length,m=f[a]._aSortData,p=f[b]._aSortData;for(j=0;j<k;j++)if(i=h[j],c=m[i.col],g=p[i.col],i=e[i.type+"-"+i.dir]||e["string-"+i.dir],c=i(c,g),0!==c)return c;c=d[a];g=d[b];return c<g?-1:c>g?1:0})}a.bSorted=!0}function Jb(a){for(var b,c,d=a.aoColumns,e=V(a),a=a.oLanguage.oAria,f=0,g=d.length;f<g;f++){c=d[f];var j=c.asSorting;b=c.sTitle.replace(/<.*?>/g,
"");var i=c.nTh;i.removeAttribute("aria-sort");c.bSortable&&(0<e.length&&e[0].col==f?(i.setAttribute("aria-sort","asc"==e[0].dir?"ascending":"descending"),c=j[e[0].index+1]||j[0]):c=j[0],b+="asc"===c?a.sSortAscending:a.sSortDescending);i.setAttribute("aria-label",b)}}function Va(a,b,c,d){var e=a.aaSorting,f=a.aoColumns[b].asSorting,g=function(a,b){var c=a._idx;c===k&&(c=h.inArray(a[1],f));return c+1<f.length?c+1:b?null:0};"number"===typeof e[0]&&(e=a.aaSorting=[e]);c&&a.oFeatures.bSortMulti?(c=h.inArray(b,
G(e,"0")),-1!==c?(b=g(e[c],!0),null===b&&1===e.length&&(b=0),null===b?e.splice(c,1):(e[c][1]=f[b],e[c]._idx=b)):(e.push([b,f[0],0]),e[e.length-1]._idx=0)):e.length&&e[0][0]==b?(b=g(e[0]),e.length=1,e[0][1]=f[b],e[0]._idx=b):(e.length=0,e.push([b,f[0]]),e[0]._idx=0);T(a);"function"==typeof d&&d(a)}function Ma(a,b,c,d){var e=a.aoColumns[c];Wa(b,{},function(b){!1!==e.bSortable&&(a.oFeatures.bProcessing?(C(a,!0),setTimeout(function(){Va(a,c,b.shiftKey,d);"ssp"!==y(a)&&C(a,!1)},0)):Va(a,c,b.shiftKey,d))})}
function va(a){var b=a.aLastSort,c=a.oClasses.sSortColumn,d=V(a),e=a.oFeatures,f,g;if(e.bSort&&e.bSortClasses){e=0;for(f=b.length;e<f;e++)g=b[e].src,h(G(a.aoData,"anCells",g)).removeClass(c+(2>e?e+1:3));e=0;for(f=d.length;e<f;e++)g=d[e].src,h(G(a.aoData,"anCells",g)).addClass(c+(2>e?e+1:3))}a.aLastSort=d}function Ib(a,b){var c=a.aoColumns[b],d=m.ext.order[c.sSortDataType],e;d&&(e=d.call(a.oInstance,a,b,$(a,b)));for(var f,g=m.ext.type.order[c.sType+"-pre"],j=0,i=a.aoData.length;j<i;j++)if(c=a.aoData[j],
c._aSortData||(c._aSortData=[]),!c._aSortData[b]||d)f=d?e[j]:B(a,j,b,"sort"),c._aSortData[b]=g?g(f):f}function wa(a){if(a.oFeatures.bStateSave&&!a.bDestroying){var b={time:+new Date,start:a._iDisplayStart,length:a._iDisplayLength,order:h.extend(!0,[],a.aaSorting),search:Ab(a.oPreviousSearch),columns:h.map(a.aoColumns,function(b,d){return{visible:b.bVisible,search:Ab(a.aoPreSearchCols[d])}})};u(a,"aoStateSaveParams","stateSaveParams",[a,b]);a.oSavedState=b;a.fnStateSaveCallback.call(a.oInstance,a,
b)}}function Kb(a){var b,c,d=a.aoColumns;if(a.oFeatures.bStateSave){var e=a.fnStateLoadCallback.call(a.oInstance,a);if(e&&e.time&&(b=u(a,"aoStateLoadParams","stateLoadParams",[a,e]),-1===h.inArray(!1,b)&&(b=a.iStateDuration,!(0<b&&e.time<+new Date-1E3*b)&&d.length===e.columns.length))){a.oLoadedState=h.extend(!0,{},e);e.start!==k&&(a._iDisplayStart=e.start,a.iInitDisplayStart=e.start);e.length!==k&&(a._iDisplayLength=e.length);e.order!==k&&(a.aaSorting=[],h.each(e.order,function(b,c){a.aaSorting.push(c[0]>=
d.length?[0,c[1]]:c)}));e.search!==k&&h.extend(a.oPreviousSearch,Bb(e.search));b=0;for(c=e.columns.length;b<c;b++){var f=e.columns[b];f.visible!==k&&(d[b].bVisible=f.visible);f.search!==k&&h.extend(a.aoPreSearchCols[b],Bb(f.search))}u(a,"aoStateLoaded","stateLoaded",[a,e])}}}function xa(a){var b=m.settings,a=h.inArray(a,G(b,"nTable"));return-1!==a?b[a]:null}function L(a,b,c,d){c="DataTables warning: "+(a?"table id="+a.sTableId+" - ":"")+c;d&&(c+=". For more information about this error, please see http://datatables.net/tn/"+
d);if(b)D.console&&console.log&&console.log(c);else if(b=m.ext,b=b.sErrMode||b.errMode,a&&u(a,null,"error",[a,d,c]),"alert"==b)alert(c);else{if("throw"==b)throw Error(c);"function"==typeof b&&b(a,d,c)}}function E(a,b,c,d){h.isArray(c)?h.each(c,function(c,d){h.isArray(d)?E(a,b,d[0],d[1]):E(a,b,d)}):(d===k&&(d=c),b[c]!==k&&(a[d]=b[c]))}function Lb(a,b,c){var d,e;for(e in b)b.hasOwnProperty(e)&&(d=b[e],h.isPlainObject(d)?(h.isPlainObject(a[e])||(a[e]={}),h.extend(!0,a[e],d)):a[e]=c&&"data"!==e&&"aaData"!==
e&&h.isArray(d)?d.slice():d);return a}function Wa(a,b,c){h(a).bind("click.DT",b,function(b){a.blur();c(b)}).bind("keypress.DT",b,function(a){13===a.which&&(a.preventDefault(),c(a))}).bind("selectstart.DT",function(){return!1})}function z(a,b,c,d){c&&a[b].push({fn:c,sName:d})}function u(a,b,c,d){var e=[];b&&(e=h.map(a[b].slice().reverse(),function(b){return b.fn.apply(a.oInstance,d)}));null!==c&&(b=h.Event(c+".dt"),h(a.nTable).trigger(b,d),e.push(b.result));return e}function Sa(a){var b=a._iDisplayStart,
c=a.fnDisplayEnd(),d=a._iDisplayLength;b>=c&&(b=c-d);b-=b%d;if(-1===d||0>b)b=0;a._iDisplayStart=b}function Na(a,b){var c=a.renderer,d=m.ext.renderer[b];return h.isPlainObject(c)&&c[b]?d[c[b]]||d._:"string"===typeof c?d[c]||d._:d._}function y(a){return a.oFeatures.bServerSide?"ssp":a.ajax||a.sAjaxSource?"ajax":"dom"}function ya(a,b){var c=[],c=Mb.numbers_length,d=Math.floor(c/2);b<=c?c=W(0,b):a<=d?(c=W(0,c-2),c.push("ellipsis"),c.push(b-1)):(a>=b-1-d?c=W(b-(c-2),b):(c=W(a-d+2,a+d-1),c.push("ellipsis"),
c.push(b-1)),c.splice(0,0,"ellipsis"),c.splice(0,0,0));c.DT_el="span";return c}function db(a){h.each({num:function(b){return za(b,a)},"num-fmt":function(b){return za(b,a,Xa)},"html-num":function(b){return za(b,a,Aa)},"html-num-fmt":function(b){return za(b,a,Aa,Xa)}},function(b,c){v.type.order[b+a+"-pre"]=c;b.match(/^html\-/)&&(v.type.search[b+a]=v.type.search.html)})}function Nb(a){return function(){var b=[xa(this[m.ext.iApiIndex])].concat(Array.prototype.slice.call(arguments));return m.ext.internal[a].apply(this,
b)}}var m=function(a){this.$=function(a,b){return this.api(!0).$(a,b)};this._=function(a,b){return this.api(!0).rows(a,b).data()};this.api=function(a){return a?new r(xa(this[v.iApiIndex])):new r(this)};this.fnAddData=function(a,b){var c=this.api(!0),d=h.isArray(a)&&(h.isArray(a[0])||h.isPlainObject(a[0]))?c.rows.add(a):c.row.add(a);(b===k||b)&&c.draw();return d.flatten().toArray()};this.fnAdjustColumnSizing=function(a){var b=this.api(!0).columns.adjust(),c=b.settings()[0],d=c.oScroll;a===k||a?b.draw(!1):
(""!==d.sX||""!==d.sY)&&ka(c)};this.fnClearTable=function(a){var b=this.api(!0).clear();(a===k||a)&&b.draw()};this.fnClose=function(a){this.api(!0).row(a).child.hide()};this.fnDeleteRow=function(a,b,c){var d=this.api(!0),a=d.rows(a),e=a.settings()[0],h=e.aoData[a[0][0]];a.remove();b&&b.call(this,e,h);(c===k||c)&&d.draw();return h};this.fnDestroy=function(a){this.api(!0).destroy(a)};this.fnDraw=function(a){this.api(!0).draw(a)};this.fnFilter=function(a,b,c,d,e,h){e=this.api(!0);null===b||b===k?e.search(a,
c,d,h):e.column(b).search(a,c,d,h);e.draw()};this.fnGetData=function(a,b){var c=this.api(!0);if(a!==k){var d=a.nodeName?a.nodeName.toLowerCase():"";return b!==k||"td"==d||"th"==d?c.cell(a,b).data():c.row(a).data()||null}return c.data().toArray()};this.fnGetNodes=function(a){var b=this.api(!0);return a!==k?b.row(a).node():b.rows().nodes().flatten().toArray()};this.fnGetPosition=function(a){var b=this.api(!0),c=a.nodeName.toUpperCase();return"TR"==c?b.row(a).index():"TD"==c||"TH"==c?(a=b.cell(a).index(),
[a.row,a.columnVisible,a.column]):null};this.fnIsOpen=function(a){return this.api(!0).row(a).child.isShown()};this.fnOpen=function(a,b,c){return this.api(!0).row(a).child(b,c).show().child()[0]};this.fnPageChange=function(a,b){var c=this.api(!0).page(a);(b===k||b)&&c.draw(!1)};this.fnSetColumnVis=function(a,b,c){a=this.api(!0).column(a).visible(b);(c===k||c)&&a.columns.adjust().draw()};this.fnSettings=function(){return xa(this[v.iApiIndex])};this.fnSort=function(a){this.api(!0).order(a).draw()};this.fnSortListener=
function(a,b,c){this.api(!0).order.listener(a,b,c)};this.fnUpdate=function(a,b,c,d,e){var h=this.api(!0);c===k||null===c?h.row(b).data(a):h.cell(b,c).data(a);(e===k||e)&&h.columns.adjust();(d===k||d)&&h.draw();return 0};this.fnVersionCheck=v.fnVersionCheck;var b=this,c=a===k,d=this.length;c&&(a={});this.oApi=this.internal=v.internal;for(var e in m.ext.internal)e&&(this[e]=Nb(e));this.each(function(){var e={},e=1<d?Lb(e,a,!0):a,g=0,j,i=this.getAttribute("id"),n=!1,l=m.defaults,q=h(this);if("table"!=
this.nodeName.toLowerCase())L(null,0,"Non-table node initialisation ("+this.nodeName+")",2);else{eb(l);fb(l.column);K(l,l,!0);K(l.column,l.column,!0);K(l,h.extend(e,q.data()));var t=m.settings,g=0;for(j=t.length;g<j;g++){var p=t[g];if(p.nTable==this||p.nTHead.parentNode==this||p.nTFoot&&p.nTFoot.parentNode==this){g=e.bRetrieve!==k?e.bRetrieve:l.bRetrieve;if(c||g)return p.oInstance;if(e.bDestroy!==k?e.bDestroy:l.bDestroy){p.oInstance.fnDestroy();break}else{L(p,0,"Cannot reinitialise DataTable",3);
return}}if(p.sTableId==this.id){t.splice(g,1);break}}if(null===i||""===i)this.id=i="DataTables_Table_"+m.ext._unique++;var o=h.extend(!0,{},m.models.oSettings,{sDestroyWidth:q[0].style.width,sInstance:i,sTableId:i});o.nTable=this;o.oApi=b.internal;o.oInit=e;t.push(o);o.oInstance=1===b.length?b:q.dataTable();eb(e);e.oLanguage&&Da(e.oLanguage);e.aLengthMenu&&!e.iDisplayLength&&(e.iDisplayLength=h.isArray(e.aLengthMenu[0])?e.aLengthMenu[0][0]:e.aLengthMenu[0]);e=Lb(h.extend(!0,{},l),e);E(o.oFeatures,
e,"bPaginate bLengthChange bFilter bSort bSortMulti bInfo bProcessing bAutoWidth bSortClasses bServerSide bDeferRender".split(" "));E(o,e,["asStripeClasses","ajax","fnServerData","fnFormatNumber","sServerMethod","aaSorting","aaSortingFixed","aLengthMenu","sPaginationType","sAjaxSource","sAjaxDataProp","iStateDuration","sDom","bSortCellsTop","iTabIndex","fnStateLoadCallback","fnStateSaveCallback","renderer","searchDelay","rowId",["iCookieDuration","iStateDuration"],["oSearch","oPreviousSearch"],["aoSearchCols",
"aoPreSearchCols"],["iDisplayLength","_iDisplayLength"],["bJQueryUI","bJUI"]]);E(o.oScroll,e,[["sScrollX","sX"],["sScrollXInner","sXInner"],["sScrollY","sY"],["bScrollCollapse","bCollapse"]]);E(o.oLanguage,e,"fnInfoCallback");z(o,"aoDrawCallback",e.fnDrawCallback,"user");z(o,"aoServerParams",e.fnServerParams,"user");z(o,"aoStateSaveParams",e.fnStateSaveParams,"user");z(o,"aoStateLoadParams",e.fnStateLoadParams,"user");z(o,"aoStateLoaded",e.fnStateLoaded,"user");z(o,"aoRowCallback",e.fnRowCallback,
"user");z(o,"aoRowCreatedCallback",e.fnCreatedRow,"user");z(o,"aoHeaderCallback",e.fnHeaderCallback,"user");z(o,"aoFooterCallback",e.fnFooterCallback,"user");z(o,"aoInitComplete",e.fnInitComplete,"user");z(o,"aoPreDrawCallback",e.fnPreDrawCallback,"user");o.rowIdFn=Q(e.rowId);gb(o);i=o.oClasses;e.bJQueryUI?(h.extend(i,m.ext.oJUIClasses,e.oClasses),e.sDom===l.sDom&&"lfrtip"===l.sDom&&(o.sDom='<"H"lfr>t<"F"ip>'),o.renderer)?h.isPlainObject(o.renderer)&&!o.renderer.header&&(o.renderer.header="jqueryui"):
o.renderer="jqueryui":h.extend(i,m.ext.classes,e.oClasses);q.addClass(i.sTable);o.iInitDisplayStart===k&&(o.iInitDisplayStart=e.iDisplayStart,o._iDisplayStart=e.iDisplayStart);null!==e.iDeferLoading&&(o.bDeferLoading=!0,g=h.isArray(e.iDeferLoading),o._iRecordsDisplay=g?e.iDeferLoading[0]:e.iDeferLoading,o._iRecordsTotal=g?e.iDeferLoading[1]:e.iDeferLoading);var r=o.oLanguage;h.extend(!0,r,e.oLanguage);""!==r.sUrl&&(h.ajax({dataType:"json",url:r.sUrl,success:function(a){Da(a);K(l.oLanguage,a);h.extend(true,
r,a);ga(o)},error:function(){ga(o)}}),n=!0);null===e.asStripeClasses&&(o.asStripeClasses=[i.sStripeOdd,i.sStripeEven]);var g=o.asStripeClasses,v=q.children("tbody").find("tr").eq(0);-1!==h.inArray(!0,h.map(g,function(a){return v.hasClass(a)}))&&(h("tbody tr",this).removeClass(g.join(" ")),o.asDestroyStripes=g.slice());t=[];g=this.getElementsByTagName("thead");0!==g.length&&(da(o.aoHeader,g[0]),t=qa(o));if(null===e.aoColumns){p=[];g=0;for(j=t.length;g<j;g++)p.push(null)}else p=e.aoColumns;g=0;for(j=
p.length;g<j;g++)Ea(o,t?t[g]:null);ib(o,e.aoColumnDefs,p,function(a,b){ja(o,a,b)});if(v.length){var s=function(a,b){return a.getAttribute("data-"+b)!==null?b:null};h(v[0]).children("th, td").each(function(a,b){var c=o.aoColumns[a];if(c.mData===a){var d=s(b,"sort")||s(b,"order"),e=s(b,"filter")||s(b,"search");if(d!==null||e!==null){c.mData={_:a+".display",sort:d!==null?a+".@data-"+d:k,type:d!==null?a+".@data-"+d:k,filter:e!==null?a+".@data-"+e:k};ja(o,a)}}})}var w=o.oFeatures;e.bStateSave&&(w.bStateSave=
!0,Kb(o,e),z(o,"aoDrawCallback",wa,"state_save"));if(e.aaSorting===k){t=o.aaSorting;g=0;for(j=t.length;g<j;g++)t[g][1]=o.aoColumns[g].asSorting[0]}va(o);w.bSort&&z(o,"aoDrawCallback",function(){if(o.bSorted){var a=V(o),b={};h.each(a,function(a,c){b[c.src]=c.dir});u(o,null,"order",[o,a,b]);Jb(o)}});z(o,"aoDrawCallback",function(){(o.bSorted||y(o)==="ssp"||w.bDeferRender)&&va(o)},"sc");g=q.children("caption").each(function(){this._captionSide=q.css("caption-side")});j=q.children("thead");0===j.length&&
(j=h("<thead/>").appendTo(this));o.nTHead=j[0];j=q.children("tbody");0===j.length&&(j=h("<tbody/>").appendTo(this));o.nTBody=j[0];j=q.children("tfoot");if(0===j.length&&0<g.length&&(""!==o.oScroll.sX||""!==o.oScroll.sY))j=h("<tfoot/>").appendTo(this);0===j.length||0===j.children().length?q.addClass(i.sNoFooter):0<j.length&&(o.nTFoot=j[0],da(o.aoFooter,o.nTFoot));if(e.aaData)for(g=0;g<e.aaData.length;g++)N(o,e.aaData[g]);else(o.bDeferLoading||"dom"==y(o))&&ma(o,h(o.nTBody).children("tr"));o.aiDisplay=
o.aiDisplayMaster.slice();o.bInitialised=!0;!1===n&&ga(o)}});b=null;return this},v,r,p,s,Ya={},Ob=/[\r\n]/g,Aa=/<.*?>/g,ac=/^[\w\+\-]/,bc=/[\w\+\-]$/,cc=RegExp("(\\/|\\.|\\*|\\+|\\?|\\||\\(|\\)|\\[|\\]|\\{|\\}|\\\\|\\$|\\^|\\-)","g"),Xa=/[',$Â£â‚¬Â¥%\u2009\u202F\u20BD\u20a9\u20BArfk]/gi,M=function(a){return!a||!0===a||"-"===a?!0:!1},Pb=function(a){var b=parseInt(a,10);return!isNaN(b)&&isFinite(a)?b:null},Qb=function(a,b){Ya[b]||(Ya[b]=RegExp(Qa(b),"g"));return"string"===typeof a&&"."!==b?a.replace(/\./g,
"").replace(Ya[b],"."):a},Za=function(a,b,c){var d="string"===typeof a;if(M(a))return!0;b&&d&&(a=Qb(a,b));c&&d&&(a=a.replace(Xa,""));return!isNaN(parseFloat(a))&&isFinite(a)},Rb=function(a,b,c){return M(a)?!0:!(M(a)||"string"===typeof a)?null:Za(a.replace(Aa,""),b,c)?!0:null},G=function(a,b,c){var d=[],e=0,f=a.length;if(c!==k)for(;e<f;e++)a[e]&&a[e][b]&&d.push(a[e][b][c]);else for(;e<f;e++)a[e]&&d.push(a[e][b]);return d},ha=function(a,b,c,d){var e=[],f=0,g=b.length;if(d!==k)for(;f<g;f++)a[b[f]][c]&&
e.push(a[b[f]][c][d]);else for(;f<g;f++)e.push(a[b[f]][c]);return e},W=function(a,b){var c=[],d;b===k?(b=0,d=a):(d=b,b=a);for(var e=b;e<d;e++)c.push(e);return c},Sb=function(a){for(var b=[],c=0,d=a.length;c<d;c++)a[c]&&b.push(a[c]);return b},pa=function(a){var b=[],c,d,e=a.length,f,g=0;d=0;a:for(;d<e;d++){c=a[d];for(f=0;f<g;f++)if(b[f]===c)continue a;b.push(c);g++}return b};m.util={throttle:function(a,b){var c=b!==k?b:200,d,e;return function(){var b=this,g=+new Date,h=arguments;d&&g<d+c?(clearTimeout(e),
e=setTimeout(function(){d=k;a.apply(b,h)},c)):(d=g,a.apply(b,h))}},escapeRegex:function(a){return a.replace(cc,"\\$1")}};var A=function(a,b,c){a[b]!==k&&(a[c]=a[b])},ba=/\[.*?\]$/,U=/\(\)$/,Qa=m.util.escapeRegex,ua=h("<div>")[0],Zb=ua.textContent!==k,$b=/<.*?>/g,Oa=m.util.throttle,Tb=[],w=Array.prototype,dc=function(a){var b,c,d=m.settings,e=h.map(d,function(a){return a.nTable});if(a){if(a.nTable&&a.oApi)return[a];if(a.nodeName&&"table"===a.nodeName.toLowerCase())return b=h.inArray(a,e),-1!==b?[d[b]]:
null;if(a&&"function"===typeof a.settings)return a.settings().toArray();"string"===typeof a?c=h(a):a instanceof h&&(c=a)}else return[];if(c)return c.map(function(){b=h.inArray(this,e);return-1!==b?d[b]:null}).toArray()};r=function(a,b){if(!(this instanceof r))return new r(a,b);var c=[],d=function(a){(a=dc(a))&&(c=c.concat(a))};if(h.isArray(a))for(var e=0,f=a.length;e<f;e++)d(a[e]);else d(a);this.context=pa(c);b&&h.merge(this,b);this.selector={rows:null,cols:null,opts:null};r.extend(this,this,Tb)};
m.Api=r;h.extend(r.prototype,{any:function(){return 0!==this.count()},concat:w.concat,context:[],count:function(){return this.flatten().length},each:function(a){for(var b=0,c=this.length;b<c;b++)a.call(this,this[b],b,this);return this},eq:function(a){var b=this.context;return b.length>a?new r(b[a],this[a]):null},filter:function(a){var b=[];if(w.filter)b=w.filter.call(this,a,this);else for(var c=0,d=this.length;c<d;c++)a.call(this,this[c],c,this)&&b.push(this[c]);return new r(this.context,b)},flatten:function(){var a=
[];return new r(this.context,a.concat.apply(a,this.toArray()))},join:w.join,indexOf:w.indexOf||function(a,b){for(var c=b||0,d=this.length;c<d;c++)if(this[c]===a)return c;return-1},iterator:function(a,b,c,d){var e=[],f,g,h,i,n,l=this.context,m,t,p=this.selector;"string"===typeof a&&(d=c,c=b,b=a,a=!1);g=0;for(h=l.length;g<h;g++){var o=new r(l[g]);if("table"===b)f=c.call(o,l[g],g),f!==k&&e.push(f);else if("columns"===b||"rows"===b)f=c.call(o,l[g],this[g],g),f!==k&&e.push(f);else if("column"===b||"column-rows"===
b||"row"===b||"cell"===b){t=this[g];"column-rows"===b&&(m=Ba(l[g],p.opts));i=0;for(n=t.length;i<n;i++)f=t[i],f="cell"===b?c.call(o,l[g],f.row,f.column,g,i):c.call(o,l[g],f,g,i,m),f!==k&&e.push(f)}}return e.length||d?(a=new r(l,a?e.concat.apply([],e):e),b=a.selector,b.rows=p.rows,b.cols=p.cols,b.opts=p.opts,a):this},lastIndexOf:w.lastIndexOf||function(a,b){return this.indexOf.apply(this.toArray.reverse(),arguments)},length:0,map:function(a){var b=[];if(w.map)b=w.map.call(this,a,this);else for(var c=
0,d=this.length;c<d;c++)b.push(a.call(this,this[c],c));return new r(this.context,b)},pluck:function(a){return this.map(function(b){return b[a]})},pop:w.pop,push:w.push,reduce:w.reduce||function(a,b){return hb(this,a,b,0,this.length,1)},reduceRight:w.reduceRight||function(a,b){return hb(this,a,b,this.length-1,-1,-1)},reverse:w.reverse,selector:null,shift:w.shift,sort:w.sort,splice:w.splice,toArray:function(){return w.slice.call(this)},to$:function(){return h(this)},toJQuery:function(){return h(this)},
unique:function(){return new r(this.context,pa(this))},unshift:w.unshift});r.extend=function(a,b,c){if(c.length&&b&&(b instanceof r||b.__dt_wrapper)){var d,e,f,g=function(a,b,c){return function(){var d=b.apply(a,arguments);r.extend(d,d,c.methodExt);return d}};d=0;for(e=c.length;d<e;d++)f=c[d],b[f.name]="function"===typeof f.val?g(a,f.val,f):h.isPlainObject(f.val)?{}:f.val,b[f.name].__dt_wrapper=!0,r.extend(a,b[f.name],f.propExt)}};r.register=p=function(a,b){if(h.isArray(a))for(var c=0,d=a.length;c<
d;c++)r.register(a[c],b);else for(var e=a.split("."),f=Tb,g,j,c=0,d=e.length;c<d;c++){g=(j=-1!==e[c].indexOf("()"))?e[c].replace("()",""):e[c];var i;a:{i=0;for(var n=f.length;i<n;i++)if(f[i].name===g){i=f[i];break a}i=null}i||(i={name:g,val:{},methodExt:[],propExt:[]},f.push(i));c===d-1?i.val=b:f=j?i.methodExt:i.propExt}};r.registerPlural=s=function(a,b,c){r.register(a,c);r.register(b,function(){var a=c.apply(this,arguments);return a===this?this:a instanceof r?a.length?h.isArray(a[0])?new r(a.context,
a[0]):a[0]:k:a})};p("tables()",function(a){var b;if(a){b=r;var c=this.context;if("number"===typeof a)a=[c[a]];else var d=h.map(c,function(a){return a.nTable}),a=h(d).filter(a).map(function(){var a=h.inArray(this,d);return c[a]}).toArray();b=new b(a)}else b=this;return b});p("table()",function(a){var a=this.tables(a),b=a.context;return b.length?new r(b[0]):a});s("tables().nodes()","table().node()",function(){return this.iterator("table",function(a){return a.nTable},1)});s("tables().body()","table().body()",
function(){return this.iterator("table",function(a){return a.nTBody},1)});s("tables().header()","table().header()",function(){return this.iterator("table",function(a){return a.nTHead},1)});s("tables().footer()","table().footer()",function(){return this.iterator("table",function(a){return a.nTFoot},1)});s("tables().containers()","table().container()",function(){return this.iterator("table",function(a){return a.nTableWrapper},1)});p("draw()",function(a){return this.iterator("table",function(b){"page"===
a?O(b):("string"===typeof a&&(a="full-hold"===a?!1:!0),T(b,!1===a))})});p("page()",function(a){return a===k?this.page.info().page:this.iterator("table",function(b){Ta(b,a)})});p("page.info()",function(){if(0===this.context.length)return k;var a=this.context[0],b=a._iDisplayStart,c=a.oFeatures.bPaginate?a._iDisplayLength:-1,d=a.fnRecordsDisplay(),e=-1===c;return{page:e?0:Math.floor(b/c),pages:e?1:Math.ceil(d/c),start:b,end:a.fnDisplayEnd(),length:c,recordsTotal:a.fnRecordsTotal(),recordsDisplay:d,
serverSide:"ssp"===y(a)}});p("page.len()",function(a){return a===k?0!==this.context.length?this.context[0]._iDisplayLength:k:this.iterator("table",function(b){Ra(b,a)})});var Ub=function(a,b,c){if(c){var d=new r(a);d.one("draw",function(){c(d.ajax.json())})}if("ssp"==y(a))T(a,b);else{C(a,!0);var e=a.jqXHR;e&&4!==e.readyState&&e.abort();ra(a,[],function(c){na(a);for(var c=sa(a,c),d=0,e=c.length;d<e;d++)N(a,c[d]);T(a,b);C(a,!1)})}};p("ajax.json()",function(){var a=this.context;if(0<a.length)return a[0].json});
p("ajax.params()",function(){var a=this.context;if(0<a.length)return a[0].oAjaxData});p("ajax.reload()",function(a,b){return this.iterator("table",function(c){Ub(c,!1===b,a)})});p("ajax.url()",function(a){var b=this.context;if(a===k){if(0===b.length)return k;b=b[0];return b.ajax?h.isPlainObject(b.ajax)?b.ajax.url:b.ajax:b.sAjaxSource}return this.iterator("table",function(b){h.isPlainObject(b.ajax)?b.ajax.url=a:b.ajax=a})});p("ajax.url().load()",function(a,b){return this.iterator("table",function(c){Ub(c,
!1===b,a)})});var $a=function(a,b,c,d,e){var f=[],g,j,i,n,l,m;i=typeof b;if(!b||"string"===i||"function"===i||b.length===k)b=[b];i=0;for(n=b.length;i<n;i++){j=b[i]&&b[i].split?b[i].split(","):[b[i]];l=0;for(m=j.length;l<m;l++)(g=c("string"===typeof j[l]?h.trim(j[l]):j[l]))&&g.length&&(f=f.concat(g))}a=v.selector[a];if(a.length){i=0;for(n=a.length;i<n;i++)f=a[i](d,e,f)}return pa(f)},ab=function(a){a||(a={});a.filter&&a.search===k&&(a.search=a.filter);return h.extend({search:"none",order:"current",
page:"all"},a)},bb=function(a){for(var b=0,c=a.length;b<c;b++)if(0<a[b].length)return a[0]=a[b],a[0].length=1,a.length=1,a.context=[a.context[b]],a;a.length=0;return a},Ba=function(a,b){var c,d,e,f=[],g=a.aiDisplay;c=a.aiDisplayMaster;var j=b.search;d=b.order;e=b.page;if("ssp"==y(a))return"removed"===j?[]:W(0,c.length);if("current"==e){c=a._iDisplayStart;for(d=a.fnDisplayEnd();c<d;c++)f.push(g[c])}else if("current"==d||"applied"==d)f="none"==j?c.slice():"applied"==j?g.slice():h.map(c,function(a){return-1===
h.inArray(a,g)?a:null});else if("index"==d||"original"==d){c=0;for(d=a.aoData.length;c<d;c++)"none"==j?f.push(c):(e=h.inArray(c,g),(-1===e&&"removed"==j||0<=e&&"applied"==j)&&f.push(c))}return f};p("rows()",function(a,b){a===k?a="":h.isPlainObject(a)&&(b=a,a="");var b=ab(b),c=this.iterator("table",function(c){var e=b;return $a("row",a,function(a){var b=Pb(a);if(b!==null&&!e)return[b];var j=Ba(c,e);if(b!==null&&h.inArray(b,j)!==-1)return[b];if(!a)return j;if(typeof a==="function")return h.map(j,function(b){var e=
c.aoData[b];return a(b,e._aData,e.nTr)?b:null});b=Sb(ha(c.aoData,j,"nTr"));if(a.nodeName){if(a._DT_RowIndex!==k)return[a._DT_RowIndex];if(a._DT_CellIndex)return[a._DT_CellIndex.row];b=h(a).closest("*[data-dt-row]");return b.length?[b.data("dt-row")]:[]}if(typeof a==="string"&&a.charAt(0)==="#"){j=c.aIds[a.replace(/^#/,"")];if(j!==k)return[j.idx]}return h(b).filter(a).map(function(){return this._DT_RowIndex}).toArray()},c,e)},1);c.selector.rows=a;c.selector.opts=b;return c});p("rows().nodes()",function(){return this.iterator("row",
function(a,b){return a.aoData[b].nTr||k},1)});p("rows().data()",function(){return this.iterator(!0,"rows",function(a,b){return ha(a.aoData,b,"_aData")},1)});s("rows().cache()","row().cache()",function(a){return this.iterator("row",function(b,c){var d=b.aoData[c];return"search"===a?d._aFilterData:d._aSortData},1)});s("rows().invalidate()","row().invalidate()",function(a){return this.iterator("row",function(b,c){ca(b,c,a)})});s("rows().indexes()","row().index()",function(){return this.iterator("row",
function(a,b){return b},1)});s("rows().ids()","row().id()",function(a){for(var b=[],c=this.context,d=0,e=c.length;d<e;d++)for(var f=0,g=this[d].length;f<g;f++){var h=c[d].rowIdFn(c[d].aoData[this[d][f]]._aData);b.push((!0===a?"#":"")+h)}return new r(c,b)});s("rows().remove()","row().remove()",function(){var a=this;this.iterator("row",function(b,c,d){var e=b.aoData,f=e[c],g,h,i,n,l;e.splice(c,1);g=0;for(h=e.length;g<h;g++)if(i=e[g],l=i.anCells,null!==i.nTr&&(i.nTr._DT_RowIndex=g),null!==l){i=0;for(n=
l.length;i<n;i++)l[i]._DT_CellIndex.row=g}oa(b.aiDisplayMaster,c);oa(b.aiDisplay,c);oa(a[d],c,!1);Sa(b);c=b.rowIdFn(f._aData);c!==k&&delete b.aIds[c]});this.iterator("table",function(a){for(var c=0,d=a.aoData.length;c<d;c++)a.aoData[c].idx=c});return this});p("rows.add()",function(a){var b=this.iterator("table",function(b){var c,f,g,h=[];f=0;for(g=a.length;f<g;f++)c=a[f],c.nodeName&&"TR"===c.nodeName.toUpperCase()?h.push(ma(b,c)[0]):h.push(N(b,c));return h},1),c=this.rows(-1);c.pop();h.merge(c,b);
return c});p("row()",function(a,b){return bb(this.rows(a,b))});p("row().data()",function(a){var b=this.context;if(a===k)return b.length&&this.length?b[0].aoData[this[0]]._aData:k;b[0].aoData[this[0]]._aData=a;ca(b[0],this[0],"data");return this});p("row().node()",function(){var a=this.context;return a.length&&this.length?a[0].aoData[this[0]].nTr||null:null});p("row.add()",function(a){a instanceof h&&a.length&&(a=a[0]);var b=this.iterator("table",function(b){return a.nodeName&&"TR"===a.nodeName.toUpperCase()?
ma(b,a)[0]:N(b,a)});return this.row(b[0])});var cb=function(a,b){var c=a.context;if(c.length&&(c=c[0].aoData[b!==k?b:a[0]])&&c._details)c._details.remove(),c._detailsShow=k,c._details=k},Vb=function(a,b){var c=a.context;if(c.length&&a.length){var d=c[0].aoData[a[0]];if(d._details){(d._detailsShow=b)?d._details.insertAfter(d.nTr):d._details.detach();var e=c[0],f=new r(e),g=e.aoData;f.off("draw.dt.DT_details column-visibility.dt.DT_details destroy.dt.DT_details");0<G(g,"_details").length&&(f.on("draw.dt.DT_details",
function(a,b){e===b&&f.rows({page:"current"}).eq(0).each(function(a){a=g[a];a._detailsShow&&a._details.insertAfter(a.nTr)})}),f.on("column-visibility.dt.DT_details",function(a,b){if(e===b)for(var c,d=aa(b),f=0,h=g.length;f<h;f++)c=g[f],c._details&&c._details.children("td[colspan]").attr("colspan",d)}),f.on("destroy.dt.DT_details",function(a,b){if(e===b)for(var c=0,d=g.length;c<d;c++)g[c]._details&&cb(f,c)}))}}};p("row().child()",function(a,b){var c=this.context;if(a===k)return c.length&&this.length?
c[0].aoData[this[0]]._details:k;if(!0===a)this.child.show();else if(!1===a)cb(this);else if(c.length&&this.length){var d=c[0],c=c[0].aoData[this[0]],e=[],f=function(a,b){if(h.isArray(a)||a instanceof h)for(var c=0,k=a.length;c<k;c++)f(a[c],b);else a.nodeName&&"tr"===a.nodeName.toLowerCase()?e.push(a):(c=h("<tr><td/></tr>").addClass(b),h("td",c).addClass(b).html(a)[0].colSpan=aa(d),e.push(c[0]))};f(a,b);c._details&&c._details.remove();c._details=h(e);c._detailsShow&&c._details.insertAfter(c.nTr)}return this});
p(["row().child.show()","row().child().show()"],function(){Vb(this,!0);return this});p(["row().child.hide()","row().child().hide()"],function(){Vb(this,!1);return this});p(["row().child.remove()","row().child().remove()"],function(){cb(this);return this});p("row().child.isShown()",function(){var a=this.context;return a.length&&this.length?a[0].aoData[this[0]]._detailsShow||!1:!1});var ec=/^(.+):(name|visIdx|visible)$/,Wb=function(a,b,c,d,e){for(var c=[],d=0,f=e.length;d<f;d++)c.push(B(a,e[d],b));
return c};p("columns()",function(a,b){a===k?a="":h.isPlainObject(a)&&(b=a,a="");var b=ab(b),c=this.iterator("table",function(c){var e=a,f=b,g=c.aoColumns,j=G(g,"sName"),i=G(g,"nTh");return $a("column",e,function(a){var b=Pb(a);if(a==="")return W(g.length);if(b!==null)return[b>=0?b:g.length+b];if(typeof a==="function"){var e=Ba(c,f);return h.map(g,function(b,f){return a(f,Wb(c,f,0,0,e),i[f])?f:null})}var k=typeof a==="string"?a.match(ec):"";if(k)switch(k[2]){case "visIdx":case "visible":b=parseInt(k[1],
10);if(b<0){var m=h.map(g,function(a,b){return a.bVisible?b:null});return[m[m.length+b]]}return[Z(c,b)];case "name":return h.map(j,function(a,b){return a===k[1]?b:null});default:return[]}if(a.nodeName&&a._DT_CellIndex)return[a._DT_CellIndex.column];b=h(i).filter(a).map(function(){return h.inArray(this,i)}).toArray();if(b.length||!a.nodeName)return b;b=h(a).closest("*[data-dt-column]");return b.length?[b.data("dt-column")]:[]},c,f)},1);c.selector.cols=a;c.selector.opts=b;return c});s("columns().header()",
"column().header()",function(){return this.iterator("column",function(a,b){return a.aoColumns[b].nTh},1)});s("columns().footer()","column().footer()",function(){return this.iterator("column",function(a,b){return a.aoColumns[b].nTf},1)});s("columns().data()","column().data()",function(){return this.iterator("column-rows",Wb,1)});s("columns().dataSrc()","column().dataSrc()",function(){return this.iterator("column",function(a,b){return a.aoColumns[b].mData},1)});s("columns().cache()","column().cache()",
function(a){return this.iterator("column-rows",function(b,c,d,e,f){return ha(b.aoData,f,"search"===a?"_aFilterData":"_aSortData",c)},1)});s("columns().nodes()","column().nodes()",function(){return this.iterator("column-rows",function(a,b,c,d,e){return ha(a.aoData,e,"anCells",b)},1)});s("columns().visible()","column().visible()",function(a,b){var c=this.iterator("column",function(b,c){if(a===k)return b.aoColumns[c].bVisible;var f=b.aoColumns,g=f[c],j=b.aoData,i,n,l;if(a!==k&&g.bVisible!==a){if(a){var m=
h.inArray(!0,G(f,"bVisible"),c+1);i=0;for(n=j.length;i<n;i++)l=j[i].nTr,f=j[i].anCells,l&&l.insertBefore(f[c],f[m]||null)}else h(G(b.aoData,"anCells",c)).detach();g.bVisible=a;ea(b,b.aoHeader);ea(b,b.aoFooter);wa(b)}});a!==k&&(this.iterator("column",function(c,e){u(c,null,"column-visibility",[c,e,a,b])}),(b===k||b)&&this.columns.adjust());return c});s("columns().indexes()","column().index()",function(a){return this.iterator("column",function(b,c){return"visible"===a?$(b,c):c},1)});p("columns.adjust()",
function(){return this.iterator("table",function(a){Y(a)},1)});p("column.index()",function(a,b){if(0!==this.context.length){var c=this.context[0];if("fromVisible"===a||"toData"===a)return Z(c,b);if("fromData"===a||"toVisible"===a)return $(c,b)}});p("column()",function(a,b){return bb(this.columns(a,b))});p("cells()",function(a,b,c){h.isPlainObject(a)&&(a.row===k?(c=a,a=null):(c=b,b=null));h.isPlainObject(b)&&(c=b,b=null);if(null===b||b===k)return this.iterator("table",function(b){var d=a,e=ab(c),f=
b.aoData,g=Ba(b,e),j=Sb(ha(f,g,"anCells")),i=h([].concat.apply([],j)),l,n=b.aoColumns.length,m,p,r,u,v,s;return $a("cell",d,function(a){var c=typeof a==="function";if(a===null||a===k||c){m=[];p=0;for(r=g.length;p<r;p++){l=g[p];for(u=0;u<n;u++){v={row:l,column:u};if(c){s=f[l];a(v,B(b,l,u),s.anCells?s.anCells[u]:null)&&m.push(v)}else m.push(v)}}return m}if(h.isPlainObject(a))return[a];c=i.filter(a).map(function(a,b){return{row:b._DT_CellIndex.row,column:b._DT_CellIndex.column}}).toArray();if(c.length||
!a.nodeName)return c;s=h(a).closest("*[data-dt-row]");return s.length?[{row:s.data("dt-row"),column:s.data("dt-column")}]:[]},b,e)});var d=this.columns(b,c),e=this.rows(a,c),f,g,j,i,n,l=this.iterator("table",function(a,b){f=[];g=0;for(j=e[b].length;g<j;g++){i=0;for(n=d[b].length;i<n;i++)f.push({row:e[b][g],column:d[b][i]})}return f},1);h.extend(l.selector,{cols:b,rows:a,opts:c});return l});s("cells().nodes()","cell().node()",function(){return this.iterator("cell",function(a,b,c){return(a=a.aoData[b])&&
a.anCells?a.anCells[c]:k},1)});p("cells().data()",function(){return this.iterator("cell",function(a,b,c){return B(a,b,c)},1)});s("cells().cache()","cell().cache()",function(a){a="search"===a?"_aFilterData":"_aSortData";return this.iterator("cell",function(b,c,d){return b.aoData[c][a][d]},1)});s("cells().render()","cell().render()",function(a){return this.iterator("cell",function(b,c,d){return B(b,c,d,a)},1)});s("cells().indexes()","cell().index()",function(){return this.iterator("cell",function(a,
b,c){return{row:b,column:c,columnVisible:$(a,c)}},1)});s("cells().invalidate()","cell().invalidate()",function(a){return this.iterator("cell",function(b,c,d){ca(b,c,a,d)})});p("cell()",function(a,b,c){return bb(this.cells(a,b,c))});p("cell().data()",function(a){var b=this.context,c=this[0];if(a===k)return b.length&&c.length?B(b[0],c[0].row,c[0].column):k;jb(b[0],c[0].row,c[0].column,a);ca(b[0],c[0].row,"data",c[0].column);return this});p("order()",function(a,b){var c=this.context;if(a===k)return 0!==
c.length?c[0].aaSorting:k;"number"===typeof a?a=[[a,b]]:a.length&&!h.isArray(a[0])&&(a=Array.prototype.slice.call(arguments));return this.iterator("table",function(b){b.aaSorting=a.slice()})});p("order.listener()",function(a,b,c){return this.iterator("table",function(d){Ma(d,a,b,c)})});p("order.fixed()",function(a){if(!a){var b=this.context,b=b.length?b[0].aaSortingFixed:k;return h.isArray(b)?{pre:b}:b}return this.iterator("table",function(b){b.aaSortingFixed=h.extend(!0,{},a)})});p(["columns().order()",
"column().order()"],function(a){var b=this;return this.iterator("table",function(c,d){var e=[];h.each(b[d],function(b,c){e.push([c,a])});c.aaSorting=e})});p("search()",function(a,b,c,d){var e=this.context;return a===k?0!==e.length?e[0].oPreviousSearch.sSearch:k:this.iterator("table",function(e){e.oFeatures.bFilter&&fa(e,h.extend({},e.oPreviousSearch,{sSearch:a+"",bRegex:null===b?!1:b,bSmart:null===c?!0:c,bCaseInsensitive:null===d?!0:d}),1)})});s("columns().search()","column().search()",function(a,
b,c,d){return this.iterator("column",function(e,f){var g=e.aoPreSearchCols;if(a===k)return g[f].sSearch;e.oFeatures.bFilter&&(h.extend(g[f],{sSearch:a+"",bRegex:null===b?!1:b,bSmart:null===c?!0:c,bCaseInsensitive:null===d?!0:d}),fa(e,e.oPreviousSearch,1))})});p("state()",function(){return this.context.length?this.context[0].oSavedState:null});p("state.clear()",function(){return this.iterator("table",function(a){a.fnStateSaveCallback.call(a.oInstance,a,{})})});p("state.loaded()",function(){return this.context.length?
this.context[0].oLoadedState:null});p("state.save()",function(){return this.iterator("table",function(a){wa(a)})});m.versionCheck=m.fnVersionCheck=function(a){for(var b=m.version.split("."),a=a.split("."),c,d,e=0,f=a.length;e<f;e++)if(c=parseInt(b[e],10)||0,d=parseInt(a[e],10)||0,c!==d)return c>d;return!0};m.isDataTable=m.fnIsDataTable=function(a){var b=h(a).get(0),c=!1;h.each(m.settings,function(a,e){var f=e.nScrollHead?h("table",e.nScrollHead)[0]:null,g=e.nScrollFoot?h("table",e.nScrollFoot)[0]:
null;if(e.nTable===b||f===b||g===b)c=!0});return c};m.tables=m.fnTables=function(a){var b=!1;h.isPlainObject(a)&&(b=a.api,a=a.visible);var c=h.map(m.settings,function(b){if(!a||a&&h(b.nTable).is(":visible"))return b.nTable});return b?new r(c):c};m.camelToHungarian=K;p("$()",function(a,b){var c=this.rows(b).nodes(),c=h(c);return h([].concat(c.filter(a).toArray(),c.find(a).toArray()))});h.each(["on","one","off"],function(a,b){p(b+"()",function(){var a=Array.prototype.slice.call(arguments);a[0].match(/\.dt\b/)||
(a[0]+=".dt");var d=h(this.tables().nodes());d[b].apply(d,a);return this})});p("clear()",function(){return this.iterator("table",function(a){na(a)})});p("settings()",function(){return new r(this.context,this.context)});p("init()",function(){var a=this.context;return a.length?a[0].oInit:null});p("data()",function(){return this.iterator("table",function(a){return G(a.aoData,"_aData")}).flatten()});p("destroy()",function(a){a=a||!1;return this.iterator("table",function(b){var c=b.nTableWrapper.parentNode,
d=b.oClasses,e=b.nTable,f=b.nTBody,g=b.nTHead,j=b.nTFoot,i=h(e),f=h(f),k=h(b.nTableWrapper),l=h.map(b.aoData,function(a){return a.nTr}),p;b.bDestroying=!0;u(b,"aoDestroyCallback","destroy",[b]);a||(new r(b)).columns().visible(!0);k.unbind(".DT").find(":not(tbody *)").unbind(".DT");h(D).unbind(".DT-"+b.sInstance);e!=g.parentNode&&(i.children("thead").detach(),i.append(g));j&&e!=j.parentNode&&(i.children("tfoot").detach(),i.append(j));b.aaSorting=[];b.aaSortingFixed=[];va(b);h(l).removeClass(b.asStripeClasses.join(" "));
h("th, td",g).removeClass(d.sSortable+" "+d.sSortableAsc+" "+d.sSortableDesc+" "+d.sSortableNone);b.bJUI&&(h("th span."+d.sSortIcon+", td span."+d.sSortIcon,g).detach(),h("th, td",g).each(function(){var a=h("div."+d.sSortJUIWrapper,this);h(this).append(a.contents());a.detach()}));f.children().detach();f.append(l);g=a?"remove":"detach";i[g]();k[g]();!a&&c&&(c.insertBefore(e,b.nTableReinsertBefore),i.css("width",b.sDestroyWidth).removeClass(d.sTable),(p=b.asDestroyStripes.length)&&f.children().each(function(a){h(this).addClass(b.asDestroyStripes[a%
p])}));c=h.inArray(b,m.settings);-1!==c&&m.settings.splice(c,1)})});h.each(["column","row","cell"],function(a,b){p(b+"s().every()",function(a){var d=this.selector.opts,e=this;return this.iterator(b,function(f,g,h,i,n){a.call(e[b](g,"cell"===b?h:d,"cell"===b?d:k),g,h,i,n)})})});p("i18n()",function(a,b,c){var d=this.context[0],a=Q(a)(d.oLanguage);a===k&&(a=b);c!==k&&h.isPlainObject(a)&&(a=a[c]!==k?a[c]:a._);return a.replace("%d",c)});m.version="1.10.12";m.settings=[];m.models={};m.models.oSearch={bCaseInsensitive:!0,
sSearch:"",bRegex:!1,bSmart:!0};m.models.oRow={nTr:null,anCells:null,_aData:[],_aSortData:null,_aFilterData:null,_sFilterRow:null,_sRowStripe:"",src:null,idx:-1};m.models.oColumn={idx:null,aDataSort:null,asSorting:null,bSearchable:null,bSortable:null,bVisible:null,_sManualType:null,_bAttrSrc:!1,fnCreatedCell:null,fnGetData:null,fnSetData:null,mData:null,mRender:null,nTh:null,nTf:null,sClass:null,sContentPadding:null,sDefaultContent:null,sName:null,sSortDataType:"std",sSortingClass:null,sSortingClassJUI:null,
sTitle:null,sType:null,sWidth:null,sWidthOrig:null};m.defaults={aaData:null,aaSorting:[[0,"asc"]],aaSortingFixed:[],ajax:null,aLengthMenu:[10,25,50,100],aoColumns:null,aoColumnDefs:null,aoSearchCols:[],asStripeClasses:null,bAutoWidth:!0,bDeferRender:!1,bDestroy:!1,bFilter:!0,bInfo:!0,bJQueryUI:!1,bLengthChange:!0,bPaginate:!0,bProcessing:!1,bRetrieve:!1,bScrollCollapse:!1,bServerSide:!1,bSort:!0,bSortMulti:!0,bSortCellsTop:!1,bSortClasses:!0,bStateSave:!1,fnCreatedRow:null,fnDrawCallback:null,fnFooterCallback:null,
fnFormatNumber:function(a){return a.toString().replace(/\B(?=(\d{3})+(?!\d))/g,this.oLanguage.sThousands)},fnHeaderCallback:null,fnInfoCallback:null,fnInitComplete:null,fnPreDrawCallback:null,fnRowCallback:null,fnServerData:null,fnServerParams:null,fnStateLoadCallback:function(a){try{return JSON.parse((-1===a.iStateDuration?sessionStorage:localStorage).getItem("DataTables_"+a.sInstance+"_"+location.pathname))}catch(b){}},fnStateLoadParams:null,fnStateLoaded:null,fnStateSaveCallback:function(a,b){try{(-1===
a.iStateDuration?sessionStorage:localStorage).setItem("DataTables_"+a.sInstance+"_"+location.pathname,JSON.stringify(b))}catch(c){}},fnStateSaveParams:null,iStateDuration:7200,iDeferLoading:null,iDisplayLength:10,iDisplayStart:0,iTabIndex:0,oClasses:{},oLanguage:{oAria:{sSortAscending:": activate to sort column ascending",sSortDescending:": activate to sort column descending"},oPaginate:{sFirst:"First",sLast:"Last",sNext:"Next",sPrevious:"Previous"},sEmptyTable:"No data available in table",sInfo:"Showing _START_ to _END_ of _TOTAL_ entries",
sInfoEmpty:"Showing 0 to 0 of 0 entries",sInfoFiltered:"(filtered from _MAX_ total entries)",sInfoPostFix:"",sDecimal:"",sThousands:",",sLengthMenu:"Show _MENU_ entries",sLoadingRecords:"Loading...",sProcessing:"Processing...",sSearch:"Search:",sSearchPlaceholder:"",sUrl:"",sZeroRecords:"No matching records found"},oSearch:h.extend({},m.models.oSearch),sAjaxDataProp:"data",sAjaxSource:null,sDom:"lfrtip",searchDelay:null,sPaginationType:"simple_numbers",sScrollX:"",sScrollXInner:"",sScrollY:"",sServerMethod:"GET",
renderer:null,rowId:"DT_RowId"};X(m.defaults);m.defaults.column={aDataSort:null,iDataSort:-1,asSorting:["asc","desc"],bSearchable:!0,bSortable:!0,bVisible:!0,fnCreatedCell:null,mData:null,mRender:null,sCellType:"td",sClass:"",sContentPadding:"",sDefaultContent:null,sName:"",sSortDataType:"std",sTitle:null,sType:null,sWidth:null};X(m.defaults.column);m.models.oSettings={oFeatures:{bAutoWidth:null,bDeferRender:null,bFilter:null,bInfo:null,bLengthChange:null,bPaginate:null,bProcessing:null,bServerSide:null,
bSort:null,bSortMulti:null,bSortClasses:null,bStateSave:null},oScroll:{bCollapse:null,iBarWidth:0,sX:null,sXInner:null,sY:null},oLanguage:{fnInfoCallback:null},oBrowser:{bScrollOversize:!1,bScrollbarLeft:!1,bBounding:!1,barWidth:0},ajax:null,aanFeatures:[],aoData:[],aiDisplay:[],aiDisplayMaster:[],aIds:{},aoColumns:[],aoHeader:[],aoFooter:[],oPreviousSearch:{},aoPreSearchCols:[],aaSorting:null,aaSortingFixed:[],asStripeClasses:null,asDestroyStripes:[],sDestroyWidth:0,aoRowCallback:[],aoHeaderCallback:[],
aoFooterCallback:[],aoDrawCallback:[],aoRowCreatedCallback:[],aoPreDrawCallback:[],aoInitComplete:[],aoStateSaveParams:[],aoStateLoadParams:[],aoStateLoaded:[],sTableId:"",nTable:null,nTHead:null,nTFoot:null,nTBody:null,nTableWrapper:null,bDeferLoading:!1,bInitialised:!1,aoOpenRows:[],sDom:null,searchDelay:null,sPaginationType:"two_button",iStateDuration:0,aoStateSave:[],aoStateLoad:[],oSavedState:null,oLoadedState:null,sAjaxSource:null,sAjaxDataProp:null,bAjaxDataGet:!0,jqXHR:null,json:k,oAjaxData:k,
fnServerData:null,aoServerParams:[],sServerMethod:null,fnFormatNumber:null,aLengthMenu:null,iDraw:0,bDrawing:!1,iDrawError:-1,_iDisplayLength:10,_iDisplayStart:0,_iRecordsTotal:0,_iRecordsDisplay:0,bJUI:null,oClasses:{},bFiltered:!1,bSorted:!1,bSortCellsTop:null,oInit:null,aoDestroyCallback:[],fnRecordsTotal:function(){return"ssp"==y(this)?1*this._iRecordsTotal:this.aiDisplayMaster.length},fnRecordsDisplay:function(){return"ssp"==y(this)?1*this._iRecordsDisplay:this.aiDisplay.length},fnDisplayEnd:function(){var a=
this._iDisplayLength,b=this._iDisplayStart,c=b+a,d=this.aiDisplay.length,e=this.oFeatures,f=e.bPaginate;return e.bServerSide?!1===f||-1===a?b+d:Math.min(b+a,this._iRecordsDisplay):!f||c>d||-1===a?d:c},oInstance:null,sInstance:null,iTabIndex:0,nScrollHead:null,nScrollFoot:null,aLastSort:[],oPlugins:{},rowIdFn:null,rowId:null};m.ext=v={buttons:{},classes:{},builder:"-source-",errMode:"alert",feature:[],search:[],selector:{cell:[],column:[],row:[]},internal:{},legacy:{ajax:null},pager:{},renderer:{pageButton:{},
header:{}},order:{},type:{detect:[],search:{},order:{}},_unique:0,fnVersionCheck:m.fnVersionCheck,iApiIndex:0,oJUIClasses:{},sVersion:m.version};h.extend(v,{afnFiltering:v.search,aTypes:v.type.detect,ofnSearch:v.type.search,oSort:v.type.order,afnSortData:v.order,aoFeatures:v.feature,oApi:v.internal,oStdClasses:v.classes,oPagination:v.pager});h.extend(m.ext.classes,{sTable:"dataTable",sNoFooter:"no-footer",sPageButton:"paginate_button",sPageButtonActive:"current",sPageButtonDisabled:"disabled",sStripeOdd:"odd",
sStripeEven:"even",sRowEmpty:"dataTables_empty",sWrapper:"dataTables_wrapper",sFilter:"dataTables_filter",sInfo:"dataTables_info",sPaging:"dataTables_paginate paging_",sLength:"dataTables_length",sProcessing:"dataTables_processing",sSortAsc:"sorting_asc",sSortDesc:"sorting_desc",sSortable:"sorting",sSortableAsc:"sorting_asc_disabled",sSortableDesc:"sorting_desc_disabled",sSortableNone:"sorting_disabled",sSortColumn:"sorting_",sFilterInput:"",sLengthSelect:"",sScrollWrapper:"dataTables_scroll",sScrollHead:"dataTables_scrollHead",
sScrollHeadInner:"dataTables_scrollHeadInner",sScrollBody:"dataTables_scrollBody",sScrollFoot:"dataTables_scrollFoot",sScrollFootInner:"dataTables_scrollFootInner",sHeaderTH:"",sFooterTH:"",sSortJUIAsc:"",sSortJUIDesc:"",sSortJUI:"",sSortJUIAscAllowed:"",sSortJUIDescAllowed:"",sSortJUIWrapper:"",sSortIcon:"",sJUIHeader:"",sJUIFooter:""});var Ca="",Ca="",H=Ca+"ui-state-default",ia=Ca+"css_right ui-icon ui-icon-",Xb=Ca+"fg-toolbar ui-toolbar ui-widget-header ui-helper-clearfix";h.extend(m.ext.oJUIClasses,
m.ext.classes,{sPageButton:"fg-button ui-button "+H,sPageButtonActive:"ui-state-disabled",sPageButtonDisabled:"ui-state-disabled",sPaging:"dataTables_paginate fg-buttonset ui-buttonset fg-buttonset-multi ui-buttonset-multi paging_",sSortAsc:H+" sorting_asc",sSortDesc:H+" sorting_desc",sSortable:H+" sorting",sSortableAsc:H+" sorting_asc_disabled",sSortableDesc:H+" sorting_desc_disabled",sSortableNone:H+" sorting_disabled",sSortJUIAsc:ia+"triangle-1-n",sSortJUIDesc:ia+"triangle-1-s",sSortJUI:ia+"carat-2-n-s",
sSortJUIAscAllowed:ia+"carat-1-n",sSortJUIDescAllowed:ia+"carat-1-s",sSortJUIWrapper:"DataTables_sort_wrapper",sSortIcon:"DataTables_sort_icon",sScrollHead:"dataTables_scrollHead "+H,sScrollFoot:"dataTables_scrollFoot "+H,sHeaderTH:H,sFooterTH:H,sJUIHeader:Xb+" ui-corner-tl ui-corner-tr",sJUIFooter:Xb+" ui-corner-bl ui-corner-br"});var Mb=m.ext.pager;h.extend(Mb,{simple:function(){return["previous","next"]},full:function(){return["first","previous","next","last"]},numbers:function(a,b){return[ya(a,
b)]},simple_numbers:function(a,b){return["previous",ya(a,b),"next"]},full_numbers:function(a,b){return["first","previous",ya(a,b),"next","last"]},_numbers:ya,numbers_length:7});h.extend(!0,m.ext.renderer,{pageButton:{_:function(a,b,c,d,e,f){var g=a.oClasses,j=a.oLanguage.oPaginate,i=a.oLanguage.oAria.paginate||{},k,l,m=0,p=function(b,d){var o,r,u,s,v=function(b){Ta(a,b.data.action,true)};o=0;for(r=d.length;o<r;o++){s=d[o];if(h.isArray(s)){u=h("<"+(s.DT_el||"div")+"/>").appendTo(b);p(u,s)}else{k=null;
l="";switch(s){case "ellipsis":b.append('<span class="ellipsis">&#x2026;</span>');break;case "first":k=j.sFirst;l=s+(e>0?"":" "+g.sPageButtonDisabled);break;case "previous":k=j.sPrevious;l=s+(e>0?"":" "+g.sPageButtonDisabled);break;case "next":k=j.sNext;l=s+(e<f-1?"":" "+g.sPageButtonDisabled);break;case "last":k=j.sLast;l=s+(e<f-1?"":" "+g.sPageButtonDisabled);break;default:k=s+1;l=e===s?g.sPageButtonActive:""}if(k!==null){u=h("<a>",{"class":g.sPageButton+" "+l,"aria-controls":a.sTableId,"aria-label":i[s],
"data-dt-idx":m,tabindex:a.iTabIndex,id:c===0&&typeof s==="string"?a.sTableId+"_"+s:null}).html(k).appendTo(b);Wa(u,{action:s},v);m++}}}},r;try{r=h(b).find(I.activeElement).data("dt-idx")}catch(o){}p(h(b).empty(),d);r&&h(b).find("[data-dt-idx="+r+"]").focus()}}});h.extend(m.ext.type.detect,[function(a,b){var c=b.oLanguage.sDecimal;return Za(a,c)?"num"+c:null},function(a){if(a&&!(a instanceof Date)&&(!ac.test(a)||!bc.test(a)))return null;var b=Date.parse(a);return null!==b&&!isNaN(b)||M(a)?"date":
null},function(a,b){var c=b.oLanguage.sDecimal;return Za(a,c,!0)?"num-fmt"+c:null},function(a,b){var c=b.oLanguage.sDecimal;return Rb(a,c)?"html-num"+c:null},function(a,b){var c=b.oLanguage.sDecimal;return Rb(a,c,!0)?"html-num-fmt"+c:null},function(a){return M(a)||"string"===typeof a&&-1!==a.indexOf("<")?"html":null}]);h.extend(m.ext.type.search,{html:function(a){return M(a)?a:"string"===typeof a?a.replace(Ob," ").replace(Aa,""):""},string:function(a){return M(a)?a:"string"===typeof a?a.replace(Ob,
" "):a}});var za=function(a,b,c,d){if(0!==a&&(!a||"-"===a))return-Infinity;b&&(a=Qb(a,b));a.replace&&(c&&(a=a.replace(c,"")),d&&(a=a.replace(d,"")));return 1*a};h.extend(v.type.order,{"date-pre":function(a){return Date.parse(a)||0},"html-pre":function(a){return M(a)?"":a.replace?a.replace(/<.*?>/g,"").toLowerCase():a+""},"string-pre":function(a){return M(a)?"":"string"===typeof a?a.toLowerCase():!a.toString?"":a.toString()},"string-asc":function(a,b){return a<b?-1:a>b?1:0},"string-desc":function(a,
b){return a<b?1:a>b?-1:0}});db("");h.extend(!0,m.ext.renderer,{header:{_:function(a,b,c,d){h(a.nTable).on("order.dt.DT",function(e,f,g,h){if(a===f){e=c.idx;b.removeClass(c.sSortingClass+" "+d.sSortAsc+" "+d.sSortDesc).addClass(h[e]=="asc"?d.sSortAsc:h[e]=="desc"?d.sSortDesc:c.sSortingClass)}})},jqueryui:function(a,b,c,d){h("<div/>").addClass(d.sSortJUIWrapper).append(b.contents()).append(h("<span/>").addClass(d.sSortIcon+" "+c.sSortingClassJUI)).appendTo(b);h(a.nTable).on("order.dt.DT",function(e,
f,g,h){if(a===f){e=c.idx;b.removeClass(d.sSortAsc+" "+d.sSortDesc).addClass(h[e]=="asc"?d.sSortAsc:h[e]=="desc"?d.sSortDesc:c.sSortingClass);b.find("span."+d.sSortIcon).removeClass(d.sSortJUIAsc+" "+d.sSortJUIDesc+" "+d.sSortJUI+" "+d.sSortJUIAscAllowed+" "+d.sSortJUIDescAllowed).addClass(h[e]=="asc"?d.sSortJUIAsc:h[e]=="desc"?d.sSortJUIDesc:c.sSortingClassJUI)}})}}});var Yb=function(a){return"string"===typeof a?a.replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;"):a};m.render={number:function(a,
b,c,d,e){return{display:function(f){if("number"!==typeof f&&"string"!==typeof f)return f;var g=0>f?"-":"",h=parseFloat(f);if(isNaN(h))return Yb(f);f=Math.abs(h);h=parseInt(f,10);f=c?b+(f-h).toFixed(c).substring(2):"";return g+(d||"")+h.toString().replace(/\B(?=(\d{3})+(?!\d))/g,a)+f+(e||"")}}},text:function(){return{display:Yb}}};h.extend(m.ext.internal,{_fnExternApiFunc:Nb,_fnBuildAjax:ra,_fnAjaxUpdate:lb,_fnAjaxParameters:ub,_fnAjaxUpdateDraw:vb,_fnAjaxDataSrc:sa,_fnAddColumn:Ea,_fnColumnOptions:ja,
_fnAdjustColumnSizing:Y,_fnVisibleToColumnIndex:Z,_fnColumnIndexToVisible:$,_fnVisbleColumns:aa,_fnGetColumns:la,_fnColumnTypes:Ga,_fnApplyColumnDefs:ib,_fnHungarianMap:X,_fnCamelToHungarian:K,_fnLanguageCompat:Da,_fnBrowserDetect:gb,_fnAddData:N,_fnAddTr:ma,_fnNodeToDataIndex:function(a,b){return b._DT_RowIndex!==k?b._DT_RowIndex:null},_fnNodeToColumnIndex:function(a,b,c){return h.inArray(c,a.aoData[b].anCells)},_fnGetCellData:B,_fnSetCellData:jb,_fnSplitObjNotation:Ja,_fnGetObjectDataFn:Q,_fnSetObjectDataFn:R,
_fnGetDataMaster:Ka,_fnClearTable:na,_fnDeleteIndex:oa,_fnInvalidate:ca,_fnGetRowElements:Ia,_fnCreateTr:Ha,_fnBuildHead:kb,_fnDrawHead:ea,_fnDraw:O,_fnReDraw:T,_fnAddOptionsHtml:nb,_fnDetectHeader:da,_fnGetUniqueThs:qa,_fnFeatureHtmlFilter:pb,_fnFilterComplete:fa,_fnFilterCustom:yb,_fnFilterColumn:xb,_fnFilter:wb,_fnFilterCreateSearch:Pa,_fnEscapeRegex:Qa,_fnFilterData:zb,_fnFeatureHtmlInfo:sb,_fnUpdateInfo:Cb,_fnInfoMacros:Db,_fnInitialise:ga,_fnInitComplete:ta,_fnLengthChange:Ra,_fnFeatureHtmlLength:ob,
_fnFeatureHtmlPaginate:tb,_fnPageChange:Ta,_fnFeatureHtmlProcessing:qb,_fnProcessingDisplay:C,_fnFeatureHtmlTable:rb,_fnScrollDraw:ka,_fnApplyToChildren:J,_fnCalculateColumnWidths:Fa,_fnThrottle:Oa,_fnConvertToWidth:Fb,_fnGetWidestNode:Gb,_fnGetMaxLenString:Hb,_fnStringToCss:x,_fnSortFlatten:V,_fnSort:mb,_fnSortAria:Jb,_fnSortListener:Va,_fnSortAttachListener:Ma,_fnSortingClasses:va,_fnSortData:Ib,_fnSaveState:wa,_fnLoadState:Kb,_fnSettingsFromNode:xa,_fnLog:L,_fnMap:E,_fnBindAction:Wa,_fnCallbackReg:z,
_fnCallbackFire:u,_fnLengthOverflow:Sa,_fnRenderer:Na,_fnDataSource:y,_fnRowAttributes:La,_fnCalculateEnd:function(){}});h.fn.dataTable=m;m.$=h;h.fn.dataTableSettings=m.settings;h.fn.dataTableExt=m.ext;h.fn.DataTable=function(a){return h(this).dataTable(a).api()};h.each(m,function(a,b){h.fn.DataTable[a]=b});return h.fn.dataTable});
